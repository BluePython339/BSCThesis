DllGetClassObject
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
push rsi
push rdi
push r13
sub rsp 0x30
cmp [ 0x181c8 ] 0x0
mov rsi r8
mov rbp rdx
mov rdi rcx
jne 0x11173
lea r9 [ 0x10000 ]
mov ecx 0xc7ec0002
mov r8 [ r9 + 0x7190 ]
cmp r8 [ rdi ]
jne 0x1119c
and [ rsp + 0x20 ] 0x0
lea rcx [ 0x182e0 ]
xor r9d r9d
xor r8d r8d
xor edx edx
call [ 0x170c8 ]
cmp [ 0x181c8 ] 0x0
jne 0x11150
sbb eax eax
sbb eax 0xffffffff
mov r8 [ r9 + 0x7198 ]
cmp r8 [ rdi + 0x8 ]
jne 0x1119c
mov ebx [ rsp + 0x68 ]
call 0x11470
mov r13d 0xc0000000
mov ecx eax
mov ebx eax
and ecx r13d
cmp ecx r13d
je 0x11142
mov r8 [ r9 + 0x71f0 ]
cmp r8 [ rdi ]
jne 0x111d4
mov r8 rsi
mov rdx rbp
xor ecx ecx
call 0x11e44
jmp 0x11254
xor eax eax
jmp 0x111a1
mov eax ebx
jmp 0x11258
lea rcx [ 0x166a0 ]
call 0x165e6
jmp 0x11154
call 0x11274
mov ebx eax
and eax r13d
cmp eax r13d
je 0x1112f
sbb eax eax
sbb eax 0xffffffff
mov r8 [ r9 + 0x71f8 ]
cmp r8 [ rdi + 0x8 ]
jne 0x111d4
mov ecx eax
test eax eax
jne 0x111b7
mov rbx [ rsp + 0x50 ]
mov rbp [ rsp + 0x58 ]
add rsp 0x30
pop r13
pop rdi
pop rsi
retn
lea rcx [ 0x182e0 ]
xor edx edx
call [ 0x170d8 ]
cmp [ 0x181c8 ] 0x0
jne 0x11173
lea rcx [ 0x16660 ]
call 0x165e6
mov rcx [ 0x181d0 ]
lea r8 [ 0x18278 ]
mov edx 0x1
mov rax [ rcx ]
call [ rax + 0x1f0 ]
mov ebx eax
shr eax 0x1e
cmp eax 0x3
je 0x1111c
mov r8 [ r9 + 0x7170 ]
cmp r8 [ rdi ]
jne 0x11209
mov r8 rsi
mov rdx rbp
xor ecx ecx
call 0x13b68
jmp 0x11254
xor eax eax
jmp 0x111d9
lea rcx [ 0x16620 ]
call 0x165e6
call 0x113c4
jmp 0x1113b
and [ 0x182d8 ] 0x0
and [ 0x182dc ] 0x0
lea rcx [ 0x147bc ]
mov [ 0x182a0 ] rcx
lea rcx [ 0x14f04 ]
mov [ 0x182a8 ] rcx
lea rcx [ 0x14850 ]
mov [ 0x182b0 ] rcx
lea rcx [ 0x148a8 ]
mov [ 0x182b8 ] rcx
lea rcx [ 0x14870 ]
mov [ 0x182c0 ] rcx
lea rcx [ 0x182a0 ]
mov [ 0x182d0 ] rcx
cmp eax 0x3
je 0x1111c
sbb eax eax
sbb eax 0xffffffff
mov r8 [ r9 + 0x7178 ]
cmp r8 [ rdi + 0x8 ]
jne 0x11209
test eax eax
jne 0x111ec
call 0x11574
jmp 0x11154
mov [ 0x181c8 ] 0x1
jmp 0x11154
mov rdx [ r9 + 0x7210 ]
cmp rdx [ rdi ]
jne 0x1123e
mov r8 rsi
mov rdx rbp
xor ecx ecx
call 0x118f0
jmp 0x11254
xor eax eax
jmp 0x1120e
sbb eax eax
sbb eax 0xffffffff
mov rdx [ r9 + 0x7218 ]
cmp rdx [ rdi + 0x8 ]
jne 0x1123e
test eax eax
jne 0x11221
mov eax ecx
mov r8 rsi
mov rdx rbp
xor ecx ecx
call 0x147bc
xor eax eax
jmp 0x11243
test eax eax
jne 0x11256
sub_11274
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
mov rcx [ 0x181d0 ]
mov ebx 0x1
lea r8 [ 0x18390 ]
mov rax [ rcx ]
mov edx ebx
call [ rax + 0x1f0 ]
mov edi 0xc0000000
mov ecx eax
and ecx edi
cmp ecx edi
je 0x113b1
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
mov rcx [ 0x181d0 ]
lea r8 [ 0x184b0 ]
mov edx ebx
mov rax [ rcx ]
call [ rax + 0x1f0 ]
mov ecx eax
mov ebx eax
and ecx edi
cmp ecx edi
je 0x11398
mov rcx [ 0x181d0 ]
mov rdx [ 0x18390 ]
mov rax [ rcx ]
call [ rax + 0x210 ]
lea rax [ 0x13b68 ]
xor ecx ecx
mov [ 0x18520 ] rax
lea rax [ 0x13070 ]
mov [ 0x18558 ] ecx
mov [ 0x18528 ] rax
lea rax [ 0x13bfc ]
mov [ 0x1855c ] ecx
mov [ 0x18530 ] rax
lea rax [ 0x13c3c ]
mov [ 0x18568 ] ecx
mov [ 0x18538 ] rax
lea rax [ 0x11ed8 ]
mov [ 0x1856c ] ecx
mov [ 0x18540 ] rax
lea rax [ 0x18520 ]
mov [ 0x18550 ] rax
lea rax [ 0x118f0 ]
mov [ 0x18580 ] rax
lea rax [ 0x13070 ]
mov [ 0x18588 ] rax
lea rax [ 0x13bfc ]
mov [ 0x18590 ] rax
lea rax [ 0x11984 ]
mov [ 0x18598 ] rax
lea rax [ 0x11ed8 ]
mov [ 0x185a0 ] rax
lea rax [ 0x18580 ]
mov [ 0x18560 ] rax
jmp 0x113af
mov eax ebx
sub_113c4
sub rsp 0x28
mov rcx [ 0x18398 ]
test rcx rcx
je 0x113da
mov rcx [ 0x18320 ]
test rcx rcx
je 0x11400
mov rax [ rcx ]
call [ rax + 0x10 ]
mov rcx [ 0x184a8 ]
test rcx rcx
je 0x11412
mov rax [ rcx ]
mov rdx [ 0x18388 ]
call [ rax + 0x20 ]
mov rcx [ 0x18320 ]
mov rax [ rcx ]
call [ rax + 0x10 ]
mov rcx [ 0x184c0 ]
test rcx rcx
je 0x11424
mov rax [ rcx ]
call [ rax + 0x10 ]
mov rcx [ 0x184b8 ]
test rcx rcx
je 0x11436
mov rax [ rcx ]
call [ rax + 0x10 ]
mov rcx [ 0x181d0 ]
mov rdx [ 0x18390 ]
mov rax [ rcx ]
call [ rax + 0x210 ]
mov rcx [ 0x181d0 ]
mov rdx [ 0x184b0 ]
mov rax [ rcx ]
add rsp 0x28
jmp [ rax + 0x210 ]
mov rax [ rcx ]
call [ rax + 0x10 ]
sub_11470
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
mov rcx [ 0x181d0 ]
mov edi 0xc0000000
test rcx rcx
jne 0x114d1
mov rax [ rcx ]
lea r8 [ 0x183b0 ]
mov edx 0x1
call [ rax + 0x1f0 ]
mov ecx eax
mov ebx eax
and ecx edi
cmp ecx edi
je 0x11554
lea r9 [ 0x181d0 ]
lea r8 [ 0x17160 ]
lea rcx [ 0x17150 ]
xor edx edx
call 0x1660a
mov ecx eax
and ecx edi
cmp ecx edi
je 0x11563
mov rcx [ 0x181d0 ]
mov rax [ rcx ]
call [ rax + 0x10 ]
and [ 0x184d8 ] 0x0
and [ 0x184dc ] 0x0
lea rax [ 0x11e44 ]
mov [ 0x184e0 ] rax
lea rax [ 0x13070 ]
mov [ 0x184e8 ] rax
lea rax [ 0x13bfc ]
mov [ 0x184f0 ] rax
lea rax [ 0x11d50 ]
mov [ 0x184f8 ] rax
lea rax [ 0x11ed8 ]
mov [ 0x18500 ] rax
lea rax [ 0x184e0 ]
mov [ 0x184d0 ] rax
jmp 0x11561
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
mov rcx [ 0x181d0 ]
lea rdx [ 0x166e0 ]
mov rax [ rcx ]
call [ rax + 0x2b8 ]
mov rcx [ 0x181d0 ]
mov eax ebx
sub_11574
sub rsp 0x28
mov rcx [ 0x183a0 ]
test rcx rcx
je 0x1158a
mov rcx [ 0x183a8 ]
test rcx rcx
je 0x1159c
mov rax [ rcx ]
call [ rax + 0x10 ]
mov rcx [ 0x18428 ]
test rcx rcx
je 0x115ae
mov rax [ rcx ]
call [ rax + 0x10 ]
mov rcx [ 0x181d0 ]
mov rdx [ 0x183b0 ]
mov rax [ rcx ]
call [ rax + 0x210 ]
mov rcx [ 0x181d0 ]
mov rax [ rcx ]
add rsp 0x28
jmp [ rax + 0x10 ]
mov rax [ rcx ]
call [ rax + 0x10 ]
sub_115fc
mov [ rsp + 0x8 ] rbx
push rsi
sub rsp 0x50
lea r9 [ 0x184b8 ]
lea r8 [ 0x171c0 ]
lea rcx [ 0x171d0 ]
xor edx edx
call 0x1660a
mov esi 0xc0000000
mov ecx eax
and ecx esi
cmp ecx esi
je 0x11713
mov rbx [ rsp + 0x60 ]
add rsp 0x50
pop rsi
retn
mov rcx [ 0x184b8 ]
mov [ rsp + 0x40 ] 0x1
and [ rsp + 0x38 ] 0x0
and [ rsp + 0x30 ] 0x0
mov rax [ rcx ]
and [ rsp + 0x28 ] 0x0
and [ rsp + 0x20 ] 0x0
mov r8d 0x4
lea edx [ r8 + 0xc ]
lea r9d [ r8 - 0x2 ]
call [ rax + 0x18 ]
mov edx eax
mov ebx eax
and edx esi
cmp edx esi
je 0x116fc
mov rcx [ 0x184b8 ]
mov rax [ rcx ]
call [ rax + 0x10 ]
and [ 0x184b8 ] 0x0
lea r9 [ 0x184c0 ]
lea r8 [ 0x171c0 ]
lea rcx [ 0x171d0 ]
xor edx edx
call 0x1660a
mov ebx eax
and eax esi
cmp eax esi
je 0x116fc
mov rcx [ 0x184c0 ]
mov [ rsp + 0x40 ] 0x1
and [ rsp + 0x38 ] 0x0
and [ rsp + 0x30 ] 0x0
mov rax [ rcx ]
lea rdx [ 0x115e0 ]
mov r8d 0x4
mov [ rsp + 0x28 ] rdx
and [ rsp + 0x20 ] 0x0
lea edx [ r8 + 0x1c ]
lea r9d [ r8 - 0x2 ]
call [ rax + 0x18 ]
mov ebx eax
and eax esi
cmp eax esi
jne 0x11711
mov eax ebx
mov rcx [ 0x184c0 ]
mov rax [ rcx ]
call [ rax + 0x10 ]
and [ 0x184c0 ] 0x0
sub_11724
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
push rdi
sub rsp 0x50
mov rcx [ 0x181d0 ]
mov rdx [ 0x184b0 ]
mov rax [ rcx ]
call [ rax + 0x1d8 ]
mov edi 0xc0000000
mov ecx eax
mov ebx eax
and ecx edi
cmp ecx edi
je 0x118d8
mov rbp [ rsp + 0x68 ]
mov eax ebx
mov rbx [ rsp + 0x60 ]
add rsp 0x50
pop rdi
retn
cmp [ 0x181c9 ] 0x0
jne 0x118c1
mov rcx [ 0x181d0 ]
mov rdx [ 0x184b0 ]
mov rax [ rcx ]
call [ rax + 0x248 ]
lea rax [ 0x12090 ]
mov [ 0x18440 ] rax
lea rax [ 0x13070 ]
mov [ 0x18448 ] rax
lea rax [ 0x12124 ]
mov [ 0x18450 ] rax
lea rax [ 0x1218c ]
mov [ 0x18458 ] rax
lea rax [ 0x12330 ]
mov [ 0x18460 ] rax
lea rax [ 0x12408 ]
mov [ 0x18468 ] rax
lea rax [ 0x12720 ]
mov [ 0x18470 ] rax
lea rax [ 0x12848 ]
mov [ 0x18478 ] rax
lea rax [ 0x128fc ]
mov [ 0x18480 ] rax
lea rax [ 0x12930 ]
mov [ 0x18488 ] rax
lea rax [ 0x12988 ]
mov [ 0x18490 ] rax
lea rax [ 0x12a80 ]
mov [ 0x18498 ] rax
lea rax [ 0x12ab4 ]
mov [ 0x184a0 ] rax
call 0x115fc
mov ebp 0x1
mov ebx eax
and eax edi
cmp eax edi
je 0x118ab
movzx ecx [ 0x181c9 ]
mov eax ebx
and eax edi
cmp eax edi
cmovne ecx ebp
mov [ 0x181c9 ] cl
lea r9 [ 0x184a8 ]
lea r8 [ 0x171c0 ]
lea rcx [ 0x171d0 ]
xor edx edx
call 0x1660a
mov ebx eax
and eax edi
cmp eax edi
je 0x118ab
mov rcx [ 0x184a8 ]
mov [ rsp + 0x40 ] ebp
and [ rsp + 0x38 ] 0x0
and [ rsp + 0x30 ] 0x0
mov rax [ rcx ]
lea rdx [ 0x115e0 ]
mov [ rsp + 0x28 ] rdx
and [ rsp + 0x20 ] 0x0
lea r8d [ rbp + 0x3 ]
lea edx [ rbp + 0x1f ]
xor r9d r9d
call [ rax + 0x18 ]
mov ebx eax
and eax edi
cmp eax edi
jne 0x118ab
mov rcx [ 0x184a8 ]
mov rax [ rcx ]
call [ rax + 0x10 ]
and [ 0x184a8 ] 0x0
sub_118f0
sub rsp 0x28
test r8 r8
jne 0x11900
and [ r8 ] 0x0
mov r10 [ rdx ]
lea r11 [ 0x10000 ]
cmp r10 [ r11 + 0x7130 ]
jne 0x11928
mov eax 0xc7ec0004
jmp 0x11978
sbb eax eax
sbb eax 0xffffffff
mov r10 [ rdx + 0x8 ]
cmp r10 [ r11 + 0x7138 ]
jne 0x11928
add rsp 0x28
retn
mov rcx [ rdx ]
cmp rcx [ r11 + 0x7140 ]
jne 0x11953
mov [ r8 ] rcx
jmp 0x11966
xor eax eax
jmp 0x1192d
sbb eax eax
sbb eax 0xffffffff
mov rcx [ rdx + 0x8 ]
cmp rcx [ r11 + 0x7148 ]
jne 0x11953
mov rcx [ r8 ]
mov rax [ rcx ]
call [ rax + 0x8 ]
xor eax eax
jmp 0x11978
test eax eax
jne 0x11936
mov eax 0xc7ec0002
lea rax [ 0x18560 ]
mov [ r8 ] rax
xor eax eax
jmp 0x11958
test eax eax
jne 0x11973
sub_11984
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
mov [ rsp + 0x18 ] rsi
push rdi
sub rsp 0x50
mov rdi r9
mov rsi r8
test r9 r9
je 0x11a48
mov eax 0xc7ec0004
test rdx rdx
jne 0x11a48
and [ r9 ] rdx
call 0x11724
mov ebp 0xc0000000
mov ecx eax
mov ebx eax
and ecx ebp
cmp ecx ebp
je 0x11a44
mov eax ebx
jmp 0x11a4d
and [ rsp + 0x48 ] 0x0
mov rcx [ 0x184b8 ]
lea rdx [ rsp + 0x78 ]
mov rax [ rcx ]
mov [ rsp + 0x40 ] rdx
mov [ rsp + 0x38 ] 0x1
mov [ rsp + 0x30 ] 0x1
and [ rsp + 0x28 ] 0x0
and [ rsp + 0x20 ] 0x0
xor r9d r9d
xor r8d r8d
xor edx edx
call [ rax + 0x20 ]
mov ebx eax
and eax ebp
cmp eax ebp
je 0x11a44
mov rbx [ rsp + 0x60 ]
mov rbp [ rsp + 0x68 ]
mov rsi [ rsp + 0x70 ]
add rsp 0x50
pop rdi
retn
mov rcx [ rsp + 0x78 ]
mov r8 rdi
mov rdx rsi
call 0x12090
mov rcx [ 0x184b8 ]
mov rdx [ rsp + 0x78 ]
mov ebx eax
and eax ebp
cmp eax ebp
mov rax [ rcx ]
je 0x11a3b
mov r8d 0x1
call [ rax + 0x28 ]
call [ rax + 0x60 ]
jmp 0x11a44
sub_11a68
mov [ rsp + 0x8 ] rbx
push rsi
sub rsp 0x50
lea r9 [ 0x18428 ]
lea r8 [ 0x171c0 ]
lea rcx [ 0x171d0 ]
xor edx edx
call 0x1660a
mov esi 0xc0000000
mov ecx eax
and ecx esi
cmp ecx esi
je 0x11b75
mov rbx [ rsp + 0x60 ]
add rsp 0x50
pop rsi
retn
mov rcx [ 0x18428 ]
mov [ rsp + 0x40 ] 0x1
and [ rsp + 0x38 ] 0x0
and [ rsp + 0x30 ] 0x0
mov rax [ rcx ]
and [ rsp + 0x28 ] 0x0
and [ rsp + 0x20 ] 0x0
mov r8d 0x10
lea edx [ r8 + 0x10 ]
lea r9d [ r8 - 0xe ]
call [ rax + 0x18 ]
mov edx eax
mov ebx eax
and edx esi
cmp edx esi
je 0x11b5e
mov rcx [ 0x18428 ]
mov rax [ rcx ]
call [ rax + 0x10 ]
and [ 0x18428 ] 0x0
lea r9 [ 0x183a8 ]
lea r8 [ 0x171c0 ]
lea rcx [ 0x171d0 ]
xor edx edx
call 0x1660a
mov ebx eax
and eax esi
cmp eax esi
je 0x11b5e
mov rcx [ 0x183a8 ]
mov [ rsp + 0x40 ] 0x1
and [ rsp + 0x38 ] 0x0
and [ rsp + 0x30 ] 0x0
mov rax [ rcx ]
and [ rsp + 0x28 ] 0x0
and [ rsp + 0x20 ] 0x0
mov r8d 0x20
lea edx [ r8 + 0x8 ]
lea r9d [ r8 - 0x1e ]
call [ rax + 0x18 ]
mov ebx eax
and eax esi
cmp eax esi
jne 0x11b73
mov eax ebx
mov rcx [ 0x183a8 ]
mov rax [ rcx ]
call [ rax + 0x10 ]
and [ 0x183a8 ] 0x0
sub_11b88
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
push rdi
sub rsp 0x50
mov rcx [ 0x181d0 ]
mov rdx [ 0x183b0 ]
mov rax [ rcx ]
call [ rax + 0x1d8 ]
mov edi 0xc0000000
mov ecx eax
mov ebx eax
and ecx edi
cmp ecx edi
je 0x11d36
mov rbp [ rsp + 0x68 ]
mov eax ebx
mov rbx [ rsp + 0x60 ]
add rsp 0x50
pop rdi
retn
cmp [ 0x181ca ] 0x0
jne 0x11d1f
mov rcx [ 0x181d0 ]
mov rdx [ 0x183b0 ]
mov rax [ rcx ]
call [ rax + 0x248 ]
lea rax [ 0x12f18 ]
mov [ 0x183c0 ] rax
lea rax [ 0x13070 ]
mov [ 0x183c8 ] rax
lea rax [ 0x130b0 ]
mov [ 0x183d0 ] rax
lea rax [ 0x13118 ]
mov [ 0x183d8 ] rax
lea rax [ 0x13214 ]
mov [ 0x183e0 ] rax
lea rax [ 0x13314 ]
mov [ 0x183e8 ] rax
lea rax [ 0x13588 ]
mov [ 0x183f0 ] rax
lea rax [ 0x135bc ]
mov [ 0x183f8 ] rax
lea rax [ 0x136cc ]
mov [ 0x18400 ] rax
lea rax [ 0x13700 ]
mov [ 0x18408 ] rax
lea rax [ 0x13754 ]
mov [ 0x18410 ] rax
lea rax [ 0x139c4 ]
mov [ 0x18418 ] rax
lea rax [ 0x139f8 ]
mov [ 0x18420 ] rax
call 0x11a68
mov ebp 0x1
mov ebx eax
and eax edi
cmp eax edi
je 0x11d09
movzx ecx [ 0x181ca ]
mov eax ebx
and eax edi
cmp eax edi
cmovne ecx ebp
mov [ 0x181ca ] cl
lea r9 [ 0x183a0 ]
lea r8 [ 0x171c0 ]
lea rcx [ 0x171d0 ]
xor edx edx
call 0x1660a
mov ebx eax
and eax edi
cmp eax edi
je 0x11d09
mov rcx [ 0x183a0 ]
mov [ rsp + 0x40 ] ebp
and [ rsp + 0x38 ] 0x0
and [ rsp + 0x30 ] 0x0
mov rax [ rcx ]
and [ rsp + 0x28 ] 0x0
and [ rsp + 0x20 ] 0x0
lea r8d [ rbp + 0x1f ]
lea edx [ rbp + 0x27 ]
xor r9d r9d
call [ rax + 0x18 ]
mov ebx eax
and eax edi
cmp eax edi
jne 0x11d09
mov rcx [ 0x183a0 ]
mov rax [ rcx ]
call [ rax + 0x10 ]
and [ 0x183a0 ] 0x0
sub_11d50
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
mov [ rsp + 0x18 ] rsi
push rdi
sub rsp 0x50
mov rdi r9
mov rsi r8
test r9 r9
je 0x11e23
mov eax 0xc7eb0004
test rdx rdx
jne 0x11e23
and [ r9 ] rdx
call 0x11724
mov ebp 0xc0000000
mov ecx eax
mov ebx eax
and ecx ebp
cmp ecx ebp
je 0x11d9a
mov eax ebx
and eax ebp
cmp eax ebp
je 0x11e1f
call 0x11b88
mov ebx eax
mov eax ebx
jmp 0x11e28
and [ rsp + 0x48 ] 0x0
mov rcx [ 0x18428 ]
lea rdx [ rsp + 0x78 ]
mov rax [ rcx ]
mov [ rsp + 0x40 ] rdx
mov [ rsp + 0x38 ] 0x1
mov [ rsp + 0x30 ] 0x1
and [ rsp + 0x28 ] 0x0
and [ rsp + 0x20 ] 0x0
xor r9d r9d
xor r8d r8d
xor edx edx
call [ rax + 0x20 ]
mov ebx eax
and eax ebp
cmp eax ebp
je 0x11e1f
mov rbx [ rsp + 0x60 ]
mov rbp [ rsp + 0x68 ]
mov rsi [ rsp + 0x70 ]
add rsp 0x50
pop rdi
retn
mov rcx [ rsp + 0x78 ]
mov r8 rdi
mov rdx rsi
call 0x12f18
mov rcx [ 0x18428 ]
mov rdx [ rsp + 0x78 ]
mov ebx eax
and eax ebp
cmp eax ebp
mov rax [ rcx ]
je 0x11e16
mov r8d 0x1
call [ rax + 0x28 ]
call [ rax + 0x60 ]
jmp 0x11e1f
sub_11e44
sub rsp 0x28
test r8 r8
jne 0x11e54
and [ r8 ] 0x0
mov r10 [ rdx ]
lea r11 [ 0x10000 ]
cmp r10 [ r11 + 0x7130 ]
jne 0x11e7c
mov eax 0xc7ec0004
jmp 0x11ecc
sbb eax eax
sbb eax 0xffffffff
mov r10 [ rdx + 0x8 ]
cmp r10 [ r11 + 0x7138 ]
jne 0x11e7c
add rsp 0x28
retn
mov rcx [ rdx ]
cmp rcx [ r11 + 0x7140 ]
jne 0x11ea7
mov [ r8 ] rcx
jmp 0x11eba
xor eax eax
jmp 0x11e81
sbb eax eax
sbb eax 0xffffffff
mov rcx [ rdx + 0x8 ]
cmp rcx [ r11 + 0x7148 ]
jne 0x11ea7
mov rcx [ r8 ]
mov rax [ rcx ]
call [ rax + 0x8 ]
xor eax eax
jmp 0x11ecc
test eax eax
jne 0x11e8a
mov eax 0xc7ec0002
lea rax [ 0x184d0 ]
mov [ r8 ] rax
xor eax eax
jmp 0x11eac
test eax eax
jne 0x11ec7
sub_11ed8
push rbx
sub rsp 0x20
mov rbx rcx
mov rcx [ 0x181d0 ]
cmp dl 0x1
mov rax [ rcx ]
lea rdx [ 0x181c4 ]
jne 0x11f13
call [ rax + 0x230 ]
mov rcx [ 0x181d0 ]
lea rdx [ rbx + 0xc ]
mov rax [ rcx ]
call [ rax + 0x230 ]
call [ rax + 0x240 ]
mov rcx [ 0x181d0 ]
lea rdx [ rbx + 0xc ]
mov rax [ rcx ]
call [ rax + 0x240 ]
jmp 0x11f2d
xor eax eax
add rsp 0x20
pop rbx
retn
sub_11f3c
push rbx
sub rsp 0x20
mov rax [ rcx ]
mov rbx rcx
mov rdx [ rax + 0x20 ]
test rdx rdx
je 0x11f57
mov rax [ rbx ]
cmp [ rax + 0x10 ] 0x0
je 0x11f74
add rcx 0x10
call rdx
mov rcx [ 0x183a8 ]
mov rdx [ rbx ]
mov rax [ rcx ]
call [ rax + 0x70 ]
mov rdx [ rbx + 0x8 ]
mov rax [ rdx ]
mov rcx [ rax + 0x18 ]
mov rax [ rcx ]
call [ rax + 0x70 ]
xor eax eax
add rsp 0x20
pop rbx
retn
mov rcx [ 0x181d0 ]
mov rdx [ rbx + 0x20 ]
mov rax [ rcx ]
call [ rax + 0xd8 ]
sub_11fcc
sub rsp 0x28
mov rax [ rdx + 0x20 ]
mov [ rcx ] rax
mov rax [ rdx + 0x28 ]
mov [ rcx + 0x8 ] rax
mov rax [ rdx + 0x18 ]
test rax rax
je 0x11ff4
xor eax eax
mov rdx [ rdx + 0x10 ]
add rcx 0x10
call rax
jmp 0x11ff6
add rsp 0x28
retn
sub_12004
push rbx
sub rsp 0x20
mov rbx rcx
mov rcx [ rcx + 0x8 ]
mov rax [ rcx ]
call [ rax + 0x10 ]
mov r11 [ rbx ]
mov rax [ r11 + 0x10 ]
test rax rax
je 0x12029
mov rcx [ 0x184c0 ]
mov rdx [ rbx ]
mov rax [ rcx ]
call [ rax + 0x70 ]
xor eax eax
add rsp 0x20
pop rbx
retn
lea rcx [ rbx + 0x10 ]
call rax
sub_12090
sub rsp 0x28
test rcx rcx
je 0x12113
mov eax 0xc7ec0004
test r8 r8
je 0x12113
and [ r8 ] 0x0
mov r10 [ rdx ]
lea r11 [ 0x10000 ]
cmp r10 [ r11 + 0x7130 ]
jne 0x120c6
sbb eax eax
sbb eax 0xffffffff
mov r10 [ rdx + 0x8 ]
cmp r10 [ r11 + 0x7138 ]
jne 0x120c6
mov [ r8 ] rcx
mov rax [ rcx ]
call [ rax + 0x8 ]
xor eax eax
jmp 0x12118
mov r9 [ rdx ]
cmp r9 [ r11 + 0x7180 ]
jne 0x120ec
xor eax eax
jmp 0x120cb
add rsp 0x28
retn
sbb eax eax
sbb eax 0xffffffff
mov r9 [ rdx + 0x8 ]
cmp r9 [ r11 + 0x7188 ]
jne 0x120ec
test eax eax
je 0x120ff
mov eax 0xc7ec0002
jmp 0x12118
lea rax [ 0x18440 ]
mov [ rcx ] rax
xor eax eax
jmp 0x120f1
test eax eax
jne 0x1210c
sub_12124
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
mov rdi rcx
mov rcx [ 0x181d0 ]
lea rdx [ 0x181c0 ]
mov rax [ rcx ]
call [ rax + 0x230 ]
mov rcx [ 0x181d0 ]
lea rdx [ rdi + 0x8 ]
mov r8 [ rcx ]
call [ r8 + 0x230 ]
test eax eax
je 0x12166
mov rcx [ 0x184b8 ]
xor r8d r8d
mov rdx rdi
mov rax [ rcx ]
call [ rax + 0x28 ]
xor eax eax
mov eax [ rdi + 0x8 ]
jmp 0x1217b
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
sub_1218c
mov r11 rsp
mov [ r11 + 0x8 ] rbx
mov [ r11 + 0x10 ] rbp
mov [ r11 + 0x18 ] rsi
push rdi
sub rsp 0x60
mov rcx [ 0x184c0 ]
mov ebp r8d
lea r8 [ r11 - 0x18 ]
mov rax [ rcx ]
mov [ r11 - 0x20 ] r8
lea r8 [ r11 - 0x10 ]
mov [ r11 - 0x28 ] r8
and [ rsp + 0x38 ] 0x0
and [ rsp + 0x30 ] 0x0
and [ rsp + 0x28 ] 0x0
lea r8 [ 0x1205c ]
movzx esi r9w
mov [ r11 - 0x48 ] r8
lea r8 [ 0x12048 ]
mov r9 rdx
call [ rax + 0x20 ]
mov ecx eax
mov edi eax
mov eax 0xc0000000
and ecx eax
cmp ecx eax
je 0x12312
mov eax edi
cmp [ rsp + 0x50 ] 0x2
jne 0x12221
mov rax [ rsp + 0x58 ]
mov rcx [ rsp + 0xa0 ]
lea r8 [ 0x171c0 ]
mov [ rax + 0x10 ] rcx
mov r9 [ rsp + 0x58 ]
lea rcx [ 0x171d0 ]
add r9 0x18
xor edx edx
call 0x1660a
mov ebx eax
mov edi eax
shr ebx 0x1e
cmp ebx 0x3
je 0x122fd
mov rcx [ 0x184c0 ]
mov rdx [ rsp + 0x58 ]
xor r8d r8d
mov rax [ rcx ]
call [ rax + 0x38 ]
mov eax 0xc7ec0011
jmp 0x12314
mov rcx [ 0x184c0 ]
mov rdx [ rsp + 0x58 ]
xor r8d r8d
mov rax [ rcx ]
call [ rax + 0x28 ]
mov rax [ rsp + 0x58 ]
lea edx [ rbp + 0x10 ]
mov r9d 0x2
mov rcx [ rax + 0x18 ]
mov eax [ rsp + 0xa8 ]
movzx r8d si
mov r10 [ rcx ]
mov [ rsp + 0x40 ] eax
and [ rsp + 0x38 ] 0x0
and [ rsp + 0x30 ] 0x0
lea rax [ 0x12004 ]
mov [ rsp + 0x28 ] rax
mov eax [ rsp + 0x98 ]
mov [ rsp + 0x20 ] eax
call [ r10 + 0x18 ]
mov ebx eax
mov edi eax
shr ebx 0x1e
cmp ebx 0x3
jne 0x122ca
lea r11 [ rsp + 0x60 ]
mov rbx [ r11 + 0x10 ]
mov rbp [ r11 + 0x18 ]
mov rsi [ r11 + 0x20 ]
mov rsp r11
pop rdi
retn
mov rcx [ 0x184c0 ]
mov r8 [ rsp + 0xb0 ]
mov rdx [ rsp + 0x58 ]
mov rax [ rcx ]
call [ rax + 0x48 ]
mov rcx [ 0x184c0 ]
mov rdx [ rsp + 0x58 ]
mov edi eax
mov rax [ rcx ]
xor r8d r8d
call [ rax + 0x38 ]
jmp 0x12312
mov rax [ rsp + 0x58 ]
mov rcx [ rax + 0x18 ]
mov rax [ rcx ]
call [ rax + 0x10 ]
cmp ebx ebx
je 0x122fd
sub_12330
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x40
mov rbx rcx
mov rcx [ 0x184c0 ]
lea r9 [ rsp + 0x60 ]
mov rax [ rcx ]
xor r8d r8d
call [ rax + 0x30 ]
mov edi 0xc0000000
mov edx eax
and edx edi
cmp edx edi
je 0x123f7
mov rbx [ rsp + 0x50 ]
add rsp 0x40
pop rdi
retn
mov rcx [ 0x184c0 ]
mov rdx [ rsp + 0x60 ]
mov rax [ rcx ]
call [ rax + 0x68 ]
mov rcx [ 0x184c0 ]
mov rdx [ rsp + 0x60 ]
mov rax [ rcx ]
xor r8d r8d
call [ rax + 0x28 ]
mov rax [ rsp + 0x60 ]
and [ rsp + 0x30 ] 0x0
mov rcx [ rax + 0x18 ]
jmp 0x123bc
mov rax [ rcx ]
lea rdx [ rsp + 0x68 ]
xor r9d r9d
mov [ rsp + 0x28 ] rdx
and [ rsp + 0x20 ] 0x0
lea rdx [ rsp + 0x30 ]
xor r8d r8d
call [ rax + 0x40 ]
and eax edi
cmp eax edi
jne 0x1239b
mov r8 [ rsp + 0x68 ]
xor edx edx
mov rcx rbx
add r8 0x10
mov [ rsp + 0x68 ] r8
call 0x12720
mov r11 [ rsp + 0x60 ]
mov rcx [ r11 + 0x18 ]
mov rcx [ 0x184c0 ]
mov rdx [ rsp + 0x60 ]
xor r8d r8d
mov rax [ rcx ]
call [ rax + 0x28 ]
sub_12408
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rbp
mov [ rax + 0x18 ] rsi
push rdi
push r12
push r13
push r14
push r15
sub rsp 0xa0
mov rsi [ rsp + 0x118 ]
and [ rax - 0x78 ] 0x0
and [ rax - 0x68 ] 0x0
mov r13 r9
mov r14 r8
mov r12 rdx
test rsi rsi
jne 0x12450
mov rcx [ 0x184c0 ]
lea r9 [ rsp + 0x118 ]
xor r8d r8d
mov rax [ rcx ]
call [ rax + 0x30 ]
mov rdi [ rsp + 0x120 ]
mov ebp [ rsp + 0x110 ]
mov r15d [ rsp + 0xf0 ]
mov ecx eax
mov ebx eax
mov eax 0xc0000000
lea r8 [ 0x11fa4 ]
and ecx eax
cmp ecx eax
je 0x1250d
mov eax 0xc7ec0004
jmp 0x126f9
mov r13d 0xc0000000
mov rax [ rsp + 0x118 ]
mov [ rsp + 0x68 ] r14
mov [ rsp + 0x70 ] r13
mov rcx [ rax + 0x18 ]
lea rdx [ rsp + 0x58 ]
mov r9d r15d
mov rax [ rcx ]
mov [ rsp + 0x28 ] rdx
lea rdx [ rsp + 0x68 ]
mov [ rsp + 0x20 ] ebp
call [ rax + 0x50 ]
mov r13d 0xc0000000
mov ebx eax
and eax r13d
cmp eax r13d
je 0x124f3
lea r11 [ rsp + 0xa0 ]
mov rbx [ r11 + 0x30 ]
mov rbp [ r11 + 0x38 ]
mov rsi [ r11 + 0x40 ]
mov rsp r11
pop r15
pop r14
pop r13
pop r12
pop rdi
retn
mov eax ebx
lea r9 [ rsp + 0x60 ]
lea r8 [ 0x171c0 ]
lea rcx [ 0x171d0 ]
xor edx edx
call 0x1660a
mov ebx eax
and eax r13d
cmp eax r13d
je 0x126f7
mov rcx [ 0x184c0 ]
mov rdx [ rsp + 0x118 ]
xor r8d r8d
mov rax [ rcx ]
call [ rax + 0x38 ]
jmp 0x12513
mov eax 0x2
mov [ rsp + 0x50 ] eax
test rdi rdi
je 0x124e7
mov rcx [ 0x184c0 ]
lea r9 [ rsp + 0x118 ]
xor r8d r8d
mov rax [ rcx ]
mov rdx r12
call [ rax + 0x30 ]
mov ebx eax
and eax r13d
cmp eax r13d
je 0x126e7
xor r14d r14d
cmp [ rsp + 0x50 ] r14d
jne 0x126f7
mov rax [ rsp + 0x58 ]
add rax 0x10
mov [ rsi ] rax
mov [ rdi ] eax
mov rcx [ rsp + 0x60 ]
cmp rcx r14
je 0x126f7
mov rcx [ rsp + 0x118 ]
mov rax [ rsp + 0xf8 ]
mov r13d [ rsp + 0x108 ]
mov [ rsp + 0x78 ] rax
mov rax [ rsp + 0x100 ]
mov [ rsp + 0x88 ] rcx
mov [ rsp + 0x80 ] rax
mov rax [ rsp + 0x60 ]
lea rdx [ rsp + 0x50 ]
mov [ rsp + 0x48 ] rdx
mov [ rsp + 0x90 ] rax
mov rcx [ rcx + 0x18 ]
mov rax [ rcx ]
lea rdx [ rsp + 0x58 ]
lea r9 [ rsp + 0x68 ]
mov [ rsp + 0x40 ] rdx
mov [ rsp + 0x38 ] ebp
lea rdx [ 0x11fa4 ]
mov [ rsp + 0x30 ] r13d
mov [ rsp + 0x28 ] r15d
mov [ rsp + 0x20 ] rdx
lea r8 [ 0x11fcc ]
lea rdx [ rsp + 0x68 ]
call [ rax + 0x20 ]
mov r12d eax
mov ebx eax
shr r12d 0x1e
cmp r12d 0x3
je 0x126cf
mov rax [ rcx ]
call [ rax + 0x10 ]
mov rcx [ 0x184c0 ]
mov rdx [ rsp + 0x118 ]
xor r8d r8d
mov rax [ rcx ]
call [ rax + 0x38 ]
mov edx [ rsp + 0x50 ]
cmp edx 0x1
jne 0x12693
cmp r12d 0x3
je 0x126ae
mov rcx [ 0x184c0 ]
mov rdx [ rsp + 0x118 ]
mov rax [ rcx ]
call [ rax + 0x68 ]
mov rax [ rsp + 0x58 ]
mov [ rsp + 0x40 ] 0x1
mov [ rsp + 0x60 ] r14
mov rcx [ rax + 0x8 ]
lea rdx [ 0x11f3c ]
mov rax [ rcx ]
mov [ rsp + 0x38 ] r14
mov [ rsp + 0x30 ] r14
mov [ rsp + 0x28 ] rdx
lea r8d [ r14 + 0x20 ]
lea r9d [ r14 + 0x2 ]
lea edx [ r14 + 0x28 ]
mov [ rsp + 0x20 ] r14d
call [ rax + 0x18 ]
mov r12d eax
mov ebx eax
shr r12d 0x1e
cmp r12d 0x3
jne 0x1268f
mov rax [ rsp + 0x118 ]
cmp edx 0x1
mov rdx [ rsp + 0x58 ]
mov rcx [ rax + 0x18 ]
cmove ebp r13d
mov rax [ rcx ]
mov r8d ebp
call [ rax + 0x28 ]
cmp rdi r14
je 0x126a0
mov edx [ rsp + 0x50 ]
mov rax [ rsp + 0x58 ]
mov rcx [ rax + 0x8 ]
mov rax [ rcx ]
call [ rax + 0x10 ]
mov rax [ rsp + 0x58 ]
add rax 0x10
mov [ rsi ] rax
jmp 0x126cf
mov [ rdi ] edx
sub_12720
mov [ rsp + 0x8 ] rbx
push rbp
push rsi
push rdi
sub rsp 0x50
mov rdi r8
mov esi edx
mov rbp rcx
test r8 r8
jne 0x12743
lea rbx [ r8 - 0x10 ]
mov rdx rbx
mov rax [ rbx ]
mov rcx [ rax + 0x18 ]
mov rax [ rcx ]
call [ rax + 0x68 ]
mov r11 [ rbx ]
mov r8d esi
mov rcx [ r11 + 0x18 ]
mov rdx rbx
mov rax [ rcx ]
call [ rax + 0x28 ]
and [ rsp + 0x88 ] 0x0
lea r8 [ rsp + 0x30 ]
mov rdx rdi
mov rcx rbp
call 0x12930
mov rcx [ rbx + 0x8 ]
lea rdx [ rsp + 0x80 ]
mov rax [ rcx ]
mov [ rsp + 0x28 ] rdx
and [ rsp + 0x20 ] 0x0
lea rdx [ rsp + 0x88 ]
xor r9d r9d
xor r8d r8d
call [ rax + 0x40 ]
mov edi 0xc0000000
jmp 0x1281a
mov eax 0xc7ec0004
jmp 0x12833
and eax edi
cmp eax edi
jne 0x127b4
mov rbx [ rsp + 0x70 ]
add rsp 0x50
pop rdi
pop rsi
pop rbp
retn
mov rdx [ rsp + 0x80 ]
mov rax [ rdx ]
mov r8 [ rax + 0x18 ]
test r8 r8
je 0x127e3
mov rax [ rbx ]
xor r8d r8d
mov rdx rbx
mov rcx [ rax + 0x18 ]
mov rax [ rcx ]
call [ rax + 0x28 ]
mov rcx [ rbx + 0x8 ]
xor r8d r8d
mov rax [ rcx ]
call [ rax + 0x28 ]
mov rcx [ rbx + 0x8 ]
lea rdx [ rsp + 0x80 ]
mov rax [ rcx ]
mov [ rsp + 0x28 ] rdx
and [ rsp + 0x20 ] 0x0
lea rdx [ rsp + 0x88 ]
xor r9d r9d
xor r8d r8d
call [ rax + 0x40 ]
movaps xmm0 [ rsp + 0x30 ]
lea rcx [ rsp + 0x40 ]
movdqa [ rsp + 0x40 ] xmm0
call r8
mov rdx [ rsp + 0x80 ]
sub_12848
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
push rsi
push rdi
push r12
sub rsp 0x30
mov rbx r9
mov ebp r8d
mov rsi rdx
test r9 r9
jne 0x1286f
mov rcx [ 0x184c0 ]
mov rdx [ rdx ]
lea r9 [ rsp + 0x68 ]
mov rax [ rcx ]
xor r8d r8d
call [ rax + 0x30 ]
mov r12d 0xc0000000
mov ecx eax
mov edi eax
and ecx r12d
cmp ecx r12d
je 0x128df
mov eax 0xc7ec0004
jmp 0x128e1
mov eax edi
mov rax [ rsp + 0x68 ]
mov rdx [ rsi + 0x8 ]
lea r9 [ rsp + 0x20 ]
mov rcx [ rax + 0x18 ]
mov r8d ebp
mov rax [ rcx ]
call [ rax + 0x30 ]
mov edi eax
and eax r12d
cmp eax r12d
je 0x128ca
mov rbx [ rsp + 0x50 ]
mov rbp [ rsp + 0x58 ]
add rsp 0x30
pop r12
pop rdi
pop rsi
retn
mov rcx [ 0x184c0 ]
mov rdx [ rsp + 0x68 ]
xor r8d r8d
mov rax [ rcx ]
call [ rax + 0x38 ]
mov rax [ rsp + 0x20 ]
add rax 0x10
mov [ rbx ] rax
sub_128fc
sub rsp 0x28
mov r9d edx
test r8 r8
jne 0x1290f
lea rdx [ r8 - 0x10 ]
mov r8d r9d
mov rax [ rdx ]
mov rcx [ rax + 0x18 ]
mov rax [ rcx ]
call [ rax + 0x38 ]
mov eax 0xc7ec0004
jmp 0x12923
add rsp 0x28
retn
sub_12930
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
mov rdi r8
test rdx rdx
je 0x12971
mov eax 0xc7ec0004
test r8 r8
je 0x12971
mov rcx [ 0x184c0 ]
lea rbx [ rdx - 0x10 ]
mov rax [ rcx ]
mov rdx [ rbx ]
call [ rax + 0x48 ]
mov r11 [ rbx ]
lea r8 [ rdi + 0x8 ]
mov rcx [ r11 + 0x18 ]
mov rdx rbx
mov rax [ rcx ]
call [ rax + 0x48 ]
jmp 0x12976
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
sub_12988
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rbp
mov [ rax + 0x18 ] rsi
mov [ rax + 0x20 ] rdi
push r12
sub rsp 0x70
mov rbx [ rsp + 0xb0 ]
mov rsi r9
mov rbp r8
test rbx rbx
jne 0x129be
mov rcx [ 0x184c0 ]
lea r9 [ rsp + 0xb0 ]
xor r8d r8d
mov rax [ rcx ]
call [ rax + 0x30 ]
mov r12d 0xc0000000
mov ecx eax
mov edi eax
and ecx r12d
cmp ecx r12d
je 0x12a5c
mov eax 0xc7ec0004
jmp 0x12a5e
mov eax edi
mov rax [ rsp + 0xb0 ]
mov r9d [ rsp + 0xa0 ]
mov [ rsp + 0x38 ] rbp
mov [ rsp + 0x40 ] rsi
mov rcx [ rax + 0x18 ]
lea rax [ rsp + 0x30 ]
mov r10 [ rcx ]
mov [ rsp + 0x28 ] rax
mov eax [ rsp + 0xa8 ]
lea r8 [ 0x11fa4 ]
lea rdx [ rsp + 0x38 ]
mov [ rsp + 0x20 ] eax
call [ r10 + 0x50 ]
mov edi eax
and eax r12d
cmp eax r12d
je 0x12a44
lea r11 [ rsp + 0x70 ]
mov rbx [ r11 + 0x10 ]
mov rbp [ r11 + 0x18 ]
mov rsi [ r11 + 0x20 ]
mov rdi [ r11 + 0x28 ]
mov rsp r11
pop r12
retn
mov rcx [ 0x184c0 ]
mov rdx [ rsp + 0xb0 ]
xor r8d r8d
mov rax [ rcx ]
call [ rax + 0x38 ]
mov rax [ rsp + 0x30 ]
add rax 0x10
mov [ rbx ] rax
sub_12a80
sub rsp 0x28
mov r9d edx
test r8 r8
jne 0x12a93
lea rdx [ r8 - 0x10 ]
mov r8d r9d
mov rax [ rdx ]
mov rcx [ rax + 0x18 ]
mov rax [ rcx ]
call [ rax + 0x58 ]
mov eax 0xc7ec0004
jmp 0x12aa7
add rsp 0x28
retn
sub_12ae0
push rbx
sub rsp 0x20
mov rbx rcx
mov rcx [ rcx + 0x8 ]
mov rax [ rcx ]
call [ rax + 0x10 ]
mov rcx [ 0x184a8 ]
mov rdx [ rbx ]
mov rax [ rcx ]
call [ rax + 0x70 ]
xor eax eax
add rsp 0x20
pop rbx
retn
sub_12b14
push rbx
sub rsp 0x20
mov rax [ rcx ]
mov rbx rcx
mov rdx [ rax + 0x20 ]
test rdx rdx
je 0x12b2f
mov rax [ rbx ]
cmp [ rax + 0x10 ] 0x0
je 0x12b4c
add rcx 0x10
call rdx
mov rcx [ 0x183a0 ]
mov rdx [ rbx ]
mov rax [ rcx ]
call [ rax + 0x70 ]
mov rdx [ rbx + 0x8 ]
mov rax [ rdx ]
mov rcx [ rax + 0x18 ]
mov rax [ rcx ]
call [ rax + 0x70 ]
xor eax eax
add rsp 0x20
pop rbx
retn
mov rcx [ 0x181d0 ]
mov rdx [ rbx + 0x20 ]
mov rax [ rcx ]
call [ rax + 0xd8 ]
sub_12b7c
mov r11 rsp
push rbx
push rbp
push rsi
push rdi
push r12
push r13
push r14
sub rsp 0x50
mov r12 rdx
lea rdx [ r11 + 0x10 ]
mov r13 rcx
mov rcx [ 0x184a8 ]
mov [ r11 - 0x50 ] rdx
lea rdx [ r11 + 0x18 ]
mov rax [ rcx ]
mov [ r11 - 0x58 ] rdx
mov rdx [ r13 ]
xor r14d r14d
xor r9d r9d
xor r8d r8d
mov [ r11 - 0x60 ] r14d
lea esi [ r14 + 0x1 ]
mov [ rsp + 0x20 ] esi
call [ rax + 0x78 ]
mov edi eax
mov ebx eax
shr edi 0x1e
cmp edi 0x3
je 0x12dcf
mov rcx [ r12 ]
cmp rcx r14
je 0x12dde
cmp [ rsp + 0x98 ] esi
jne 0x12c80
mov eax ebx
add rsp 0x50
pop r14
pop r13
pop r12
pop rdi
pop rsi
pop rbp
pop rbx
retn
mov rax [ rcx ]
call [ rax + 0x10 ]
mov ebp r14d
mov r9 [ rsp + 0xa0 ]
lea r8 [ 0x171c0 ]
lea rcx [ 0x171d0 ]
xor edx edx
add r9 0x18
mov ebp esi
call 0x1660a
mov edi eax
mov ebx eax
shr edi 0x1e
cmp edi 0x3
je 0x12db7
mov rcx [ 0x184a8 ]
mov rdx [ rsp + 0xa0 ]
mov r8d ebp
mov rax [ rcx ]
call [ rax + 0x38 ]
mov rcx [ rsp + 0xa0 ]
cmp [ rcx + 0x18 ] r14
je 0x12db2
mov rax [ rsp + 0xa0 ]
mov [ rsp + 0x40 ] esi
lea rdx [ 0x12ae0 ]
mov rcx [ rax + 0x18 ]
mov [ rsp + 0x38 ] r14
mov [ rsp + 0x30 ] r14
mov rax [ rcx ]
mov [ rsp + 0x28 ] rdx
lea r8d [ r14 + 0x20 ]
lea edx [ rsi + 0xf ]
xor r9d r9d
mov [ rsp + 0x20 ] r14d
call [ rax + 0x18 ]
mov edi eax
mov ebx eax
shr edi 0x1e
cmp edi 0x3
jne 0x12c8c
mov ebx 0xc7ec0005
mov rcx [ rcx + 0x18 ]
lea rdx [ rsp + 0x98 ]
xor r9d r9d
mov rax [ rcx ]
mov [ rsp + 0x38 ] rdx
lea rdx [ rsp + 0xa8 ]
mov [ rsp + 0x30 ] rdx
mov rdx [ r13 + 0x8 ]
xor r8d r8d
mov [ rsp + 0x28 ] r14d
mov [ rsp + 0x20 ] esi
call [ rax + 0x78 ]
mov edi 0xc0000000
mov ebx eax
and eax edi
cmp eax edi
je 0x12db7
mov rax [ rsp + 0xa0 ]
mov rcx [ rax + 0x18 ]
mov rax [ rcx ]
call [ rax + 0x10 ]
mov r11 [ rsp + 0xa0 ]
mov [ r11 + 0x18 ] r14
jmp 0x12c83
cmp [ rsp + 0x98 ] esi
jne 0x12d93
cmp edi 0x3
je 0x12db7
mov esi r14d
mov rcx [ 0x184a8 ]
mov rdx [ rsp + 0xa0 ]
mov rax [ rcx ]
call [ rax + 0x68 ]
mov rax [ rsp + 0xa8 ]
mov r11 [ rsp + 0xa0 ]
mov [ rax ] r11
mov rcx [ r12 ]
mov rax [ rsp + 0xa8 ]
mov [ rax + 0x8 ] rcx
mov rax [ rsp + 0xa8 ]
mov [ rsp + 0x40 ] esi
mov [ r12 ] r14
mov rcx [ rax + 0x8 ]
lea rdx [ 0x12b14 ]
mov rax [ rcx ]
mov [ rsp + 0x38 ] r14
mov r8d 0x20
mov [ rsp + 0x30 ] r14
mov [ rsp + 0x28 ] rdx
lea edx [ r8 + 0x8 ]
xor r9d r9d
mov [ rsp + 0x20 ] r14d
call [ rax + 0x18 ]
and eax edi
cmp eax edi
jne 0x12d96
mov rdx [ rsp + 0xa8 ]
mov r8d esi
mov rax [ rdx ]
mov rcx [ rax + 0x18 ]
mov rax [ rcx ]
call [ rax + 0x38 ]
mov ebx eax
jmp 0x12db7
mov rax [ rsp + 0xa8 ]
mov rcx [ rax + 0x8 ]
mov rax [ rcx ]
call [ rax + 0x10 ]
mov r11 [ rsp + 0xa8 ]
mov [ r11 + 0x8 ] r14
jmp 0x12d96
sub_12df8
mov [ rsp + 0x20 ] rbx
push rbp
push rsi
push rdi
sub rsp 0x40
mov rax [ rdx ]
mov rdi rcx
mov rsi rdx
mov rcx [ rax + 0x18 ]
mov rdx [ rdi + 0x8 ]
lea r9 [ rsp + 0x60 ]
mov rax [ rcx ]
xor r8d r8d
call [ rax + 0x30 ]
mov ebp 0xc0000000
mov r8d eax
mov ebx eax
and r8d ebp
cmp r8d ebp
je 0x12eee
mov rcx [ 0x184a8 ]
mov rdx [ rsi ]
xor r8d r8d
mov rax [ rcx ]
call [ rax + 0x38 ]
mov eax ebx
mov rbx [ rsp + 0x78 ]
add rsp 0x40
pop rdi
pop rsi
pop rbp
retn
mov rdx [ rsp + 0x60 ]
mov rax [ rdx ]
mov rcx [ rax + 0x18 ]
mov rax [ rcx ]
call [ rax + 0x68 ]
mov rdx [ rsp + 0x60 ]
xor r8d r8d
mov rax [ rdx ]
mov rcx [ rax + 0x18 ]
mov rax [ rcx ]
call [ rax + 0x28 ]
mov rax [ rsp + 0x60 ]
xor ebx ebx
mov [ rsp + 0x70 ] rbx
mov rcx [ rax + 0x8 ]
jmp 0x12eb5
mov rax [ rcx ]
lea rdx [ rsp + 0x68 ]
xor r9d r9d
mov [ rsp + 0x28 ] rdx
lea rdx [ rsp + 0x70 ]
xor r8d r8d
mov [ rsp + 0x20 ] ebx
call [ rax + 0x40 ]
and eax ebp
cmp eax ebp
jne 0x12e72
mov rdx [ rsp + 0x68 ]
mov rax [ rdx ]
mov r8 [ rax + 0x18 ]
cmp r8 rbx
je 0x12e9a
mov rdx [ rsp + 0x60 ]
mov rax [ rdx ]
mov rcx [ rax + 0x18 ]
mov rax [ rcx ]
call [ rax + 0x70 ]
mov ebx eax
mov rax [ rsp + 0x60 ]
xor r8d r8d
mov rcx [ rax + 0x8 ]
mov rax [ rcx ]
call [ rax + 0x28 ]
mov r11 [ rsp + 0x60 ]
mov rcx [ r11 + 0x8 ]
movdqu xmm0 [ rdi ]
lea rcx [ rsp + 0x30 ]
movdqu [ rsp + 0x30 ] xmm0
call r8
mov rdx [ rsp + 0x68 ]
sub_12f18
push rbx
sub rsp 0x20
mov r9 r8
mov r10 rdx
test rcx rcx
je 0x1305d
mov eax 0xc7eb0004
test r8 r8
je 0x1305d
and [ r8 ] 0x0
mov rdx [ rdx ]
lea rbx [ 0x10000 ]
mov r11d 0x8
cmp rdx [ rbx + 0x7130 ]
jne 0x12f65
sbb eax eax
sbb eax 0xffffffff
mov rdx [ r10 + r11 ]
cmp rdx [ rbx + r11 + 0x7130 ]
jne 0x12f65
mov r8 [ r10 ]
cmp r8 [ rbx + 0x71a0 ]
jne 0x12f94
mov [ r8 ] rcx
jmp 0x13053
xor eax eax
jmp 0x12f6a
sbb eax eax
sbb eax 0xffffffff
mov r8 [ r10 + r11 ]
cmp r8 [ rbx + r11 + 0x71a0 ]
jne 0x12f94
mov rax [ rcx ]
call [ rax + 0x8 ]
xor eax eax
jmp 0x13062
test eax eax
jne 0x12f76
mov r8 [ r10 ]
cmp r8 [ rbx + 0x71a0 ]
jne 0x12fec
mov r8 [ r10 ]
cmp r8 [ rbx + 0x71b0 ]
jne 0x12fbb
xor eax eax
jmp 0x12f99
add rsp 0x20
pop rbx
retn
sbb eax eax
sbb eax 0xffffffff
mov r8 [ r10 + r11 ]
cmp r8 [ rbx + r11 + 0x71a0 ]
jne 0x12fec
sbb eax eax
sbb eax 0xffffffff
mov r8 [ r10 + r11 ]
cmp r8 [ rbx + r11 + 0x71b0 ]
jne 0x12fbb
test eax eax
je 0x12fce
mov rdx [ r10 ]
cmp rdx [ rbx + 0x71b0 ]
jne 0x13027
mov rax [ 0x183a8 ]
mov [ rcx + 0x10 ] rax
mov rax [ 0x184c0 ]
jmp 0x13042
xor eax eax
jmp 0x12ff1
mov eax 0xc7eb0002
jmp 0x13062
xor eax eax
jmp 0x12fc0
sbb eax eax
sbb eax 0xffffffff
mov rdx [ r10 + r11 ]
cmp rdx [ rbx + r11 + 0x71b0 ]
jne 0x13027
mov [ rcx + 0x18 ] rax
test eax eax
jne 0x13009
test eax eax
je 0x12fce
lea rax [ 0x183c0 ]
mov [ rcx ] rax
mov [ r9 ] rcx
mov rax [ 0x183a0 ]
mov [ rcx + 0x10 ] rax
mov rax [ 0x184a8 ]
xor eax eax
jmp 0x1302c
test eax eax
jne 0x13046
sub_13070
push rbx
sub rsp 0x20
mov rbx rcx
mov rcx [ 0x181d0 ]
lea rdx [ 0x181c0 ]
mov rax [ rcx ]
call [ rax + 0x240 ]
mov rcx [ 0x181d0 ]
lea rdx [ rbx + 0x8 ]
mov rax [ rcx ]
add rsp 0x20
pop rbx
jmp [ rax + 0x240 ]
sub_130b0
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
mov rdi rcx
mov rcx [ 0x181d0 ]
lea rdx [ 0x181c0 ]
mov rax [ rcx ]
call [ rax + 0x230 ]
mov rcx [ 0x181d0 ]
lea rdx [ rdi + 0x8 ]
mov r8 [ rcx ]
call [ r8 + 0x230 ]
test eax eax
je 0x130f2
mov rcx [ 0x18428 ]
xor r8d r8d
mov rdx rdi
mov rax [ rcx ]
call [ rax + 0x28 ]
xor eax eax
mov eax [ rdi + 0x8 ]
jmp 0x13107
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
sub_13118
mov r11 rsp
mov [ r11 + 0x10 ] rbx
mov [ r11 + 0x18 ] rbp
mov [ r11 + 0x20 ] rsi
push rdi
sub rsp 0x60
mov ebp r8d
lea r8 [ r11 + 0x8 ]
mov rdi rcx
mov rcx [ rcx + 0x10 ]
mov [ r11 - 0x20 ] r8
lea r8 [ r11 - 0x18 ]
mov rax [ rcx ]
mov [ r11 - 0x28 ] r8
and [ rsp + 0x38 ] 0x0
lea r8 [ 0x1205c ]
mov [ rsp + 0x30 ] 0x1
and [ rsp + 0x28 ] 0x0
mov [ r11 - 0x48 ] r8
mov rsi r9
lea r8 [ 0x12048 ]
mov r9 rdx
call [ rax + 0x20 ]
mov ecx eax
mov ebx eax
mov eax 0xc0000000
and ecx eax
cmp ecx eax
je 0x131f5
mov eax ebx
cmp [ rsp + 0x70 ] 0x2
jne 0x131a5
mov rax [ rsp + 0x50 ]
mov rcx [ rsp + 0x90 ]
mov r8 [ rsp + 0x98 ]
mov [ rax + 0x10 ] ebp
mov rax [ rsp + 0x50 ]
mov [ rax + 0x18 ] rsi
mov rax [ rsp + 0x50 ]
mov [ rax + 0x20 ] rcx
mov rcx [ rdi + 0x10 ]
mov rdx [ rsp + 0x50 ]
mov rax [ rcx ]
call [ rax + 0x48 ]
mov rcx [ rdi + 0x10 ]
mov rdx [ rsp + 0x50 ]
mov ebx eax
mov rax [ rcx ]
mov r8d 0x1
call [ rax + 0x38 ]
mov rcx [ rdi + 0x10 ]
mov rdx [ rsp + 0x50 ]
xor r8d r8d
mov rax [ rcx ]
call [ rax + 0x38 ]
mov eax 0xc7eb0011
jmp 0x131f7
lea r11 [ rsp + 0x60 ]
mov rbx [ r11 + 0x18 ]
mov rbp [ r11 + 0x20 ]
mov rsi [ r11 + 0x28 ]
mov rsp r11
pop rdi
retn
sub_13214
mov r11 rsp
mov [ r11 + 0x10 ] rbx
push rbp
push rsi
push rdi
sub rsp 0x70
mov rbx rcx
mov rcx [ rcx + 0x10 ]
lea r9 [ r11 + 0x8 ]
mov rax [ rcx ]
xor r8d r8d
mov rsi rdx
call [ rax + 0x30 ]
mov ebp 0xc0000000
mov r8d eax
mov edi eax
and r8d ebp
cmp r8d ebp
je 0x132fa
mov eax edi
mov rbx [ rsp + 0x98 ]
add rsp 0x70
pop rdi
pop rsi
pop rbp
retn
mov rcx [ rbx + 0x10 ]
mov rdx [ rsp + 0x90 ]
mov r8 [ rcx ]
call [ r8 + 0x68 ]
mov rcx [ rbx + 0x10 ]
mov rdx [ rsp + 0x90 ]
mov r9 [ rcx ]
xor r8d r8d
call [ r9 + 0x28 ]
and [ rsp + 0x58 ] 0x0
and [ rsp + 0x50 ] 0x0
lea rax [ rsp + 0xa0 ]
mov [ rsp + 0x40 ] rax
jmp 0x132b2
and [ rsp + 0x38 ] 0x0
and [ rsp + 0x30 ] 0x0
and [ rsp + 0x28 ] 0x0
lea rax [ rsp + 0x60 ]
lea r9 [ rsp + 0x50 ]
mov r8 rsi
xor edx edx
mov rcx rbx
mov [ rsp + 0x20 ] rax
call 0x13754
and eax ebp
cmp eax ebp
jne 0x13293
mov r8 [ rsp + 0xa0 ]
xor edx edx
mov rcx rbx
call 0x13588
lea r11 [ rsp + 0xa0 ]
mov [ rsp + 0x40 ] r11
mov rcx [ rbx + 0x10 ]
mov rdx [ rsp + 0x90 ]
xor r8d r8d
mov rax [ rcx ]
call [ rax + 0x28 ]
sub_13314
mov [ rsp + 0x10 ] rbx
mov [ rsp + 0x18 ] rbp
mov [ rsp + 0x20 ] rsi
push rdi
push r12
push r13
push r14
push r15
sub rsp 0x60
mov r12 [ rsp + 0xc8 ]
mov r14 r9
mov r13 r8
mov rbp rdx
mov rdi rcx
test r12 r12
jne 0x13353
mov rcx [ rcx + 0x18 ]
mov rdx [ rdx ]
lea r9 [ rsp + 0x50 ]
mov rax [ rcx ]
xor r8d r8d
call [ rax + 0x30 ]
mov esi 0xc0000000
mov ecx eax
mov ebx eax
and ecx esi
cmp ecx esi
je 0x13562
mov eax 0xc7eb0004
jmp 0x13564
mov eax ebx
mov rax [ rsp + 0x50 ]
mov rdx [ rbp + 0x8 ]
lea r9 [ rsp + 0x40 ]
mov rcx [ rax + 0x18 ]
xor r8d r8d
mov rax [ rcx ]
call [ rax + 0x30 ]
mov ebx eax
and eax esi
cmp eax esi
je 0x13550
lea r11 [ rsp + 0x60 ]
mov rbx [ r11 + 0x38 ]
mov rbp [ r11 + 0x40 ]
mov rsi [ r11 + 0x48 ]
mov rsp r11
pop r15
pop r14
pop r13
pop r12
pop rdi
retn
mov rcx [ rdi + 0x18 ]
mov rdx [ rsp + 0x50 ]
xor r8d r8d
mov rax [ rcx ]
call [ rax + 0x38 ]
mov rax [ rsp + 0x40 ]
mov esi [ rsp + 0xc0 ]
mov r15d [ rsp + 0xb8 ]
mov rcx [ rax + 0x8 ]
lea rdx [ rsp + 0xc8 ]
xor r9d r9d
mov rax [ rcx ]
mov [ rsp + 0x38 ] rdx
lea rdx [ rsp + 0x90 ]
mov [ rsp + 0x30 ] rdx
xor r8d r8d
mov rdx r13
mov [ rsp + 0x28 ] esi
mov [ rsp + 0x20 ] r15d
call [ rax + 0x78 ]
mov ecx 0xc0000000
mov ebx eax
and eax ecx
cmp eax ecx
je 0x13539
mov rax [ rsp + 0x50 ]
mov rdx [ rsp + 0x40 ]
xor r8d r8d
mov rcx [ rax + 0x18 ]
mov rax [ rcx ]
call [ rax + 0x38 ]
mov edx [ rsp + 0xc8 ]
cmp edx 0x1
jne 0x134ef
mov eax ebx
and eax ecx
cmp eax ecx
je 0x13518
mov rcx [ rdi + 0x10 ]
lea r9 [ rsp + 0x48 ]
xor r8d r8d
mov rax [ rcx ]
mov rdx r13
call [ rax + 0x30 ]
mov ecx 0xc0000000
mov ebx eax
and eax ecx
cmp eax ecx
je 0x134e8
mov rax [ rsp + 0x40 ]
cmp edx 0x1
mov rdx [ rsp + 0x90 ]
mov rcx [ rax + 0x8 ]
cmove esi r15d
mov rax [ rcx ]
mov r8d esi
call [ rax + 0x28 ]
mov rax [ rsp + 0xd0 ]
test rax rax
je 0x13506
mov edx [ rsp + 0xc8 ]
mov rcx [ rdi + 0x10 ]
mov rdx [ rsp + 0x48 ]
mov rax [ rcx ]
call [ rax + 0x68 ]
mov rax [ rsp + 0x48 ]
mov r11 [ rsp + 0x90 ]
mov [ r11 ] rax
mov rax [ rsp + 0x50 ]
mov rdx [ rsp + 0x40 ]
mov rcx [ rax + 0x18 ]
mov rax [ rcx ]
call [ rax + 0x68 ]
mov rax [ rsp + 0x90 ]
mov r11 [ rsp + 0x40 ]
mov [ rax + 0x8 ] r11
mov rax [ rsp + 0x90 ]
movdqu xmm0 [ rbp ]
movdqu [ rax + 0x10 ] xmm0
mov rax [ rsp + 0x48 ]
mov edx [ rax + 0x10 ]
test edx edx
je 0x134b1
mov rax [ rsp + 0x90 ]
add rax 0x10
mov [ r12 ] rax
jmp 0x13539
mov [ rax ] edx
mov rax [ rsp + 0xb0 ]
test rax rax
je 0x134d1
mov rcx [ 0x181d0 ]
mov rax [ rcx ]
call [ rax + 0xc8 ]
mov rcx [ rsp + 0x90 ]
mov [ rcx + 0x20 ] rax
mov rcx [ rdi + 0x10 ]
mov rdx [ rsp + 0x48 ]
xor r8d r8d
mov rax [ rcx ]
call [ rax + 0x38 ]
mov ecx 0xc0000000
mov rcx [ rsp + 0x90 ]
mov rdx r14
add rcx 0x10
call rax
mov ebx eax
sub_13588
sub rsp 0x28
mov r9d edx
test r8 r8
jne 0x1359b
lea rdx [ r8 - 0x10 ]
mov r8d r9d
mov rax [ rdx + 0x8 ]
mov rcx [ rax + 0x8 ]
mov rax [ rcx ]
call [ rax + 0x28 ]
mov eax 0xc7eb0004
jmp 0x135b0
add rsp 0x28
retn
sub_135bc
mov [ rsp + 0x10 ] rbx
mov [ rsp + 0x18 ] rbp
push rsi
push rdi
push r12
push r13
push r14
sub rsp 0x30
mov rbx [ rsp + 0x80 ]
mov r12d r9d
mov r13 r8
mov rbp rdx
mov rsi rcx
test rbx rbx
jne 0x135f5
mov rcx [ rcx + 0x18 ]
mov rdx [ rdx ]
lea r9 [ rsp + 0x80 ]
mov rax [ rcx ]
xor r8d r8d
call [ rax + 0x30 ]
mov r14d 0xc0000000
mov ecx eax
mov edi eax
and ecx r14d
cmp ecx r14d
je 0x136aa
mov eax 0xc7eb0004
jmp 0x136ac
mov eax edi
mov rax [ rsp + 0x80 ]
mov rdx [ rbp + 0x8 ]
lea r9 [ rsp + 0x60 ]
mov rcx [ rax + 0x18 ]
xor r8d r8d
mov rax [ rcx ]
call [ rax + 0x30 ]
mov edi eax
and eax r14d
cmp eax r14d
je 0x13695
mov rbx [ rsp + 0x68 ]
mov rbp [ rsp + 0x70 ]
add rsp 0x30
pop r14
pop r13
pop r12
pop rdi
pop rsi
retn
mov rcx [ rsi + 0x18 ]
mov rdx [ rsp + 0x80 ]
xor r8d r8d
mov rax [ rcx ]
call [ rax + 0x38 ]
mov rax [ rsp + 0x60 ]
lea r9 [ rsp + 0x20 ]
mov r8d r12d
mov rcx [ rax + 0x8 ]
mov rdx r13
mov rax [ rcx ]
call [ rax + 0x30 ]
mov edi eax
and eax r14d
cmp eax r14d
je 0x1367b
mov rax [ rsp + 0x80 ]
mov rdx [ rsp + 0x60 ]
xor r8d r8d
mov rcx [ rax + 0x18 ]
mov rax [ rcx ]
call [ rax + 0x38 ]
mov rax [ rsp + 0x20 ]
add rax 0x10
mov [ rbx ] rax
sub_136cc
sub rsp 0x28
mov r9d edx
test r8 r8
jne 0x136df
lea rdx [ r8 - 0x10 ]
mov r8d r9d
mov rax [ rdx + 0x8 ]
mov rcx [ rax + 0x8 ]
mov rax [ rcx ]
call [ rax + 0x38 ]
mov eax 0xc7eb0004
jmp 0x136f4
add rsp 0x28
retn
sub_13700
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
mov rdi r8
mov rbx rdx
test rdx rdx
jne 0x1371c
mov rcx [ rcx + 0x18 ]
mov rdx [ rdx - 0x8 ]
mov rax [ rcx ]
mov rdx [ rdx ]
call [ rax + 0x48 ]
mov rdx [ rbx - 0x8 ]
lea r8 [ rdi + 0x8 ]
mov rax [ rdx ]
mov rcx [ rax + 0x18 ]
mov rax [ rcx ]
call [ rax + 0x48 ]
mov eax 0xc7eb0004
jmp 0x13742
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
sub_13754
mov r11 rsp
mov [ r11 + 0x10 ] rbx
mov [ r11 + 0x18 ] r8
push rbp
push rsi
push rdi
push r12
push r13
push r14
push r15
sub rsp 0x40
mov r14 [ rsp + 0xc0 ]
xor bpl bpl
mov rsi r9
mov rdi rdx
mov r13 rcx
test r14 r14
je 0x1399e
mov eax 0xc7eb0004
test r9 r9
je 0x1399e
mov r12 [ rsp + 0xa0 ]
test r12 r12
je 0x1399e
cmp [ r9 ] 0x0
mov r15d 0xc0000000
jne 0x137e2
mov rcx [ rcx + 0x18 ]
mov rdx [ r12 ]
lea r9 [ rsp + 0xc0 ]
mov rax [ rcx ]
xor r8d r8d
call [ rax + 0x30 ]
mov ebx eax
and eax r15d
cmp eax r15d
jne 0x1380e
test rdx rdx
je 0x1394c
mov eax ebx
and eax r15d
cmp eax r15d
jne 0x138d0
test rdi rdi
je 0x1394c
and [ rsi + 0x8 ] 0x0
mov rcx [ r13 + 0x18 ]
lea rdx [ rsp + 0xc0 ]
mov rax [ rcx ]
mov [ rsp + 0x28 ] rdx
and [ rsp + 0x20 ] 0x0
xor r9d r9d
xor r8d r8d
mov rdx rsi
call [ rax + 0x40 ]
mov ebx eax
and eax r15d
cmp eax r15d
je 0x1380e
mov rcx [ rcx + 0x18 ]
lea rdx [ r11 + 0x48 ]
lea r8 [ 0x1205c ]
mov rax [ rcx ]
mov [ r11 - 0x50 ] rdx
and [ rsp + 0x20 ] 0x0
xor r9d r9d
mov rdx rdi
call [ rax + 0x50 ]
mov ebx eax
jmp 0x1380e
mov rax [ rsp + 0xc0 ]
lea rdx [ rsp + 0x80 ]
xor r9d r9d
mov rcx [ rax + 0x18 ]
mov [ rsp + 0x28 ] rdx
and [ rsp + 0x20 ] 0x0
mov rax [ rcx ]
lea rdx [ rsi + 0x8 ]
xor r8d r8d
call [ rax + 0x40 ]
mov ecx 0xc0000000
mov ebx eax
and eax ecx
cmp eax ecx
jne 0x13823
mov eax ebx
jmp 0x139a3
mov rcx [ r13 + 0x18 ]
mov rdx [ rsp + 0xc0 ]
mov r8 r12
mov rax [ rcx ]
call [ rax + 0x48 ]
jmp 0x1380e
mov rax [ rsp + 0x80 ]
mov r8d [ rsp + 0xb8 ]
mov rdx [ rsp + 0x90 ]
mov rcx [ rax + 0x8 ]
lea r9 [ rsp + 0x30 ]
mov rax [ rcx ]
call [ rax + 0x30 ]
mov ecx 0xc0000000
mov ebx eax
and eax ecx
cmp eax ecx
je 0x138ad
cmp bpl 0x1
je 0x13928
mov rbx [ rsp + 0x88 ]
add rsp 0x40
pop r15
pop r14
pop r13
pop r12
pop rdi
pop rsi
pop rbp
retn
mov rax [ rsp + 0xc0 ]
mov rdx [ rsp + 0x80 ]
xor r8d r8d
mov rcx [ rax + 0x18 ]
mov rax [ rcx ]
call [ rax + 0x38 ]
cmp bpl 0x1
je 0x13928
mov rax [ rsp + 0xb0 ]
test rax rax
je 0x1389e
mov rcx [ r13 + 0x18 ]
mov rdx [ rsp + 0xc0 ]
xor r8d r8d
mov rax [ rcx ]
call [ rax + 0x38 ]
test bpl bpl
jne 0x1381c
cmp bx 0x9
jne 0x1381c
mov rax [ rsp + 0x30 ]
mov bpl 0x1
add rax 0x10
mov [ r14 ] rax
mov rcx [ rsp + 0x30 ]
mov rdx [ rsp + 0xa8 ]
add rcx 0x10
call rax
test al al
jne 0x1389e
mov r15d 0xc0000000
test rdi rdi
jne 0x1381c
mov rax [ rsp + 0x80 ]
mov r8d [ rsp + 0xb8 ]
mov rdx [ rsp + 0x30 ]
mov rcx [ rax + 0x8 ]
mov rax [ rcx ]
call [ rax + 0x38 ]
mov ebx eax
jmp 0x138ad
sub_139c4
sub rsp 0x28
mov r9d edx
test r8 r8
jne 0x139d7
lea rdx [ r8 - 0x10 ]
mov r8d r9d
mov rax [ rdx + 0x8 ]
mov rcx [ rax + 0x8 ]
mov rax [ rcx ]
call [ rax + 0x58 ]
mov eax 0xc7eb0004
jmp 0x139ec
add rsp 0x28
retn
sub_13a28
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x50
lea r9 [ 0x18320 ]
lea r8 [ 0x17180 ]
lea rcx [ 0x17170 ]
xor edx edx
call 0x1660a
mov edi 0xc0000000
mov ecx eax
and ecx edi
cmp ecx edi
je 0x13b57
mov rbx [ rsp + 0x60 ]
add rsp 0x50
pop rdi
retn
mov rcx [ 0x18320 ]
lea rdx [ 0x18388 ]
mov r9d 0x20
mov rax [ rcx ]
mov [ rsp + 0x40 ] rdx
mov [ rsp + 0x38 ] 0x1
and [ rsp + 0x30 ] 0x0
and [ rsp + 0x28 ] 0x0
lea rdx [ 0x17120 ]
xor r8d r8d
mov [ rsp + 0x20 ] 0x2
call [ rax + 0x18 ]
mov ecx eax
mov ebx eax
and ecx edi
cmp ecx edi
je 0x13b40
mov rcx [ 0x18320 ]
mov rax [ rcx ]
call [ rax + 0x10 ]
and [ 0x18320 ] 0x0
lea r9 [ 0x18398 ]
lea r8 [ 0x171c0 ]
lea rcx [ 0x171d0 ]
xor edx edx
call 0x1660a
mov ebx eax
and eax edi
cmp eax edi
je 0x13b2c
mov rcx [ 0x18320 ]
mov rdx [ 0x18388 ]
mov rax [ rcx ]
call [ rax + 0x20 ]
mov rcx [ 0x18398 ]
mov [ rsp + 0x40 ] 0x1
and [ rsp + 0x38 ] 0x0
and [ rsp + 0x30 ] 0x0
mov rax [ rcx ]
and [ rsp + 0x28 ] 0x0
and [ rsp + 0x20 ] 0x0
mov r8d 0x4
lea edx [ r8 + 0xc ]
lea r9d [ r8 - 0x2 ]
call [ rax + 0x18 ]
mov ebx eax
and eax edi
cmp eax edi
jne 0x13b55
mov eax ebx
mov rcx [ 0x18398 ]
mov rax [ rcx ]
call [ rax + 0x10 ]
and [ 0x18398 ] 0x0
sub_13b68
sub rsp 0x28
test r8 r8
jne 0x13b78
and [ r8 ] 0x0
mov r10 [ rdx ]
lea r11 [ 0x10000 ]
cmp r10 [ r11 + 0x7130 ]
jne 0x13ba0
mov eax 0xc7c90004
jmp 0x13bf0
sbb eax eax
sbb eax 0xffffffff
mov r10 [ rdx + 0x8 ]
cmp r10 [ r11 + 0x7138 ]
jne 0x13ba0
add rsp 0x28
retn
mov rcx [ rdx ]
cmp rcx [ r11 + 0x7140 ]
jne 0x13bcb
mov [ r8 ] rcx
jmp 0x13bde
xor eax eax
jmp 0x13ba5
sbb eax eax
sbb eax 0xffffffff
mov rcx [ rdx + 0x8 ]
cmp rcx [ r11 + 0x7148 ]
jne 0x13bcb
mov rcx [ r8 ]
mov rax [ rcx ]
call [ rax + 0x8 ]
xor eax eax
jmp 0x13bf0
test eax eax
jne 0x13bae
mov eax 0xc7c90002
lea rax [ 0x18550 ]
mov [ r8 ] rax
xor eax eax
jmp 0x13bd0
test eax eax
jne 0x13beb
sub_13bfc
push rbx
sub rsp 0x20
mov rbx rcx
mov rcx [ 0x181d0 ]
lea rdx [ 0x181c0 ]
mov rax [ rcx ]
call [ rax + 0x230 ]
mov rcx [ 0x181d0 ]
lea rdx [ rbx + 0x8 ]
mov rax [ rcx ]
add rsp 0x20
pop rbx
jmp [ rax + 0x230 ]
sub_13c3c
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
push rsi
push rdi
push r13
sub rsp 0x50
mov rsi r9
mov rbp r8
test r9 r9
je 0x13dd2
mov eax 0xc7c90004
test rdx rdx
jne 0x13dd2
and [ r9 ] rdx
mov rcx [ 0x181d0 ]
mov rdx [ 0x18390 ]
mov rax [ rcx ]
call [ rax + 0x1d8 ]
mov r13d 0x1
mov edi eax
mov ebx eax
shr edi 0x1e
cmp edi 0x3
je 0x13dce
mov eax ebx
jmp 0x13dd7
cmp [ 0x181cb ] 0x0
jne 0x13d2c
mov rbx [ rsp + 0x70 ]
mov rbp [ rsp + 0x78 ]
add rsp 0x50
pop r13
pop rdi
pop rsi
retn
mov rcx [ 0x181d0 ]
mov rdx [ 0x18390 ]
mov rax [ rcx ]
call [ rax + 0x248 ]
cmp edi 0x3
je 0x13dce
lea r8 [ 0x13df0 ]
lea rdx [ 0x13070 ]
lea rcx [ 0x13ef0 ]
lea rax [ 0x13f58 ]
mov [ 0x18360 ] r8
mov [ 0x18368 ] rdx
mov [ 0x18378 ] rax
lea rax [ 0x1405c ]
mov [ 0x18370 ] rcx
mov [ 0x18380 ] rax
lea rax [ 0x14100 ]
mov [ 0x18340 ] r8
mov [ 0x18348 ] rdx
mov [ 0x18350 ] rcx
mov [ 0x18358 ] rax
call 0x13a28
mov edi eax
mov ebx eax
movzx eax [ 0x181cb ]
shr edi 0x1e
cmp edi 0x3
cmovne eax r13d
mov [ 0x181cb ] al
and [ rsp + 0x48 ] 0x0
mov rcx [ 0x18398 ]
lea rdx [ rsp + 0x88 ]
mov rax [ rcx ]
mov [ rsp + 0x40 ] rdx
mov [ rsp + 0x38 ] r13d
mov [ rsp + 0x30 ] r13d
and [ rsp + 0x28 ] 0x0
and [ rsp + 0x20 ] 0x0
xor r9d r9d
xor r8d r8d
xor edx edx
call [ rax + 0x20 ]
mov edi 0xc0000000
mov ebx eax
and eax edi
cmp eax edi
je 0x13dce
mov rcx [ rsp + 0x88 ]
mov r8 rsi
mov rdx rbp
call 0x13df0
mov rcx [ 0x18398 ]
mov rdx [ rsp + 0x88 ]
mov ebx eax
and eax edi
cmp eax edi
mov rax [ rcx ]
je 0x13dc8
mov r8d r13d
call [ rax + 0x28 ]
call [ rax + 0x60 ]
jmp 0x13dce
sub_13df0
sub rsp 0x28
mov r9 rcx
test rcx rcx
je 0x13ede
mov eax 0xc7c90004
test r8 r8
je 0x13ede
and [ r8 ] 0x0
mov r10 [ rdx ]
lea r11 [ 0x10000 ]
cmp r10 [ r11 + 0x7130 ]
jne 0x13e31
sbb eax eax
sbb eax 0xffffffff
mov r10 [ rdx + 0x8 ]
cmp r10 [ r11 + 0x7138 ]
jne 0x13e31
mov r10 [ rdx ]
cmp r10 [ r11 + 0x7200 ]
jne 0x13e5f
mov [ r8 ] rcx
jmp 0x13ed1
xor eax eax
jmp 0x13e36
sbb eax eax
sbb eax 0xffffffff
mov r10 [ rdx + 0x8 ]
cmp r10 [ r11 + 0x7208 ]
jne 0x13e5f
mov rax [ r9 ]
mov rcx r9
call [ rax + 0x8 ]
xor eax eax
jmp 0x13ee3
test eax eax
jne 0x13e42
mov rcx [ rdx ]
cmp rcx [ r11 + 0x71e0 ]
jne 0x13eb2
mov r10 [ rdx ]
cmp r10 [ r11 + 0x71e0 ]
jne 0x13e85
xor eax eax
jmp 0x13e64
add rsp 0x28
retn
sbb ecx ecx
sbb ecx 0xffffffff
mov rcx [ rdx + 0x8 ]
cmp rcx [ r11 + 0x71e8 ]
jne 0x13eb2
sbb eax eax
sbb eax 0xffffffff
mov r10 [ rdx + 0x8 ]
cmp r10 [ r11 + 0x71e8 ]
jne 0x13e85
test eax eax
je 0x13e95
xor ecx ecx
jmp 0x13eb7
mov eax 0xc7c90002
jmp 0x13ee3
xor eax eax
jmp 0x13e8a
lea rax [ 0x18340 ]
lea rdx [ 0x18360 ]
test ecx ecx
cmovne rax rdx
mov [ r9 ] rax
mov [ r8 ] r9
test eax eax
je 0x13e95
sub_13ef0
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
mov rdi rcx
mov rcx [ 0x181d0 ]
lea rdx [ 0x181c0 ]
mov rax [ rcx ]
call [ rax + 0x230 ]
mov rcx [ 0x181d0 ]
lea rdx [ rdi + 0x8 ]
mov r8 [ rcx ]
call [ r8 + 0x230 ]
test eax eax
je 0x13f32
mov rcx [ 0x18398 ]
xor r8d r8d
mov rdx rdi
mov rax [ rcx ]
call [ rax + 0x28 ]
xor eax eax
mov eax [ rdi + 0x8 ]
jmp 0x13f47
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
sub_13f58
mov [ rsp + 0x8 ] rbx
push rsi
sub rsp 0x70
mov rbx rdx
test rdx rdx
jne 0x13f74
and [ rsp + 0x50 ] 0x0
mov rcx [ 0x18320 ]
lea rdx [ rsp + 0x88 ]
mov rax [ rcx ]
mov [ rsp + 0x48 ] rdx
and [ rsp + 0x40 ] 0x0
and [ rsp + 0x38 ] 0x0
and [ rsp + 0x30 ] 0x0
mov rdx [ 0x18388 ]
and [ rsp + 0x28 ] 0x0
and [ rsp + 0x20 ] 0x0
xor r9d r9d
xor r8d r8d
call [ rax + 0x28 ]
mov esi 0xc0000000
mov ecx eax
and ecx esi
cmp ecx esi
je 0x14047
mov eax 0xc7c90004
jmp 0x14047
mov rbx [ rsp + 0x80 ]
add rsp 0x70
pop rsi
retn
mov rcx [ 0x18320 ]
mov rdx [ rsp + 0x88 ]
mov r8 rbx
mov rax [ rcx ]
call [ rax + 0x48 ]
mov rcx [ 0x18320 ]
mov r8 [ rsp + 0x88 ]
mov rax [ rcx ]
xor edx edx
call [ rax + 0x40 ]
and [ rsp + 0x90 ] 0x0
lea r9 [ rsp + 0x90 ]
movdqu xmm5 [ rbx ]
movdqu [ rsp + 0x60 ] xmm5
lea r8 [ 0x171c0 ]
lea rcx [ 0x171d0 ]
xor edx edx
call 0x1660a
and eax esi
cmp eax esi
jne 0x14035
lea rdx [ rsp + 0x90 ]
lea rcx [ rsp + 0x60 ]
call 0x12b7c
mov eax 0xc7ec0005
jmp 0x14047
sub_1405c
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x30
movdqu xmm0 [ rdx ]
mov rcx [ 0x184a8 ]
mov rbx rdx
mov rax [ rcx ]
lea r9 [ rsp + 0x48 ]
xor r8d r8d
movdqu [ rsp + 0x20 ] xmm0
mov rdx [ rsp + 0x20 ]
call [ rax + 0x30 ]
mov edi 0xc0000000
and eax edi
cmp eax edi
je 0x140a7
mov rcx [ 0x18320 ]
movdqu xmm0 [ rbx ]
lea r9 [ rsp + 0x50 ]
mov rax [ rcx ]
lea rdx [ rsp + 0x20 ]
xor r8d r8d
movdqu [ rsp + 0x20 ] xmm0
call [ rax + 0x38 ]
mov ecx eax
mov ebx eax
and ecx edi
cmp ecx edi
je 0x140ea
lea rdx [ rsp + 0x48 ]
lea rcx [ rsp + 0x20 ]
call 0x12df8
mov eax ebx
mov rbx [ rsp + 0x40 ]
add rsp 0x30
pop rdi
retn
mov rcx [ 0x18320 ]
mov r8 [ rsp + 0x50 ]
xor edx edx
mov r9 [ rcx ]
call [ r9 + 0x30 ]
sub_14100
push rbx
sub rsp 0x30
mov eax [ rdx + 0x8 ]
mov rbx rdx
sub eax 0x1
je 0x14136
add rdx 0x28
call 0x13f58
cmp eax 0x1
je 0x1411f
movdqu xmm0 [ rdx + 0x28 ]
lea rdx [ rsp + 0x20 ]
movdqu [ rsp + 0x20 ] xmm0
call 0x1405c
jmp 0x1413f
mov [ rdx + 0x20 ] 0xc7c90010
jmp 0x14142
mov [ rbx + 0x20 ] eax
xor eax eax
add rsp 0x30
pop rbx
retn
sub_14150
sub rsp 0x28
cmp [ 0x181c8 ] 0x1
jne 0x14201
mov rcx [ 0x18318 ]
add rsp 0x28
jmp [ 0x17038 ]
mov rdx [ 0x18280 ]
lea rcx [ 0x17210 ]
call 0x16616
lea rcx [ 0x14564 ]
mov dl 0x1
call [ 0x17090 ]
lea rcx [ 0x14aa4 ]
call [ 0x170a0 ]
mov rcx [ 0x181d8 ]
test rcx rcx
je 0x141aa
mov rcx [ 0x181e0 ]
test rcx rcx
je 0x141e0
mov rax [ rcx ]
call [ rax + 0x10 ]
and [ 0x181d8 ] 0x0
mov rcx [ 0x181d0 ]
mov rdx [ 0x18278 ]
mov rax [ rcx ]
call [ rax + 0x210 ]
call 0x113c4
call 0x11574
mov rax [ rcx ]
mov rdx [ 0x181e8 ]
call [ rax + 0x20 ]
mov rcx [ 0x181e0 ]
and [ 0x181e8 ] 0x0
mov rax [ rcx ]
call [ rax + 0x10 ]
and [ 0x181e0 ] 0x0
sub_1421c
push rbx
sub rsp 0x30
and [ rsp + 0x58 ] 0x0
lea r9 [ rsp + 0x58 ]
mov edx 0x80000000
mov r8d 0x200
or ebx 0xffffffff
call [ 0x17050 ]
test eax eax
js 0x1427a
mov rcx [ rsp + 0x58 ]
test rcx rcx
je 0x1428a
mov rcx [ rsp + 0x58 ]
and [ rsp + 0x50 ] 0x0
lea rax [ rsp + 0x50 ]
lea r9d [ rbx + 0x5 ]
lea r8 [ rsp + 0x48 ]
lea edx [ rbx + 0xd ]
mov [ rsp + 0x20 ] rax
mov [ rsp + 0x48 ] ebx
call [ 0x17088 ]
mov ecx [ rsp + 0x48 ]
test eax eax
cmovs ecx ebx
mov ebx ecx
mov eax ebx
add rsp 0x30
pop rbx
retn
call [ 0x17060 ]
sub_14298
mov rax rsp
push rbx
sub rsp 0x60
and [ rax + 0x8 ] 0x0
and [ rax - 0x40 ] 0x0
and [ rax - 0x30 ] 0x0
and [ rax - 0x20 ] 0x0
and [ rax - 0x28 ] 0x0
and [ rax - 0x18 ] 0x0
and [ rax - 0x10 ] 0x0
mov [ rax - 0x48 ] rcx
lea r9 [ rax - 0x48 ]
lea rcx [ rax + 0x8 ]
lea r8 [ rax - 0x38 ]
mov edx 0x400
or ebx 0xffffffff
mov [ rax - 0x38 ] 0x30
call [ 0x17068 ]
test eax eax
js 0x142f7
mov rcx [ rsp + 0x70 ]
call [ 0x17060 ]
mov eax ebx
add rsp 0x60
pop rbx
retn
mov rcx [ rsp + 0x70 ]
call 0x1421c
mov ebx eax
sub_14320
mov rax rsp
mov [ rax + 0x8 ] rbx
push rbp
push rsi
push rdi
sub rsp 0xa0
or [ rax + 0x18 ] 0xffffffff
xor ebp ebp
mov rsi r8
mov rdi rdx
mov [ rax + 0x20 ] rbp
mov [ rax + 0x10 ] ebp
mov [ rax - 0x78 ] rbp
mov [ rax - 0x70 ] bp
mov [ rax - 0x6e ] bp
mov [ rax - 0x68 ] rbp
cmp rdx rbp
je 0x1452a
cmp rsi rbp
je 0x14538
mov rax [ rdx ]
mov [ rsp + 0x60 ] rbp
mov [ rsp + 0x58 ] rax
cmp [ 0x181e0 ] rbp
je 0x1452a
cmp rdi rbp
je 0x1454b
mov rcx rsi
call [ 0x17040 ]
lea ecx [ rbp + 0x1 ]
mov edx 0x20e
mov r8d 0x4c50434e
call [ 0x17018 ]
mov rbx rax
cmp rax rbp
je 0x14504
mov rbx [ rsp + 0xc0 ]
add rsp 0xa0
pop rdi
pop rsi
pop rbp
retn
mov edx 0x4c50434e
mov rcx rdi
call [ 0x17020 ]
mov rcx [ rsp + 0xd8 ]
cmp rcx rbp
je 0x14517
lea r9 [ rsp + 0x58 ]
lea r8 [ rsp + 0x68 ]
lea rcx [ rsp + 0xd8 ]
mov edx 0x400
mov [ rsp + 0x68 ] 0x30
mov [ rsp + 0x70 ] rbp
mov [ rsp + 0x80 ] ebp
mov [ rsp + 0x78 ] rbp
mov [ rsp + 0x88 ] rbp
mov [ rsp + 0x90 ] rbp
call [ 0x17068 ]
cmp eax ebp
jl 0x14504
cmp rbx rbp
je 0x1452a
call [ 0x17060 ]
mov rcx [ rsp + 0xd8 ]
lea rax [ rsp + 0xc8 ]
lea edx [ rbp + 0x1b ]
mov r9d 0x20e
mov r8 rbx
mov [ rsp + 0x20 ] rax
call 0x165fe
cmp eax ebp
jl 0x14504
mov edx 0x4c50434e
mov rcx rbx
call [ 0x17020 ]
movzx r9d [ 0x18180 ]
cmp r9w [ rbx ]
ja 0x14504
movzx eax [ rbx ]
shr eax 0x1
mov [ rsp + 0xc8 ] eax
je 0x1445b
movdqu xmm0 [ rbx ]
movzx eax r9w
mov r8b 0x1
movdqu [ rsp + 0x48 ] xmm0
mov [ rsp + 0x48 ] r9w
movzx ecx [ rbx ]
sub ecx eax
mov rax [ rsp + 0x50 ]
movsxd rdx ecx
shr rdx 0x1
lea rcx [ rax + rdx * 2 ]
lea rdx [ 0x18180 ]
mov [ rsp + 0x50 ] rcx
lea rcx [ rsp + 0x48 ]
call [ 0x17048 ]
cmp al bpl
je 0x14504
mov rcx [ rbx + 0x8 ]
mov edx ebp
mov rcx [ rsp + 0xd8 ]
call 0x1421c
mov [ rsp + 0xd0 ] eax
cmp eax 0xffffffff
je 0x14504
dec eax
add rcx 0x2
mov [ rsp + 0xc8 ] eax
cmp eax ebp
jne 0x14439
inc edx
mov rcx [ 0x181e0 ]
lea rdx [ rsp + 0x40 ]
lea r9 [ 0x14310 ]
mov rax [ rcx ]
mov [ rsp + 0x30 ] rdx
mov rdx [ 0x181e8 ]
lea r8 [ rsp + 0xd0 ]
mov [ rsp + 0x28 ] ebp
mov [ rsp + 0x20 ] ebp
call [ rax + 0x50 ]
cmp eax ebp
jl 0x14504
cmp [ rcx ] 0x5c
jne 0x14441
cmp edx 0x5
jne 0x14504
mov rdx [ rsp + 0x40 ]
xor ecx ecx
add rdx 0x8
call 0x15798
sub_14564
test r8b r8b
jne 0x145d9
retn
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
push rdi
sub rsp 0x20
mov rsi rcx
mov rcx [ 0x18318 ]
mov rdi rdx
call [ 0x17058 ]
mov rbx rax
test rax rax
je 0x145ca
mov rbx [ rsp + 0x30 ]
mov rsi [ rsp + 0x38 ]
add rsp 0x20
pop rdi
mov edx 0x10
xor ecx ecx
mov r8d 0x4c50434e
call [ 0x17018 ]
test rax rax
je 0x145ca
lea rdx [ 0x14320 ]
mov r9 rax
mov r8d 0x1
mov rcx rbx
mov [ rax ] rdi
mov [ rax + 0x8 ] rsi
call 0x165f2
sub_145e0
push rbx
sub rsp 0x20
mov rdx [ rcx + 0x48 ]
mov rbx rcx
test rdx rdx
je 0x14602
mov rdx [ rbx + 0x50 ]
test rdx rdx
je 0x1461b
mov rcx [ 0x181d0 ]
mov rax [ rcx ]
call [ rax + 0xd8 ]
mov rdx [ rbx + 0x58 ]
test rdx rdx
je 0x14634
mov rcx [ 0x181d0 ]
mov rax [ rcx ]
call [ rax + 0xd8 ]
add rsp 0x20
pop rbx
retn
mov rcx [ 0x181d0 ]
mov rax [ rcx ]
call [ rax + 0xd8 ]
sub_14640
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x50
lea r9 [ 0x181e0 ]
lea r8 [ 0x17180 ]
lea rcx [ 0x17170 ]
xor edx edx
call 0x1660a
mov edi 0xc0000000
mov ecx eax
and ecx edi
cmp ecx edi
je 0x147a8
mov rbx [ rsp + 0x60 ]
add rsp 0x50
pop rdi
retn
mov rcx [ 0x181e0 ]
lea rdx [ 0x181e8 ]
mov r9d 0x8
mov rax [ rcx ]
mov [ rsp + 0x40 ] rdx
mov [ rsp + 0x38 ] 0x1
lea rdx [ 0x145e0 ]
lea r8d [ r9 + 0x60 ]
mov [ rsp + 0x30 ] rdx
and [ rsp + 0x28 ] 0x0
lea rdx [ 0x17110 ]
mov [ rsp + 0x20 ] 0x2
call [ rax + 0x18 ]
mov ecx eax
mov ebx eax
and ecx edi
cmp ecx edi
je 0x14791
mov rcx [ 0x181e0 ]
mov rax [ rcx ]
call [ rax + 0x10 ]
and [ 0x181e0 ] 0x0
lea r9 [ 0x181d8 ]
lea r8 [ 0x171c0 ]
lea rcx [ 0x171d0 ]
xor edx edx
call 0x1660a
mov ebx eax
and eax edi
cmp eax edi
je 0x1477d
mov rcx [ 0x181e0 ]
mov rdx [ 0x181e8 ]
mov rax [ rcx ]
call [ rax + 0x20 ]
mov rcx [ 0x181d8 ]
mov [ rsp + 0x40 ] 0x1
and [ rsp + 0x38 ] 0x0
and [ rsp + 0x30 ] 0x0
mov rax [ rcx ]
and [ rsp + 0x28 ] 0x0
and [ rsp + 0x20 ] 0x0
mov r8d 0x4
lea edx [ r8 + 0xc ]
lea r9d [ r8 - 0x2 ]
call [ rax + 0x18 ]
mov ebx eax
and eax edi
cmp eax edi
je 0x14768
mov rcx [ 0x181d8 ]
mov rax [ rcx ]
call [ rax + 0x10 ]
and [ 0x181d8 ] 0x0
lea rcx [ 0x14aa4 ]
call [ 0x17098 ]
mov ebx eax
and eax edi
cmp eax edi
je 0x14760
mov eax ebx
and eax edi
cmp eax edi
jne 0x147a6
lea rcx [ 0x14564 ]
xor edx edx
call [ 0x17090 ]
mov ebx eax
mov eax ebx
sub_147bc
sub rsp 0x28
test r8 r8
jne 0x147cc
and [ r8 ] 0x0
mov r10 [ rdx ]
lea r11 [ 0x10000 ]
cmp r10 [ r11 + 0x7130 ]
jne 0x147f4
mov eax 0xc7e60004
jmp 0x14844
sbb eax eax
sbb eax 0xffffffff
mov r10 [ rdx + 0x8 ]
cmp r10 [ r11 + 0x7138 ]
jne 0x147f4
add rsp 0x28
retn
mov rcx [ rdx ]
cmp rcx [ r11 + 0x7140 ]
jne 0x1481f
mov [ r8 ] rcx
jmp 0x14832
xor eax eax
jmp 0x147f9
sbb eax eax
sbb eax 0xffffffff
mov rcx [ rdx + 0x8 ]
cmp rcx [ r11 + 0x7148 ]
jne 0x1481f
mov rcx [ r8 ]
mov rax [ rcx ]
call [ rax + 0x8 ]
xor eax eax
jmp 0x14844
test eax eax
jne 0x14802
mov eax 0xc7e60002
lea rax [ 0x182d0 ]
mov [ r8 ] rax
xor eax eax
jmp 0x14824
test eax eax
jne 0x1483f
sub_14870
sub rsp 0x28
mov r8 rcx
mov rcx [ 0x181d0 ]
cmp dl 0x1
mov rax [ rcx ]
lea rdx [ r8 + 0xc ]
jne 0x14892
call [ rax + 0x230 ]
call [ rax + 0x240 ]
jmp 0x14898
xor eax eax
add rsp 0x28
retn
sub_148a8
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
push rsi
push rdi
push r13
sub rsp 0x50
mov rsi r9
mov rbp r8
test r9 r9
je 0x14a84
mov eax 0xc7e60004
test rdx rdx
jne 0x14a84
and [ r9 ] rdx
mov rcx [ 0x181d0 ]
mov rdx [ 0x18278 ]
mov rax [ rcx ]
call [ rax + 0x1d8 ]
mov r13d 0x1
mov edi eax
mov ebx eax
shr edi 0x1e
cmp edi 0x3
je 0x14a80
mov eax ebx
jmp 0x14a89
cmp [ 0x181cc ] 0x0
jne 0x149de
mov rbx [ rsp + 0x70 ]
mov rbp [ rsp + 0x78 ]
add rsp 0x50
pop r13
pop rdi
pop rsi
retn
mov rcx [ 0x181d0 ]
mov rdx [ 0x18278 ]
mov rax [ rcx ]
call [ rax + 0x248 ]
cmp edi 0x3
je 0x14a80
lea rax [ 0x14f78 ]
lea r8 [ 0x14dd0 ]
lea rdx [ 0x14f04 ]
mov [ 0x18238 ] rax
lea rax [ 0x151a8 ]
lea rcx [ 0x14f24 ]
mov [ 0x18240 ] rax
lea rax [ 0x15278 ]
mov [ 0x18220 ] r8
mov [ 0x18248 ] rax
lea rax [ 0x15798 ]
mov [ 0x18228 ] rdx
mov [ 0x18250 ] rax
lea rax [ 0x159ec ]
mov [ 0x18230 ] rcx
mov [ 0x18258 ] rax
lea rax [ 0x15ce8 ]
mov [ 0x18200 ] r8
mov [ 0x18260 ] rax
lea rax [ 0x16038 ]
mov [ 0x18208 ] rdx
mov [ 0x18268 ] rax
lea rax [ 0x1640c ]
mov [ 0x18210 ] rcx
mov [ 0x18218 ] rax
call 0x14640
mov edi eax
mov ebx eax
movzx eax [ 0x181cc ]
shr edi 0x1e
cmp edi 0x3
cmovne eax r13d
mov [ 0x181cc ] al
and [ rsp + 0x48 ] 0x0
mov rcx [ 0x181d8 ]
lea rdx [ rsp + 0x88 ]
mov rax [ rcx ]
mov [ rsp + 0x40 ] rdx
mov [ rsp + 0x38 ] r13d
mov [ rsp + 0x30 ] r13d
and [ rsp + 0x28 ] 0x0
and [ rsp + 0x20 ] 0x0
xor r9d r9d
xor r8d r8d
xor edx edx
call [ rax + 0x20 ]
mov edi 0xc0000000
mov ebx eax
and eax edi
cmp eax edi
je 0x14a80
mov rcx [ rsp + 0x88 ]
mov r8 rsi
mov rdx rbp
call 0x14dd0
mov rcx [ 0x181d8 ]
mov rdx [ rsp + 0x88 ]
mov ebx eax
and eax edi
cmp eax edi
mov rax [ rcx ]
je 0x14a7a
mov r8d r13d
call [ rax + 0x28 ]
call [ rax + 0x60 ]
jmp 0x14a80
sub_14aa4
sub rsp 0x28
xor eax eax
cmp [ 0x181e0 ] rax
je 0x14acb
xor eax eax
add rsp 0x28
retn
cmp rcx rax
je 0x14acb
cmp [ rcx ] eax
jne 0x14ac1
mov rdx rcx
xor ecx ecx
call 0x15798
cmp [ rcx + 0x4 ] eax
je 0x14acb
sub_14ad8
mov [ rsp + 0x10 ] rbx
mov [ rsp + 0x18 ] rsi
push rdi
sub rsp 0x40
and [ rsp + 0x50 ] 0x0
mov rbx rcx
test rcx rcx
je 0x14bc0
mov eax 0xc7e60004
test rdx rdx
je 0x14bc0
cmp [ rcx + 0x4 ] 0x0
mov eax 0x3e7
jne 0x14b15
cmp [ rdx + 0x4 ] 0x0
jne 0x14b23
cmp [ rcx ] eax
jbe 0x14bc0
mov rcx [ 0x181e0 ]
test rcx rcx
jne 0x14b39
cmp [ rdx ] eax
jbe 0x14bc0
mov rax [ rcx ]
lea r8 [ rsp + 0x50 ]
mov edi 0x1
mov [ rsp + 0x30 ] r8
mov r8 rdx
mov rdx [ 0x181e8 ]
lea r9 [ 0x163b0 ]
mov [ rsp + 0x28 ] edi
and [ rsp + 0x20 ] 0x0
call [ rax + 0x50 ]
mov ecx eax
mov esi eax
mov eax 0xc0000000
and ecx eax
cmp ecx eax
je 0x14bbc
mov eax 0xc7e60002
jmp 0x14bc5
mov eax esi
jmp 0x14bc5
mov rcx [ rsp + 0x50 ]
mov r8 [ rbx ]
mov edx edi
mov [ rcx + 0x8 ] r8
mov rcx [ 0x181e0 ]
mov r8 [ rsp + 0x50 ]
mov r9 [ rcx ]
call [ r9 + 0x40 ]
mov rdi [ rsp + 0x50 ]
test rdi rdi
je 0x14bb3
mov rbx [ rsp + 0x58 ]
mov rsi [ rsp + 0x60 ]
add rsp 0x40
pop rdi
retn
mov rcx rbx
call [ 0x170b8 ]
call [ 0x17078 ]
mov rcx rax
call 0x14298
mov [ rdi + 0x60 ] eax
sub_14bdc
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rsi
push rdi
sub rsp 0xb0
and [ rax + 0x18 ] 0x0
and [ rsp + 0x30 ] 0x0
mov r9d 0x38
mov rdi rdx
lea rax [ rax + 0x20 ]
lea r8 [ rsp + 0x38 ]
lea edx [ r9 - 0x2e ]
mov rsi rcx
mov [ rsp + 0x20 ] rax
call [ 0x17088 ]
mov ebx eax
test eax eax
jne 0x14d02
mov rcx [ rsp + 0x30 ]
test rcx rcx
je 0x14d12
lea rax [ rsp + 0xd8 ]
lea r9d [ rbx + 0x4 ]
lea r8 [ rsp + 0xd0 ]
lea edx [ rbx + 0x12 ]
mov rcx rsi
mov [ rsp + 0x20 ] rax
call [ 0x17088 ]
test eax eax
jne 0x14cf8
lea r11 [ rsp + 0xb0 ]
mov eax ebx
mov rbx [ r11 + 0x10 ]
mov rsi [ r11 + 0x18 ]
mov rsp r11
pop rdi
retn
call [ 0x17060 ]
mov rax [ rsp + 0x40 ]
mov [ rdi ] rax
cmp [ rsp + 0xd0 ] 0x3
je 0x14c6c
mov r9d 0x8
lea rax [ rsp + 0xd8 ]
lea r8 [ rsp + 0x30 ]
lea edx [ r9 + 0xb ]
mov rcx rsi
mov [ rsp + 0x20 ] rax
call [ 0x17088 ]
mov ebx eax
cmp eax 0xc000005f
je 0x14cf8
cmp [ rsp + 0xd0 ] 0x2
jne 0x14cf8
test eax eax
jne 0x14d02
mov rcx [ rsp + 0x30 ]
lea rax [ rsp + 0xd8 ]
lea r9d [ rbx + 0x38 ]
lea r8 [ rsp + 0x70 ]
lea edx [ rbx + 0xa ]
mov [ rsp + 0x20 ] rax
call [ 0x17088 ]
mov ebx eax
test eax eax
jne 0x14d02
cmp [ rsp + 0xd0 ] 0x3
jne 0x14cde
lea rbx [ rsp + 0x40 ]
lea rdx [ rsp + 0x78 ]
lea rbx [ rsp + 0x78 ]
lea rdx [ rsp + 0x40 ]
jmp 0x14ce8
xor ebx ebx
mov rcx rbx
call 0x14ad8
mov r11 [ rbx ]
mov [ rdi ] r11
jmp 0x14d00
sub_14d30
mov r11 rsp
mov [ r11 + 0x8 ] rbx
push rdi
sub rsp 0x30
and [ r11 + 0x18 ] 0x0
mov rdi rdx
test cl cl
je 0x14d71
lea r9 [ rsp + 0x50 ]
mov edx 0x80000000
mov r8d 0x200
or rcx 0xffffffffffffffff
call [ 0x17050 ]
mov ebx eax
xor r8d r8d
lea rax [ r11 + 0x18 ]
mov r9d 0x200
lea rcx [ r8 - 0x2 ]
mov edx 0x80000000
mov [ r11 - 0x18 ] rax
call [ 0x170a8 ]
mov ebx eax
cmp eax 0xc000007c
jne 0x14d8d
mov rcx [ rsp + 0x50 ]
test rcx rcx
je 0x14db0
mov rcx [ rsp + 0x50 ]
mov rdx rdi
call 0x14bdc
mov ebx eax
test ebx ebx
jne 0x14da0
test ebx ebx
je 0x14dbd
call [ 0x17060 ]
mov eax ebx
mov rbx [ rsp + 0x40 ]
add rsp 0x30
pop rdi
retn
movzx ebx bx
or ebx 0xc7e60000
sub_14dd0
push rbx
sub rsp 0x20
mov r9 r8
mov r10 rdx
test rcx rcx
je 0x14ef1
mov eax 0xc7e60004
test r8 r8
je 0x14ef1
and [ r8 ] 0x0
mov rdx [ rdx ]
lea rbx [ 0x10000 ]
mov r11d 0x8
cmp rdx [ rbx + 0x7130 ]
jne 0x14e1d
sbb eax eax
sbb eax 0xffffffff
mov rdx [ r10 + r11 ]
cmp rdx [ rbx + r11 + 0x7130 ]
jne 0x14e1d
mov r8 [ r10 ]
cmp r8 [ rbx + 0x7220 ]
jne 0x14e4c
mov [ r8 ] rcx
jmp 0x14ee7
xor eax eax
jmp 0x14e22
sbb eax eax
sbb eax 0xffffffff
mov r8 [ r10 + r11 ]
cmp r8 [ rbx + r11 + 0x7220 ]
jne 0x14e4c
mov rax [ rcx ]
call [ rax + 0x8 ]
xor eax eax
jmp 0x14ef6
test eax eax
jne 0x14e2e
mov r8 [ r10 ]
cmp r8 [ rbx + 0x7220 ]
jne 0x14ea1
mov r8 [ r10 ]
cmp r8 [ rbx + 0x71e0 ]
jne 0x14e73
xor eax eax
jmp 0x14e51
add rsp 0x20
pop rbx
retn
sbb eax eax
sbb eax 0xffffffff
mov r8 [ r10 + r11 ]
cmp r8 [ rbx + r11 + 0x7220 ]
jne 0x14ea1
sbb eax eax
sbb eax 0xffffffff
mov r8 [ r10 + r11 ]
cmp r8 [ rbx + r11 + 0x71e0 ]
jne 0x14e73
test eax eax
je 0x14e83
mov rdx [ r10 ]
cmp rdx [ rbx + 0x71e0 ]
jne 0x14ed1
lea rax [ 0x18220 ]
jmp 0x14ee1
xor eax eax
jmp 0x14ea6
mov eax 0xc7e60002
jmp 0x14ef6
xor eax eax
jmp 0x14e78
sbb eax eax
sbb eax 0xffffffff
mov rdx [ r10 + r11 ]
cmp rdx [ rbx + r11 + 0x71e0 ]
jne 0x14ed1
mov [ rcx ] rax
test eax eax
jne 0x14eb3
test eax eax
je 0x14e83
mov [ r9 ] rcx
lea rax [ 0x18200 ]
xor eax eax
jmp 0x14ed6
test eax eax
jne 0x14ee4
sub_14f24
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
mov rdi rcx
mov rcx [ 0x181d0 ]
mov r8 [ rcx ]
lea rdx [ rdi + 0x8 ]
call [ r8 + 0x230 ]
test eax eax
je 0x14f4f
mov rcx [ 0x181d8 ]
xor r8d r8d
mov rdx rdi
mov rax [ rcx ]
call [ rax + 0x28 ]
xor eax eax
mov eax [ rdi + 0x8 ]
jmp 0x14f64
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
sub_14f78
mov [ rsp + 0x8 ] rbx
push rbp
push rsi
push rdi
push r12
push r14
sub rsp 0xa0
mov rbp rdx
call [ 0x170b0 ]
lea rdx [ rsp + 0x60 ]
xor ecx ecx
mov [ rsp + 0x68 ] rax
call 0x14d30
mov edi eax
call [ 0x17078 ]
mov rcx rax
call 0x14298
mov rcx [ 0x181e0 ]
mov rdx [ 0x181e8 ]
mov r10 [ rcx ]
mov r12d eax
lea rax [ rsp + 0xe0 ]
mov [ rsp + 0x50 ] rax
lea rax [ rsp + 0xe8 ]
lea r9 [ 0x16390 ]
mov [ rsp + 0x48 ] rax
and [ rsp + 0x40 ] 0x0
mov [ rsp + 0x38 ] 0x1
lea rax [ 0x163a0 ]
lea r8 [ rsp + 0x68 ]
mov [ rsp + 0x30 ] rax
lea rax [ rsp + 0x68 ]
mov [ rsp + 0x28 ] rax
and [ rsp + 0x20 ] 0x0
call [ r10 + 0x28 ]
mov r14d 0xc0000000
mov ecx eax
mov ebx eax
and ecx r14d
cmp ecx r14d
je 0x15188
mov eax ebx
mov rbx [ rsp + 0xd0 ]
add rsp 0xa0
pop r14
pop r12
pop rdi
pop rsi
pop rbp
retn
cmp [ rsp + 0xe0 ] 0x1
jne 0x150e2
xor esi esi
mov rcx [ rsp + 0xe8 ]
and edi r14d
mov esi 0x1
mov [ rcx + 0x60 ] r12d
cmp edi r14d
je 0x150e4
mov rcx [ 0x181e0 ]
mov r8 [ rsp + 0xe8 ]
mov edx esi
mov rax [ rcx ]
call [ rax + 0x40 ]
cmp [ rsp + 0xe0 ] 0x1
jne 0x15188
movaps xmm0 [ rsp + 0x80 ]
movdqu [ rbp ] xmm0
mov rcx [ 0x181e0 ]
mov rdx [ rsp + 0xe8 ]
lea r8 [ rsp + 0x80 ]
mov rax [ rcx ]
call [ rax + 0x48 ]
test rbp rbp
je 0x15113
mov rcx [ 0x181e0 ]
lea rdx [ rsp + 0x70 ]
lea r9 [ 0x163b0 ]
mov rax [ rcx ]
mov [ rsp + 0x30 ] rdx
mov rdx [ 0x181e8 ]
and [ rsp + 0x28 ] 0x0
and [ rsp + 0x20 ] 0x0
lea r8 [ rsp + 0x60 ]
call [ rax + 0x50 ]
mov ebx eax
and eax r14d
cmp eax r14d
je 0x150c3
movaps xmm0 [ rsp + 0x80 ]
and [ rsp + 0x78 ] 0x0
lea r9 [ rsp + 0x78 ]
lea r8 [ 0x171c0 ]
lea rcx [ 0x171d0 ]
xor edx edx
movdqa [ rsp + 0x90 ] xmm0
call 0x1660a
and eax r14d
cmp eax r14d
jne 0x15174
cmp [ rsp + 0x64 ] 0x0
jne 0x150e4
mov rax [ rsp + 0x70 ]
xor edx edx
mov cl [ rax + 0x10 ]
mov rax [ rsp + 0xe8 ]
mov [ rax + 0x10 ] cl
mov rcx [ 0x181e0 ]
mov r8 [ rsp + 0x70 ]
mov rax [ rcx ]
call [ rax + 0x40 ]
jmp 0x150e4
lea rdx [ rsp + 0x78 ]
lea rcx [ rsp + 0x90 ]
call 0x12b7c
mov ebx eax
mov ebx 0xc7ec0005
jmp 0x15188
cmp [ rsp + 0x60 ] 0x3e7
ja 0x150e4
mov rax [ rsp + 0xe8 ]
mov [ rax + 0x10 ] sil
jmp 0x150e4
sub_151a8
push rbx
sub rsp 0x60
call [ 0x170b0 ]
mov rcx [ 0x181e0 ]
lea rdx [ rsp + 0x78 ]
mov [ rsp + 0x30 ] rdx
mov rdx [ 0x181e8 ]
and [ rsp + 0x28 ] 0x0
and [ rsp + 0x20 ] 0x0
mov [ rsp + 0x80 ] rax
mov rax [ rcx ]
lea r9 [ 0x16390 ]
lea r8 [ rsp + 0x80 ]
call [ rax + 0x50 ]
mov ebx 0xc0000000
mov ecx eax
and ecx ebx
cmp ecx ebx
je 0x1526b
add rsp 0x60
pop rbx
retn
mov rcx [ 0x181e0 ]
mov rdx [ rsp + 0x78 ]
lea r8 [ rsp + 0x40 ]
mov rax [ rcx ]
call [ rax + 0x48 ]
mov rcx [ 0x184a8 ]
movaps xmm5 [ rsp + 0x40 ]
mov rax [ rcx ]
mov rdx [ rsp + 0x40 ]
lea r9 [ rsp + 0x88 ]
movdqa [ rsp + 0x50 ] xmm5
xor r8d r8d
call [ rax + 0x30 ]
and eax ebx
cmp eax ebx
je 0x15257
mov rcx [ 0x181e0 ]
mov r8 [ rsp + 0x78 ]
xor edx edx
mov rax [ rcx ]
call [ rax + 0x30 ]
lea rdx [ rsp + 0x88 ]
lea rcx [ rsp + 0x50 ]
call 0x12df8
sub_15278
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
push rsi
push rdi
push r12
sub rsp 0x90
mov rdi r8
mov rbx rdx
test r8 r8
jne 0x152a2
test rdx rdx
je 0x1538b
mov eax 0xc7e60004
jmp 0x154bf
mov rcx [ 0x181e0 ]
lea rdx [ rsp + 0xc0 ]
lea r9 [ 0x163b0 ]
mov rax [ rcx ]
mov [ rsp + 0x50 ] rdx
lea rdx [ rsp + 0xc8 ]
mov [ rsp + 0x48 ] rdx
and [ rsp + 0x40 ] 0x0
and [ rsp + 0x38 ] 0x0
lea rdx [ 0x163e8 ]
mov [ rsp + 0x30 ] rdx
mov rdx [ 0x181e8 ]
mov [ rsp + 0x28 ] r8
and [ rsp + 0x20 ] 0x0
call [ rax + 0x28 ]
mov r12d 0xc0000000
mov esi eax
and eax r12d
cmp eax r12d
je 0x154bd
cmp [ rdx + 0x8 ] 0x0
je 0x1538b
lea r11 [ rsp + 0x90 ]
mov rbx [ r11 + 0x20 ]
mov rbp [ r11 + 0x28 ]
mov rsp r11
pop r12
pop rdi
pop rsi
retn
mov eax esi
mov rbp [ rsp + 0xc8 ]
cmp [ rbp + 0x10 ] 0x0
jne 0x15424
movdqu xmm0 [ rdx ]
mov rcx [ 0x181e0 ]
mov ebx 0x1
mov rax [ rcx ]
lea r9 [ rsp + 0xc8 ]
lea rdx [ rsp + 0x60 ]
movdqu [ rsp + 0x60 ] xmm0
mov r8d ebx
call [ rax + 0x38 ]
mov r12d 0xc0000000
mov ecx eax
mov esi eax
and ecx r12d
cmp ecx r12d
je 0x154bd
mov rcx [ 0x181e0 ]
lea r8 [ rsp + 0x70 ]
mov rdx rbp
mov rax [ rcx ]
call [ rax + 0x48 ]
test rbx rbx
je 0x15447
call [ 0x17078 ]
mov rcx rax
call 0x14298
mov rcx rdi
mov [ rbp + 0x60 ] eax
call [ 0x170b8 ]
mov rbp [ rsp + 0xc8 ]
mov rcx [ rsp + 0xc8 ]
mov rdx [ rdi ]
mov [ rcx + 0x8 ] rdx
mov rcx [ rsp + 0xc8 ]
and [ rcx ] 0x0
mov r8 [ rsp + 0xc8 ]
cmp [ r8 + 0xc ] 0x0
jne 0x1532c
mov rcx [ 0x181e0 ]
mov r8 [ rsp + 0xc8 ]
xor edx edx
mov rax [ rcx ]
call [ rax + 0x40 ]
mov ebx 0x1
cmp [ rsp + 0xc0 ] ebx
jne 0x154bd
movaps xmm0 [ rsp + 0x70 ]
movdqu [ rbx ] xmm0
mov [ r8 + 0x10 ] 0x0
mov rcx [ 0x181e0 ]
mov rdx [ rsp + 0xc8 ]
mov rax [ rcx ]
call [ rax + 0x60 ]
mov rbp [ rsp + 0xc8 ]
xor ebx ebx
test rbp rbp
je 0x15366
cmp [ r8 + 0x8 ] 0x3e7
jbe 0x15377
movaps xmm0 [ rsp + 0x70 ]
and [ rsp + 0x60 ] 0x0
lea r9 [ rsp + 0x60 ]
lea r8 [ 0x171c0 ]
lea rcx [ 0x171d0 ]
xor edx edx
movdqa [ rsp + 0x80 ] xmm0
call 0x1660a
and eax r12d
cmp eax r12d
jne 0x154a9
mov rcx rdi
call [ 0x170b8 ]
mov r8 [ rsp + 0xc8 ]
call [ 0x17078 ]
mov rcx rax
call 0x14298
mov [ rbp + 0x60 ] eax
mov rcx [ 0x181e0 ]
mov edx ebx
mov rax [ rcx ]
call [ rax + 0x40 ]
jmp 0x154bd
lea rdx [ rsp + 0x60 ]
lea rcx [ rsp + 0x80 ]
call 0x12b7c
mov esi eax
mov esi 0xc7ec0005
jmp 0x154bd
sub_15500
mov r11 rsp
mov [ r11 + 0x8 ] rbx
push rbp
push rsi
push rdi
sub rsp 0xa0
xor esi esi
xor eax eax
mov rdi rcx
mov [ rsp + 0x38 ] si
mov [ rsp + 0x3a ] si
mov [ rsp + 0x48 ] si
mov [ rsp + 0x4a ] si
lea rcx [ 0x17230 ]
lea r9 [ r11 + 0x18 ]
lea r8 [ 0x17240 ]
xor edx edx
mov [ r11 + 0x18 ] rsi
mov [ r11 - 0x78 ] rsi
mov [ r11 - 0x68 ] rsi
mov [ rsp + 0x30 ] rsi
mov [ r11 + 0x20 ] rsi
mov [ r11 + 0x10 ] rsi
mov [ r11 - 0x38 ] rsi
mov [ r11 - 0x30 ] rax
mov [ r11 - 0x28 ] rax
mov [ r11 - 0x20 ] rax
call 0x1660a
cmp [ rsp + 0xd0 ] rsi
je 0x15771
mov rbx [ rsp + 0xc0 ]
add rsp 0xa0
pop rdi
pop rsi
pop rbp
retn
mov rcx [ 0x181d0 ]
mov eax 0x1fe
mov [ rsp + 0x30 ] rsi
mov [ rsp + 0x4a ] ax
mov [ rsp + 0x3a ] ax
mov rax [ rcx ]
lea r8 [ rsp + 0xc8 ]
lea edx [ rsi + 0x1 ]
call [ rax + 0x1e8 ]
mov ebp 0xc0000000
and eax ebp
cmp eax ebp
je 0x15771
mov rcx [ 0x181d0 ]
movzx edx [ rsp + 0x3a ]
mov rax [ rcx ]
call [ rax + 0xd0 ]
mov rcx [ 0x181d0 ]
movzx edx [ rsp + 0x4a ]
mov [ rsp + 0x40 ] rax
mov rax [ rcx ]
call [ rax + 0xd0 ]
mov r8 [ rsp + 0x40 ]
mov rdx rax
mov [ rsp + 0x50 ] rax
cmp r8 rsi
je 0x15731
cmp rdx rsi
je 0x1574b
cmp rax rsi
je 0x1570f
mov rcx [ 0x181d0 ]
mov rdx [ rsp + 0xc8 ]
mov rax [ rcx ]
call [ rax + 0x208 ]
mov rcx [ rsp + 0xd0 ]
mov rax [ rcx ]
call [ rax + 0x10 ]
mov rcx [ 0x181d0 ]
mov rax [ rcx ]
call [ rax + 0xd8 ]
mov [ rsp + 0x50 ] rsi
cmp r8 rsi
je 0x15731
lea rax [ 0x154e0 ]
mov [ rsp + 0x80 ] rax
mov rax [ rsp + 0xc8 ]
mov [ rsp + 0x88 ] rax
mov rcx [ 0x181d0 ]
mov rdx r8
mov rax [ rcx ]
call [ rax + 0xd8 ]
mov rdx [ rsp + 0x50 ]
mov [ rsp + 0x40 ] rsi
and ebx ebp
cmp ebx ebp
jne 0x15627
mov rcx [ rsp + 0xd0 ]
movdqu xmm0 [ rdi ]
mov r8 [ rsp + 0xd8 ]
mov rax [ rcx ]
lea rdx [ rsp + 0x80 ]
mov [ rsp + 0x28 ] rsi
movdqu [ rsp + 0x70 ] xmm0
mov [ rsp + 0x20 ] rdx
lea rdx [ rsp + 0x70 ]
or r9 0xffffffffffffffff
call [ rax + 0x20 ]
and eax ebp
cmp eax ebp
je 0x156de
mov rcx [ rsp + 0xd0 ]
movdqu xmm0 [ rdi ]
lea rdx [ rsp + 0xd8 ]
mov [ rsp + 0x28 ] rdx
lea rdx [ rsp + 0x48 ]
mov [ rsp + 0x48 ] si
movdqu [ rsp + 0x60 ] xmm0
mov [ rsp + 0x38 ] si
mov [ rsp + 0xd8 ] rsi
mov rax [ rcx ]
mov [ rsp + 0x20 ] rdx
lea r9 [ rsp + 0x38 ]
lea r8 [ rsp + 0x30 ]
lea rdx [ rsp + 0x60 ]
call [ rax + 0x40 ]
mov ecx eax
mov ebx eax
and ecx ebp
cmp ecx ebp
je 0x156fb
mov r8 [ rsp + 0x40 ]
mov rdx [ rsp + 0x50 ]
mov rcx [ 0x181d0 ]
mov rdx [ rsp + 0xc8 ]
xor r8d r8d
mov rax [ rcx ]
mov ebx esi
call [ rax + 0x260 ]
mov rcx [ 0x181d0 ]
mov rdx [ rsp + 0xc8 ]
or r8 0xffffffffffffffff
mov rax [ rcx ]
call [ rax + 0x278 ]
sub_15798
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x20 ] rbp
push rsi
sub rsp 0x60
mov rbp rdx
test rdx rdx
jne 0x157b9
cmp [ rdx + 0x4 ] 0x0
jne 0x158d7
mov eax 0xc7e60004
jmp 0x159d1
mov rcx [ 0x181e0 ]
lea rdx [ rsp + 0x78 ]
lea r9 [ 0x163b0 ]
mov rax [ rcx ]
mov [ rsp + 0x30 ] rdx
mov rdx [ 0x181e8 ]
mov r8 rbp
mov [ rsp + 0x28 ] 0x1
and [ rsp + 0x20 ] 0x0
call [ rax + 0x50 ]
mov esi 0xc0000000
mov ebx eax
and eax esi
cmp eax esi
je 0x159cf
cmp [ rdx ] 0x0
jne 0x158d7
lea r11 [ rsp + 0x60 ]
mov rbx [ r11 + 0x10 ]
mov rbp [ r11 + 0x28 ]
mov rsp r11
pop rsi
retn
mov eax ebx
mov rdx [ rsp + 0x78 ]
cmp [ rdx + 0x64 ] 0x1
jne 0x15942
mov esi 0xc0000000
mov [ rdx + 0x64 ] 0x1
mov rcx [ 0x181e0 ]
mov rdx [ rsp + 0x78 ]
mov rax [ rcx ]
call [ rax + 0x60 ]
mov rcx [ 0x181e0 ]
mov rdx [ rsp + 0x78 ]
mov rax [ rcx ]
lea r8 [ rsp + 0x40 ]
call [ rax + 0x48 ]
lea rcx [ rsp + 0x40 ]
call 0x15500
mov rcx [ 0x184a8 ]
mov rdx [ rsp + 0x40 ]
movaps xmm5 [ rsp + 0x40 ]
movdqa [ rsp + 0x50 ] xmm5
mov rax [ rcx ]
lea r9 [ rsp + 0x80 ]
xor r8d r8d
call [ rax + 0x30 ]
and eax esi
cmp eax esi
je 0x159b9
mov rcx [ 0x181e0 ]
mov r8 rdx
mov edx 0x1
mov rax [ rcx ]
call [ rax + 0x40 ]
jmp 0x159cf
mov eax ebx
and eax esi
cmp eax esi
jne 0x157d1
mov rdx [ rsp + 0x78 ]
cmp [ rdx + 0x64 ] 0x1
jne 0x15839
mov rcx [ 0x181e0 ]
mov r8 [ rsp + 0x78 ]
xor edx edx
mov rax [ rcx ]
call [ rax + 0x30 ]
mov ebx eax
lea rdx [ rsp + 0x80 ]
lea rcx [ rsp + 0x50 ]
call 0x12df8
mov rcx [ 0x181e0 ]
lea rdx [ rsp + 0x78 ]
lea r9 [ 0x1578c ]
mov rax [ rcx ]
mov [ rsp + 0x30 ] rdx
mov rdx [ 0x181e8 ]
mov r8 rbp
mov [ rsp + 0x28 ] 0x1
and [ rsp + 0x20 ] 0x0
call [ rax + 0x50 ]
mov ecx eax
mov ebx eax
and ecx esi
cmp ecx esi
je 0x158c6
jmp 0x159cf
mov [ rdx + 0x64 ] 0x1
mov rcx [ 0x181e0 ]
mov rdx [ rsp + 0x78 ]
mov rax [ rcx ]
call [ rax + 0x60 ]
mov rcx [ 0x181e0 ]
mov rdx [ rsp + 0x78 ]
mov rax [ rcx ]
lea r8 [ rsp + 0x40 ]
call [ rax + 0x48 ]
lea rcx [ rsp + 0x40 ]
call 0x15500
mov rcx [ 0x184a8 ]
mov rdx [ rsp + 0x40 ]
movaps xmm5 [ rsp + 0x40 ]
movdqa [ rsp + 0x50 ] xmm5
mov rax [ rcx ]
lea r9 [ rsp + 0x80 ]
xor r8d r8d
call [ rax + 0x30 ]
and eax esi
cmp eax esi
je 0x158b0
mov rcx [ 0x181e0 ]
mov r8 rdx
mov edx 0x1
mov rax [ rcx ]
call [ rax + 0x40 ]
jmp 0x158c4
mov rcx [ 0x181e0 ]
mov r8 [ rsp + 0x78 ]
xor edx edx
mov rax [ rcx ]
call [ rax + 0x30 ]
lea rdx [ rsp + 0x80 ]
lea rcx [ rsp + 0x50 ]
call 0x12df8
mov ebx eax
sub_159ec
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rbp
mov [ rax + 0x18 ] rsi
mov [ rax + 0x20 ] rdi
push r13
sub rsp 0x40
mov ebp r9d
mov r13b r8b
test r9d r9d
je 0x15a18
mov esi [ rsp + 0x78 ]
test esi esi
je 0x15a2b
cmp [ rsp + 0x70 ] 0x0
je 0x15a41
mov edi [ rsp + 0x88 ]
test edi edi
je 0x15a4b
cmp [ rsp + 0x80 ] 0x0
je 0x15a41
mov eax 0xc7e60004
jmp 0x15cc6
movdqu xmm0 [ rdx ]
mov rcx [ 0x181e0 ]
lea r9 [ rsp + 0x20 ]
mov rax [ rcx ]
lea rdx [ rsp + 0x30 ]
mov r8d 0x1
movdqu [ rsp + 0x30 ] xmm0
call [ rax + 0x38 ]
mov ecx eax
mov ebx eax
mov eax 0xc0000000
and ecx eax
cmp ecx eax
je 0x15cc4
cmp [ rsp + 0x90 ] 0x0
jne 0x15a4b
mov rbx [ rsp + 0x50 ]
mov rbp [ rsp + 0x58 ]
mov rsi [ rsp + 0x60 ]
mov rdi [ rsp + 0x68 ]
add rsp 0x40
pop r13
retn
mov eax ebx
mov rcx [ rsp + 0x20 ]
mov [ rcx + 0x10 ] r13b
mov rdx [ rsp + 0x20 ]
xor r13d r13d
cmp [ rdx + 0x48 ] r13
je 0x15ad6
cmp ebp r13d
je 0x15b43
mov rcx [ 0x181d0 ]
mov rdx [ rdx + 0x48 ]
mov rax [ rcx ]
call [ rax + 0xd8 ]
mov r11 [ rsp + 0x20 ]
mov [ r11 + 0x48 ] r13
mov rax [ rsp + 0x20 ]
mov [ rax + 0x20 ] r13
mov rax [ rsp + 0x20 ]
mov [ rax + 0x18 ] r13w
mov rax [ rsp + 0x20 ]
mov [ rax + 0x1a ] r13w
mov rdx [ rsp + 0x20 ]
cmp [ rdx + 0x50 ] r13
je 0x15b88
mov rcx [ 0x181d0 ]
mov edx ebp
mov rax [ rcx ]
call [ rax + 0xc8 ]
mov rcx [ rsp + 0x20 ]
mov [ rcx + 0x48 ] rax
mov rdx [ rsp + 0x20 ]
cmp [ rdx + 0x48 ] r13
je 0x15b3e
cmp esi r13d
je 0x15bf8
mov rcx [ 0x181d0 ]
mov rdx [ rdx + 0x50 ]
mov rax [ rcx ]
call [ rax + 0xd8 ]
mov r11 [ rsp + 0x20 ]
mov [ r11 + 0x50 ] r13
mov rax [ rsp + 0x20 ]
mov [ rax + 0x30 ] r13
mov rax [ rsp + 0x20 ]
mov [ rax + 0x28 ] r13w
mov rax [ rsp + 0x20 ]
mov [ rax + 0x2a ] r13w
mov ebx 0xc7e60005
mov rcx [ 0x181d0 ]
mov r8 [ rsp + 0x70 ]
mov rdx [ rdx + 0x48 ]
mov rax [ rcx ]
mov r9d ebp
call [ rax + 0x128 ]
mov r11 [ rsp + 0x20 ]
mov rax [ r11 + 0x48 ]
mov [ r11 + 0x20 ] rax
mov rax [ rsp + 0x20 ]
mov [ rax + 0x1a ] bp
mov rax [ rsp + 0x20 ]
mov [ rax + 0x18 ] bp
jmp 0x15b43
mov rdx [ rsp + 0x20 ]
cmp [ rdx + 0x58 ] r13
je 0x15c3d
mov rcx [ 0x181d0 ]
mov edx esi
mov rax [ rcx ]
call [ rax + 0xc8 ]
mov rcx [ rsp + 0x20 ]
mov [ rcx + 0x50 ] rax
mov rdx [ rsp + 0x20 ]
cmp [ rdx + 0x50 ] r13
je 0x15bf3
cmp edi r13d
je 0x15cad
mov rcx [ 0x181d0 ]
mov rdx [ rdx + 0x58 ]
mov rax [ rcx ]
call [ rax + 0xd8 ]
mov r11 [ rsp + 0x20 ]
mov [ r11 + 0x58 ] r13
mov rax [ rsp + 0x20 ]
mov [ rax + 0x40 ] r13
mov rax [ rsp + 0x20 ]
mov [ rax + 0x38 ] r13w
mov rax [ rsp + 0x20 ]
mov [ rax + 0x3a ] r13w
mov ebx 0xc7e60005
mov rcx [ 0x181d0 ]
mov r8 [ rsp + 0x80 ]
mov rdx [ rdx + 0x50 ]
mov rax [ rcx ]
mov r9d esi
call [ rax + 0x128 ]
mov r11 [ rsp + 0x20 ]
mov rax [ r11 + 0x50 ]
mov [ r11 + 0x30 ] rax
mov rax [ rsp + 0x20 ]
mov [ rax + 0x2a ] si
mov rax [ rsp + 0x20 ]
mov [ rax + 0x28 ] si
jmp 0x15bf8
mov rcx [ 0x181e0 ]
mov r8 [ rsp + 0x20 ]
mov edx 0x1
mov rax [ rcx ]
call [ rax + 0x40 ]
mov rcx [ 0x181d0 ]
mov edx edi
mov rax [ rcx ]
call [ rax + 0xc8 ]
mov rcx [ rsp + 0x20 ]
mov [ rcx + 0x58 ] rax
mov rdx [ rsp + 0x20 ]
cmp [ rdx + 0x58 ] r13
je 0x15ca8
mov ebx 0xc7e60005
mov rcx [ 0x181d0 ]
mov r8 [ rsp + 0x90 ]
mov rdx [ rdx + 0x58 ]
mov rax [ rcx ]
mov r9d edi
call [ rax + 0x128 ]
mov r11 [ rsp + 0x20 ]
mov rax [ r11 + 0x58 ]
mov [ r11 + 0x40 ] rax
mov rax [ rsp + 0x20 ]
mov [ rax + 0x3a ] di
mov rax [ rsp + 0x20 ]
mov [ rax + 0x38 ] di
jmp 0x15cad
sub_15ce8
mov r11 rsp
mov [ r11 + 0x8 ] rbx
mov [ r11 + 0x10 ] rbp
mov [ r11 + 0x18 ] rsi
push rdi
push r12
push r13
sub rsp 0x30
xor r13d r13d
mov rsi r9
mov rbp r8
cmp r9 r13
je 0x15e56
mov eax 0xc7e60004
mov rdi [ rsp + 0x78 ]
cmp rdi r13
je 0x15e56
mov r12 [ rsp + 0x88 ]
cmp r12 r13
je 0x15e56
movdqu xmm0 [ rdx ]
mov rcx [ 0x181e0 ]
lea r9 [ r11 + 0x20 ]
mov rax [ rcx ]
lea r8d [ r13 + 0x2 ]
lea rdx [ r11 - 0x28 ]
movdqu [ rsp + 0x20 ] xmm0
call [ rax + 0x38 ]
mov ecx eax
mov ebx eax
mov eax 0xc0000000
and ecx eax
cmp ecx eax
je 0x15e52
mov eax ebx
jmp 0x15e5b
mov r8 [ rsp + 0x68 ]
cmp rbp r13
je 0x15d78
mov rbx [ rsp + 0x50 ]
mov rbp [ rsp + 0x58 ]
mov rsi [ rsp + 0x60 ]
add rsp 0x30
pop r13
pop r12
pop rdi
retn
mov rdx [ rsp + 0x70 ]
mov ebp 0xc7e60007
cmp rdx r13
je 0x15dac
mov cl [ r8 + 0x10 ]
mov [ rbp ] cl
cmp [ r8 + 0x18 ] r13w
cmovne ebx ebp
movzx r9d [ r8 + 0x18 ]
cmp [ rsi ] r9d
jb 0x15dac
cmp [ r8 + 0x28 ] r13w
cmovne ebx ebp
movzx r9d [ r8 + 0x28 ]
cmp [ rdi ] r9d
jb 0x15ded
mov rcx [ 0x181d0 ]
mov r8 [ r8 + 0x48 ]
mov rax [ rcx ]
call [ rax + 0x128 ]
mov r8 [ rsp + 0x68 ]
jmp 0x15db4
cmp [ r8 + 0x38 ] r13w
cmovne ebx ebp
movzx r9d [ r8 + 0x38 ]
cmp [ r12 ] r9d
jb 0x15e2f
mov rcx [ 0x181d0 ]
mov r8 [ r8 + 0x50 ]
mov rax [ rcx ]
call [ rax + 0x128 ]
mov r8 [ rsp + 0x68 ]
jmp 0x15df5
mov rdx [ rsp + 0x80 ]
movzx eax [ r8 + 0x18 ]
mov [ rsi ] eax
cmp rdx r13
je 0x15ded
mov rcx [ 0x181d0 ]
mov r8 [ r8 + 0x58 ]
mov rax [ rcx ]
call [ rax + 0x128 ]
mov r8 [ rsp + 0x68 ]
jmp 0x15e37
mov rdx [ rsp + 0x90 ]
movzx eax [ r8 + 0x28 ]
mov [ rdi ] eax
cmp rdx r13
je 0x15e2f
movzx eax [ r8 + 0x38 ]
mov edx 0x2
mov [ r12 ] eax
mov rcx [ 0x181e0 ]
mov rax [ rcx ]
call [ rax + 0x40 ]
sub_15e7c
mov rax rsp
mov [ rax + 0x18 ] rbx
push rsi
push rdi
push r12
sub rsp 0x90
xor esi esi
mov [ rax + 0x10 ] rsi
mov [ rax + 0x8 ] esi
mov [ rax - 0x78 ] si
mov [ rax - 0x76 ] si
mov [ rax - 0x70 ] rsi
lea eax [ rsi + 0x44 ]
mov [ rsp + 0x40 ] ax
lea eax [ rsi + 0x46 ]
mov edi esi
mov [ rsp + 0x42 ] ax
lea rax [ 0x166f0 ]
mov [ rsp + 0x48 ] rax
call [ 0x17078 ]
lea r12d [ rsi + 0x1 ]
mov ecx r12d
mov edx 0x20e
mov r8d 0x4c50434e
mov [ rsp + 0x50 ] rax
mov [ rsp + 0x58 ] rsi
call [ 0x17018 ]
mov rbx rax
cmp rax rsi
je 0x15ff4
mov rcx [ rsp + 0xb8 ]
cmp rcx rsi
je 0x16007
lea r9 [ rsp + 0x50 ]
lea r8 [ rsp + 0x60 ]
lea rcx [ rsp + 0xb8 ]
mov edx 0x400
mov [ rsp + 0x60 ] 0x30
mov [ rsp + 0x68 ] rsi
mov [ rsp + 0x78 ] esi
mov [ rsp + 0x70 ] rsi
mov [ rsp + 0x80 ] rsi
mov [ rsp + 0x88 ] rsi
call [ 0x17068 ]
cmp eax esi
jl 0x15ff4
cmp rbx rsi
je 0x1601a
call [ 0x17060 ]
mov rcx [ rsp + 0xb8 ]
lea rax [ rsp + 0xb0 ]
lea edx [ rsi + 0x1b ]
mov r9d 0x20e
mov r8 rbx
mov [ rsp + 0x20 ] rax
call 0x165fe
cmp eax esi
jl 0x15ff4
mov eax edi
mov rbx [ rsp + 0xc0 ]
add rsp 0x90
pop r12
pop rdi
pop rsi
retn
mov edx 0x4c50434e
mov rcx rbx
call [ 0x17020 ]
movzx r8d [ rsp + 0x40 ]
cmp r8w [ rbx ]
ja 0x15ff4
movzx eax [ rbx ]
shr eax 0x1
mov [ rsp + 0xb0 ] eax
je 0x15fad
movdqu xmm0 [ rbx ]
movzx eax r8w
movdqu [ rsp + 0x30 ] xmm0
mov [ rsp + 0x30 ] r8w
movzx ecx [ rbx ]
mov r8b r12b
sub ecx eax
mov rax [ rsp + 0x38 ]
movsxd rdx ecx
shr rdx 0x1
lea rcx [ rax + rdx * 2 ]
lea rdx [ rsp + 0x40 ]
mov [ rsp + 0x38 ] rcx
lea rcx [ rsp + 0x30 ]
call [ 0x17048 ]
cmp al sil
cmovne edi r12d
mov rcx [ rbx + 0x8 ]
mov edx esi
dec eax
add rcx 0x2
mov [ rsp + 0xb0 ] eax
cmp eax esi
jne 0x15f8e
add edx r12d
cmp [ rcx ] 0x5c
jne 0x15f97
cmp edx 0x6
jne 0x15ff4
sub_16038
mov rax rsp
mov [ rax + 0x8 ] rbx
push rsi
push rdi
push r12
sub rsp 0x80
mov rsi rdx
mov [ rax + 0x10 ] 0x2
test rdx rdx
jne 0x16063
call [ 0x170b0 ]
mov rcx [ 0x181e0 ]
lea rdx [ rsp + 0xb8 ]
mov [ rsp + 0x30 ] rdx
mov rdx [ 0x181e8 ]
and [ rsp + 0x28 ] 0x0
and [ rsp + 0x20 ] 0x0
mov [ rsp + 0x68 ] rax
mov rax [ rcx ]
lea r9 [ 0x16390 ]
lea r8 [ rsp + 0x68 ]
call [ rax + 0x50 ]
mov r12d 0xc0000000
mov ecx eax
mov ebx eax
and ecx r12d
cmp ecx r12d
jne 0x1617f
mov eax 0xc7e60004
jmp 0x1624c
mov eax ebx
and eax r12d
cmp eax r12d
je 0x1624a
lea rdx [ rsp + 0xb0 ]
mov cl 0x1
call 0x14d30
mov ebx eax
and eax r12d
cmp eax r12d
je 0x1610e
mov rbx [ rsp + 0xa0 ]
add rsp 0x80
pop r12
pop rdi
pop rsi
retn
mov eax ebx
cmp [ rsp + 0xa8 ] 0x1
mov rdi [ rsp + 0xb8 ]
jne 0x161cc
mov eax ebx
and eax r12d
cmp eax r12d
je 0x1617f
xor ecx ecx
cmp [ rsp + 0xb0 ] 0x3e3
sete cl
xor eax eax
cmp [ rsp + 0xb4 ] eax
sete al
test eax ecx
je 0x1610e
mov rcx [ 0x181e0 ]
mov r8 rsi
mov rdx rdi
mov rax [ rcx ]
call [ rax + 0x48 ]
mov rcx [ 0x181e0 ]
mov r8 [ rsp + 0xb8 ]
mov rax [ rcx ]
xor edx edx
call [ rax + 0x40 ]
cmp [ rsp + 0xa8 ] 0x1
jne 0x1624a
cmp [ rdi + 0x10 ] 0x0
jne 0x161cc
mov rcx [ 0x181e0 ]
lea rdx [ rsp + 0xa8 ]
lea r9 [ 0x163b0 ]
mov rax [ rcx ]
mov [ rsp + 0x50 ] rdx
lea rdx [ rsp + 0xb8 ]
mov [ rsp + 0x48 ] rdx
and [ rsp + 0x40 ] 0x0
and [ rsp + 0x38 ] 0x0
lea rdx [ 0x163e8 ]
lea r8 [ rsp + 0xb0 ]
mov [ rsp + 0x30 ] rdx
lea rdx [ rsp + 0xb0 ]
mov [ rsp + 0x28 ] rdx
mov rdx [ 0x181e8 ]
and [ rsp + 0x20 ] 0x0
call [ rax + 0x28 ]
mov ebx eax
call 0x15e7c
test eax eax
je 0x1610e
movdqu xmm0 [ rsi ]
and [ rsp + 0x60 ] 0x0
lea r9 [ rsp + 0x60 ]
lea r8 [ 0x171c0 ]
lea rcx [ 0x171d0 ]
xor edx edx
movdqu [ rsp + 0x70 ] xmm0
call 0x1660a
and eax r12d
cmp eax r12d
jne 0x16239
call [ 0x17078 ]
mov rcx rax
call 0x14298
lea rcx [ rsp + 0xb0 ]
mov [ rdi + 0x60 ] eax
call [ 0x170b8 ]
mov rdi [ rsp + 0xb8 ]
lea rdx [ rsp + 0xb0 ]
xor ecx ecx
call 0x14d30
mov ebx eax
lea rdx [ rsp + 0x60 ]
lea rcx [ rsp + 0x70 ]
call 0x12b7c
mov ebx eax
mov ebx 0xc7ec0005
jmp 0x1624a
sub_16268
mov rax rsp
mov [ rax + 0x20 ] rbx
push rbp
push rsi
push rdi
sub rsp 0x60
mov rsi rcx
mov [ rcx ] 0x0
lea rdx [ rax + 0x10 ]
mov ebx 0x2
xor ecx ecx
mov [ rax + 0x8 ] ebx
call 0x14d30
mov ebp 0xc0000000
mov edx eax
mov edi eax
and edx ebp
cmp edx ebp
je 0x16376
mov eax edi
mov rbx [ rsp + 0x98 ]
add rsp 0x60
pop rdi
pop rsi
pop rbp
retn
mov rcx [ 0x181e0 ]
lea rdx [ rsp + 0x80 ]
lea r9 [ 0x163b0 ]
mov rax [ rcx ]
mov [ rsp + 0x50 ] rdx
lea rdx [ rsp + 0x90 ]
mov [ rsp + 0x48 ] rdx
mov [ rsp + 0x40 ] ebx
mov [ rsp + 0x38 ] ebx
lea rdx [ 0x163e8 ]
lea r8 [ rsp + 0x88 ]
mov [ rsp + 0x30 ] rdx
lea rdx [ rsp + 0x88 ]
mov [ rsp + 0x28 ] rdx
mov rdx [ 0x181e8 ]
and [ rsp + 0x20 ] 0x0
call [ rax + 0x28 ]
mov edi eax
and eax ebp
cmp eax ebp
je 0x16376
mov r8 [ rsp + 0x90 ]
cmp [ r8 + 0x10 ] 0x1
jne 0x16321
mov rcx [ 0x181e0 ]
mov rdx r8
mov rax [ rcx ]
call [ rax + 0x60 ]
mov rsi [ rsp + 0x90 ]
xor ebx ebx
test rsi rsi
je 0x16351
mov [ rsi ] 0x1
jmp 0x16367
lea rcx [ rsp + 0x88 ]
call [ 0x170b8 ]
mov r8 [ rsp + 0x90 ]
call [ 0x17078 ]
mov rcx rax
call 0x14298
mov [ rsi + 0x60 ] eax
mov rcx [ 0x181e0 ]
mov edx ebx
mov rax [ rcx ]
call [ rax + 0x40 ]
sub_1640c
push rbx
sub rsp 0x60
mov eax [ rdx + 0x8 ]
mov r10 rcx
mov ecx 0x1
sub eax ecx
mov rbx rdx
je 0x16569
add rdx 0x28
mov rcx r10
call 0x14f78
sub eax ecx
je 0x1655f
mov rcx r10
call 0x151a8
jmp 0x16575
sub eax ecx
je 0x1654d
mov [ rbx + 0x20 ] eax
lea r8 [ rdx + 0x38 ]
mov rcx r10
add rdx 0x28
call 0x15278
jmp 0x16575
sub eax ecx
je 0x1653f
add rdx 0x28
mov rcx r10
call 0x15798
jmp 0x16575
sub eax ecx
je 0x164e6
cmp [ rdx + 0x30 ] 0x0
lea rax [ rdx + 0x10 ]
je 0x164f5
sub eax ecx
je 0x16486
movdqu xmm0 [ rax ]
mov rax [ rdx + 0x60 ]
mov r9d [ rdx + 0x3c ]
mov r8b [ rdx + 0x38 ]
mov [ rsp + 0x40 ] rax
mov eax [ rdx + 0x58 ]
movdqu [ rsp + 0x50 ] xmm0
mov [ rsp + 0x38 ] eax
mov rax [ rdx + 0x50 ]
mov rcx r10
mov [ rsp + 0x30 ] rax
mov eax [ rdx + 0x48 ]
mov [ rsp + 0x28 ] eax
mov rax [ rdx + 0x40 ]
lea rdx [ rsp + 0x50 ]
mov [ rsp + 0x20 ] rax
call 0x159ec
jmp 0x16575
lea rax [ rdx + 0x28 ]
cmp [ rdx + 0x30 ] 0x0
lea rax [ rdx + 0x10 ]
je 0x16495
sub eax ecx
je 0x16475
movdqu xmm0 [ rax ]
mov rax [ rbx + 0x60 ]
lea rcx [ rdx + 0x58 ]
mov [ rsp + 0x40 ] rax
mov rax [ rbx + 0x50 ]
mov [ rsp + 0x38 ] rcx
movdqu [ rsp + 0x50 ] xmm0
mov [ rsp + 0x30 ] rax
mov rax [ rbx + 0x40 ]
add rdx 0x48
mov [ rsp + 0x28 ] rdx
lea r9 [ rbx + 0x3c ]
lea r8 [ rbx + 0x38 ]
lea rdx [ rsp + 0x50 ]
mov rcx r10
mov [ rsp + 0x20 ] rax
call 0x15ce8
jmp 0x16575
lea rax [ rdx + 0x28 ]
add rdx 0x28
mov rcx r10
call 0x16038
jmp 0x16575
cmp eax ecx
jne 0x16578
xor eax eax
add rsp 0x60
pop rbx
retn
lea rcx [ rdx + 0x38 ]
test rcx rcx
jne 0x1646b
call 0x16268
jmp 0x16575
mov eax 0xc7e60004
jmp 0x16575
sub_1b008
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x40
lea rax [ 0x18318 ]
lea r8 [ 0x18130 ]
mov r9d 0x12
mov [ rsp + 0x30 ] rax
xor edx edx
mov [ rsp + 0x28 ] 0x0
and [ rsp + 0x20 ] 0x0
mov rdi rcx
call [ 0x17080 ]
mov ebx eax
test eax eax
jne 0x1b060
mov eax ebx
mov rbx [ rsp + 0x50 ]
add rsp 0x40
pop rdi
retn
lea rax [ 0x14150 ]
lea rcx [ 0x182e0 ]
xor edx edx
mov [ rdi + 0x68 ] rax
call [ 0x17028 ]
sub_1b074
mov rax [ 0x18100 ]
mov rdx 0x2b992ddfa232
test rax rax
je 0x1b08f
lea rcx [ 0x18100 ]
mov rax 0xfffff78000000320
mov rax [ rax ]
xor rax rcx
mov rcx 0xffffffffffff
and rax rcx
cmove rax rdx
mov [ 0x18100 ] rax
cmp rax rdx
jne 0x1b0be
not rax
mov [ 0x18108 ] rax
retn
sub_115e0
sub rsp 0x28
mov rcx [ rcx + 0x18 ]
mov rax [ rcx ]
call [ rax + 0x10 ]
xor eax eax
add rsp 0x28
retn
sub_11fa4
sub rsp 0x28
mov rax [ rdx + 0x8 ]
test rax rax
je 0x11fbc
xor al al
mov rdx [ rdx ]
add rcx 0x10
call rax
jmp 0x11fbe
add rsp 0x28
retn
sub_12048
movdqu xmm0 [ rdx ]
xor eax eax
movdqu [ rcx ] xmm0
retn
sub_1205c
sub rsp 0x28
mov r10 rcx
mov rcx [ 0x181d0 ]
mov r8 rdx
mov rax [ rcx ]
mov r9d 0x10
mov rdx r10
call [ rax + 0x120 ]
cmp eax 0x10
sete al
add rsp 0x28
retn
sub_12ab4
sub rsp 0x28
test rdx rdx
jne 0x12ac4
add rdx 0xfffffffffffffff0
mov rax [ rdx ]
mov rcx [ rax + 0x18 ]
mov rax [ rcx ]
call [ rax + 0x60 ]
mov eax 0xc7ec0004
jmp 0x12ad5
add rsp 0x28
retn
sub_139f8
sub rsp 0x28
test rdx rdx
jne 0x13a08
mov rax [ rdx - 0x8 ]
add rdx 0xfffffffffffffff0
mov rcx [ rax + 0x8 ]
mov rax [ rcx ]
call [ rax + 0x60 ]
mov eax 0xc7eb0004
jmp 0x13a1a
add rsp 0x28
retn
sub_14310
mov eax [ rdx ]
cmp [ rcx + 0x60 ] eax
sete al
retn
sub_14850
mov rdx rcx
mov rcx [ 0x181d0 ]
mov rax [ rcx ]
add rdx 0x8
jmp [ rax + 0x230 ]
sub_14f04
mov rdx rcx
mov rcx [ 0x181d0 ]
mov rax [ rcx ]
add rdx 0x8
jmp [ rax + 0x240 ]
sub_154e0
mov rdx [ rcx + 0x8 ]
mov rcx [ 0x181d0 ]
xor r8d r8d
mov rax [ rcx ]
jmp [ rax + 0x268 ]
sub_1578c
mov al 0x1
retn
sub_16390
mov rax [ rdx ]
cmp [ rcx ] rax
sete al
retn
sub_163a0
mov rax [ rdx ]
mov [ rcx ] rax
xor eax eax
retn
sub_163b0
sub rsp 0x28
mov rax [ 0x181d0 ]
mov r8 rdx
lea rdx [ rcx + 0x8 ]
mov r10 [ rax ]
mov r9d 0x8
mov rcx rax
call [ r10 + 0x120 ]
cmp eax 0x8
sete al
add rsp 0x28
retn
sub_163e8
mov rax [ rdx ]
mov [ rcx + 0x8 ] rax
cmp [ rcx + 0xc ] 0x0
jne 0x16400
xor eax eax
retn
cmp eax 0x3e7
ja 0x16400
mov [ rcx + 0x10 ] 0x1
sub_16590
cmp rcx [ 0x18100 ]
jne 0x165ab
jmp 0x165b8
rol rcx 0x10
test cx 0xffff
jne 0x165a7
ror rcx 0x10
retn 0x0
sub_165b8
sub rsp 0x38
mov r9 [ 0x18108 ]
mov r8 [ 0x18100 ]
and [ rsp + 0x20 ] 0x0
mov rdx rcx
mov ecx 0xf7
call [ 0x170c0 ]
int3
DbgPrint
jmp [ 0x17070 ]
IoQueueWorkItemEx
jmp [ 0x17030 ]
ZwQueryInformationProcess
jmp [ 0x170d0 ]
NicmCreateInstance
jmp [ 0x17000 ]
NicmDeregisterClassFactory
jmp [ 0x17008 ]
_start
sub rsp 0x28
mov r8 rdx
mov r9 rcx
call 0x1b074
mov rdx r8
mov rcx r9
add rsp 0x28
jmp 0x1b008
