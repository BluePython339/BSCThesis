sub_401000
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_409c1a
mov [ esi ] r--data
mov eax esi
mov esp ebp
pop ebp
retn
sub_401040
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_409c76
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a181
add esp 0x4
sub_401180
push ebp
mov ebp esp
push 0xffffffff
push sub_42a2e8
mov eax [ fs : 0x0 ]
push eax
sub esp 0xec
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rwxdata ]
add eax rwxdata
push eax
push rwxdata
lea ecx [ ebp - 0x30 ]
push ecx
call sub_401bc0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x48 ] 0x0
jmp r-xdata
cmp [ ebp - 0x48 ] 0x3e8
jge r-xdata
sub esp 0xc
mov eax esp
mov [ ebp - 0x84 ] esp
lea edx [ ebp - 0x30 ]
call sub_401720
mov [ ebp - 0xf0 ] eax
sub esp 0xc
mov eax esp
mov [ ebp - 0x88 ] esp
lea ecx [ ebp - 0x30 ]
call sub_401700
mov [ ebp - 0xf4 ] eax
lea esi [ ebp - 0x40 ]
call sub_401df0
mov [ ebp - 0xf8 ] eax
mov [ ebp - 0x4 ] 0x2
mov eax [ rwxdata ]
mov [ ebp - 0x14 ] eax
mov ecx [ rwxdata ]
mov [ ebp - 0x18 ] ecx
lea eax [ ebp - 0x40 ]
call sub_401860
add eax 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x44 ] 0x4
mov edx [ ebp - 0x18 ]
xor eax eax
push eax
push edx
mov ecx [ ebp - 0x14 ]
sub ecx [ ebp - 0x44 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
mov ecx rwxdata
call sub_406960
add esp 0x10
mov esp [ rwxdata ]
mov ebp [ rwxdata ]
mov ecx [ rwxdata ]
mov edx [ rwxdata ]
mov esi [ rwxdata ]
mov edi [ rwxdata ]
lea eax [ rwxdata ]
jmp eax
sub esp 0xc
mov esi esp
mov [ ebp - 0x64 ] esp
lea ecx [ ebp - 0x30 ]
call sub_4017b0
mov [ ebp - 0xd8 ] eax
sub esp 0xc
mov esi esp
mov [ ebp - 0x68 ] esp
lea edx [ ebp - 0x30 ]
call sub_401740
mov [ ebp - 0xdc ] eax
lea eax [ ebp - 0x60 ]
push eax
call sub_401c70
mov [ ebp - 0xe0 ] eax
mov [ ebp - 0x4 ] 0x1
lea esi [ ebp - 0x30 ]
call j_sub_401920
sub esp 0xc
mov esi esp
mov [ ebp - 0x6c ] esp
lea ecx [ ebp - 0x60 ]
call sub_4017b0
mov [ ebp - 0xe4 ] eax
sub esp 0xc
mov esi esp
mov [ ebp - 0x70 ] esp
lea edx [ ebp - 0x60 ]
call sub_401740
mov [ ebp - 0xe8 ] eax
lea eax [ ebp - 0x80 ]
lea ecx [ ebp - 0x30 ]
call sub_401700
sub esp 0xc
mov ecx esp
mov [ ebp - 0x74 ] esp
mov edx eax
mov eax ecx
call sub_4013c0
mov [ ebp - 0xec ] eax
lea edx [ ebp - 0x30 ]
push edx
call sub_401d60
call sub_4013b0
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x60 ]
call sub_4016e0
jmp r-xdata
mov edx [ ebp - 0x48 ]
add edx 0x1
mov [ ebp - 0x48 ] edx
sub_4013c0
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov edx [ edx + 0x8 ]
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
sub_401410
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
push eax
lea eax [ rwxdata ]
mov [ eax ] esp
add [ eax ] 0x4
lea eax [ rwxdata ]
mov [ eax ] ecx
lea eax [ rwxdata ]
mov [ eax ] edx
lea eax [ rwxdata ]
mov [ eax ] ebp
lea esi [ rwxdata ]
mov [ eax ] esi
lea edi [ rwxdata ]
mov [ eax ] edi
call sub_401180
mov esi [ ebp + 0x8 ]
mov edi [ LoadStringA@IAT ]
push 0x64
push rwxdata
push 0x67
push esi
call edi
push 0x64
push rwxdata
push 0x6d
push esi
call edi
mov eax esi
call sub_4014f0
mov [ rwxdata ] esi
call sub_401180
push 0x6d
push esi
call [ LoadAcceleratorsA@IAT ]
mov edi [ GetMessageA@IAT ]
push 0x0
push 0x0
mov esi eax
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call edi
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ebx [ TranslateAcceleratorA@IAT ]
lea esp [ esp ]
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x1c ]
push edx
call edi
test eax eax
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
call [ TranslateMessage@IAT ]
lea ecx [ ebp - 0x1c ]
push ecx
call [ DispatchMessageA@IAT ]
mov edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x1c ]
push ecx
push esi
push edx
call ebx
test eax eax
jne r-xdata
sub_4014f0
push ebp
mov ebp esp
sub esp 0x30
push esi
mov esi [ LoadIconA@IAT ]
push 0x6b
push eax
mov [ ebp - 0x30 ] 0x30
mov [ ebp - 0x2c ] 0x3
mov [ ebp - 0x28 ] sub_401580
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] eax
call esi
push 0x7f00
push 0x0
mov [ ebp - 0x18 ] eax
call [ LoadCursorA@IAT ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x1c ]
push 0x6c
push eax
mov [ ebp - 0x10 ] 0x6
mov [ ebp - 0xc ] 0x6d
mov [ ebp - 0x8 ] rwxdata
call esi
lea ecx [ ebp - 0x30 ]
push ecx
mov [ ebp - 0x4 ] eax
call [ RegisterClassExA@IAT ]
pop esi
mov esp ebp
pop ebp
retn
sub_401580
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
mov eax [ rwxdata ]
xor eax esp
mov [ esp + 0x48 ] eax
mov ecx [ ebp + 0xc ]
mov eax ecx
sub eax 0x2
push esi
mov esi [ ebp + 0x8 ]
je r-xdata
push 0x0
call [ PostQuitMessage@IAT ]
mov ecx [ esp + 0x4c ]
pop esi
xor ecx esp
xor eax eax
call sub_409b72
mov esp ebp
pop ebp
retn 0x10
sub eax 0xd
je r-xdata
lea edx [ esp + 0x8 ]
push edx
push esi
call [ BeginPaint@IAT ]
lea eax [ esp + 0x8 ]
push eax
push esi
call [ EndPaint@IAT ]
xor eax eax
pop esi
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_409b72
mov esp ebp
pop ebp
retn 0x10
sub eax 0x102
je r-xdata
mov ecx [ ebp + 0x10 ]
movzx eax cx
sub eax 0x68
je r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push eax
push edx
push ecx
push esi
call [ DefWindowProcA@IAT ]
pop esi
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_409b72
mov esp ebp
pop ebp
retn 0x10
mov ecx [ rwxdata ]
push 0x0
push sub_4016a0
push esi
push 0x67
push ecx
call [ DialogBoxParamA@IAT ]
xor eax eax
pop esi
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_409b72
mov esp ebp
pop ebp
retn 0x10
dec eax
je r-xdata
push esi
call [ DestroyWindow@IAT ]
xor eax eax
pop esi
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_409b72
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp + 0x14 ]
push eax
push ecx
push 0x111
push esi
call [ DefWindowProcA@IAT ]
pop esi
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_409b72
mov esp ebp
pop ebp
retn 0x10
sub_4016a0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax 0x110
je r-xdata
mov eax 0x1
pop ebp
retn 0x10
dec eax
jne r-xdata
xor eax eax
pop ebp
retn 0x10
mov eax [ ebp + 0x10 ]
cmp ax 0x1
je r-xdata
mov ecx [ ebp + 0x8 ]
movzx eax ax
push eax
push ecx
call [ EndDialog@IAT ]
cmp ax 0x2
je r-xdata
sub_401740
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0xc ]
call sub_401720
mov ecx [ ebp - 0xc ]
xor eax eax
test ecx ecx
je r-xdata
xor ecx ecx
test eax eax
je r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ ecx ]
mov eax [ ebp - 0x4 ]
mov [ esi + 0x8 ] eax
mov eax esi
mov esp ebp
pop ebp
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + 0x8 ] edx
mov eax esi
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov ecx [ ebp - 0x4 ]
mov [ esi ] eax
mov [ esi + 0x8 ] ecx
mov eax esi
mov esp ebp
pop ebp
retn
sub_4017b0
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0xc ]
call sub_401700
mov ecx [ ebp - 0xc ]
xor eax eax
test ecx ecx
je r-xdata
xor ecx ecx
test eax eax
je r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ ecx ]
mov eax [ ebp - 0x4 ]
mov [ esi + 0x8 ] eax
mov eax esi
mov esp ebp
pop ebp
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + 0x8 ] edx
mov eax esi
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov ecx [ ebp - 0x4 ]
mov [ esi ] eax
mov [ esi + 0x8 ] ecx
mov eax esi
mov esp ebp
pop ebp
retn
sub_401870
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov edx [ edx + 0x8 ]
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
sub_4018a0
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov edx [ edx + 0x8 ]
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
sub_4018d0
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov edx [ edx + 0x8 ]
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
sub_401920
mov eax [ esi + 0x10 ]
push ebx
xor ebx ebx
cmp eax ebx
je r-xdata
push edi
mov edi [ esi + 0x8 ]
cmp edi ebx
jbe r-xdata
lea ebx [ ebx ]
mov eax [ esi + 0x4 ]
pop edi
cmp eax ebx
je r-xdata
lea ebx [ ebx ]
cmp [ esi + 0x10 ] ebx
jne r-xdata
dec eax
mov [ esi + 0x10 ] eax
jne r-xdata
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
pop ebx
retn
push eax
call sub_40a181
add esp 0x4
cmp edi ebx
ja r-xdata
mov ecx [ eax ]
push ecx
call sub_40a181
add esp 0x4
cmp eax ebx
je r-xdata
mov [ esi + 0xc ] ebx
mov eax [ esi + 0x4 ]
dec edi
cmp [ eax + edi * 4 ] ebx
lea eax [ eax + edi * 4 ]
je r-xdata
sub_4019b0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx edx
je r-xdata
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov edx [ edx ]
test edx edx
je r-xdata
mov edx [ ebp + 0x10 ]
mov [ eax + 0x8 ] edx
pop ebp
retn 0xc
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ edx ]
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8 ] ecx
pop ebp
retn 0xc
mov ecx [ ecx ]
mov [ eax ] ecx
sub_401af0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov edx [ ebp + 0x10 ]
mov [ eax + 0x8 ] edx
pop ebp
retn 0xc
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8 ] ecx
pop ebp
retn 0xc
mov ecx [ ecx ]
mov [ eax ] ecx
sub_401b60
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0xffffffff
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_409c1a
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_40bc3c
push ecx
call sub_40a28e
add esp 0x4
test eax eax
jne r-xdata
sub_401bc0
push ebp
mov ebp esp
push 0xffffffff
push sub_42a1c8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor edi edi
push 0x8
mov [ esi ] edi
call sub_40a28e
add esp 0x4
cmp eax edi
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] edi
call sub_409c1a
push r--data
lea edx [ ebp - 0x1c ]
push edx
mov [ ebp - 0x1c ] r--data
call sub_40bc3c
int3
mov [ esi ] eax
xor ecx ecx
mov [ eax ] ecx
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ esi ]
mov [ eax ] esi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] edi
mov ecx [ ebp + 0x8 ]
push ecx
push edx
push eax
push esi
call sub_402020
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_401c70
push ebp
mov ebp esp
push 0xffffffff
push sub_42a248
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor edi edi
push 0x8
mov [ esi ] edi
call sub_40a28e
add esp 0x4
cmp eax edi
je r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] edi
call sub_409c1a
push r--data
lea eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x1c ] r--data
call sub_40bc3c
int3
mov [ esi ] eax
xor ecx ecx
mov [ eax ] ecx
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ esi ]
mov [ eax ] esi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ ebp - 0x4 ] edi
mov ecx [ ebp + 0x8 ]
push ecx
sub esp 0xc
mov eax esp
mov [ eax ] edi
mov [ eax + 0x4 ] edi
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x10 ] esp
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x20 ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edi
mov [ eax + 0x4 ] edi
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x10 ] esp
cmp ecx edi
je r-xdata
mov ecx [ ecx ]
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x14 ]
push esi
mov [ eax + 0x8 ] ecx
call sub_4020e0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x1c
mov ecx [ ecx ]
cmp ecx edi
je r-xdata
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx ]
mov [ eax ] edx
sub_401d60
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push eax
sub esp 0xc
xor edx edx
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x24 ]
mov [ ebp - 0x4 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x2c ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x4 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x20 ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
push edx
mov [ eax + 0x8 ] ecx
call sub_4021c0
mov esp ebp
pop ebp
retn 0x28
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ ecx ]
mov [ eax ] edx
sub_401df0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x1c ]
xor edx edx
push eax
sub esp 0xc
mov eax esp
mov [ esi ] edx
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x4 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x1c ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
push esi
mov [ eax + 0x8 ] ecx
call sub_4025a0
mov eax esi
mov esp ebp
pop ebp
retn 0x18
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ ecx ]
mov [ eax ] edx
sub_401eb0
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0xffffffff
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_409c1a
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_40bc3c
push ecx
call sub_40a28e
add esp 0x4
test eax eax
jne r-xdata
sub_401f30
push ebp
mov ebp esp
sub esp 0x10
push edi
xor edi edi
push 0x8
mov [ esi ] edi
call sub_40a28e
add esp 0x4
cmp eax edi
je r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edi
call sub_409c1a
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_40bc3c
int3
mov [ esi ] eax
xor ecx ecx
mov [ eax ] ecx
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ esi ]
mov [ eax ] esi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov eax esi
pop edi
mov esp ebp
pop ebp
retn 0x4
sub_401fd0
push ebp
mov ebp esp
sub esp 0x10
push 0x8
call sub_40a28e
add esp 0x4
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_409c1a
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_40bc3c
sub_402020
push ebp
mov ebp esp
push 0xffffffff
push sub_42a1a0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_401700
mov edx [ eax ]
xor ecx ecx
test edx edx
je r-xdata
mov edx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
sub esp 0xc
mov eax esp
mov [ ebp + 0x10 ] esp
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov edx [ edx ]
test edx edx
je r-xdata
push esi
mov [ eax + 0x8 ] edx
call sub_402f60
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ edx ]
mov ecx [ ecx ]
mov [ eax ] ecx
sub_4020e0
push ebp
mov ebp esp
push 0xffffffff
push sub_42a220
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x8 ]
xor esi esi
sub esp 0xc
mov [ ebp - 0x4 ] esi
mov eax esp
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x14 ] esp
cmp ecx esi
je r-xdata
mov edx [ ebp + 0x20 ]
mov [ eax + 0x8 ] edx
sub esp 0xc
mov eax esp
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x14 ] esp
cmp ecx esi
je r-xdata
mov ecx [ ecx ]
cmp ecx esi
je r-xdata
mov edx [ ebp + 0x14 ]
mov [ eax + 0x8 ] edx
lea eax [ ebp - 0x20 ]
mov ecx edi
call sub_401700
sub esp 0xc
mov ecx esp
mov [ ecx ] esi
mov [ ecx + 0x4 ] esi
mov edx [ eax ]
mov [ ebp - 0x14 ] esp
cmp edx esi
je r-xdata
mov ecx [ ecx ]
cmp ecx esi
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov eax [ eax + 0x8 ]
push edi
mov [ ecx + 0x8 ] eax
call sub_401d60
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov edx [ edx ]
cmp edx esi
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ edx ]
mov [ ecx ] edx
sub_4021c0
push ebp
mov ebp esp
push 0xffffffff
push sub_42a180
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x44 ]
mov ecx edi
call sub_401700
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x14 ]
mov esi [ edi + 0x10 ]
sub eax ecx
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x44 ]
lea edx [ ebp + 0x24 ]
mov [ ebp - 0x14 ] esi
call sub_403620
mov ebx [ ebp + 0x20 ]
cmp ebx [ eax + 0x8 ]
sete al
test al al
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x2c
shr esi 0x1
cmp [ ebp - 0x18 ] esi
ja r-xdata
mov [ ebp - 0x4 ] 0x2
lea esp [ esp ]
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
sub esp 0xc
mov eax esp
mov edx edi
mov [ ebp + 0x8 ] esp
call sub_401720
mov ecx [ ebp - 0x14 ]
sub esp 0xc
mov ebx esp
mov [ ebp + 0x8 ] esp
push ecx
lea eax [ ebp - 0x68 ]
mov ecx edi
call sub_401700
mov esi eax
mov eax ebx
call sub_4028a0
mov edx [ ebp - 0x18 ]
sub esp 0xc
mov ebx esp
mov [ ebp + 0x8 ] esp
push edx
lea eax [ ebp - 0x5c ]
mov ecx edi
call sub_401700
mov esi eax
mov eax ebx
call sub_4028a0
lea eax [ ebp - 0x50 ]
push eax
mov ecx [ ebp + 0x18 ]
xor eax eax
test ecx ecx
je r-xdata
lea eax [ ebp - 0x44 ]
lea edx [ ebp + 0x24 ]
call sub_403620
cmp ebx [ eax + 0x8 ]
sete al
test al al
jne r-xdata
lea ecx [ ebx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ebx [ edi + 0x10 ]
sub ebx [ ebp - 0x14 ]
sub esp 0xc
mov eax esp
mov [ ebp + 0x8 ] esp
mov [ ebp + 0x8 ] eax
push ebx
lea eax [ ebp - 0x44 ]
mov ecx edi
call sub_401700
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_4028a0
sub esp 0xc
mov eax esp
mov ecx edi
mov [ ebp + 0x8 ] esp
call sub_401700
call sub_402cd0
mov ecx [ ebp - 0x18 ]
add esp 0xc
mov eax esp
mov [ ebp + 0x8 ] esp
push ecx
mov [ ebp + 0x8 ] eax
push ebx
lea eax [ ebp - 0x44 ]
mov ecx edi
call sub_401700
mov esi eax
lea eax [ ebp - 0x50 ]
call sub_4028a0
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_4028a0
sub esp 0xc
mov eax esp
mov [ ebp + 0x8 ] esp
mov [ ebp + 0x8 ] eax
push ebx
lea eax [ ebp - 0x5c ]
mov ecx edi
call sub_401700
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_4028a0
sub esp 0xc
mov eax esp
mov ecx edi
mov [ ebp + 0x8 ] esp
call sub_401700
lea edx [ ebp - 0x68 ]
push edx
jmp r-xdata
mov ecx [ ebp + 0x18 ]
xor eax eax
test ecx ecx
je r-xdata
mov edx [ eax ]
xor edx edx
jmp r-xdata
mov eax [ ecx ]
call sub_402d30
add esp 0x28
lea ecx [ ebx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov edx [ edx + 0x4 ]
mov eax [ edx + eax * 4 ]
mov edx [ edi + 0xc ]
add eax ecx
mov ecx [ edi + 0x10 ]
add edx ecx
mov [ ebp - 0x1c ] eax
test dl 0xf
jne r-xdata
sub eax esi
mov esi [ edx + 0x8 ]
mov eax ecx
shr eax 0x4
and ecx 0xf
cmp esi eax
ja r-xdata
mov edx [ eax ]
xor edx edx
jmp r-xdata
mov eax [ ecx ]
mov esi [ edi + 0x10 ]
add esi [ edi + 0xc ]
mov ecx [ edi + 0x8 ]
mov ebx esi
shr ebx 0x4
cmp ecx ebx
ja r-xdata
add ecx 0x10
shr ecx 0x4
cmp [ edi + 0x8 ] ecx
ja r-xdata
mov edx [ edx + 0x4 ]
mov eax [ edx + eax * 4 ]
add eax ecx
test [ edi + 0xc ] 0xf
mov [ ebp - 0x20 ] eax
jne r-xdata
sub eax esi
mov esi [ edx + 0x8 ]
mov eax ecx
shr eax 0x4
and ecx 0xf
cmp esi eax
ja r-xdata
mov ecx [ edi + 0x4 ]
cmp [ ecx + ebx * 4 ] 0x0
jne r-xdata
sub ebx ecx
push edi
call sub_402950
mov eax [ ebp - 0x1c ]
mov ebx [ edi + 0xc ]
test ebx ebx
jne r-xdata
mov eax [ edi + 0x10 ]
add eax 0x10
shr eax 0x4
cmp [ edi + 0x8 ] eax
ja r-xdata
mov edx [ edi + 0x4 ]
and esi 0xf
add esi [ edx + ebx * 4 ]
je r-xdata
push 0x10
call sub_40a28e
add esp 0x4
test eax eax
je r-xdata
mov ecx [ edi + 0x4 ]
dec ebx
mov esi ebx
shr esi 0x4
cmp [ ecx + esi * 4 ] 0x0
jne r-xdata
mov ebx [ edi + 0x8 ]
shl ebx 0x4
push edi
call sub_402950
mov eax 0x1
add [ edi + 0x10 ] eax
sub [ ebp + 0x20 ] eax
mov ebx [ ebp + 0x20 ]
jmp r-xdata
mov al [ eax ]
mov [ esi ] al
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x20 ] 0x0
call sub_409c1a
push r--data
lea ecx [ ebp - 0x38 ]
push ecx
mov [ ebp - 0x38 ] r--data
call sub_40bc3c
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x14 ]
cmp edi [ esi + 0x10 ]
jae r-xdata
mov edx [ edi + 0x4 ]
mov [ edx + ebx * 4 ] eax
mov eax [ ebp - 0x1c ]
mov edx [ edi + 0x4 ]
mov eax ebx
and eax 0xf
add eax [ edx + esi * 4 ]
je r-xdata
push 0x10
call sub_40a28e
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x68 ]
lea edx [ ebp + 0x24 ]
call sub_403620
cmp ebx [ eax + 0x8 ]
sete al
test al al
jne r-xdata
push 0x0
push 0x0
call sub_40bc3c
lea ecx [ ecx ]
mov eax 0x1
add [ edi + 0x10 ] eax
sub [ ebp + 0x20 ] eax
mov [ edi + 0xc ] ebx
mov ebx [ ebp + 0x20 ]
jmp r-xdata
mov ecx [ ebp - 0x20 ]
mov dl [ ecx ]
mov [ eax ] dl
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x1c ] 0x0
call sub_409c1a
push r--data
lea ecx [ ebp - 0x2c ]
push ecx
mov [ ebp - 0x2c ] r--data
call sub_40bc3c
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x14 ]
cmp edi [ esi + 0x10 ]
jae r-xdata
mov edx [ edi + 0x4 ]
mov [ edx + esi * 4 ] eax
mov ecx esi
call sub_401a90
cmp edi [ esi + 0x10 ]
jb r-xdata
push 0x0
push 0x0
call sub_40bc3c
lea ebx [ ebx ]
mov eax esi
call sub_4027c0
cmp edi [ esi + 0x10 ]
jb r-xdata
sub_4025a0
push ebp
mov ebp esp
push 0xffffffff
push sub_42a140
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
xor esi esi
mov [ ebp - 0x4 ] esi
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x14 ] ecx
xor ecx ecx
cmp eax esi
je r-xdata
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x20 ]
xor edx edx
cmp eax esi
je r-xdata
mov eax [ eax ]
cmp eax esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x14 ]
push eax
sub esp 0xc
mov eax esp
mov [ ebp - 0x18 ] esp
mov [ eax ] esi
mov [ eax + 0x4 ] esi
cmp ecx esi
je r-xdata
mov eax [ eax ]
cmp eax esi
je r-xdata
mov ecx [ eax ]
sub esp 0xc
mov [ eax + 0x8 ] edi
mov eax esp
mov [ ebp - 0x18 ] esp
mov [ eax ] esi
mov [ eax + 0x4 ] esi
cmp edx esi
je r-xdata
mov ecx [ ecx ]
cmp ecx esi
je r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x14 ]
push eax
push ecx
call sub_403370
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov ecx [ edx ]
cmp ecx esi
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ ecx ]
mov [ eax ] edx
sub_4026e0
push ebp
mov ebp esp
sub esp 0x10
push 0x8
call sub_40a28e
add esp 0x4
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_409c1a
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_40bc3c
sub_402720
push ebp
mov ebp esp
sub esp 0x10
test [ esi + 0xc ] 0xf
jne r-xdata
push ebx
mov ebx [ esi + 0xc ]
test ebx ebx
jne r-xdata
mov eax [ esi + 0x10 ]
add eax 0x10
shr eax 0x4
cmp [ esi + 0x8 ] eax
ja r-xdata
mov ecx [ esi + 0x4 ]
dec ebx
push edi
mov edi ebx
shr edi 0x4
cmp [ ecx + edi * 4 ] 0x0
jne r-xdata
mov ebx [ esi + 0x8 ]
shl ebx 0x4
push esi
call sub_402950
mov edx [ esi + 0x4 ]
mov eax ebx
and eax 0xf
add eax [ edx + edi * 4 ]
pop edi
je r-xdata
push 0x10
call sub_40a28e
add esp 0x4
test eax eax
je r-xdata
inc [ esi + 0x10 ]
mov [ esi + 0xc ] ebx
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov dl [ ecx ]
mov [ eax ] dl
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_409c1a
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_40bc3c
int3
mov edx [ esi + 0x4 ]
mov [ edx + edi * 4 ] eax
sub_4027c0
mov ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
retn
inc [ eax + 0xc ]
push edi
mov edi [ eax + 0x8 ]
shl edi 0x4
cmp edi [ eax + 0xc ]
pop edi
ja r-xdata
dec ecx
mov [ eax + 0x10 ] ecx
jne r-xdata
mov [ eax + 0xc ] 0x0
mov [ eax + 0xc ] 0x0
sub_4027f0
push ebp
mov ebp esp
mov eax [ edi + 0x10 ]
mov ecx [ edi + 0xc ]
add ecx eax
sub esp 0x10
test cl 0xf
jne r-xdata
mov eax [ edi + 0x8 ]
push ebx
push esi
mov esi [ edi + 0xc ]
add esi [ edi + 0x10 ]
mov ebx esi
shr ebx 0x4
cmp eax ebx
ja r-xdata
add eax 0x10
shr eax 0x4
cmp [ edi + 0x8 ] eax
ja r-xdata
mov edx [ edi + 0x4 ]
cmp [ edx + ebx * 4 ] 0x0
jne r-xdata
sub ebx eax
push edi
call sub_402950
mov ecx [ edi + 0x4 ]
and esi 0xf
add esi [ ecx + ebx * 4 ]
je r-xdata
push 0x10
call sub_40a28e
add esp 0x4
test eax eax
je r-xdata
inc [ edi + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov al [ edx ]
mov [ esi ] al
lea edx [ ebp - 0x4 ]
push edx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_409c1a
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_40bc3c
int3
mov ecx [ edi + 0x4 ]
mov [ ecx + ebx * 4 ] eax
sub_4028a0
push ebp
mov ebp esp
mov ecx [ esi ]
xor edx edx
test ecx ecx
je r-xdata
mov ecx [ esi + 0x8 ]
add ecx [ ebp + 0x8 ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] ecx
test edx edx
je r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
pop ebp
retn 0x4
mov edx [ edx ]
test edx edx
je r-xdata
mov edx [ ecx ]
mov edx [ edx ]
mov [ eax ] edx
sub_4028f0
mov eax [ edx ]
xor ecx ecx
test eax eax
je r-xdata
mov eax [ edx + 0x8 ]
dec eax
test ecx ecx
jne r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ ecx ]
xor edx edx
jmp r-xdata
mov ecx [ eax ]
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
add eax esi
pop esi
retn
sub ecx eax
mov ecx eax
and eax 0xf
push esi
mov esi eax
mov eax [ edx + 0x8 ]
shr ecx 0x4
cmp eax ecx
ja r-xdata
sub_402950
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebx + 0x8 ]
mov eax 0xfffffff
sub eax ecx
mov [ ebp - 0x4 ] 0x1
cmp eax 0x1
jae r-xdata
mov eax ecx
shr eax 0x1
cmp eax 0x8
jae r-xdata
push r--data
call sub_4211c1
cmp eax 0x1
jbe r-xdata
mov eax 0x8
jmp r-xdata
mov eax [ ebp - 0x4 ]
push esi
push edi
mov edi [ ebx + 0xc ]
xor esi esi
shr edi 0x4
add eax ecx
mov [ ebp - 0xc ] edi
mov [ ebp + 0x8 ] esi
cmp eax esi
jbe r-xdata
mov edx 0xfffffff
sub edx eax
cmp ecx edx
ja r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ ebx + 0x4 ]
add eax eax
add eax eax
lea esi [ edi * 4 ]
lea edx [ esi + ecx ]
sub eax edx
add eax ecx
sar eax 0x2
add eax eax
add eax eax
push eax
push edx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ esi + edx ]
push eax
call sub_409e20
mov edx [ ebp - 0x4 ]
add eax [ ebp - 0x8 ]
mov ecx [ ebx + 0x4 ]
add esp 0xc
cmp edi edx
ja r-xdata
cmp eax 0x3fffffff
ja r-xdata
mov [ ebp - 0x4 ] eax
lea edi [ edx * 4 ]
mov edx edi
sar edx 0x2
add edx edx
add edx edx
push edx
push ecx
push eax
call sub_409e20
mov eax [ ebx + 0x4 ]
lea ecx [ edi + eax ]
sub esi ecx
add esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x2
add esi esi
add esi esi
push esi
push ecx
push eax
call sub_409e20
mov ecx [ ebp - 0x4 ]
add esp 0x18
lea edi [ esi + eax ]
test ecx ecx
je r-xdata
sar esi 0x2
mov [ ebp - 0x8 ] esi
mov esi edx
mov edx [ ebp - 0x8 ]
add edx edx
add edx edx
push edx
push ecx
push eax
mov [ ebp - 0x8 ] edx
call sub_409e20
mov edx eax
add edx [ ebp - 0x8 ]
add esp 0xc
sub esi edi
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
mov [ ebp + 0x8 ] esi
call sub_409c1a
push r--data
lea ecx [ ebp - 0x18 ]
push ecx
mov [ ebp - 0x18 ] r--data
call sub_40bc3c
int3
lea ecx [ eax * 4 ]
push ecx
call sub_40a28e
add esp 0x4
mov [ ebp + 0x8 ] eax
cmp eax esi
je r-xdata
mov eax [ ebx + 0x4 ]
pop edi
pop esi
test eax eax
je r-xdata
xor eax eax
[ edi ]
test edi edi
je r-xdata
mov ecx esi
xor eax eax
mov edi edx
[ edi ]
mov edi [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
add [ ebx + 0x8 ] edx
mov [ ebx + 0x4 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
call sub_40a181
add esp 0x4
mov ecx edi
mov edi [ ebp + 0x8 ]
jmp r-xdata
sub_402b90
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x3fffffff
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_409c1a
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_40bc3c
lea eax [ ecx * 4 ]
push eax
call sub_40a28e
add esp 0x4
test eax eax
jne r-xdata
sub_402bf0
mov eax [ ecx ]
test eax eax
jne r-xdata
mov edx [ eax ]
xor edx edx
jmp r-xdata
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
add eax esi
pop esi
retn
sub ecx eax
mov eax [ ecx + 0x8 ]
mov ecx eax
and eax 0xf
push esi
mov esi eax
mov eax [ edx + 0x8 ]
shr ecx 0x4
cmp eax ecx
ja r-xdata
sub_402c40
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push eax
push ecx
push edx
sub esp 0xc
mov eax esp
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] esp
test ecx ecx
je r-xdata
mov edx [ ebp + 0x14 ]
mov [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
push eax
call sub_402f60
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
sub_402cb0
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0xc ]
call sub_403620
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
xor ecx ecx
cmp edx [ eax + 0x8 ]
setne al
mov esp ebp
pop ebp
retn
sub_402cd0
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0x14 ]
sub esp 0x8
test eax eax
je r-xdata
xor ecx ecx
jmp r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
test eax eax
je r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov ecx [ ebp + 0x10 ]
push ecx
push eax
mov eax [ esp + 0x14 ]
push eax
call sub_4032b0
add esp 0x14
mov esp ebp
pop ebp
retn
mov eax [ eax ]
test eax eax
jne r-xdata
mov eax [ eax ]
sub_402d30
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x20 ]
cmp esi edi
je r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] 0x0
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
test eax eax
je r-xdata
cmp edi [ ebp + 0x2c ]
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ ebp + 0x24 ]
test eax eax
je r-xdata
mov eax [ eax ]
mov [ ebx ] eax
xor edx edx
jmp r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
xor ecx ecx
jmp r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ eax ]
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ eax ]
push [ ebp + 0x2c ]
push edx
push edi
push ecx
push esi
push eax
call sub_4037d0
mov ecx [ ebp + 0x20 ]
mov eax [ ebp + 0x2c ]
mov esi [ ebp + 0x14 ]
sub eax ecx
add esp 0x18
add esi eax
mov [ ebp + 0x14 ] esi
mov eax [ eax ]
test eax eax
jne r-xdata
mov eax [ eax ]
sub_402df0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push eax
sub esp 0xc
xor edx edx
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x18 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push edx
push eax
call sub_403370
mov esp ebp
pop ebp
retn 0x20
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ ecx ]
mov [ eax ] edx
sub_402e80
push ebp
mov ebp esp
sub eax ecx
push esi
sar eax 0x2
lea esi [ eax * 4 ]
mov eax [ ebp + 0x8 ]
push esi
push ecx
push eax
call sub_409e20
add esp 0xc
add eax esi
pop esi
pop ebp
retn
sub_402ed0
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x3fffffff
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_409c1a
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_40bc3c
lea eax [ ecx * 4 ]
push eax
call sub_40a28e
add esp 0x4
test eax eax
jne r-xdata
sub_402f60
push ebp
mov ebp esp
push 0xffffffff
push sub_42a160
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x44 ]
mov ecx edi
call sub_401700
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x14 ]
sub eax ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x10 ]
mov [ ebp - 0x18 ] eax
cmp ecx [ ebp + 0x1c ]
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
shr eax 0x1
cmp [ ebp - 0x1c ] eax
ja r-xdata
mov [ ebp - 0x4 ] 0x2
mov edi edi
mov [ ebp - 0x4 ] 0x0
sub esp 0xc
mov eax esp
mov edx edi
mov [ ebp + 0x18 ] esp
call sub_401720
mov eax [ ebp - 0x18 ]
sub esp 0xc
mov ebx esp
mov [ ebp + 0x18 ] esp
push eax
lea eax [ ebp - 0x68 ]
mov ecx edi
call sub_401700
mov esi eax
mov eax ebx
call sub_4028a0
mov ecx [ ebp - 0x1c ]
sub esp 0xc
mov ebx esp
mov [ ebp + 0x18 ] esp
push ecx
lea eax [ ebp - 0x5c ]
mov ecx edi
call sub_401700
mov esi eax
mov eax ebx
call sub_4028a0
lea edx [ ebp - 0x50 ]
mov al [ ecx ]
mov ecx [ edi + 0xc ]
mov [ ebp - 0x11 ] al
mov eax [ edi + 0x10 ]
add ecx eax
test cl 0xf
jne r-xdata
mov ebx [ edi + 0x10 ]
sub ebx [ ebp - 0x18 ]
sub esp 0xc
mov eax esp
mov [ ebp + 0x18 ] esp
mov [ ebp + 0x18 ] eax
push ebx
lea eax [ ebp - 0x44 ]
mov ecx edi
call sub_401700
mov esi eax
mov eax [ ebp + 0x18 ]
call sub_4028a0
sub esp 0xc
mov eax esp
mov ecx edi
mov [ ebp + 0x18 ] esp
call sub_401700
call sub_402cd0
mov ecx [ ebp - 0x1c ]
add esp 0xc
mov eax esp
mov [ ebp + 0x18 ] esp
push ecx
mov [ ebp + 0x18 ] eax
push ebx
lea eax [ ebp - 0x44 ]
mov ecx edi
call sub_401700
mov esi eax
lea eax [ ebp - 0x50 ]
call sub_4028a0
mov esi eax
mov eax [ ebp + 0x18 ]
call sub_4028a0
sub esp 0xc
mov eax esp
mov [ ebp + 0x18 ] esp
mov [ ebp + 0x18 ] eax
push ebx
lea eax [ ebp - 0x5c ]
mov ecx edi
call sub_401700
mov esi eax
mov eax [ ebp + 0x18 ]
call sub_4028a0
sub esp 0xc
mov eax esp
mov ecx edi
mov [ ebp + 0x18 ] esp
call sub_401700
lea edx [ ebp - 0x68 ]
jmp r-xdata
test [ edi + 0xc ] 0xf
mov al [ ecx ]
mov [ ebp - 0x11 ] al
jne r-xdata
mov esi [ edi + 0x10 ]
add esi [ edi + 0xc ]
mov eax [ edi + 0x8 ]
mov ebx esi
shr ebx 0x4
cmp eax ebx
ja r-xdata
add eax 0x10
shr eax 0x4
cmp [ edi + 0x8 ] eax
ja r-xdata
push edx
call sub_402d30
add esp 0x28
mov ebx [ edi + 0xc ]
test ebx ebx
jne r-xdata
mov ecx [ edi + 0x10 ]
add ecx 0x10
shr ecx 0x4
cmp [ edi + 0x8 ] ecx
ja r-xdata
mov edx [ edi + 0x4 ]
cmp [ edx + ebx * 4 ] 0x0
jne r-xdata
sub ebx eax
push edi
call sub_402950
mov edx [ edi + 0x4 ]
dec ebx
mov esi ebx
shr esi 0x4
cmp [ edx + esi * 4 ] 0x0
jne r-xdata
mov ebx [ edi + 0x8 ]
shl ebx 0x4
push edi
call sub_402950
mov ecx [ edi + 0x4 ]
and esi 0xf
add esi [ ecx + ebx * 4 ]
je r-xdata
push 0x10
call sub_40a28e
add esp 0x4
test eax eax
je r-xdata
mov ecx [ edi + 0x4 ]
mov eax ebx
and eax 0xf
add eax [ ecx + esi * 4 ]
je r-xdata
push 0x10
call sub_40a28e
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebp + 0x18 ]
inc [ edi + 0x10 ]
inc ecx
mov [ ebp + 0x18 ] ecx
jmp r-xdata
mov dl [ ebp - 0x11 ]
mov [ esi ] dl
lea edx [ ebp - 0x20 ]
push edx
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x20 ] 0x0
call sub_409c1a
push r--data
lea eax [ ebp - 0x38 ]
push eax
mov [ ebp - 0x38 ] r--data
call sub_40bc3c
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x18 ]
cmp edi [ esi + 0x10 ]
jae r-xdata
mov ecx [ edi + 0x4 ]
mov [ ecx + ebx * 4 ] eax
mov ecx [ ebp + 0x18 ]
inc [ edi + 0x10 ]
inc ecx
mov [ edi + 0xc ] ebx
mov [ ebp + 0x18 ] ecx
jmp r-xdata
mov dl [ ebp - 0x11 ]
mov [ eax ] dl
lea edx [ ebp - 0x20 ]
push edx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x20 ] 0x0
call sub_409c1a
push r--data
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x2c ] r--data
call sub_40bc3c
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x18 ]
cmp edi [ esi + 0x10 ]
jae r-xdata
mov ecx [ edi + 0x4 ]
mov [ ecx + esi * 4 ] eax
cmp ecx [ ebp + 0x1c ]
je r-xdata
push 0x0
push 0x0
call sub_40bc3c
lea esp [ esp ]
cmp ecx [ ebp + 0x1c ]
je r-xdata
push 0x0
push 0x0
call sub_40bc3c
mov eax esi
call sub_4027c0
cmp edi [ esi + 0x10 ]
jb r-xdata
mov ecx esi
call sub_401a90
cmp edi [ esi + 0x10 ]
jb r-xdata
sub_403290
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
sub_4032b0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
push ebx
push esi
push edi
cmp eax ecx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
dec ecx
mov [ ebp + 0x18 ] ecx
cmp eax ecx
je r-xdata
mov edx [ ebp + 0x14 ]
mov edx [ edx + 0x8 ]
mov esi ecx
shr esi 0x4
and ecx 0xf
cmp edx esi
ja r-xdata
mov ebx [ ebp + 0xc ]
mov edx eax
and eax 0xf
mov edi eax
mov eax [ ebx + 0x8 ]
shr edx 0x4
cmp eax edx
ja r-xdata
sub esi edx
mov eax [ ebp + 0x14 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
add eax ecx
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + edx * 4 ]
mov bl [ eax ]
mov dl [ ecx + edi ]
mov [ ecx + edi ] bl
mov [ eax ] dl
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
inc eax
mov [ ebp + 0x10 ] eax
cmp eax ecx
jne r-xdata
sub edx eax
sub_403320
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push eax
push ecx
push edx
call sub_4037d0
add esp 0x18
pop ecx
pop ebp
retn
sub_403370
push ebp
mov ebp esp
push 0xffffffff
push sub_42a120
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0x24 ]
sub eax ecx
mov edi eax
mov [ ebp - 0x14 ] edi
test edi edi
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
mov ecx [ ebx ]
mov edx [ ebx + 0x4 ]
mov eax ecx
sub eax edx
dec eax
cmp eax edi
jae r-xdata
mov eax [ ebx + 0x8 ]
mov esi edx
sub esi ecx
add esi edi
sub eax ecx
cmp eax esi
jae r-xdata
push r--data
call sub_4211c1
push edx
sub esp 0xc
xor edx edx
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x1c ]
mov [ ebp + 0x8 ] esp
cmp ecx edx
je r-xdata
mov ecx eax
shr eax 0x1
or edx 0xffffffff
sub edx eax
cmp edx ecx
jae r-xdata
mov ecx [ ebp + 0x24 ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x10 ]
mov [ ebp + 0x8 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
add ecx eax
mov [ ebp + 0x8 ] ecx
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0x18 ]
mov [ eax + 0x8 ] ecx
call sub_403950
mov eax [ ebx + 0x4 ]
mov edx [ ebp + 0xc ]
lea ecx [ eax + edi ]
cmp edx eax
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
call sub_401b60
mov edi eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebx ]
mov esi [ ebp + 0xc ]
sub esi eax
push esi
push eax
push edi
mov [ ebp - 0x18 ] edi
call sub_409e20
add esp 0xc
add eax esi
push eax
sub esp 0xc
xor edx edx
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x1c ]
mov [ ebp - 0x1c ] esp
cmp ecx edx
je r-xdata
mov [ ebp + 0x8 ] esi
mov ecx esi
cmp ecx esi
jae r-xdata
add [ ebx + 0x4 ] edi
cmp eax ecx
je r-xdata
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ebp + 0x24 ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x1c ] esp
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
push edx
mov edi ecx
call sub_403ce0
mov edi [ ebp - 0x14 ]
add esp 0x4
mov ecx [ ebp + 0x18 ]
mov [ eax + 0x8 ] ecx
call sub_403950
mov ecx [ ebp + 0xc ]
mov edx [ ebx + 0x4 ]
sub edx ecx
push edx
push ecx
push eax
call sub_409e20
mov eax [ ebx ]
mov ecx [ ebx + 0x4 ]
mov esi [ ebp - 0x14 ]
sub ecx eax
add esp 0xc
add esi ecx
test eax eax
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ ebp + 0x8 ]
add edx edi
lea eax [ edi + esi ]
mov [ ebx + 0x8 ] edx
mov [ ebx + 0x4 ] eax
mov [ ebx ] edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
push eax
call sub_40a181
add esp 0x4
mov edx [ ecx ]
mov [ eax ] edx
sub_403590
push ebp
mov ebp esp
sub eax ecx
push esi
sar eax 0x2
lea esi [ eax * 4 ]
mov eax [ ebp + 0x8 ]
push esi
push ecx
push eax
call sub_409e20
add esp 0xc
add eax esi
pop esi
pop ebp
retn
sub_403620
mov ecx [ edx ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov edx [ edx + 0x8 ]
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
sub_403680
mov eax [ ecx + 0x8 ]
sub eax [ ecx ]
push esi
mov ecx eax
or esi 0xffffffff
shr ecx 0x1
sub esi ecx
cmp esi eax
pop esi
jae r-xdata
add eax ecx
xor eax eax
jmp r-xdata
retn
mov eax edx
cmp eax edx
jae r-xdata
sub_403750
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
mov eax ecx
and ecx 0xf
push ebx
mov ebx ecx
mov ecx [ ebp + 0x10 ]
mov ecx [ ecx + 0x8 ]
shr eax 0x4
push esi
push edi
cmp ecx eax
ja r-xdata
mov edx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
mov ecx edx
shr ecx 0x4
and edx 0xf
cmp edi ecx
ja r-xdata
sub eax ecx
mov edi [ ebp + 0x10 ]
mov edi [ edi + 0x4 ]
mov esi [ esi + 0x4 ]
mov eax [ edi + eax * 4 ]
mov ecx [ esi + ecx * 4 ]
add eax ebx
mov bl [ eax ]
add ecx edx
mov dl [ ecx ]
pop edi
mov [ ecx ] bl
pop esi
mov [ eax ] dl
pop ebx
pop ebp
retn
sub ecx edi
sub_4037d0
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x1c ]
sub eax ebx
mov esi edi
sub esi ebx
mov [ ebp - 0x4 ] eax
mov eax esi
mov [ ebp - 0x8 ] eax
cmp ebx edi
jbe r-xdata
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x8 ] esi
cmp eax esi
jge r-xdata
mov edi edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test eax eax
jle r-xdata
cdq
idiv ecx
mov eax ecx
mov ecx edx
test edx edx
jne r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x34 ] ebx
add ebx eax
mov eax [ ebp - 0x4 ]
add eax ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x18 ] ecx
cmp eax edi
jne r-xdata
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x20 ] ecx
mov edi [ eax ]
mov esi [ eax + 0x4 ]
mov [ ebp - 0xc ] ebx
jmp r-xdata
lea eax [ ebp + 0x8 ]
mov edi [ eax ]
mov esi [ eax + 0x4 ]
jmp r-xdata
mov edx [ edi + 0x8 ]
mov ecx esi
mov eax esi
shr ecx 0x4
and eax 0xf
cmp edx ecx
ja r-xdata
mov edx ebx
and ebx 0xf
mov [ ebp - 0xc ] ebx
mov ebx [ ebp - 0x18 ]
mov ebx [ ebx + 0x8 ]
shr edx 0x4
cmp ebx edx
ja r-xdata
sub ecx edx
mov ebx [ edi + 0x4 ]
mov ecx [ ebx + ecx * 4 ]
mov bl [ ecx + eax ]
add ecx eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + edx * 4 ]
add edx [ ebp - 0xc ]
mov [ ebp - 0x18 ] edi
mov al [ edx ]
mov [ edx ] bl
mov [ ecx ] al
mov edx [ ebp + 0x1c ]
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
sub edx esi
mov [ ebp - 0x14 ] esi
cmp eax edx
jge r-xdata
sub edx ebx
mov eax [ ebp + 0x8 ]
mov ecx ebx
sub ecx edx
add ecx [ ebp - 0x4 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x2c ] ecx
lea eax [ ebp - 0x30 ]
mov [ ebp - 0xc ] esi
add esi eax
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x24 ] esi
lea eax [ ebp - 0x28 ]
jmp r-xdata
mov ebx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
dec eax
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
mov esi [ eax + 0x4 ]
mov edi [ eax ]
cmp esi [ ebp - 0x34 ]
jne r-xdata
mov edi [ ebp + 0x1c ]
sub_403930
push ebp
mov ebp esp
push esi
sub eax ecx
mov esi eax
mov eax [ ebp + 0x8 ]
push esi
push ecx
push eax
call sub_409e20
add esp 0xc
add eax esi
pop esi
pop ebp
retn 0x4
sub_403950
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x14 ]
push ebx
xor ecx ecx
push esi
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
xor edx edx
test eax eax
je r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ ebp + 0x20 ]
mov ebx [ ebp + 0x10 ]
push eax
sub esp 0xc
mov eax esp
mov [ ebp - 0x4 ] esp
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ eax ]
sub esp 0xc
mov [ eax + 0x8 ] esi
mov eax esp
mov [ ebp - 0x4 ] esp
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test edx edx
je r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov edx [ eax ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp + 0x20 ]
call sub_403c80
add esp 0x1c
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ ecx ]
mov [ eax ] edx
sub_4039f0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
push edi
mov edi eax
cmp esi ebx
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
cmp ebx edi
je r-xdata
push esi
mov eax ebx
call sub_403ce0
add esp 0x4
sub edi ebx
lea eax [ edi + esi ]
pop edi
pop esi
pop ebx
pop ebp
retn
sub_403a30
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
push esi
jmp r-xdata
mov esi [ edx ]
mov [ ecx ] esi
add ecx 0x4
dec eax
jne r-xdata
pop esi
sub_403a60
mov eax [ edx + 0x4 ]
mov ecx eax
and eax 0xf
push esi
mov esi eax
mov eax [ edx ]
mov edx [ eax + 0x8 ]
shr ecx 0x4
cmp edx ecx
ja r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
add eax esi
pop esi
retn
sub ecx edx
sub_403ad0
mov eax [ edx + 0x4 ]
mov ecx eax
and eax 0xf
push esi
mov esi eax
mov eax [ edx ]
mov edx [ eax + 0x8 ]
shr ecx 0x4
cmp edx ecx
ja r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
add eax esi
pop esi
retn
sub ecx edx
sub_403b40
push ebp
mov ebp esp
push esi
sub eax ecx
mov esi eax
mov eax [ ebp + 0x8 ]
push esi
push ecx
push eax
call sub_409e20
add esp 0xc
add eax esi
pop esi
pop ebp
retn
sub_403b60
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x20 ]
push eax
sub esp 0xc
xor edx edx
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x4 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x1c ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov eax [ ebp + 0x20 ]
call sub_403c80
add esp 0x1c
mov esp ebp
pop ebp
retn
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ ecx ]
mov [ eax ] edx
sub_403c50
push ebp
mov ebp esp
push esi
sub eax ecx
mov esi eax
mov eax [ ebp + 0x8 ]
push esi
push ecx
push eax
call sub_409e20
add esp 0xc
add eax esi
pop esi
pop ebp
retn
sub_403c80
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
cmp edi [ ebp + 0x1c ]
je r-xdata
pop edi
pop ebp
retn
push ebx
push esi
mov edi edi
mov ebx [ ecx ]
xor ebx ebx
jmp r-xdata
test eax eax
je r-xdata
sub ecx esi
mov esi [ ebx + 0x8 ]
mov ecx edi
mov edx edi
shr ecx 0x4
and edx 0xf
cmp esi ecx
ja r-xdata
inc edi
inc eax
mov [ ebp + 0x10 ] edi
cmp edi [ ebp + 0x1c ]
jne r-xdata
mov esi [ ebx + 0x4 ]
mov ecx [ esi + ecx * 4 ]
mov dl [ edx + ecx ]
mov [ eax ] dl
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
pop esi
pop ebx
sub_403ce0
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov esi eax
sub esi ecx
mov edx edi
sub edx ecx
mov [ ebp - 0x10 ] edx
mov eax edx
mov [ ebp - 0x8 ] edx
mov ebx esi
test esi esi
je r-xdata
cmp eax edx
jge r-xdata
cdq
idiv ebx
mov eax ebx
mov ebx edx
test edx edx
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test eax eax
jle r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx ecx
neg edx
mov [ ebp - 0x18 ] edx
mov edx esi
neg edx
mov [ ebp - 0xc ] edx
mov edx edi
neg edx
lea ebx [ eax + ecx ]
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ebx
jmp r-xdata
lea edx [ ebx + esi ]
mov eax ebx
cmp edx edi
jne r-xdata
mov ecx edx
neg ecx
mov edx ecx
sub ecx [ ebp - 0x14 ]
mov eax esi
add ecx [ ebp - 0xc ]
sub eax edi
add eax [ ebp + 0x8 ]
add edx eax
add ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
add edx esi
add ecx [ ebp - 0xc ]
jmp r-xdata
movzx ebx [ eax ]
mov [ ebp - 0x1 ] bl
movzx ebx [ edx ]
mov [ eax ] bl
mov al [ ebp - 0x1 ]
mov [ edx ] al
lea ebx [ ecx + edi ]
mov eax edx
mov [ ebp - 0x1c ] eax
cmp esi ebx
jge r-xdata
mov eax [ ebp - 0x8 ]
dec eax
dec ebx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x10 ] ebx
test eax eax
jg r-xdata
mov ebx [ ebp - 0x10 ]
cmp edx ebx
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub_403e50
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
sub esp 0x8
cmp [ eax + 0x15 ] 0x0
push esi
mov esi [ esp + 0x10 ]
mov ecx edx
jne r-xdata
mov [ esp + 0x4 ] ecx
cmp ecx edx
je r-xdata
lea esp [ esp ]
mov [ esp + 0x8 ] edx
lea eax [ esp + 0x8 ]
cmp esi [ ecx + 0xc ]
jb r-xdata
mov ecx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
xor eax eax
add esp 0x8
retn
lea edx [ esp + 0xc ]
mov eax rwxdata
call sub_406ac0
mov eax [ eax ]
add esp 0x8
retn
lea eax [ esp + 0x4 ]
jmp r-xdata
cmp [ eax + 0xc ] esi
jae r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
pop esi
cmp [ eax ] edx
je r-xdata
sub_403ee0
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
sub esp 0x8
cmp [ eax + 0x15 ] 0x0
push esi
mov esi [ esp + 0x10 ]
mov ecx edx
jne r-xdata
mov [ esp + 0x4 ] ecx
cmp ecx edx
je r-xdata
lea esp [ esp ]
mov [ esp + 0x8 ] edx
lea eax [ esp + 0x8 ]
cmp esi [ ecx + 0xc ]
jb r-xdata
mov ecx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
xor eax eax
add esp 0x8
retn
lea edx [ esp + 0xc ]
mov eax rwxdata
call sub_406ac0
mov eax [ eax ]
add esp 0x8
retn
lea eax [ esp + 0x4 ]
jmp r-xdata
cmp [ eax + 0xc ] esi
jae r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
pop esi
cmp [ eax ] edx
je r-xdata
sub_403f50
push 0xffffffff
push sub_42a0f8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rwxdata ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov edi [ esp + 0x20 ]
mov [ esp + 0x18 ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ esp + 0x14 ]
mov eax edi
call sub_407470
mov eax [ edi + 0x4 ]
push eax
call sub_40a181
add esp 0x4
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
sub_403fc0
push ecx
push edi
push esi
call sub_403ee0
push esi
mov edi eax
call sub_403e50
add esp 0x8
cmp edi eax
jne r-xdata
lea edx [ esp + 0x4 ]
mov eax rwxdata
mov [ esp + 0x4 ] esi
call sub_406ac0
lea ecx [ edi + 0x1 ]
mov [ eax ] ecx
movzx eax [ edi + esi ]
pop edi
pop ecx
retn
or eax 0xffffffff
pop edi
pop ecx
retn
sub_404000
push ecx
push edi
push esi
call sub_403ee0
push esi
mov edi eax
call sub_403e50
add esp 0x8
cmp edi eax
je r-xdata
pop edi
pop ecx
retn
lea edx [ esp + 0x4 ]
mov eax rwxdata
mov [ esp + 0x4 ] esi
call sub_406ac0
mov dl [ esp + 0xc ]
lea ecx [ edi + 0x1 ]
mov [ eax ] ecx
mov [ edi + esi ] dl
sub_404090
mov ecx [ rwxdata ]
inc ecx
mov [ rwxdata ] ecx
cmp ecx 0x37
jne r-xdata
cmp ecx 0x18
jl r-xdata
xor ecx ecx
mov [ rwxdata ] ecx
mov eax [ ecx * 4 + rwxdata ]
xor eax [ ecx * 4 + rwxdata ]
mov [ ecx * 4 + rwxdata ] eax
retn
mov eax [ ecx * 4 + rwxdata ]
xor eax [ ecx * 4 + rwxdata ]
mov [ ecx * 4 + rwxdata ] eax
retn
sub_4040e0
mov [ rwxdata ] 0x0
xor ecx ecx
mov eax rwxdata
mov [ eax ] ecx
add eax 0x4
add ecx 0x12b9b0a1
cmp eax rwxdata
jl r-xdata
mov ecx 0x7d0
jmp r-xdata
mov eax [ rwxdata ]
inc eax
mov [ rwxdata ] eax
cmp eax 0x37
jne r-xdata
cmp eax 0x18
jl r-xdata
xor eax eax
mov [ rwxdata ] eax
mov edx [ eax * 4 + rwxdata ]
mov edx [ eax * 4 + rwxdata ]
jmp r-xdata
cmp eax 0x18
jl r-xdata
xor eax eax
mov [ rwxdata ] eax
xor [ eax * 4 + rwxdata ] edx
mov eax [ rwxdata ]
inc eax
mov [ rwxdata ] eax
cmp eax 0x37
jne r-xdata
mov edx [ eax * 4 + rwxdata ]
mov edx [ eax * 4 + rwxdata ]
jmp r-xdata
cmp eax 0x18
jl r-xdata
xor eax eax
mov [ rwxdata ] eax
xor [ eax * 4 + rwxdata ] edx
mov eax [ rwxdata ]
inc eax
mov [ rwxdata ] eax
cmp eax 0x37
jne r-xdata
mov edx [ eax * 4 + rwxdata ]
mov edx [ eax * 4 + rwxdata ]
jmp r-xdata
cmp eax 0x18
jl r-xdata
xor eax eax
mov [ rwxdata ] eax
xor [ eax * 4 + rwxdata ] edx
mov eax [ rwxdata ]
inc eax
mov [ rwxdata ] eax
cmp eax 0x37
jne r-xdata
mov edx [ eax * 4 + rwxdata ]
mov edx [ eax * 4 + rwxdata ]
jmp r-xdata
cmp eax 0x18
jl r-xdata
xor eax eax
mov [ rwxdata ] eax
xor [ eax * 4 + rwxdata ] edx
mov eax [ rwxdata ]
inc eax
mov [ rwxdata ] eax
cmp eax 0x37
jne r-xdata
mov edx [ eax * 4 + rwxdata ]
mov edx [ eax * 4 + rwxdata ]
jmp r-xdata
mov eax rwxdata
retn
xor [ eax * 4 + rwxdata ] edx
dec ecx
jne r-xdata
sub_4042e0
cmp [ esp + 0x4 ] 0x0
push ebx
mov bl [ esi + 0x1 ]
push edi
je r-xdata
cmp bl 0x5e
jb r-xdata
cmp bl 0x5e
jb r-xdata
movzx ecx bl
shl ecx 0x4
mov dl [ ecx + rwxdata ]
pop edi
mov [ esi + 0x1 ] dl
pop ebx
retn 0x4
mov bl [ esi + 0x1 ]
movzx edi bl
shl edi 0x4
call sub_404090
cmp eax [ edi + rwxdata ]
jb r-xdata
movzx ecx bl
shl ecx 0x4
mov dl [ ecx + rwxdata ]
pop edi
mov [ esi + 0x1 ] dl
pop ebx
retn 0x4
movzx edi bl
shl edi 0x4
call sub_404090
cmp eax [ edi + rwxdata ]
jb r-xdata
mov al [ edi + rwxdata ]
pop edi
mov [ esi + 0x1 ] al
pop ebx
retn 0x4
mov al [ edi + rwxdata ]
pop edi
mov [ esi + 0x1 ] al
pop ebx
retn 0x4
sub_404380
push 0xffffffff
push sub_42a04e
mov eax [ fs : 0x0 ]
push eax
push ebx
push ebp
push esi
push edi
mov eax [ rwxdata ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x24 ]
xor ebx ebx
mov [ esp + 0x1c ] ebx
mov eax 0x1
mov [ esi + 0x4 ] eax
mov [ esi + 0xc ] eax
mov [ esi ] r--data
mov [ esi + 0x8 ] ebx
mov eax 0x100
lea edi [ esi + 0x10 ]
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
call sub_407050
lea edi [ esi + 0x20 ]
mov [ esp + 0x1c ] 0x1
mov eax 0x10000
mov [ edi ] ebx
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
call sub_407050
push 0x8000006
mov [ esp + 0x20 ] 0x2
call sub_40a4f5
add esp 0x4
cmp eax ebx
je r-xdata
xor eax eax
mov ecx eax
mov edx 0x4000002
nop
mov [ ecx ] bx
add ecx 0x2
dec edx
jns r-xdata
jmp r-xdata
mov [ esi + 0x30 ] eax
mov eax [ esi + 0x10 ]
mov [ esi + 0x34 ] eax
mov [ esi + 0x54 ] ebx
mov ecx [ esi + 0x10 ]
mov [ esi + 0x38 ] ecx
mov [ esi + 0x58 ] ebx
mov edx [ esi + 0x10 ]
mov [ esi + 0x3c ] edx
mov [ esi + 0x5c ] ebx
mov eax [ esi + 0x10 ]
mov [ esi + 0x40 ] eax
mov [ esi + 0x60 ] ebx
mov ecx [ esi + 0x10 ]
mov [ esi + 0x44 ] ecx
mov [ esi + 0x64 ] ebx
mov edx [ esi + 0x10 ]
mov [ esi + 0x48 ] edx
mov [ esi + 0x68 ] ebx
mov eax [ esi + 0x10 ]
mov [ esi + 0x4c ] eax
mov [ esi + 0x6c ] ebx
mov ecx [ esi + 0x10 ]
mov [ esi + 0x50 ] ecx
mov [ esi + 0x70 ] ebx
mov eax esi
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x4
sub_404480
push esi
mov esi ecx
mov eax [ esi + 0x30 ]
push edi
push eax
call sub_40afbf
mov eax [ esi + 0x20 ]
xor edi edi
add esp 0x4
cmp eax edi
je r-xdata
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov eax [ esi + 0x10 ]
cmp eax edi
je r-xdata
push eax
call sub_40a181
add esp 0x4
test [ esp + 0xc ] 0x1
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi ] r--data
je r-xdata
push eax
call sub_40a181
add esp 0x4
pop edi
mov eax esi
pop esi
retn 0x4
push esi
call sub_40a181
add esp 0x4
sub_404500
mov eax [ esi + 0x30 ]
push edi
push eax
call sub_40afbf
mov eax [ esi + 0x20 ]
xor edi edi
add esp 0x4
cmp eax edi
je r-xdata
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov eax [ esi + 0x10 ]
cmp eax edi
je r-xdata
push eax
call sub_40a181
add esp 0x4
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi ] r--data
pop edi
retn
push eax
call sub_40a181
add esp 0x4
sub_404550
mov eax [ ecx + 0x34 ]
movzx edx [ eax + 0x1 ]
push esi
mov eax [ esp + 0x8 ]
shl edx 0x4
movzx edx [ edx + rwxdata ]
add [ eax ] edx
mov edx [ ecx + 0x34 ]
movzx edx [ edx + 0x1 ]
shl edx 0x4
movzx esi [ edx + rwxdata ]
mov edx [ esp + 0xc ]
add [ edx ] esi
mov esi [ ecx + 0x38 ]
movzx esi [ esi + 0x1 ]
shl esi 0x4
movzx esi [ esi + rwxdata ]
add esi esi
add esi esi
add [ eax ] esi
mov esi [ ecx + 0x38 ]
movzx esi [ esi + 0x1 ]
shl esi 0x4
movzx esi [ esi + rwxdata ]
add esi esi
add esi esi
add [ edx ] esi
mov esi [ ecx + 0x3c ]
movzx esi [ esi + 0x1 ]
shl esi 0x4
movzx esi [ esi + rwxdata ]
lea esi [ esi + esi * 8 ]
add [ eax ] esi
mov esi [ ecx + 0x3c ]
movzx esi [ esi + 0x1 ]
shl esi 0x4
movzx esi [ esi + rwxdata ]
lea esi [ esi + esi * 8 ]
add [ edx ] esi
mov esi [ ecx + 0x40 ]
movzx esi [ esi + 0x1 ]
shl esi 0x4
movzx esi [ esi + rwxdata ]
shl esi 0x4
add [ eax ] esi
mov esi [ ecx + 0x40 ]
movzx esi [ esi + 0x1 ]
shl esi 0x4
movzx esi [ esi + rwxdata ]
shl esi 0x4
add [ edx ] esi
mov esi [ ecx + 0x44 ]
movzx esi [ esi + 0x1 ]
shl esi 0x4
movzx esi [ esi + rwxdata ]
imul esi esi 0x19
add [ eax ] esi
mov esi [ ecx + 0x44 ]
movzx esi [ esi + 0x1 ]
shl esi 0x4
movzx esi [ esi + rwxdata ]
imul esi esi 0x19
add [ edx ] esi
mov esi [ ecx + 0x48 ]
movzx esi [ esi + 0x1 ]
shl esi 0x4
movzx esi [ esi + rwxdata ]
lea esi [ esi + esi * 8 ]
add esi esi
add esi esi
add [ eax ] esi
mov esi [ ecx + 0x48 ]
movzx esi [ esi + 0x1 ]
shl esi 0x4
movzx esi [ esi + rwxdata ]
lea esi [ esi + esi * 8 ]
add esi esi
add esi esi
add [ edx ] esi
mov esi [ ecx + 0x4c ]
movzx esi [ esi + 0x1 ]
shl esi 0x4
movzx esi [ esi + rwxdata ]
imul esi esi 0x31
add [ eax ] esi
mov esi [ ecx + 0x4c ]
movzx esi [ esi + 0x1 ]
shl esi 0x4
movzx esi [ esi + rwxdata ]
imul esi esi 0x31
add [ edx ] esi
mov esi [ ecx + 0x50 ]
movzx esi [ esi + 0x1 ]
shl esi 0x4
movzx esi [ esi + rwxdata ]
shl esi 0x6
add [ eax ] esi
mov eax [ ecx + 0x50 ]
movzx ecx [ eax + 0x1 ]
shl ecx 0x4
movzx eax [ ecx + rwxdata ]
shl eax 0x6
add [ edx ] eax
pop esi
retn 0x8
sub_4046d0
push ebx
push ebp
push esi
mov esi ecx
push edi
mov ebx 0x7
lea ebp [ esi + 0x50 ]
mov edi edi
cmp cl 0x5e
jb r-xdata
cmp cl 0x5e
jb r-xdata
movzx eax cl
shl eax 0x4
mov cl [ eax + rwxdata ]
mov eax [ rwxdata ]
inc eax
mov [ rwxdata ] eax
cmp eax 0x37
jne r-xdata
movzx eax cl
shl eax 0x4
mov cl [ eax + rwxdata ]
jmp r-xdata
mov eax [ rwxdata ]
inc eax
mov [ rwxdata ] eax
cmp eax 0x37
jne r-xdata
cmp [ esp + 0x14 ] 0x0
mov edx [ esi + ebx * 4 + 0x34 ]
mov cl [ edx + 0x1 ]
je r-xdata
sub ebp 0x4
dec ebx
jns r-xdata
cmp eax 0x18
jl r-xdata
xor eax eax
mov [ rwxdata ] eax
mov [ edx + 0x1 ] cl
mov edx [ ebp ]
movzx eax [ edx + 0x1 ]
shl eax 0x4
movzx ecx [ eax + rwxdata ]
movzx edx [ eax + rwxdata ]
add ecx edx
imul ecx ebx
cmp ecx 0x64
jg r-xdata
cmp eax 0x18
jl r-xdata
xor eax eax
mov [ rwxdata ] eax
cmp cl 0x5e
jb r-xdata
cmp cl 0x5e
jb r-xdata
cmp [ esp + 0x14 ] 0x0
mov edx [ ebp ]
mov cl [ edx + 0x1 ]
je r-xdata
jmp r-xdata
lea ecx [ eax * 4 + rwxdata ]
mov eax [ eax * 4 + rwxdata ]
lea ecx [ eax * 4 + rwxdata ]
mov eax [ eax * 4 + rwxdata ]
jmp r-xdata
mov cl [ eax + rwxdata ]
jmp r-xdata
lea ecx [ eax * 4 + rwxdata ]
mov eax [ eax * 4 + rwxdata ]
lea ecx [ eax * 4 + rwxdata ]
mov eax [ eax * 4 + rwxdata ]
jmp r-xdata
mov cl [ eax + rwxdata ]
jmp r-xdata
movzx eax cl
shl eax 0x4
mov cl [ eax + rwxdata ]
mov eax [ rwxdata ]
inc eax
mov [ rwxdata ] eax
cmp eax 0x37
jne r-xdata
movzx eax cl
shl eax 0x4
mov cl [ eax + rwxdata ]
jmp r-xdata
mov eax [ rwxdata ]
inc eax
mov [ rwxdata ] eax
cmp eax 0x37
jne r-xdata
mov edx [ esi + 0xc ]
mov ecx [ esp + 0x14 ]
lea eax [ ecx + edx * 2 ]
mov [ esi + 0xc ] eax
cmp eax 0x35
jl r-xdata
xor [ ecx ] eax
mov edi [ ecx ]
mov cl [ edx + 0x1 ]
movzx eax cl
shl eax 0x4
cmp edi [ eax + rwxdata ]
jb r-xdata
xor [ ecx ] eax
mov edi [ ecx ]
mov cl [ edx + 0x1 ]
movzx eax cl
shl eax 0x4
cmp edi [ eax + rwxdata ]
jb r-xdata
mov eax [ esi + 0x4 ]
lea eax [ ecx + eax * 2 ]
mov [ esi + 0x4 ] eax
cmp eax 0x100
jl r-xdata
add eax 0xffffffcb
mov [ esi + 0xc ] eax
cmp eax 0x18
jl r-xdata
xor eax eax
mov [ rwxdata ] eax
mov [ edx + 0x1 ] cl
cmp eax 0x18
jl r-xdata
xor eax eax
mov [ rwxdata ] eax
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x10 ]
lea edx [ ecx + eax * 2 ]
mov ecx [ esi + 0x8 ]
shl ecx 0x8
mov [ esi + 0x34 ] edx
mov edx [ esi + 0x20 ]
add ecx eax
lea eax [ edx + ecx * 2 ]
mov [ esi + 0x38 ] eax
lea ebp [ esi + 0x30 ]
lea edi [ esi + 0x3c ]
mov ebx 0x6
jmp r-xdata
mov ecx [ esi + 0x6c ]
add ecx eax
imul ecx ecx 0x3ade81d5
mov [ esi + 0x70 ] ecx
mov edx [ esi + 0x4 ]
add edx [ esi + 0x68 ]
imul edx edx 0x3ade81d5
mov [ esi + 0x6c ] edx
mov eax [ esi + 0x4 ]
add eax [ esi + 0x64 ]
imul eax eax 0x3ade81d5
mov [ esi + 0x68 ] eax
mov ecx [ esi + 0x4 ]
add ecx [ esi + 0x60 ]
imul ecx ecx 0x3ade81d5
mov [ esi + 0x64 ] ecx
mov edx [ esi + 0x4 ]
add edx [ esi + 0x5c ]
mov ecx [ esi + 0x54 ]
imul edx edx 0x3ade81d5
mov [ esi + 0x60 ] edx
mov eax [ esi + 0x4 ]
add eax [ esi + 0x58 ]
imul eax eax 0x3ade81d5
mov [ esi + 0x5c ] eax
add ecx [ esi + 0x4 ]
mov eax 0x1
imul ecx ecx 0x3ade81d5
mov [ esi + 0x58 ] ecx
mov edx [ esi + 0x4 ]
sub edx 0x100
mov [ esi + 0x8 ] edx
mov [ esi + 0x4 ] eax
mov [ esi + 0xc ] eax
lea ecx [ eax * 4 + rwxdata ]
mov eax [ eax * 4 + rwxdata ]
lea ecx [ eax * 4 + rwxdata ]
mov eax [ eax * 4 + rwxdata ]
jmp r-xdata
mov cl [ eax + rwxdata ]
jmp r-xdata
lea ecx [ eax * 4 + rwxdata ]
mov eax [ eax * 4 + rwxdata ]
lea ecx [ eax * 4 + rwxdata ]
mov eax [ eax * 4 + rwxdata ]
jmp r-xdata
mov cl [ eax + rwxdata ]
jmp r-xdata
mov ecx [ esi + 0x4 ]
shl ecx 0x18
add ecx [ edi + 0x20 ]
push ebp
add ecx [ esi + 0xc ]
call sub_408920
mov [ edi ] eax
add edi 0x4
dec ebx
jne r-xdata
xor [ ecx ] eax
mov edi [ ecx ]
mov cl [ edx + 0x1 ]
movzx eax cl
shl eax 0x4
cmp edi [ eax + rwxdata ]
jb r-xdata
xor [ ecx ] eax
mov edi [ ecx ]
mov cl [ edx + 0x1 ]
movzx eax cl
shl eax 0x4
cmp edi [ eax + rwxdata ]
jb r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
sub_4049e0
push 0xffffffff
push sub_42a013
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov edi [ esp + 0x20 ]
xor ebx ebx
mov [ esp + 0x18 ] ebx
lea esi [ edi + 0x4 ]
mov [ edi ] r--data
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
call sub_407130
lea esi [ edi + 0x14 ]
mov [ esp + 0x18 ] 0x1
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
call sub_407200
mov [ edi + 0x24 ] ebx
mov [ edi + 0x28 ] ebx
mov [ edi + 0x2c ] ebx
mov [ edi + 0x30 ] ebx
mov [ edi + 0x34 ] ebx
mov eax edi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0xc
retn 0x4
sub_404a60
mov edx ecx
push esi
mov esi [ edx + 0x34 ]
test esi esi
je r-xdata
pop esi
retn 0x8
mov eax esi
sub eax [ edx + 0x30 ]
cmp eax 0x3e8
jle r-xdata
imul eax eax
lea eax [ eax + eax * 2 ]
mov eax 0x2dc6c0
jmp r-xdata
add [ ecx ] eax
mov ecx [ esp + 0x8 ]
mov cl 0x7
sub cl [ edx + 0x2c ]
mov edx [ edx + 0x4 ]
mov dl [ esi + edx ]
shr dl cl
mov ecx [ esp + 0xc ]
test dl 0x1
jne r-xdata
sub_404ab0
push ebp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
add eax [ esi + 0x28 ]
xor ebp ebp
mov cl [ eax ]
add cl cl
add cl [ esp + 0xc ]
push edi
mov [ eax ] cl
inc [ esi + 0x2c ]
mov eax [ esi + 0x34 ]
mov edx [ esi + 0x2c ]
cmp eax ebp
je r-xdata
cmp edx 0x8
jne r-xdata
mov edi [ esi + 0x4 ]
mov al [ eax + edi ]
mov cl 0x8
sub cl dl
shr al cl
mov ecx [ esi + 0x28 ]
cmp al [ edi + ecx ]
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov ecx [ esi + 0x24 ]
mov eax [ esi + 0x28 ]
imul ecx ecx 0x75bcd170
push ebx
mov ebx [ esi + 0x4 ]
mov [ esi + 0x2c ] ebp
movzx edx [ ebx + eax ]
lea edx [ edx + ecx + 0x1 ]
inc eax
mov [ esi + 0x24 ] edx
mov [ esi + 0x28 ] eax
mov ecx [ esi + 0x8 ]
sub ecx ebx
cmp eax ecx
jne r-xdata
mov [ esi + 0x34 ] ebp
mov [ esi + 0x30 ] ebp
mov eax [ esi + 0x34 ]
cmp eax ebp
je r-xdata
mov [ esi + 0x28 ] ebp
mov ecx [ esi + 0x18 ]
sub ecx [ esi + 0x14 ]
mov edi edx
mov eax 0x55555556
imul ecx
mov ecx edi
mov eax edx
shr eax 0x1f
lea eax [ edx + eax - 0x1 ]
shr ecx 0x10
xor ecx edi
and eax ecx
lea edi [ eax + eax * 2 ]
add edi [ esi + 0x14 ]
movzx eax [ edi + 0x2 ]
movzx ecx [ edi + 0x1 ]
movzx edx [ edi ]
shl eax 0x8
or eax ecx
shl eax 0x8
or eax edx
mov [ esi + 0x34 ] eax
jle r-xdata
pop ebx
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x34 ]
cmp eax [ esi + 0x30 ]
jne r-xdata
mov ebp [ esi + 0x28 ]
mov [ esi + 0x30 ] eax
test eax eax
jle r-xdata
mov eax [ esi + 0x28 ]
mov ecx eax
sar ecx 0x8
mov [ esp + 0x14 ] al
mov [ esp + 0x15 ] cl
mov dx [ esp + 0x14 ]
sar eax 0x10
mov [ edi ] dx
mov [ edi + 0x2 ] al
pop ebx
mov [ esi + 0x34 ] ebp
mov [ esi + 0x30 ] ebp
xor ebp ebp
lea ecx [ ebp + 0x1 ]
mov eax [ esi + 0x30 ]
cmp eax ecx
je r-xdata
mov dl [ eax + ebx - 0x1 ]
cmp dl [ ebx + ecx - 0x2 ]
jne r-xdata
dec eax
dec ebp
dec ecx
mov [ esi + 0x30 ] eax
test eax eax
jg r-xdata
test ebp ebp
jle r-xdata
sub_404be0
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
push eax
call sub_40a181
add esp 0x4
test [ esp + 0xc ] 0x1
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi ] r--data
je r-xdata
push eax
call sub_40a181
add esp 0x4
pop edi
mov eax esi
pop esi
retn 0x4
push esi
call sub_40a181
add esp 0x4
sub_404c40
mov eax [ esi + 0x14 ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
push eax
call sub_40a181
add esp 0x4
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi ] r--data
pop edi
retn
push eax
call sub_40a181
add esp 0x4
sub_404c80
push ebx
xor ebx ebx
push edi
push 0x2000006
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
lea edi [ esi + 0x10 ]
call sub_40a4f5
add esp 0x4
cmp eax ebx
je r-xdata
xor eax eax
mov ecx eax
mov edx 0x1000002
lea ebx [ ebx ]
mov [ ecx ] bx
add ecx 0x2
dec edx
jns r-xdata
jmp r-xdata
mov [ edi ] eax
push edi
xor ecx ecx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] 0x1
mov [ esi + 0x1c ] 0x1
call sub_4089c0
push edi
xor ecx ecx
mov [ esi + 0x20 ] eax
call sub_4089c0
pop edi
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] ebx
mov eax esi
pop ebx
retn
sub_404cf0
cmp [ eax + 0x28 ] 0x5
jl r-xdata
retn
mov ecx [ eax + 0xc ]
push edi
mov edi [ eax + 0x20 ]
movzx edi [ edi + 0x1 ]
shl edi 0x4
movzx edi [ edi + rwxdata ]
inc ecx
imul ecx ecx
imul edi ecx
add [ esi ] edi
mov edi [ eax + 0x20 ]
movzx edi [ edi + 0x1 ]
shl edi 0x4
movzx edi [ edi + rwxdata ]
imul edi ecx
add [ edx ] edi
mov edi [ eax + 0xc ]
mov ecx [ eax + 0x8 ]
lea ecx [ ecx + edi + 0x2 ]
mov edi [ eax + 0x24 ]
imul ecx ecx
movzx edi [ edi + 0x1 ]
shl edi 0x4
movzx edi [ edi + rwxdata ]
imul edi ecx
add [ esi ] edi
mov eax [ eax + 0x24 ]
movzx eax [ eax + 0x1 ]
shl eax 0x4
movzx eax [ eax + rwxdata ]
imul eax ecx
add [ edx ] eax
pop edi
sub_404d70
cmp [ edi + 0x28 ] 0x5
push ebx
mov ebx [ esp + 0x8 ]
push esi
jl r-xdata
mov ecx [ edi + 0x1c ]
mov eax [ edi + 0x18 ]
lea ecx [ ebx + ecx * 2 ]
lea eax [ ebx + eax * 2 ]
mov [ edi + 0x18 ] eax
mov [ edi + 0x1c ] ecx
cmp ecx 0x3b
jl r-xdata
mov esi [ edi + 0x24 ]
push ebx
call sub_4042e0
mov eax [ edi + 0x24 ]
movzx eax [ eax + 0x1 ]
shl eax 0x4
movzx ecx [ eax + rwxdata ]
movzx edx [ eax + rwxdata ]
add ecx edx
cmp ecx 0x64
jge r-xdata
cmp eax 0x100
jl r-xdata
add ecx 0xffffffc5
mov [ edi + 0x1c ] ecx
mov esi [ edi + 0x20 ]
push ebx
call sub_4042e0
cmp [ edi + 0x28 ] 0x5
jl r-xdata
mov ecx [ edi + 0x28 ]
add eax 0xffffff00
xor esi esi
mov [ edi + 0x18 ] eax
cmp ecx esi
jle r-xdata
pop esi
pop ebx
retn 0x4
mov esi [ edi + 0x14 ]
mov ecx [ edi + 0x4 ]
imul esi esi 0x149ace2f
mov edx [ edi + 0x18 ]
imul ecx ecx 0x75bcd17
add esi ecx
shl edx 0x18
add esi edx
add esi [ edi + 0x1c ]
lea ebx [ edi + 0x10 ]
push ebx
mov ecx esi
call sub_4089c0
mov ecx [ edi ]
add ecx esi
push ebx
mov [ edi + 0x20 ] eax
call sub_4089c0
mov [ edi + 0x24 ] eax
push eax
call sub_40a9d8
add esp 0x4
mov ebx 0x1
test eax eax
je r-xdata
cmp eax 0x7f
jg r-xdata
mov eax [ edi + 0x4 ]
cmp eax esi
je r-xdata
mov edx [ edi + 0x18 ]
push edx
call sub_40a7f4
add eax [ edi + 0x4 ]
add [ edi + 0xc ] ebx
imul eax eax 0x204a0a90
mov ecx 0xdfb5f570
sub ecx eax
add esp 0x4
cmp [ edi + 0xc ] 0x8
mov [ edi + 0x4 ] ecx
jle r-xdata
dec ecx
mov [ edi + 0x28 ] ecx
cmp eax 0x20
jge r-xdata
mov eax [ edi + 0x18 ]
mov [ edi + 0x14 ] eax
mov [ edi + 0x18 ] ebx
mov [ edi + 0x1c ] ebx
mov edx [ edi + 0xc ]
mov [ edi + 0x8 ] edx
mov [ edi + 0xc ] esi
mov [ edi ] eax
mov [ edi + 0x4 ] esi
mov eax [ edi + 0x28 ]
cmp eax 0xa
jge r-xdata
mov [ edi + 0xc ] 0x8
cmp eax 0xa
je r-xdata
inc eax
mov [ edi + 0x28 ] eax
jmp r-xdata
cmp eax 0xd
je r-xdata
cmp eax 0x9
je r-xdata
sub_404ed0
push 0xffffffff
push sub_429fde
mov eax [ fs : 0x0 ]
push eax
push ebx
push ebp
push esi
push edi
mov eax [ rwxdata ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov ebp [ esp + 0x24 ]
xor ebx ebx
mov [ esp + 0x1c ] ebx
lea esi [ ebp + 0x4 ]
mov [ ebp ] r--data
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
call sub_407320
mov [ esp + 0x1c ] 0x1
push 0x10006
mov [ ebp + 0x14 ] ebx
mov [ ebp + 0x18 ] 0x1
mov [ ebp + 0x1c ] ebx
mov [ ebp + 0x20 ] ebx
mov [ ebp + 0x24 ] ebx
lea esi [ ebp + 0x28 ]
call sub_40a4f5
add esp 0x4
cmp eax ebx
je r-xdata
xor eax eax
mov ecx eax
mov edx 0x8002
mov [ ecx ] bx
add ecx 0x2
dec edx
jns r-xdata
jmp r-xdata
mov [ esi ] eax
lea edi [ ebp + 0x2c ]
mov [ esp + 0x1c ] 0x2
mov eax 0x800
mov [ edi ] ebx
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
call sub_407050
push esi
xor ecx ecx
call sub_408a60
mov [ ebp + 0x3c ] eax
mov eax [ edi ]
mov [ ebp + 0x40 ] eax
mov eax ebp
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x4
sub_404fa0
cmp [ ecx + 0x1c ] 0x0
jle r-xdata
retn 0x8
mov eax [ ecx + 0x3c ]
movzx edx [ eax + 0x1 ]
mov eax [ esp + 0x4 ]
shl edx 0x4
movzx edx [ edx + rwxdata ]
shl edx 0x4
add [ eax ] edx
mov edx [ ecx + 0x3c ]
movzx edx [ edx + 0x1 ]
push esi
shl edx 0x4
movzx esi [ edx + rwxdata ]
mov edx [ esp + 0xc ]
shl esi 0x4
add [ edx ] esi
mov esi [ ecx + 0x40 ]
movzx esi [ esi + 0x1 ]
shl esi 0x4
movzx esi [ esi + rwxdata ]
add esi esi
add esi esi
add [ eax ] esi
mov eax [ ecx + 0x40 ]
movzx ecx [ eax + 0x1 ]
shl ecx 0x4
movzx eax [ ecx + rwxdata ]
add eax eax
add eax eax
add [ edx ] eax
pop esi
sub_405010
push ebp
push esi
push edi
mov edi ecx
mov ebp 0x1
add [ edi + 0x20 ] ebp
mov eax [ edi + 0x20 ]
xor ecx ecx
cmp eax [ edi + 0x1c ]
jl r-xdata
mov eax [ edi + 0x24 ]
cmp eax ecx
jle r-xdata
mov [ edi + 0x20 ] ecx
mov esi [ edi + 0x3c ]
push ebx
mov ebx [ esp + 0x14 ]
push ebx
call sub_4042e0
mov esi [ edi + 0x40 ]
push ebx
call sub_4042e0
mov eax [ edi + 0x18 ]
mov edx [ edi + 0x4 ]
add [ edi + 0x14 ] ebp
lea eax [ ebx + eax * 2 ]
and eax 0xff
lea ecx [ eax + eax * 2 ]
lea ecx [ edx + ecx * 4 ]
mov [ edi + 0x18 ] eax
mov edx [ ecx + 0x8 ]
mov eax [ ecx ]
lea ebx [ eax + edx ]
cmp ebx [ edi + 0x14 ]
pop ebx
jne r-xdata
dec eax
mov [ edi + 0x24 ] eax
cmp eax ecx
jne r-xdata
mov [ ecx + 0x4 ] ebp
mov edx [ edi + 0x14 ]
sub edx eax
mov [ ecx + 0x8 ] edx
add [ ecx + 0x4 ] ebp
mov eax [ ecx + 0x4 ]
cmp eax 0x3
jle r-xdata
mov [ edi + 0x1c ] ecx
mov eax [ edi + 0x14 ]
mov [ ecx ] eax
mov ecx [ edi + 0x18 ]
mov eax [ edi + 0x20 ]
imul ecx ecx 0x343f0b05
lea edx [ eax + eax * 2 ]
lea eax [ edi + 0x28 ]
add ecx edx
push eax
call sub_408a60
mov ecx [ edi + 0x20 ]
mov edx [ edi + 0x2c ]
mov [ edi + 0x3c ] eax
and ecx 0x7ff
lea eax [ edx + ecx * 2 ]
mov [ edi + 0x40 ] eax
pop edi
pop esi
pop ebp
retn 0x4
cmp edx 0x8
jle r-xdata
imul eax edx
cmp eax [ edi + 0x24 ]
jle r-xdata
mov [ edi + 0x24 ] eax
mov esi [ ecx + 0x8 ]
cmp [ edi + 0x1c ] esi
je r-xdata
mov eax [ edi + 0x14 ]
cdq
idiv esi
mov [ edi + 0x1c ] esi
mov [ edi + 0x20 ] edx
jmp r-xdata
sub_405100
push esi
mov esi ecx
mov eax [ esi + 0x2c ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov eax [ esi + 0x28 ]
push eax
call sub_40afbf
mov eax [ esi + 0x4 ]
add esp 0x4
cmp eax edi
je r-xdata
push eax
call sub_40a181
add esp 0x4
test [ esp + 0xc ] 0x1
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi ] r--data
je r-xdata
push eax
call sub_40a181
add esp 0x4
pop edi
mov eax esi
pop esi
retn 0x4
push esi
call sub_40a181
add esp 0x4
sub_405170
mov eax [ esi + 0x2c ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov eax [ esi + 0x28 ]
push eax
call sub_40afbf
mov eax [ esi + 0x4 ]
add esp 0x4
cmp eax edi
je r-xdata
push eax
call sub_40a181
add esp 0x4
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi ] r--data
pop edi
retn
push eax
call sub_40a181
add esp 0x4
sub_405220
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push esi
xor esi esi
mov [ esp + 0x4 ] esi
test eax eax
jns r-xdata
mov eax 0x3ff
jmp r-xdata
mov [ esi * 2 + rwxdata ] ax
inc esi
mov [ esp + 0x4 ] esi
cmp esi 0x1000
jl r-xdata
xor eax eax
fild [ esp + 0x4 ]
fld [ r--data ]
fadd st1
fld [ r--data ]
fsubrp st2
fdivrp st1
call sub_421720
fmul [ r--data ]
fadd [ r--data ]
call sub_421630
cmp eax 0x3ff
jle r-xdata
mov eax rwxdata
pop esi
mov esp ebp
pop ebp
retn
sub_405290
sub esp 0x8
push ebx
push ebp
push esi
push edi
mov edi eax
mov edx [ edi + 0xd8 ]
mov edx [ edx ]
mov eax 0x1
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] eax
mov eax [ edi + 0x4 ]
mov [ edi + 0x11c ] eax
lea eax [ esp + 0x10 ]
lea ecx [ edi + 0xd8 ]
push eax
lea eax [ esp + 0x18 ]
push eax
call edx
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
lea edx [ eax + eax ]
xor ebx ebx
cmp ecx edx
setg bl
xor edx edx
add ecx ecx
cmp ecx eax
mov eax [ edi + 0x11c ]
setg dl
lea eax [ eax + eax * 2 ]
lea ecx [ edi + 0x74 ]
add ebx edx
mov edx [ ecx ]
mov edx [ edx ]
add ebx eax
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov [ edi + 0x11c ] ebx
call edx
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
lea edx [ eax * 4 ]
xor ebx ebx
cmp ecx edx
setg bl
add ecx ecx
xor edx edx
add ecx ecx
cmp ecx eax
mov eax [ edi + 0x11c ]
setg dl
lea eax [ eax + eax * 2 ]
lea esi [ esp + 0x14 ]
add ebx edx
add ebx eax
lea eax [ edi + 0xac ]
lea edx [ esp + 0x10 ]
mov [ edi + 0x11c ] ebx
call sub_404cf0
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
lea edx [ eax * 8 ]
xor ebx ebx
cmp ecx edx
setg bl
add ecx ecx
add ecx ecx
xor edx edx
add ecx ecx
cmp ecx eax
mov eax [ edi + 0x11c ]
setg dl
lea eax [ eax + eax * 2 ]
add ebx edx
mov edx [ edi ]
add ebx eax
lea eax [ esp + 0x10 ]
mov [ edi + 0x11c ] ebx
push eax
mov edx [ edx ]
mov ecx esi
push ecx
mov ecx edi
call edx
mov ecx [ esp + 0x10 ]
mov esi [ esp + 0x14 ]
xor edx edx
mov eax ecx
shl eax 0x4
cmp esi eax
setg dl
mov eax esi
shl eax 0x4
xor ebx ebx
cmp eax ecx
mov eax [ edi + 0x11c ]
setg bl
lea eax [ eax + eax * 2 ]
add esi ecx
add edx ebx
add edx eax
mov [ edi + 0x11c ] edx
cmp esi 0x7fff
jle r-xdata
mov eax ecx
imul eax eax 0xffff
cdq
idiv esi
movzx ebx ax
mov ecx ebx
shr ecx 0x4
movzx eax [ ecx * 2 + rwxdata ]
mov esi eax
and esi 0x8000001f
mov [ edi + 0x120 ] eax
jns r-xdata
mov eax ecx
cdq
and edx 0xf
lea ecx [ edx + eax ]
mov eax esi
cdq
and edx 0xf
lea esi [ edx + eax ]
sar esi 0x4
sar ecx 0x4
cmp esi 0x7fff
jg r-xdata
mov edi [ edi + 0x11c ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov ecx edi
shl ecx 0x5
add ecx eax
add ecx edi
movzx eax [ ecx + ecx + rwxdata ]
movzx edi [ ecx + ecx + rwxdata ]
imul eax eax 0x3fffc0
add ecx ecx
add eax 0xffff
xor edx edx
shl edi 0x6
add edi 0x2
div edi
movzx ebp [ ecx + rwxdata ]
mov edx 0x20
sub edx esi
shl ebp 0x6
add ebp 0x2
movzx edi ax
movzx eax [ ecx + rwxdata ]
imul edi edx
imul eax eax 0x3fffc0
add eax 0xffff
xor edx edx
div ebp
movzx eax ax
imul eax esi
add eax edi
cdq
and edx 0x1f
lea ecx [ edx + eax ]
sar ecx 0x5
lea eax [ ebx + ecx * 2 ]
add eax ecx
cdq
pop edi
and edx 0x3
pop esi
add eax edx
pop ebp
sar eax 0x2
pop ebx
add esp 0x8
retn
dec esi
or esi 0xffffffe0
inc esi
sub_4054c0
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi eax
mov eax [ esi ]
mov edx [ eax + 0x4 ]
push edi
push ebx
mov ecx esi
call edx
mov eax [ esi + 0x74 ]
mov edx [ eax + 0x4 ]
lea ecx [ esi + 0x74 ]
push ebx
call edx
push ebx
lea edi [ esi + 0xac ]
call sub_404d70
mov eax [ esi + 0xd8 ]
mov edx [ eax + 0x4 ]
lea ecx [ esi + 0xd8 ]
push ebx
call edx
mov eax [ esi + 0x120 ]
cdq
and edx 0x1f
lea ecx [ edx + eax ]
mov eax [ esi + 0x11c ]
mov edx eax
shl edx 0x5
sar ecx 0x5
add edx eax
add ecx edx
lea eax [ ecx * 2 + rwxdata ]
mov cl 0x1
test ebx ebx
je r-xdata
add [ eax + 0x1 ] cl
mov dl [ eax + 0x1 ]
cmp dl 0xfe
jbe r-xdata
add [ eax ] cl
mov eax [ esi + 0x120 ]
mov esi [ esi + 0x11c ]
cdq
and edx 0x1f
add eax edx
mov edx esi
shl edx 0x5
sar eax 0x5
add edx esi
pop edi
add eax edx
pop esi
test ebx ebx
lea eax [ eax * 2 + rwxdata ]
pop ebx
je r-xdata
shr [ eax ] 0x1
shr dl 0x1
mov [ eax + 0x1 ] dl
add [ eax + 0x1 ] cl
mov cl [ eax + 0x1 ]
cmp cl 0xfe
jbe r-xdata
add [ eax ] cl
retn 0x4
shr [ eax ] 0x1
shr cl 0x1
mov [ eax + 0x1 ] cl
sub_405580
push 0xffffffff
push sub_42a0d3
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push ebp
push esi
push edi
mov eax [ rwxdata ]
xor eax esp
push eax
lea eax [ esp + 0x20 ]
mov [ fs : 0x0 ] eax
mov ebp [ esp + 0x30 ]
push ebp
call sub_404380
xor ebx ebx
lea edi [ ebp + 0x74 ]
mov [ esp + 0x28 ] ebx
mov [ esp + 0x1c ] edi
mov [ esp + 0x28 ] 0x1
lea esi [ edi + 0x4 ]
mov [ edi ] r--data
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
call sub_407130
lea esi [ edi + 0x14 ]
mov [ esp + 0x28 ] 0x2
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
call sub_407200
mov [ edi + 0x24 ] ebx
mov [ edi + 0x28 ] ebx
mov [ edi + 0x2c ] ebx
mov [ edi + 0x30 ] ebx
mov [ edi + 0x34 ] ebx
lea esi [ ebp + 0xac ]
mov [ esp + 0x28 ] 0x3
call sub_404c80
add ebp 0xd8
push ebp
mov [ esp + 0x2c ] 0x4
call sub_404ed0
mov edi 0x1
lea ecx [ ebx + 0x21 ]
mov ebp 0xfff
mov [ esp + 0x14 ] 0xfff0000
mov [ esp + 0x1c ] edi
mov eax ebx
imul eax ebp
add eax 0x800
cdq
and edx 0xfff
add eax edx
dec ecx
sar eax 0xc
cmp ecx esi
jl r-xdata
mov ebx 0xfe
sub [ esp + 0x14 ] 0x10000
inc edi
dec ebp
mov ecx esi
mov [ esp + 0x1c ] edi
cmp edi 0x1000
jle r-xdata
lea edi [ ecx * 2 + rwxdata ]
sub ecx esi
inc ecx
mov [ esp + 0x18 ] ecx
lea esp [ esp ]
mov eax [ esp + 0x14 ]
cdq
and edx 0xfff
add eax edx
sar eax 0xc
cdq
and edx 0xf
add eax edx
sar eax 0x4
movzx eax [ eax * 2 + rwxdata ]
add eax 0x10
cdq
lea ebx [ ebp + 0x1 ]
imul ebx edi
and edx 0x1f
lea esi [ edx + eax ]
mov eax 0x1000000
cdq
idiv ebx
sar esi 0x5
lea ebx [ eax + 0x1 ]
cmp ebx 0xfe
jle r-xdata
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn 0x4
mov [ ecx + 0x1 ] bl
mov [ ecx ] al
add ecx 0x42
dec edx
jne r-xdata
sub edi 0x2
dec [ esp + 0x18 ]
jne r-xdata
mov ecx edi
mov edx 0x5100
mov edi [ esp + 0x1c ]
sub_405720
mov eax [ esi + 0x104 ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov [ esi + 0x104 ] edi
mov [ esi + 0x108 ] edi
mov [ esi + 0x10c ] edi
mov eax [ esi + 0x100 ]
push eax
call sub_40afbf
mov eax [ esi + 0xdc ]
add esp 0x4
cmp eax edi
je r-xdata
push eax
call sub_40a181
add esp 0x4
mov [ esi + 0xdc ] edi
mov [ esi + 0xe0 ] edi
mov [ esi + 0xe4 ] edi
mov [ esi + 0xd8 ] r--data
mov ecx [ esi + 0xbc ]
push ecx
call sub_40afbf
mov eax [ esi + 0x88 ]
add esp 0x4
cmp eax edi
je r-xdata
push eax
call sub_40a181
add esp 0x4
mov [ esi + 0x88 ] edi
mov [ esi + 0x8c ] edi
mov [ esi + 0x90 ] edi
mov eax [ esi + 0x78 ]
cmp eax edi
je r-xdata
push eax
call sub_40a181
add esp 0x4
mov [ esi + 0x78 ] edi
mov [ esi + 0x7c ] edi
mov [ esi + 0x80 ] edi
mov [ esi + 0x74 ] r--data
mov edx [ esi + 0x30 ]
push edx
call sub_40afbf
mov eax [ esi + 0x20 ]
add esp 0x4
cmp eax edi
je r-xdata
push eax
call sub_40a181
add esp 0x4
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov eax [ esi + 0x10 ]
cmp eax edi
je r-xdata
push eax
call sub_40a181
add esp 0x4
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi ] r--data
pop edi
retn
push eax
call sub_40a181
add esp 0x4
sub_405830
push 0xffffffff
push sub_42a1f8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebp
push esi
push edi
mov eax [ rwxdata ]
xor eax esp
push eax
lea eax [ esp + 0x20 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ebp [ esp + 0x30 ]
push ebp
call sub_405580
mov eax [ esp + 0x34 ]
mov [ esp + 0x28 ] 0x0
mov [ ebp + 0x124 ] esi
mov [ ebp + 0x128 ] eax
mov [ ebp + 0x12c ] 0x0
mov [ ebp + 0x130 ] 0xffffffff
mov [ ebp + 0x134 ] 0x0
cmp esi 0x1
jne r-xdata
mov eax ebp
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
add esp 0x1c
retn 0x8
mov [ esp + 0x34 ] 0x4
lea esp [ esp ]
mov [ esp + 0x10 ] ecx
cmp ecx edx
je r-xdata
jmp r-xdata
mov [ esp + 0x14 ] edx
lea eax [ esp + 0x14 ]
cmp esi [ ecx + 0xc ]
jb r-xdata
cmp [ eax + 0xc ] esi
jae r-xdata
xor edi edi
lea edx [ esp + 0x18 ]
mov eax rwxdata
call sub_406ac0
mov edi [ eax ]
jmp r-xdata
lea eax [ esp + 0x10 ]
jmp r-xdata
mov ecx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
mov [ esp + 0x18 ] ecx
cmp ecx edx
je r-xdata
lea esp [ esp ]
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov [ esp + 0x10 ] esi
mov ecx edx
jne r-xdata
cmp [ eax ] edx
je r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov [ esp + 0x1c ] edx
lea eax [ esp + 0x1c ]
cmp esi [ ecx + 0xc ]
jb r-xdata
mov ecx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
xor eax eax
lea edx [ esp + 0x10 ]
mov eax rwxdata
call sub_406ac0
mov eax [ eax ]
jmp r-xdata
lea eax [ esp + 0x18 ]
jmp r-xdata
cmp [ eax + 0xc ] esi
jae r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax rwxdata
mov [ esp + 0x18 ] esi
call sub_406ac0
lea ecx [ edi + 0x1 ]
mov [ eax ] ecx
movzx eax [ edi + esi ]
or eax 0xffffffff
jmp r-xdata
cmp edi eax
jne r-xdata
cmp [ eax ] edx
je r-xdata
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov esi [ ebp + 0x128 ]
mov [ esp + 0x18 ] esi
mov ecx edx
jne r-xdata
movzx edx al
mov eax [ ebp + 0x134 ]
shl eax 0x8
add edx eax
dec [ esp + 0x34 ]
mov [ ebp + 0x134 ] edx
jne r-xdata
sub_4059d0
sub esp 0x38
push ebp
mov ebp [ esp + 0x40 ]
push esi
mov esi eax
mov eax ebp
call sub_405290
mov ecx [ ebp + 0x12c ]
movzx edx ax
mov eax [ ebp + 0x130 ]
sub eax ecx
cmp eax 0x10000000
jb r-xdata
cmp eax 0x1000000
jb r-xdata
shr eax 0x10
imul eax edx
jmp r-xdata
cmp eax 0x100000
jb r-xdata
shr eax 0xc
imul eax edx
shr eax 0x4
jmp r-xdata
add ecx eax
test esi esi
je r-xdata
cmp eax 0x10000
jb r-xdata
shr eax 0x8
imul eax edx
shr eax 0x8
jmp r-xdata
inc ecx
mov [ ebp + 0x12c ] ecx
mov [ ebp + 0x130 ] ecx
jmp r-xdata
imul eax edx
shr eax 0x10
shr eax 0x4
imul eax edx
shr eax 0xc
jmp r-xdata
pop esi
pop ebp
add esp 0x38
retn 0x4
push ebx
push edi
jmp r-xdata
push esi
mov eax ebp
call sub_4054c0
mov eax [ ebp + 0x12c ]
xor eax [ ebp + 0x130 ]
test eax 0xff000000
jne r-xdata
mov edi [ rwxdata ]
movzx ecx [ ebp + 0x133 ]
mov edx [ edi + 0x4 ]
mov ebx [ ebp + 0x128 ]
mov eax edx
cmp [ eax + 0x15 ] 0x0
mov [ esp + 0x2c ] ecx
mov ecx edi
jne r-xdata
mov [ esp + 0x10 ] ecx
cmp ecx edi
je r-xdata
cmp [ eax + 0xc ] ebx
jae r-xdata
mov [ esp + 0x14 ] edi
lea eax [ esp + 0x14 ]
cmp ebx [ ecx + 0xc ]
jb r-xdata
mov ecx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
mov [ esp + 0x10 ] 0x0
mov eax edx
cmp [ eax + 0x15 ] 0x0
mov ebp edi
jne r-xdata
lea eax [ esp + 0x10 ]
jmp r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov [ esp + 0x1c ] edx
cmp edx esi
je r-xdata
cmp [ ecx + 0xc ] ebx
jae r-xdata
mov eax ebp
cmp ebp edi
je r-xdata
cmp [ eax + 0xc ] ebx
jae r-xdata
cmp [ eax ] edi
je r-xdata
mov [ esp + 0x20 ] esi
lea ecx [ esp + 0x20 ]
cmp ebx [ edx + 0xc ]
jb r-xdata
mov edx ecx
mov ecx [ ecx ]
mov ecx [ ecx + 0x8 ]
jmp r-xdata
lea edi [ esp + 0x30 ]
mov esi rwxdata
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] 0x0
call sub_4094a0
push eax
push ebp
push esi
lea esi [ esp + 0x24 ]
call sub_408ef0
mov eax [ esp + 0x18 ]
mov edi [ rwxdata ]
cmp ebx [ ebp + 0xc ]
jae r-xdata
mov ebp eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
xor eax eax
cmp [ eax + 0x15 ] 0x0
mov ebp esi
jne r-xdata
lea ecx [ esp + 0x1c ]
jmp r-xdata
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov esi [ rwxdata ]
mov eax [ esi + 0x4 ]
mov ecx eax
cmp [ ecx + 0x15 ] 0x0
mov edx esi
jne r-xdata
mov edx [ eax + 0x10 ]
mov ebp [ esp + 0x4c ]
mov [ esp + 0x10 ] edx
jmp r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx [ ebp + 0x130 ]
shl [ ebp + 0x12c ] 0x8
shl ecx 0x8
add ecx 0xff
mov [ ebp + 0x130 ] ecx
mov edx [ ebp + 0x12c ]
xor edx ecx
test edx 0xff000000
je r-xdata
mov eax [ edi + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov ebp edi
jne r-xdata
mov eax ebp
cmp ebp esi
je r-xdata
cmp [ eax + 0xc ] ebx
jae r-xdata
cmp [ ecx ] esi
je r-xdata
pop edi
pop ebx
mov eax ebp
cmp ebp edi
je r-xdata
mov edi edi
lea edi [ esp + 0x38 ]
mov esi rwxdata
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] 0x0
call sub_4094a0
push eax
push ebp
push esi
lea esi [ esp + 0x30 ]
call sub_408ef0
mov eax [ esp + 0x24 ]
mov edi [ rwxdata ]
cmp ebx [ ebp + 0xc ]
jae r-xdata
mov ebp eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
lea edi [ esp + 0x40 ]
mov esi rwxdata
mov [ esp + 0x40 ] ebx
mov [ esp + 0x44 ] 0x0
call sub_4094a0
push eax
push ebp
push esi
lea esi [ esp + 0x34 ]
call sub_408ef0
mov eax [ esp + 0x28 ]
cmp ebx [ ebp + 0xc ]
jae r-xdata
mov ebp eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
cmp [ esp + 0x10 ] eax
je r-xdata
mov eax [ eax + 0x10 ]
mov ebp [ esp + 0x4c ]
jmp r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx [ esp + 0x10 ]
mov ebp [ esp + 0x4c ]
lea edx [ ecx + 0x1 ]
mov [ eax + 0x10 ] edx
mov al [ esp + 0x2c ]
mov [ ecx + ebx ] al
cmp [ eax + 0xc ] ebx
jae r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_405ca0
sub esp 0x38
push esi
push edi
mov edi [ esp + 0x44 ]
mov eax edi
call sub_405290
mov ecx [ edi + 0x12c ]
movzx edx ax
mov eax [ edi + 0x130 ]
sub eax ecx
cmp eax 0x10000000
jb r-xdata
cmp eax 0x1000000
jb r-xdata
shr eax 0x10
imul eax edx
jmp r-xdata
cmp eax 0x100000
jb r-xdata
shr eax 0xc
imul eax edx
shr eax 0x4
jmp r-xdata
add ecx eax
xor esi esi
mov [ esp + 0xc ] esi
cmp [ edi + 0x134 ] ecx
ja r-xdata
cmp eax 0x10000
jb r-xdata
shr eax 0x8
imul eax edx
shr eax 0x8
jmp r-xdata
inc ecx
mov [ edi + 0x12c ] ecx
mov [ esp + 0xc ] 0x1
mov esi [ esp + 0xc ]
mov [ edi + 0x130 ] ecx
jmp r-xdata
imul eax edx
shr eax 0x10
shr eax 0x4
imul eax edx
shr eax 0xc
jmp r-xdata
pop edi
mov eax esi
pop esi
add esp 0x38
retn 0x4
push ebx
push ebp
jmp r-xdata
push esi
mov eax edi
call sub_4054c0
mov eax [ edi + 0x12c ]
xor eax [ edi + 0x130 ]
test eax 0xff000000
jne r-xdata
mov ecx [ edi + 0x130 ]
shl [ edi + 0x12c ] 0x8
mov ebx [ edi + 0x128 ]
shl ecx 0x8
add ecx 0xff
mov [ edi + 0x130 ] ecx
mov esi [ rwxdata ]
mov edx [ esi + 0x4 ]
mov eax edx
cmp [ eax + 0x15 ] 0x0
mov ecx esi
jne r-xdata
mov [ esp + 0x10 ] ecx
cmp ecx esi
je r-xdata
cmp [ eax + 0xc ] ebx
jae r-xdata
mov [ esp + 0x18 ] esi
lea eax [ esp + 0x18 ]
cmp ebx [ ecx + 0xc ]
jb r-xdata
mov ecx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
mov [ esp + 0x10 ] 0x0
mov eax edx
cmp [ eax + 0x15 ] 0x0
mov ebp esi
jne r-xdata
lea eax [ esp + 0x10 ]
jmp r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov [ esp + 0x20 ] edx
cmp edx esi
je r-xdata
cmp [ ecx + 0xc ] ebx
jae r-xdata
mov eax ebp
cmp ebp esi
je r-xdata
cmp [ eax + 0xc ] ebx
jae r-xdata
cmp [ eax ] esi
je r-xdata
mov [ esp + 0x24 ] esi
lea ecx [ esp + 0x24 ]
cmp ebx [ edx + 0xc ]
jb r-xdata
mov edx ecx
mov ecx [ ecx ]
mov ecx [ ecx + 0x8 ]
jmp r-xdata
lea edi [ esp + 0x30 ]
mov esi rwxdata
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] 0x0
call sub_4094a0
push eax
push ebp
push esi
lea esi [ esp + 0x28 ]
call sub_408ef0
mov eax [ esp + 0x1c ]
mov edi [ esp + 0x4c ]
cmp ebx [ ebp + 0xc ]
jae r-xdata
mov ebp eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
xor eax eax
cmp [ eax + 0x15 ] 0x0
mov ebp esi
jne r-xdata
lea ecx [ esp + 0x20 ]
jmp r-xdata
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov esi [ rwxdata ]
mov eax [ esi + 0x4 ]
mov ecx eax
cmp [ ecx + 0x15 ] 0x0
mov edx esi
jne r-xdata
mov edx [ eax + 0x10 ]
mov [ esp + 0x10 ] edx
jmp r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx [ rwxdata ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov ebp ecx
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax ebp
cmp ebp esi
je r-xdata
mov edi edi
cmp [ ecx ] esi
je r-xdata
mov eax ebp
cmp ebp ecx
je r-xdata
cmp [ eax + 0xc ] ebx
jae r-xdata
mov ecx [ edi + 0x134 ]
shl ecx 0x8
add ecx eax
mov [ edi + 0x134 ] ecx
mov edx [ edi + 0x12c ]
xor edx [ edi + 0x130 ]
test edx 0xff000000
je r-xdata
lea edi [ esp + 0x38 ]
mov esi rwxdata
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] 0x0
call sub_4094a0
push eax
push ebp
push esi
lea esi [ esp + 0x34 ]
call sub_408ef0
mov eax [ esp + 0x28 ]
mov edi [ esp + 0x4c ]
cmp ebx [ ebp + 0xc ]
jae r-xdata
mov ebp eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
lea edi [ esp + 0x40 ]
mov esi rwxdata
mov [ esp + 0x40 ] ebx
mov [ esp + 0x44 ] 0x0
call sub_4094a0
push eax
push ebp
push esi
lea esi [ esp + 0x38 ]
call sub_408ef0
mov eax [ esp + 0x2c ]
mov edi [ esp + 0x4c ]
cmp ebx [ ebp + 0xc ]
jae r-xdata
mov ebp eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
mov eax [ esp + 0x14 ]
pop ebp
pop ebx
pop edi
pop esi
add esp 0x38
retn 0x4
cmp [ esp + 0x10 ] eax
jne r-xdata
mov eax [ eax + 0x10 ]
jmp r-xdata
cmp [ eax + 0xc ] ebx
jae r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx [ esp + 0x10 ]
lea edx [ ecx + 0x1 ]
mov [ eax + 0x10 ] edx
movzx eax [ ecx + ebx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_405f90
sub esp 0x10
push edi
mov edi eax
cmp [ edi + 0x124 ] 0x0
jne r-xdata
pop edi
add esp 0x10
retn
mov eax [ edi + 0x12c ]
xor eax [ edi + 0x130 ]
push ebx
push esi
test eax 0xff000000
jne r-xdata
mov esi [ edi + 0x128 ]
movzx ebx [ edi + 0x133 ]
push esi
call sub_403ee0
push esi
mov edi eax
call sub_403e50
add esp 0x8
cmp edi eax
je r-xdata
push ebp
lea ecx [ ecx ]
pop esi
pop ebx
lea edx [ esp + 0x18 ]
mov eax rwxdata
mov [ esp + 0x18 ] esi
call sub_406ac0
lea ecx [ edi + 0x1 ]
mov [ eax ] ecx
mov [ edi + esi ] bl
mov [ esp + 0x10 ] edx
cmp edx ecx
je r-xdata
cmp [ eax + 0xc ] esi
jae r-xdata
mov [ esp + 0x14 ] ecx
lea eax [ esp + 0x14 ]
cmp esi [ edx + 0xc ]
jb r-xdata
mov edx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
xor ebp ebp
lea edx [ esp + 0x18 ]
mov eax rwxdata
call sub_406ac0
mov ebp [ eax ]
jmp r-xdata
lea eax [ esp + 0x10 ]
jmp r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov [ esp + 0x18 ] ecx
cmp ecx edx
je r-xdata
mov edi edi
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov [ esp + 0x10 ] esi
mov ecx edx
jne r-xdata
cmp [ eax ] ecx
je r-xdata
mov [ esp + 0x1c ] edx
lea eax [ esp + 0x1c ]
cmp esi [ ecx + 0xc ]
jb r-xdata
mov ecx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
xor eax eax
lea edx [ esp + 0x10 ]
mov eax rwxdata
call sub_406ac0
mov eax [ eax ]
jmp r-xdata
lea eax [ esp + 0x18 ]
jmp r-xdata
cmp [ eax + 0xc ] esi
jae r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov edx [ edi + 0x130 ]
shl [ edi + 0x12c ] 0x8
shl edx 0x8
add edx 0xff
mov [ edi + 0x130 ] edx
mov eax [ edi + 0x12c ]
xor eax edx
test eax 0xff000000
je r-xdata
lea edx [ esp + 0x18 ]
mov eax rwxdata
mov [ esp + 0x18 ] esi
call sub_406ac0
lea ecx [ ebp + 0x1 ]
mov [ eax ] ecx
mov [ esi + ebp ] bl
cmp ebp eax
je r-xdata
cmp [ eax ] edx
je r-xdata
mov ecx [ rwxdata ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov esi [ edi + 0x128 ]
movzx ebx [ edi + 0x133 ]
mov [ esp + 0x18 ] esi
mov edx ecx
jne r-xdata
pop ebp
sub_406120
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x48
push ebx
push ebp
push esi
push edi
mov edi [ rwxdata ]
mov [ esp + 0x14 ] edi
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x24 ] 0x8
cmp eax 0x1000000
jb r-xdata
shr eax 0x10
imul eax edx
jmp r-xdata
cmp eax 0x100000
jb r-xdata
shr eax 0xc
imul eax edx
shr eax 0x4
jmp r-xdata
add ecx eax
mov [ esp + 0x1c ] 0x0
cmp [ edi + 0x134 ] ecx
ja r-xdata
cmp eax 0x10000
jb r-xdata
shr eax 0x8
imul eax edx
shr eax 0x8
jmp r-xdata
inc ecx
mov [ edi + 0x12c ] ecx
mov [ esp + 0x1c ] 0x1
mov [ edi + 0x130 ] ecx
jmp r-xdata
imul eax edx
shr eax 0x10
shr eax 0x4
imul eax edx
shr eax 0xc
jmp r-xdata
dec [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
mov eax [ esp + 0x1c ]
lea edx [ eax + ecx * 2 ]
mov [ esp + 0x20 ] edx
jne r-xdata
mov edx [ edi + 0x130 ]
shl [ edi + 0x12c ] 0x8
mov ebx [ edi + 0x128 ]
shl edx 0x8
add edx 0xff
mov [ edi + 0x130 ] edx
mov esi [ rwxdata ]
mov edx [ esi + 0x4 ]
mov eax edx
cmp [ eax + 0x15 ] 0x0
mov ecx esi
jne r-xdata
mov eax [ esp + 0x1c ]
push eax
mov eax edi
call sub_4054c0
mov ecx [ edi + 0x12c ]
xor ecx [ edi + 0x130 ]
test ecx 0xff000000
jne r-xdata
mov eax edi
call sub_405290
mov ecx [ edi + 0x12c ]
movzx edx ax
mov eax [ edi + 0x130 ]
sub eax ecx
cmp eax 0x10000000
jb r-xdata
pop edi
mov eax edx
pop esi
pop ebp
pop ebx
mov esp ebp
pop ebp
retn
mov [ esp + 0x18 ] ecx
cmp ecx esi
je r-xdata
lea esp [ esp ]
mov [ esp + 0x28 ] esi
lea eax [ esp + 0x28 ]
cmp ebx [ ecx + 0xc ]
jb r-xdata
mov ecx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
mov [ esp + 0x18 ] 0x0
mov eax edx
cmp [ eax + 0x15 ] 0x0
mov ebp esi
jne r-xdata
lea eax [ esp + 0x18 ]
jmp r-xdata
cmp [ eax + 0xc ] ebx
jae r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov [ esp + 0x30 ] edx
cmp edx esi
je r-xdata
cmp [ ecx + 0xc ] ebx
jae r-xdata
mov eax ebp
cmp ebp esi
je r-xdata
lea ecx [ ecx ]
cmp [ eax ] esi
je r-xdata
mov [ esp + 0x34 ] esi
lea ecx [ esp + 0x34 ]
cmp ebx [ edx + 0xc ]
jb r-xdata
mov edx ecx
mov ecx [ ecx ]
mov ecx [ ecx + 0x8 ]
jmp r-xdata
lea edi [ esp + 0x40 ]
mov esi rwxdata
mov [ esp + 0x40 ] ebx
mov [ esp + 0x44 ] 0x0
call sub_4094a0
push eax
push ebp
push esi
lea esi [ esp + 0x38 ]
call sub_408ef0
mov eax [ esp + 0x2c ]
mov edi [ esp + 0x14 ]
cmp ebx [ ebp + 0xc ]
jae r-xdata
mov ebp eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
xor eax eax
cmp [ eax + 0x15 ] 0x0
mov ebp esi
jne r-xdata
lea ecx [ esp + 0x30 ]
jmp r-xdata
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov esi [ rwxdata ]
mov eax [ esi + 0x4 ]
mov ecx eax
cmp [ ecx + 0x15 ] 0x0
mov edx esi
jne r-xdata
mov eax [ eax + 0x10 ]
mov [ esp + 0x18 ] eax
jmp r-xdata
cmp [ eax + 0xc ] ebx
jae r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx [ rwxdata ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov ebp ecx
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax ebp
cmp ebp esi
je r-xdata
lea esp [ esp ]
cmp [ ecx ] esi
je r-xdata
mov eax ebp
cmp ebp ecx
je r-xdata
cmp [ eax + 0xc ] ebx
jae r-xdata
mov ecx [ edi + 0x134 ]
shl ecx 0x8
add ecx eax
mov [ edi + 0x134 ] ecx
mov edx [ edi + 0x12c ]
xor edx [ edi + 0x130 ]
test edx 0xff000000
je r-xdata
lea edi [ esp + 0x48 ]
mov esi rwxdata
mov [ esp + 0x48 ] ebx
mov [ esp + 0x4c ] 0x0
call sub_4094a0
push eax
push ebp
push esi
lea esi [ esp + 0x44 ]
call sub_408ef0
mov eax [ esp + 0x38 ]
mov edi [ esp + 0x14 ]
cmp ebx [ ebp + 0xc ]
jae r-xdata
mov ebp eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
lea edi [ esp + 0x50 ]
mov esi rwxdata
mov [ esp + 0x50 ] ebx
mov [ esp + 0x54 ] 0x0
call sub_4094a0
push eax
push ebp
push esi
lea esi [ esp + 0x48 ]
call sub_408ef0
mov eax [ esp + 0x3c ]
mov edi [ esp + 0x14 ]
cmp ebx [ ebp + 0xc ]
jae r-xdata
mov ebp eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
cmp [ esp + 0x18 ] eax
jne r-xdata
mov eax [ eax + 0x10 ]
jmp r-xdata
cmp [ eax + 0xc ] ebx
jae r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx [ esp + 0x18 ]
lea edx [ ecx + 0x1 ]
mov [ eax + 0x10 ] edx
movzx eax [ ecx + ebx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_406440
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
push ebx
mov ebx [ rwxdata ]
push esi
push edi
mov [ esp + 0x14 ] ebx
mov [ esp + 0x18 ] 0x7
cmp eax 0x1000000
jb r-xdata
shr eax 0x10
imul eax edx
jmp r-xdata
cmp eax 0x100000
jb r-xdata
shr eax 0xc
imul eax edx
shr eax 0x4
jmp r-xdata
xor edi edi
add ecx eax
cmp esi edi
je r-xdata
cmp eax 0x10000
jb r-xdata
shr eax 0x8
imul eax edx
shr eax 0x8
jmp r-xdata
inc ecx
mov [ ebx + 0x12c ] ecx
mov [ ebx + 0x130 ] ecx
jmp r-xdata
imul eax edx
shr eax 0x10
shr eax 0x4
imul eax edx
shr eax 0xc
jmp r-xdata
dec [ esp + 0x18 ]
jns r-xdata
jmp r-xdata
push esi
mov eax ebx
call sub_4054c0
mov eax [ ebx + 0x12c ]
xor eax [ ebx + 0x130 ]
test eax 0xff000000
jne r-xdata
mov ecx [ esp + 0x18 ]
mov esi [ ebp + 0x8 ]
sar esi cl
mov eax ebx
and esi 0x1
call sub_405290
mov ecx [ ebx + 0x12c ]
movzx edx ax
mov eax [ ebx + 0x130 ]
sub eax ecx
cmp eax 0x10000000
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ ebx + 0x133 ]
mov esi [ rwxdata ]
mov edx [ ebx + 0x128 ]
mov ebx [ esi + 0x4 ]
mov eax ebx
cmp [ eax + 0x15 ] 0x0
mov [ esp + 0x34 ] ecx
mov [ esp + 0xc ] edx
mov ecx esi
jne r-xdata
mov [ esp + 0x10 ] ecx
cmp ecx esi
je r-xdata
lea ebx [ ebx ]
mov [ esp + 0x1c ] esi
lea eax [ esp + 0x1c ]
cmp edx [ ecx + 0xc ]
jb r-xdata
mov ecx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
mov [ esp + 0x10 ] edi
mov eax ebx
cmp [ eax + 0x15 ] 0x0
mov ebx esi
jne r-xdata
lea eax [ esp + 0x10 ]
jmp r-xdata
cmp [ eax + 0xc ] edx
jae r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov [ esp + 0x24 ] esi
cmp esi edi
je r-xdata
cmp [ ecx + 0xc ] edx
jae r-xdata
cmp ebx esi
je r-xdata
lea ecx [ ecx ]
cmp [ eax ] esi
je r-xdata
mov [ esp + 0x28 ] edi
lea ecx [ esp + 0x28 ]
cmp edx [ esi + 0xc ]
jb r-xdata
mov esi ecx
mov ecx [ ecx ]
mov ecx [ ecx + 0x8 ]
jmp r-xdata
mov [ esp + 0x3c ] edi
lea edi [ esp + 0x38 ]
mov esi rwxdata
mov [ esp + 0x38 ] edx
call sub_4094a0
push eax
push ebx
push esi
lea esi [ esp + 0x2c ]
call sub_408ef0
mov ebx [ esp + 0x20 ]
mov edx [ esp + 0xc ]
cmp edx [ ebx + 0xc ]
jae r-xdata
mov ebx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
xor ebx ebx
cmp [ eax + 0x15 ] 0x0
mov ebx edi
jne r-xdata
lea ecx [ esp + 0x24 ]
jmp r-xdata
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edi [ rwxdata ]
mov eax [ edi + 0x4 ]
mov ecx eax
cmp [ ecx + 0x15 ] 0x0
mov esi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
mov [ esp + 0x10 ] eax
jmp r-xdata
cmp [ eax + 0xc ] edx
jae r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x130 ]
shl [ eax + 0x12c ] 0x8
shl ecx 0x8
add ecx 0xff
mov [ eax + 0x130 ] ecx
mov edx [ eax + 0x12c ]
xor edx ecx
mov ebx eax
test edx 0xff000000
je r-xdata
mov ecx [ rwxdata ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov ebx ecx
jne r-xdata
mov ecx [ esp + 0xc ]
mov ecx [ esp + 0xc ]
cmp [ eax + 0xc ] ecx
jae r-xdata
cmp [ ecx ] edi
je r-xdata
xor edi edi
mov eax ebx
cmp ebx ecx
je r-xdata
cmp [ eax + 0xc ] edx
jae r-xdata
lea edi [ esp + 0x40 ]
mov esi rwxdata
mov [ esp + 0x40 ] ecx
mov [ esp + 0x44 ] 0x0
call sub_4094a0
push eax
push ebx
push esi
lea esi [ esp + 0x38 ]
call sub_408ef0
mov ebx [ esp + 0x2c ]
cmp ecx [ ebx + 0xc ]
jae r-xdata
mov ebx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
lea edi [ esp + 0x48 ]
mov esi rwxdata
mov [ esp + 0x48 ] edx
mov [ esp + 0x4c ] 0x0
call sub_4094a0
push eax
push ebx
push esi
lea esi [ esp + 0x3c ]
call sub_408ef0
mov eax [ esp + 0x30 ]
mov edx [ esp + 0xc ]
cmp edx [ ebx + 0xc ]
jae r-xdata
mov ebx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
cmp [ esp + 0x10 ] ebx
je r-xdata
mov ebx [ ebx + 0x10 ]
mov edx [ esp + 0xc ]
jmp r-xdata
jmp r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx [ esp + 0x10 ]
lea esi [ ecx + 0x1 ]
mov [ eax + 0x10 ] esi
mov al [ esp + 0x34 ]
mov [ ecx + edx ] al
cmp [ eax + 0x15 ] 0x0
je r-xdata
cmp ebx edi
je r-xdata
sub_406760
push 0xffffffff
push sub_42a2b3
mov eax [ fs : 0x0 ]
push eax
push ebx
push ebp
push esi
push edi
mov eax [ rwxdata ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ebx [ esp + 0x24 ]
lea edx [ esp + 0x24 ]
mov eax rwxdata
mov [ esp + 0x24 ] ebx
call sub_406ac0
mov ecx [ esp + 0x28 ]
mov [ eax ] ecx
lea edx [ esp + 0x24 ]
mov eax rwxdata
mov [ esp + 0x24 ] ebx
call sub_406ac0
mov esi [ rwxdata ]
xor ebp ebp
mov [ eax ] ebp
cmp esi ebp
jne r-xdata
mov ebp [ esp + 0x2c ]
add ebp edi
cmp edi ebp
je r-xdata
push 0x138
call sub_40a28e
mov esi eax
add esp 0x4
mov [ esp + 0x24 ] esi
mov [ esp + 0x1c ] ebp
cmp esi ebp
je r-xdata
xor edi edi
mov ebp esi
cmp esi edi
je r-xdata
movsx eax [ edi ]
push eax
call sub_406440
inc edi
add esp 0x4
cmp edi ebp
jne r-xdata
xor esi esi
push esi
call sub_405580
mov [ esi + 0x124 ] ebp
mov [ esi + 0x128 ] ebx
mov [ esi + 0x12c ] ebp
mov [ esi + 0x130 ] 0xffffffff
mov [ esi + 0x134 ] ebp
jmp r-xdata
mov esi [ rwxdata ]
mov eax [ esi + 0x4 ]
mov ecx eax
cmp [ ecx + 0x15 ] 0x0
mov [ rwxdata ] edi
mov edx esi
jne r-xdata
call sub_405720
push ebp
call sub_40a181
add esp 0x4
mov esi [ rwxdata ]
mov [ esp + 0x1c ] 0xffffffff
mov [ rwxdata ] esi
mov [ esp + 0x24 ] edx
cmp edx esi
je r-xdata
cmp [ ecx + 0xc ] ebx
jae r-xdata
mov [ esp + 0x28 ] esi
lea ecx [ esp + 0x28 ]
cmp ebx [ edx + 0xc ]
jb r-xdata
mov edx ecx
mov ecx [ ecx ]
mov ecx [ ecx + 0x8 ]
jmp r-xdata
xor eax eax
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
cmp [ eax + 0x15 ] 0x0
mov ebp esi
jne r-xdata
lea ecx [ esp + 0x24 ]
jmp r-xdata
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov eax ebp
cmp ebp esi
je r-xdata
cmp [ eax + 0xc ] ebx
jae r-xdata
cmp [ ecx ] esi
je r-xdata
mov [ esp + 0x30 ] edi
lea edi [ esp + 0x2c ]
mov esi rwxdata
mov [ esp + 0x2c ] ebx
call sub_4094a0
push eax
push ebp
push esi
lea esi [ esp + 0x30 ]
call sub_408ef0
mov eax [ esp + 0x24 ]
cmp ebx [ ebp + 0xc ]
jae r-xdata
mov ebp eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
mov eax [ eax + 0x10 ]
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_406960
push 0xffffffff
push sub_42a27b
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ebx [ esp + 0x20 ]
lea edx [ esp + 0x20 ]
mov eax rwxdata
mov [ esp + 0x20 ] ebx
call sub_406ac0
mov ecx [ esp + 0x24 ]
mov [ eax ] ecx
lea edx [ esp + 0x20 ]
mov eax rwxdata
mov [ esp + 0x20 ] ebx
call sub_406ac0
mov esi [ rwxdata ]
mov [ eax ] 0x0
test esi esi
jne r-xdata
mov ebx [ esp + 0x28 ]
add ebx edi
cmp edi ebx
je r-xdata
push 0x138
call sub_40a28e
add esp 0x4
mov [ esp + 0x20 ] eax
mov [ esp + 0x18 ] esi
test eax eax
je r-xdata
mov edi esi
test esi esi
je r-xdata
call sub_406120
movzx ecx [ edi ]
cmp ecx eax
je r-xdata
xor eax eax
push ebx
push eax
lea ecx [ esi + 0x1 ]
call sub_405830
jmp r-xdata
mov [ rwxdata ] 0x0
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0xc
retn
call sub_405720
push edi
call sub_40a181
add esp 0x4
inc edi
cmp edi ebx
jne r-xdata
mov [ edi ] al
mov esi eax
mov [ esp + 0x18 ] 0xffffffff
mov [ rwxdata ] esi
mov esi [ rwxdata ]
sub_406a50
sub esp 0x10
push 0x18
mov [ esi + 0x8 ] 0x0
call sub_40a28e
add esp 0x4
test eax eax
je r-xdata
lea eax [ esp ]
push eax
lea ecx [ esp + 0x8 ]
mov [ esp + 0x4 ] 0x0
call sub_409c1a
push r--data
lea ecx [ esp + 0x8 ]
push ecx
mov [ esp + 0xc ] r--data
call sub_40bc3c
int3
mov [ esi + 0x4 ] eax
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0x4 ]
mov al 0x1
mov [ ecx + 0x14 ] al
mov edx [ esi + 0x4 ]
mov [ edx + 0x15 ] al
mov eax esi
add esp 0x10
retn
sub_406ac0
sub esp 0x8
push ebx
push esi
mov esi eax
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov ebx ecx
jne r-xdata
cmp ebx [ esi + 0x4 ]
je r-xdata
mov ecx [ edx ]
mov ecx [ edx ]
push edi
lea edi [ esp + 0xc ]
mov [ esp + 0xc ] ecx
mov [ esp + 0x10 ] 0x0
call sub_4094a0
push eax
push ebx
push esi
lea esi [ esp + 0x18 ]
call sub_408ef0
mov eax [ esp + 0xc ]
pop edi
pop esi
add eax 0x10
pop ebx
add esp 0x8
retn
mov eax [ edx ]
cmp eax [ ebx + 0xc ]
jae r-xdata
mov ebx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
pop esi
lea eax [ ebx + 0x10 ]
pop ebx
add esp 0x8
retn
cmp [ eax + 0xc ] ecx
jae r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_406b40
push 0xffffffff
push sub_42a078
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rwxdata ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov edi [ esp + 0x20 ]
mov [ esp + 0x18 ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ esp + 0x14 ]
mov eax edi
call sub_407470
mov eax [ edi + 0x4 ]
push eax
call sub_40a181
add esp 0x4
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
sub_406bc0
push ecx
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ esi + 0x4 ]
mov [ esp + 0x10 ] edx
cmp edx ecx
je r-xdata
push edi
mov edi [ ebx ]
mov [ esp + 0x8 ] ecx
lea ecx [ esp + 0x8 ]
mov ecx [ ecx ]
pop esi
mov [ eax ] ecx
pop ebx
pop ecx
retn 0x4
mov esi [ ebx ]
cmp esi [ edx + 0xc ]
jb r-xdata
mov edx ecx
mov ecx [ ecx ]
mov ecx [ ecx + 0x8 ]
jmp r-xdata
lea ecx [ esp + 0x10 ]
mov ecx [ ecx ]
pop esi
mov [ eax ] ecx
pop ebx
pop ecx
retn 0x4
cmp [ ecx + 0xc ] edi
jae r-xdata
pop edi
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_406c90
push 0x8000006
call sub_40a4f5
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax esi
retn
mov ecx eax
mov edx 0x4000002
jmp r-xdata
mov [ ecx ] 0x0
add ecx 0x2
dec edx
jns r-xdata
mov [ esi ] eax
mov eax esi
retn
sub_406de0
push 0x2000006
call sub_40a4f5
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax esi
retn
mov ecx eax
mov edx 0x1000002
jmp r-xdata
mov [ ecx ] 0x0
add ecx 0x2
dec edx
jns r-xdata
mov [ esi ] eax
mov eax esi
retn
sub_406e90
push 0x10006
call sub_40a4f5
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax esi
retn
mov ecx eax
mov edx 0x8002
jmp r-xdata
mov [ ecx ] 0x0
add ecx 0x2
dec edx
jns r-xdata
mov [ esi ] eax
mov eax esi
retn
sub_406f10
sub esp 0x10
push 0x18
mov [ esi + 0x8 ] 0x0
call sub_40a28e
add esp 0x4
test eax eax
je r-xdata
lea eax [ esp ]
push eax
lea ecx [ esp + 0x8 ]
mov [ esp + 0x4 ] 0x0
call sub_409c1a
push r--data
lea ecx [ esp + 0x8 ]
push ecx
mov [ esp + 0xc ] r--data
call sub_40bc3c
int3
mov [ esi + 0x4 ] eax
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0x4 ]
mov al 0x1
mov [ ecx + 0x14 ] al
mov edx [ esi + 0x4 ]
mov [ edx + 0x15 ] al
mov eax esi
add esp 0x10
retn
sub_407050
push ecx
mov edx [ edi ]
push esi
mov esi eax
mov eax [ edi + 0x4 ]
mov ecx eax
sub ecx edx
sar ecx 0x1
cmp ecx esi
jbe r-xdata
jae r-xdata
lea edx [ edx + esi * 2 ]
cmp edx eax
je r-xdata
pop esi
pop ecx
retn
mov edx esi
sub edx ecx
mov ecx edi
call sub_407680
mov ecx [ edi + 0x4 ]
mov eax [ esp + 0x4 ]
mov edx ecx
sub edx [ edi ]
push eax
sar edx 0x1
mov eax esi
sub eax edx
call sub_409530
mov eax [ edi + 0x4 ]
mov ecx eax
sub ecx [ edi ]
add esp 0x4
sar ecx 0x1
sub esi ecx
lea edx [ eax + esi * 2 ]
mov ecx eax
cmp eax eax
je r-xdata
mov [ edi + 0x4 ] edx
mov si [ ecx ]
mov [ edx ] si
add ecx 0x2
add edx 0x2
cmp ecx eax
jne r-xdata
mov [ edi + 0x4 ] edx
pop esi
pop ecx
retn
sub_407130
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov edx eax
sub edx ecx
cmp edx 0x1000000
jbe r-xdata
jae r-xdata
push ebx
lea ebx [ ecx + 0x1000000 ]
cmp ebx eax
je r-xdata
retn
sub ecx eax
add ecx 0x1000000
mov eax esi
call sub_407770
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
sub eax ecx
add eax 0x1000000
je r-xdata
pop ebx
push edi
mov edi eax
sub edi eax
push edi
push eax
push ebx
call sub_409e20
add esp 0xc
add edi ebx
mov [ esi + 0x4 ] edi
pop edi
mov eax [ esi ]
add eax 0x1000000
mov [ esi + 0x4 ] eax
retn
push eax
push 0x0
push ecx
call sub_417380
add esp 0xc
sub_407200
push ecx
mov ecx [ esi + 0x4 ]
push edi
mov edi [ esi ]
mov edx ecx
sub edx edi
mov eax 0x55555556
imul edx
mov eax edx
shr eax 0x1f
add eax edx
cmp eax __dos_header
jbe r-xdata
jae r-xdata
add edi 0xc00000
cmp edi ecx
je r-xdata
pop edi
pop ecx
retn
mov ecx __dos_header
sub ecx eax
push ecx
mov ecx esi
call sub_407860
mov edi [ esi + 0x4 ]
mov edx [ esp + 0x4 ]
mov ecx edi
sub ecx [ esi ]
push edx
mov eax 0x55555556
imul ecx
mov eax edx
shr eax 0x1f
add eax edx
mov ecx __dos_header
sub ecx eax
mov eax edi
call sub_4095c0
mov edi [ esi + 0x4 ]
mov ecx edi
sub ecx [ esi ]
mov eax 0x55555556
imul ecx
mov ecx edx
shr ecx 0x1f
add ecx edx
mov eax __dos_header
sub eax ecx
lea edx [ edi + eax * 2 ]
add esp 0x4
add edx eax
mov [ esi + 0x4 ] edx
mov eax ecx
cmp ecx ecx
je r-xdata
mov [ esi + 0x4 ] edi
pop edi
pop ecx
retn
mov dx [ eax ]
mov [ edi ] dx
mov dl [ eax + 0x2 ]
mov [ edi + 0x2 ] dl
add eax 0x3
add edi 0x3
cmp eax ecx
jne r-xdata
sub_407320
push ecx
mov ecx [ esi + 0x4 ]
push edi
mov edi [ esi ]
mov edx ecx
sub edx edi
mov eax 0x2aaaaaab
imul edx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x100
jbe r-xdata
jae r-xdata
lea edx [ edi + 0xc00 ]
cmp edx ecx
je r-xdata
pop edi
pop ecx
retn
mov ecx 0x100
sub ecx eax
push ecx
mov ecx esi
call sub_4079a0
mov edi [ esi + 0x4 ]
mov edx [ esp + 0x4 ]
mov ecx edi
sub ecx [ esi ]
push edx
mov eax 0x2aaaaaab
imul ecx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
mov ecx 0x100
sub ecx eax
mov eax edi
call sub_409610
mov edi [ esi + 0x4 ]
mov ecx edi
sub ecx [ esi ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x1
mov ecx edx
shr ecx 0x1f
add ecx edx
mov eax 0x100
add esp 0x4
sub eax ecx
lea edx [ eax + eax * 2 ]
lea eax [ edi + edx * 4 ]
mov [ esi + 0x4 ] eax
mov eax ecx
cmp ecx ecx
je r-xdata
mov [ esi + 0x4 ] edx
pop edi
pop ecx
retn
jmp r-xdata
movq xmm0 [ eax ]
movq [ edx ] xmm0
mov edi [ eax + 0x8 ]
mov [ edx + 0x8 ] edi
add eax 0xc
add edx 0xc
cmp eax ecx
jne r-xdata
sub_407470
push ecx
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0xc ]
push edi
mov edi eax
mov eax [ edi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx edx
je r-xdata
cmp edx eax
jne r-xdata
mov eax esi
mov [ esi ] ecx
pop edi
pop ecx
retn 0x8
mov edi edi
call sub_407d20
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
mov eax esi
mov [ esi ] ecx
pop edi
pop ecx
retn 0x8
push edx
lea edx [ esp + 0x8 ]
push edx
push edi
call sub_407aa0
mov ecx [ esp + 0xc ]
cmp ecx [ esp + 0x10 ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
cmp [ ecx + 0x15 ] 0x0
mov edx ecx
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ esp + 0xc ] eax
lea esp [ esp ]
mov [ esp + 0xc ] ecx
jmp r-xdata
jmp r-xdata
mov ecx eax
mov [ esp + 0xc ] ecx
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
sub_407520
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
retn
mov edx [ edx ]
mov edi edi
mov eax ecx
mov ecx [ ecx ]
mov ecx [ ecx + 0x8 ]
jmp r-xdata
cmp [ ecx + 0xc ] edx
jae r-xdata
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_407550
sub esp 0x10
push 0x18
mov [ esi + 0x8 ] 0x0
call sub_40a28e
add esp 0x4
test eax eax
je r-xdata
lea eax [ esp ]
push eax
lea ecx [ esp + 0x8 ]
mov [ esp + 0x4 ] 0x0
call sub_409c1a
push r--data
lea ecx [ esp + 0x8 ]
push ecx
mov [ esp + 0xc ] r--data
call sub_40bc3c
int3
mov [ esi + 0x4 ] eax
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0x4 ]
mov al 0x1
mov [ ecx + 0x14 ] al
mov edx [ esi + 0x4 ]
mov [ edx + 0x15 ] al
mov eax esi
add esp 0x10
retn 0x4
sub_407640
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov [ eax ] edx
cmp edx ecx
je r-xdata
retn 0x8
push esi
mov esi [ edi + 0x4 ]
cmp ecx esi
je r-xdata
mov [ edi + 0x4 ] edx
pop esi
push ebx
mov bx [ ecx ]
mov [ edx ] bx
add ecx 0x2
add edx 0x2
cmp ecx esi
jne r-xdata
pop ebx
sub_407680
mov eax [ ecx + 0x4 ]
push esi
mov esi [ ecx ]
push edi
sub eax esi
mov edi 0x7fffffff
sar eax 0x1
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
mov edx [ ecx + 0x8 ]
sub edx esi
sar edx 0x1
cmp eax edx
jbe r-xdata
push r--data
call sub_4211c1
pop edi
pop esi
retn
mov esi edx
shr esi 0x1
mov edi 0x7fffffff
sub edi esi
cmp edi edx
jae r-xdata
add edx esi
cmp edx eax
cmovb edx eax
push edx
call sub_407e90
xor edx edx
cmp edx eax
cmovb edx eax
push edx
call sub_407e90
pop edi
pop esi
retn
sub_407720
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x10 ]
push ebx
mov ebx [ esp + 0x8 ]
push ebp
mov ebp [ esp + 0x10 ]
mov [ ebp ] eax
cmp eax ecx
je r-xdata
mov eax ebp
pop ebp
pop ebx
retn 0x10
push esi
mov esi [ ebx + 0x4 ]
push edi
sub esi ecx
push esi
push ecx
push eax
mov edi eax
call sub_409e20
add esp 0xc
add esi edi
pop edi
mov [ ebx + 0x4 ] esi
pop esi
sub_407770
push esi
mov esi eax
mov edx [ esi ]
mov eax [ esi + 0x4 ]
push edi
or edi 0xffffffff
sub eax edx
sub edi ecx
cmp edi eax
jae r-xdata
add eax ecx
mov ecx [ esi + 0x8 ]
sub ecx edx
cmp eax ecx
jbe r-xdata
push r--data
call sub_4211c1
pop edi
pop esi
retn
mov edx ecx
shr edx 0x1
or edi 0xffffffff
sub edi edx
cmp edi ecx
jae r-xdata
add ecx edx
cmp ecx eax
cmovb ecx eax
push ecx
call sub_407fd0
xor ecx ecx
cmp ecx eax
cmovb ecx eax
push ecx
call sub_407fd0
pop edi
pop esi
retn
sub_407810
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
push ebp
mov ebp [ esp + 0x8 ]
mov [ ebp ] edx
cmp edx ecx
je r-xdata
mov eax ebp
pop ebp
retn 0xc
push esi
mov esi [ edi + 0x4 ]
cmp ecx esi
je r-xdata
mov [ edi + 0x4 ] edx
pop esi
lea esp [ esp ]
mov ax [ ecx ]
mov [ edx ] ax
mov al [ ecx + 0x2 ]
mov [ edx + 0x2 ] al
add ecx 0x3
add edx 0x3
cmp ecx esi
jne r-xdata
sub_407860
mov edx [ ecx + 0x4 ]
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov edi [ ecx ]
sub edx edi
mov eax 0x55555556
imul edx
mov esi edx
shr esi 0x1f
mov eax 0x55555555
add esi edx
sub eax ebx
cmp eax esi
jae r-xdata
mov edx [ ecx + 0x8 ]
sub edx edi
mov eax 0x55555556
imul edx
mov eax edx
shr eax 0x1f
add esi ebx
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_4211c1
pop edi
pop esi
pop ebx
retn 0x4
mov edx eax
shr edx 0x1
mov edi 0x55555555
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
cmp eax esi
pop edi
cmovb eax esi
pop esi
pop ebx
mov [ esp + 0x4 ] eax
jmp sub_4080f0
xor eax eax
cmp eax esi
pop edi
cmovb eax esi
pop esi
pop ebx
mov [ esp + 0x4 ] eax
jmp sub_4080f0
sub_407950
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov [ eax ] edx
cmp edx ecx
je r-xdata
retn 0x8
push esi
mov esi [ edi + 0x4 ]
cmp ecx esi
je r-xdata
mov [ edi + 0x4 ] edx
pop esi
push ebx
jmp r-xdata
movq xmm0 [ ecx ]
movq [ edx ] xmm0
mov ebx [ ecx + 0x8 ]
mov [ edx + 0x8 ] ebx
add ecx 0xc
add edx 0xc
cmp ecx esi
jne r-xdata
pop ebx
sub_4079a0
mov edx [ ecx + 0x4 ]
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov edi [ ecx ]
sub edx edi
mov eax 0x2aaaaaab
imul edx
sar edx 0x1
mov esi edx
shr esi 0x1f
mov eax 0x15555555
add esi edx
sub eax ebx
cmp eax esi
jae r-xdata
mov edx [ ecx + 0x8 ]
sub edx edi
mov eax 0x2aaaaaab
imul edx
sar edx 0x1
mov eax edx
shr eax 0x1f
add esi ebx
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_4211c1
pop edi
pop esi
pop ebx
retn 0x4
mov edx eax
shr edx 0x1
mov edi 0x15555555
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
cmp eax esi
pop edi
cmovb eax esi
pop esi
pop ebx
mov [ esp + 0x4 ] eax
jmp sub_408250
xor eax eax
cmp eax esi
pop edi
cmovb eax esi
pop esi
pop ebx
mov [ esp + 0x4 ] eax
jmp sub_408250
sub_407aa0
mov eax [ esp + 0xc ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
push ebx
push ebp
push esi
mov ebp eax
push edi
lea eax [ esp + 0x1c ]
call sub_4085d0
mov ecx [ ebp ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
push r--data
call sub_42120e
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
mov eax [ esp + 0x1c ]
mov edi [ eax + 0x8 ]
cmp eax ebp
jne r-xdata
mov edi ecx
jmp r-xdata
cmp [ edi + 0x15 ] 0x0
mov esi [ ebp + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ ebp ]
mov [ eax ] ecx
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x4 ] ebp
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x15 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebp
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ esp + 0x14 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x4 ] ebp
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx ] ebp
jne r-xdata
mov ecx [ ebp + 0x4 ]
cmp [ ecx ] ebp
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov ebx [ ecx + 0x4 ]
cmp [ ebx + 0x8 ] ebp
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebp + 0x4 ]
mov [ eax + 0x4 ] edx
mov dl [ ebp + 0x14 ]
mov cl [ eax + 0x14 ]
mov [ eax + 0x14 ] dl
mov [ ebp + 0x14 ] cl
mov bl 0x1
cmp [ ebp + 0x14 ] bl
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov eax [ edi ]
cmp [ eax + 0x15 ] 0x0
mov ecx edi
jne r-xdata
mov ecx esi
jmp r-xdata
push ebp
call sub_40a181
mov ecx [ esp + 0x18 ]
mov eax [ ecx + 0x8 ]
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x4 ]
cmp edi [ ecx + 0x4 ]
je r-xdata
mov eax edi
call sub_408580
mov [ ebx + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ ebx + 0x8 ] eax
jmp r-xdata
mov [ edx ] ecx
lea esp [ esp ]
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov [ eax ] ecx
retn 0xc
dec eax
mov [ ecx + 0x8 ] eax
mov [ edi + 0x14 ] bl
jmp r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
cmp [ edi + 0x14 ] bl
jne r-xdata
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov eax [ esp + 0x14 ]
mov [ ecx + 0x14 ] bl
push eax
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_408530
mov ecx [ esi ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov edx [ esp + 0x14 ]
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_4084d0
mov ecx [ esi + 0x8 ]
mov ecx [ esp + 0x14 ]
mov edx [ ecx + 0x4 ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ edx + 0x4 ]
jne r-xdata
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
jmp r-xdata
mov edx [ ecx ]
cmp [ edx + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x14 ] bl
je r-xdata
mov al [ esi + 0x14 ]
mov edx [ esp + 0x14 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] bl
mov ecx [ ecx ]
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
call sub_408530
mov eax [ ecx + 0x8 ]
mov edx [ esp + 0x14 ]
mov [ eax + 0x14 ] bl
push edx
mov [ ecx + 0x14 ] 0x0
call sub_4084d0
mov ecx [ esi ]
mov [ ecx + 0x14 ] 0x0
mov dl [ esi + 0x14 ]
mov [ ecx + 0x14 ] dl
mov [ esi + 0x14 ] bl
mov eax [ ecx + 0x8 ]
mov ecx [ esp + 0x14 ]
push ecx
mov ecx esi
mov [ eax + 0x14 ] bl
call sub_4084d0
jmp r-xdata
mov edx [ ecx ]
mov eax [ esp + 0x14 ]
mov [ edx + 0x14 ] bl
push eax
mov [ ecx + 0x14 ] 0x0
call sub_408530
mov ecx [ esi + 0x8 ]
sub_407d20
mov eax [ edi + 0x4 ]
push ebx
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x15 ] 0x0
push esi
mov esi ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ eax ] eax
mov eax [ edi + 0x4 ]
pop esi
mov [ eax + 0x8 ] eax
mov [ edi + 0x8 ] 0x0
pop ebx
retn
mov ecx [ esi + 0x8 ]
push ecx
mov ecx edi
call sub_408490
mov esi [ esi ]
push ebx
call sub_40a181
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov ebx esi
je r-xdata
sub_407df0
sub esp 0x10
push 0x18
call sub_40a28e
add esp 0x4
test eax eax
jne r-xdata
add esp 0x10
retn
mov [ esp ] eax
lea eax [ esp ]
push eax
lea ecx [ esp + 0x8 ]
call sub_409c1a
push r--data
lea ecx [ esp + 0x8 ]
push ecx
mov [ esp + 0xc ] r--data
call sub_40bc3c
sub_407e30
mov ecx [ esi ]
cmp [ ecx + 0x15 ] 0x0
mov [ eax ] ecx
jne r-xdata
retn
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ edx ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ esi ] ecx
mov edx [ esi ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ esi ] edx
retn
jmp r-xdata
mov [ esi ] ecx
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx ecx
mov ecx [ edx ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_407e90
push ebp
mov ebp esp
push 0xffffffff
push sub_429fa0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov ecx [ ebp + 0x8 ]
cmp ecx 0x7fffffff
jbe r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
sar eax 0x1
cmp eax ecx
jae r-xdata
push r--data
call sub_4211c1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_408620
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
mov ebx eax
mov eax [ esi ]
push ecx
push eax
mov eax ebx
mov [ ebp - 0x14 ] ebx
call sub_409910
mov eax [ esi ]
mov edi [ esi + 0x4 ]
sub edi eax
add esp 0x8
sar edi 0x1
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
lea eax [ ebx + edx * 2 ]
lea ecx [ ebx + edi * 2 ]
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] ecx
mov [ esi ] ebx
push eax
call sub_40a181
add esp 0x4
sub_407f90
mov eax [ ecx + 0x8 ]
sub eax [ ecx ]
push esi
sar eax 0x1
mov ecx eax
shr ecx 0x1
mov esi 0x7fffffff
sub esi ecx
cmp esi eax
pop esi
jae r-xdata
add eax ecx
xor eax eax
jmp r-xdata
retn
mov eax edx
cmp eax edx
jae r-xdata
sub_407fd0
sub esp 0xc
push ebp
mov ebp [ esp + 0x14 ]
cmp ebp 0xffffffff
jbe r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
cmp eax ebp
jae r-xdata
push r--data
call sub_4211c1
pop ebp
add esp 0xc
retn 0x4
push edi
xor edi edi
test ebp ebp
je r-xdata
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
push ebx
sub ecx eax
push ecx
push eax
push edi
call sub_409e20
mov eax [ esi ]
mov ebx [ esi + 0x4 ]
add esp 0xc
sub ebx eax
test eax eax
je r-xdata
push ebp
call sub_40a28e
mov edi eax
add esp 0x4
test edi edi
je r-xdata
lea eax [ edi + ebx ]
lea edx [ edi + ebp ]
pop ebx
mov [ esi ] edi
mov [ esi + 0x8 ] edx
mov [ esi + 0x4 ] eax
pop edi
push eax
call sub_40a181
add esp 0x4
lea ecx [ esp + 0x18 ]
push ecx
lea ecx [ esp + 0xc ]
mov [ esp + 0x1c ] 0x0
call sub_409c1a
push r--data
lea edx [ esp + 0xc ]
push edx
mov [ esp + 0x10 ] r--data
call sub_40bc3c
int3
sub_4080b0
mov eax [ ecx + 0x8 ]
sub eax [ ecx ]
push esi
mov ecx eax
or esi 0xffffffff
shr ecx 0x1
sub esi ecx
cmp esi eax
pop esi
jae r-xdata
add eax ecx
xor eax eax
jmp r-xdata
retn
mov eax edx
cmp eax edx
jae r-xdata
sub_4080f0
push ebp
mov ebp esp
push 0xffffffff
push sub_429f80
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov ecx [ ebp + 0x8 ]
cmp ecx 0x55555555
jbe r-xdata
mov edx [ edi + 0x8 ]
sub edx [ edi ]
mov eax 0x55555556
imul edx
mov eax edx
shr eax 0x1f
add eax edx
cmp eax ecx
jae r-xdata
push r--data
call sub_4211c1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_4086f0
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp + 0x8 ]
mov esi [ edi + 0x4 ]
mov ecx [ edi ]
push edx
mov [ ebp - 0x14 ] eax
call sub_409960
mov ebx [ edi ]
mov ecx [ edi + 0x4 ]
sub ecx ebx
mov eax 0x55555556
imul ecx
mov esi edx
shr esi 0x1f
add esp 0x4
add esi edx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
add edx ecx
lea ecx [ eax + esi * 2 ]
add ecx esi
mov [ edi + 0x8 ] edx
mov [ edi + 0x4 ] ecx
mov [ edi ] eax
push ebx
call sub_40a181
add esp 0x4
sub_408210
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov eax 0x55555556
imul ecx
mov eax edx
shr eax 0x1f
add eax edx
mov ecx eax
shr ecx 0x1
mov edx 0x55555555
sub edx ecx
cmp edx eax
jae r-xdata
add eax ecx
xor eax eax
jmp r-xdata
retn
mov eax esi
cmp eax esi
jae r-xdata
sub_408250
push ebp
mov ebp esp
push 0xffffffff
push sub_429f60
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov ecx [ ebp + 0x8 ]
cmp ecx 0x15555555
jbe r-xdata
mov edx [ esi + 0x8 ]
sub edx [ esi ]
mov eax 0x2aaaaaab
imul edx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
cmp eax ecx
jae r-xdata
push r--data
call sub_4211c1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_408760
mov [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
mov ecx [ esi ]
mov edx [ esi + 0x4 ]
push edi
push ecx
mov [ ebp - 0x14 ] eax
call sub_409980
mov ebx [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx ebx
mov eax 0x2aaaaaab
imul ecx
sar edx 0x1
mov edi edx
shr edi 0x1f
add esp 0x8
add edi edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax + eax * 2 ]
mov eax [ ebp - 0x14 ]
lea edx [ eax + ecx * 4 ]
lea ecx [ edi + edi * 2 ]
mov [ esi + 0x8 ] edx
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x4 ] edx
mov [ esi ] eax
push ebx
call sub_40a181
add esp 0x4
sub_408380
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
mov ecx eax
shr ecx 0x1
mov edx 0x15555555
sub edx ecx
cmp edx eax
jae r-xdata
add eax ecx
xor eax eax
jmp r-xdata
retn
mov eax esi
cmp eax esi
jae r-xdata
sub_408490
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
cmp [ edi + 0x15 ] 0x0
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_408490
mov esi [ esi ]
push edi
call sub_40a181
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov edi esi
je r-xdata
sub_4084d0
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
mov [ ecx + 0x8 ] edx
mov edx [ eax ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ esp + 0x4 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
mov [ edx ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
sub_408530
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ecx ] edx
mov edx [ eax + 0x8 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ esp + 0x4 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
mov [ edx ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
sub_4085d0
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
retn
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ edx ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ eax ] ecx
mov edx [ eax ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ eax ] edx
retn
lea esp [ esp ]
mov [ eax ] ecx
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx ecx
mov ecx [ edx ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_408620
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
add esp 0x10
retn
cmp ecx 0x7fffffff
ja r-xdata
lea ecx [ esp ]
push ecx
lea ecx [ esp + 0x8 ]
mov [ esp + 0x4 ] 0x0
call sub_409c1a
push r--data
lea edx [ esp + 0x8 ]
push edx
mov [ esp + 0xc ] r--data
call sub_40bc3c
lea eax [ ecx + ecx ]
push eax
call sub_40a28e
add esp 0x4
test eax eax
jne r-xdata
sub_408690
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
add esp 0x10
retn
cmp ecx 0xffffffff
ja r-xdata
lea eax [ esp ]
push eax
lea ecx [ esp + 0x8 ]
mov [ esp + 0x4 ] 0x0
call sub_409c1a
push r--data
lea ecx [ esp + 0x8 ]
push ecx
mov [ esp + 0xc ] r--data
call sub_40bc3c
push ecx
call sub_40a28e
add esp 0x4
test eax eax
jne r-xdata
sub_4086f0
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
add esp 0x10
retn
cmp ecx 0x55555555
ja r-xdata
lea ecx [ esp ]
push ecx
lea ecx [ esp + 0x8 ]
mov [ esp + 0x4 ] 0x0
call sub_409c1a
push r--data
lea edx [ esp + 0x8 ]
push edx
mov [ esp + 0xc ] r--data
call sub_40bc3c
lea eax [ ecx + ecx * 2 ]
push eax
call sub_40a28e
add esp 0x4
test eax eax
jne r-xdata
sub_408760
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
add esp 0x10
retn
cmp ecx 0x15555555
ja r-xdata
lea ecx [ esp ]
push ecx
lea ecx [ esp + 0x8 ]
mov [ esp + 0x4 ] 0x0
call sub_409c1a
push r--data
lea edx [ esp + 0x8 ]
push edx
mov [ esp + 0xc ] r--data
call sub_40bc3c
lea eax [ ecx + ecx * 2 ]
add eax eax
add eax eax
push eax
call sub_40a28e
add esp 0x4
test eax eax
jne r-xdata
sub_408890
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
retn
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ edx ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ eax ] ecx
mov edx [ eax ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ eax ] edx
retn
lea esp [ esp ]
mov [ eax ] ecx
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx ecx
mov ecx [ edx ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_408920
push ecx
push ebx
push ebp
mov eax ecx
and eax 0x3ffffff
push esi
mov esi [ esp + 0x14 ]
shr ecx 0x18
push edi
lea edi [ eax + 0x3 ]
mov [ esp + 0x10 ] ecx
mov ecx eax
mov ebp 0x3b9aca00
mov edx eax
cmp eax edi
jae r-xdata
mov al [ esp + 0x10 ]
mov edx [ esi ]
mov [ esp + 0x18 ] al
mov [ esp + 0x19 ] 0x0
mov ax [ esp + 0x18 ]
add ecx ecx
mov [ ecx + edx ] ax
mov eax [ esi ]
add eax ecx
mov esi [ esi ]
lea eax [ esi + eax * 2 ]
lea esp [ esp ]
mov cl [ esp + 0x10 ]
pop edi
pop esi
mov [ esp + 0x10 ] cl
mov [ esp + 0x11 ] 0x0
mov dx [ esp + 0x10 ]
pop ebp
mov [ eax ] dx
pop ebx
pop ecx
retn 0x4
movzx ebx [ eax ]
cmp [ esp + 0x10 ] ebx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
cmp esi ebp
jge r-xdata
inc edx
add eax 0x2
cmp edx edi
jb r-xdata
mov ebp esi
mov ecx edx
movzx esi [ eax + 0x1 ]
test esi esi
je r-xdata
mov esi [ esp + 0x18 ]
sub_4089c0
push ecx
push ebx
push ebp
mov eax ecx
and eax 0xffffff
push esi
mov esi [ esp + 0x14 ]
shr ecx 0x18
push edi
lea edi [ eax + 0x3 ]
mov [ esp + 0x10 ] ecx
mov ecx eax
mov ebp 0x3b9aca00
mov edx eax
cmp eax edi
jae r-xdata
mov al [ esp + 0x10 ]
mov edx [ esi ]
mov [ esp + 0x18 ] al
mov [ esp + 0x19 ] 0x0
mov ax [ esp + 0x18 ]
add ecx ecx
mov [ ecx + edx ] ax
mov eax [ esi ]
add eax ecx
mov esi [ esi ]
lea eax [ esi + eax * 2 ]
lea esp [ esp ]
mov cl [ esp + 0x10 ]
pop edi
pop esi
mov [ esp + 0x10 ] cl
mov [ esp + 0x11 ] 0x0
mov dx [ esp + 0x10 ]
pop ebp
mov [ eax ] dx
pop ebx
pop ecx
retn 0x4
movzx ebx [ eax ]
cmp [ esp + 0x10 ] ebx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
cmp esi ebp
jge r-xdata
inc edx
add eax 0x2
cmp edx edi
jb r-xdata
mov ebp esi
mov ecx edx
movzx esi [ eax + 0x1 ]
test esi esi
je r-xdata
mov esi [ esp + 0x18 ]
sub_408a60
push ecx
push ebx
push ebp
mov eax ecx
and eax 0x7fff
push esi
mov esi [ esp + 0x14 ]
shr ecx 0x18
push edi
lea edi [ eax + 0x3 ]
mov [ esp + 0x10 ] ecx
mov ecx eax
mov ebp 0x3b9aca00
mov edx eax
cmp eax edi
jae r-xdata
mov al [ esp + 0x10 ]
mov edx [ esi ]
mov [ esp + 0x18 ] al
mov [ esp + 0x19 ] 0x0
mov ax [ esp + 0x18 ]
add ecx ecx
mov [ ecx + edx ] ax
mov eax [ esi ]
add eax ecx
mov esi [ esi ]
lea eax [ esi + eax * 2 ]
lea esp [ esp ]
mov cl [ esp + 0x10 ]
pop edi
pop esi
mov [ esp + 0x10 ] cl
mov [ esp + 0x11 ] 0x0
mov dx [ esp + 0x10 ]
pop ebp
mov [ eax ] dx
pop ebx
pop ecx
retn 0x4
movzx ebx [ eax ]
cmp [ esp + 0x10 ] ebx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
cmp esi ebp
jge r-xdata
inc edx
add eax 0x2
cmp edx edi
jb r-xdata
mov ebp esi
mov ecx edx
movzx esi [ eax + 0x1 ]
test esi esi
je r-xdata
mov esi [ esp + 0x18 ]
sub_408b00
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi eax
call sub_4094a0
push eax
mov eax [ esp + 0x14 ]
push eax
push esi
mov esi ebx
call sub_408ef0
pop esi
mov eax ebx
pop ebx
retn 0x8
sub_408bd0
mov eax [ esp + 0x4 ]
cmp ecx edx
je r-xdata
retn
push esi
lea esp [ esp ]
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
cmp ecx edx
jne r-xdata
pop esi
sub_408c70
mov eax [ esp + 0x4 ]
cmp ecx edx
je r-xdata
retn
push esi
lea esp [ esp ]
movq xmm0 [ ecx ]
movq [ eax ] xmm0
mov esi [ ecx + 0x8 ]
mov [ eax + 0x8 ] esi
add ecx 0xc
add eax 0xc
cmp ecx edx
jne r-xdata
pop esi
sub_408ce0
sub esp 0x10
cmp eax 0xaaaaaaa
ja r-xdata
lea ecx [ esp ]
push ecx
lea ecx [ esp + 0x8 ]
mov [ esp + 0x4 ] 0x0
call sub_409c1a
push r--data
lea edx [ esp + 0x8 ]
push edx
mov [ esp + 0xc ] r--data
call sub_40bc3c
lea eax [ eax + eax * 2 ]
add eax eax
add eax eax
add eax eax
push eax
call sub_40a28e
add esp 0x4
test eax eax
jne r-xdata
add esp 0x10
retn
sub_408db0
sub esp 0x10
cmp eax 0x7fffffff
ja r-xdata
lea ecx [ esp ]
push ecx
lea ecx [ esp + 0x8 ]
mov [ esp + 0x4 ] 0x0
call sub_409c1a
push r--data
lea edx [ esp + 0x8 ]
push edx
mov [ esp + 0xc ] r--data
call sub_40bc3c
add eax eax
push eax
call sub_40a28e
add esp 0x4
test eax eax
jne r-xdata
add esp 0x10
retn
sub_408e00
sub esp 0x10
cmp eax 0xffffffff
ja r-xdata
lea eax [ esp ]
push eax
lea ecx [ esp + 0x8 ]
mov [ esp + 0x4 ] 0x0
call sub_409c1a
push r--data
lea ecx [ esp + 0x8 ]
push ecx
mov [ esp + 0xc ] r--data
call sub_40bc3c
push eax
call sub_40a28e
add esp 0x4
test eax eax
jne r-xdata
add esp 0x10
retn
sub_408e50
sub esp 0x10
cmp eax 0x55555555
ja r-xdata
lea ecx [ esp ]
push ecx
lea ecx [ esp + 0x8 ]
mov [ esp + 0x4 ] 0x0
call sub_409c1a
push r--data
lea edx [ esp + 0x8 ]
push edx
mov [ esp + 0xc ] r--data
call sub_40bc3c
lea eax [ eax + eax * 2 ]
push eax
call sub_40a28e
add esp 0x4
test eax eax
jne r-xdata
add esp 0x10
retn
sub_408ea0
sub esp 0x10
cmp eax 0x15555555
ja r-xdata
lea ecx [ esp ]
push ecx
lea ecx [ esp + 0x8 ]
mov [ esp + 0x4 ] 0x0
call sub_409c1a
push r--data
lea edx [ esp + 0x8 ]
push edx
mov [ esp + 0xc ] r--data
call sub_40bc3c
lea eax [ eax + eax * 2 ]
add eax eax
add eax eax
push eax
call sub_40a28e
add esp 0x4
test eax eax
jne r-xdata
add esp 0x10
retn
sub_408ef0
sub esp 0x8
push ebx
mov ebx [ esp + 0x18 ]
push ebp
mov ebp [ esp + 0x14 ]
cmp [ ebp + 0x8 ] 0x0
mov [ esp + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp + 0x4 ]
push edi
mov edi [ esp + 0x1c ]
cmp edi [ eax ]
jne r-xdata
mov ecx [ ebp + 0x4 ]
push ebx
push 0x1
push esi
push ebp
call sub_409190
pop ebp
mov eax esi
pop ebx
add esp 0x8
retn 0xc
cmp edi eax
jne r-xdata
mov eax [ ebx + 0xc ]
cmp eax [ edi + 0xc ]
jae r-xdata
mov eax [ ebx + 0xc ]
cmp [ edi + 0xc ] eax
jbe r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ecx + 0xc ]
cmp edx [ ebx + 0xc ]
jae r-xdata
push ebx
push ebp
lea edi [ esp + 0x14 ]
call sub_4090b0
mov eax [ eax ]
pop edi
pop ebp
mov [ esi ] eax
mov eax esi
pop ebx
add esp 0x8
retn 0xc
push ebx
jae r-xdata
mov ecx edi
mov [ esp + 0x20 ] ecx
cmp [ edi + 0x15 ] 0x0
je r-xdata
push ebx
push 0x0
push esi
push ebp
call sub_409190
pop edi
pop ebp
mov eax esi
pop ebx
add esp 0x8
retn 0xc
lea eax [ esp + 0x20 ]
mov [ esp + 0x20 ] edi
call sub_4085d0
mov ecx [ ebp + 0x4 ]
cmp [ eax ] ecx
mov ecx [ esp + 0x20 ]
je r-xdata
mov eax [ edi ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
jmp r-xdata
mov edx [ edi + 0x8 ]
cmp [ edx + 0x15 ] 0x0
push ebx
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax [ ecx + 0xc ]
jae r-xdata
mov eax [ edi + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov ecx eax
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ esp + 0x20 ] ecx
push 0x1
push esi
push ebp
call sub_409190
pop edi
pop ebp
mov eax esi
pop ebx
add esp 0x8
retn 0xc
push 0x0
push esi
push ebp
mov ecx edi
call sub_409190
pop edi
pop ebp
mov eax esi
pop ebx
add esp 0x8
retn 0xc
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
cmp ecx [ eax ]
jne r-xdata
lea esp [ esp ]
cmp [ edi + 0xc ] eax
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
push ebx
je r-xdata
mov eax [ ebx + 0xc ]
cmp [ ecx + 0xc ] eax
jae r-xdata
mov ecx eax
mov ecx eax
mov [ esp + 0x20 ] ecx
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
jmp r-xdata
push 0x1
push esi
push ebp
mov ecx edi
call sub_409190
pop edi
pop ebp
mov eax esi
pop ebx
add esp 0x8
retn 0xc
push 0x0
push esi
push ebp
call sub_409190
pop edi
pop ebp
mov eax esi
pop ebx
add esp 0x8
retn 0xc
sub_4090b0
push ebx
mov ebx [ esp + 0xc ]
push ebp
mov ebp [ esp + 0xc ]
mov ecx [ ebp + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov dl 0x1
push esi
mov [ esp + 0x14 ] dl
jne r-xdata
mov esi ecx
test dl dl
je r-xdata
mov esi [ ebx + 0xc ]
mov edx [ esi + 0xc ]
push ebx
cmp edx [ ebx + 0xc ]
jae r-xdata
mov eax [ ebp + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
call sub_40a181
add esp 0x4
mov [ edi ] esi
pop esi
pop ebp
mov [ edi + 0x4 ] 0x0
mov eax edi
pop ebx
retn 0x8
mov eax [ esp + 0x18 ]
push eax
jmp r-xdata
cmp [ ecx + 0x15 ] 0x0
je r-xdata
push ebx
push 0x1
cmp esi [ eax + 0xc ]
mov ecx eax
setb dl
mov [ esp + 0x14 ] dl
test dl dl
je r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
lea edx [ esp + 0x1c ]
push edx
push ebp
call sub_409190
mov eax [ eax ]
pop esi
pop ebp
mov [ edi ] eax
mov [ edi + 0x4 ] 0x1
mov eax edi
pop ebx
retn 0x8
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov esi [ ecx + 0x8 ]
jmp r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov esi eax
mov eax [ esi + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
cmp [ esi + 0x15 ] 0x0
jne r-xdata
lea esp [ esp ]
mov esi eax
mov eax [ esi + 0x8 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov esi eax
mov esi eax
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
jmp r-xdata
cmp esi [ eax ]
jne r-xdata
sub_409190
push ebx
mov ebx [ esp + 0x8 ]
mov edx [ ebx + 0x8 ]
push ebp
mov ebp [ esp + 0x18 ]
cmp edx 0x1ffffffe
jb r-xdata
inc edx
mov [ ebx + 0x8 ] edx
mov [ ebp + 0x4 ] ecx
mov edx [ ebx + 0x4 ]
xor al al
cmp ecx edx
jne r-xdata
push ebp
call sub_40a181
add esp 0x4
push r--data
call sub_4211c1
cmp [ esp + 0x14 ] al
je r-xdata
mov [ edx + 0x4 ] ebp
mov ecx [ ebx + 0x4 ]
mov [ ecx ] ebp
mov edx [ ebx + 0x4 ]
jmp r-xdata
mov [ ecx + 0x8 ] ebp
mov edx [ ebx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ ecx ] ebp
mov edx [ ebx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x8 ] ebp
mov edx [ ebp + 0x4 ]
mov ecx ebp
cmp [ edx + 0x14 ] al
jne r-xdata
mov [ edx ] ebp
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ esp + 0x10 ]
mov [ eax ] ebp
pop ebp
mov [ ecx + 0x14 ] 0x1
pop ebx
retn 0x10
push esi
push edi
mov esi [ esi ]
cmp [ esi + 0x14 ] al
jne r-xdata
mov esi [ esi + 0x8 ]
cmp [ esi + 0x14 ] al
jne r-xdata
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx + 0x8 ]
mov edi [ esi ]
mov [ edx + 0x8 ] edi
mov edi [ esi ]
cmp [ edi + 0x15 ] al
jne r-xdata
mov ecx edx
mov edx [ ecx ]
mov esi [ edx + 0x8 ]
mov [ ecx ] esi
mov esi [ edx + 0x8 ]
cmp [ esi + 0x15 ] al
jne r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x14 ] al
je r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx ]
mov edi [ esi + 0x8 ]
mov [ edx ] edi
mov edi [ esi + 0x8 ]
cmp [ edi + 0x15 ] al
jne r-xdata
mov ecx edx
mov edx [ ecx + 0x8 ]
mov esi [ edx ]
mov [ ecx + 0x8 ] esi
mov esi [ edx ]
cmp [ esi + 0x15 ] al
jne r-xdata
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ebx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ebx + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
mov esi [ edx + 0x4 ]
cmp edx [ esi ]
jne r-xdata
pop edi
pop esi
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ebx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ebx + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edi [ edx + 0x4 ]
cmp edx [ edi ]
jne r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov edi [ edx + 0x4 ]
cmp edx [ edi + 0x8 ]
jne r-xdata
mov [ edi + 0x4 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ edi ] esi
jmp r-xdata
mov [ esi ] edx
mov [ esi ] edx
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov [ edi ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x4 ] esi
mov [ esi + 0x8 ] edx
mov [ esi ] edx
jmp r-xdata
mov [ edx ] ecx
mov [ ecx + 0x4 ] edx
sub_409400
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx [ ecx ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov [ eax ] ecx
retn
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ eax ]
cmp edx [ ecx ]
jne r-xdata
mov [ eax ] edx
retn
nop
retn
mov [ eax ] ecx
mov [ eax ] ecx
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx ecx
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_4094a0
sub esp 0x10
push 0x18
call sub_40a28e
xor edx edx
add esp 0x4
cmp eax edx
je r-xdata
lea eax [ esp ]
push eax
lea ecx [ esp + 0x8 ]
mov [ esp + 0x4 ] edx
call sub_409c1a
push r--data
lea ecx [ esp + 0x8 ]
push ecx
mov [ esp + 0xc ] r--data
call sub_40bc3c
int3
mov ecx [ esi + 0x4 ]
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
lea ecx [ eax + 0xc ]
mov [ eax + 0x14 ] dx
cmp ecx edx
je r-xdata
add esp 0x10
retn
mov edx [ edi ]
mov [ ecx ] edx
mov edx [ edi + 0x4 ]
mov [ ecx + 0x4 ] edx
sub_409530
push ecx
xor edx edx
cmp eax edx
jbe r-xdata
pop ecx
retn
push esi
mov [ esp + 0x6 ] dx
mov si dx
dec eax
add ecx 0x2
cmp eax edx
ja r-xdata
mov [ ecx ] si
cmp ecx edx
je r-xdata
pop esi
sub_4095c0
push ecx
xor edx edx
cmp ecx edx
jbe r-xdata
pop ecx
retn
push esi
mov [ esp + 0x5 ] dx
mov si dx
dec ecx
add eax 0x3
cmp ecx edx
ja r-xdata
mov [ eax ] si
mov [ eax + 0x2 ] dl
cmp eax edx
je r-xdata
pop esi
sub_409610
xor edx edx
sub esp 0xc
cmp ecx edx
jbe r-xdata
add esp 0xc
retn
mov [ esp ] edx
mov [ esp + 0x4 ] edx
movq xmm0 [ esp ]
dec ecx
add eax 0xc
cmp ecx edx
ja r-xdata
movq [ eax ] xmm0
mov [ eax + 0x8 ] edx
cmp eax edx
je r-xdata
sub_409640
mov ecx [ esp + 0x4 ]
cmp ecx edx
je r-xdata
retn
push esi
lea esp [ esp ]
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
cmp ecx edx
jne r-xdata
pop esi
sub_4096e0
mov ecx [ esp + 0x4 ]
cmp ecx edx
je r-xdata
retn
push esi
lea esp [ esp ]
movq xmm0 [ ecx ]
movq [ eax ] xmm0
mov esi [ ecx + 0x8 ]
mov [ eax + 0x8 ] esi
add ecx 0xc
add eax 0xc
cmp ecx edx
jne r-xdata
pop esi
sub_4097e0
sub esp 0x10
push 0x18
call sub_40a28e
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
lea eax [ esp ]
mov [ esp ] ecx
push eax
lea ecx [ esp + 0x8 ]
call sub_409c1a
push r--data
lea ecx [ esp + 0x8 ]
push ecx
mov [ esp + 0xc ] r--data
call sub_40bc3c
int3
mov edx [ esi + 0x4 ]
mov [ eax ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0x8 ] edx
mov [ eax + 0x14 ] cx
add esp 0x10
retn
sub_409910
mov ecx [ esp + 0x4 ]
cmp ecx edx
je r-xdata
retn
push esi
lea esp [ esp ]
add ecx 0x2
add eax 0x2
cmp ecx edx
jne r-xdata
mov si [ ecx ]
mov [ eax ] si
test eax eax
je r-xdata
pop esi
sub_409960
cmp ecx esi
je r-xdata
retn
test eax eax
je r-xdata
add ecx 0x3
add eax 0x3
cmp ecx esi
jne r-xdata
mov dx [ ecx ]
mov [ eax ] dx
mov dl [ ecx + 0x2 ]
mov [ eax + 0x2 ] dl
sub_409980
mov ecx [ esp + 0x4 ]
cmp ecx edx
je r-xdata
retn
push esi
lea esp [ esp ]
add ecx 0xc
add eax 0xc
cmp ecx edx
jne r-xdata
movq xmm0 [ ecx ]
movq [ eax ] xmm0
mov esi [ ecx + 0x8 ]
mov [ eax + 0x8 ] esi
test eax eax
je r-xdata
pop esi
sub_409bbc
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
push [ ebp + 0x8 ]
call sub_40b5d0
lea esi [ eax + 0x1 ]
push esi
call sub_40b534
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
pop esi
push [ ebp + 0x8 ]
push esi
push eax
call sub_40b496
add esp 0xc
mov [ edi + 0x8 ] 0x1
sub_409c1a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push [ eax ]
call sub_409bbc
mov eax esi
pop esi
pop ebp
retn 0x4
sub_409c41
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
call sub_409bfc
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
push [ esi + 0x4 ]
mov ecx edi
call sub_409bbc
jmp r-xdata
sub_409c81
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_409c1a
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_409caa
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_409c1a
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_409cfb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_409bfc
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a181
pop ecx
sub_409d22
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_409c41
mov eax esi
pop esi
pop ebp
retn 0x4
sub_409d47
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_409bfc
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a181
pop ecx
sub_409d8b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_409bfc
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a181
pop ecx
sub_409dcf
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_409bfc
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a181
pop ecx
sub_409e20
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_409ea4 ]
jmp [ ecx * 4 + jump_table_409f24 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_409f90 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_40a12c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40a030 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40a12c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_409f90 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40a12c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_409f90 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_409f90 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_409f90 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40a12c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40a12c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40a12c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_40a1b0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40a1a0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a181
pop ecx
sub_40a1ef
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_40bb30
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_40a20f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_40bb30
neg eax
pop ecx
sbb eax eax
pop ecx
neg eax
pop ebp
retn 0x4
sub_40a230
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_40bb30
pop ecx
pop ecx
xor ecx ecx
test eax eax
setg cl
mov eax ecx
pop ebp
retn 0x4
sub_40a268
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov esi ecx
mov [ ebp - 0x4 ] r--data
call sub_409b92
mov [ esi ] r--data
mov eax esi
pop esi
leave
retn
sub_40a28e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_40b534
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_40bc14
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rwxdata ] 0x1
mov edi rwxdata
mov esi r--data
jne r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_409d22
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
call sub_40bc3c
int3
or [ rwxdata ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] r--data
call sub_409b92
push sub_42a560
mov [ rwxdata ] esi
call sub_40a623
pop ecx
sub_40a37e
push 0x58
push r--data
call sub_40cd00
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoW@IAT ]
xor esi esi
cmp [ rwxdata ] esi
jne r-xdata
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
push esi
push esi
push 0x1
push esi
call [ HeapSetInformation@IAT ]
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_40ccbb
test eax eax
jne r-xdata
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_40cb40
test eax eax
jne r-xdata
push 0x1c
call sub_40a30e
xor ecx ecx
cmp [ eax + r--data ] esi
setne cl
mov [ ebp - 0x1c ] ecx
call sub_40c744
mov [ ebp - 0x4 ] esi
call sub_40c4ac
test eax eax
jns r-xdata
push 0x10
call sub_40a30e
call [ GetCommandLineA@IAT ]
mov [ rwxdata ] eax
call sub_40c415
mov [ rwxdata ] eax
call sub_40c35a
test eax eax
jns r-xdata
push 0x1b
call sub_40b372
call sub_40c0d5
test eax eax
jns r-xdata
push 0x8
call sub_40b372
push 0x1
call sub_40b151
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_40b372
call sub_40c076
test [ ebp - 0x3c ] 0x1
je r-xdata
push eax
call sub_40b372
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
call sub_40b354
jmp sub_40a4db
push eax
call sub_40b328
push ecx
push eax
push esi
push __dos_header
call sub_401410
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
sub_40a500
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rwxdata ]
call esi
push [ rwxdata ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_40d126
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ EncodePointer@IAT ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rwxdata ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_40d086
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_40d086
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
sub_40a5b6
mov edi edi
push esi
push 0x4
push 0x20
call sub_40d03a
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
mov [ rwxdata ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_40a5e7
push 0xc
push r--data
call sub_40cd00
call sub_40b06b
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_40a500
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a61d
mov eax [ ebp - 0x1c ]
call sub_40cd45
retn
sub_40a63a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_40c97d
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rwxdata ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rwxdata ]
je r-xdata
mov ecx [ rwxdata ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rwxdata ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_40db3b
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_40d37c
mov [ esi + 0x4 ] eax
sub_40a6df
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_40a63a
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_40de77
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_40df4c
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_40e203
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_40ddef
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40a7f4
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_40a6df
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_40a820
push 0xc
push r--data
call sub_40cd00
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
call sub_40f245
push 0x20
pop ebx
add eax ebx
push eax
push 0x1
call sub_40f35d
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
call sub_40f245
add eax ebx
push eax
call sub_40f3fa
pop ecx
mov edi eax
lea eax [ ebp + 0xc ]
push eax
push esi
push [ ebp + 0x8 ]
call sub_40f245
add eax ebx
push eax
call sub_40f5aa
mov [ ebp - 0x1c ] eax
call sub_40f245
add eax ebx
push eax
push edi
call sub_40f496
add esp 0x18
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a8b4
mov eax [ ebp - 0x1c ]
call sub_40de77
mov [ eax ] 0x16
call sub_41032e
or eax 0xffffffff
jmp r-xdata
call sub_40cd45
retn
sub_40a942
mov edi edi
push ebp
mov ebp esp
mov ecx [ rwxdata ]
mov edx [ ebp + 0x8 ]
or ecx 0x1
xor eax eax
cmp [ rwxdata ] ecx
sete al
neg edx
sbb edx edx
and edx ecx
mov [ rwxdata ] edx
pop ebp
retn
sub_40a982
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40a63a
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x103
lea eax [ ebp - 0x10 ]
push eax
push 0x103
push [ ebp + 0x8 ]
call sub_40e203
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_40a9d8
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_40a982
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x103
pop ebp
retn
sub_40aa08
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40a63a
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x1
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_40e203
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_40aa59
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_40aa08
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x1
pop ebp
retn
sub_40aa87
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40a63a
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x2
lea eax [ ebp - 0x10 ]
push eax
push 0x2
push [ ebp + 0x8 ]
call sub_40e203
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_40aad8
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_40aa87
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x2
pop ebp
retn
sub_40ab06
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40a63a
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_40e203
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_40ab57
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_40ab06
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_40ab85
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40a63a
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x80
lea eax [ ebp - 0x10 ]
push eax
push 0x80
push [ ebp + 0x8 ]
call sub_40e203
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_40abdb
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_40ab85
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x80
pop ebp
retn
sub_40ac0b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40a63a
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x10 ]
push eax
push 0x8
push [ ebp + 0x8 ]
call sub_40e203
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_40ac5c
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_40ac0b
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
pop ebp
retn
sub_40ac8a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40a63a
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x10
lea eax [ ebp - 0x10 ]
push eax
push 0x10
push [ ebp + 0x8 ]
call sub_40e203
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_40acdb
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_40ac8a
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x10
pop ebp
retn
sub_40ad09
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40a63a
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x107
lea eax [ ebp - 0x10 ]
push eax
push 0x107
push [ ebp + 0x8 ]
call sub_40e203
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_40ad5f
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_40ad09
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x107
pop ebp
retn
sub_40ad8f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40a63a
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x157
lea eax [ ebp - 0x10 ]
push eax
push 0x157
push [ ebp + 0x8 ]
call sub_40e203
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_40ade5
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_40ad8f
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x157
pop ebp
retn
sub_40ae15
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40a63a
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x117
lea eax [ ebp - 0x10 ]
push eax
push 0x117
push [ ebp + 0x8 ]
call sub_40e203
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_40ae6b
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_40ae15
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x117
pop ebp
retn
sub_40ae9b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40a63a
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x20
lea eax [ ebp - 0x10 ]
push eax
push 0x20
push [ ebp + 0x8 ]
call sub_40e203
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_40aeec
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_40ae9b
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x20
pop ebp
retn
sub_40af39
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a982
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_40af5c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40a9d8
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_40af7b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ad09
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_40af9e
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
push eax
call sub_40ad5f
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_40aff4
mov edi edi
push ebp
mov ebp esp
push esi
push [ rwxdata ]
call [ DecodePointer@IAT ]
push [ ebp + 0x8 ]
mov esi eax
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
mov eax esi
pop esi
pop ebp
retn
sub_40b028
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_40b07d
mov edi edi
push esi
call sub_40c790
mov esi eax
push esi
call sub_40bbb8
push esi
call sub_410156
push esi
call sub_4106a7
push esi
call sub_410e03
push esi
call sub_410910
push esi
call sub_4108ff
add esp 0x18
pop esi
retn
sub_40b0b0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_40b0cd
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_40b0f1
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rwxdata ]
test eax eax
je r-xdata
call sub_40de77
mov [ eax ] 0x16
call sub_41032e
push 0x16
pop eax
pop ebp
retn
mov [ ecx ] eax
xor eax eax
pop ebp
retn
sub_40b121
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rwxdata ]
test eax eax
je r-xdata
call sub_40de77
mov [ eax ] 0x16
call sub_41032e
push 0x16
pop eax
pop ebp
retn
mov [ ecx ] eax
xor eax eax
pop ebp
retn
sub_40b151
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_410f02
push r--data
push r--data
call sub_40b0cd
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_410fc0
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_40c76a
call sub_40a623
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
cmp [ rwxdata ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rwxdata
call sub_410fc0
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rwxdata ]
sub_40b1e8
push 0x20
push r--data
call sub_40cd00
push 0x8
call sub_410848
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rwxdata ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b313
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rwxdata ] eax
mov al [ ebp + 0x10 ]
mov [ rwxdata ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_40cd45
retn
mov [ rwxdata ] 0x1
push 0x8
call sub_410757
pop ecx
push [ ebp + 0x8 ]
call sub_40b053
mov [ ebp - 0x20 ] r--data
push [ rwxdata ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rwxdata ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_40c790
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_40c790
mov [ edi ] eax
call ebx
push [ rwxdata ]
call esi
mov ebx eax
push [ rwxdata ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_40b390
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rwxdata ] eax
mov [ rwxdata ] ecx
mov [ rwxdata ] edx
mov [ rwxdata ] ebx
mov [ rwxdata ] esi
mov [ rwxdata ] edi
mov [ rwxdata ] ss
mov [ rwxdata ] cs
mov [ rwxdata ] ds
mov [ rwxdata ] es
mov [ rwxdata ] fs
mov [ rwxdata ] gs
pushfd
pop [ rwxdata ]
mov eax [ ebp ]
mov [ rwxdata ] eax
mov eax [ ebp + 0x4 ]
mov [ rwxdata ] eax
lea eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
mov eax [ ebp - 0x320 ]
mov [ rwxdata ] 0x10001
mov eax [ rwxdata ]
mov [ rwxdata ] eax
mov [ rwxdata ] 0xc0000409
mov [ rwxdata ] 0x1
mov eax [ rwxdata ]
mov [ ebp - 0x328 ] eax
mov eax [ rwxdata ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rwxdata ] eax
push 0x1
call sub_41107c
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rwxdata ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_41107c
pop ecx
sub_40b496
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
test edx edx
je r-xdata
call sub_40de77
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov esi edx
sub esi eax
mov [ edx ] al
jmp r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ edx ] 0x0
call sub_40de77
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
je r-xdata
call sub_41032e
mov eax esi
jmp r-xdata
sub_40b4f5
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
call sub_40bead
push 0x1e
call sub_40bcfe
push 0xff
call sub_40b053
push eax
push 0x0
push [ rwxdata ]
call [ HeapAlloc@IAT ]
pop ebp
retn
inc eax
sub_40b534
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_40bc14
pop ecx
call sub_40de77
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_40bead
push 0x1e
call sub_40bcfe
push 0xff
call sub_40b053
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rwxdata ] eax
je r-xdata
push eax
push 0x0
push [ rwxdata ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_40de77
mov [ eax ] esi
push ebx
call sub_40bc14
pop ecx
test eax eax
jne r-xdata
cmp [ rwxdata ] 0x0
jne r-xdata
jmp r-xdata
call sub_40de77
mov [ eax ] esi
sub_40b5d0
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_40b65b
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rwxdata ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_40de77
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40de35
pop ecx
mov [ esi ] eax
pop esi
sub_40b7a8
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4102c2
sub_40b7c9
push 0xc
push r--data
call sub_40cd00
push 0xe
call sub_410848
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b830
call sub_40cd45
retn
mov eax [ rwxdata ]
mov edx rwxdata
push [ esi + 0x4 ]
call sub_40b65b
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_40b65b
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_40b839
push 0xc
push r--data
call sub_40cd00
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp [ edi + 0x4 ] ebx
jne r-xdata
mov eax [ edi + 0x4 ]
push 0x2800
push sub_40b65b
push sub_40b534
push ebx
lea eax [ edi + 0x9 ]
push eax
push ebx
call sub_41625f
add esp 0x18
mov [ ebp - 0x1c ] eax
cmp eax ebx
jne r-xdata
push eax
call sub_40b5d0
pop ecx
mov esi eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp esi ebx
ja r-xdata
call sub_40cd45
retn
dec esi
mov eax [ ebp - 0x1c ]
cmp [ eax + esi ] 0x20
jne r-xdata
dec esi
push 0xe
call sub_410848
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ edi + 0x4 ] ebx
jne r-xdata
mov [ eax + esi ] bl
push [ ebp - 0x1c ]
call sub_40b65b
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b922
push 0x8
call sub_40b534
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
add esi 0x2
push esi
call sub_40b534
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
push ebx
call sub_40b65b
pop ecx
push [ ebp - 0x1c ]
push esi
push eax
call sub_40b496
add esp 0xc
xor ecx ecx
cmp eax ecx
jne r-xdata
push ecx
push ecx
push ecx
push ecx
push ecx
call sub_4102c2
mov eax [ edi + 0x4 ]
mov [ ebx ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov [ ebx + 0x4 ] ecx
mov [ eax + 0x4 ] ebx
jmp r-xdata
sub_40b92b
push 0xc
push r--data
call sub_40cd00
push 0xe
call sub_410848
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b992
call sub_40cd45
retn
mov eax [ rwxdata ]
mov edx rwxdata
push [ esi + 0x4 ]
call sub_40b65b
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_40b65b
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_40b99b
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push sub_40b65b
push sub_40b534
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41625f
add esp 0x18
pop ebp
retn
mov [ ebp + 0x14 ] 0x2800
sub_40b9ce
push 0x10
push r--data
call sub_40cd00
xor ebx ebx
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] ebx
jne r-xdata
mov eax [ esi + 0x4 ]
push 0xe
call sub_410848
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x4 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40bad1
push 0x2800
push ebx
add esi 0x9
push esi
push ebx
call sub_40b99b
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
cmp edi ebx
jne r-xdata
push edi
call sub_40b5d0
pop ecx
mov esi eax
mov [ ebp - 0x20 ] esi
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rwxdata
call sub_416a50
add esp 0xc
xor eax eax
jmp r-xdata
push 0x8
call sub_40b534
pop ecx
mov edi eax
cmp edi ebx
je r-xdata
lea eax [ esi + edi ]
cmp [ eax ] 0x20
jne r-xdata
call sub_40cd45
retn
push [ ebp - 0x1c ]
call sub_40b65b
pop ecx
mov esi [ ebp + 0x8 ]
lea ebx [ esi + 0x2 ]
push ebx
call sub_40b534
pop ecx
mov esi eax
test esi esi
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
push edi
call sub_40b65b
pop ecx
push [ ebp - 0x1c ]
push ebx
push esi
call sub_40b496
add esp 0xc
xor ecx ecx
cmp eax ecx
jne r-xdata
mov eax esi
dec esi
mov [ ebp - 0x20 ] esi
test eax eax
je r-xdata
push ecx
push ecx
push ecx
push ecx
push ecx
call sub_4102c2
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] esi
mov [ edi ] esi
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov [ edi + 0x4 ] ecx
mov [ eax + 0x4 ] edi
jmp r-xdata
sub_40bada
push 0x8
push r--data
call sub_40cd00
push 0xe
call sub_410848
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40bb24
call sub_40cd45
retn
mov edi [ esi + 0x4 ]
push [ esi ]
call sub_40b65b
push esi
call sub_40b65b
pop ecx
pop ecx
mov esi edi
jmp r-xdata
test esi esi
je r-xdata
sub_40bb30
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_40bbc7
mov edi edi
push ebp
mov ebp esp
push esi
push 0x4
call sub_410848
pop ecx
push [ rwxdata ]
call [ DecodePointer@IAT ]
push [ ebp + 0x8 ]
mov esi eax
call [ EncodePointer@IAT ]
push 0x4
mov [ rwxdata ] eax
call sub_410757
pop ecx
mov eax esi
pop esi
pop ebp
retn
sub_40bc14
mov edi edi
push ebp
mov ebp esp
push [ rwxdata ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_40bc3c
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_40bc88
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_41087b
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_40bcd8
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_40bcfe
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_40bcd8
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_409b72
leave
retn
push 0x3
call sub_416ece
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_416ece
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rwxdata ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rwxdata
push edi
call sub_416e6b
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_40b5d0
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rwxdata
push esi
push ebx
mov [ rwxdata ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_4102c2
push esi
call sub_416e50
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_416e6b
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_416d0e
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_416e50
lea eax [ eax * 2 + rwxdata ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_416d83
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_416d0e
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_416ba2
add esp 0xc
jmp r-xdata
sub_40bead
push 0x3
call sub_416ece
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_40bcfe
push 0xff
call sub_40bcfe
pop ecx
pop ecx
push 0x3
call sub_416ece
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rwxdata ] 0x1
jne r-xdata
sub_40bee6
mov eax ecx
push esi
add ecx 0x90
pop esi
cmp eax ecx
jae r-xdata
add eax 0xc
lea esi [ ecx + 0x90 ]
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
retn
sub_40bf0c
mov edi edi
push ebp
mov ebp esp
push esi
call sub_40c904
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_40c056
mov edi edi
push ebp
mov ebp esp
mov eax 0xe06d7363
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0xc ]
push eax
call sub_40bf0c
pop ecx
pop ecx
pop ebp
retn
sub_40c076
mov edi edi
push esi
push edi
xor edi edi
cmp [ rwxdata ] edi
jne r-xdata
mov esi [ rwxdata ]
test esi esi
jne r-xdata
call sub_40d85d
mov al [ esi ]
cmp al 0x20
ja r-xdata
mov esi r--data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movzx eax al
push eax
call sub_417128
pop ecx
test eax eax
je r-xdata
xor ecx ecx
test edi edi
sete cl
mov edi ecx
pop edi
mov eax esi
pop esi
retn
test edi edi
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x20
ja r-xdata
inc esi
sub_40c0d5
cmp [ rwxdata ] 0x0
jne r-xdata
push esi
mov esi [ rwxdata ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_40d85d
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_40d03a
mov edi eax
pop ecx
pop ecx
mov [ rwxdata ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_40b5d0
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rwxdata ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_40b5d0
cmp [ esi ] 0x3d
pop ecx
lea ebx [ eax + 0x1 ]
je r-xdata
push [ rwxdata ]
call sub_40b65b
and [ rwxdata ] 0x0
and [ edi ] 0x0
mov [ rwxdata ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_40d03a
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rwxdata ]
call sub_40b65b
and [ rwxdata ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_40b496
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4102c2
int3
add edi 0x4
sub_40c1c0
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_417128
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_417128
pop ecx
test eax eax
je r-xdata
call sub_417128
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_40c35a
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rwxdata ] ebx
jne r-xdata
push 0x104
mov esi rwxdata
push esi
push ebx
mov [ rwxdata ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rwxdata ]
mov [ rwxdata ] esi
cmp eax ebx
je r-xdata
call sub_40d85d
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_40c1c0
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_40cff5
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_40c1c0
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rwxdata ] eax
mov [ rwxdata ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_40c415
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
call [ GetEnvironmentStringsW@IAT ]
mov ebx eax
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebx ] si
je r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
push esi
sub eax ebx
push esi
sar eax 0x1
inc eax
push eax
push ebx
push esi
push esi
mov [ ebp - 0xc ] eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
pop esi
pop ebx
leave
retn
push ebx
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
push eax
call sub_40cff5
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
push esi
push esi
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push ebx
push esi
push esi
call edi
test eax eax
jne r-xdata
push ebx
call [ FreeEnvironmentStringsW@IAT ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_40b65b
pop ecx
mov [ ebp - 0x4 ] esi
pop edi
sub_40c4ac
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_40d03a
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rwxdata ] eax
mov [ rwxdata ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rwxdata ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rwxdata ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rwxdata
mov esi ebx
shl esi 0x6
add esi [ rwxdata ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rwxdata ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rwxdata ]
add [ rwxdata ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rwxdata ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_40d03a
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rwxdata ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_40c6f1
mov edi edi
push esi
push edi
mov edi rwxdata
add edi 0x4
cmp edi rwxdata
jl r-xdata
lea ecx [ eax + 0x800 ]
cmp eax ecx
jae r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
push [ edi ]
call sub_40b65b
and [ edi ] 0x0
pop ecx
lea esi [ eax + 0xc ]
mov eax [ edi ]
add esi 0x40
add eax 0x800
lea ecx [ esi - 0xc ]
cmp ecx eax
jb r-xdata
push esi
call [ DeleteCriticalSection@IAT ]
cmp [ esi - 0x4 ] 0x0
je r-xdata
sub_40c744
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_40c76a
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_40c7c2
mov edi edi
push esi
push [ rwxdata ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov esi eax
push esi
push [ rwxdata ]
call [ TlsSetValue@IAT ]
sub_40c813
mov eax [ rwxdata ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rwxdata ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rwxdata ]
call [ DecodePointer@IAT ]
call eax
or [ rwxdata ] 0xffffffff
jmp sub_410700
push eax
call [ TlsFree@IAT ]
or [ rwxdata ] 0xffffffff
sub_40c850
push 0x8
push r--data
call sub_40cd00
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rwxdata
push 0xd
call sub_410848
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40c8f2
push 0xc
call sub_410848
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_40d87b
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40c8fb
call sub_40cd45
retn
mov eax [ rwxdata ]
mov [ esi + 0x6c ] eax
sub_40c904
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rwxdata ]
mov edi eax
call sub_40c7c2
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_40d03a
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rwxdata ]
push [ rwxdata ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
push esi
call sub_40b65b
pop ecx
xor esi esi
push 0x0
push esi
call sub_40c850
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_40c997
push 0x8
push r--data
call sub_40cd00
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_40cd45
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_40b65b
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_40b65b
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_40b65b
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_40b65b
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_40b65b
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_40b65b
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_40b65b
pop ecx
push 0xd
call sub_410848
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_40b65b
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40cab1
push 0xc
call sub_410848
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40cabd
push esi
call sub_40b65b
pop ecx
push edi
call sub_40d90a
pop ecx
cmp edi [ rwxdata ]
je r-xdata
cmp edi rwxdata
je r-xdata
cmp edi rwxdata
je r-xdata
push edi
call sub_40b65b
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_40d9a3
pop ecx
sub_40cac6
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0xffffffff
je r-xdata
mov eax [ rwxdata ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rwxdata ]
push [ rwxdata ]
call [ DecodePointer@IAT ]
call eax
push [ ebp + 0x8 ]
call sub_40c997
push esi
push [ rwxdata ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rwxdata ]
push [ rwxdata ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_40cb40
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rwxdata ] eax
call esi
push r--data
push edi
mov [ rwxdata ] eax
call esi
push r--data
push edi
mov [ rwxdata ] eax
call esi
cmp [ rwxdata ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rwxdata ] eax
je r-xdata
call sub_40c813
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rwxdata ] eax
mov eax [ TlsFree@IAT ]
mov [ rwxdata ] sub_40c799
mov [ rwxdata ] esi
mov [ rwxdata ] eax
cmp [ rwxdata ] 0x0
je r-xdata
xor eax eax
push [ rwxdata ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
call sub_40b07d
push [ rwxdata ]
mov esi [ EncodePointer@IAT ]
call esi
push [ rwxdata ]
mov [ rwxdata ] eax
call esi
push [ rwxdata ]
mov [ rwxdata ] eax
call esi
push [ rwxdata ]
mov [ rwxdata ] eax
call esi
mov [ rwxdata ] eax
call sub_4106b6
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_40c813
mov edi [ DecodePointer@IAT ]
push sub_40c997
push [ rwxdata ]
call edi
call eax
mov [ rwxdata ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rwxdata ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_40d03a
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rwxdata ]
push [ rwxdata ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_40c850
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_40cd00
push sub_40cd90
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_40cd90
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rwxdata ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_409b72
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_409b72
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rwxdata
push edi
mov ecx ebx
call sub_416b8b
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_416b42
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_409b72
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_409b72
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_416b72
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rwxdata
push edi
mov edx ebx
mov ecx eax
call sub_416b8b
mov eax [ ebp + 0xc ]
push r--data
call sub_410fc0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_409b72
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_416b59
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_409b72
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_40cf1f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rwxdata ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rwxdata ] eax
jmp r-xdata
mov [ rwxdata ] esi
not esi
mov [ rwxdata ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_40cfba
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call [ Sleep@IAT ]
add esi 0x3e8
cmp esi [ rwxdata ]
jbe r-xdata
mov eax esi
pop esi
pop ebp
retn
or esi 0xffffffff
sub_40cff5
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rwxdata ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rwxdata ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_40b534
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_40d03a
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rwxdata ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rwxdata ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4171d9
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_40d086
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rwxdata ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rwxdata ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41725b
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_40d0d4
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rwxdata ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rwxdata ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417308
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_40d126
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rwxdata ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_40de77
mov [ eax ] 0x16
call sub_41032e
or eax 0xffffffff
pop ebp
retn
sub_40d159
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_40d188
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_417380
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rwxdata
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_40d1ec
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_4174e1
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_40ddef
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_40ddef
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_409b72
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_417380
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_40d37c
push 0xc
push r--data
call sub_40cd00
call sub_40c97d
mov edi eax
mov eax [ rwxdata ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_410848
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rwxdata ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40d417
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rwxdata ]
mov [ edi + 0x68 ] eax
mov esi [ rwxdata ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_40cd45
retn
push 0x20
call sub_40b372
cmp esi rwxdata
je r-xdata
push esi
call sub_40b65b
pop ecx
sub_40d420
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_40a63a
mov [ rwxdata ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rwxdata ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rwxdata ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rwxdata ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_40d49c
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_40d420
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_40d188
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_417380
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rwxdata ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_409b72
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rwxdata ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_40d159
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rwxdata ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_40d1ec
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rwxdata ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rwxdata ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_417380
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_40d159
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_40d685
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_40a63a
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax [ eax + 0x4 ]
je r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
leave
retn
sub_40d6c3
push 0x14
push r--data
call sub_40cd00
or [ ebp - 0x20 ] 0xffffffff
call sub_40c97d
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_40d37c
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_40d420
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_40cff5
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_40cd45
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_40d49c
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rwxdata
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rwxdata
je r-xdata
call sub_40de77
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_40b65b
pop ecx
test [ rwxdata ] 0x1
jne r-xdata
push eax
call sub_40b65b
pop ecx
push 0xd
call sub_410848
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rwxdata ] eax
mov eax [ ebx + 0x8 ]
mov [ rwxdata ] eax
mov eax [ ebx + 0xc ]
mov [ rwxdata ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rwxdata ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rwxdata ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rwxdata ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rwxdata ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rwxdata ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40d824
jmp r-xdata
mov eax [ rwxdata ]
cmp eax rwxdata
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_40b65b
pop ecx
sub_40d87b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rwxdata
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_40d90a
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rwxdata
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_40d9a3
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rwxdata
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rwxdata
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_40b65b
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_40b65b
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_40b65b
push [ esi + 0xc0 ]
call sub_40b65b
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_417d20
push [ esi + 0xd4 ]
call sub_40b65b
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rwxdata
je r-xdata
push esi
call sub_40b65b
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_40b65b
pop ecx
push [ esi + 0xb0 ]
call sub_40b65b
push [ esi + 0xbc ]
call sub_40b65b
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_40b65b
push [ esi + 0xbc ]
call sub_4183cd
pop ecx
pop ecx
push eax
call sub_40b65b
pop ecx
push eax
call sub_40b65b
push [ esi + 0xbc ]
call sub_418144
pop ecx
pop ecx
sub_40daee
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_40d87b
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_40d90a
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rwxdata
je r-xdata
push esi
call sub_40d9a3
pop ecx
sub_40db3b
push 0xc
push r--data
call sub_40cd00
call sub_40c97d
mov esi eax
mov eax [ rwxdata ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_410848
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rwxdata ]
add esi 0x6c
push esi
call sub_40daee
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40dba8
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_40c97d
mov esi [ eax + 0x6c ]
mov eax esi
call sub_40cd45
retn
push 0x20
call sub_40b372
sub_40dbca
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_40b65b
pop ecx
sub_40dbea
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
jne r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
dec ecx
mov eax [ ebp + 0x8 ]
sub eax ecx
dec eax
pop ebp
retn
inc eax
sub_40dc08
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_409b72
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_40dbca
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_40b534
pop ecx
cmp eax ebx
je r-xdata
call sub_418880
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_40dbca
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_40b534
pop ecx
cmp eax ebx
je r-xdata
call sub_418880
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_40ddef
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40a63a
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_40dc08
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40de35
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rwxdata ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rwxdata ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_40de9d
mov edi edi
push ebp
mov ebp esp
push esi
call sub_40de8a
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_40de35
pop ecx
mov esi eax
call sub_40de77
mov [ eax ] esi
pop esi
pop ebp
retn
sub_40dec0
mov edi edi
push ebp
mov ebp esp
call sub_40c904
test eax eax
jne r-xdata
call sub_40de77
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
push 0xc
pop eax
pop ebp
retn
sub_40dee1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
call sub_40de77
mov eax [ eax ]
mov [ esi ] eax
xor eax eax
call sub_41032e
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_40df06
mov edi edi
push ebp
mov ebp esp
call sub_40c904
test eax eax
jne r-xdata
call sub_40de8a
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
push 0xc
pop eax
pop ebp
retn
sub_40df27
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
call sub_40de8a
mov eax [ eax ]
mov [ esi ] eax
xor eax eax
call sub_41032e
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_40df4c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40a63a
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40e16b
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_4188ac
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_40e191
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_4188ac
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_40e1b7
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_4188ac
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_40e1dd
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_4188ac
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_40e203
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_40a63a
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_40df4c
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_4174e1
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_40e2bb
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e203
add esp 0xc
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0xc ]
pop ebp
retn
sub_40e2f9
mov edi edi
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn
test eax eax
je r-xdata
cmp eax esi
je r-xdata
push edi
push 0x36
pop ecx
mov edi eax
[ edi ] [ esi ]
and [ eax ] 0x0
push eax
call sub_40d87b
pop ecx
pop edi
sub_40e31f
mov edi edi
push ebp
mov ebp esp
push esi
call sub_40c97d
mov ecx [ eax + 0x70 ]
push 0x0
pop edx
test cl 0x2
sete dl
lea esi [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
cmp edx 0xffffffff
je r-xdata
or [ rwxdata ] 0xffffffff
test edx edx
je r-xdata
mov eax esi
cmp edx 0x1
je r-xdata
or ecx 0x2
cmp edx 0x2
je r-xdata
and ecx 0xfffffffd
jmp r-xdata
call sub_40de77
mov [ eax ] 0x16
call sub_41032e
or eax 0xffffffff
jmp r-xdata
mov [ eax + 0x70 ] ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_40e3a6
push 0x8
push r--data
call sub_40cd00
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_40cd45
retn
push 0xd
call sub_410848
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40e453
cmp [ esi ] 0x0
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax 0xbaadf00d
mov [ esi ] eax
mov [ esi + 0x4 ] eax
push esi
call sub_40b65b
pop ecx
push 0xc
call sub_410848
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi ]
call sub_40d90a
pop ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax rwxdata
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40e45f
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_40b65b
pop ecx
cmp eax rwxdata
je r-xdata
push eax
call sub_40d9a3
pop ecx
sub_40e473
push 0xc
push r--data
call sub_40cd00
call sub_40c97d
mov edi eax
push 0x1
push 0x8
call sub_40d03a
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
test esi esi
jne r-xdata
call sub_40db3b
call sub_40d37c
mov eax [ edi + 0x6c ]
mov [ esi ] eax
mov eax [ edi + 0x68 ]
mov [ esi + 0x4 ] eax
push 0xc
call sub_410848
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi ]
call sub_40d87b
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40e50d
push 0xd
call sub_410848
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi + 0x4 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40e519
mov eax esi
call sub_40de77
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_40cd45
retn
sub_40e52a
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
xor ebx ebx
xor edi edi
cmp [ ebp + 0x10 ] ebx
jle r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
lea esi [ ebp + 0x10 ]
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_4102c2
int3
inc edi
cmp edi [ ebp + 0x10 ]
jl r-xdata
add esi 0x4
push [ esi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_418d81
add esp 0xc
test eax eax
jne r-xdata
pop esi
sub_40e56b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x90
xor ebx ebx
push ebx
push edi
call sub_417380
mov esi [ ebp + 0xc ]
mov al [ esi ]
add esp 0xc
test al al
jne r-xdata
cmp al 0x2e
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
mov [ ebp + 0xc ] ebx
call sub_418df0
cmp eax ebx
jmp r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
pop ecx
pop ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x80 ]
push 0x10
push eax
call sub_418e36
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
lea edi [ eax + esi ]
mov bl [ edi ]
jne r-xdata
or eax 0xffffffff
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ edi + 0x8f ] bl
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp bl 0x2e
je r-xdata
cmp eax 0x10
jae r-xdata
cmp bl 0x5f
je r-xdata
push eax
push esi
push 0x40
push [ ebp + 0x8 ]
jmp r-xdata
test bl bl
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x40
add eax 0x40
jmp r-xdata
call sub_418e36
add esp 0x10
test eax eax
jne r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x10
sub eax 0xffffff80
cmp bl 0x2c
jne r-xdata
push eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
cmp bl 0x2c
je r-xdata
call sub_4102c2
test bl bl
je r-xdata
inc [ ebp + 0xc ]
lea esi [ edi + 0x1 ]
push r--data
push esi
call sub_418df0
test eax eax
sub_40e68a
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40b496
add esp 0xc
xor ebx ebx
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_4102c2
int3
lea eax [ esi + 0x40 ]
cmp [ eax ] bl
je r-xdata
lea eax [ esi + 0x80 ]
cmp [ eax ] bl
pop esi
pop ebx
je r-xdata
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e52a
add esp 0x14
pop ebp
retn
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e52a
add esp 0x14
sub_40e6f5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
inc ebx
push 0x355
mov [ ebp - 0xc ] ebx
call sub_40cff5
pop ecx
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
pop ebx
leave
retn
push edi
lea edi [ eax + 0x4 ]
mov [ edi ] 0x0
mov [ eax ] ebx
push [ esi + 0x58 ]
mov ebx 0x351
push r--data
push [ r--data ]
push 0x3
push ebx
push edi
call sub_40e52a
lea eax [ esi + 0x58 ]
add esp 0x18
mov [ ebp - 0x4 ] r--data
mov [ ebp - 0x8 ] eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4102c2
mov eax [ ebp - 0x8 ]
lea ecx [ eax + 0x10 ]
push [ ecx ]
mov [ ebp - 0x8 ] ecx
push [ eax ]
call sub_40bb30
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
cmp eax ebx
je r-xdata
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
push [ eax ]
add [ ebp - 0x4 ] 0xc
push r--data
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
push [ eax ]
push 0x3
push ebx
push edi
call sub_40e52a
add esp 0x18
cmp [ ebp - 0x4 ] r--data
jl r-xdata
and [ ebp - 0xc ] 0x0
mov eax [ esi + 0x68 ]
mov [ esi + 0x54 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x48 ] ebx
push eax
call edi
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_40b65b
pop ecx
push r--data
push ebx
push edi
call sub_418d81
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push [ esi + 0x54 ]
call sub_40b65b
pop ecx
push [ ebp - 0x10 ]
call sub_40b65b
mov eax [ esi + 0x50 ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov ebx [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
and [ esi + 0x54 ] 0x0
and [ esi + 0x4c ] 0x0
mov [ esi + 0x50 ] eax
mov [ esi + 0x48 ] edi
mov eax edi
jmp r-xdata
push eax
call ebx
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_40b65b
pop ecx
pop edi
push [ esi + 0x54 ]
call sub_40b65b
pop ecx
sub_40e85a
mov edi edi
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0xa4 ] edi
mov [ ebp - 0xa0 ] eax
call sub_40c97d
lea ecx [ eax + 0xc4 ]
mov [ ebp - 0xac ] ecx
lea ecx [ eax + 0xc8 ]
lea ebx [ eax + 0xbc ]
add eax 0x14b
mov [ ebp - 0xa8 ] ecx
mov [ ebp - 0x98 ] eax
test esi esi
je r-xdata
xor eax eax
cmp [ ebp - 0x9c ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi ] 0x43
jne r-xdata
push esi
call sub_40b5d0
mov edi 0x83
pop ecx
mov [ ebp - 0xb0 ] eax
cmp eax edi
jae r-xdata
cmp [ esi + 0x1 ] 0x0
jne r-xdata
and [ ebp - 0xb4 ] 0x0
lea eax [ ebp - 0x94 ]
push esi
push eax
call sub_40e56b
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp - 0x98 ]
call sub_40bb30
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_40b496
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x94 ]
push eax
push ebx
push eax
call sub_41981e
add esp 0xc
test eax eax
je r-xdata
xor esi esi
cmp [ ebp - 0xa4 ] esi
je r-xdata
push esi
push [ ebp - 0xa8 ]
call sub_40bb30
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
test edi edi
je r-xdata
movzx eax [ ebx + 0x4 ]
mov ecx [ ebp - 0xac ]
mov [ ecx ] eax
lea eax [ ebp - 0x94 ]
push eax
push edi
push [ ebp - 0x98 ]
call sub_40e68a
add esp 0xc
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0xa0 ] esi
je r-xdata
push 0x6
push ebx
push [ ebp - 0xa4 ]
call sub_418ef0
add esp 0xc
mov eax [ ebp - 0xa0 ]
test eax eax
je r-xdata
mov [ edi ] ax
mov [ edi + 0x2 ] ax
mov [ edi + 0x4 ] ax
mov eax [ ebp - 0xb4 ]
mov esi r--data
mov eax [ ebp - 0xb0 ]
cmp eax edi
jb r-xdata
push [ ebp - 0x98 ]
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_40b496
add esp 0xc
test eax eax
jne r-xdata
push 0x4
push [ ebp - 0xac ]
push [ ebp - 0xa0 ]
call sub_418ef0
add esp 0xc
mov eax [ ebp - 0x9c ]
jmp r-xdata
and [ eax ] 0x0
inc eax
push eax
push esi
push edi
push [ ebp - 0xa8 ]
call sub_418e36
add esp 0x10
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
jmp r-xdata
mov eax [ ebp - 0x98 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_409b72
leave
retn
call sub_4102c2
sub_40ea7b
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c8
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
push edi
mov [ ebp - 0x190 ] ebx
mov [ ebp - 0x198 ] eax
call sub_40c97d
mov edi eax
push ebx
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x1b0 ]
push eax
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push [ ebp - 0x198 ]
call sub_40e85a
add esp 0x18
test eax eax
jne r-xdata
shl ebx 0x4
add ebx esi
push [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_40bb30
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
lea eax [ ebp - 0x88 ]
push eax
call sub_40b5d0
add eax 0x5
push eax
mov [ ebp - 0x18c ] eax
call sub_40cff5
pop ecx
pop ecx
mov [ ebp - 0x194 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x48 ]
jmp r-xdata
mov eax [ ebx + 0x48 ]
mov ecx [ ebp - 0x190 ]
mov [ ebp - 0x198 ] eax
lea eax [ esi + ecx * 4 + 0xc ]
mov [ ebp - 0x1a8 ] eax
mov eax [ eax ]
mov [ ebp - 0x1b8 ] eax
lea eax [ ecx + 0x6 ]
imul eax eax 0x6
add eax esi
push 0x6
push eax
mov [ ebp - 0x19c ] eax
lea eax [ ebp - 0x1c8 ]
push eax
call sub_418ef0
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x88 ]
push ecx
mov ecx [ ebp - 0x18c ]
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp - 0x194 ]
add ecx 0xfffffffc
add eax 0x4
push ecx
push eax
call sub_40b496
add esp 0x18
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_409b72
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4102c2
int3
mov eax [ ebp - 0x194 ]
mov ecx [ ebp - 0x1a8 ]
add eax 0x4
mov [ ebx + 0x48 ] eax
movzx eax [ ebp - 0x1b0 ]
mov [ ecx ] eax
push 0x6
lea eax [ ebp - 0x1b0 ]
push eax
push [ ebp - 0x19c ]
call sub_418ef0
add esp 0xc
cmp [ ebp - 0x190 ] 0x2
jne r-xdata
cmp [ ebp - 0x190 ] 0x1
jne r-xdata
mov eax [ ebp - 0x1a4 ]
and [ ebp - 0x18c ] 0x0
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x1f4 ]
mov ecx [ edi + 0x1f0 ]
mov [ ebp - 0x19c ] eax
lea eax [ edi + 0x1d0 ]
mov eax [ ebp - 0x190 ]
imul eax eax 0xc
push esi
call [ eax + r--data ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x1a4 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x18c ]
test eax eax
je r-xdata
mov edx [ eax ]
inc [ ebp - 0x18c ]
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ ebp - 0x1c0 ] edx
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x1c0 ]
add eax 0x8
cmp [ ebp - 0x18c ] 0x5
mov [ ebp - 0x19c ] edx
jl r-xdata
cmp [ ebp - 0x198 ] rwxdata
je r-xdata
mov eax [ ebp - 0x198 ]
push [ ebp - 0x194 ]
mov [ ebx + 0x48 ] eax
call sub_40b65b
mov eax [ ebp - 0x1b8 ]
pop ecx
mov ecx [ ebp - 0x1a8 ]
mov [ ecx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x18c ] 0x5
jne r-xdata
lea eax [ edi + eax * 8 + 0x1d0 ]
mov edx [ eax ]
mov [ edi + 0x1d0 ] edx
mov edx [ eax + 0x4 ]
mov [ edi + 0x1d4 ] edx
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x4 ]
cmp edx [ eax ]
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x190 ]
mov eax [ ebp - 0x194 ]
add ecx 0x5
add ecx ecx
mov [ eax ] 0x1
mov [ esi + ecx * 8 ] eax
jmp r-xdata
mov edi [ ebp - 0x190 ]
add edi 0x5
add edi edi
push [ esi + edi * 8 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi + 0x1d4 ]
mov [ esi + 0xa8 ] eax
push 0x1
push [ esi + 0x14 ]
lea eax [ ebp - 0x188 ]
push [ esi + 0x4 ]
push eax
push 0x7f
push r--data
push 0x1
push 0x0
call sub_4174e1
add esp 0x20
test eax eax
je r-xdata
push [ esi + edi * 8 ]
call sub_40b65b
push [ ebx + 0x54 ]
call sub_40b65b
and [ ebx + 0x4c ] 0x0
pop ecx
pop ecx
and [ edi + 0x1d4 ] 0x0
xor eax eax
mov ecx 0x1ff
and [ ebp + eax * 2 - 0x188 ] cx
inc eax
cmp eax 0x7f
jb r-xdata
push 0xfe
push [ rwxdata ]
lea eax [ ebp - 0x188 ]
push eax
call sub_41af29
add esp 0xc
neg eax
sbb eax eax
inc eax
mov [ edi + 0x1d4 ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x1d0 ] eax
sub_40edb5
mov edi edi
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi edx
push edi
mov [ ebp - 0x98 ] esi
cmp ecx ebx
je r-xdata
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x8c ] ebx
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
call sub_40e6f5
cmp [ eax ] 0x4c
jne r-xdata
add ecx ecx
mov eax [ esi + ecx * 8 + 0x48 ]
jmp r-xdata
push eax
call sub_40ea7b
pop ecx
jmp r-xdata
push ebx
push ebx
push ebx
push 0x83
lea ecx [ ebp - 0x88 ]
push ecx
push eax
call sub_40e85a
add esp 0x18
cmp eax ebx
je r-xdata
cmp [ eax + 0x1 ] 0x43
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_409b72
leave
retn
lea edi [ esi + 0x48 ]
cmp [ eax + 0x2 ] 0x5f
jne r-xdata
inc ebx
add edi 0x10
cmp ebx 0x5
jle r-xdata
push [ edi ]
lea eax [ ebp - 0x88 ]
push eax
call sub_40bb30
pop ecx
pop ecx
test eax eax
je r-xdata
mov edi eax
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x90 ] eax
jne r-xdata
inc [ ebp - 0x8c ]
lea eax [ ebp - 0x88 ]
push eax
mov ecx ebx
call sub_40ea7b
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
sub eax edi
mov [ ebp - 0x90 ] eax
je r-xdata
cmp [ ebp - 0x8c ] eax
je r-xdata
and [ ebp - 0x90 ] eax
jmp r-xdata
cmp [ ebx ] 0x3b
je r-xdata
mov [ ebp - 0x94 ] 0x1
mov esi r--data
jmp r-xdata
push eax
push edi
push [ esi ]
call sub_41c47d
add esp 0xc
test eax eax
jne r-xdata
inc [ ebp - 0x94 ]
add esi 0xc
cmp esi r--data
jle r-xdata
push [ esi ]
call sub_40b5d0
pop ecx
cmp [ ebp - 0x90 ] eax
je r-xdata
mov eax [ ebp - 0x90 ]
inc ebx
push r--data
push ebx
call sub_418df0
mov edi eax
xor esi esi
pop ecx
pop ecx
cmp edi esi
jne r-xdata
cmp [ ebp - 0x94 ] 0x5
jg r-xdata
cmp [ ebx ] 0x3b
jne r-xdata
add edi ebx
cmp [ edi ] 0x0
je r-xdata
push edi
push ebx
lea eax [ ebp - 0x88 ]
push 0x83
push eax
call sub_418e36
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
cmp [ ebp - 0x8c ] eax
je r-xdata
inc edi
cmp [ edi ] 0x0
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_4102c2
mov ecx [ ebp - 0x94 ]
mov esi [ ebp - 0x98 ]
mov [ ebp + edi - 0x88 ] al
lea eax [ ebp - 0x88 ]
push eax
call sub_40ea7b
pop ecx
test eax eax
je r-xdata
mov esi [ ebp - 0x98 ]
jmp r-xdata
push r--data
push edi
call sub_41c540
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
inc [ ebp - 0x8c ]
sub_40efd1
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x5
push esi
push edi
ja r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor edi edi
inc edi
push edi
push 0x8
call sub_40d03a
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
push edi
push 0xd8
call sub_40d03a
pop ecx
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
call sub_40de77
mov [ eax ] 0xc
push edi
push 0x220
call sub_40d03a
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
push esi
call sub_40b65b
mov eax [ esi ]
mov ecx rwxdata
call sub_40e2f9
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ esi ]
call sub_40edb5
pop ecx
test eax eax
jne r-xdata
push [ esi ]
call sub_40b65b
push esi
call sub_40b65b
pop ecx
jmp r-xdata
push [ esi + 0x4 ]
mov eax [ esi ]
push [ eax + 0x4 ]
call sub_40d49c
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi ]
call sub_40d90a
push [ esi ]
call sub_40d9a3
push esi
call sub_40b65b
add esp 0xc
jmp r-xdata
pop ecx
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ eax ] edi
push [ esi + 0x4 ]
call sub_40b65b
push [ esi ]
call sub_40d90a
push [ esi ]
call sub_40d9a3
push esi
call sub_40b65b
add esp 0x10
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax esi
jmp r-xdata
sub_40f0d1
push 0x14
push r--data
call sub_40cd00
and [ ebp - 0x20 ] 0x0
cmp [ ebp + 0x8 ] 0x5
jbe r-xdata
call sub_40c97d
mov esi eax
mov [ ebp - 0x1c ] esi
call sub_40db3b
or [ esi + 0x70 ] 0x10
and [ ebp - 0x4 ] 0x0
xor edi edi
inc edi
push edi
push 0xd8
call sub_40d03a
pop ecx
pop ecx
mov ebx eax
mov [ ebp - 0x24 ] ebx
test ebx ebx
je r-xdata
call sub_40de77
mov [ eax ] 0x16
call sub_41032e
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f240
mov eax [ ebp - 0x20 ]
push 0xc
call sub_410848
pop ecx
mov [ ebp - 0x4 ] edi
mov ecx [ esi + 0x6c ]
mov eax ebx
call sub_40e2f9
and [ ebp - 0x4 ] 0x0
call sub_40f203
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx ebx
call sub_40edb5
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
call sub_40cd45
retn
push ebx
call sub_40d90a
push ebx
call sub_40d9a3
pop ecx
pop ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0xc
call sub_410848
pop ecx
mov [ ebp - 0x4 ] 0x2
lea edi [ esi + 0x6c ]
push ebx
push edi
call sub_40daee
push ebx
call sub_40d90a
add esp 0xc
test [ esi + 0x70 ] 0x2
jne r-xdata
push rwxdata
push [ ebp + 0xc ]
call sub_40bb30
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_40f20f
jmp r-xdata
test [ rwxdata ] 0x1
jne r-xdata
mov [ rwxdata ] edi
push [ edi ]
push rwxdata
call sub_40daee
pop ecx
pop ecx
mov eax [ rwxdata ]
mov ecx [ eax + 0xbc ]
mov [ rwxdata ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rwxdata ] ecx
mov eax [ eax + 0xac ]
mov [ rwxdata ] eax
sub_40f24b
mov eax [ rwxdata ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_40d03a
pop ecx
pop ecx
mov [ rwxdata ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rwxdata ] eax
xor edx edx
mov ecx rwxdata
jmp r-xdata
push 0x4
push esi
mov [ rwxdata ] esi
call sub_40d03a
pop ecx
pop ecx
mov [ rwxdata ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rwxdata
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rwxdata ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rwxdata
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rwxdata ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rwxdata
jl r-xdata
sub_40f31c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rwxdata
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rwxdata
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_410848
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_40f35d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_410848
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_40f38f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rwxdata
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rwxdata
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_410757
pop ecx
pop ebp
retn
sub_40f3cb
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_410757
pop ecx
pop ebp
retn
sub_40f3fa
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_41c858
push eax
call sub_41c802
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
call sub_40f245
add eax 0x20
cmp esi eax
jne r-xdata
call sub_40f245
add eax 0x40
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
inc [ rwxdata ]
test [ esi + 0xc ] 0x10c
jne r-xdata
push ebx
push edi
lea edi [ eax * 4 + rwxdata ]
cmp [ edi ] 0x0
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ebx
push ebx
call sub_40cff5
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
pop esi
pop ebp
retn
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
xor eax eax
pop edi
inc eax
pop ebx
jmp r-xdata
sub_40f496
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x1000
je r-xdata
pop esi
push esi
call sub_41c61c
and [ esi + 0xc ] 0xffffeeff
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
sub_40f4ca
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_41c87e
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_40f4fd
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_40f4ca
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_40f523
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ ebp + 0x8 ]
mov ecx edi
call sub_40f4ca
inc ebx
cmp [ esi ] 0xffffffff
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_40de77
cmp [ eax ] 0x2a
jne r-xdata
mov ecx edi
mov al 0x3f
call sub_40f4ca
sub_40f5aa
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x240 ] esi
mov [ ebp - 0x228 ] ebx
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x238 ] eax
call sub_40a63a
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_40de77
mov [ eax ] 0x16
call sub_41032e
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor esi esi
cmp edi esi
je r-xdata
push esi
call sub_41c858
pop ecx
mov edx rwxdata
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ edi ]
xor ecx ecx
mov [ ebp - 0x224 ] esi
mov [ ebp - 0x220 ] esi
mov [ ebp - 0x24c ] esi
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_409b72
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc edi
mov [ ebp - 0x23c ] edi
cmp [ ebp - 0x224 ] esi
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rwxdata ]
jmp r-xdata
mov eax [ ebp - 0x224 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rwxdata ]
jmp r-xdata
mov edi [ ebp - 0x23c ]
mov al [ edi ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x26c ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x26c ]
mov ebx [ ebp - 0x228 ]
xor esi esi
mov dl al
jmp r-xdata
sub_410165
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_417380
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_41107c
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_409b72
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_41107c
pop ecx
sub_41028e
mov edi edi
push ebp
mov ebp esp
push esi
push [ rwxdata ]
call [ DecodePointer@IAT ]
push [ ebp + 0x8 ]
mov esi eax
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
mov eax esi
pop esi
pop ebp
retn
sub_4102c2
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_410165
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_410301
mov edi edi
push ebp
mov ebp esp
push [ rwxdata ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4102c2
int3
pop ebp
jmp eax
sub_41033e
xor eax eax
push esi
push eax
push eax
push eax
push eax
push eax
call sub_410301
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_410165
add esp 0x20
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
int3
sub_410377
push 0x10
push r--data
call sub_40cd00
call sub_40f245
lea esi [ eax + 0x20 ]
mov [ ebp - 0x1c ] esi
xor eax eax
cmp [ ebp + 0xc ] eax
setne al
test eax eax
jne r-xdata
push esi
call sub_40f31c
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_40f3fa
mov edi eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ ebp + 0x8 ]
mov [ ebp - 0x20 ] eax
push esi
push edi
call sub_40f496
add esp 0x1c
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4103f4
mov eax [ ebp - 0x20 ]
call sub_40de77
mov [ eax ] 0x16
call sub_41032e
or eax 0xffffffff
jmp r-xdata
call sub_40cd45
retn
sub_4104a7
call sub_410a01
test eax eax
je r-xdata
test [ rwxdata ] 0x2
je r-xdata
push 0x16
call sub_410c60
pop ecx
push 0x3
call sub_40b33e
int3
push 0x1
push 0x40000015
push 0x3
call sub_410165
add esp 0xc
sub_4104da
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rwxdata ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rwxdata ] ecx
pop ebp
retn
sub_4104fb
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x1
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x88 ] eax
jne r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
and [ ebp - 0x8c ] 0x0
push 0x80
lea ebx [ ebp - 0x84 ]
mov ecx ebx
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_41ee97
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov esi [ GetLocaleInfoW@IAT ]
xor eax eax
push eax
push eax
push [ ebp + 0x14 ]
mov [ edi ] eax
push [ ebp + 0x10 ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push 0x1
push esi
call sub_40d03a
mov [ edi ] eax
xor edi edi
pop ecx
pop ecx
cmp eax edi
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
or eax 0xffffffff
and [ ebp - 0x88 ] 0x0
push 0x2
lea eax [ ebp - 0x88 ]
push eax
mov eax [ ebp + 0x14 ]
or eax 0x20000000
push eax
push [ ebp + 0x10 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
push [ edi ]
call sub_40b65b
and [ edi ] 0x0
pop ecx
jmp r-xdata
push 0x2
push ebx
call sub_40d03a
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
lea ecx [ esi - 0x1 ]
push ecx
push ebx
push esi
push eax
call sub_418e36
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp - 0x8c ] edi
je r-xdata
push esi
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_41ee97
add esp 0x14
mov [ ebp - 0x90 ] eax
test eax eax
je r-xdata
mov al [ ebp - 0x88 ]
mov [ edi ] al
jmp r-xdata
push ebx
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call esi
test eax eax
jne r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_4102c2
cmp [ ebp - 0x8c ] edi
je r-xdata
push ebx
call sub_40b65b
pop ecx
inc esi
push esi
push eax
call sub_40d03a
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call sub_40b65b
pop ecx
push [ ebp - 0x90 ]
mov [ ebp - 0x8c ] esi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_41ee97
mov esi eax
add esp 0x14
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_409b72
leave
retn
sub_4106b6
mov edi edi
push esi
push edi
xor esi esi
mov edi rwxdata
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rwxdata ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rwxdata ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rwxdata ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_410700
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rwxdata
push edi
add esi 0x8
cmp esi rwxdata
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rwxdata
pop edi
push edi
call ebx
push edi
call sub_40b65b
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rwxdata
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_410786
push 0xc
push r--data
call sub_40cd00
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rwxdata ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rwxdata ]
cmp [ esi ] ebx
je r-xdata
call sub_40bead
push 0x1e
call sub_40bcfe
push 0xff
call sub_40b053
push 0x18
call sub_40cff5
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_410848
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_40de77
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_40cd45
retn
push edi
call sub_40b65b
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_40b65b
pop ecx
call sub_40de77
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41083f
mov eax [ ebp - 0x1c ]
sub_410848
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rwxdata ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_410786
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_40b372
sub_41092e
push 0x10
push r--data
call sub_40cd00
xor edi edi
push edi
call sub_410848
pop ecx
mov [ ebp - 0x4 ] edi
cmp [ ebp + 0x8 ] edi
jne r-xdata
mov esi rwxdata
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x15
mov esi rwxdata
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x2
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4109aa
cmp [ ebp - 0x1c ] edi
jne r-xdata
cmp eax 0x1
je r-xdata
cmp eax edi
je r-xdata
cmp [ ebp - 0x1c ] 0x1
je r-xdata
xor eax eax
jmp r-xdata
call sub_40c790
mov [ esi ] eax
xor eax eax
inc eax
push [ ebp - 0x20 ]
call [ ebp - 0x1c ]
pop ecx
call sub_40cd45
retn 0x4
sub_4109ca
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_410a20
push 0x10
push r--data
call sub_40cd00
and [ ebp - 0x20 ] 0x0
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp esi 0x4
je r-xdata
cmp ebx 0x1
je r-xdata
cmp esi 0x3
je r-xdata
or eax 0xffffffff
cmp ebx 0x3
je r-xdata
push 0x2
pop edi
cmp ebx edi
je r-xdata
cmp ebx 0xd
je r-xdata
push 0x0
call sub_410848
pop ecx
and [ ebp - 0x4 ] 0x0
cmp ebx edi
je r-xdata
cmp ebx 0x15
je r-xdata
cmp ebx 0xf
jle r-xdata
cmp [ rwxdata ] 0x0
jne r-xdata
cmp ebx 0x15
jne r-xdata
cmp ebx 0x16
je r-xdata
call sub_40de77
mov [ eax ] 0x16
call sub_41032e
cmp ebx 0x11
jle r-xdata
mov eax ebx
sub eax edi
je r-xdata
push 0x1
push sub_41092e
call [ SetConsoleCtrlHandler@IAT ]
xor ecx ecx
inc ecx
cmp eax ecx
jne r-xdata
cmp ebx 0x6
je r-xdata
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x4
je r-xdata
call sub_40de8a
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov [ ebp - 0x20 ] 0x1
mov esi [ ebp + 0xc ]
mov [ rwxdata ] ecx
jmp r-xdata
cmp ebx 0xf
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410c25
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
push esi
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x9
je r-xdata
cmp ebx 0x8
je r-xdata
mov eax [ ebp - 0x1c ]
jmp r-xdata
push esi
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
jmp r-xdata
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x6
je r-xdata
call sub_40c904
mov esi eax
test esi esi
je r-xdata
cmp ebx 0x4
je r-xdata
call sub_40cd45
retn
push esi
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
jmp r-xdata
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
dec eax
jne r-xdata
mov edi r--data
cmp [ esi + 0x5c ] edi
jne r-xdata
cmp ebx 0xb
jne r-xdata
push esi
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
jmp r-xdata
push [ esi + 0x5c ]
mov edx ebx
call sub_4109ca
pop ecx
test eax eax
je r-xdata
push [ r--data ]
call sub_40cff5
pop ecx
mov [ esi + 0x5c ] eax
test eax eax
je r-xdata
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp + 0xc ]
cmp ecx 0x2
je r-xdata
push [ r--data ]
push edi
push eax
call sub_418ef0
add esp 0xc
add eax 0x4
jmp r-xdata
cmp [ eax ] ebx
je r-xdata
mov [ eax + 0x4 ] ecx
add eax 0xc
mov edx [ r--data ]
imul edx edx 0xc
add edx [ esi + 0x5c ]
lea edi [ eax - 0x4 ]
cmp edi edx
jae r-xdata
jmp r-xdata
sub_410c60
push 0x20
push r--data
call sub_40cd00
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rwxdata
mov eax [ rwxdata ]
sub eax 0x6
je r-xdata
call sub_40c904
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_40cd45
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rwxdata
mov eax [ rwxdata ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_4109ca
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rwxdata
mov eax [ rwxdata ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_40b33e
mov [ ebp - 0x1c ] 0x1
push eax
call [ DecodePointer@IAT ]
mov esi rwxdata
mov eax [ rwxdata ]
jmp r-xdata
call sub_40de77
mov [ eax ] 0x16
call sub_41032e
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_410848
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_40c790
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410dc7
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_410e12
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov esi eax
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
and [ eax ] 0x0
push edi
test esi esi
jne r-xdata
call sub_40de77
push 0x16
pop esi
mov [ eax ] esi
call sub_41032e
mov eax esi
jmp r-xdata
push 0x4
push [ ebp + 0x8 ]
call esi
test eax eax
jne r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
pop esi
leave
retn
xor eax eax
call sub_40de77
mov [ eax ] 0xc
call sub_40de77
mov eax [ eax ]
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
jne r-xdata
call sub_40de77
push 0x16
pop esi
mov [ eax ] esi
call sub_41032e
mov eax esi
jmp r-xdata
pop edi
push ebx
push esi
call [ EncodePointer@IAT ]
mov edi eax
call sub_40c790
push edi
push rwxdata
mov ebx eax
call [ InterlockedExchange@IAT ]
cmp eax ebx
pop ebx
je r-xdata
call sub_40de77
mov esi [ GetLastError@IAT ]
mov edi eax
call esi
push eax
call sub_40de35
pop ecx
mov [ edi ] eax
call sub_41032e
call esi
push eax
call sub_40de35
pop ecx
jmp r-xdata
push [ ebp - 0x4 ]
call [ FreeLibrary@IAT ]
sub_410f02
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rwxdata ]
call [ EncodePointer@IAT ]
mov [ edi + rwxdata ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_410f30
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_410f70
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_410fc0
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_40cd90
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_410f30
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_410f70
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41108a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
xor eax eax
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
pop ebp
retn 0x8
sub_4110a9
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
je r-xdata
pop esi
retn
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi + 0xc ] eax
test eax eax
jne r-xdata
mov eax [ esi + 0xc ]
mov eax [ eax ]
push [ esi + 0xc ]
mov [ esi + 0x8 ] eax
call [ esi + 0x4 ]
pop ecx
sub_4110d1
mov ecx [ rwxdata ]
mov dl [ ecx ]
test dl dl
jne r-xdata
cmp dl 0x30
jl r-xdata
xor eax eax
retn
xor eax eax
jmp r-xdata
cmp dl 0x39
jg r-xdata
cmp dl 0x40
jne r-xdata
movsx eax dl
sub eax 0x2f
inc ecx
mov [ rwxdata ] ecx
retn
test dl dl
je r-xdata
mov dl [ ecx ]
inc ecx
mov [ rwxdata ] ecx
cmp dl 0x40
je r-xdata
cmp dl 0x41
jl r-xdata
retn
or eax 0xffffffff
cmp dl 0x50
jg r-xdata
movsx edx dl
add eax eax
inc ecx
lea eax [ edx + eax * 8 - 0x41 ]
mov [ rwxdata ] ecx
mov dl [ ecx ]
sub_411133
mov ecx [ rwxdata ]
push ebx
push esi
mov edx 0x4000
push edi
mov al [ ecx ]
cmp al 0x41
jl r-xdata
inc ecx
mov esi edx
mov [ rwxdata ] ecx
cmp al 0x24
jne r-xdata
cmp al 0x5a
jle r-xdata
mov al [ ecx ]
cmp al 0x30
jl r-xdata
xor bl bl
inc ecx
mov [ rwxdata ] ecx
movsx eax [ ecx ]
cmp eax 0x42
jg r-xdata
movsx eax [ ecx ]
sub eax 0x41
mov edx 0x8000
inc ecx
or esi edx
mov [ rwxdata ] ecx
test al 0x1
je r-xdata
cmp al 0x39
jne r-xdata
cmp al 0x38
jg r-xdata
sub eax 0x43
je r-xdata
je r-xdata
and esi 0xffffdfff
or esi 0x2000
jmp r-xdata
xor ecx ecx
test al al
setne cl
lea esi [ ecx + 0xfffe ]
inc ecx
mov [ rwxdata ] ecx
mov esi 0xfffd
jmp r-xdata
movsx eax al
inc ecx
add eax 0xffffffd0
and esi 0xffff7fff
mov [ rwxdata ] ecx
cmp eax 0x8
ja r-xdata
or esi 0x7c00
dec eax
je r-xdata
or esi 0x9800
jmp r-xdata
test eax eax
je r-xdata
mov eax esi
mov ebx 0xffff9fff
mov edi 0x800
test edx esi
je r-xdata
cmp eax 0x18
jge r-xdata
mov eax 0xffff
jmp r-xdata
jmp [ eax * 4 + jump_table_4115f3 ]
and esi 0xfffff5ff
or esi 0x9100
jmp r-xdata
dec eax
je r-xdata
inc ecx
mov [ rwxdata ] ecx
jmp r-xdata
mov esi 0xfffe
dec ecx
jmp r-xdata
cmp eax 0x24
jne r-xdata
and esi ebx
and esi 0xffffefff
or esi edi
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx 0x8000
test edx esi
je r-xdata
mov edx 0x8000
test edx esi
je r-xdata
mov edx 0x8000
test edx esi
je r-xdata
and esi 0xffffdfff
or esi edx
jmp r-xdata
and esi 0xffffe3ff
or esi 0x6000
jmp r-xdata
and esi 0xffffbfff
or esi 0x2000
jmp r-xdata
and esi 0xffffebff
or esi 0x6800
jmp r-xdata
and esi 0xfffff3ff
or esi 0x7000
jmp r-xdata
and esi 0xfffffbff
or esi 0x7800
jmp r-xdata
and esi 0xfffff6ff
or esi 0x9200
jmp r-xdata
sub eax 0xd
jne r-xdata
cmp eax 0x2f
jle r-xdata
cmp [ ecx + 0x1 ] 0x50
jne r-xdata
test edx esi
je r-xdata
cmp ecx 0x8
je r-xdata
mov ecx eax
and ecx 0x18
je r-xdata
and esi 0xffff9fff
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
and esi 0xffff9fff
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
and esi 0xffff9fff
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
inc ecx
mov [ rwxdata ] ecx
mov al [ ecx ]
mov bl 0x1
cmp al 0x30
jl r-xdata
cmp eax 0x35
jle r-xdata
inc ecx
mov [ rwxdata ] ecx
movsx eax [ ecx ]
cmp eax 0x4a
jg r-xdata
inc ecx
and esi 0xffffefff
or esi edi
and esi 0xffffff7f
or esi 0x40
jmp r-xdata
test edx esi
je r-xdata
cmp ecx 0x10
je r-xdata
and esi 0xffffefff
or esi 0x800
jmp r-xdata
and esi 0xffffff7f
or esi 0x40
jmp r-xdata
test edx esi
je r-xdata
and esi 0xfffff7ff
or esi 0x1000
jmp r-xdata
and esi 0xffffffbf
or esi 0x80
jmp r-xdata
test edx esi
je r-xdata
and esi 0xffffe7ff
jmp r-xdata
and esi 0xffffff3f
jmp r-xdata
test edx esi
je r-xdata
xor ecx ecx
test al al
sete cl
lea eax [ ecx + 0xfffe ]
jmp r-xdata
cmp al 0x35
jg r-xdata
movsx eax [ ecx ]
mov edx 0x8000
or esi edx
sub eax 0x30
mov edi 0x800
test edx esi
je r-xdata
cmp eax 0x41
jne r-xdata
cmp eax 0x4c
jl r-xdata
je r-xdata
dec eax
dec eax
je r-xdata
and eax 0x6
sub eax 0x0
je r-xdata
and esi 0xfffff7ff
or esi 0x1000
jmp r-xdata
and esi 0xffffffbf
or esi 0x80
jmp r-xdata
test edx esi
je r-xdata
and esi 0xffff9fff
and esi 0xffffefff
or esi edi
jmp r-xdata
and esi 0xfffff4ff
or esi 0x9000
jmp r-xdata
cmp eax 0x4d
jle r-xdata
inc ecx
mov [ rwxdata ] ecx
mov al [ ecx ]
cmp al 0x30
jl r-xdata
sub eax 0x0
je r-xdata
test edx esi
je r-xdata
dec eax
dec eax
je r-xdata
and esi 0xffffe7ff
jmp r-xdata
and esi 0xffffff3f
jmp r-xdata
and esi 0xfffffdff
or esi 0x500
and esi 0xfffffeff
or esi 0x600
jmp r-xdata
test bl bl
je r-xdata
inc ecx
mov [ rwxdata ] ecx
jmp r-xdata
cmp eax 0x4f
jle r-xdata
mov esi 0xffff
jmp r-xdata
cmp al 0x39
jg r-xdata
mov eax 0xfffe
jmp r-xdata
sub eax 0x46
je r-xdata
and esi ebx
jmp r-xdata
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
and esi 0xfffff9ff
or esi 0x100
jmp r-xdata
dec eax
dec eax
jne r-xdata
and esi 0xffffdfff
or esi 0x2000
jmp r-xdata
test al 0x1
je r-xdata
xor esi esi
cmp [ ecx ] 0x5f
jne r-xdata
cmp eax 0x51
movsx eax al
lea eax [ ecx + eax - 0x2f ]
mov [ rwxdata ] eax
call sub_411133
or eax 0x10000
jmp r-xdata
dec eax
dec eax
jmp r-xdata
and esi 0xfffffcff
or esi 0x400
jmp r-xdata
test edx esi
je r-xdata
dec eax
dec eax
je r-xdata
and eax 0x6
sub eax 0x0
je r-xdata
jne r-xdata
and esi 0xffffefff
or esi edi
jmp r-xdata
and esi 0xffffff7f
or esi 0x40
jmp r-xdata
test edx esi
je r-xdata
dec eax
dec eax
jne r-xdata
and esi 0xfffff7ff
or esi 0x1000
jmp r-xdata
and esi 0xffffffbf
or esi 0x80
jmp r-xdata
test edx esi
je r-xdata
and esi 0xffffe7ff
jmp r-xdata
and esi 0xffffff3f
jmp r-xdata
sub_41170a
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0x7
and edi 0xfffffff8
cmp [ ebp + 0xc ] 0x0
mov esi ecx
je r-xdata
test edi edi
jne r-xdata
push edi
call [ esi ]
pop ecx
jmp r-xdata
mov eax [ esi + 0x10 ]
push ebx
cmp eax edi
jae r-xdata
push 0x8
pop edi
pop edi
pop esi
pop ebp
retn 0x8
sub eax edi
mov [ esi + 0x10 ] eax
mov ebx 0x1000
cmp edi ebx
ja r-xdata
xor eax eax
jmp r-xdata
push 0x1
push 0x1004
mov ecx rwxdata
call sub_41170a
test eax eax
je r-xdata
pop ebx
xor eax eax
and [ eax ] 0x0
jmp r-xdata
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
test eax eax
je r-xdata
mov [ esi + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + ecx + 0x4 ]
sub ebx edi
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] ebx
jmp r-xdata
sub_4118a2
mov edi edi
push ebp
mov ebp esp
mov eax ecx
cmp [ eax + 0x4 ] 0x3
je r-xdata
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov dl [ ecx + 0x4 ]
cmp dl 0x1
jle r-xdata
mov [ eax + 0x4 ] dl
sub_411927
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
test ecx ecx
je r-xdata
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
mov dl [ ecx + 0x4 ]
cmp dl 0x2
je r-xdata
xor ecx ecx
cmp dl 0x3
jne r-xdata
sub_41197e
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_41199f
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax ecx
mov [ eax + 0x4 ] edx
dec edx
neg edx
sbb edx edx
and edx 0xfffffffc
add edx 0x4
mov [ eax ] r--data
mov [ eax + 0x8 ] edx
pop ebp
retn 0x4
sub_4119d4
mov edi edi
push ebp
mov ebp esp
xor ecx ecx
inc ecx
test [ rwxdata ] cl
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x3
ja r-xdata
or [ rwxdata ] ecx
mov eax r--data
xor edx edx
mov [ rwxdata ] eax
mov [ rwxdata ] edx
mov [ rwxdata ] edx
mov [ rwxdata ] eax
mov [ rwxdata ] ecx
mov [ rwxdata ] 0x4
mov [ rwxdata ] eax
mov [ rwxdata ] 0x2
mov [ rwxdata ] edx
mov [ rwxdata ] eax
mov [ rwxdata ] 0x3
mov [ rwxdata ] edx
mov eax rwxdata
pop ebp
retn
imul eax eax 0xc
add eax rwxdata
pop ebp
retn
sub_411a7b
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
jge r-xdata
mov eax [ esi + 0xc ]
pop esi
retn
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
push ebx
push edi
mov edi [ esi + 0x4 ]
call [ eax ]
mov ebx eax
mov eax [ edi ]
mov ecx edi
call [ eax ]
add ebx eax
pop edi
mov [ esi + 0xc ] ebx
pop ebx
sub_411aa6
mov edi edi
push esi
mov esi ecx
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
test al al
jne r-xdata
pop esi
retn
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
pop esi
jmp [ eax + 0x4 ]
sub_411ac2
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi ecx
mov ecx [ esi + 0x4 ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
mov edx [ ecx ]
push eax
call [ edx + 0x8 ]
sub_411afc
mov edi edi
push esi
mov esi edx
test esi esi
je r-xdata
pop esi
retn
sub ecx eax
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
sub_411b12
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
dec [ ebp + 0x8 ]
jne r-xdata
xor eax eax
pop ebp
retn
mov al [ ecx ]
test al al
je r-xdata
movzx eax [ ecx ]
movzx ecx [ edx ]
sub eax ecx
pop ebp
retn
cmp al [ edx ]
jne r-xdata
inc ecx
inc edx
sub_411b3c
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax ecx
or [ eax ] 0xffffffff
lea ecx [ eax + 0x2c ]
or [ ecx ] 0xffffffff
mov [ rwxdata ] edx
mov [ rwxdata ] edx
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
and [ rwxdata ] 0x0
and [ rwxdata ] 0x0
push esi
mov esi [ ebp + 0x10 ]
mov [ rwxdata ] esi
mov [ rwxdata ] edx
pop esi
jmp r-xdata
mov [ rwxdata ] ecx
mov ecx [ ebp + 0x18 ]
mov [ rwxdata ] ecx
mov ecx [ ebp + 0x14 ]
mov [ rwxdata ] eax
mov [ rwxdata ] ecx
mov [ rwxdata ] 0x0
pop ebp
retn 0x14
sub_411bab
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
xor ecx ecx
mov eax 0xffff0000
and [ ebp - 0x4 ] eax
and [ ebp - 0xc ] eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
call sub_415a2a
mov eax [ ebp + 0x8 ]
add esp 0x14
leave
retn
sub_411be4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x10 ] 0x0
mov eax 0xffff0000
and [ ebp - 0x4 ] eax
and [ ebp - 0xc ] eax
push 0x1
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_415a2a
mov eax [ ebp + 0x8 ]
add esp 0x14
leave
retn
sub_411c35
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
sub eax edi
cmp esi eax
jle r-xdata
test esi esi
je r-xdata
mov esi eax
lea eax [ edi + esi ]
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
mov ecx edi
sub eax edi
mov edx esi
push ebx
mov bl [ eax + ecx ]
mov [ ecx ] bl
inc ecx
dec edx
jne r-xdata
pop ebx
sub_411c6c
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
push 0x0
push 0x8
mov ecx rwxdata
call sub_41170a
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx eax
call sub_411927
jmp r-xdata
and [ esi + 0x4 ] 0xffff00ff
mov eax esi
pop esi
pop ebp
retn 0x4
test eax eax
mov [ esi ] eax
setne al
dec al
and al 0x3
mov [ esi + 0x4 ] al
jmp r-xdata
sub_411cbf
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
and [ esi + 0x4 ] 0xffff00ff
cmp ecx 0x2
je r-xdata
mov eax ecx
cmp ecx 0x3
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push ecx
call sub_4119d4
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov [ esi + 0x4 ] 0x3
and [ esi ] 0x0
mov [ esi + 0x4 ] al
cmp ecx 0x1
jne r-xdata
sub_411d04
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebx ]
push esi
mov esi [ ebp + 0x8 ]
push edi
test ecx ecx
je r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov [ esi ] 0x0
mov edi [ ebp + 0xc ]
mov eax [ ecx ]
call [ eax ]
lea edi [ eax + 0x1 ]
push esi
push edi
mov ecx rwxdata
call sub_41170a
mov esi eax
test esi esi
je r-xdata
mov eax [ ecx ]
lea edx [ esi + edi - 0x1 ]
push edx
push esi
call [ eax + 0x8 ]
mov eax esi
jmp r-xdata
jmp r-xdata
mov [ eax ] 0x0
jmp r-xdata
mov ecx [ ebx ]
test ecx ecx
jne r-xdata
sub_411d63
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
je r-xdata
mov [ esi + 0x4 ] 0x3
push 0x0
push 0x10
mov ecx rwxdata
call sub_41170a
test eax eax
je r-xdata
xor eax eax
mov ecx [ esi ]
or [ eax + 0xc ] 0xffffffff
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov [ esi ] eax
test eax eax
jne r-xdata
sub_411dab
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
and [ esi + 0x4 ] 0xffff00ff
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ esi + 0x4 ] 0x3
push 0x0
push 0x8
mov ecx rwxdata
call sub_41170a
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx eax
call sub_411927
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov [ esi ] eax
test eax eax
jne r-xdata
sub_411df8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0xffff00ff
mov [ esi + 0x4 ] al
cmp eax 0x1
jne r-xdata
and [ esi ] 0x0
push eax
call sub_4119d4
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov [ esi + 0x4 ] 0x3
jmp r-xdata
sub_411e2f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi ] 0x9
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x0
je r-xdata
pop edi
push 0x0
push 0x8
mov ecx rwxdata
call sub_41170a
test eax eax
je r-xdata
xor eax eax
mov ecx [ edi ]
mov [ eax ] ecx
mov ecx [ edi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
inc [ esi ]
mov ecx [ esi ]
mov [ esi + ecx * 4 + 0x4 ] eax
test eax eax
je r-xdata
sub_411e79
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x9
ja r-xdata
mov ecx [ ebp + 0x8 ]
push 0x3
call sub_411cbf
mov eax [ ebp + 0x8 ]
mov edx [ ecx ]
cmp edx 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
cmp eax edx
jg r-xdata
pop ebp
retn 0x8
mov ecx [ ecx + eax * 4 + 0x4 ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
sub_411ec8
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
mov [ esi ] r--data
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov ecx rwxdata
call sub_41170a
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edi
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
test edi edi
je r-xdata
mov ecx [ ebp + 0x8 ]
sub ecx eax
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
jmp r-xdata
sub_411f52
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x4
push r--data
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411c35
add esp 0x10
jmp r-xdata
pop ebp
retn 0x8
sub_411f7b
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
cmp [ eax ] 0x40
push [ ebp + 0xc ]
jne r-xdata
push [ ebp + 0x8 ]
call sub_416907
pop ecx
pop ecx
mov ecx [ ebp + 0x8 ]
inc [ rwxdata ]
call sub_411c6c
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_411fbf
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi ] 0x0
mov eax [ ebp + 0x8 ]
je r-xdata
push eax
call sub_411df8
cmp eax 0x2
je r-xdata
cmp eax 0x3
je r-xdata
test eax eax
je r-xdata
push eax
call sub_4119d4
pop ecx
push eax
mov ecx esi
call sub_411d63
jmp r-xdata
sub_412001
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi ] ebx
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
and [ esi + 0x4 ] 0xffff00ff
mov [ esi + 0x4 ] 0x3
mov [ esi ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x2
mov eax [ ebp + 0xc ]
cmp eax ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
sub eax ebx
je r-xdata
mov [ esi + 0x4 ] 0x3
jmp r-xdata
dec eax
push ebx
mov ecx rwxdata
je r-xdata
pop edi
push 0x8
call sub_41170a
cmp eax ebx
je r-xdata
push 0xc
call sub_41170a
cmp eax ebx
je r-xdata
xor eax eax
mov cl [ edi ]
mov [ eax ] r--data
mov [ eax + 0x4 ] cl
jmp r-xdata
push [ ebp + 0xc ]
mov ecx eax
push edi
call sub_411ec8
jmp r-xdata
mov [ esi ] eax
cmp eax ebx
jne r-xdata
sub_412084
mov edi edi
push ebp
mov ebp esp
xor eax eax
push esi
mov esi ecx
mov [ esi + 0x4 ] al
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] eax
cmp [ ebp + 0x8 ] al
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x1
lea eax [ ebp + 0x8 ]
push eax
call sub_412001
sub_4120b1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
push esi
mov esi ecx
mov [ esi + 0x4 ] dl
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] edx
cmp eax edx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
xor ecx ecx
cmp [ eax ] dl
je r-xdata
inc ecx
cmp [ ecx + eax ] dl
jne r-xdata
cmp ecx edx
jbe r-xdata
push ecx
push eax
mov ecx esi
call sub_412001
sub_4120ee
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor edx edx
push edi
mov edi ecx
mov [ edi + 0x4 ] dl
and [ edi + 0x4 ] 0xffff00ff
mov [ edi ] edx
mov eax [ esi ]
cmp eax edx
je r-xdata
mov [ edi + 0x4 ] 0x2
cmp [ eax ] dl
je r-xdata
mov [ edi + 0x4 ] 0x1
jmp r-xdata
mov [ ebp + 0x8 ] eax
mov eax edi
pop edi
pop esi
pop ebp
retn 0x8
push edx
push [ ebp + 0x8 ]
mov ecx edi
call sub_412001
mov eax [ esi ]
mov cl [ eax ]
test cl cl
je r-xdata
cmp al 0x5f
je r-xdata
cmp [ edi + 0x4 ] 0x0
jne r-xdata
inc eax
mov [ esi ] eax
cmp cl [ ebp + 0xc ]
je r-xdata
inc edx
inc ecx
mov eax ecx
mov [ esi ] ecx
cmp [ eax ] 0x0
jne r-xdata
cmp al 0x24
je r-xdata
and [ edi ] 0x0
mov [ edi + 0x4 ] 0x3
jmp r-xdata
mov ecx [ esi ]
mov al [ ecx ]
cmp al [ ebp + 0xc ]
je r-xdata
cmp al 0x3c
je r-xdata
cmp al 0x3e
je r-xdata
cmp al 0x2d
je r-xdata
cmp al 0x61
jl r-xdata
cmp al 0x41
jl r-xdata
cmp al 0x7a
jle r-xdata
cmp al 0x30
jl r-xdata
cmp al 0x5a
jle r-xdata
cmp al 0x80
jb r-xdata
cmp al 0x39
jle r-xdata
test [ rwxdata ] 0x10000
je r-xdata
cmp al 0xfe
jbe r-xdata
sub_4121ad
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor eax eax
push esi
mov esi ecx
push edi
mov [ esi + 0x4 ] al
and [ esi + 0x4 ] 0xffff00ff
lea edi [ ebp - 0x8 ]
mov [ esi ] eax
mov [ ebp - 0x8 ] al
push 0x0
push 0xa
push [ ebp + 0xc ]
dec edi
push [ ebp + 0x8 ]
call sub_41cbe0
add cl 0x30
mov [ ebp + 0x8 ] eax
or eax edx
mov [ ebp - 0x20 ] ebx
mov [ edi ] cl
mov [ ebp + 0xc ] edx
jne r-xdata
lea eax [ ebp - 0x8 ]
sub eax edi
push eax
push edi
mov ecx esi
call sub_412001
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_409b72
leave
retn 0x8
sub_41221b
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi ecx
xor ecx ecx
mov [ esi + 0x4 ] cl
and [ esi + 0x4 ] 0xffff00ff
push edi
lea edi [ ebp - 0x7 ]
mov [ esi ] ecx
mov [ ebp - 0x7 ] cl
mov [ ebp - 0x1d ] cl
cmp eax ecx
jg r-xdata
push ebx
jmp r-xdata
jl r-xdata
push ecx
push 0xa
push eax
push [ ebp + 0x8 ]
dec edi
call sub_41cbe0
add cl 0x30
mov [ ebp + 0x8 ] eax
mov [ edi ] cl
mov ecx [ ebp + 0x8 ]
mov eax edx
or ecx eax
mov [ ebp - 0x24 ] ebx
jne r-xdata
mov edx [ ebp + 0x8 ]
neg edx
adc eax ecx
mov [ ebp - 0x1d ] 0x1
neg eax
mov [ ebp + 0x8 ] edx
cmp [ ebp + 0x8 ] ecx
jae r-xdata
xor ecx ecx
pop ebx
cmp [ ebp - 0x1d ] cl
je r-xdata
lea eax [ ebp - 0x7 ]
sub eax edi
push eax
push edi
mov ecx esi
call sub_412001
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
xor ecx ebp
pop esi
call sub_409b72
leave
retn 0x8
dec edi
mov [ edi ] 0x2d
sub_4122b6
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_411fbf
mov eax esi
pop esi
pop ebp
retn 0x8
sub_4122da
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
test ecx ecx
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
movsx eax [ eax + 0x4 ]
push eax
mov ecx esi
call sub_411fbf
jmp r-xdata
push ecx
mov ecx esi
call sub_411d63
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
sub_41231d
mov edi edi
push ebp
mov ebp esp
push edi
mov edi ecx
cmp [ edi + 0x4 ] 0x1
jg r-xdata
mov eax edi
pop edi
pop ebp
retn 0x4
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
cmp [ edi ] 0x0
jne r-xdata
mov al [ esi + 0x4 ]
test al al
je r-xdata
push esi
call sub_411dab
jmp r-xdata
push 0x0
push 0x8
mov ecx rwxdata
call sub_41170a
test eax eax
je r-xdata
cmp al 0x1
je r-xdata
xor eax eax
push esi
mov ecx eax
call sub_411927
jmp r-xdata
movsx eax al
push eax
call sub_411fbf
jmp r-xdata
push eax
mov ecx edi
call sub_411d63
sub_412384
mov edi edi
push ebp
mov ebp esp
xor eax eax
push esi
mov esi ecx
mov [ esi + 0x4 ] al
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] eax
cmp [ ebp + 0x8 ] al
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x1
lea eax [ ebp + 0x8 ]
push eax
call sub_412001
sub_4123b1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
push esi
mov esi ecx
mov [ esi + 0x4 ] dl
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] edx
xor ecx ecx
cmp [ eax ] dl
je r-xdata
push ecx
push eax
mov ecx esi
call sub_412001
mov eax esi
pop esi
pop ebp
retn 0x4
inc ecx
cmp [ ecx + eax ] dl
jne r-xdata
sub_4123e6
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_411cbf
mov eax [ ebp + 0x8 ]
leave
retn
movsx eax al
sub eax 0x41
inc [ rwxdata ]
cmp eax 0xe
ja r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
mov edx [ ebp - 0x4 ]
and [ ebp - 0x8 ] 0x0
and edx 0xffff0002
push 0x2
pop ecx
or edx ecx
mov [ ebp - 0x4 ] edx
mov edx [ rwxdata ]
shr edx 0x1
not edx
test dl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
and eax 0xfffffffe
sub eax 0x0
je r-xdata
push 0x1
sub eax ecx
je r-xdata
push ecx
jmp r-xdata
sub eax ecx
je r-xdata
call sub_4116eb
add esp 0x4
push eax
lea ecx [ ebp - 0x8 ]
call sub_4123b1
push 0x4
jmp r-xdata
sub eax ecx
je r-xdata
push 0x3
jmp r-xdata
sub eax ecx
je r-xdata
push 0x5
jmp r-xdata
sub eax 0x4
je r-xdata
push 0x6
jmp r-xdata
sub eax ecx
jne r-xdata
push 0x7
jmp r-xdata
sub_4124ae
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_411cbf
cmp al 0x41
je r-xdata
mov ecx [ ebp + 0x8 ]
inc [ rwxdata ]
push r--data
call sub_4120b1
jmp r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
pop ebp
retn
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_4124f9
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_4122da
mov eax esi
pop esi
pop ebp
retn 0x8
sub_41251d
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_41231d
mov eax esi
pop esi
pop ebp
retn 0x8
sub_412541
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push ebx
mov ebx [ ebp + 0x8 ]
test bl bl
je r-xdata
pop ebx
cmp [ esi ] 0x0
jne r-xdata
push 0x0
push 0x8
mov ecx rwxdata
call sub_41170a
test eax eax
je r-xdata
push ebx
call sub_412384
jmp r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] bl
jmp r-xdata
push eax
mov ecx esi
call sub_411d63
sub_412593
mov edi edi
push ebp
mov ebp esp
push edi
mov edi ecx
cmp [ edi + 0x4 ] 0x1
jg r-xdata
mov eax edi
pop edi
pop ebp
retn 0x4
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp esi ebx
je r-xdata
pop esi
pop ebx
cmp [ esi ] bl
je r-xdata
cmp [ edi ] ebx
jne r-xdata
push ebx
push 0xc
mov ecx rwxdata
call sub_41170a
cmp eax ebx
je r-xdata
push esi
call sub_4123b1
jmp r-xdata
xor eax eax
xor edx edx
cmp [ esi ] bl
je r-xdata
push edx
push esi
mov ecx eax
call sub_411ec8
jmp r-xdata
inc edx
cmp [ edx + esi ] bl
jne r-xdata
push eax
mov ecx edi
call sub_411d63
sub_4125f7
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi + 0x4 ] bl
and [ esi + 0x4 ] 0xffff00ff
mov [ ebp - 0x4 ] 0x1
mov [ esi ] ebx
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax esi
pop esi
pop ebx
leave
retn
push edi
pop edi
cmp al 0x5a
je r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
push 0x2c
mov ecx esi
call sub_412541
mov [ ebp - 0x4 ] ebx
jmp r-xdata
push 0x1
mov ecx esi
call sub_411fbf
movsx eax al
sub eax 0x30
cmp eax 0x9
ja r-xdata
mov edi [ rwxdata ]
mov al [ edi ]
cmp al bl
je r-xdata
and [ ebp - 0x8 ] 0xffff0000
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0xc ] ebx
call sub_416756
mov eax [ rwxdata ]
sub eax edi
pop ecx
pop ecx
cmp eax 0x1
jle r-xdata
mov ecx [ rwxdata ]
push eax
lea eax [ ebp - 0x1c ]
inc edi
push eax
mov [ rwxdata ] edi
call sub_411e79
push eax
mov ecx esi
call sub_4122da
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
call sub_4122da
cmp [ rwxdata ] edi
jne r-xdata
mov ecx [ rwxdata ]
cmp [ ecx ] 0x9
je r-xdata
cmp [ esi + 0x4 ] bl
je r-xdata
and [ esi + 0x4 ] 0xffff00ff
mov [ esi + 0x4 ] 0x2
mov [ esi ] ebx
lea eax [ ebp - 0x14 ]
push eax
call sub_411e2f
mov eax [ rwxdata ]
mov al [ eax ]
cmp al 0x40
je r-xdata
jmp r-xdata
sub_4126fd
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
push r--data
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_412593
lea eax [ ebp - 0x8 ]
push eax
call sub_415394
pop ecx
push eax
mov ecx esi
call sub_4122da
push 0x7d
mov ecx esi
call sub_412541
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
mov eax esi
pop esi
leave
retn
inc [ rwxdata ]
sub_412751
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_412084
mov ecx eax
call sub_4124f9
mov eax [ ebp + 0x8 ]
leave
retn
sub_412775
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_411cbf
mov ecx eax
call sub_4124f9
mov eax [ ebp + 0x8 ]
leave
retn
sub_412799
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_4120b1
mov ecx eax
call sub_4124f9
mov eax [ ebp + 0x8 ]
leave
retn
sub_4127bd
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_412541
mov eax esi
pop esi
pop ebp
retn 0x8
sub_4127e1
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_412593
mov eax esi
pop esi
pop ebp
retn 0x8
sub_412805
mov edi edi
push ebp
mov ebp esp
mov ecx [ rwxdata ]
sub esp 0x18
push ebx
xor ebx ebx
cmp [ ecx ] 0x51
jne r-xdata
mov al [ ecx ]
test al al
jne r-xdata
inc ecx
mov ebx r--data
mov [ rwxdata ] ecx
cmp al 0x30
jl r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_411cbf
mov eax [ ebp + 0x8 ]
jmp r-xdata
push esi
push edi
xor esi esi
xor edi edi
jmp r-xdata
cmp al 0x39
jg r-xdata
pop ebx
leave
retn
cmp al 0x40
jne r-xdata
movsx eax [ ecx ]
sub eax 0x2f
cdq
inc ecx
push edx
mov [ rwxdata ] ecx
push eax
test ebx ebx
je r-xdata
test al al
je r-xdata
mov al [ ecx ]
inc ecx
mov [ rwxdata ] ecx
cmp al 0x40
je r-xdata
lea ecx [ ebp - 0x18 ]
call sub_4121ad
lea ecx [ ebp - 0x8 ]
call sub_4121ad
push eax
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_412799
add esp 0xc
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_411cbf
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp al 0x41
jl r-xdata
cmp [ ebp + 0xc ] 0x0
push edi
push esi
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
jmp r-xdata
pop edi
pop esi
cmp al 0x50
jg r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
movsx eax al
shld edi esi 0x4
sub eax 0x41
cdq
shl esi 0x4
add eax esi
adc edi edx
inc ecx
mov esi eax
mov [ rwxdata ] ecx
mov al [ ecx ]
lea ecx [ ebp - 0x8 ]
call sub_4121ad
lea ecx [ ebp - 0x18 ]
call sub_4121ad
lea ecx [ ebp - 0x8 ]
call sub_41221b
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_41221b
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
push eax
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_412799
add esp 0xc
jmp r-xdata
sub_41294b
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rwxdata ]
mov al [ eax ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0xffff0000
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_411cbf
mov eax [ ebp + 0x8 ]
leave
retn
movsx eax al
add eax 0xffffffd0
cmp eax 0x7
ja r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
jmp [ eax * 4 + jump_table_412a17 ]
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
mov eax [ rwxdata ]
movsx eax [ eax ]
inc [ rwxdata ]
sub eax 0x31
je r-xdata
lea ecx [ ebp - 0x8 ]
call sub_4123b1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x18 ]
call sub_4120b1
mov ecx eax
call sub_4124f9
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
jmp r-xdata
dec eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
leave
retn
dec eax
dec eax
je r-xdata
dec eax
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
sub_412a37
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
movsx eax [ eax ]
sub esp 0x10
sub eax 0x58
je r-xdata
inc [ rwxdata ]
push r--data
dec eax
dec eax
je r-xdata
mov eax [ rwxdata ]
inc [ rwxdata ]
shr eax 0x12
not eax
test al 0x1
mov eax r--data
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_4125f7
pop ecx
mov ecx [ ebp - 0x4 ]
test cl cl
jne r-xdata
push eax
jmp r-xdata
mov eax r--data
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
leave
retn
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_4120b1
mov eax [ ebp + 0x8 ]
leave
retn
cmp al 0x40
je r-xdata
inc [ rwxdata ]
cmp al 0x5a
je r-xdata
mov eax [ rwxdata ]
inc [ rwxdata ]
shr eax 0x12
not eax
test al 0x1
mov eax r--data
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
push eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_4127e1
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
leave
retn
mov eax r--data
sub_412b17
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
mov al [ eax ]
sub esp 0x18
test al al
je r-xdata
push 0x29
push [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
push 0x1
push eax
push r--data
lea ecx [ ebp - 0x10 ]
call sub_4120b1
mov ecx eax
call sub_4122b6
mov ecx eax
cmp al 0x5a
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_412a37
pop ecx
push eax
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea ecx [ ebp - 0x18 ]
call sub_4120b1
mov ecx eax
call sub_4124f9
push 0x29
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
jmp r-xdata
inc [ rwxdata ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
and edx 0xffff0000
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
leave
retn
call sub_4127bd
mov eax [ ebp + 0x8 ]
leave
retn
sub_412ba1
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
and [ ebp - 0x8 ] 0xffff0000
push ebx
xor ebx ebx
xor ecx ecx
inc [ rwxdata ]
mov eax [ rwxdata ]
mov dl [ eax ]
movsx eax dl
push esi
mov esi eax
sub esi 0x41
push edi
mov edi 0xffff00ff
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec esi
je r-xdata
mov eax [ ebp + 0x8 ]
inc [ rwxdata ]
mov [ eax + 0x4 ] bl
and [ eax + 0x4 ] edi
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
cmp [ eax ] 0x26
mov eax r--data
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec esi
je r-xdata
mov [ ecx ] eax
mov eax r--data
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov eax [ ebp + 0x10 ]
and [ ebp - 0x8 ] 0xffffff00
and [ ebp - 0x8 ] edi
mov [ eax ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] 0x3e
mov [ ebp - 0xc ] ebx
call sub_412001
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] r--data
jmp r-xdata
cmp dl bl
je r-xdata
mov [ eax ] ebx
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_411cbf
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov edx [ rwxdata ]
mov dl [ edx + 0x1 ]
cmp dl bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x14 ] ebx
je r-xdata
add [ rwxdata ] 0x2
add eax 0xffffffd0
movsx edx dl
add eax eax
lea esi [ edx + eax * 8 - 0x30 ]
cmp esi 0x1
jbe r-xdata
mov eax [ ebp - 0x8 ]
and [ ebp - 0x8 ] 0xffffff00
and [ ebp - 0x8 ] 0xffff00ff
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] 0x2c
mov [ ebp - 0xc ] ebx
call sub_412001
push ebx
push esi
lea ecx [ ebp - 0x1c ]
call sub_4121ad
push eax
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_4124f9
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov [ ebp - 0x10 ] ecx
push 0x5e
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] eax
call sub_412541
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
inc [ rwxdata ]
jmp r-xdata
mov [ ebp - 0x14 ] ecx
push 0x3e
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
call sub_412541
mov edx [ rwxdata ]
cmp [ edx ] 0x24
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jne r-xdata
push 0x1
lea ecx [ ebp - 0xc ]
call sub_411fbf
inc [ rwxdata ]
jmp r-xdata
mov eax [ rwxdata ]
cmp [ eax ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
or ecx 0x4000
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
jmp r-xdata
sub_412d69
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
sub esp 0x38
push ebx
xor ebx ebx
cmp [ eax ] bl
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] ebx
je r-xdata
call sub_4110d1
mov [ ebp - 0x4 ] eax
cmp eax ebx
jge r-xdata
lea eax [ ebp - 0x38 ]
push 0x5d
push eax
lea eax [ ebp - 0x30 ]
lea ecx [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push 0x28
lea ecx [ ebp - 0x38 ]
call sub_412084
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x24 ]
push r--data
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_412593
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
push 0x1
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
call sub_411fbf
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x5d
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_412541
lea eax [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
push eax
push [ ebp + 0x8 ]
call sub_416393
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
and [ ebp - 0xc ] 0xffff0000
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi 0x800
mov [ ebp - 0x10 ] ebx
test [ edi + 0x4 ] esi
je r-xdata
lea eax [ ebp - 0x28 ]
push 0x5d
push eax
lea eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
jle r-xdata
push r--data
lea ecx [ ebp - 0x10 ]
call sub_412593
jmp r-xdata
push 0x1
push eax
push 0x5b
call sub_412084
mov ecx eax
call sub_4122b6
mov ecx eax
call sub_4127bd
mov eax [ ebp - 0x4 ]
dec [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ edi ] ebx
je r-xdata
mov eax [ rwxdata ]
cmp [ eax ] bl
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_416756
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x28 ]
pop ecx
pop ecx
mov ecx [ ebp - 0x24 ]
or ecx esi
pop edi
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop esi
jmp r-xdata
test [ edi + 0x4 ] esi
je r-xdata
lea eax [ ebp - 0x30 ]
push ebx
push eax
call sub_412805
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x5b
lea ecx [ ebp - 0x38 ]
call sub_412084
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
push 0x5d
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_412541
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_4122da
pop ebx
leave
retn
push edi
lea eax [ ebp - 0x20 ]
push eax
push 0x28
lea ecx [ ebp - 0x38 ]
call sub_412084
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x1c ]
push 0x29
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_412541
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_4122da
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov ecx edi
call sub_4124f9
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov eax [ eax + 0x4 ]
jmp r-xdata
mov [ ebp - 0xc ] eax
sub_412f5f
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_412805
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x60
lea ecx [ ebp - 0x18 ]
call sub_412084
mov ecx eax
call sub_4124f9
push 0x27
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
call sub_4127bd
mov eax [ ebp + 0x8 ]
leave
retn
sub_412fde
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
sub esp 0x20
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
inc ebx
mov [ esi + 0x4 ] eax
cmp al bl
jg r-xdata
mov eax esi
pop esi
pop ebx
leave
retn
mov ecx [ rwxdata ]
cmp [ ecx ] 0x0
je r-xdata
cmp al bl
jg r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_411bab
mov eax [ ebp - 0x10 ]
pop ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x20
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_412541
push esi
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_4124f9
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
cmp al bl
jg r-xdata
push esi
lea eax [ ebp - 0x10 ]
push eax
push ebx
lea ecx [ ebp - 0x20 ]
call sub_411cbf
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x10 ]
mov [ esi ] eax
mov eax [ ebp - 0xc ]
mov [ esi + 0x4 ] eax
mov eax [ rwxdata ]
cmp [ eax ] 0x40
je r-xdata
inc [ rwxdata ]
jmp r-xdata
push r--data
jmp r-xdata
mov ecx esi
call sub_412593
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jg r-xdata
cmp al 0x40
je r-xdata
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
mov eax [ rwxdata ]
cmp [ eax ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
call sub_415394
pop ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0x60
lea ecx [ ebp - 0x20 ]
call sub_412084
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x27
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_412541
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
call sub_4122da
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
push 0x7d
mov ecx esi
call sub_412541
push ebx
mov ecx esi
call sub_411fbf
cmp [ esi + 0x4 ] bl
jg r-xdata
inc eax
mov [ rwxdata ] eax
cmp [ eax ] 0x40
je r-xdata
cmp [ esi + 0x4 ] bl
jle r-xdata
push r--data
sub_41313d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x8 ]
call sub_4120b1
mov eax [ rwxdata ]
mov al [ eax ]
inc [ rwxdata ]
cmp al 0x40
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
mov eax [ rwxdata ]
mov al [ eax ]
inc [ rwxdata ]
cmp al 0x5f
jne r-xdata
inc [ rwxdata ]
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_412805
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_412805
mov eax [ rwxdata ]
mov cl [ eax ]
add esp 0x10
test cl cl
je r-xdata
mov ecx [ ebp + 0x8 ]
dec eax
push 0x1
mov [ rwxdata ] eax
call sub_411cbf
mov eax [ ebp + 0x8 ]
leave
retn
cmp cl 0x40
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
inc eax
mov [ rwxdata ] eax
mov cl [ eax ]
test cl cl
jne r-xdata
mov ecx [ ebp - 0x8 ]
inc eax
mov [ rwxdata ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
sub_4131f0
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rwxdata ]
mov al [ eax ]
test al al
jne r-xdata
push 0x0
cmp al 0x3f
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_411cbf
jmp r-xdata
push [ ebp + 0x8 ]
call sub_412805
pop ecx
pop ecx
inc [ rwxdata ]
lea eax [ ebp - 0x8 ]
push eax
call sub_412805
push eax
push 0x2d
push [ ebp + 0x8 ]
call sub_412751
add esp 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
leave
retn
sub_413242
mov edi edi
push ebp
mov ebp esp
sub esp 0xc8
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rwxdata ]
push ebx
mov bl [ eax ]
inc [ rwxdata ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movsx edi bl
cmp edi 0x44
jg r-xdata
cmp edi 0x45
je r-xdata
je r-xdata
push esi
call sub_415126
jle r-xdata
lea eax [ ebp - 0x80 ]
push eax
call sub_4131f0
test [ rwxdata ] 0x4000
pop ecx
je r-xdata
sub edi 0x0
je r-xdata
and [ esi + 0x4 ] 0xffff00ff
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x2
jmp r-xdata
cmp edi 0x4a
jle r-xdata
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0x88 ]
lea ecx [ ebp - 0xc ]
push eax
cmp bl 0x44
jne r-xdata
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x80 ]
call sub_411d04
lea eax [ ebp - 0x14 ]
push eax
call sub_41eeda
push eax
call [ rwxdata ]
pop ecx
pop ecx
test eax eax
je r-xdata
dec [ rwxdata ]
sub edi 0x30
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_409b72
leave
retn
push 0x7b
lea ecx [ ebp - 0x80 ]
call sub_412084
cmp bl 0x48
jl r-xdata
cmp edi 0x51
je r-xdata
push r--data
jmp r-xdata
push r--data
push eax
jmp r-xdata
push esi
call sub_4131f0
jmp r-xdata
dec edi
je r-xdata
sub edi 0x46
je r-xdata
cmp bl 0x4a
jg r-xdata
cmp edi 0x52
jne r-xdata
call sub_4120b1
mov ecx eax
call sub_4124f9
push r--data
push esi
lea ecx [ ebp - 0x88 ]
call sub_4127e1
jmp r-xdata
mov ecx esi
call sub_4120b1
jmp r-xdata
pop ecx
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
dec edi
jne r-xdata
lea eax [ ebp - 0xa8 ]
push eax
call sub_4131f0
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_4122da
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_412541
dec edi
je r-xdata
lea eax [ ebp - 0xb0 ]
push eax
call sub_415126
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_4122da
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_412541
push 0x0
lea eax [ ebp - 0x88 ]
push 0x0
push eax
call sub_413f6c
lea eax [ ebp - 0x80 ]
push eax
call sub_4131f0
mov eax [ ebp - 0x88 ]
mov [ esi ] eax
mov eax [ ebp - 0x84 ]
add esp 0x10
mov [ esi + 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0xc8 ]
push eax
call sub_415126
pop ecx
push eax
push esi
push r--data
lea ecx [ ebp - 0x90 ]
call sub_4120b1
jmp r-xdata
inc [ rwxdata ]
push r--data
lea eax [ ebp - 0x80 ]
push eax
call sub_4131f0
lea eax [ ebp - 0x88 ]
push eax
call sub_4131f0
cmp [ ebp - 0x7c ] 0x1
pop ecx
pop ecx
jg r-xdata
lea eax [ ebp - 0x98 ]
push eax
call sub_4131f0
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_4122da
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_412541
dec edi
je r-xdata
mov ecx eax
call sub_4124f9
jmp r-xdata
push 0x1
mov ecx esi
call sub_411cbf
jmp r-xdata
cmp [ ebp - 0x84 ] 0x1
jg r-xdata
lea eax [ ebp - 0xb8 ]
push eax
call sub_4131f0
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_4122da
dec edi
je r-xdata
push 0x64
lea eax [ ebp - 0x77 ]
push eax
lea ecx [ ebp - 0x80 ]
call sub_411d04
test eax eax
jne r-xdata
dec edi
jne r-xdata
mov al [ ebp - 0x77 ]
mov [ ebp - 0x78 ] al
cmp al 0x2d
jne r-xdata
push 0x7d
push esi
lea ecx [ ebp - 0x80 ]
call sub_4127bd
jmp r-xdata
mov [ ebp - 0x77 ] 0x2e
mov al [ ebp - 0x76 ]
mov [ ebp - 0x77 ] al
mov [ ebp - 0x76 ] 0x2e
jmp r-xdata
lea eax [ ebp - 0x88 ]
push eax
push esi
push 0x65
lea eax [ ebp - 0xa0 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ ebp - 0xc0 ]
call sub_4120b1
mov ecx eax
call sub_4127bd
sub_413532
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
xor ecx ecx
sub esp 0x18
cmp [ eax ] cl
je r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_412775
cmp [ ebp + 0x10 ] ecx
je r-xdata
cmp [ eax ] 0x59
jne r-xdata
cmp [ eax ] 0x58
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push esi
push eax
call sub_416393
mov eax [ esi + 0x4 ]
pop ecx
pop ecx
pop esi
test eax 0x4000
je r-xdata
push [ ebp + 0xc ]
inc eax
push [ ebp + 0x8 ]
mov [ rwxdata ] eax
call sub_412d69
pop ecx
pop ecx
jmp r-xdata
inc eax
mov [ rwxdata ] eax
mov eax [ ebp + 0xc ]
cmp [ eax ] ecx
jne r-xdata
test eax 0x2000
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
mov eax [ ebp + 0x8 ]
leave
retn
push eax
push r--data
push [ ebp + 0x8 ]
call sub_412799
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
call sub_4120b1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
leave
retn
add esp 0xc
lea ecx [ ebp - 0x18 ]
call sub_4120b1
mov ecx eax
call sub_4124f9
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
jmp r-xdata
sub_413630
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi + 0x4 ] bl
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] ebx
mov [ rwxdata ] 0x1
mov [ ebp - 0x20 ] 0x1
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop esi
mov [ rwxdata ] bl
xor ecx ebp
pop ebx
call sub_409b72
leave
retn
push edi
mov edi 0xffff0000
pop edi
cmp cl 0x40
je r-xdata
cmp [ ebp - 0x20 ] ebx
je r-xdata
push 0x2c
mov ecx esi
call sub_412541
mov eax [ rwxdata ]
mov [ ebp - 0x20 ] ebx
jmp r-xdata
and [ ebp - 0x18 ] edi
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x1c ] ebx
cmp dl 0x58
jne r-xdata
inc eax
mov [ rwxdata ] eax
push ecx
mov ecx [ rwxdata ]
lea eax [ ebp - 0x74 ]
push eax
call sub_411e79
jmp r-xdata
mov dl [ eax ]
movsx ecx dl
sub ecx 0x30
cmp ecx 0x9
ja r-xdata
cmp dl 0x24
jne r-xdata
inc eax
mov [ rwxdata ] eax
push r--data
push eax
mov ecx esi
call sub_4122da
cmp [ esi + 0x4 ] bl
je r-xdata
cmp dl 0x3f
jne r-xdata
inc eax
cmp [ eax ] dl
je r-xdata
mov eax [ rwxdata ]
sub eax [ ebp - 0x44 ]
cmp eax 0x1
jle r-xdata
mov eax [ rwxdata ]
mov cl [ eax ]
cmp cl bl
je r-xdata
and [ ebp - 0x3c ] edi
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x6c ]
push eax
mov [ ebp - 0x40 ] ebx
call sub_416756
pop ecx
lea eax [ ebp - 0x38 ]
push eax
call sub_4131f0
test [ rwxdata ] 0x4000
pop ecx
je r-xdata
mov [ rwxdata ] eax
lea eax [ ebp - 0x7c ]
push eax
call sub_413242
jmp r-xdata
lea eax [ ebp - 0x1c ]
mov ecx [ rwxdata ]
cmp [ ecx ] 0x9
je r-xdata
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push r--data
lea ecx [ ebp - 0x64 ]
call sub_4120b1
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x54 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x50 ]
push r--data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x2c ] eax
call sub_412593
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x2c ]
jmp r-xdata
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x38 ]
call sub_411d04
lea eax [ ebp - 0x14 ]
push eax
call sub_41eeda
push eax
call [ rwxdata ]
pop ecx
pop ecx
cmp eax ebx
je r-xdata
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
lea eax [ ebp - 0x1c ]
push eax
call sub_411e2f
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push r--data
lea ecx [ ebp - 0x5c ]
call sub_4120b1
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x48 ]
push r--data
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x24 ] eax
call sub_412593
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x24 ]
jmp r-xdata
push eax
jmp r-xdata
lea ecx [ ebp - 0x1c ]
call sub_4123b1
jmp r-xdata
sub_41383f
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rwxdata ]
movsx edx [ eax ]
push ebx
xor ebx ebx
mov ecx 0xffff0000
and [ ebp - 0x4 ] ecx
and [ ebp - 0xc ] ecx
push esi
xor esi esi
inc eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ rwxdata ] eax
cmp edx 0x41
jg r-xdata
cmp edx 0x42
je r-xdata
je r-xdata
xor esi esi
inc esi
jle r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x8 ]
call sub_4123b1
cmp esi ebx
je r-xdata
cmp edx ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
mov [ eax + 0x4 ] 0x2
mov [ eax ] ebx
jmp r-xdata
cmp edx 0x5a
jle r-xdata
dec eax
mov [ rwxdata ] eax
cmp edx 0x2f
jle r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push r--data
lea ecx [ ebp - 0x30 ]
call sub_4120b1
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0x200
jmp r-xdata
pop esi
pop ebx
leave
retn
cmp edx 0x5f
jne r-xdata
cmp edx 0x31
jle r-xdata
movsx ecx [ eax ]
inc eax
mov [ rwxdata ] eax
cmp ecx 0x4f
jg r-xdata
and [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0xc ] bl
je r-xdata
cmp edx 0x39
jg r-xdata
cmp ecx 0x54
jg r-xdata
cmp ecx 0x44
jge r-xdata
push ebx
mov esi eax
lea eax [ ebp - 0x90 ]
push ebx
push eax
call sub_413f6c
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov [ rwxdata ] esi
cmp ecx ebx
je r-xdata
lea eax [ ebp - 0x88 ]
push eax
call sub_413630
pop ecx
push eax
lea eax [ ebp - 0x28 ]
push eax
push 0x3c
lea ecx [ ebp - 0x20 ]
call sub_412084
mov ecx eax
call sub_4124f9
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_4122da
mov ecx [ ebp - 0x10 ]
cmp ecx ebx
je r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
cmp ecx 0x55
jl r-xdata
cmp ecx 0x53
jge r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x39
jg r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp [ esi - 0x1 ] 0x31
jne r-xdata
push 0x3e
lea ecx [ ebp - 0x10 ]
call sub_412541
mov eax [ ebp + 0x10 ]
cmp eax ebx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x4 ]
cmp al 0x3e
jne r-xdata
cmp ecx 0x56
jle r-xdata
sub ecx 0x50
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_4120b1
jmp r-xdata
cmp ecx 0x3f
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_4122da
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x7e
lea ecx [ ebp - 0x28 ]
call sub_412084
mov ecx eax
call sub_4124f9
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ rwxdata ]
cmp [ eax ] bl
jne r-xdata
mov [ eax ] 0x1
push 0x20
lea ecx [ ebp - 0x10 ]
call sub_412541
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x57
jle r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x8 ]
call sub_4123b1
push ebx
lea eax [ ebp - 0x70 ]
push ebx
push eax
call sub_41383f
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
cmp ecx ebx
je r-xdata
dec ecx
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
movsx ecx [ eax ]
inc eax
mov [ rwxdata ] eax
cmp ecx ebx
je r-xdata
cmp ecx 0x40
jle r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x20 ]
call sub_4120b1
mov ecx [ ebp - 0x1c ]
or ecx 0x8000
cmp ecx ebx
je r-xdata
inc eax
mov [ rwxdata ] eax
mov ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0xc ]
jmp r-xdata
lea ecx [ ebp - 0x8 ]
call sub_4123b1
cmp ecx 0x59
jle r-xdata
lea ecx [ ebp - 0x8 ]
test eax 0x400
je r-xdata
dec ecx
jne r-xdata
cmp ecx 0x30
jne r-xdata
cmp ecx 0x42
jle r-xdata
mov [ eax + 0x4 ] ecx
cmp ecx 0x2f
jle r-xdata
cmp ecx 0x5f
jne r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x8 ]
call sub_4123b1
mov eax [ rwxdata ]
mov al [ eax ]
cmp al bl
jne r-xdata
push ebx
push r--data
jmp r-xdata
cmp ecx 0x43
jne r-xdata
cmp ecx 0x36
jle r-xdata
movsx ecx [ eax ]
inc eax
mov [ rwxdata ] eax
cmp ecx 0x41
jl r-xdata
movsx eax al
sub eax 0x30
js r-xdata
push 0x1
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
call sub_4122b6
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_41313d
mov ecx [ ebp - 0x1c ]
add esp 0xc
or ecx 0x1000
jmp r-xdata
push 0x1
push r--data
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x38
jg r-xdata
cmp ecx 0x44
jle r-xdata
cmp eax 0x5
jae r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
jmp r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x46
jle r-xdata
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x10 ]
call sub_4123b1
mov eax [ rwxdata ]
movsx eax [ eax ]
inc [ rwxdata ]
cmp eax 0x30
je r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x18 ]
call sub_4120b1
mov eax [ rwxdata ]
cmp [ eax ] 0x3f
jne r-xdata
cmp ecx 0x4a
jg r-xdata
lea eax [ ebp - 0x28 ]
push ebx
push eax
call sub_416907
mov eax [ ebp - 0x28 ]
pop ecx
pop ecx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x24 ]
push 0x20
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_412541
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_4122da
lea ecx [ ebp - 0x20 ]
jmp r-xdata
cmp eax 0x31
je r-xdata
lea eax [ ebp - 0x30 ]
push eax
call sub_414386
pop ecx
push eax
lea ecx [ ebp - 0x18 ]
call sub_4122da
lea eax [ ebp - 0x80 ]
push eax
call sub_415126
pop ecx
push eax
lea ecx [ ebp - 0x18 ]
call sub_4122da
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_4124f9
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_4122da
push 0x2c
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_4131f0
pop ecx
mov ecx eax
call sub_4127bd
push eax
lea ecx [ ebp - 0x18 ]
call sub_4122da
push 0x2c
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
call sub_4131f0
pop ecx
mov ecx eax
call sub_4127bd
push eax
lea ecx [ ebp - 0x18 ]
call sub_4122da
push 0x2c
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_4131f0
pop ecx
mov ecx eax
call sub_4127bd
push eax
lea ecx [ ebp - 0x18 ]
call sub_4122da
push 0x29
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x60 ]
push ebx
push eax
call sub_412805
pop ecx
pop ecx
mov ecx eax
call sub_4127bd
push eax
lea ecx [ ebp - 0x18 ]
call sub_4122da
push 0x27
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
call sub_4127bd
jmp r-xdata
add eax 0xffffffce
cmp eax 0x2
jbe r-xdata
push r--data
lea ecx [ ebp - 0x18 ]
call sub_412593
mov ecx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x14 ]
jmp r-xdata
inc [ rwxdata ]
jmp r-xdata
dec [ rwxdata ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_411cbf
sub_413e15
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
sub esp 0xa8
cmp [ eax ] 0x3f
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
cmp [ eax + 0x1 ] 0x24
jne r-xdata
or [ ebp - 0x50 ] 0xffffffff
or [ ebp - 0x7c ] 0xffffffff
or [ ebp - 0xa8 ] 0xffffffff
push ebx
mov ebx [ rwxdata ]
push esi
mov esi [ rwxdata ]
lea ecx [ ebp - 0x50 ]
mov [ rwxdata ] ecx
lea ecx [ ebp - 0x7c ]
push edi
mov edi [ rwxdata ]
mov [ rwxdata ] ecx
add eax 0x2
lea ecx [ ebp - 0xa8 ]
mov [ rwxdata ] eax
mov [ rwxdata ] ecx
cmp [ eax ] 0x3f
mov [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_413f6c
inc eax
mov [ rwxdata ] eax
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_41383f
jmp r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov [ rwxdata ] 0x1
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] ecx
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ rwxdata ] edi
pop edi
mov [ rwxdata ] esi
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
pop esi
mov [ rwxdata ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn
lea eax [ ebp - 0x1c ]
push eax
call sub_413630
pop ecx
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x3c
lea ecx [ ebp - 0x24 ]
call sub_412084
mov ecx eax
call sub_4124f9
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_4122da
mov ecx [ ebp - 0xc ]
test ecx ecx
je r-xdata
push 0x3e
lea ecx [ ebp - 0xc ]
call sub_412541
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ecx ]
call [ eax + 0x4 ]
cmp al 0x3e
jne r-xdata
mov eax [ rwxdata ]
cmp [ eax ] 0x0
je r-xdata
push 0x20
lea ecx [ ebp - 0xc ]
call sub_412541
inc [ rwxdata ]
sub_413f6c
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ rwxdata ]
mov cl [ ebx ]
movsx eax cl
push esi
mov esi [ ebp + 0x8 ]
sub eax 0x30
mov [ ebp - 0x38 ] esi
cmp eax 0x9
ja r-xdata
and [ ebp - 0x1c ] 0x0
push edi
mov edi 0xffff0000
and [ ebp - 0x18 ] edi
cmp cl 0x3f
jne r-xdata
mov ecx [ rwxdata ]
push eax
inc ebx
push esi
mov [ rwxdata ] ebx
call sub_411e79
mov eax esi
jmp r-xdata
mov eax r--data
mov esi eax
mov ecx ebx
mov [ ebp - 0x20 ] 0x12
lea eax [ ebp - 0x2c ]
push 0x0
push eax
call sub_413e15
pop ecx
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x18 ] eax
mov eax [ rwxdata ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
inc eax
mov [ rwxdata ] eax
cmp cl 0x40
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_409b72
leave
retn
movzx ecx [ ecx ]
movzx edx [ esi ]
sub ecx edx
jne r-xdata
cmp dl [ esi ]
jne r-xdata
cmp [ ebp + 0xc ] 0x0
pop edi
je r-xdata
dec eax
xor ecx ecx
mov [ rwxdata ] eax
cmp [ eax ] cl
setne cl
inc ecx
push ecx
lea ecx [ ebp - 0x1c ]
call sub_411df8
jmp r-xdata
mov eax r--data
push 0xc
mov ecx ebx
mov esi eax
pop ebx
add ebx 0x13
mov [ rwxdata ] ebx
jmp r-xdata
inc ecx
inc esi
dec [ ebp - 0x20 ]
jne r-xdata
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x38 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x18 ]
mov [ eax + 0x4 ] ecx
mov ecx [ rwxdata ]
cmp [ ecx ] 0x9
je r-xdata
movzx ecx [ ecx ]
movzx edx [ esi ]
sub ecx edx
jne r-xdata
cmp dl [ esi ]
jne r-xdata
mov esi eax
lea eax [ ebp - 0x24 ]
push eax
call sub_4131f0
test [ rwxdata ] 0x4000
pop ecx
je r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
call sub_411e2f
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add [ rwxdata ] 0xd
inc ecx
inc esi
dec ebx
jne r-xdata
lea ecx [ ebp - 0x1c ]
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_411d04
lea eax [ ebp - 0x14 ]
push eax
call sub_41eeda
push eax
call [ rwxdata ]
pop ecx
pop ecx
lea ecx [ ebp - 0x1c ]
test eax eax
je r-xdata
push 0x40
push rwxdata
lea ecx [ ebp - 0x34 ]
call sub_4120ee
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
push r--data
call sub_4123b1
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
push esi
lea ecx [ ebp - 0x34 ]
call sub_4120b1
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x28 ]
push r--data
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
call sub_412593
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_4122da
jmp r-xdata
push eax
call sub_4123b1
jmp r-xdata
mov ecx [ ebp - 0x30 ]
xor eax eax
and ecx edi
inc [ rwxdata ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] ecx
jmp r-xdata
sub_414182
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor ebx ebx
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
mov [ esi + 0x4 ] bl
mov edi 0xffff00ff
and [ esi + 0x4 ] edi
push eax
mov [ esi ] ebx
call sub_413f6c
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ esi + 0x4 ] eax
cmp al bl
jne r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
cmp al 0x40
jne r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
cmp al bl
je r-xdata
cmp al bl
je r-xdata
inc [ rwxdata ]
jmp r-xdata
cmp al 0x40
je r-xdata
cmp [ esi ] ebx
jne r-xdata
and [ esi + 0x4 ] edi
mov [ esi + 0x4 ] 0x2
mov [ esi ] ebx
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
push esi
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_415394
pop ecx
mov ecx eax
call sub_4127e1
mov ecx eax
call sub_4124f9
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
push esi
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_411cbf
mov ecx eax
call sub_4127e1
mov ecx eax
call sub_4124f9
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
push 0x1
mov ecx esi
call sub_411df8
jmp r-xdata
sub_414276
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
sub esp 0x20
push esi
push edi
mov ecx eax
shr ecx 0xf
xor edi edi
not ecx
inc edi
and ecx edi
je r-xdata
xor edi edi
test eax 0x1000
je r-xdata
mov ecx [ ebp + 0x8 ]
dec [ rwxdata ]
push r--data
call sub_4120b1
mov eax [ ebp + 0x8 ]
sub eax 0x54
je r-xdata
mov eax [ rwxdata ]
movsx eax [ eax ]
and [ ebp - 0x8 ] 0x0
mov esi 0xffff0000
and [ ebp - 0x4 ] esi
inc [ rwxdata ]
sub eax 0x0
je r-xdata
push r--data
dec eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_414182
pop ecx
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_4122da
mov ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r--data
jmp r-xdata
dec eax
je r-xdata
pop edi
pop esi
leave
retn
lea ecx [ ebp - 0x8 ]
call sub_4123b1
push r--data
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov edi ecx
call sub_41294b
pop ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x20 ]
call sub_4120b1
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
dec eax
je r-xdata
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] esi
test edi edi
je r-xdata
push r--data
jmp r-xdata
dec eax
jne r-xdata
push r--data
jmp r-xdata
sub_414386
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
cmp [ eax ] 0x3f
jne r-xdata
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_413f6c
inc eax
cmp [ eax ] 0x24
jne r-xdata
push 0x0
push 0x0
push [ ebp + 0x8 ]
mov [ rwxdata ] eax
call sub_41383f
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_413e15
pop ecx
pop ecx
jmp r-xdata
add esp 0xc
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_4143d0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push 0x0
call sub_4116eb
add esp 0x4
push eax
lea ecx [ ebp - 0x8 ]
call sub_4120b1
mov eax [ rwxdata ]
cmp [ eax ] 0x0
je r-xdata
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_411fbf
movsx ecx [ eax ]
inc eax
mov [ rwxdata ] eax
mov eax ecx
sub eax 0x30
je r-xdata
push r--data
lea ecx [ ebp - 0x8 ]
call sub_412593
jmp r-xdata
dec eax
dec eax
je r-xdata
push r--data
lea ecx [ ebp - 0x8 ]
call sub_412593
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
lea eax [ ebp - 0x10 ]
push eax
call sub_414182
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_4122da
jmp r-xdata
sub eax 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
sub_41446c
mov edi edi
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
push edi
xor edi edi
mov esi 0xffff0000
and [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] edi
call sub_411133
mov ecx [ ebp + 0xc ]
mov ebx eax
cmp [ ecx ] edi
je r-xdata
mov [ ebp - 0x14 ] edi
test [ ecx + 0x4 ] 0x200
mov [ ebp - 0x14 ] 0x1
jne r-xdata
cmp ebx 0xfffe
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
mov [ eax + 0x4 ] 0x2
mov [ eax ] edi
jmp r-xdata
cmp ebx 0xffff
jne r-xdata
cmp ebx 0xfffd
jne r-xdata
push ecx
push 0x1
push [ ebp + 0x8 ]
call sub_412775
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] ebx
and [ ebp - 0x4 ] 0x8000
mov edi 0x1800
mov ecx 0x1000
je r-xdata
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
lea ecx [ ebp - 0x20 ]
call sub_4122da
mov eax [ ebp - 0x4 ]
mov ecx 0x7c00
test eax eax
jne r-xdata
xor eax eax
mov [ ebp - 0xc ] ebx
and [ ebp - 0xc ] edi
cmp [ ebp - 0xc ] 0x800
sete al
mov [ ebp - 0x8 ] eax
test eax eax
mov eax ebx
je r-xdata
mov [ eax + 0x4 ] ecx
mov eax ebx
and eax edi
sub eax 0x800
jmp r-xdata
mov edx ebx
and edx ecx
cmp edx 0x6800
jne r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov esi 0x1000
mov eax ebx
je r-xdata
test eax eax
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0x8 ]
call sub_412fde
cmp [ ebp - 0x8 ] 0x0
mov eax ebx
je r-xdata
mov eax ebx
and eax 0x1b00
cmp eax ecx
je r-xdata
test eax eax
je r-xdata
and eax esi
and eax 0x400
jmp r-xdata
mov edx ebx
and edx ecx
cmp edx 0x7000
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx ebx
and edx 0x1b00
sub edx esi
neg edx
sbb edx edx
inc edx
neg eax
sbb eax eax
test edx eax
je r-xdata
test eax eax
je r-xdata
test eax eax
jne r-xdata
test ebx 0x4000
je r-xdata
mov eax ebx
and eax 0x1b00
cmp eax 0x1100
je r-xdata
test eax eax
je r-xdata
and eax 0x6000
and eax edi
sub eax 0x800
jmp r-xdata
push r--data
jmp r-xdata
mov edx ebx
and edx ecx
cmp edx 0x6000
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
test edx edx
je r-xdata
mov eax [ rwxdata ]
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
cmp eax 0x1200
je r-xdata
and eax esi
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
lea ecx [ ebp - 0x20 ]
call sub_412593
jmp r-xdata
test eax eax
jne r-xdata
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_412805
mov eax [ ebp - 0x20 ]
pop ecx
pop ecx
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x1c ]
push 0x7b
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_412541
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_4122da
push r--data
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x40 ]
call sub_4127e1
jmp r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
lea eax [ ebp - 0x48 ]
push eax
call sub_4143d0
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_4118a2
shr eax 0x3
not eax
test al 0x1
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx ebx
and edx 0x1b00
sub edx 0x1100
neg edx
sbb edx edx
inc edx
neg eax
sbb eax eax
test edx eax
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
and edx ecx
cmp edx ecx
jne r-xdata
and [ ebp - 0x3c ] esi
and [ ebp - 0x44 ] esi
and [ ebp - 0xc ] esi
and [ ebp - 0x24 ] esi
and [ ebp - 0x2c ] esi
xor edi edi
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x30 ] edi
mov eax ebx
cmp edx edi
je r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call sub_4143d0
pop ecx
push eax
lea eax [ ebp - 0x48 ]
push eax
push 0x20
lea ecx [ ebp - 0x38 ]
call sub_412084
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
and eax 0x6000
and eax edi
sub eax 0x800
jmp r-xdata
push r--data
jmp r-xdata
mov eax ebx
and eax 0x6000
mov eax ebx
and eax edi
sub eax 0x800
jmp r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0x8 ]
call sub_4126fd
jmp r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
lea eax [ ebp - 0x48 ]
push 0x0
push eax
call sub_412805
pop ecx
pop ecx
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x7b
lea eax [ ebp - 0x38 ]
push eax
call sub_4127bd
mov ecx eax
call sub_4124f9
push eax
lea ecx [ ebp - 0x20 ]
call sub_4122da
lea eax [ ebp - 0x48 ]
push eax
call sub_4124ae
mov esi 0x1000
pop ecx
test [ rwxdata ] esi
jne r-xdata
mov ecx 0x1000
and eax esi
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
and eax esi
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
mov eax ebx
and eax 0x6000
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x8 ] edi
je r-xdata
cmp edx edi
je r-xdata
cmp eax edi
je r-xdata
push r--data
lea ecx [ ebp - 0x20 ]
call sub_412593
lea eax [ ebp - 0x48 ]
push eax
call sub_4123e6
mov eax [ rwxdata ]
pop ecx
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x2c
lea ecx [ ebp - 0x38 ]
call sub_412084
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_412593
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_4122da
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx ebx
and edx 0x1b00
sub edx 0x1200
neg edx
sbb edx edx
inc edx
neg eax
sbb eax eax
test edx eax
je r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
call sub_4169d6
pop ecx
pop ecx
mov ecx [ eax ]
mov [ ebp - 0x20 ] ecx
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax ebx
and eax 0x1b00
xor edx edx
cmp eax 0x1100
sete dl
neg ecx
sbb ecx ecx
test edx ecx
jne r-xdata
test eax eax
je r-xdata
mov eax [ rwxdata ]
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_412805
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x34 ]
pop ecx
pop ecx
mov [ ebp - 0x24 ] eax
xor edi edi
mov eax ebx
and eax 0x700
cmp eax 0x600
jne r-xdata
mov ecx [ ebp - 0x20 ]
mov ecx eax
shr ecx 0x4
not ecx
test cl 0x1
je r-xdata
mov eax ebx
and eax ecx
cmp eax 0x7800
je r-xdata
push r--data
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_4120b1
mov ecx eax
call sub_4124f9
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
cmp eax 0x1200
sete dl
neg ecx
sbb ecx ecx
test edx ecx
je r-xdata
lea eax [ ebp - 0x50 ]
push eax
call sub_4123e6
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_4118a2
shr eax 0x4
not eax
test al 0x1
je r-xdata
mov eax [ rwxdata ]
and eax 0x60
cmp al 0x60
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x200
je r-xdata
cmp edx edi
je r-xdata
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_412805
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_412805
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_412805
add esp 0x18
jmp r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
test esi eax
jne r-xdata
mov ecx [ ebp - 0x20 ]
jmp r-xdata
xor edx edx
mov esi 0x800
mov eax ebx
cmp [ ebp - 0x4 ] edx
je r-xdata
mov [ ebp - 0x20 ] ecx
and [ ebp - 0x34 ] esi
xor edi edi
mov [ ebp - 0x38 ] edi
cmp [ ebp - 0x14 ] edi
je r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x50 ]
push eax
call sub_4123e6
pop ecx
mov ecx eax
call sub_4124f9
mov ecx [ eax ]
mov [ ebp - 0x20 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_411be4
pop ecx
push eax
lea ecx [ ebp - 0x30 ]
call sub_4118a2
call sub_411be4
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
mov eax [ rwxdata ]
shr eax 0x9
not eax
test al 0x1
je r-xdata
neg eax
sbb eax eax
inc eax
cmp eax edx
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x20
lea ecx [ ebp - 0x38 ]
call sub_412084
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
push 0x20
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_412541
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_4122da
mov ecx [ ebp - 0x40 ]
mov eax [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x1c ]
xor edi edi
push edi
push 0x8
mov ecx rwxdata
call sub_41170a
cmp eax edi
je r-xdata
lea eax [ ebp - 0x50 ]
push edi
push eax
call sub_411f7b
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_4120b1
mov ecx eax
call sub_4124f9
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_4122da
test [ rwxdata ] 0x1000
je r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
test [ rwxdata ] 0x1000
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_412805
pop ecx
pop ecx
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
mov eax [ rwxdata ]
shr eax 0x7
not eax
test al 0x1
je r-xdata
mov eax ebx
cmp [ ebp - 0x4 ] edx
je r-xdata
lea eax [ ebp - 0x58 ]
push edi
push eax
call sub_411f7b
pop ecx
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] eax
mov [ eax ] edi
mov [ eax + 0x4 ] 0x0
and [ eax + 0x4 ] 0xffff00ff
mov edi eax
mov esi [ ebp - 0x8 ]
mov eax ebx
test esi esi
je r-xdata
push eax
lea eax [ ebp - 0x38 ]
push eax
push 0x20
lea ecx [ ebp - 0x50 ]
call sub_412084
mov ecx eax
call sub_4124f9
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_4122da
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
test ebx 0x10000
je r-xdata
test [ rwxdata ] 0x1000
jne r-xdata
test eax eax
je r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] edx
je r-xdata
neg eax
sbb eax eax
inc eax
cmp eax edx
je r-xdata
lea eax [ ebp - 0x58 ]
push eax
call sub_412a37
pop ecx
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x28
lea ecx [ ebp - 0x50 ]
call sub_412084
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
push 0x29
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_412541
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_4122da
test esi esi
je r-xdata
test esi esi
je r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_4120b1
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x48 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_4120b1
mov ecx eax
call sub_4124f9
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
mov eax ebx
and eax 0x6000
mov eax ebx
and eax 0x700
cmp eax 0x100
je r-xdata
xor eax eax
inc eax
mov eax ebx
and eax 0x700
sub eax 0x200
neg eax
sbb eax eax
inc eax
jmp r-xdata
mov eax [ rwxdata ]
shr eax 0x8
not eax
test al 0x1
lea eax [ ebp - 0x58 ]
push eax
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x200
je r-xdata
push r--data
lea ecx [ ebp - 0x20 ]
call sub_412593
mov eax ebx
and eax 0x700
cmp eax 0x600
jne r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
and eax edi
sub eax esi
neg eax
sbb eax eax
inc eax
and al 0xc0
xor edx edx
cmp al 0x40
sete dl
mov eax edx
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_4120b1
mov ecx eax
call sub_4124f9
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
test edx edx
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_4120b1
mov ecx eax
call sub_4124f9
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
cmp eax edx
je r-xdata
call sub_412b17
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_4118a2
call sub_412b17
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_4122da
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_4122da
test esi esi
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_4120b1
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x14 ]
push 0x2c
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x3c ] eax
call sub_412541
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_4122da
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x14 ]
push 0x2c
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_412541
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_4122da
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
test edx edx
je r-xdata
test eax eax
je r-xdata
mov eax ebx
and eax edi
sub eax esi
jmp r-xdata
test edi edi
je r-xdata
mov eax [ rwxdata ]
shr eax 0x2
not eax
test al 0x1
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
jne r-xdata
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
push 0x2c
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_412541
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_4122da
jmp r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
and eax edi
sub eax 0x1000
neg eax
sbb eax eax
inc eax
and al 0xc0
xor edx edx
cmp al 0x80
sete dl
mov eax edx
jmp r-xdata
lea ecx [ ebp - 0x58 ]
call sub_4120b1
mov ecx eax
call sub_4124f9
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x38 ]
mov [ edi ] eax
mov eax [ ebp - 0x1c ]
mov [ edi + 0x4 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_4120b1
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x24 ]
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_412593
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_4122da
cmp [ ebp - 0x4 ] 0x0
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
test edx edx
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
mov edi 0x1800
mov eax ebx
and eax edi
neg eax
sbb eax eax
inc eax
push 0x0
test bl 0xc0
pop eax
sete al
jmp r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
test eax eax
je r-xdata
mov eax ebx
test edx edx
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x600
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x400
jne r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
sub_415126
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi 0x2000
push edi
test [ rwxdata ] esi
je r-xdata
mov eax [ rwxdata ]
mov cl [ eax ]
cmp cl 0x3f
jne r-xdata
and [ rwxdata ] 0xffffdfff
lea eax [ ebp - 0x24 ]
push 0x0
push eax
call sub_416907
or [ rwxdata ] esi
pop ecx
pop ecx
test cl cl
jne r-xdata
inc eax
mov [ rwxdata ] eax
cmp [ eax ] cl
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_411cbf
lea eax [ ebp - 0xc ]
push eax
call sub_414386
mov esi [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
xor eax eax
inc eax
pop ecx
test esi esi
je r-xdata
cmp [ eax + 0x1 ] cl
jne r-xdata
and [ ebp - 0x4 ] 0x0
test ebx 0x200
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_415126
mov eax [ rwxdata ]
pop ecx
jmp r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
mov [ eax + 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp al 0x40
je r-xdata
mov edi ebx
shr edi 0xf
and edi eax
cmp bl al
jle r-xdata
inc eax
mov [ rwxdata ] eax
jmp r-xdata
mov edx 0x8000
test edi edi
je r-xdata
test esi esi
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
call sub_415394
mov eax [ ebp - 0x14 ]
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x20 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
test esi esi
je r-xdata
or ebx edx
mov [ ebp - 0x8 ] ebx
or ebx 0x200
mov [ ebp - 0x8 ] ebx
cmp [ rwxdata ] 0x0
je r-xdata
mov ecx 0x1000
test ecx ebx
jne r-xdata
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
push r--data
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
call sub_412593
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_4122da
mov esi [ ebp - 0x1c ]
mov ebx [ ebp - 0x18 ]
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ rwxdata ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] ebx
call sub_4122da
mov eax [ rwxdata ]
cmp [ eax ] 0x40
mov esi [ ebp - 0x1c ]
mov ebx [ ebp - 0x18 ]
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] ebx
je r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_415394
mov ecx [ eax ]
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov [ esp ] r--data
call sub_412593
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_4122da
mov esi [ ebp - 0x24 ]
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test [ rwxdata ] ecx
je r-xdata
cmp al 0x40
je r-xdata
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] esi
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_41446c
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ rwxdata ]
mov eax [ ebp + 0x8 ]
test edx ebx
jne r-xdata
and [ ebp - 0x24 ] 0x0
and [ ebp - 0x20 ] 0xffff0000
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_41446c
pop ecx
pop ecx
jmp r-xdata
sub_415394
mov edi edi
push ebp
mov ebp esp
sub esp 0xb8
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi 0xffff00ff
mov [ esi + 0x4 ] bl
and [ esi + 0x4 ] edi
mov [ esi ] ebx
mov [ ebp + 0xb ] bl
jmp r-xdata
cmp [ esi + 0x4 ] bl
je r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
cmp al bl
je r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
cmp al bl
je r-xdata
cmp al 0x40
je r-xdata
cmp [ esi ] ebx
jne r-xdata
cmp al 0x40
je r-xdata
cmp [ rwxdata ] bl
je r-xdata
push esi
lea eax [ ebp - 0x40 ]
push eax
push r--data
lea eax [ ebp - 0x48 ]
push eax
push 0x1
lea ecx [ ebp - 0x38 ]
call sub_411cbf
mov ecx eax
call sub_4127e1
mov ecx eax
call sub_4124f9
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
push 0x1
mov ecx esi
call sub_411df8
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
and [ esi + 0x4 ] edi
mov [ esi + 0x4 ] 0x2
mov [ esi ] ebx
jmp r-xdata
cmp [ esi ] ebx
je r-xdata
cmp [ rwxdata ] bl
je r-xdata
mov ecx [ rwxdata ]
cmp [ ecx ] 0x3f
jne r-xdata
push esi
lea eax [ ebp - 0x20 ]
push eax
push r--data
lea ecx [ ebp - 0x90 ]
call sub_4120b1
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x20 ]
mov [ esi ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x4 ] eax
cmp [ ebp + 0xb ] bl
je r-xdata
lea eax [ ebp - 0x48 ]
push esi
push eax
lea eax [ ebp - 0x40 ]
inc ecx
mov [ rwxdata ] ecx
movsx eax [ ecx ]
sub eax 0x24
je r-xdata
push esi
lea eax [ ebp - 0x28 ]
push eax
push 0x5b
lea ecx [ ebp - 0x98 ]
call sub_412084
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x28 ]
mov [ esi ] eax
mov eax [ ebp - 0x24 ]
mov [ esi + 0x4 ] eax
mov [ ebp + 0xb ] bl
lea eax [ ebp - 0x88 ]
push esi
dec ecx
push eax
mov [ rwxdata ] ecx
lea eax [ ebp - 0x38 ]
jmp r-xdata
dec eax
je r-xdata
push ebx
push 0x1
push eax
call sub_413f6c
add esp 0xc
push 0x40
push rwxdata
lea ecx [ ebp - 0x30 ]
call sub_4120ee
push esi
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x78 ]
call sub_4120b1
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x10 ]
mov [ esi ] eax
mov eax [ ebp - 0xc ]
mov [ esi + 0x4 ] eax
mov ecx [ rwxdata ]
cmp [ ecx ] 0x9
je r-xdata
sub eax 0x1a
je r-xdata
lea eax [ ebp - 0x30 ]
push eax
call sub_411e2f
jmp r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0x5f
jne r-xdata
dec eax
dec eax
je r-xdata
lea eax [ ebp - 0xa0 ]
push eax
call sub_415126
pop ecx
push eax
lea eax [ ebp - 0x18 ]
push eax
push 0x60
lea ecx [ ebp - 0x58 ]
call sub_412084
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
push 0x27
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_412541
push esi
lea eax [ ebp - 0x68 ]
push eax
lea ecx [ ebp - 0x8 ]
jmp r-xdata
cmp [ ecx + 0x2 ] 0x3f
jne r-xdata
sub eax 0x8
push esi
je r-xdata
call sub_4124f9
mov [ rwxdata ] eax
push esi
lea eax [ ebp - 0xb0 ]
push eax
push ebx
lea eax [ ebp - 0x80 ]
push ebx
push eax
call sub_41383f
add esp 0xc
mov ecx eax
call sub_4124f9
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
push 0x5d
lea eax [ ebp - 0x50 ]
push eax
push ebx
lea eax [ ebp - 0x70 ]
inc ecx
push 0x1
push eax
mov [ rwxdata ] ecx
call sub_413f6c
add esp 0xc
mov ecx eax
call sub_4127bd
mov ecx eax
call sub_4124f9
mov [ ebp + 0xb ] 0x1
jmp r-xdata
lea eax [ ebp - 0xa8 ]
push eax
lea eax [ ebp - 0xb8 ]
push eax
call sub_412f5f
pop ecx
jmp r-xdata
inc [ rwxdata ]
jmp r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov ecx eax
sub_41564b
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
mov cl [ eax ]
sub esp 0x38
test cl cl
jne r-xdata
cmp cl 0x36
jl r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_412775
mov eax [ ebp + 0x8 ]
add esp 0xc
leave
retn
cmp cl 0x5f
je r-xdata
cmp cl 0x39
jle r-xdata
push ebx
movsx ebx cl
sub ebx 0x36
inc eax
mov [ rwxdata ] eax
cmp ebx 0x29
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
test ebx ebx
js r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
or ebx 0xffffffff
cmp ebx 0x3
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_412775
mov eax [ ebp + 0x8 ]
add esp 0xc
jmp r-xdata
movsx ebx cl
sub ebx 0x3d
inc eax
mov [ rwxdata ] eax
cmp ebx 0x4
jl r-xdata
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0xffff0000
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
push edi
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x4 ]
mov edi ebx
and edi 0x2
mov [ ebp - 0x4 ] eax
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
cmp ebx 0xffffffff
jne r-xdata
pop ebx
leave
retn
cmp ebx 0x7
jmp r-xdata
test bl 0x4
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea ecx [ ebp - 0x20 ]
call sub_4120b1
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ rwxdata ]
cmp [ eax ] 0x0
je r-xdata
jle r-xdata
mov eax [ rwxdata ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
mov eax [ rwxdata ]
shr eax 0x1
not eax
test al 0x1
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x1
lea ecx [ ebp - 0x38 ]
call sub_411cbf
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x1c ]
lea eax [ ebp - 0x30 ]
push eax
call sub_415394
pop ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x20
lea ecx [ ebp - 0x38 ]
call sub_412084
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_4122da
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
jmp r-xdata
lea eax [ ebp - 0x38 ]
push eax
call sub_4123e6
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_4118a2
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_4123e6
pop ecx
mov ecx eax
call sub_4124f9
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
call sub_4143d0
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_4118a2
call sub_4143d0
pop ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x20
lea ecx [ ebp - 0x30 ]
call sub_412084
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_4122da
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x38 ]
push 0x1
call sub_411cbf
mov ecx eax
call sub_4124f9
jmp r-xdata
cmp al 0x40
jne r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
push ebx
push 0x8
mov ecx rwxdata
call sub_41170a
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x28
lea ecx [ ebp - 0x38 ]
call sub_412084
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
push 0x29
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_412541
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
xor ebx ebx
cmp [ esi ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov eax [ rwxdata ]
inc [ rwxdata ]
and eax 0x60
cmp al 0x60
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
xor esi esi
mov [ eax + 0x4 ] bl
and [ eax + 0x4 ] 0xffff00ff
mov [ eax ] ebx
mov esi eax
jmp r-xdata
pop edi
pop esi
call sub_411be4
pop ecx
push eax
lea ecx [ ebp - 0x10 ]
call sub_4118a2
jmp r-xdata
call sub_411be4
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
mov eax [ rwxdata ]
shr eax 0x8
not eax
test al 0x1
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
cmp edi ebx
je r-xdata
lea eax [ ebp - 0x28 ]
push esi
push eax
call sub_411f7b
lea eax [ ebp - 0x38 ]
push eax
call sub_412a37
add esp 0xc
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x28
lea ecx [ ebp - 0x30 ]
call sub_412084
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
push 0x29
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_412541
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_4122da
mov eax [ rwxdata ]
and eax 0x60
cmp al 0x60
je r-xdata
call sub_412b17
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_4118a2
call sub_412b17
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_4122da
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_4122da
mov ecx [ ebp + 0x8 ]
push 0x3
call sub_411cbf
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov ecx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x24 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
cmp esi ebx
je r-xdata
sub_415a2a
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rwxdata ]
mov al [ eax ]
push ebx
push esi
mov esi 0xffff0000
and [ ebp - 0x38 ] esi
push edi
xor edi edi
mov [ ebp - 0x1 ] 0x0
test al al
je r-xdata
cmp [ ebp + 0x18 ] edi
jne r-xdata
cmp al 0x24
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_411cbf
mov esi [ ebp + 0xc ]
cmp [ esi ] edi
je r-xdata
mov ecx [ rwxdata ]
mov al [ ecx ]
xor edx edx
cmp al 0x41
setl dl
and [ ebp - 0x10 ] esi
movsx ebx al
mov [ ebp - 0x1c ] edi
dec edx
and edx 0x2b
add edx 0x16
sub ebx edx
xor edx edx
and [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] edx
push [ ebp + 0x18 ]
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_412ba1
mov ecx [ ebp - 0x2c ]
add esp 0x10
cmp ecx edi
je r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax ] edi
je r-xdata
test [ esi + 0x4 ] 0x100
jne r-xdata
mov eax [ rwxdata ]
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x28 ]
push eax
jmp r-xdata
push esi
mov eax [ ebp + 0x14 ]
cmp [ eax ] edi
je r-xdata
inc [ rwxdata ]
mov eax [ rwxdata ]
cmp [ eax ] 0x24
jne r-xdata
shr eax 0x11
not eax
test al 0x1
je r-xdata
mov eax [ rwxdata ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
sub eax 0x3
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x1
push [ ebp + 0x8 ]
call sub_412775
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_411cbf
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x38 ]
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x28 ] eax
call sub_412541
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x2c ]
call sub_4124f9
jmp r-xdata
mov ecx [ rwxdata ]
mov al [ ecx ]
xor edx edx
cmp al 0x41
setl dl
movsx ebx al
dec edx
and edx 0x2b
add edx 0x16
sub ebx edx
mov edx [ ebp - 0x14 ]
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_412ba1
mov ecx [ ebp - 0x34 ]
add esp 0x10
test ecx ecx
jne r-xdata
test edx edx
je r-xdata
test edi edi
je r-xdata
cmp [ ecx ] 0x0
je r-xdata
mov eax [ rwxdata ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
mov eax ebx
sub eax 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x30 ]
jmp r-xdata
push 0x8
mov eax [ ebp - 0x10 ]
push 0x20
lea ecx [ ebp - 0xc ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
call sub_412541
push 0x8
call sub_4116eb
add esp 0x4
push eax
lea eax [ ebp - 0x54 ]
lea ecx [ ebp - 0xc ]
push 0xa
call sub_4116eb
add esp 0x4
push eax
lea ecx [ ebp - 0x1c ]
call sub_4123b1
mov edi [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
push 0x20
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] eax
call sub_412541
push 0xa
call sub_4116eb
add esp 0x4
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_4127e1
mov edi [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp ebx 0x1f
ja r-xdata
inc ecx
mov [ rwxdata ] ecx
test edx edx
je r-xdata
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov esi [ ebp + 0x10 ]
push esi
lea ecx [ ebp - 0xc ]
call sub_4120b1
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_4122da
cmp [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
je r-xdata
push 0x9
jmp r-xdata
mov eax [ ebp - 0x10 ]
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x28 ] eax
call sub_412541
push 0x9
call sub_4116eb
add esp 0x4
push eax
lea eax [ ebp - 0x44 ]
lea ecx [ ebp - 0x2c ]
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x20 ] ecx
push 0x20
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] eax
call sub_412541
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_4122da
mov eax [ ebp - 0x2c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x8 ] eax
call sub_4116eb
add esp 0x4
push eax
lea ecx [ ebp - 0x14 ]
call sub_4123b1
push eax
call sub_4127e1
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] eax
jmp r-xdata
test bl 0x10
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x28 ] eax
call sub_412541
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_4122da
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ rwxdata ]
shr eax 0x1
not eax
test al 0x1
mov eax ebx
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
and eax 0xc
cmp al 0xc
jne r-xdata
and eax 0xc
cmp al 0xc
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
test bl 0x2
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_4143d0
pop ecx
push eax
lea ecx [ ebp - 0xc ]
call sub_4118a2
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov eax [ rwxdata ]
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push r--data
lea ecx [ ebp - 0x54 ]
call sub_4120b1
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
mov eax [ rwxdata ]
cmp [ eax ] 0x0
lea eax [ ebp - 0xc ]
push eax
je r-xdata
test bl 0x1
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push r--data
lea ecx [ ebp - 0x54 ]
call sub_4120b1
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_4143d0
pop ecx
mov ecx eax
call sub_4124f9
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x1
lea ecx [ ebp - 0xc ]
call sub_411fbf
jmp r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_415394
pop ecx
push eax
lea ecx [ ebp - 0xc ]
call sub_4118a2
lea eax [ ebp - 0x3c ]
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_411cbf
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_415394
pop ecx
mov ecx eax
call sub_4124f9
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
xor edx edx
mov ebx 0x100
cmp [ ebp + 0x18 ] edx
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push r--data
lea ecx [ ebp - 0x54 ]
call sub_4120b1
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
inc [ rwxdata ]
cmp al 0x40
jne r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
or ecx ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
cmp [ esi ] edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
jmp r-xdata
or ecx 0x2000
mov eax [ ebp + 0x14 ]
cmp [ eax ] edx
je r-xdata
mov ecx [ esi + 0x4 ]
test ebx ecx
jne r-xdata
push eax
test ecx 0x800
je r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax ] edx
je r-xdata
push esi
jmp r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
push eax
lea eax [ ebp - 0x3c ]
push eax
push 0x20
lea ecx [ ebp - 0x54 ]
call sub_412084
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x38 ]
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x28 ] eax
call sub_412541
push esi
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_4124f9
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
push 0x20
lea ecx [ ebp - 0x54 ]
call sub_412084
mov ecx eax
call sub_4124f9
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0xc ]
call sub_4122da
sub_415fc9
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp - 0xc ]
mov edx 0xffff0000
and [ ebp - 0x4 ] edx
xor ecx ecx
and [ ebp - 0x8 ] ecx
and eax edx
mov edx [ rwxdata ]
test edx edx
je r-xdata
cmp al 0x3
jne r-xdata
cmp [ edx ] 0x3f
jne r-xdata
cmp al 0x2
je r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x20 ]
push eax
call sub_415126
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov al [ edx + 0x1 ]
cmp al 0x40
jne r-xdata
push [ rwxdata ]
lea ecx [ ebp - 0x8 ]
call sub_4123b1
test [ rwxdata ] 0x1000
jne r-xdata
cmp al 0x24
jne r-xdata
add [ rwxdata ] 0x2
lea eax [ ebp - 0x18 ]
push eax
call sub_415126
pop ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x20 ]
call sub_4120b1
mov ecx eax
call sub_4124f9
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
jmp r-xdata
push [ rwxdata ]
lea ecx [ ebp - 0x8 ]
push eax
call sub_411d04
mov eax [ rwxdata ]
mov edx eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx [ rwxdata ]
cmp [ edx ] 0x0
jne r-xdata
lea eax [ ebp - 0x20 ]
push 0x0
push eax
call sub_413e15
pop ecx
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
cmp al 0x2
jne r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
inc eax
mov [ rwxdata ] eax
add eax 0x7
and eax 0xfffffff8
push eax
call [ rwxdata ]
pop ecx
mov [ rwxdata ] eax
test eax eax
je r-xdata
mov eax [ ecx ]
call [ eax ]
mov eax [ rwxdata ]
test eax eax
jne r-xdata
mov eax [ rwxdata ]
mov [ rwxdata ] eax
cmp cl 0x20
jne r-xdata
mov al cl
mov [ edx ] al
mov eax [ rwxdata ]
leave
retn
mov [ edx ] cl
inc edx
inc eax
inc eax
mov [ edx ] cl
inc edx
jmp r-xdata
cmp [ eax ] 0x20
je r-xdata
inc eax
jmp r-xdata
sub_416108
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rwxdata ]
mov al [ eax ]
push ebx
xor ebx ebx
push esi
cmp al bl
je r-xdata
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_411cbf
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
call sub_412593
mov esi [ ebp + 0xc ]
cmp [ esi ] ebx
je r-xdata
cmp al 0x36
jl r-xdata
push edi
mov edi [ ebp + 0x10 ]
cmp [ edi ] ebx
je r-xdata
push esi
lea ecx [ ebp - 0x8 ]
call sub_4122da
cmp al 0x5f
jne r-xdata
cmp al 0x39
jle r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
pop edi
cmp [ esi ] ebx
je r-xdata
mov esi [ ebp + 0x14 ]
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push esi
push [ ebp + 0x10 ]
push eax
call sub_415a2a
xor eax eax
cmp [ esi ] 0x2a
sete al
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_413532
add esp 0x20
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
call sub_4120b1
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
cmp [ eax ] ebx
je r-xdata
push edi
lea ecx [ ebp - 0x8 ]
call sub_4122da
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_412541
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp [ esi ] ebx
je r-xdata
cmp [ esi ] ebx
je r-xdata
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_41564b
pop ecx
pop ecx
push esi
lea ecx [ ebp - 0x8 ]
call sub_4122da
push eax
lea ecx [ ebp - 0x8 ]
call sub_4122da
test [ esi + 0x4 ] 0x100
jne r-xdata
sub_41625f
push 0x64
push r--data
call sub_40cd00
mov edi [ ebp + 0x14 ]
xor esi esi
cmp edi esi
jne r-xdata
push 0x5
call sub_410786
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push 0x5
call sub_410848
pop ecx
mov [ ebp - 0x4 ] esi
mov [ rwxdata ] edi
mov eax [ ebp + 0x18 ]
mov [ rwxdata ] eax
mov [ rwxdata ] esi
mov [ rwxdata ] esi
mov [ rwxdata ] esi
movzx eax [ ebp + 0x1c ]
push eax
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x74 ]
call sub_411b3c
lea ecx [ ebp - 0x74 ]
call sub_415fc9
mov [ ebp - 0x1c ] eax
mov ecx rwxdata
call sub_4110a9
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4162f0
mov eax [ ebp - 0x1c ]
call sub_40cd45
retn
sub_4162f9
push 0x64
push r--data
call sub_40cd00
mov edi [ ebp + 0x14 ]
xor esi esi
cmp edi esi
jne r-xdata
push 0x5
call sub_410786
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push 0x5
call sub_410848
pop ecx
mov [ ebp - 0x4 ] esi
mov [ rwxdata ] edi
mov eax [ ebp + 0x18 ]
mov [ rwxdata ] eax
mov [ rwxdata ] esi
mov [ rwxdata ] esi
mov [ rwxdata ] esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x74 ]
call sub_411b3c
lea ecx [ ebp - 0x74 ]
call sub_415fc9
mov [ ebp - 0x1c ] eax
mov ecx rwxdata
call sub_4110a9
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41638a
mov eax [ ebp - 0x1c ]
call sub_40cd45
retn
sub_416393
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
mov al [ eax ]
sub esp 0x24
push ebx
push esi
push edi
test al al
je r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_412775
add esp 0xc
inc [ rwxdata ]
and [ ebp - 0xc ] 0x0
movzx edi al
mov esi 0xffff0000
and [ ebp - 0x8 ] esi
mov eax edi
or ebx 0xffffffff
mov [ ebp - 0x1 ] 0x0
cmp eax 0x4e
jg r-xdata
cmp eax 0x4f
je r-xdata
je r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_4123b1
jle r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_412593
sub eax 0x43
cmp eax 0xa
ja r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] esi
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp ebx 0xfffffffe
jne r-xdata
mov eax edi
sub eax 0x43
je r-xdata
lea eax [ ebp - 0x24 ]
jmp r-xdata
cmp eax 0x53
jle r-xdata
movzx eax [ eax + lookup_table_41674b ]
jmp [ eax * 4 + jump_table_416733 ]
cmp [ eax ] 0x0
jne r-xdata
push r--data
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
mov esi 0x800
or [ ebp - 0x10 ] esi
push eax
call sub_416108
add esp 0x10
test [ ebp - 0x18 ] esi
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push r--data
push 0x2
pop ecx
sub eax ecx
je r-xdata
dec [ rwxdata ]
push eax
call sub_414276
mov edx [ eax + 0x4 ]
pop ecx
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
test ecx ecx
jne r-xdata
mov ebx edi
and ebx 0x3
jmp r-xdata
cmp eax 0x58
je r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_416108
add esp 0x10
jmp r-xdata
test bl 0x1
je r-xdata
mov ecx [ ebp - 0x1c ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x18 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0x1c ]
call sub_412593
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0x20
lea ecx [ ebp - 0x24 ]
call sub_412084
mov ecx eax
call sub_4124f9
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0xc ]
call sub_4122da
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push r--data
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
jmp r-xdata
cmp ebx 0xffffffff
jne r-xdata
push r--data
cmp eax 0x5f
jne r-xdata
lea ecx [ ebp - 0xc ]
call sub_4123b1
jmp r-xdata
mov eax [ ebp + 0x8 ]
test bl 0x2
je r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_4123b1
test bl 0x2
je r-xdata
mov [ eax + 0x4 ] ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0x24 ]
call sub_4120b1
mov ecx eax
call sub_4124f9
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
sub eax ecx
je r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
inc [ rwxdata ]
mov [ ebp - 0x1 ] al
movzx eax al
cmp eax 0x4d
jg r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_4123b1
push r--data
lea ecx [ ebp - 0xc ]
call sub_412593
jmp r-xdata
sub eax ecx
je r-xdata
cmp eax 0x4e
je r-xdata
cmp eax 0x4c
jge r-xdata
sub eax 0x14
jne r-xdata
push r--data
jmp r-xdata
cmp eax 0x4f
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x47
jg r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
movzx eax [ ebp - 0x1 ]
sub eax 0x45
je r-xdata
push 0xfffffffe
pop ebx
cmp eax 0x52
je r-xdata
cmp eax 0x48
jl r-xdata
cmp eax 0x46
jge r-xdata
sub eax ecx
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x57
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x49
jle r-xdata
push r--data
jmp r-xdata
test eax eax
je r-xdata
sub eax ecx
je r-xdata
push r--data
jmp r-xdata
add eax 0xffffffa8
cmp eax 0x1
ja r-xdata
push r--data
jmp r-xdata
cmp eax 0x4b
jg r-xdata
dec [ rwxdata ]
push 0x1
lea ecx [ ebp - 0xc ]
call sub_411df8
jmp r-xdata
cmp eax 0x24
je r-xdata
sub eax ecx
je r-xdata
lea eax [ ebp - 0x14 ]
push r--data
jmp r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x1c ]
push eax
call sub_416393
push eax
push r--data
push [ ebp + 0x8 ]
call sub_412799
add esp 0x14
jmp r-xdata
add eax 0xffffffbc
cmp eax 0x1
ja r-xdata
sub eax ecx
jne r-xdata
push r--data
jmp r-xdata
sub_416756
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rwxdata ]
movsx eax [ eax ]
push ebx
xor ebx ebx
mov ecx 0xffff0000
and [ ebp - 0x4 ] ecx
sub eax ebx
push esi
mov [ ebp - 0x8 ] ebx
je r-xdata
push [ ebp + 0xc ]
sub eax 0x24
je r-xdata
mov eax [ rwxdata ]
mov al [ eax + 0x1 ]
cmp al 0x24
je r-xdata
sub eax 0x1d
mov esi [ ebp + 0xc ]
je r-xdata
add [ rwxdata ] 0x2
mov eax [ rwxdata ]
movsx eax [ eax ]
mov esi [ ebp + 0xc ]
cmp eax 0x51
jg r-xdata
cmp al bl
je r-xdata
push r--data
dec eax
je r-xdata
sub eax 0x52
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
mov [ eax + 0x4 ] 0x2
mov [ eax ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push r--data
lea ecx [ ebp - 0x8 ]
call sub_4123b1
cmp [ esi ] ebx
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_416393
push r--data
lea ecx [ ebp - 0x8 ]
call sub_4123b1
cmp [ esi ] ebx
je r-xdata
dec eax
je r-xdata
push r--data
jmp r-xdata
sub eax ebx
je r-xdata
pop esi
pop ebx
leave
retn
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_412541
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_412541
inc [ rwxdata ]
jmp r-xdata
dec eax
jne r-xdata
mov eax [ esi ]
mov esi [ esi + 0x4 ]
inc [ rwxdata ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
or esi 0x100
mov [ ebp - 0xc ] esi
call sub_416108
add esp 0x10
jmp r-xdata
push esi
jmp r-xdata
sub eax 0x41
je r-xdata
mov ecx [ ebp + 0x8 ]
inc [ rwxdata ]
push r--data
call sub_4120b1
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_412775
inc [ rwxdata ]
push esi
push [ ebp + 0x8 ]
call sub_41564b
jmp r-xdata
dec eax
je r-xdata
pop ecx
pop ecx
jmp r-xdata
inc [ rwxdata ]
push 0x1
push esi
push [ ebp + 0x8 ]
call sub_413532
jmp r-xdata
dec eax
jne r-xdata
add esp 0xc
inc [ rwxdata ]
and [ ebp - 0x4 ] ecx
push ebx
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x18 ]
push esi
push eax
mov [ ebp - 0x8 ] ebx
call sub_415a2a
push eax
push [ ebp + 0x8 ]
call sub_416393
add esp 0x1c
jmp r-xdata
sub_416907
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push [ ebp + 0xc ]
lea ecx [ ebp - 0x8 ]
call sub_411c6c
mov eax [ rwxdata ]
mov al [ eax ]
xor ecx ecx
cmp al cl
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
push 0x1
call sub_411cbf
cmp al 0x3f
je r-xdata
inc [ rwxdata ]
and [ ebp - 0xc ] 0xffff0000
push ecx
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x10 ] ecx
call sub_415a2a
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_416756
add esp 0x1c
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x8 ]
leave
retn
inc [ rwxdata ]
cmp [ ebp - 0x8 ] ecx
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_416756
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
push r--data
call sub_4120b1
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
call sub_4120b1
jmp r-xdata
mov ecx eax
call sub_4124f9
sub_4169d6
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push esi
push 0x0
push 0x8
mov ecx rwxdata
call sub_41170a
test eax eax
je r-xdata
xor esi esi
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
and [ eax + 0x4 ] 0xffff00ff
mov esi eax
jmp r-xdata
push esi
push [ ebp + 0x8 ]
call sub_416907
lea eax [ ebp - 0x10 ]
push eax
call sub_411bab
mov eax [ ebp - 0x10 ]
add esp 0xc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x20
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_412541
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_4124f9
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x8 ]
pop esi
leave
retn
sub_416a50
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_416ae0
push [ fs : 0x0 ]
mov eax [ rwxdata ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_41f065
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_41f084
jmp r-xdata
sub_416ae0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_409b72
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_416a50
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_416b42
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_416b72
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_416ba2
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_40c790
and [ ebp - 0x14 ] 0x0
cmp [ rwxdata ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rwxdata ]
mov ecx [ ebp - 0x18 ]
mov esi [ DecodePointer@IAT ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rwxdata ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rwxdata ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rwxdata ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rwxdata ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ EncodePointer@IAT ]
push eax
call esi
push r--data
push ebx
mov [ rwxdata ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rwxdata ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rwxdata ] eax
call edi
push eax
call esi
mov [ rwxdata ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rwxdata ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_409b72
leave
retn
mov eax [ rwxdata ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_416d0e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_40de77
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_40de77
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_41032e
mov eax esi
sub_416d83
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_40de77
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_40de77
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_41032e
mov eax esi
jmp r-xdata
sub_416e50
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_416e6b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_40de77
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_40de77
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_41032e
mov eax esi
sub_416ece
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_40de77
mov [ eax ] 0x16
call sub_41032e
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rwxdata ]
mov [ rwxdata ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rwxdata ]
pop ebp
retn
sub_416f1c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40a63a
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_417171
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40a63a
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x3a4
jne r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_416f1c
add esp 0x10
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
leave
retn
sub_4171d9
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_40de77
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rwxdata ] 0x0
je r-xdata
push esi
push 0x8
push [ rwxdata ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_40bc14
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_41725b
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_40b534
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_40b65b
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_40bc14
pop ecx
call sub_40de77
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rwxdata ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rwxdata ] eax
je r-xdata
pop edi
call sub_40de77
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40de35
pop ecx
mov [ esi ] eax
push esi
call sub_40bc14
pop ecx
test eax eax
je r-xdata
call sub_40de77
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40de35
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_417308
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_41725b
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_40d126
pop ecx
mov ebx eax
call sub_40de77
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_417380
add esp 0xc
sub_417380
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_41f087
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_4173fa
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_409b72
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_417380
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_40dbca
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_40b534
pop ecx
cmp eax ebx
je r-xdata
call sub_418880
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_4174e1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40a63a
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_4173fa
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_417521
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
movzx ebx [ eax + 0x42 ]
push esi
mov esi ecx
movzx ecx [ eax + 0x44 ]
mov [ ebp - 0x4 ] ecx
test esi esi
jne r-xdata
and [ ebp - 0x8 ] 0x0
push edi
mov [ ebp - 0xc ] eax
lea eax [ esi + 0x4 ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
mov edi eax
lea eax [ esi + 0x8 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0xc ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x10 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
add esp 0x50
or edi eax
lea eax [ esi + 0x14 ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x18 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
push esi
push 0x37
push ebx
or edi eax
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x20 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
add esp 0x50
or edi eax
lea eax [ esi + 0x24 ]
push eax
push 0x2b
push ebx
push 0x1
lea eax [ ebp - 0xc ]
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x28 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x2c ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x30 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
add esp 0x50
or edi eax
lea eax [ esi + 0x34 ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x1c ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x38 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x3c ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
add esp 0x50
or edi eax
lea eax [ esi + 0x40 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x44 ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x48 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x4c ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
add esp 0x50
or edi eax
lea eax [ esi + 0x50 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x54 ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x58 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x5c ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
add esp 0x50
or edi eax
lea eax [ esi + 0x60 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x64 ]
push eax
push 0x4f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x68 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x6c ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
add esp 0x50
or edi eax
lea eax [ esi + 0x70 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x74 ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x78 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x7c ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
add esp 0x50
or edi eax
lea eax [ esi + 0x80 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x84 ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x88 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x8c ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
add esp 0x50
or edi eax
lea eax [ esi + 0x90 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x94 ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x98 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x9c ]
push eax
push 0x29
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
add esp 0x50
or edi eax
lea eax [ esi + 0xa0 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0xa4 ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0xa8 ]
push eax
push 0x1003
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0xb0 ]
push eax
push 0x1009
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
call sub_4104fb
or edi eax
mov eax [ ebp - 0x4 ]
add esp 0x50
mov [ esi + 0xac ] eax
lea eax [ esi + 0xbc ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0xc0 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0xc4 ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0xc8 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
add esp 0x50
or edi eax
lea eax [ esi + 0xcc ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0xd0 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0xb8 ]
push eax
push 0x37
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0xd8 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
add esp 0x50
or edi eax
lea eax [ esi + 0xdc ]
push eax
push 0x2b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0xe0 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0xe4 ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0xe8 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
add esp 0x50
or edi eax
lea eax [ esi + 0xec ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0xd4 ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0xf0 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0xf4 ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
add esp 0x50
or edi eax
lea eax [ esi + 0xf8 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0xfc ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x100 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x104 ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
add esp 0x50
or edi eax
lea eax [ esi + 0x108 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x10c ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x110 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x114 ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
add esp 0x50
or edi eax
lea eax [ esi + 0x118 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x11c ]
push eax
push 0x4f
push ebx
push 0x2
lea eax [ ebp - 0xc ]
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x120 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x124 ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
add esp 0x50
or edi eax
lea eax [ esi + 0x128 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x12c ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x130 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x134 ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
add esp 0x50
or edi eax
lea eax [ esi + 0x138 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x13c ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x140 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x144 ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
add esp 0x50
or edi eax
lea eax [ esi + 0x148 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x14c ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x150 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x154 ]
push eax
push 0x29
push ebx
push 0x2
pop ebx
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_4104fb
add esp 0x50
or edi eax
lea eax [ esi + 0x158 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_4104fb
or edi eax
lea eax [ esi + 0x15c ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_4104fb
add esi 0x160
push esi
push 0x1003
push [ ebp - 0x4 ]
or edi eax
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_4104fb
add esp 0x3c
or eax edi
pop edi
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
leave
retn
sub_417d20
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_40b65b
push [ esi + 0x8 ]
call sub_40b65b
push [ esi + 0xc ]
call sub_40b65b
push [ esi + 0x10 ]
call sub_40b65b
push [ esi + 0x14 ]
call sub_40b65b
push [ esi + 0x18 ]
call sub_40b65b
push [ esi ]
call sub_40b65b
push [ esi + 0x20 ]
call sub_40b65b
push [ esi + 0x24 ]
call sub_40b65b
push [ esi + 0x28 ]
call sub_40b65b
push [ esi + 0x2c ]
call sub_40b65b
push [ esi + 0x30 ]
call sub_40b65b
push [ esi + 0x34 ]
call sub_40b65b
push [ esi + 0x1c ]
call sub_40b65b
push [ esi + 0x38 ]
call sub_40b65b
push [ esi + 0x3c ]
call sub_40b65b
add esp 0x40
push [ esi + 0x40 ]
call sub_40b65b
push [ esi + 0x44 ]
call sub_40b65b
push [ esi + 0x48 ]
call sub_40b65b
push [ esi + 0x4c ]
call sub_40b65b
push [ esi + 0x50 ]
call sub_40b65b
push [ esi + 0x54 ]
call sub_40b65b
push [ esi + 0x58 ]
call sub_40b65b
push [ esi + 0x5c ]
call sub_40b65b
push [ esi + 0x60 ]
call sub_40b65b
push [ esi + 0x64 ]
call sub_40b65b
push [ esi + 0x68 ]
call sub_40b65b
push [ esi + 0x6c ]
call sub_40b65b
push [ esi + 0x70 ]
call sub_40b65b
push [ esi + 0x74 ]
call sub_40b65b
push [ esi + 0x78 ]
call sub_40b65b
push [ esi + 0x7c ]
call sub_40b65b
add esp 0x40
push [ esi + 0x80 ]
call sub_40b65b
push [ esi + 0x84 ]
call sub_40b65b
push [ esi + 0x88 ]
call sub_40b65b
push [ esi + 0x8c ]
call sub_40b65b
push [ esi + 0x90 ]
call sub_40b65b
push [ esi + 0x94 ]
call sub_40b65b
push [ esi + 0x98 ]
call sub_40b65b
push [ esi + 0x9c ]
call sub_40b65b
push [ esi + 0xa0 ]
call sub_40b65b
push [ esi + 0xa4 ]
call sub_40b65b
push [ esi + 0xa8 ]
call sub_40b65b
push [ esi + 0xbc ]
call sub_40b65b
push [ esi + 0xc0 ]
call sub_40b65b
push [ esi + 0xc4 ]
call sub_40b65b
push [ esi + 0xc8 ]
call sub_40b65b
push [ esi + 0xcc ]
call sub_40b65b
add esp 0x40
push [ esi + 0xd0 ]
call sub_40b65b
push [ esi + 0xb8 ]
call sub_40b65b
push [ esi + 0xd8 ]
call sub_40b65b
push [ esi + 0xdc ]
call sub_40b65b
push [ esi + 0xe0 ]
call sub_40b65b
push [ esi + 0xe4 ]
call sub_40b65b
push [ esi + 0xe8 ]
call sub_40b65b
push [ esi + 0xec ]
call sub_40b65b
push [ esi + 0xd4 ]
call sub_40b65b
push [ esi + 0xf0 ]
call sub_40b65b
push [ esi + 0xf4 ]
call sub_40b65b
push [ esi + 0xf8 ]
call sub_40b65b
push [ esi + 0xfc ]
call sub_40b65b
push [ esi + 0x100 ]
call sub_40b65b
push [ esi + 0x104 ]
call sub_40b65b
push [ esi + 0x108 ]
call sub_40b65b
add esp 0x40
push [ esi + 0x10c ]
call sub_40b65b
push [ esi + 0x110 ]
call sub_40b65b
push [ esi + 0x114 ]
call sub_40b65b
push [ esi + 0x118 ]
call sub_40b65b
push [ esi + 0x11c ]
call sub_40b65b
push [ esi + 0x120 ]
call sub_40b65b
push [ esi + 0x124 ]
call sub_40b65b
push [ esi + 0x128 ]
call sub_40b65b
push [ esi + 0x12c ]
call sub_40b65b
push [ esi + 0x130 ]
call sub_40b65b
push [ esi + 0x134 ]
call sub_40b65b
push [ esi + 0x138 ]
call sub_40b65b
push [ esi + 0x13c ]
call sub_40b65b
push [ esi + 0x140 ]
call sub_40b65b
push [ esi + 0x144 ]
call sub_40b65b
push [ esi + 0x148 ]
call sub_40b65b
add esp 0x40
push [ esi + 0x14c ]
call sub_40b65b
push [ esi + 0x150 ]
call sub_40b65b
push [ esi + 0x154 ]
call sub_40b65b
push [ esi + 0x158 ]
call sub_40b65b
push [ esi + 0x15c ]
call sub_40b65b
push [ esi + 0x160 ]
call sub_40b65b
add esp 0x18
sub_418097
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x20 ] 0x0
push edi
mov ebx rwxdata
je r-xdata
mov edi ebx
push 0x164
push 0x1
call sub_40d03a
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
mov [ esi + 0xd4 ] edi
xor eax eax
add eax 0xb4
push eax
call [ InterlockedDecrement@IAT ]
mov eax esi
mov ecx edi
call sub_417521
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ edi + 0xb4 ] 0x1
jmp r-xdata
push edi
call sub_417d20
push edi
call sub_40b65b
pop ecx
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0xd4 ]
cmp eax ebx
je r-xdata
sub_418114
xor dl dl
cmp [ ecx ] dl
je r-xdata
retn
push ebx
push esi
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc ecx
mov eax ecx
sub al 0x30
mov [ ecx ] al
mov al [ ecx ]
cmp al 0x30
jl r-xdata
pop esi
pop ebx
mov bl [ eax + 0x1 ]
mov [ eax ] bl
inc eax
cmp [ eax ] dl
jne r-xdata
jmp r-xdata
cmp [ ecx ] dl
jne r-xdata
sub_418144
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40b65b
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40b65b
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40b65b
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rwxdata ]
je r-xdata
push eax
call sub_40b65b
pop ecx
push esi
call sub_40b65b
pop ecx
sub_4181ad
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x50
push 0x1
call sub_40d03a
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x18 ] edi
jne r-xdata
mov esi [ esi + 0xbc ]
push 0x14
pop ecx
mov edi ebx
push 0x4
[ edi ] [ esi ]
call sub_40cff5
xor edi edi
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rwxdata
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov [ eax ] edi
cmp [ esi + 0x1c ] edi
je r-xdata
push ebx
call sub_40b65b
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb4 ]
mov edi [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ rwxdata ]
mov [ ebx ] eax
mov eax [ rwxdata ]
mov [ ebx + 0x4 ] eax
mov eax [ rwxdata ]
mov [ ebx + 0x8 ] eax
mov eax [ rwxdata ]
mov [ ebx + 0x30 ] eax
mov eax [ rwxdata ]
mov [ ebp - 0x4 ] edi
mov [ ebx + 0x34 ] eax
push 0x4
call sub_40cff5
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
test eax eax
je r-xdata
push eax
call edi
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x3e ]
push ebx
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_4104fb
mov edi eax
lea eax [ ebx + 0x4 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ ebx + 0x8 ]
push eax
push 0x10
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ ebx + 0x30 ]
push eax
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_4104fb
add esp 0x50
or edi eax
lea eax [ ebx + 0x34 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_4104fb
add esp 0x14
or eax edi
je r-xdata
xor esi esi
inc esi
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb4 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
push ebx
call sub_418144
pop ecx
or esi 0xffffffff
jmp r-xdata
push [ esi + 0xb0 ]
call sub_40b65b
push [ esi + 0xbc ]
call sub_40b65b
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
push ebx
call sub_40b65b
push [ ebp - 0x8 ]
call sub_40b65b
pop ecx
pop ecx
mov eax esi
jmp r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ecx ] eax
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_41839d
xor dl dl
cmp [ ecx ] dl
je r-xdata
retn
push ebx
push esi
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc ecx
mov eax ecx
sub al 0x30
mov [ ecx ] al
mov al [ ecx ]
cmp al 0x30
jl r-xdata
pop esi
pop ebx
mov bl [ eax + 0x1 ]
mov [ eax ] bl
inc eax
cmp [ eax ] dl
jne r-xdata
jmp r-xdata
cmp [ ecx ] dl
jne r-xdata
sub_4183cd
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40b65b
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40b65b
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40b65b
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40b65b
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40b65b
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40b65b
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40b65b
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40b65b
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40b65b
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40b65b
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40b65b
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rwxdata ]
je r-xdata
push eax
call sub_40b65b
pop ecx
push esi
call sub_40b65b
pop ecx
sub_4184cb
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x18 ] edi
jne r-xdata
push 0x50
push 0x1
call sub_40d03a
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x4
call sub_40cff5
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rwxdata
jmp r-xdata
mov [ eax ] edi
cmp [ esi + 0x18 ] edi
je r-xdata
push ebx
call sub_40b65b
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb8 ]
cmp eax edi
je r-xdata
push 0x14
pop ecx
mov esi rwxdata
mov edi ebx
[ edi ] [ esi ]
push 0x4
call sub_40cff5
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax edi
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x38 ]
lea eax [ ebx + 0xc ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_4104fb
mov edi eax
lea eax [ ebx + 0x10 ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ ebx + 0x14 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ ebx + 0x18 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_4104fb
add esp 0x50
or edi eax
lea eax [ ebx + 0x1c ]
push eax
push 0x18
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ ebx + 0x20 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ ebx + 0x24 ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_4104fb
or edi eax
lea eax [ ebx + 0x28 ]
push eax
push 0x1a
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_4104fb
add esp 0x50
or edi eax
lea eax [ ebx + 0x29 ]
push eax
push 0x19
push esi
push 0x0
lea eax [ ebp - 0x10 ]
push eax
call sub_4104fb
or edi eax
lea eax [ ebx + 0x2a ]
push eax
push 0x54
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_4104fb
or edi eax
lea eax [ ebx + 0x2b ]
push eax
push 0x55
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_4104fb
or edi eax
lea eax [ ebx + 0x2c ]
push eax
push 0x56
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_4104fb
add esp 0x50
or edi eax
lea eax [ ebx + 0x2d ]
push eax
push 0x57
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_4104fb
or edi eax
lea eax [ ebx + 0x2e ]
push eax
push 0x52
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_4104fb
or edi eax
lea eax [ ebx + 0x2f ]
push eax
push 0x53
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_4104fb
or edi eax
lea eax [ ebx + 0x38 ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_4104fb
add esp 0x50
or edi eax
lea eax [ ebx + 0x3c ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_4104fb
or edi eax
lea eax [ ebx + 0x40 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_4104fb
or edi eax
lea eax [ ebx + 0x44 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_4104fb
or edi eax
lea eax [ ebx + 0x48 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_4104fb
add esp 0x50
or edi eax
lea eax [ ebx + 0x4c ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_4104fb
add esp 0x14
or eax edi
je r-xdata
push ebx
call sub_40b65b
push [ ebp - 0x8 ]
call sub_40b65b
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb8 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
push ebx
call sub_4183cd
push ebx
call sub_40b65b
push [ ebp - 0x8 ]
call sub_40b65b
push [ ebp - 0x4 ]
call sub_40b65b
add esp 0x10
jmp r-xdata
pop ecx
jmp r-xdata
push [ esi + 0xbc ]
call sub_40b65b
push [ esi + 0xb0 ]
call sub_40b65b
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xbc ]
mov ecx [ ecx ]
mov [ ebx ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ ebx + 0x4 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x30 ]
mov [ ebx + 0x30 ] ecx
mov eax [ eax + 0xbc ]
mov eax [ eax + 0x34 ]
mov ecx [ ebp - 0x8 ]
mov [ ebx + 0x34 ] eax
xor eax eax
inc eax
xor edi edi
mov [ ecx ] eax
cmp [ ebp - 0x4 ] edi
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_4188ac
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax 0xffff
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
movzx eax [ ebp - 0x4 ]
and [ ebp - 0x4 ] eax
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
sub_418920
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
lea eax [ esi + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ esi + 0xc0 ] ebx
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc8 ] r--data
mov [ esi + 0xcc ] r--data
mov [ esi + 0xd0 ] r--data
mov [ esi + 0xac ] 0x1
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
push 0x4
call sub_40cff5
push 0x2
mov edi 0x180
push edi
mov [ ebp - 0x2c ] eax
call sub_40d03a
push 0x1
push edi
mov [ ebp - 0x1c ] eax
call sub_40d03a
push 0x1
push edi
mov [ ebp - 0x20 ] eax
call sub_40d03a
push 0x1
push 0x101
mov [ ebp - 0x28 ] eax
call sub_40d03a
add esp 0x24
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x2c ] ebx
je r-xdata
push eax
movzx eax [ esi + 0x30 ]
push 0x1004
push eax
lea eax [ ebp - 0x4c ]
push ebx
push eax
call sub_4104fb
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x2c ]
call sub_40b65b
push [ ebp - 0x1c ]
call sub_40b65b
push [ ebp - 0x20 ]
call sub_40b65b
push [ ebp - 0x28 ]
call sub_40b65b
xor ebx ebx
add esp 0x10
inc ebx
jmp r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp - 0x24 ]
call sub_40b65b
pop ecx
mov eax ebx
jmp r-xdata
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_409b72
leave
retn
cmp [ ebp - 0x20 ] ebx
je r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] ebx
xor eax eax
mov ecx [ ebp - 0x24 ]
mov [ eax + ecx ] al
inc eax
cmp eax 0x100
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x5
ja r-xdata
movzx eax [ ebp - 0x18 ]
mov [ ebp - 0x30 ] eax
cmp eax 0x1
jle r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push ebx
push [ esi + 0x4 ]
add eax 0x100
push eax
push 0x100
push [ ebp - 0x24 ]
mov [ ebp - 0x40 ] eax
push 0x1
push ebx
call sub_4174e1
add esp 0x20
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
push ebx
push [ esi + 0x4 ]
mov edi 0xff
push edi
add ecx 0x81
push ecx
push edi
inc eax
push eax
push 0x100
push [ esi + 0x14 ]
push ebx
call sub_40ddef
add esp 0x24
test eax eax
je r-xdata
lea eax [ ebp - 0x11 ]
mov eax [ ebp - 0x28 ]
push ebx
push [ esi + 0x4 ]
add eax 0x81
push edi
push eax
mov eax [ ebp - 0x24 ]
push edi
inc eax
push eax
push 0x200
push [ esi + 0x14 ]
push ebx
call sub_40ddef
add esp 0x24
test eax eax
je r-xdata
movzx edi [ eax - 0x1 ]
movzx ecx cl
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
lea ecx [ eax + 0xfe ]
xor edx edx
cmp [ ebp - 0x30 ] 0x1
mov [ ecx ] dx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x3c ] ecx
lea ecx [ edi + 0x80 ]
mov [ edi + 0x7f ] bl
mov [ edx + 0x7f ] bl
mov [ ecx ] bl
mov [ ebp - 0x44 ] ecx
lea ecx [ edx + 0x80 ]
mov [ ebp - 0x38 ] ecx
mov [ ecx ] bl
jle r-xdata
cmp edi ecx
jle r-xdata
push 0xfe
lea ecx [ eax + 0x200 ]
push ecx
push eax
call sub_418ef0
push 0x7f
lea eax [ edi + 0x100 ]
push eax
push edi
call sub_418ef0
mov eax [ ebp - 0x28 ]
push 0x7f
lea ecx [ eax + 0x100 ]
push ecx
push eax
call sub_418ef0
mov eax [ esi + 0xc0 ]
add esp 0x24
cmp eax ebx
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ edi + ecx ] 0x20
movzx ecx [ eax ]
inc edi
add eax 0x2
cmp [ eax - 0x1 ] bl
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] 0x1
mov [ esi + 0xc0 ] eax
mov eax [ ebp - 0x40 ]
mov [ esi + 0xc8 ] eax
mov eax [ ebp - 0x3c ]
mov [ esi + 0xc4 ] eax
mov eax [ ebp - 0x44 ]
mov [ esi + 0xcc ] eax
mov eax [ ebp - 0x38 ]
mov [ esi + 0xd0 ] eax
mov eax [ ebp - 0x30 ]
mov [ esi + 0xac ] eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x11 ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
cmp cl bl
je r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_40b65b
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_40b65b
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_40b65b
push [ esi + 0xc0 ]
call sub_40b65b
add esp 0x10
movzx ecx [ ecx - 0x1 ]
movzx edx dl
mov [ ebp - 0x20 ] ecx
cmp ecx edx
jg r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x2
mov [ ebp - 0x1c ] ecx
cmp [ ecx - 0x1 ] bl
jne r-xdata
lea ecx [ eax + ecx * 2 + 0x100 ]
jmp r-xdata
mov dl [ ecx ]
cmp dl bl
je r-xdata
inc [ ebp - 0x20 ]
mov edx 0x8000
mov [ ecx ] dx
add ecx 0x2
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x1c ]
movzx ecx [ ecx ]
cmp [ ebp - 0x20 ] ecx
jle r-xdata
mov ecx [ ebp - 0x34 ]
sub_418d81
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
push edi
test ecx ecx
je r-xdata
call sub_40de77
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov edx [ ebp + 0x10 ]
test edx edx
jne r-xdata
mov esi ecx
mov [ ecx ] 0x0
jmp r-xdata
test edi edi
je r-xdata
inc esi
dec edi
jne r-xdata
sub esi edx
cmp [ esi ] 0x0
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] 0x0
call sub_40de77
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ edx ]
mov [ esi + edx ] al
inc edx
test al al
je r-xdata
call sub_41032e
mov eax esi
jmp r-xdata
sub_418df0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_418e36
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
call sub_40de77
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ eax ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov ecx eax
jne r-xdata
mov [ eax ] bl
jmp r-xdata
mov esi edx
sub esi eax
mov esi eax
sub esi edx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ ecx ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
mov cl [ edx ]
mov [ esi + edx ] cl
inc edx
cmp cl bl
je r-xdata
jmp r-xdata
mov dl [ esi + ecx ]
mov [ ecx ] dl
inc ecx
cmp dl bl
je r-xdata
mov [ eax ] bl
call sub_40de77
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ eax + ecx - 0x1 ] bl
pop eax
jmp r-xdata
call sub_41032e
mov eax esi
jmp r-xdata
sub_418ef0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_418f74 ]
jmp [ ecx * 4 + jump_table_418ff4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_419060 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_4191fc ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_419100 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4191fc ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_419060 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4191fc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_419060 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_419060 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_419060 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4191fc ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4191fc ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4191fc ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_419251
mov edi edi
push ebp
mov ebp esp
xor eax eax
push ebx
xor ebx ebx
inc eax
cmp [ ebp + 0xc ] ebx
jl r-xdata
xor ecx ecx
test eax eax
sete cl
pop ebx
mov eax ecx
pop ebp
retn
push esi
push edi
pop edi
pop esi
mov eax [ ebp + 0xc ]
add eax ebx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
lea edi [ eax + esi * 8 ]
push [ edi ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_41f274
pop ecx
pop ecx
test eax eax
jne r-xdata
jns r-xdata
mov ecx [ ebp + 0x10 ]
add edi 0x4
mov [ ecx ] edi
jmp r-xdata
lea ebx [ esi + 0x1 ]
dec esi
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jle r-xdata
test eax eax
je r-xdata
sub_4192c7
mov edi edi
push ebp
mov ebp esp
push ecx
test esi esi
je r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x20001004
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
leave
retn
push r--data
push esi
call sub_40bb30
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
call [ GetACP@IAT ]
leave
retn
push r--data
push esi
call sub_40bb30
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_41eeda
pop ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x2000000b
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
sub_41934b
mov edi edi
push ebp
mov ebp esp
xor eax eax
xor eax eax
pop ebp
retn
add eax 0x2
cmp eax 0x14
jb r-xdata
mov cx [ ebp + 0x8 ]
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_419370
mov edi edi
push esi
xor esi esi
jmp r-xdata
mov cl [ edx ]
test cl cl
jne r-xdata
lea eax [ ecx - 0x61 ]
inc edx
cmp al 0x5
ja r-xdata
mov eax esi
pop esi
retn
lea eax [ ecx - 0x41 ]
cmp al 0x5
ja r-xdata
add cl 0xd9
jmp r-xdata
movsx eax cl
add esi esi
lea esi [ eax + esi * 8 - 0x30 ]
add cl 0xf9
sub_4193a1
xor eax eax
sub cl 0x61
cmp cl 0x19
ja r-xdata
cmp cl 0x5a
jle r-xdata
retn
inc eax
jmp r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x41
jl r-xdata
sub_4193bc
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_40c97d
mov edx edi
mov esi eax
call sub_419370
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0xb0 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0xa0 ]
call sub_41f274
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0xa4 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0xa4 ]
shr eax 0x2
not eax
and eax 0x1
push edi
call sub_41934b
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_409b72
leave
retn 0x4
or [ esi + 0xa4 ] 0x4
mov [ esi + 0xb8 ] edi
mov [ esi + 0xb4 ] edi
sub_419463
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
mov eax esi
and eax 0x3ff
push 0x20000001
or eax 0x400
push eax
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp esi [ ebp - 0x4 ]
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop esi
leave
retn
mov eax [ ebp + 0xc ]
mov esi [ eax ]
push edi
mov edx esi
call sub_4193a1
push esi
mov edi eax
call sub_40b5d0
pop ecx
cmp edi eax
pop edi
je r-xdata
sub_4194be
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_40c97d
mov edx edi
lea esi [ eax + 0x9c ]
call sub_419370
mov ebx [ GetLocaleInfoA@IAT ]
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call ebx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_41f274
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax 0x300
and ecx eax
cmp ecx eax
je r-xdata
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_409b72
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_41f274
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_41f274
pop ecx
xor ebx ebx
pop ecx
test eax eax
jne r-xdata
test [ esi + 0x8 ] 0x2
jne r-xdata
or [ esi + 0x8 ] 0x304
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
or [ esi + 0x8 ] 0x200
mov eax [ esi + 0x8 ]
cmp [ esi + 0x10 ] ebx
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0x1c ] edi
cmp [ esi + 0xc ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
je r-xdata
or eax 0x100
mov [ esi + 0x8 ] eax
jmp r-xdata
mov edx [ esi + 0x8 ]
test dl 0x1
jne r-xdata
push eax
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_41f39d
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_41f274
pop ecx
pop ecx
test eax eax
jne r-xdata
or [ esi + 0x8 ] 0x100
push [ esi ]
call sub_40b5d0
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
push edi
call sub_41934b
pop ecx
test eax eax
je r-xdata
push [ esi ]
or [ esi + 0x8 ] 0x2
mov [ esi + 0x1c ] edi
call sub_40b5d0
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
push esi
push ebx
mov [ esi + 0x18 ] edi
push esi
push 0x1
jmp r-xdata
or edx 0x1
mov [ esi + 0x8 ] edx
mov [ esi + 0x18 ] edi
jmp r-xdata
mov eax edi
call sub_419463
pop ecx
pop ecx
test eax eax
je r-xdata
sub_41968f
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_40c97d
mov edx edi
lea esi [ eax + 0x9c ]
call sub_419370
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_41f274
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_409b72
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
cmp [ esi + 0xc ] 0x0
je r-xdata
or [ esi + 0x8 ] 0x4
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
push esi
push 0x1
jmp r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_41f274
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax edi
call sub_419463
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
push eax
sub_41974f
push [ esi + 0x4 ]
call sub_40b5d0
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_4193bc
mov [ esi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
retn
and [ esi + 0x8 ] 0x0
sub_41977b
push [ esi ]
call sub_40b5d0
push [ esi + 0x4 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
call sub_40b5d0
sub eax 0x3
neg eax
sbb eax eax
and [ esi + 0x18 ] 0x0
inc eax
cmp [ esi + 0x10 ] 0x0
pop ecx
pop ecx
mov [ esi + 0x14 ] eax
je r-xdata
mov edx [ esi ]
call sub_4193a1
push 0x2
pop eax
jmp r-xdata
and [ esi + 0x8 ] 0x0
test eax 0x200
je r-xdata
push 0x1
push sub_4194be
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
mov eax [ esi + 0x8 ]
test eax 0x100
je r-xdata
test al 0x7
jne r-xdata
retn
sub_4197e2
push [ esi ]
call sub_40b5d0
sub eax 0x3
neg eax
sbb eax eax
inc eax
pop ecx
mov [ esi + 0x10 ] eax
je r-xdata
mov edx [ esi ]
call sub_4193a1
push 0x2
pop eax
jmp r-xdata
retn
and [ esi + 0x8 ] 0x0
push 0x1
push sub_41968f
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
sub_41981e
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_40c97d
lea edi [ eax + 0x9c ]
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov [ edi ] eax
add eax 0x40
lea ebx [ edi + 0x4 ]
mov [ ebx ] eax
je r-xdata
or [ edi + 0x8 ] 0x104
jmp r-xdata
mov eax [ edi ]
and [ edi + 0x8 ] 0x0
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
call [ GetUserDefaultLCID@IAT ]
mov [ edi + 0x18 ] eax
mov [ edi + 0x1c ] eax
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push ebx
push 0x16
push r--data
call sub_419251
add esp 0xc
xor eax eax
mov esi [ ebp + 0x8 ]
mov eax esi
sub eax 0xffffff80
neg esi
sbb esi esi
and esi eax
call sub_4192c7
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
je r-xdata
mov [ edi + 0x8 ] 0x104
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp esi 0xfde8
je r-xdata
push ebx
call sub_40b5d0
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_4193bc
mov [ edi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ edi + 0x8 ] 0x4
jne r-xdata
mov esi edi
call sub_4197e2
cmp [ eax ] 0x0
je r-xdata
cmp esi 0xfde9
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
and [ edi + 0x8 ] 0x0
jmp r-xdata
push edi
push 0x40
push r--data
call sub_419251
add esp 0xc
test eax eax
je r-xdata
mov esi edi
call sub_41977b
jmp r-xdata
movzx eax si
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
push 0x1
push [ edi + 0x18 ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
mov esi edi
call sub_4197e2
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov esi edi
call sub_41977b
jmp r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov cx [ edi + 0x18 ]
mov [ eax ] cx
mov cx [ edi + 0x1c ]
mov [ eax + 0x2 ] cx
mov [ eax + 0x4 ] si
xor eax eax
inc eax
jmp r-xdata
mov esi [ GetLocaleInfoA@IAT ]
mov ecx 0x814
cmp [ eax ] cx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x40
push ebx
push 0x1001
push [ edi + 0x18 ]
call esi
test eax eax
je r-xdata
push r--data
push 0x40
push ebx
call sub_40b496
add esp 0xc
test eax eax
je r-xdata
push 0x40
lea eax [ ebx + 0x40 ]
push eax
push 0x1002
push [ edi + 0x1c ]
call esi
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4102c2
push 0xa
push 0x10
sub ebx 0xffffff80
push ebx
push [ ebp + 0x8 ]
call sub_41f4aa
add esp 0x10
sub_419a35
mov ax [ esi ]
cmp ax [ ecx ]
je r-xdata
xor eax eax
movzx edx [ ecx ]
movzx eax al
sub eax edx
je r-xdata
movzx eax [ esi + 0x1 ]
movzx ecx [ ecx + 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
retn
sub_419a71
mov eax [ esi ]
cmp eax [ ecx ]
je r-xdata
xor eax eax
movzx edx [ ecx ]
movzx eax al
sub eax edx
je r-xdata
movzx eax [ esi + 0x1 ]
movzx edx [ ecx + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ esi + 0x2 ]
movzx edx [ ecx + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
retn
movzx eax [ esi + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
retn
sub_419ae1
mov edi edi
push esi
push edi
mov edi eax
jmp r-xdata
cmp edi 0x20
jae r-xdata
mov eax [ ecx ]
cmp eax [ edx ]
je r-xdata
add ecx edi
add edx edi
cmp edi 0x1f
ja r-xdata
xor eax eax
movzx esi al
movzx eax [ edx ]
sub esi eax
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_41aea9 ]
pop edi
pop esi
retn
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
movzx esi [ ecx + 0x1 ]
movzx eax [ edx + 0x1 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ecx - 0x1c ]
cmp eax [ edx - 0x1c ]
je r-xdata
mov eax [ ecx - 0x18 ]
cmp eax [ edx - 0x18 ]
je r-xdata
mov eax [ ecx - 0x14 ]
cmp eax [ edx - 0x14 ]
je r-xdata
mov eax [ ecx - 0x10 ]
cmp eax [ edx - 0x10 ]
je r-xdata
mov eax [ ecx - 0xc ]
cmp eax [ edx - 0xc ]
je r-xdata
mov eax [ ecx - 0x8 ]
cmp eax [ edx - 0x8 ]
je r-xdata
mov eax [ ecx - 0x4 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ecx - 0x1d ]
cmp eax [ edx - 0x1d ]
je r-xdata
mov eax [ ecx - 0x19 ]
cmp eax [ edx - 0x19 ]
je r-xdata
mov eax [ ecx - 0x15 ]
cmp eax [ edx - 0x15 ]
je r-xdata
mov eax [ ecx - 0x11 ]
cmp eax [ edx - 0x11 ]
je r-xdata
mov eax [ ecx - 0xd ]
cmp eax [ edx - 0xd ]
je r-xdata
mov eax [ ecx - 0x9 ]
cmp eax [ edx - 0x9 ]
je r-xdata
mov eax [ ecx - 0x5 ]
cmp eax [ edx - 0x5 ]
je r-xdata
movzx eax [ ecx - 0x1 ]
movzx ecx [ edx - 0x1 ]
sub eax ecx
je r-xdata
mov eax [ ecx - 0x1e ]
cmp eax [ edx - 0x1e ]
je r-xdata
mov eax [ ecx - 0x1a ]
cmp eax [ edx - 0x1a ]
je r-xdata
mov eax [ ecx - 0x16 ]
cmp eax [ edx - 0x16 ]
je r-xdata
mov eax [ ecx - 0x12 ]
cmp eax [ edx - 0x12 ]
je r-xdata
mov eax [ ecx - 0xe ]
cmp eax [ edx - 0xe ]
je r-xdata
mov eax [ ecx - 0xa ]
cmp eax [ edx - 0xa ]
je r-xdata
mov eax [ ecx - 0x6 ]
cmp eax [ edx - 0x6 ]
je r-xdata
mov ax [ ecx - 0x2 ]
cmp ax [ edx - 0x2 ]
je r-xdata
mov eax [ ecx - 0x1f ]
cmp eax [ edx - 0x1f ]
je r-xdata
mov eax [ ecx - 0x1b ]
cmp eax [ edx - 0x1b ]
je r-xdata
mov eax [ ecx - 0x17 ]
cmp eax [ edx - 0x17 ]
je r-xdata
mov eax [ ecx - 0x13 ]
cmp eax [ edx - 0x13 ]
je r-xdata
mov eax [ ecx - 0xf ]
cmp eax [ edx - 0xf ]
je r-xdata
mov eax [ ecx - 0xb ]
cmp eax [ edx - 0xb ]
je r-xdata
mov eax [ ecx - 0x7 ]
cmp eax [ edx - 0x7 ]
je r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x4 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x2 ]
movzx eax [ edx + 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
movzx eax [ edx - 0x1c ]
movzx esi [ ecx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
movzx eax [ edx - 0x19 ]
movzx esi [ ecx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1e ]
sub esi eax
je r-xdata
xor eax eax
movzx eax [ edx - 0x1a ]
movzx esi [ ecx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
jmp r-xdata
xor eax eax
movzx eax [ edx - 0x1f ]
movzx esi [ ecx - 0x1f ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp eax [ edx + 0x8 ]
je r-xdata
movzx esi [ ecx + 0x5 ]
movzx eax [ edx + 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x3 ]
movzx eax [ edx + 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1d ]
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1e ]
movzx eax [ edx - 0x1e ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
jmp r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x8 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x6 ]
movzx eax [ edx + 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1d ]
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax [ ecx + 0xc ]
cmp eax [ edx + 0xc ]
je r-xdata
movzx esi [ ecx + 0x9 ]
movzx eax [ edx + 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x7 ]
movzx eax [ edx + 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ ecx - 0x1 ]
movzx ecx [ edx - 0x1 ]
sub eax ecx
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0xc ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0xa ]
movzx eax [ edx + 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x10 ]
cmp eax [ edx + 0x10 ]
je r-xdata
movzx esi [ ecx + 0xd ]
movzx eax [ edx + 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0xb ]
movzx eax [ edx + 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x10 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0xe ]
movzx eax [ edx + 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x14 ]
cmp eax [ edx + 0x14 ]
je r-xdata
movzx esi [ ecx + 0x11 ]
movzx eax [ edx + 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0xf ]
movzx eax [ edx + 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x14 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x12 ]
movzx eax [ edx + 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x18 ]
cmp eax [ edx + 0x18 ]
je r-xdata
movzx esi [ ecx + 0x15 ]
movzx eax [ edx + 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x13 ]
movzx eax [ edx + 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x18 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x16 ]
movzx eax [ edx + 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x1c ]
cmp eax [ edx + 0x1c ]
je r-xdata
movzx esi [ ecx + 0x19 ]
movzx eax [ edx + 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x17 ]
movzx eax [ edx + 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x1c ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x1a ]
movzx eax [ edx + 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
add ecx 0x20
add edx 0x20
sub edi 0x20
movzx esi [ ecx + 0x1d ]
movzx eax [ edx + 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1b ]
movzx eax [ edx + 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1e ]
movzx eax [ edx + 0x1e ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
movzx esi [ ecx + 0x1f ]
movzx eax [ edx + 0x1f ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
sub_41af29
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_41c3fd ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
sub_41c47d
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push esi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
lea esi [ ebx - 0x4 ]
test esi esi
je r-xdata
pop ebx
leave
retn
cmp esi ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop esi
inc eax
inc esi
inc ecx
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] esi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
sub_41c540
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_41c580
push 0x10
push r--data
call sub_40cd00
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_410848
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41c613
mov eax [ ebp - 0x1c ]
call sub_40cd45
retn
mov esi edi
mov eax [ rwxdata ]
cmp [ eax + esi * 4 ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rwxdata ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_41f6c2
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rwxdata ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rwxdata ]
push [ eax + esi * 4 ]
call sub_40b65b
pop ecx
mov eax [ rwxdata ]
mov [ eax + esi * 4 ] ebx
inc [ ebp - 0x1c ]
sub_41c61c
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_41c858
pop ecx
push eax
call sub_41fe33
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_41c684
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_41c61c
pop ecx
test eax eax
je r-xdata
push esi
call sub_41c6cc
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_41c858
push eax
call sub_41ff07
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_41c6cc
push 0x14
push r--data
call sub_40cd00
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_410848
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41c79d
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rwxdata ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_40cd45
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rwxdata ]
jge r-xdata
push eax
push esi
call sub_40f35d
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rwxdata ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_41c76e
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_41c684
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_41c684
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_41c7a6
push 0xc
push r--data
call sub_40cd00
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_40f31c
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_41c684
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41c7ef
mov eax [ ebp - 0x1c ]
push esi
call sub_41c6cc
pop ecx
jmp r-xdata
call sub_40cd45
retn
sub_41c802
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_40de77
mov [ eax ] 0x9
call sub_40de77
mov [ eax ] 0x9
call sub_41032e
jmp r-xdata
cmp eax [ rwxdata ]
jb r-xdata
xor eax eax
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
pop ebp
retn
sub_41c858
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_40de77
mov [ eax ] 0x16
call sub_41032e
or eax 0xffffffff
pop ebp
retn
sub_41c87e
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_41c858
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_40de77
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_40de77
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_40f245
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_41fe33
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
mov [ esi + 0x4 ] ecx
cmp edi ebx
jle r-xdata
push [ ebp + 0xc ]
call sub_41c802
pop ecx
test eax eax
jne r-xdata
call sub_40f245
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_41fe33
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_42014f
pop ecx
pop edi
mov eax rwxdata
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_420065
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rwxdata ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_41c9e2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_40a63a
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_40de77
push 0x16
pop esi
mov [ eax ] esi
call sub_41032e
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_40de77
mov [ eax ] 0x2a
call sub_40de77
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_40de77
push 0x22
pop esi
mov [ eax ] esi
call sub_41032e
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_417380
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_417380
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_41cb54
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push [ ebp + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_40a63a
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0xc ]
mov eax [ ebp - 0x14 ]
push [ eax + 0xac ]
lea eax [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push eax
call sub_41c9e2
add esp 0x14
test eax eax
jne r-xdata
or eax 0xffffffff
mov eax [ ebp - 0x4 ]
jmp r-xdata
leave
retn
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x8 ] 0x0
je r-xdata
sub_41cba5
mov edi edi
push ebp
mov ebp esp
push ecx
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push [ ebp + 0xc ]
call sub_418cc7
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
call sub_41c9e2
add esp 0x14
test eax eax
jne r-xdata
or eax 0xffffffff
leave
retn
mov eax [ ebp - 0x4 ]
leave
retn
sub_41cbe0
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_41cc75
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_41c87e
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_41cca8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_41cc75
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_41ccce
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ ebp + 0x8 ]
mov ecx edi
call sub_41cc75
inc ebx
cmp [ esi ] 0xffffffff
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_40de77
cmp [ eax ] 0x2a
jne r-xdata
mov ecx edi
mov al 0x3f
call sub_41cc75
sub_41cd1b
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x250 ]
mov [ ebp - 0x258 ] esi
mov [ ebp - 0x228 ] ebx
mov [ ebp - 0x260 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x238 ] eax
call sub_40a63a
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_40de77
mov [ eax ] 0x16
call sub_41032e
cmp [ ebp - 0x244 ] 0x0
je r-xdata
xor esi esi
cmp edi esi
je r-xdata
push esi
call sub_41c858
pop ecx
mov edx rwxdata
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x248 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ edi ]
mov [ ebp - 0x224 ] esi
mov [ ebp - 0x220 ] esi
mov [ ebp - 0x240 ] esi
mov [ ebp - 0x254 ] esi
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_409b72
leave
retn
cmp [ ebp - 0x244 ] 0x0
je r-xdata
inc edi
mov [ ebp - 0x23c ] edi
cmp [ ebp - 0x224 ] esi
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rwxdata ]
jmp r-xdata
mov eax [ ebp - 0x224 ]
mov eax [ ebp - 0x248 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x240 ] 0x0
je r-xdata
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
cmp [ ebp - 0x240 ] 0x7
jne r-xdata
xor eax eax
movsx eax dl
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rwxdata ]
jmp r-xdata
push 0x7
pop ecx
cmp eax ecx
ja r-xdata
mov ecx [ ebp - 0x240 ]
imul eax eax 0x9
movzx eax [ eax + ecx + r--data ]
push 0x8
shr eax 0x4
pop esi
mov [ ebp - 0x240 ] eax
cmp eax esi
je r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov edi [ ebp - 0x23c ]
mov al [ edi ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + jump_table_41d8cb ]
mov ebx [ ebp - 0x228 ]
xor esi esi
mov dl al
jmp r-xdata
xor eax eax
or [ ebp - 0x218 ] 0xffffffff
mov [ ebp - 0x270 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
jmp r-xdata
movsx eax dl
sub eax 0x20
je r-xdata
cmp dl 0x2a
jne r-xdata
and [ ebp - 0x218 ] 0x0
jmp r-xdata
cmp dl 0x2a
jne r-xdata
cmp dl 0x49
je r-xdata
and [ ebp - 0x238 ] 0x0
lea eax [ ebp - 0x250 ]
push eax
movzx eax dl
push eax
call sub_40df4c
pop ecx
test eax eax
mov al [ ebp - 0x211 ]
pop ecx
je r-xdata
movsx eax dl
cmp eax 0x64
jg r-xdata
or [ ebp - 0x210 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x234 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x234 ] eax
jmp r-xdata
add ebx 0x4
mov [ ebp - 0x228 ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x234 ] ebx
test ebx ebx
jns r-xdata
mov eax [ ebp - 0x218 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x218 ] eax
jmp r-xdata
add ebx 0x4
mov [ ebp - 0x228 ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x218 ] ebx
test ebx ebx
jns r-xdata
mov al [ edi ]
cmp al 0x36
jne r-xdata
cmp dl 0x68
je r-xdata
mov ecx [ ebp - 0x258 ]
lea esi [ ebp - 0x224 ]
call sub_41cc75
jmp r-xdata
mov ecx [ ebp - 0x258 ]
lea esi [ ebp - 0x224 ]
call sub_41cc75
mov al [ edi ]
inc edi
mov [ ebp - 0x23c ] edi
test al al
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x80
jmp r-xdata
sub eax esi
je r-xdata
or [ ebp - 0x210 ] 0x4
neg [ ebp - 0x234 ]
jmp r-xdata
or [ ebp - 0x218 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
cmp [ edi + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x210 ] 0x20
jmp r-xdata
cmp dl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x210 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
cmp [ edi + 0x1 ] 0x32
jne r-xdata
add edi 0x2
or [ ebp - 0x210 ] 0x8000
mov [ ebp - 0x23c ] edi
jmp r-xdata
cmp [ edi ] 0x6c
jne r-xdata
cmp dl 0x77
jne r-xdata
mov ecx [ ebp - 0x218 ]
cmp ecx 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x218 ] esi
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
add ebx esi
mov eax [ ebx - 0x8 ]
mov edx [ ebx - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al 0x69
je r-xdata
add edi 0x2
and [ ebp - 0x210 ] 0xffff7fff
mov [ ebp - 0x23c ] edi
jmp r-xdata
or [ ebp - 0x210 ] 0x10
jmp r-xdata
inc edi
or [ ebp - 0x210 ] 0x1000
mov [ ebp - 0x23c ] edi
jmp r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
add ebx 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x228 ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x21c ] ebx
je r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x220 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x220 ] 0x10
je r-xdata
cmp [ ebp - 0x25c ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add ebx 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x228 ] ebx
mov [ ebp - 0x260 ] ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x210 ] esi
jmp r-xdata
cmp al 0x6f
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x260 ] 0x27
mov ecx [ ebp - 0x210 ]
test ecx 0x8000
je r-xdata
mov al [ ebp - 0x260 ]
add al 0x51
mov [ ebp - 0x22c ] 0x30
mov [ ebp - 0x22b ] al
mov [ ebp - 0x230 ] 0x2
jmp r-xdata
cmp [ ebp - 0x254 ] 0x0
je r-xdata
mov eax [ ebp - 0x210 ]
test al 0x40
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp [ ebp - 0x218 ] 0x0
lea edi [ ebp - 0x20c ]
mov eax 0x200
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x264 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
mov eax [ ebx - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x228 ] ebx
test cl 0x40
je r-xdata
test [ ebp - 0x210 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x228 ] ebx
test eax eax
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x210 ] 0x800
add dl 0x20
mov [ ebp - 0x270 ] 0x1
mov [ ebp - 0x211 ] dl
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax [ ebp - 0x21c ]
jmp r-xdata
mov eax [ rwxdata ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp - 0x21c ]
mov [ ebp - 0x238 ] 0x1
jmp r-xdata
mov eax [ rwxdata ]
mov [ ebp - 0x21c ] eax
push [ ebp - 0x254 ]
call sub_40b65b
and [ ebp - 0x254 ] 0x0
pop ecx
mov ebx [ ebp - 0x234 ]
sub ebx [ ebp - 0x220 ]
sub ebx [ ebp - 0x230 ]
mov [ ebp - 0x264 ] ebx
test al 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x218 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ ebx - 0x4 ]
movsx eax [ ebx - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x218 ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rwxdata ]
mov [ ebp - 0x21c ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
dec eax
dec eax
jne r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
push [ ebp - 0x230 ]
mov edi [ ebp - 0x258 ]
lea eax [ ebp - 0x224 ]
lea ecx [ ebp - 0x22c ]
call sub_41ccce
test [ ebp - 0x210 ] 0x8
pop ecx
je r-xdata
mov edi ebx
test ebx ebx
jle r-xdata
test al 0x1
je r-xdata
mov [ ebp - 0x22c ] 0x2d
jmp r-xdata
cmp [ ebp - 0x218 ] eax
jle r-xdata
cmp dl 0x67
jne r-xdata
mov eax [ ebx ]
mov esi [ DecodePointer@IAT ]
add ebx 0x8
mov [ ebp - 0x278 ] eax
mov eax [ ebx - 0x4 ]
mov [ ebp - 0x274 ] eax
lea eax [ ebp - 0x250 ]
push eax
push [ ebp - 0x270 ]
movsx eax dl
push [ ebp - 0x218 ]
mov [ ebp - 0x228 ] ebx
push eax
push [ ebp - 0x264 ]
lea eax [ ebp - 0x278 ]
push edi
push eax
push [ rwxdata ]
call esi
call eax
mov ebx [ ebp - 0x210 ]
add esp 0x1c
and ebx 0x80
je r-xdata
mov esi [ ebx ]
add ebx 0x4
mov [ ebp - 0x228 ] ebx
call sub_40a96c
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x210 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x218 ] eax
jle r-xdata
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x210 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x220 ] eax
test [ ebp - 0x210 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x21c ] ecx
je r-xdata
add ebx 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x228 ] ebx
je r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x21c ]
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x21c ]
sar eax 0x1
jmp r-xdata
cmp [ ebp - 0x238 ] 0x0
mov ebx [ ebp - 0x220 ]
je r-xdata
test [ ebp - 0x210 ] 0x4
jne r-xdata
mov ecx [ ebp - 0x258 ]
lea esi [ ebp - 0x224 ]
mov al 0x20
dec edi
call sub_41cc75
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
test al 0x2
je r-xdata
mov [ ebp - 0x22c ] 0x2b
jmp r-xdata
mov [ ebp - 0x230 ] 0x1
cmp [ ebp - 0x218 ] 0xa3
jle r-xdata
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
cmp [ ebp - 0x211 ] 0x67
jne r-xdata
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
test [ ebp - 0x210 ] 0x20
je r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x220 ] esi
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x218 ] eax
and [ ebp - 0x238 ] 0x0
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x238 ] 0x1
jmp r-xdata
mov al [ ebx - 0x4 ]
mov [ ebp - 0x20c ] al
mov [ ebp - 0x220 ] 0x1
movzx eax [ ebx - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x220 ]
push eax
call sub_41cb37
add esp 0x10
test eax eax
je r-xdata
and [ ebp - 0x240 ] 0x0
inc eax
add eax 0x2
mov ecx [ ebp - 0x21c ]
push ebx
lea eax [ ebp - 0x224 ]
call sub_41ccce
pop ecx
test ebx ebx
jle r-xdata
jmp r-xdata
test edi edi
jg r-xdata
mov [ ebp - 0x22c ] 0x20
mov esi [ ebp - 0x218 ]
add esi 0x15d
push esi
call sub_40cff5
mov dl [ ebp - 0x211 ]
pop ecx
mov [ ebp - 0x254 ] eax
test eax eax
je r-xdata
cmp [ edi ] 0x2d
jne r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x250 ]
push eax
push edi
push [ rwxdata ]
call esi
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x224 ]
mov [ esi ] eax
mov ax [ ebp - 0x224 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x210 ] 0x200
jmp r-xdata
lea esi [ ebp - 0xd ]
and [ ebp - 0x230 ] eax
lea eax [ ebp - 0x20c ]
mov [ ebp - 0x21c ] eax
jmp r-xdata
mov [ ebp - 0x25c ] 0x1
jmp r-xdata
test [ ebp - 0x210 ] 0x4
je r-xdata
mov esi [ ebp - 0x21c ]
test ebx ebx
jg r-xdata
mov [ ebp - 0x218 ] 0xa3
mov [ ebp - 0x21c ] eax
mov [ ebp - 0x264 ] esi
mov edi eax
jmp r-xdata
push edi
jmp r-xdata
or [ ebp - 0x210 ] 0x100
inc edi
mov [ ebp - 0x21c ] edi
lea eax [ ebp - 0x250 ]
push eax
push edi
push [ rwxdata ]
call esi
call eax
pop ecx
pop ecx
mov [ ebp - 0x25c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x220 ]
cdq
push edx
push eax
push ebx
push edi
call sub_41cbe0
add ecx 0x30
mov [ ebp - 0x264 ] ebx
mov edi eax
mov ebx edx
cmp ecx 0x39
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
mov ebx [ ebp - 0x264 ]
jmp r-xdata
or [ ebp - 0x224 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x26c ] eax
je r-xdata
lea esi [ ebp - 0x224 ]
mov ecx edi
mov al 0x30
dec ebx
call sub_41cc75
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
call sub_40b5d0
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x260 ]
lea eax [ ebp - 0xd ]
sub eax esi
inc esi
test [ ebp - 0x210 ] 0x200
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x21c ] esi
je r-xdata
test ebx ebx
jg r-xdata
cmp [ ebp - 0x224 ] 0x0
jl r-xdata
push [ ebp - 0x26c ]
lea eax [ ebp - 0x224 ]
lea ecx [ ebp - 0xc ]
call sub_41ccce
pop ecx
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x218 ]
dec [ ebp - 0x218 ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
lea esi [ ebp - 0x224 ]
mov ecx edi
mov al 0x20
dec ebx
call sub_41cc75
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
movzx eax [ esi ]
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x26c ]
push eax
dec ebx
add esi 0x2
call sub_41cb37
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec [ ebp - 0x21c ]
mov ecx [ ebp - 0x21c ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_41d8eb
mov edi edi
push ebp
mov ebp esp
push ebx
mov bl [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
mov al [ esi + 0x8 ]
cmp al 0x70
je r-xdata
xor ecx ecx
cmp al bl
sete cl
mov eax ecx
cmp bl 0x70
je r-xdata
cmp al 0x73
je r-xdata
xor edx edx
inc edx
cmp al 0x53
je r-xdata
xor ecx ecx
inc ecx
cmp bl 0x53
je r-xdata
xor edx edx
jmp r-xdata
cmp edx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor ecx ecx
jmp r-xdata
cmp bl 0x73
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi + 0xc ]
mov edx [ ebp + 0x14 ]
mov eax 0x810
and ecx eax
neg ecx
sbb ecx ecx
and edx eax
neg ecx
neg edx
sbb edx edx
neg edx
cmp ecx edx
jne r-xdata
mov dl 0x64
cmp al dl
je r-xdata
test edx edx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
xor eax eax
inc eax
jmp r-xdata
xor ecx ecx
inc ecx
cmp al 0x69
je r-xdata
xor eax eax
inc eax
cmp bl 0x69
je r-xdata
cmp al dl
je r-xdata
cmp al 0x6f
je r-xdata
mov eax [ esi + 0xc ]
mov ecx eax
xor ecx [ ebp + 0x14 ]
test ecx 0x10000
jne r-xdata
cmp bl 0x6f
je r-xdata
cmp al 0x69
je r-xdata
cmp al 0x75
je r-xdata
xor eax [ ebp + 0x14 ]
test al 0x20
jne r-xdata
cmp bl 0x75
je r-xdata
cmp al 0x6f
je r-xdata
cmp al 0x78
je r-xdata
mov ecx [ esi ]
xor eax eax
cmp ecx [ ebp + 0xc ]
sete al
jmp r-xdata
cmp bl 0x78
je r-xdata
cmp al 0x75
je r-xdata
cmp al 0x58
je r-xdata
cmp bl 0x58
je r-xdata
cmp al 0x78
je r-xdata
cmp bl dl
je r-xdata
xor eax eax
jmp r-xdata
cmp al 0x58
je r-xdata
cmp bl 0x69
je r-xdata
cmp ecx eax
jne r-xdata
xor ecx ecx
jmp r-xdata
cmp bl 0x6f
je r-xdata
cmp bl dl
je r-xdata
cmp bl 0x75
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x58
jne r-xdata
sub_41da16
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_41c87e
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_41da49
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_41da16
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_41da6f
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ ebp + 0x8 ]
mov ecx edi
call sub_41da16
inc ebx
cmp [ esi ] 0xffffffff
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_40de77
cmp [ eax ] 0x2a
jne r-xdata
mov ecx edi
mov al 0x3f
call sub_41da16
sub_41dad1
mov edi edi
push ebp
mov ebp esp
sub esp 0x8d0
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
xor ebx ebx
lea ecx [ ebp - 0x878 ]
mov [ ebp - 0x8b8 ] esi
mov [ ebp - 0x854 ] eax
mov [ ebp - 0x8b4 ] ebx
mov [ ebp - 0x850 ] ebx
mov [ ebp - 0x89c ] ebx
mov [ ebp - 0x8bc ] ebx
mov [ ebp - 0x8a0 ] ebx
call sub_40a63a
or [ ebp - 0x860 ] 0xffffffff
mov [ ebp - 0x898 ] ebx
cmp esi ebx
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_40de77
mov [ eax ] 0x16
call sub_41032e
cmp [ ebp - 0x86c ] bl
cmp edi ebx
je r-xdata
push esi
call sub_41c858
pop ecx
mov edx rwxdata
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x870 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0x87c ] ebx
mov [ ebp - 0x8d0 ] edi
mov [ ebp - 0x864 ] ebx
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_409b72
leave
retn
mov eax [ ebp - 0x8d0 ]
or [ ebp - 0x894 ] 0xffffffff
or [ ebp - 0x880 ] 0xffffffff
or [ ebp - 0x860 ] 0xffffffff
mov [ ebp - 0x8a8 ] ebx
mov [ ebp - 0x8a4 ] ebx
mov [ ebp - 0x8b0 ] ebx
mov [ ebp - 0x890 ] ebx
mov [ ebp - 0x858 ] ebx
mov bl [ eax ]
mov [ ebp - 0x85c ] bl
test bl bl
je r-xdata
cmp [ ebp - 0x860 ] ebx
je r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rwxdata ]
jmp r-xdata
inc [ ebp - 0x864 ]
cmp [ ebp - 0x864 ] 0x2
jge r-xdata
mov esi eax
jmp r-xdata
cmp [ ebp - 0x86c ] 0x0
je r-xdata
xor ebx ebx
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor ebx ebx
jmp r-xdata
inc esi
cmp [ ebp - 0x87c ] 0x0
mov [ ebp - 0x884 ] esi
jl r-xdata
mov eax [ ebp - 0x87c ]
mov eax [ ebp - 0x870 ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rwxdata ]
jmp r-xdata
cmp [ ebp - 0x864 ] 0x1
jne r-xdata
xor esi esi
cmp [ ebp - 0x8a4 ] esi
je r-xdata
lea eax [ ebx - 0x20 ]
cmp al 0x58
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
cmp [ ebp - 0x860 ] 0x1
jne r-xdata
cmp [ ebp - 0x8a4 ] 0x7
jne r-xdata
xor eax eax
movsx eax bl
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
cmp [ ebp - 0x864 ] esi
jne r-xdata
call sub_40de77
mov [ eax ] 0x16
call sub_41032e
cmp [ ebp - 0x86c ] 0x0
jmp r-xdata
cmp eax 0x8
je r-xdata
cmp [ esi ] 0x25
je r-xdata
mov edx [ ebp - 0x8a4 ]
imul eax eax 0x9
movzx eax [ eax + edx + r--data ]
xor edi edi
shr eax 0x4
inc edi
xor ecx ecx
mov [ ebp - 0x8a4 ] eax
cmp eax edi
jne r-xdata
cmp [ ebp - 0x894 ] esi
jl r-xdata
je r-xdata
cmp eax 0x7
ja r-xdata
mov edx [ ebp - 0x880 ]
mov eax [ ebp - 0x8a4 ]
jmp [ eax * 4 + r-xdata ]
cmp [ ebp - 0x860 ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x854 ]
lea eax [ ebp - 0x648 ]
mov esi [ ebp - 0x884 ]
mov al [ esi ]
mov [ ebp - 0x85c ] al
test al al
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x860 ] edi
jne r-xdata
push 0xa
lea eax [ ebp - 0x898 ]
push eax
push esi
call sub_4203c3
add esp 0xc
test eax eax
jle r-xdata
mov [ eax ] edx
add edx 0x4
dec ecx
je r-xdata
mov bl [ ebp - 0x85c ]
push 0xa
lea eax [ ebp - 0x898 ]
push eax
push esi
call sub_4203c3
mov ecx [ ebp - 0x898 ]
add esp 0xc
dec eax
cmp [ ebp - 0x864 ] 0x0
lea edx [ ecx + 0x1 ]
mov [ ebp - 0x880 ] eax
mov [ ebp - 0x884 ] edx
jne r-xdata
and [ ebp - 0x860 ] 0x0
xor ecx ecx
mov eax [ ebp - 0x898 ]
cmp [ eax ] 0x24
jne r-xdata
mov ecx [ eax - 0x4 ]
dec ecx
je r-xdata
dec ecx
je r-xdata
xor ecx ecx
mov esi edx
test eax eax
js r-xdata
cmp [ ebp - 0x864 ] 0x0
jne r-xdata
dec ecx
je r-xdata
cmp [ ecx ] 0x24
jne r-xdata
mov [ ebp - 0x860 ] edi
jmp r-xdata
push 0x640
lea eax [ ebp - 0x64c ]
push 0x0
push eax
call sub_417380
add esp 0xc
mov [ eax ] edx
add edx 0x8
jmp r-xdata
dec ecx
je r-xdata
cmp eax 0x64
jge r-xdata
inc esi
add eax 0x10
mov [ ebp - 0x854 ] edx
cmp esi [ ebp - 0x894 ]
jle r-xdata
dec ecx
je r-xdata
cmp eax [ ebp - 0x894 ]
jle r-xdata
dec ecx
dec ecx
jne r-xdata
mov [ ebp - 0x894 ] eax
sub_41edbd
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
push ebx
push esi
push edi
mov edi [ GetLocaleInfoW@IAT ]
xor esi esi
push esi
push esi
push [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
push [ ebp + 0xc ]
call edi
mov ecx eax
mov [ ebp - 0xc ] ecx
cmp ecx esi
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
xor ebx ebx
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_409b72
leave
retn
push [ ebp - 0xc ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call edi
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_40dbca
pop ecx
mov eax esi
push esi
push esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
push eax
call sub_40b534
pop ecx
cmp eax esi
je r-xdata
call sub_418880
mov ebx esp
cmp ebx esi
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push esi
jmp r-xdata
mov ebx eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ ebx ] 0xcccc
add ebx 0x8
jmp r-xdata
push 0xffffffff
push ebx
push esi
push [ ebp - 0x8 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp ebx esi
je r-xdata
sub_41ee97
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40a63a
push [ ebp + 0x18 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_41edbd
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41ef50
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ef70
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_409b72
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_41efb5
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_41efb5
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_41ef70
push [ fs : 0x0 ]
mov eax [ rwxdata ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_41f065
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_41f084
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_41f05c
push ebx
push ecx
mov ebx rwxdata
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_41f065
push ebx
push ecx
mov ebx rwxdata
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_41f087
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_41f150
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_41f17b
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
pop ebp
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_41f1b4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_40a63a
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_40de77
mov [ eax ] 0x16
call sub_41032e
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_40de77
mov [ eax ] 0x16
call sub_41032e
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub ebx esi
push edi
push esi
push ebx
call sub_41f17b
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub edi eax
mov eax edi
pop edi
cmp edi eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_40a6df
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_40a6df
add esp 0x10
inc esi
test edi edi
je r-xdata
sub_41f274
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rwxdata ] eax
jne r-xdata
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f1b4
add esp 0xc
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_40de77
mov [ eax ] 0x16
call sub_41032e
mov eax 0x7fffffff
pop ebp
retn
pop ebp
jmp sub_41f17b
sub_41f2bb
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
push ebx
push esi
push edi
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_40a63a
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
call sub_40de77
mov [ eax ] 0x16
call sub_41032e
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edi 0x7fffffff
cmp [ ebp + 0x10 ] edi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_40de77
mov [ eax ] 0x16
call sub_41032e
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub ebx esi
push [ ebp + 0x10 ]
push esi
push ebx
call sub_420790
add esp 0xc
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub edi eax
mov eax edi
jmp r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp edi eax
je r-xdata
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_40a6df
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_40a6df
add esp 0x10
inc esi
dec [ ebp + 0x10 ]
je r-xdata
sub_41f39d
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rwxdata ] eax
jne r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f2bb
add esp 0x10
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_40de77
mov [ eax ] 0x16
call sub_41032e
mov eax 0x7fffffff
pop ebp
retn
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop ebp
jmp sub_420790
sub_41f3f0
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
cmp [ ebp + 0x8 ] ebx
ja r-xdata
call sub_40de77
push 0x16
pop esi
mov [ eax ] esi
call sub_41032e
mov eax esi
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0x10 ] ebx
mov [ esi ] bl
setne cl
inc ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
call sub_40de77
push 0x16
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
add ecx 0xfffffffe
cmp ecx 0x22
ja r-xdata
call sub_40de77
push 0x22
jmp r-xdata
pop edi
mov ecx esi
cmp [ ebp + 0x10 ] ebx
je r-xdata
pop esi
mov [ eax ] esi
call sub_41032e
mov eax esi
jmp r-xdata
mov edi ecx
xor ebx ebx
inc ebx
mov [ esi ] 0x2d
lea ecx [ esi + 0x1 ]
neg eax
add dl 0x30
add dl 0x57
jmp r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
mov [ ecx ] dl
inc ecx
inc ebx
test eax eax
je r-xdata
mov [ ecx ] 0x0
dec ecx
mov [ esi ] 0x0
jmp r-xdata
xor edx edx
div [ ebp + 0xc ]
cmp edx 0x9
jbe r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
dec ecx
mov [ edi ] al
inc edi
cmp edi ecx
jb r-xdata
xor eax eax
sub_41f4aa
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jns r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_41f3f0
pop ebp
retn
sub_41f4d4
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
mov ecx [ ebp + 0xc ]
push eax
push [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
call sub_41f3f0
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jge r-xdata
inc eax
sub_41f515
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
xor ecx ecx
push esi
cmp edi ecx
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
call sub_40de77
push 0x16
xor eax eax
cmp [ ebp + 0x18 ] ecx
mov [ edi ] cl
setne al
inc eax
cmp [ ebp + 0x10 ] eax
ja r-xdata
pop esi
leave
retn 0x14
mov eax [ ebp + 0x14 ]
add eax 0xfffffffe
cmp eax 0x22
ja r-xdata
call sub_40de77
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov esi edi
cmp [ ebp + 0x18 ] ecx
je r-xdata
pop esi
mov [ eax ] esi
mov [ ebp + 0x18 ] esi
mov [ ebp + 0xc ] ecx
neg ebx
adc eax ecx
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] 0x1
neg eax
add cl 0x30
add cl 0x57
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jb r-xdata
test ebx ebx
je r-xdata
mov [ esi ] cl
mov ecx [ ebp - 0x4 ]
inc esi
inc ecx
mov [ ebp - 0x4 ] ecx
test eax eax
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x14 ]
push eax
push ebx
call sub_41cbe0
mov [ ebp - 0x8 ] ebx
mov ebx eax
mov eax edx
cmp ecx 0x9
jbe r-xdata
mov ecx [ ebp - 0x4 ]
pop ebx
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ esi ] 0x0
dec esi
mov [ edi ] 0x0
call sub_40de77
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov dl [ eax ]
mov cl [ esi ]
mov [ esi ] dl
dec esi
mov [ eax ] cl
inc eax
mov [ ebp + 0x18 ] eax
cmp eax esi
jb r-xdata
xor eax eax
call sub_41032e
mov eax esi
jmp r-xdata
sub_41f601
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x18 ] 0xa
jne r-xdata
push edi
mov edi [ ebp + 0x10 ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f515
pop edi
pop ebp
retn
cmp [ ebp + 0xc ] eax
jg r-xdata
jl r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] eax
jae r-xdata
sub_41f636
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f515
pop edi
pop ebp
retn
sub_41f655
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_40de77
mov [ eax ] 0x16
call sub_41032e
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_41c61c
push esi
mov edi eax
call sub_420951
push esi
call sub_41c858
push eax
call sub_42088d
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_40b65b
and [ esi + 0x1c ] 0x0
pop ecx
sub_41f6c2
push 0xc
push r--data
call sub_40cd00
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_40de77
mov [ eax ] 0x16
call sub_41032e
or eax 0xffffffff
jmp r-xdata
push esi
call sub_40f31c
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_41f655
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41f72e
jmp r-xdata
and [ esi + 0xc ] 0x0
call sub_40cd45
retn
mov eax [ ebp - 0x1c ]
sub_41f736
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_41f150
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] edi
mov [ ebp - 0x1ad0 ] edi
cmp [ ebp + 0x10 ] edi
jne r-xdata
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
sar eax 0x5
mov edi esi
push ebx
lea ebx [ eax * 4 + rwxdata ]
mov eax [ ebx ]
and edi 0x1f
shl edi 0x6
mov cl [ eax + edi + 0x24 ]
add cl cl
sar cl 0x1
mov [ ebp - 0x1adc ] ebx
mov [ ebp - 0x1ac1 ] cl
cmp cl 0x2
je r-xdata
call sub_40de8a
mov [ eax ] edi
call sub_40de77
mov [ eax ] 0x16
call sub_41032e
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_409b72
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp cl 0x1
jne r-xdata
test [ eax + edi + 0x4 ] 0x20
je r-xdata
call sub_40de8a
and [ eax ] 0x0
call sub_40de77
mov [ eax ] 0x16
call sub_41032e
jmp r-xdata
push esi
call sub_41c802
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_41ffe0
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ ebx ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop ebx
push ecx
lea ecx [ ebp - 0x1ad8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax + edi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac1 ] 0x0
mov [ ebp - 0x1abc ] ecx
jne r-xdata
call sub_40c97d
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae0 ]
sete cl
push eax
mov eax [ ebx ]
push [ edi + eax ]
mov esi ecx
call [ GetConsoleMode@IAT ]
xor ecx ecx
cmp eax ecx
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
mov eax [ ebp - 0x1ad8 ]
and [ ebp - 0x1abc ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
cmp [ ebp - 0x1ac1 ] 0x2
jne r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x80
je r-xdata
cmp esi ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1abc ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
mov ecx ebx
xor esi esi
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae0 ] eax
xor eax eax
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
cmp [ ebp - 0x1ac1 ] cl
je r-xdata
push 0x5
pop esi
cmp [ ebp - 0x1abc ] esi
jne r-xdata
mov ecx [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
and [ ebp - 0x1ac0 ] 0x0
mov ecx ebx
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x1ab8 ]
pop esi
call sub_40de77
mov [ eax ] 0x1c
call sub_40de8a
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov dl [ ebx ]
inc ebx
inc ecx
mov [ ebp - 0x1ae0 ] ebx
cmp dl 0xa
jne r-xdata
mov [ ebp - 0x1ac0 ] eax
push [ ebp - 0x1abc ]
call sub_40de9d
pop ecx
jmp r-xdata
call sub_40de77
mov [ eax ] 0x9
call sub_40de8a
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1ad4 ]
movzx edx [ edx ]
add [ ebp - 0x1ad4 ] esi
add ecx esi
cmp edx 0xa
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
movzx edx [ ebx ]
add ebx esi
add ecx esi
mov [ ebp - 0x1ae0 ] ebx
cmp edx 0xa
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
mov [ eax ] dl
inc eax
inc esi
cmp esi 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc esi
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1adc ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae4 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] esi
push 0xd
pop ebx
mov [ eax ] bx
mov ebx [ ebp - 0x1ae0 ]
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
movzx esi [ ebx ]
xor ecx ecx
cmp esi 0xa
sete cl
add ebx 0x2
add [ ebp - 0x1ac0 ] 0x2
mov [ ebp - 0x1abc ] esi
mov [ ebp - 0x1ae4 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_40df84
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
add esi [ ebp - 0x1ad8 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
push [ ebp - 0x1abc ]
call sub_420982
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1abc ]
push eax
call sub_420b20
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1ad4 ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1ac0 ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1abc ]
push ecx
push eax
push [ ebp - 0x1ae0 ]
inc ebx
inc [ ebp - 0x1ac0 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1abc ]
push ebx
push eax
call sub_420b20
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1abc ] eax
call sub_420982
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
mov al [ ebp - 0x1ac1 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1ac0 ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1ac0 ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
mov [ ebp - 0x1ac8 ] eax
cmp [ ebp - 0x1ad4 ] esi
jl r-xdata
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ad4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_41fe33
push 0x10
push r--data
call sub_40cd00
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_40de8a
and [ eax ] 0x0
call sub_40de77
mov [ eax ] 0x9
call sub_40de8a
and [ eax ] 0x0
call sub_40de77
mov [ eax ] 0x9
call sub_41032e
jmp r-xdata
cmp ebx [ rwxdata ]
jb r-xdata
call sub_40cd45
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rwxdata ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_420caa
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_40de77
mov [ eax ] 0x9
call sub_40de8a
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_41f736
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41feff
mov eax [ ebp - 0x1c ]
sub_41ff07
push 0x10
push r--data
call sub_40cd00
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_40de77
mov [ eax ] 0x9
call sub_40de77
mov [ eax ] 0x9
call sub_41032e
jmp r-xdata
cmp ebx [ rwxdata ]
jb r-xdata
call sub_40cd45
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rwxdata ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ esi + eax + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_420caa
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_40de77
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_420c41
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
and [ ebp - 0x1c ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41ffd8
mov eax [ ebp - 0x1c ]
call sub_40de8a
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_41ffe0
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_420c41
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_40de77
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rwxdata ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_40de9d
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_420065
push 0x14
push r--data
call sub_40cd00
or ebx 0xffffffff
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_40de8a
and [ eax ] 0x0
call sub_40de77
mov [ eax ] 0x9
call sub_40de8a
and [ eax ] 0x0
call sub_40de77
mov [ eax ] 0x9
call sub_41032e
jmp r-xdata
cmp eax [ rwxdata ]
jb r-xdata
call sub_40cd45
retn
mov eax ebx
mov edx ebx
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rwxdata ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_420caa
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_40de77
mov [ eax ] 0x9
call sub_40de8a
and [ eax ] 0x0
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41ffe0
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_420145
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_42014f
mov edi edi
push ebp
mov ebp esp
inc [ rwxdata ]
push 0x1000
call sub_40cff5
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_420198
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
call sub_40a63a
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
test eax eax
je r-xdata
test esi esi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_40de77
mov [ eax ] 0x16
call sub_41032e
cmp [ ebp - 0x10 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
push ebx
mov bl [ esi ]
push edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x1c ]
push eax
movzx eax bl
push 0x8
push eax
call sub_40e203
mov ecx [ ebp - 0x1c ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
js r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
mov esi [ ecx + 0xc8 ]
mov [ ebp - 0x8 ] edx
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
and ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
lea ecx [ ebx - 0x61 ]
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
mov bl [ edi + 0x1 ]
add edi 0x2
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_40de77
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
imul edx [ ebp + 0x14 ]
add edx ecx
mov [ ebp - 0x4 ] edx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
mov edx ecx
and edx 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x8 ]
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
pop edi
pop ebx
sub_4203c3
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rwxdata ] eax
jne r-xdata
push eax
push rwxdata
jmp r-xdata
call sub_420198
add esp 0x14
pop ebp
retn
sub_42040b
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push 0x0
push rwxdata
jmp r-xdata
call sub_420198
add esp 0x14
pop ebp
retn
sub_420454
mov edi edi
push ebp
mov ebp esp
sub esp 0x3c
push ebx
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x3c ]
call sub_40a63a
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
xor ebx ebx
cmp ecx ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov [ ecx ] eax
cmp [ ebp + 0x14 ] ebx
je r-xdata
call sub_40de77
mov [ eax ] 0x16
call sub_41032e
cmp [ ebp - 0x30 ] bl
je r-xdata
mov cl [ eax ]
push esi
mov esi [ ebp - 0x3c ]
push edi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x1 ] cl
lea edi [ eax + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x34 ]
and [ eax + 0x70 ] 0xfffffffd
movzx eax [ ebp - 0x1 ]
mov ecx [ esi + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x3c ]
push eax
movzx eax [ ebp - 0x1 ]
push 0x8
push eax
call sub_40e203
mov esi [ ebp - 0x3c ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x1 ] 0x2d
mov [ ebp - 0x8 ] edi
jne r-xdata
mov al [ edi ]
mov [ ebp - 0x1 ] al
inc edi
jmp r-xdata
cmp eax ebx
je r-xdata
cmp [ ebp - 0x1 ] 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ esi + 0xac ] 0x1
jle r-xdata
push 0x10
pop ecx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov al [ edi ]
inc edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x1 ] al
cmp [ ebp + 0x14 ] ecx
jne r-xdata
cmp [ ebp - 0x1 ] 0x30
je r-xdata
mov eax [ ebp + 0x14 ]
cdq
push edx
mov edi eax
push edi
push 0xffffffff
push 0xffffffff
mov [ ebp - 0x28 ] edx
call sub_41cbe0
mov [ ebp - 0x20 ] ebx
mov ebx [ esi + 0xc8 ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0x1 ] 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
and eax 0x103
je r-xdata
movsx esi cl
sub esi 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] ecx
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec [ ebp - 0x8 ]
test al 0x8
jne r-xdata
lea eax [ ecx - 0x61 ]
cmp al 0x19
movsx eax cl
ja r-xdata
cmp esi [ ebp + 0x14 ]
jae r-xdata
mov al [ edi + 0x1 ]
add edi 0x2
mov [ ebp - 0x1 ] al
mov [ ebp - 0x8 ] edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
mov ebx 0x80000000
test al 0x4
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] eax
je r-xdata
lea esi [ eax - 0x37 ]
sub eax 0x20
mov ecx [ ebp - 0x10 ]
or [ ebp + 0x18 ] 0x8
cmp ecx [ ebp - 0x18 ]
jb r-xdata
call sub_40de77
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
push ecx
push [ ebp - 0x14 ]
push [ ebp - 0x28 ]
push edi
call sub_421020
xor ecx ecx
add eax esi
adc edx ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
ja r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
or [ ebp - 0x14 ] 0xffffffff
or [ ebp - 0x10 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
pop edi
pop esi
test eax eax
je r-xdata
and eax 0x2
je r-xdata
mov cl [ ebp - 0x1 ]
movzx eax cl
movzx eax [ ebx + eax * 2 ]
mov edx eax
and edx 0x4
je r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] eax
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x1c ]
jb r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov [ ebp - 0x10 ] esi
and [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] ebx
jmp r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x10 ] ebx
ja r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x18 ]
jne r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x10 ] esi
jb r-xdata
jb r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax ]
inc [ ebp - 0x8 ]
mov [ ebp - 0x1 ] al
jmp r-xdata
xor eax eax
cmp eax [ ebp - 0x20 ]
jb r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x34 ]
and [ eax + 0x70 ] 0xfffffffd
ja r-xdata
cmp [ ebp - 0x14 ] 0x0
ja r-xdata
ja r-xdata
cmp [ ebp - 0x14 ] 0xffffffff
jbe r-xdata
cmp esi [ ebp - 0x24 ]
jbe r-xdata
sub_4206f1
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rwxdata ] eax
jne r-xdata
push eax
push rwxdata
jmp r-xdata
call sub_420454
add esp 0x14
pop ebp
retn
sub_420739
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push 0x0
push rwxdata
jmp r-xdata
call sub_420454
add esp 0x14
pop ebp
retn
sub_420790
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_4207f1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_420c41
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rwxdata ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_40de9d
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_420c41
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_420c41
push 0x1
mov edi eax
call sub_420c41
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_420bbb
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rwxdata ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_42088d
push 0x10
push r--data
call sub_40cd00
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_40de8a
and [ eax ] 0x0
call sub_40de77
mov [ eax ] 0x9
call sub_40de8a
and [ eax ] 0x0
call sub_40de77
mov [ eax ] 0x9
call sub_41032e
jmp r-xdata
cmp ebx [ rwxdata ]
jb r-xdata
call sub_40cd45
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rwxdata ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_420caa
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_40de77
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_4207f1
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_420949
mov eax [ ebp - 0x1c ]
sub_420951
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_40b65b
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_420982
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rwxdata ] 0xfffffffe
jne r-xdata
mov eax [ rwxdata ]
cmp eax 0xffffffff
jne r-xdata
call sub_421054
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
leave
retn
mov ax [ ebp + 0x8 ]
leave
retn
sub_4209c4
push 0xc
push r--data
call sub_40cd00
push 0x3
call sub_410848
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_420982
pop ecx
movzx eax ax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_420a01
mov ax [ ebp - 0x1c ]
call sub_40cd45
retn
sub_420a0a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_40a63a
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_40df4c
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_40de77
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_420b3a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
js r-xdata
call sub_40de77
mov [ eax ] 0x9
call sub_40de8a
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rwxdata ]
jae r-xdata
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rwxdata ]
mov ecx [ edi ]
shl esi 0x6
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rwxdata ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_420bbb
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
jl r-xdata
call sub_40de77
mov [ eax ] 0x9
call sub_40de8a
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rwxdata ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
and esi 0x1f
lea edi [ eax * 4 + rwxdata ]
mov eax [ edi ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x1
je r-xdata
cmp [ eax + esi ] 0xffffffff
je r-xdata
cmp [ rwxdata ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_420c41
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_40de8a
and [ eax ] 0x0
call sub_40de77
mov [ eax ] 0x9
call sub_40de8a
and [ eax ] 0x0
call sub_40de77
mov [ eax ] 0x9
call sub_41032e
jmp r-xdata
cmp eax [ rwxdata ]
jb r-xdata
or eax 0xffffffff
pop ebp
retn
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
and eax 0x1f
shl eax 0x6
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_420caa
push 0xc
push r--data
call sub_40cd00
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rwxdata ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_410848
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_40cd45
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rwxdata ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_420d40
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_420d49
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_420d70
push 0x18
push r--data
call sub_40cd00
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_410786
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_410848
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_420f00
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rwxdata ]
test esi esi
je r-xdata
call sub_40cd45
retn
push 0x40
push 0x20
call sub_40d03a
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rwxdata ]
add eax 0x800
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rwxdata ]
mov [ ecx ] eax
add [ rwxdata ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rwxdata ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_420caa
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x40
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x40
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x800
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_410848
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_420e42
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
sub esi [ edi * 4 + rwxdata ]
sar esi 0x6
mov eax edi
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_420f09
push 0xc
push r--data
call sub_40cd00
xor edi edi
mov [ ebp - 0x1c ] edi
xor bl bl
test [ ebp + 0xc ] 0x8
je r-xdata
test [ ebp + 0xc ] 0x4000
je r-xdata
add bl 0x20
test [ ebp + 0xc ] 0x80
je r-xdata
or bl 0x80
push [ ebp + 0x8 ]
call [ GetFileType@IAT ]
cmp eax edi
jne r-xdata
or bl 0x10
cmp eax 0x2
jne r-xdata
call [ GetLastError@IAT ]
push eax
call sub_40de9d
pop ecx
cmp eax 0x3
jne r-xdata
or bl 0x40
jmp r-xdata
call sub_420d70
mov esi eax
mov [ ebp + 0xc ] esi
cmp esi 0xffffffff
jne r-xdata
or bl 0x8
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
push esi
call sub_420b3a
pop ecx
pop ecx
or bl 0x1
mov eax esi
sar eax 0x5
lea ecx [ eax * 4 + rwxdata ]
mov eax esi
and eax 0x1f
shl eax 0x6
mov edx [ ecx ]
mov [ edx + eax + 0x4 ] bl
mov edx [ ecx ]
lea edx [ edx + eax + 0x24 ]
and [ edx ] 0x80
mov ecx [ ecx ]
lea eax [ ecx + eax + 0x24 ]
and [ eax ] 0x7f
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] 0xfffffffe
call sub_420ff7
cmp [ ebp - 0x1c ] edi
je r-xdata
call sub_40de77
mov [ eax ] 0x18
call sub_40de8a
mov [ eax ] edi
jmp r-xdata
or eax 0xffffffff
mov eax esi
jmp r-xdata
call sub_40cd45
retn
sub_420ff7
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_420d49
pop ecx
retn
mov eax esi
sar eax 0x5
mov ecx esi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rwxdata ]
lea eax [ eax + ecx + 0x4 ]
and [ eax ] 0xfe
sub_421020
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_42108a
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_409c1a
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4210ad
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_409c1a
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4210d6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_409c1a
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4210ff
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_409c1a
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_421128
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_409c1a
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_42114b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_409c1a
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_421174
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_409c1a
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_40bc3c
int3
sub_4211c1
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_409c1a
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_40bc3c
int3
sub_42120e
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_409c1a
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_40bc3c
int3
sub_42125b
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_409c1a
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_40bc3c
int3
sub_4212a8
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_409c1a
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_40bc3c
int3
sub_4212d8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_409c76
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a181
pop ecx
sub_4212f9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_409c76
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a181
pop ecx
sub_42131a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_409c76
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a181
pop ecx
sub_42133b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_409c76
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a181
pop ecx
sub_42135c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_409c76
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a181
pop ecx
sub_42137d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_409c76
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a181
pop ecx
sub_421630
cmp [ rwxdata ] 0x0
je r-xdata
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_4216e0
cmp [ rwxdata ] 0x0
je r-xdata
lea edx [ esp + 0x4 ]
call sub_422ec5
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_422858
sub_421720
cmp [ rwxdata ] 0x0
je r-xdata
sub esp 0xc
fst [ esp ]
call sub_422f08
call sub_421778
add esp 0xc
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_422840
sub_421778
push edx
fwait
fnstcw [ esp ]
je r-xdata
test eax 0xfffff
jne r-xdata
mov eax [ esp + 0xc ]
cmp [ esp ] 0x27f
je r-xdata
call sub_422eac
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
test eax 0x7ff00000
je r-xdata
fldcw [ r--data ]
cmp [ rwxdata ] 0x0
jne r-xdata
and eax 0x80000000
je r-xdata
test eax 0xfffff
jne r-xdata
test eax 0x80000000
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
lea ecx [ rwxdata ]
mov edx 0x1a
call sub_423027
pop edx
retn
cmp [ rwxdata ] 0x0
jne r-xdata
fstp st0
fld [ r--data ]
mov eax 0x1
jmp r-xdata
test eax 0x80000000
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
fldln2
fxch st1
fyl2x
pop edx
retn
fldcw [ esp ]
lea ecx [ rwxdata ]
mov edx 0x1a
jmp r-xdata
jmp r-xdata
fstp st0
fld [ r--data ]
mov eax 0x2
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_423027
pop edx
retn
sub_421830
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_421877
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_4218cb
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4241a5
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_421901
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4241a5
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_421937
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4241a5
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_42198c
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_409b72
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_4241a5
add esp 0x20
pop esi
pop ebp
retn
sub_4219bf
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_421a96
mov eax [ rwxdata ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_40c97d
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_421a96
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_409b72
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_4241a5
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_4219bf
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_421877
pop ebx
leave
retn
sub_421b35
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_4108c7
call sub_4108c7
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_421ba8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_40c97d
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_40c97d
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_421bd4
mov edi edi
push ebp
mov ebp esp
call sub_40c97d
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_421bfb
mov edi edi
push ebp
mov ebp esp
push esi
call sub_40c97d
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_40c97d
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_40c97d
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_4108c7
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_421c4d
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rwxdata ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_42198c
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_424290
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_421cb8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40a63a
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_40a7f4
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_40ab57
test eax eax
movsx eax [ esi ]
push eax
call sub_40a7f4
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
add esi 0x2
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_421d2c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40a63a
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_421dae
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_421dca
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_42448c
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_42430d
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_421e26
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_40b5d0
inc eax
push eax
push esi
add esi edi
push esi
call sub_409e20
add esp 0x10
sub_421e6b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_40a63a
xor ecx ecx
cmp ebx ecx
jne r-xdata
cmp [ ebp + 0x8 ] ecx
jbe r-xdata
call sub_40de77
push 0x16
cmp [ ebp + 0xc ] ecx
jle r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
push edi
cmp [ ebp + 0x18 ] cl
je r-xdata
call sub_40de77
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] ecx
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_421e26
pop esi
mov [ eax ] esi
call sub_41032e
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
mov cl [ esi + 0x1 ]
mov eax [ ebp - 0x10 ]
mov [ esi ] cl
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
inc esi
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4102c2
int3
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] eax
je r-xdata
push r--data
push ebx
push esi
call sub_40b496
add esp 0xc
test eax eax
jne r-xdata
mov eax [ edi + 0xc ]
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rwxdata ] 0x1
pop edi
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi + 0x1 ] 0x2d
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_409e20
add esp 0xc
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi + 0x2 ] al
mov eax edx
pop esi
pop ebx
leave
retn
add [ esi + 0x4 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi + 0x3 ] al
mov eax edx
sub_421fcc
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop ebx
push ebx
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_4246e9
add esp 0x14
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_40de77
mov [ eax ] ebx
call sub_41032e
mov eax ebx
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_409b72
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
test esi esi
setg cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x0
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_421e6b
add esp 0x18
mov [ edi ] 0x0
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
test esi esi
setg cl
add eax edi
add ecx eax
push ecx
call sub_424583
add esp 0x10
test eax eax
je r-xdata
sub_422093
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421fcc
add esp 0x18
pop ebp
retn
sub_4220b3
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_40a63a
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_40de77
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_40de77
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
mov [ eax ] esi
call sub_41032e
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
neg ebx
sbb ebx ebx
mov [ esi ] 0x30
mov [ esi + 0x1 ] al
mov ecx [ edi + 0x4 ]
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi + 0x2 ] 0x31
add esi 0x3
mov [ esi + 0x2 ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
add esi 0x3
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_422093
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
mov [ esi ] 0x30
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi + 0x1 ] al
push 0x65
add esi 0x2
push esi
call sub_4242e0
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_424860
add ax 0x30
movzx eax ax
cmp eax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_424860
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_417380
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
call sub_424860
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi + 0x1 ] 0x2d
add esi 0x2
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi + 0x1 ] 0x2b
add esi 0x2
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_424780
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
mov edi esi
mov [ esi ] 0x30
cmp edx ebx
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_424780
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_424780
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_422429
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4220b3
add esp 0x18
pop ebp
retn
sub_422449
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov edi eax
mov esi [ edi + 0x4 ]
mov ebx ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_40a63a
test ebx ebx
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_40de77
push 0x16
pop esi
mov [ eax ] esi
call sub_41032e
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi + 0x4 ]
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ edi ] 0x2d
sete al
add eax esi
mov [ eax + ebx ] 0x30
add esi eax
push esi
lea ebx [ esi + 0x1 ]
call sub_40b5d0
inc eax
push eax
push esi
push ebx
call sub_409e20
mov [ esi ] 0x30
add esp 0x10
mov esi ebx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push esi
lea ebx [ esi + 0x1 ]
call sub_40b5d0
inc eax
push eax
push esi
push ebx
call sub_409e20
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov edi [ edi + 0x4 ]
add esp 0x10
test edi edi
jns r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg edi
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] edi
cmp [ ebp + 0xc ] edi
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax ebx
call sub_421e26
push edi
push 0x30
push ebx
call sub_417380
add esp 0xc
sub_42254c
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_4246e9
add esp 0x14
test edi edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
call sub_40de77
mov [ eax ] esi
call sub_41032e
mov eax esi
jmp r-xdata
or eax 0xffffffff
cmp ebx eax
je r-xdata
call sub_40de77
mov [ eax ] esi
call sub_41032e
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_409b72
leave
retn
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_424583
add esp 0x10
test eax eax
je r-xdata
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
mov eax ebx
sete cl
sub eax ecx
pop ebx
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push 0x0
push esi
push ebx
mov ecx edi
call sub_422449
add esp 0x10
mov [ edi ] 0x0
jmp r-xdata
sub_42262a
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_4246e9
add esp 0x14
test esi esi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
call sub_40de77
mov [ eax ] edi
call sub_41032e
mov eax edi
jmp r-xdata
push ebx
mov ebx [ ebp - 0x28 ]
xor eax eax
dec ebx
cmp [ ebp - 0x2c ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_409b72
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x28 ]
dec eax
cmp ebx eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] 0x0
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_424583
add esp 0x10
test eax eax
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_421e6b
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
pop ebx
test cl cl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_422449
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] al
sub_422717
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42262a
add esp 0x18
pop ebp
retn
sub_422737
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421fcc
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42254c
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4220b3
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42262a
jmp r-xdata
sub_4227bf
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_422737
add esp 0x1c
pop ebp
retn
sub_4227e2
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_42487f
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_4102c2
sub_42285e
mov edx 0x0
movlpd xmm0 [ esp + 0x4 ]
movapd xmm1 [ r--data ]
cmpsd xmm1 xmm0 0x0
pextrw eax xmm1 0x0
cmp eax 0x0
ja r-xdata
sub ecx 0x3fe
add ecx edx
cvtsi2sd xmm6 ecx
unpcklpd xmm6 xmm6
shl ecx 0xa
add eax ecx
mov ecx 0x10
mov edx 0x0
cmp eax 0x0
cmove edx ecx
movapd xmm1 [ r--data ]
movapd xmm3 xmm0
movapd xmm2 [ r--data ]
mulpd xmm1 xmm0
mulpd xmm3 xmm3
addpd xmm1 xmm2
movapd xmm2 [ r--data ]
mulsd xmm3 xmm3
movapd xmm5 [ r--data ]
mulpd xmm6 xmm5
movapd xmm5 [ edx + r--data ]
andpd xmm4 xmm5
addpd xmm7 xmm6
addpd xmm7 xmm4
mulpd xmm1 xmm0
mulsd xmm3 xmm0
addpd xmm1 xmm2
movapd xmm6 xmm7
unpckhpd xmm6 xmm6
mulpd xmm1 xmm3
sub esp 0x10
movapd xmm0 xmm1
unpckhpd xmm1 xmm1
addsd xmm0 xmm1
addsd xmm0 xmm6
addsd xmm0 xmm7
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
movlpd xmm2 [ r--data ]
divsd xmm2 xmm0
movlpd xmm1 [ r--data ]
mov edx 0x2
jmp r-xdata
cmp ecx 0xffffffff
je r-xdata
sub esp 0x1c
movlpd [ esp + 0x10 ] xmm1
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x10
mov [ esp + 0x8 ] edx
add edx 0x10
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_42490c
fld [ esp + 0x10 ]
add esp 0x1c
retn
movlpd xmm1 [ r--data ]
mulsd xmm0 xmm1
mov edx 0xffffffcc
jmp r-xdata
cmp ecx 0x7fe
ja r-xdata
movapd xmm5 xmm0
unpcklpd xmm0 xmm0
psrlq xmm5 0x34
pextrw ecx xmm5 0x0
movapd xmm1 [ r--data ]
movapd xmm3 [ r--data ]
movapd xmm4 [ r--data ]
movapd xmm6 [ r--data ]
andpd xmm0 xmm1
orpd xmm0 xmm3
addpd xmm4 xmm0
pextrw eax xmm4 0x0
and eax 0x7f0
movapd xmm4 [ eax + r--data ]
movapd xmm7 [ eax + r--data ]
andpd xmm6 xmm0
subpd xmm0 xmm6
mulpd xmm6 xmm4
subpd xmm6 xmm3
addsd xmm7 xmm6
mulpd xmm0 xmm4
movapd xmm4 xmm0
addpd xmm0 xmm6
and ecx 0xfff
sub ecx 0x1
cmp ecx 0x7fd
ja r-xdata
add ecx 0x1
and ecx 0x7ff
cmp ecx 0x7ff
jae r-xdata
movlpd xmm0 [ esp + 0x4 ]
movapd xmm1 [ r--data ]
movapd xmm2 [ r--data ]
andpd xmm0 xmm1
orpd xmm0 xmm2
cmpsd xmm2 xmm0 0x0
pextrw eax xmm2 0x0
cmp eax 0x0
je r-xdata
movlpd xmm2 [ esp + 0x4 ]
movlpd xmm0 [ esp + 0x4 ]
movd eax xmm2
psrlq xmm2 0x20
movd ecx xmm2
and ecx 0xfffff
or eax ecx
cmp eax 0x0
je r-xdata
xorpd xmm1 xmm1
divsd xmm1 xmm1
mov edx 0x3
mov edx 0x3e8
jmp r-xdata
fld [ r--data ]
retn
mov edx 0x3e8
jmp r-xdata
sub_422ab0
mov [ ebp - 0x90 ] 0xfe
or ch ch
jne r-xdata
call sub_422c41
or eax eax
je r-xdata
fxch st1
jmp sub_422e56
xor ch ch
cmp eax 0x2
je r-xdata
call sub_422bfe
fld1
faddp st1
test [ ebp - 0x9f ] 0x1
je r-xdata
fxch st1
fabs
jmp r-xdata
not ch
test dl 0x40
jne r-xdata
fld1
fdivrp st1
fyl2x
jmp r-xdata
or ch ch
je r-xdata
fscale
jmp sub_422da8
fchs
sub_422ac1
mov [ ebp - 0x90 ] 0xfe
xor ch ch
fldl2e
fmulp st1
call sub_422bfe
fld1
faddp st1
test [ ebp - 0x9f ] 0x1
je r-xdata
test dl 0x40
jne r-xdata
fld1
fdivrp st1
or ch ch
je r-xdata
fscale
jmp sub_422da8
fchs
sub_422b6d
call sub_422c41
fstp st0
fstp st0
or cl cl
jne r-xdata
mov [ ebp - 0x90 ] 0x2
fld [ r--data ]
cmp eax 0x1
jne r-xdata
fldz
cmp eax 0x1
jne r-xdata
retn
or ch ch
je r-xdata
or ch ch
je r-xdata
fchs
jmp r-xdata
fchs
sub_422bfe
fld st0
fabs
fld [ r--data ]
fcompp
fwait
fnstsw [ ebp - 0xa0 ]
fwait
test [ ebp - 0x9f ] 0x41
jne r-xdata
pop eax
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fwait
test [ ebp - 0x9f ] 0x1
jne r-xdata
fld st0
frndint
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fwait
mov dl [ ebp - 0x9f ]
fxch st1
fsub st1
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fabs
f2xm1
retn
mov [ ebp - 0x90 ] 0x4
jmp sub_422db6
fstp st0
fld [ r--data ]
or ch ch
je r-xdata
retn
fchs
sub_422c41
fld st0
frndint
fcomp st1
fwait
fnstsw ax
sahf
jne r-xdata
mov eax 0x0
jmp r-xdata
fld st0
fmul [ r--data ]
fld st0
frndint
fcompp
fwait
fnstsw ax
sahf
je r-xdata
retn
mov eax 0x2
jmp r-xdata
mov eax 0x1
sub_422c75
push esi
sub esp 0x74
mov esi esp
push esi
sub esp 0x8
fstp [ esp ]
sub esp 0x8
fstp [ esp ]
fwait
fnsave [ esi + 0x8 ]
call sub_424c42
add esp 0x14
frstor [ esi + 0x8 ]
fld [ esi ]
add esp 0x74
pop esi
test eax eax
je r-xdata
retn
jmp sub_422e69
sub_422cb0
cmp [ edx + 0xe ] 0x5
jne r-xdata
mov bx 0x133f
mov bx [ ebp - 0xa4 ]
or bh 0x2
and bh 0xfe
mov bl 0x3f
jmp r-xdata
mov [ ebp - 0xa2 ] bx
fldcw [ ebp - 0xa2 ]
mov ebx r--data
fxam
mov [ ebp - 0x94 ] edx
fwait
fnstsw [ ebp - 0xa0 ]
mov [ ebp - 0x90 ] 0x0
fwait
mov cl [ ebp - 0x9f ]
shl cl 0x1
sar cl 0x1
rol cl 0x1
mov al cl
and al 0xf
xlat
movsx eax al
and ecx 0x404
mov ebx edx
add ebx eax
add ebx 0x10
jmp [ ebx ]
sub_422e17
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x1
fxch st1
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x7
jmp r-xdata
faddp st1
retn
sub_422ec5
mov eax [ edx + 0x4 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ edx + 0x4 ]
sub esp 0xa
or eax 0x7fff0000
mov [ esp + 0x6 ] eax
mov eax [ edx + 0x4 ]
mov ecx [ edx ]
shld eax ecx 0xb
shl ecx 0xb
mov [ esp + 0x4 ] eax
mov [ esp ] ecx
fld [ esp ]
add esp 0xa
test eax 0x0
mov eax [ edx + 0x4 ]
retn
fld [ edx ]
retn
sub_422f55
sub esp 0x8
fst [ esp ]
mov eax [ esp + 0x4 ]
add esp 0x8
and eax 0x7ff00000
jmp r-xdata
cmp eax 0x7ff00000
je r-xdata
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
mov eax 0x3
jbe r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
cmp edx 0x1d
je r-xdata
fmul [ r--data ]
jmp r-xdata
pop edx
retn
and ax 0x20
jne r-xdata
call sub_423010
pop edx
retn
call sub_423027
pop edx
retn
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
sub_423010
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_424d6d
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_423027
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_424d6d
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_423063
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_409c1a
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_42308c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_409c76
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a181
pop ecx
sub_4230b3
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_40bb30
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_423112
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434352
je r-xdata
call sub_40c97d
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_40c97d
dec [ eax + 0x90 ]
cmp eax 0xe06d7363
jne r-xdata
call sub_40c97d
and [ eax + 0x90 ] 0x0
jmp sub_41087b
sub_423161
push 0x10
push r--data
call sub_40cd00
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_423223
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_40c97d
inc [ eax + 0x90 ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_40cd45
retn
call sub_4108c7
call sub_4108c7
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
mov ecx [ edi + 0x8 ]
mov esi [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + eax * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax * 8 + 0x4 ]
call sub_424290
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_42323d
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_40c97d
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_423282
push 0x8
push r--data
call sub_40cd00
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_40cd45
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_421862
mov [ ebp - 0x4 ] 0xfffffffe
sub_4232d7
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_423311
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
test eax eax
je r-xdata
or [ edi + 0x8 ] 0xffffffff
or [ edi + 0xc ] 0xffffffff
mov esi [ eax ]
test esi esi
je r-xdata
xor eax eax
inc eax
pop ebp
retn
call sub_40c97d
and [ eax + 0x90 ] 0x0
cmp [ esi ] 0xe06d7363
jne r-xdata
push [ esi + 0x18 ]
push edi
call sub_421ba8
pop ecx
pop ecx
call sub_40c97d
mov eax [ eax + 0x88 ]
mov [ edi + 0x8 ] eax
call sub_40c97d
mov eax [ eax + 0x8c ]
mov [ edi + 0xc ] eax
call sub_40c97d
mov [ eax + 0x88 ] esi
jmp r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_40c97d
dec [ eax + 0x90 ]
call sub_40c97d
cmp [ eax + 0x90 ] 0x0
pop edi
pop esi
jge r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
call sub_40c97d
mov esi [ eax + 0x88 ]
cmp eax 0x19930522
jne r-xdata
sub_4233c7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_40c97d
inc [ eax + 0x90 ]
xor eax eax
inc eax
pop ebp
retn
cmp ecx 0x19930522
jne r-xdata
sub_423418
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
push ebx
push edi
push esi
call sub_421bfb
cmp [ ebp + 0xc ] 0x0
pop ecx
mov edi 0xe06d7363
mov ebx 0x19930520
jne r-xdata
call sub_40c97d
mov eax [ eax + 0x88 ]
cmp [ eax ] edi
jne r-xdata
call sub_40c97d
mov eax [ eax + 0x88 ]
cmp [ eax ] edi
jne r-xdata
call sub_40c97d
mov ecx [ esi + 0x8 ]
mov [ eax + 0x88 ] ecx
call sub_40c97d
mov ecx [ esi + 0xc ]
pop edi
mov [ eax + 0x8c ] ecx
pop ebx
call sub_40c97d
mov eax [ eax + 0x88 ]
cmp [ eax + 0x10 ] 0x3
jne r-xdata
call sub_40c97d
mov eax [ eax + 0x88 ]
cmp [ eax + 0x10 ] 0x3
jne r-xdata
call sub_40c97d
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] ebx
je r-xdata
call sub_40c97d
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
call sub_40c97d
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_40c97d
mov eax [ eax + 0x88 ]
push [ eax + 0x18 ]
call sub_421bd4
pop ecx
test eax eax
je r-xdata
call sub_40c97d
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_40c97d
dec [ eax + 0x90 ]
call sub_40c97d
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
push 0x1
call sub_40c97d
push [ eax + 0x88 ]
call sub_423282
pop ecx
pop ecx
call sub_40c97d
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
sub_4235f1
push 0x8
push r--data
call sub_40cd00
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40cd45
retn
sub_42362c
mov edi edi
push ebp
mov ebp esp
xor eax eax
sub esp 0xc
cmp edi eax
jne r-xdata
mov [ ebp - 0x1 ] al
mov [ ebp - 0xc ] eax
cmp [ edi ] eax
jle r-xdata
call sub_4108c7
mov al [ ebp - 0x1 ]
leave
retn
push ebx
mov [ ebp - 0x8 ] eax
push esi
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0x8 ]
push eax
call sub_4230b3
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
inc [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] 0x10
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
jmp r-xdata
pop esi
pop ebx
sub_4236ed
push ebx
push edi
xor ebx ebx
xor edi edi
cmp [ esi ] ebx
jle r-xdata
xor al al
mov eax [ esi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rwxdata
call sub_40a1ef
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
inc edi
add ebx 0x10
cmp edi [ esi ]
jl r-xdata
pop edi
pop ebx
retn
sub_42371d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
jne r-xdata
mov esi [ esi ]
test esi esi
jne r-xdata
call sub_4108c7
cmp [ esi ] 0xe06d7363
jne r-xdata
call sub_4108c7
call sub_4108c7
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
mov edi [ eax ]
lea esi [ eax + 0x4 ]
jmp r-xdata
cmp eax 0x19930521
je r-xdata
test edi edi
jg r-xdata
cmp eax 0x19930522
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
add eax 0x8
push eax
call sub_40a254
push eax
call sub_40bb30
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
dec edi
add esi 0x4
pop edi
pop esi
pop ebp
retn
sub_4237a3
push 0x2c
push r--data
call sub_40cd00
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_421ba8
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_40c97d
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_40c97d
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_40c97d
mov [ eax + 0x88 ] esi
call sub_40c97d
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_421c4d
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_4238c9
mov eax [ ebp - 0x1c ]
call sub_40cd45
retn
sub_42383c
mov esp [ ebp - 0x18 ]
call sub_40c97d
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_423161
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_4238c9
mov eax [ ebp - 0x1c ]
call sub_40cd45
retn
imul eax eax 0x14
mov edx [ eax + ebx + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + ebx + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_4238c9
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_421bfb
pop ecx
call sub_40c97d
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_40c97d
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_421bd4
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_423282
pop ecx
pop ecx
sub_42393f
push 0xc
push r--data
call sub_40cd00
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_424fb6
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_424fb6
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_4108c7
push ebx
push esi
call sub_424fc8
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_424fb6
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_424fb6
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_424fc8
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_424fc8
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_424fc8
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_409e20
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_424fda
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_4232d7
pop ecx
pop ecx
push eax
push esi
call sub_409e20
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_40cd45
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_4232d7
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_423abe
push 0x8
push r--data
call sub_40cd00
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_4232d7
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_421869
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_42393f
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40cd45
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_4232d7
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_421870
jmp r-xdata
sub_423b50
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x10
test eax eax
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ eax ]
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
leave
retn
mov eax [ esi ]
cmp eax 0xe0434f4d
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
cmp eax 0xe06d7363
jne r-xdata
cmp eax 0xe0434352
je r-xdata
cmp [ esi ] 0xe06d7363
jne r-xdata
call sub_40c97d
inc [ eax + 0x90 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
test bl 0x40
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
call sub_40c97d
cmp [ eax + 0x88 ] 0x0
jne r-xdata
cmp eax 0x19930522
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
or ebx 0x80000000
mov [ ebp - 0xc ] edi
mov edi [ eax ]
mov [ ebp - 0x10 ] ebx
lea ebx [ eax + 0x4 ]
jmp r-xdata
call sub_40c97d
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
test edi edi
jg r-xdata
call sub_40c97d
mov esi [ eax + 0x88 ]
mov eax [ ebx ]
push [ esi + 0x1c ]
mov [ ebp + 0x8 ] eax
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4230b3
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
call sub_40c97d
inc [ eax + 0x90 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
dec edi
add ebx 0x4
xor eax eax
inc eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x14 ]
push esi
call sub_423abe
add esp 0x10
jmp r-xdata
sub_423c9e
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_423abe
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_421830
call sub_421877
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_423161
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_4237a3
add esp 0x28
test eax eax
je r-xdata
sub_423d0c
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_40c97d
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_40c97d
lea edi [ eax + 0x80 ]
call sub_40c790
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_421b35
mov ecx [ ebp - 0x4 ]
add esp 0x14
cmp ecx [ ebp - 0xc ]
jae r-xdata
call sub_4108c7
mov eax [ esi ]
cmp eax 0xe0434f4d
je r-xdata
pop edi
add eax 0xc
mov [ ebp - 0x8 ] eax
push ebx
cmp eax 0xe0434352
je r-xdata
inc [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
add eax 0x14
mov [ ebp - 0x8 ] eax
cmp ecx [ ebp - 0xc ]
jb r-xdata
cmp esi [ eax - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4219bf
add esp 0x1c
test eax eax
jne r-xdata
lea edi [ eax - 0xc ]
cmp esi [ edi ]
jl r-xdata
pop ebx
mov ecx [ eax ]
shl ecx 0x4
add ecx [ eax + 0x4 ]
mov edx [ ecx - 0xc ]
test edx edx
je r-xdata
lea ebx [ ecx - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ edx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_423c9e
mov esi [ ebp + 0x1c ]
mov eax [ ebp - 0x8 ]
add esp 0x1c
sub_423e13
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
cmp eax 0x80
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_4108c7
cmp ecx eax
jl r-xdata
mov [ ebp - 0x8 ] ecx
cmp ecx 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_40c97d
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_4108c7
call sub_41087b
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_423d0c
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_40c97d
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_40c97d
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_40c97d
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_424fb6
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_421b35
mov ecx [ ebp - 0x10 ]
add esp 0x14
cmp ecx [ ebp - 0x20 ]
jae r-xdata
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_4108c7
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_423282
pop ecx
pop ecx
lea edi [ eax + 0x10 ]
mov [ ebp - 0x1c ] edi
call sub_40c97d
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
add edi 0x14
mov [ ebp - 0x1c ] edi
cmp eax [ ebp - 0x20 ]
jb r-xdata
cmp ecx [ edi - 0xc ]
jg r-xdata
call sub_40c97d
mov edi [ eax + 0x94 ]
call sub_40c97d
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_42362c
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ edi - 0x10 ]
mov [ ebp - 0x28 ] eax
cmp [ eax ] ecx
jg r-xdata
mov edi [ ebp + 0x18 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_42362c
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rwxdata
call sub_40a1ef
test al al
jne r-xdata
call sub_4108c7
cmp eax 0x19930522
jne r-xdata
call sub_40c97d
call sub_40c97d
call sub_40c97d
mov [ eax + 0x88 ] esi
call sub_40c97d
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
call sub_4230b3
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_423282
pop ecx
pop ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp + 0x8 ] r--data
call sub_409c1a
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] r--data
call sub_40bc3c
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov edi [ ebp - 0x28 ]
push [ ebp + 0x20 ]
mov ebx [ ebp - 0xc ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_423c9e
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x1c ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_421877
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_423161
add esp 0x10
push [ esi + 0x1c ]
call sub_4236a2
sub_4241a5
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_40c97d
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_423e13
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_423161
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_424290
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_41f05c
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_41f05c
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_4242e0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_42430d
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_40a63a
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_426946
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_4257e8
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_409b72
leave
retn
sub_4243cc
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_40a63a
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push 0x1
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_426946
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_42628a
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_409b72
leave
retn
sub_42448c
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_40a63a
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_426946
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_425d39
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_409b72
leave
retn
sub_42454b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ rwxdata ]
test eax 0xfffffffe
je r-xdata
mov [ rwxdata ] eax
call sub_40de77
mov [ eax ] 0x16
call sub_41032e
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_424583
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ecx + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
cmp esi eax
jne r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
call sub_40de77
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
mov [ esi ] al
cmp edx eax
jle r-xdata
pop esi
pop ebx
pop ebp
retn
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
mov eax edx
push edi
lea edi [ esi + 0x1 ]
mov [ esi ] 0x30
mov eax edi
test edx edx
jle r-xdata
call sub_40de77
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov [ eax ] 0x0
test edx edx
js r-xdata
mov cl [ ebx ]
test cl cl
je r-xdata
call sub_41032e
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ ebx ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc ebx
jmp r-xdata
push edi
call sub_40b5d0
inc eax
push eax
push edi
push esi
call sub_409e20
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
test edx edx
jg r-xdata
xor eax eax
pop edi
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_424636
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
movzx eax [ ecx + 0x6 ]
push ebx
mov ebx eax
shr ebx 0x4
and eax 0x8000
push esi
mov edx 0x7ff
and ebx edx
push edi
mov [ ebp + 0xc ] eax
mov eax [ ecx + 0x4 ]
mov ecx [ ecx ]
movzx edi bx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test edi edi
je r-xdata
xor edx edx
cmp eax edx
jne r-xdata
cmp edi edx
je r-xdata
add ebx 0x3c01
mov [ ebp - 0x4 ] edx
cmp ecx edx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ebx 0x3c00
jmp r-xdata
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov [ eax ] edx
jmp r-xdata
mov edx ecx
shr edx 0x15
shl eax 0xb
or edx eax
or edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl ecx 0xb
jmp r-xdata
movzx edi bx
mov ecx [ eax ]
mov ebx ecx
shr ebx 0x1f
add edx edx
or edx ebx
add ecx ecx
add edi 0xffff
mov ecx [ ebp + 0xc ]
or ecx edi
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_4246e9
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x24 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_424636
pop ecx
pop ecx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x30 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_4270ee
mov esi [ ebp - 0x24 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x1e ]
mov [ ebx ] eax
movsx eax [ ebp - 0x20 ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_40b496
add esp 0x24
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4102c2
int3
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_409b72
leave
retn
sub_424780
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_424860
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_42487f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
mov esi [ ebp + 0x8 ]
test ecx 0xfcf0fce0
je r-xdata
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
test esi esi
je r-xdata
call sub_42846d
call sub_42846d
mov [ esi ] eax
jmp r-xdata
call sub_40de77
push 0x16
pop esi
mov [ eax ] esi
call sub_41032e
mov eax esi
jmp r-xdata
push 0x0
push 0x0
call sub_42846d
pop ecx
pop ecx
mov [ esi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_4248de
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
mov [ rwxdata ] 0x1
pop ebp
retn
and [ rwxdata ] 0x0
pop ebp
retn
sub_42490c
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
cmp [ rwxdata ] eax
je r-xdata
mov eax sub_428a94
push [ rwxdata ]
call [ DecodePointer@IAT ]
jmp r-xdata
add ecx 0xfffffc18
cmp ecx 0xc
ja r-xdata
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx 0xa6
push esi
cmp ecx edx
jg r-xdata
pop esi
leave
retn
jmp [ ecx * 4 + jump_table_424ba4 ]
mov [ ebp - 0x28 ] 0x3
mov [ ebp - 0x24 ] r--data
jmp r-xdata
cmp ecx 0x19
jg r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
mov ecx [ ebp + 0x8 ]
fld [ ecx ]
mov ecx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
fstp [ ebp - 0x20 ]
fld [ ecx ]
lea ecx [ ebp - 0x28 ]
fstp [ ebp - 0x18 ]
push ecx
fld [ esi ]
fstp [ ebp - 0x10 ]
call eax
pop ecx
test eax eax
jne r-xdata
sub ecx 0x1a
je r-xdata
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
fld [ ecx ]
mov esi [ ebp + 0x10 ]
fstp [ esi ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
fld [ ecx ]
mov esi [ ebp + 0x10 ]
fmul [ ebp - 0x8 ]
fst [ esi ]
fld [ ecx ]
mov ecx [ ebp + 0xc ]
fstp [ ebp - 0x20 ]
fld [ ecx ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x10 ]
fstp [ esi ]
call sub_40de77
mov [ eax ] 0x21
call sub_40de77
mov [ eax ] 0x22
jmp r-xdata
fld1
mov eax [ ebp + 0x10 ]
fstp [ eax ]
jmp r-xdata
dec ecx
je r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
push 0x2
pop edx
sub ecx edx
je r-xdata
lea ecx [ ebp - 0x28 ]
fstp [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x28 ] 0x1
call eax
pop ecx
test eax eax
jne r-xdata
fld [ ecx ]
mov ecx [ ebp + 0xc ]
fstp [ ebp - 0x20 ]
fld [ ecx ]
fstp [ ebp - 0x18 ]
fld [ esi ]
jmp r-xdata
mov [ ebp - 0x28 ] 0x2
jmp r-xdata
dec ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
fld [ ecx ]
mov ecx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
fstp [ ebp - 0x20 ]
fld [ ecx ]
lea ecx [ ebp - 0x28 ]
fstp [ ebp - 0x18 ]
push ecx
fld [ esi ]
mov [ ebp - 0x28 ] 0x4
fstp [ ebp - 0x10 ]
call eax
pop ecx
jmp r-xdata
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] r--data
jmp r-xdata
dec ecx
je r-xdata
mov [ ebp - 0x24 ] r--data
dec ecx
je r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
sub ecx 0x5
je r-xdata
mov [ ebp - 0x24 ] r--data
sub ecx 0x1d
je r-xdata
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] r--data
jmp r-xdata
dec ecx
je r-xdata
sub ecx 0x3
jne r-xdata
mov [ ebp - 0x24 ] r--data
sub ecx 0x5
je r-xdata
mov [ ebp - 0x28 ] 0x3
mov [ ebp - 0x24 ] r--data
jmp r-xdata
dec ecx
je r-xdata
mov [ ebp - 0x24 ] r--data
sub ecx 0x9
jne r-xdata
mov [ ebp - 0x28 ] 0x3
sub_424bd8
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_428f09
pop ecx
pop ecx
test al 0x90
jne r-xdata
xor eax eax
leave
retn
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_428a97
fld [ ebp + 0x8 ]
pop ecx
fucompp
pop ecx
fnstsw ax
test ah 0x44
jpe r-xdata
fld [ ebp + 0x8 ]
push ecx
fmul [ r--data ]
push ecx
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fstp [ esp ]
call sub_428a97
fld [ ebp - 0x8 ]
pop ecx
fucompp
pop ecx
fnstsw ax
test ah 0x44
jpe r-xdata
xor eax eax
inc eax
leave
retn
push 0x2
pop eax
leave
retn
sub_424c42
mov edi edi
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
push esi
mov eax 0x7ff00000
fabs
xor edx edx
xor esi esi
mov ecx 0xfff00000
cmp [ ebp + 0x14 ] eax
jne r-xdata
cmp [ ebp + 0x14 ] ecx
jne r-xdata
cmp [ ebp + 0x10 ] edx
jne r-xdata
fstp st0
cmp [ ebp + 0xc ] eax
jne r-xdata
cmp [ ebp + 0x10 ] edx
jne r-xdata
fld1
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
fld1
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
fcom st1
fnstsw ax
fstp st1
test ah 0x41
mov eax [ ebp + 0x18 ]
jne r-xdata
fstp st0
mov eax esi
pop esi
pop ebp
retn
cmp [ ebp + 0x8 ] edx
jne r-xdata
fldz
fcom [ ebp + 0x10 ]
fnstsw ax
test ah 0x5
jpo r-xdata
fcompp
fnstsw ax
test ah 0x41
mov eax [ ebp + 0x18 ]
jne r-xdata
fstp st0
fstp st0
fldz
jmp r-xdata
fstp [ eax ]
fstp st0
fldz
jmp r-xdata
mov eax [ ebp + 0x18 ]
fld [ ebp + 0x10 ]
push ecx
push ecx
fstp [ esp ]
call sub_424bd8
fldz
pop ecx
fcom [ ebp + 0x10 ]
pop ecx
mov ecx eax
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st0
fld [ rwxdata ]
jmp r-xdata
fcom [ ebp + 0x10 ]
fnstsw ax
test ah 0x41
mov eax [ ebp + 0x18 ]
je r-xdata
fld [ rwxdata ]
xor esi esi
inc esi
jmp r-xdata
fld [ rwxdata ]
jmp r-xdata
fcom [ ebp + 0x10 ]
fnstsw ax
test ah 0x41
jne r-xdata
fstp st0
fld [ rwxdata ]
cmp ecx 0x1
jne r-xdata
fstp st0
fld1
jmp r-xdata
fstp st0
fld1
cmp ecx 0x1
jne r-xdata
fchs
jmp r-xdata
fstp st0
fld [ rwxdata ]
jmp r-xdata
sub_424d6d
mov edi edi
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x88
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x10 ]
movzx ecx [ eax ]
push esi
mov esi [ ebx + 0xc ]
mov eax [ esi ]
dec eax
push edi
mov [ ebp - 0x88 ] ecx
je r-xdata
mov [ ebp - 0x84 ] 0x8
dec eax
je r-xdata
push 0xffff
push [ ebp - 0x88 ]
call sub_429a13
cmp [ esi ] 0x8
pop ecx
pop ecx
je r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x10
je r-xdata
mov [ ebp - 0x84 ] 0x4
jmp r-xdata
dec eax
je r-xdata
push [ esi ]
call sub_429671
pop ecx
cmp [ rwxdata ] 0x0
jne r-xdata
mov ecx [ ebp - 0x40 ]
fld [ esi + 0x10 ]
and ecx 0xffffffe3
fstp [ ebp - 0x50 ]
or ecx 0x3
mov [ ebp - 0x40 ] ecx
cmp eax 0x16
je r-xdata
push ecx
lea edi [ esi + 0x18 ]
push edi
push [ ebp - 0x84 ]
call sub_42948d
add esp 0xc
test eax eax
jne r-xdata
mov [ ebp - 0x84 ] 0x11
jmp r-xdata
dec eax
je r-xdata
push esi
call sub_428a94
pop ecx
test eax eax
jne r-xdata
cmp eax 0x1d
je r-xdata
mov [ ebp - 0x84 ] 0x12
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_409b72
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
and [ ebp - 0x40 ] 0xfffffffe
jmp r-xdata
dec eax
dec eax
je r-xdata
push edi
lea ecx [ esi + 0x8 ]
push ecx
push eax
push [ ebp - 0x84 ]
lea eax [ ebp - 0x88 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_429447
add esp 0x18
mov [ esi ] 0x1
jmp r-xdata
dec eax
jne r-xdata
mov [ ebp - 0x84 ] 0x10
jmp r-xdata
sub_424eac
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rwxdata ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_424edf
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rwxdata ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_424f15
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rwxdata ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_424f4b
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rwxdata ]
xor eax ebp
push eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_424fec
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
lea ecx [ edx + esi ]
xor eax eax
cmp ecx edx
jb r-xdata
xor eax eax
inc eax
cmp ecx esi
jae r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
pop esi
pop ebp
retn
sub_425010
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
mov edx [ ebp + 0xc ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
sub ecx edx
or edx 0xffffffff
shl edx cl
mov ecx [ ebp + 0x8 ]
not edx
test [ ecx + eax * 4 ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
inc eax
cmp eax 0x3
jl r-xdata
xor eax eax
pop ebp
retn
cmp [ ecx + eax * 4 ] 0x0
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_425059
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
mov edx [ ebp + 0xc ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
mov edi [ ebp + 0x8 ]
sub ecx edx
xor edx edx
inc edx
shl edx cl
mov ecx [ edi + eax * 4 ]
xor ebx ebx
lea esi [ ecx + edx ]
cmp esi ecx
jb r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor ebx ebx
inc ebx
cmp esi edx
jae r-xdata
dec eax
jns r-xdata
mov [ edi + eax * 4 ] esi
jmp r-xdata
test ebx ebx
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
mov ecx [ edi + eax * 4 ]
lea edx [ ecx + 0x1 ]
xor ebx ebx
cmp edx ecx
jb r-xdata
xor ebx ebx
inc ebx
cmp edx 0x1
jae r-xdata
mov [ edi + eax * 4 ] edx
sub_4250c6
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
lea ebx [ edx + eax ]
lea eax [ edi + 0x1 ]
sar ebx 0x5
and eax 0x8000001f
jns r-xdata
mov esi [ ebp + 0x8 ]
push 0x1f
pop ecx
sub ecx eax
xor eax eax
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ esi + ebx * 4 ] eax
je r-xdata
dec eax
or eax 0xffffffe0
inc eax
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi + ebx * 4 ] eax
inc ebx
cmp ebx ecx
jge r-xdata
or edx 0xffffffff
shl edx cl
mov eax ebx
not edx
test [ esi + eax * 4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
sub ecx ebx
lea edi [ esi + ebx * 4 ]
xor eax eax
[ edi ]
jne r-xdata
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
and [ ebp + 0xc ] 0x0
xor edx edx
sub ecx edi
inc edx
shl edx cl
mov ecx [ esi + eax * 4 ]
lea edi [ ecx + edx ]
cmp edi ecx
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ esi + eax * 4 ] 0x0
jmp r-xdata
mov [ ebp + 0xc ] 0x1
cmp edi edx
jae r-xdata
dec eax
jns r-xdata
mov ecx [ ebp + 0xc ]
mov [ esi + eax * 4 ] edi
jmp r-xdata
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] ecx
mov ecx [ esi + eax * 4 ]
lea edx [ ecx + 0x1 ]
xor edi edi
cmp edx ecx
jb r-xdata
xor edi edi
inc edi
cmp edx 0x1
jae r-xdata
mov [ esi + eax * 4 ] edx
mov ecx edi
sub_4251b2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push 0x3
pop edx
sub ecx eax
push esi
mov esi [ eax ]
mov [ ecx + eax ] esi
add eax 0x4
dec edx
jne r-xdata
pop esi
pop ebp
retn
sub_4251e2
mov edi edi
push ebp
mov ebp esp
xor eax eax
xor eax eax
pop ebp
retn
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + eax * 4 ] 0x0
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_425201
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cdq
and edx 0x1f
sub esp 0xc
add eax edx
mov edx [ ebp + 0xc ]
push esi
sar eax 0x5
and edx 0x8000001f
push edi
jns r-xdata
and [ ebp - 0x8 ] 0x0
and [ ebp + 0xc ] 0x0
mov edi [ ebp + 0x8 ]
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
push ebx
not esi
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp + 0xc ]
mov ebx [ edi + ecx * 4 ]
and ebx esi
mov [ ebp - 0xc ] ebx
mov ebx [ edi + ecx * 4 ]
mov ecx edx
shr ebx cl
mov ecx [ ebp + 0xc ]
or ebx [ ebp - 0x8 ]
mov [ edi + ecx * 4 ] ebx
mov ebx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
shl ebx cl
inc [ ebp + 0xc ]
cmp [ ebp + 0xc ] 0x3
mov [ ebp - 0x8 ] ebx
jl r-xdata
push 0x2
pop ecx
mov edx ecx
sub edx eax
lea edx [ edi + edx * 4 ]
pop ebx
and [ edi + ecx * 4 ] 0x0
mov esi [ edx ]
mov [ edi + ecx * 4 ] esi
jmp r-xdata
cmp ecx eax
jl r-xdata
pop edi
pop esi
leave
retn
sub edx 0x4
dec ecx
jns r-xdata
sub_425299
mov edi edi
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x38 ] ecx
movzx ecx [ eax + 0xa ]
mov edx ecx
and ecx 0x8000
mov [ ebp - 0x3c ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
push ebx
mov ebx [ ebp + 0x10 ]
and edx 0x7fff
sub edx 0x3fff
shl eax 0x10
push esi
push edi
mov [ ebp - 0x20 ] edx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp edx 0xffffc001
jne r-xdata
and [ ebp - 0x30 ] 0x0
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax edx
movsd [ edi ] [ esi ]
mov edi [ ebx + 0x8 ]
mov [ ebp - 0x2c ] eax
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x28 ] eax
jns r-xdata
xor esi esi
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x34 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x34 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x2
pop eax
jmp r-xdata
cmp [ ebp + eax * 4 - 0x10 ] esi
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
push 0x1f
pop ecx
sub ecx [ ebx + 0xc ]
mov ebx [ ebx + 0x10 ]
shl esi cl
mov ecx [ ebp - 0x3c ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or esi ecx
or esi [ ebp - 0x10 ]
cmp ebx 0x40
jne r-xdata
xor eax eax
mov eax [ ebx + 0x4 ]
mov ecx [ ebp - 0x20 ]
mov edx eax
sub edx [ ebx + 0x8 ]
cmp ecx edx
jge r-xdata
inc [ ebp - 0x20 ]
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
cmp ebx 0x20
jne r-xdata
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] esi
mov [ ecx ] edx
jmp r-xdata
cmp ecx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x30 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x24 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x24 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_409b72
leave
retn
mov ecx [ ebp - 0x38 ]
mov [ ecx ] esi
cmp ecx [ ebx ]
mov ecx [ ebx + 0xc ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx eax
cdq
and edx 0x1f
movsd [ edi ] [ esi ]
lea esi [ edx + eax ]
mov edx ecx
sar esi 0x5
and edx 0x8000001f
jns r-xdata
xor esi esi
mov [ ebp - 0x30 ] 0x1
cmp [ ebp - 0x24 ] edx
jmp r-xdata
mov esi [ ebx + 0x14 ]
add esi [ ebp - 0x20 ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x34 ] eax
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or eax 0xffffffff
mov ecx edx
shl eax cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not eax
dec edx
or edx 0xffffffe0
inc edx
test ecx ecx
je r-xdata
mov [ ebp - 0x30 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx eax
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov edx esi
push 0x2
shl edx 0x2
lea eax [ ebp - 0x8 ]
pop ecx
sub eax edx
and [ ebp - 0x30 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x24 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x24 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x30 ]
jns r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ ebp + eax * 4 - 0x10 ]
mov ecx eax
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr eax cl
mov ecx [ ebp - 0x20 ]
or eax [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] eax
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl eax cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] eax
jl r-xdata
mov edx [ ebp - 0x34 ]
mov edi edx
push 0x2
shl edi 0x2
lea eax [ ebp - 0x8 ]
pop ecx
sub eax edi
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + ecx * 4 - 0x10 ] 0x0
mov edx [ eax ]
mov [ ebp + ecx * 4 - 0x10 ] edx
jmp r-xdata
cmp edi 0x1
and [ ebp + ecx * 4 - 0x10 ] 0x0
mov edi [ eax ]
mov [ ebp + ecx * 4 - 0x10 ] edi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp ecx esi
jl r-xdata
mov edi [ ebx + 0x8 ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] eax
jns r-xdata
sub eax 0x4
dec ecx
jns r-xdata
cmp ecx edx
jl r-xdata
sub eax 0x4
dec ecx
jns r-xdata
cmp edx eax
jl r-xdata
mov esi [ ebx + 0x14 ]
add esi [ ebx ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
mov [ ebp - 0x34 ] ecx
test [ ebp + eax * 4 - 0x10 ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x34 ]
or edx 0xffffffff
shl edx cl
push 0x3
pop ecx
and [ ebp + eax * 4 - 0x10 ] edx
inc eax
cmp eax ecx
jge r-xdata
or esi 0xffffffff
shl esi cl
mov edx eax
not esi
test [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov ecx [ ebx + 0xc ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
lea esi [ edx + eax ]
lea edx [ ecx + 0x1 ]
sar esi 0x5
and edx 0x8000001f
jns r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or eax 0xffffffff
mov ecx edx
shl eax cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not eax
dec edx
or edx 0xffffffe0
inc edx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc edx
cmp edx 0x3
jl r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx eax
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov edx esi
push 0x2
shl edx 0x2
lea eax [ ebp - 0x8 ]
pop ecx
sub eax edx
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx edi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
lea esi [ edi + edx ]
mov [ ebp - 0x24 ] esi
cmp esi edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + edx * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + ecx * 4 - 0x10 ] 0x0
mov edx [ eax ]
mov [ ebp + ecx * 4 - 0x10 ] edx
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp esi edx
jae r-xdata
cmp ecx esi
jl r-xdata
sub eax 0x4
dec ecx
jns r-xdata
dec eax
jns r-xdata
mov edx [ ebp - 0x24 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp - 0x2c ]
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_4257e8
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rwxdata ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rwxdata ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rwxdata ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rwxdata ]
mov ecx eax
sub ecx [ rwxdata ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_409b72
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rwxdata ]
cmp ebx [ rwxdata ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rwxdata ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rwxdata ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rwxdata ]
add ebx [ rwxdata ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rwxdata ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_425d39
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rwxdata ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rwxdata ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rwxdata ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rwxdata ]
mov ecx eax
sub ecx [ rwxdata ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_409b72
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rwxdata ]
cmp ebx [ rwxdata ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rwxdata ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rwxdata ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rwxdata ]
add ebx [ rwxdata ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rwxdata ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_42628a
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + 0xa ]
and [ ebp - 0x20 ] 0x0
mov eax edx
and eax 0x7fff
and edx 0x8000
push esi
mov esi [ ecx + 0x6 ]
mov [ ebp - 0x14 ] eax
mov eax edx
mov edx [ ecx + 0x2 ]
movzx ecx [ ecx ]
shl ecx 0x10
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x8 ] ecx
test ecx ecx
jns r-xdata
mov ecx 0x7fff
cmp [ ebp - 0x14 ] cx
jne r-xdata
test ecx 0x7fffffff
je r-xdata
or eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x4 ]
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ax
mov eax [ ebp - 0x20 ]
mov [ edi ] edx
pop edi
xor ecx ebp
pop esi
call sub_409b72
leave
retn
mov [ ebp - 0x20 ] 0x1
lea ecx [ edx + 0x1 ]
xor esi esi
cmp ecx edx
jb r-xdata
xor esi esi
inc esi
cmp ecx 0x1
jae r-xdata
mov esi [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
and [ ebp - 0x1c ] 0x0
lea ecx [ ebp + ecx * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
cmp esi edx
jb r-xdata
and [ ebp - 0x18 ] 0x0
mov [ ebp - 0xc ] ecx
mov ecx esi
mov [ ebp - 0x1c ] 0x1
cmp esi 0x1
jae r-xdata
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
dec [ ebp - 0x18 ]
mov [ ecx ] esi
mov ecx [ ebp - 0x1c ]
jns r-xdata
inc [ ebp - 0x14 ]
mov esi 0x80000000
jmp r-xdata
mov edx [ ebp - 0xc ]
sub_426367
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ eax ]
mov ecx esi
add esi esi
push edi
mov edi [ eax + 0x4 ]
shr ecx 0x1f
mov [ eax ] esi
lea esi [ edi + edi ]
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
shr edx 0x1f
add ecx ecx
or ecx edx
pop edi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ecx
pop esi
pop ebp
retn
sub_42639a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
mov ecx [ eax + 0x4 ]
push esi
push edi
mov edi ecx
mov esi edx
shr ecx 0x1
shl esi 0x1f
or ecx esi
mov [ eax + 0x4 ] ecx
mov ecx [ eax ]
shl edi 0x1f
shr edx 0x1
shr ecx 0x1
or ecx edi
pop edi
mov [ eax + 0x8 ] edx
mov [ eax ] ecx
pop esi
pop ebp
retn
sub_4263cc
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebx
mov ebx [ ebp + 0xc ]
movzx edx [ ebx + 0xa ]
push esi
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
movzx ecx [ eax + 0xa ]
mov esi edx
xor esi ecx
and esi 0x8000
mov [ ebp - 0x20 ] esi
mov esi 0x7fff
and ecx esi
and edx esi
lea esi [ edx + ecx ]
push edi
movzx esi si
mov edi 0x7fff
mov [ ebp - 0x30 ] esi
cmp cx di
jae r-xdata
xor edx edx
xor ecx ecx
cmp [ ebp - 0x20 ] cx
sete dl
dec edx
and edx 0x80000000
add edx 0x7fff8000
mov [ eax + 0x8 ] edx
cmp dx di
jae r-xdata
mov edi 0xbffd
cmp si di
ja r-xdata
mov edi 0x3fbf
cmp si di
ja r-xdata
mov edi 0x7fffffff
test cx cx
jne r-xdata
xor ecx ecx
xor ecx ecx
inc esi
mov [ ebp - 0x30 ] esi
test [ eax + 0x8 ] edi
jne r-xdata
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ ebp - 0x1c ] ecx
lea edi [ ebp - 0xc ]
mov [ ebp - 0x18 ] 0x5
inc esi
mov [ ebp - 0x30 ] esi
test [ ebx + 0x8 ] edi
jne r-xdata
xor ecx ecx
cmp [ eax + 0x4 ] ecx
jne r-xdata
add edi 0x2
inc [ ebp - 0x1c ]
dec [ ebp - 0x18 ]
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
add ebx 0x8
mov [ ebp - 0x24 ] ebx
lea ebx [ eax + ecx ]
cmp [ ebx + 0x4 ] ecx
jne r-xdata
cmp dx cx
jne r-xdata
cmp [ eax ] ecx
jne r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
add ecx ecx
mov [ ebp - 0x28 ] edx
test edx edx
jle r-xdata
add esi 0xc002
mov edi 0xffff
test si si
jle r-xdata
mov [ ebp - 0x14 ] 0x1
cmp esi ecx
jae r-xdata
cmp [ ebx ] ecx
je r-xdata
mov [ eax + 0xa ] cx
jmp r-xdata
add esi edi
test si si
jns r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
sub [ ebp - 0x24 ] 0x2
add ebx 0x2
dec [ ebp - 0x28 ]
cmp [ ebp - 0x28 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x14 ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ eax + 0x8 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_409b72
leave
retn
mov ecx 0x8000
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov ecx esi
neg ecx
movzx ecx cx
mov [ ebp - 0x14 ] ecx
add esi ecx
test si si
jg r-xdata
mov ecx [ ebp - 0x10 ]
mov ebx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shl [ ebp - 0x10 ] 0x1
shr ecx 0x1f
add ebx ebx
or ebx ecx
mov ecx [ ebp - 0x8 ]
shr edx 0x1f
add ecx ecx
or ecx edx
add esi edi
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
test si si
jg r-xdata
mov edx [ ebp - 0x24 ]
movzx edx [ edx ]
movzx ecx [ ebx ]
and [ ebp - 0x14 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea esi [ edx + ecx ]
cmp esi edx
jb r-xdata
mov ebx [ ebp + 0xc ]
mov esi [ ebp - 0x30 ]
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x10 ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ebx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr ebx 0x1
or ebx ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec [ ebp - 0x14 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x2c ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov ecx 0x7fff
cmp si cx
jae r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
mov cx [ ebp - 0xe ]
or esi [ ebp - 0x20 ]
mov [ eax ] cx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x2 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x6 ] ecx
mov [ eax + 0xa ] si
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
cmp [ ebp - 0x6 ] di
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] cx
inc esi
jmp r-xdata
sub_426647
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx rwxdata
sub ecx 0x60
xor edx edx
mov [ ebp - 0x24 ] ecx
cmp [ ebp + 0xc ] edx
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_409b72
leave
retn
jge r-xdata
cmp [ ebp + 0x10 ] edx
jne r-xdata
neg [ ebp + 0xc ]
mov ecx rwxdata
sub ecx 0x60
mov [ ebp - 0x24 ] ecx
cmp [ ebp + 0xc ] edx
je r-xdata
xor ecx ecx
mov [ eax ] cx
push ebx
push esi
push edi
xor edx edx
cmp [ ebp + 0xc ] edx
jne r-xdata
imul ecx ecx 0xc
add ecx [ ebp - 0x24 ]
mov ebx ecx
mov ecx 0x8000
cmp [ ebx ] cx
jb r-xdata
mov ecx [ ebp + 0xc ]
add [ ebp - 0x24 ] 0x54
sar [ ebp + 0xc ] 0x3
and ecx 0x7
cmp ecx edx
je r-xdata
pop edi
pop esi
pop ebx
movzx ecx [ eax + 0xa ]
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
movzx edx [ ebx + 0xa ]
mov esi edx
xor esi ecx
and esi 0x8000
mov [ ebp - 0x30 ] esi
mov esi 0x7fff
and ecx esi
and edx esi
lea edi [ edx + ecx ]
movzx edi di
mov [ ebp - 0x28 ] edi
cmp cx si
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x1a ]
lea ebx [ ebp - 0x1c ]
xor edx edx
xor ecx ecx
cmp [ ebp - 0x30 ] cx
sete dl
dec edx
and edx 0x80000000
add edx 0x7fff8000
mov [ eax + 0x8 ] edx
cmp dx si
jae r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
xor esi esi
cmp cx si
jne r-xdata
xor ecx ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
cmp dx si
jne r-xdata
inc edi
test [ eax + 0x8 ] 0x7fffffff
mov [ ebp - 0x28 ] edi
jne r-xdata
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ ebp - 0x34 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x20 ] 0x5
inc edi
test [ ebx + 0x8 ] 0x7fffffff
mov [ ebp - 0x28 ] edi
jne r-xdata
cmp [ eax + 0x4 ] esi
jne r-xdata
add esi 0x2
inc [ ebp - 0x34 ]
dec [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x0
jg r-xdata
lea edx [ ebx + 0x8 ]
add ecx eax
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x3c ] ecx
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ eax ] esi
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x20 ]
add ecx ecx
mov [ ebp - 0x2c ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp edi ecx
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor ecx ecx
mov [ eax + 0xa ] cx
jmp r-xdata
add edi 0xffff
test di di
jns r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x3c ] 0x2
sub [ ebp - 0x40 ] 0x2
dec [ ebp - 0x2c ]
cmp [ ebp - 0x2c ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x44 ] 0x0
mov [ esi - 0x4 ] edi
je r-xdata
mov [ eax + 0x8 ] esi
mov [ eax + 0x4 ] esi
mov [ eax ] esi
jmp r-xdata
mov ecx 0x8000
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov ecx edi
neg ecx
movzx esi cx
add edi esi
test di di
jg r-xdata
mov esi [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
shr ecx 0x1f
mov edx esi
add esi esi
or esi ecx
mov ecx [ ebp - 0x8 ]
shr edx 0x1f
add ecx ecx
or ecx edx
add edi 0xffff
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] ecx
test di di
jg r-xdata
mov ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x40 ]
movzx edx [ edx ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ esi - 0x4 ]
lea edi [ edx + ecx ]
cmp edi edx
jb r-xdata
mov edi [ ebp - 0x28 ]
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x10 ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ebx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr ebx 0x1
or ebx ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec esi
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x38 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov ecx 0x7fff
cmp di cx
jae r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x38 ] esi
je r-xdata
mov cx [ ebp - 0xe ]
or edi [ ebp - 0x30 ]
mov [ eax ] cx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x2 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x6 ] ecx
mov [ eax + 0xa ] di
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov edx 0xffff
cmp [ ebp - 0x6 ] dx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] cx
inc edi
jmp r-xdata
sub_426946
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x60 ] ecx
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x6c ] ecx
cmp [ ebp + 0x24 ] ecx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_40de77
mov [ eax ] 0x16
call sub_41032e
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_409b72
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
push ebx
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_426ff2 ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
lea ecx [ eax - 0x31 ]
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_429bc0
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
sub al 0x64
cmp al 0x1
ja r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
pop ebx
mov [ ebp - 0x6c ] 0x1
mov ecx rwxdata
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rwxdata
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
lea ebx [ ecx + eax ]
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
mov edx [ ebp - 0x32 ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
movzx eax [ ebx + 0xa ]
mov esi eax
xor esi [ ebp - 0x32 ]
mov ecx 0x7fff
and edx ecx
and eax ecx
and esi 0x8000
mov edi 0x7fff
lea ecx [ eax + edx ]
mov [ ebp - 0x70 ] esi
movzx ecx cx
cmp dx di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp ax di
jae r-xdata
mov edi 0xbffd
cmp cx di
ja r-xdata
mov esi 0x3fbf
cmp cx si
ja r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp ax si
jne r-xdata
inc ecx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc ecx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
add edi 0x2
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] edx
test edx edx
jle r-xdata
add ecx 0xc002
test cx cx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add ecx 0xffff
test cx cx
jns r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
cmp [ ebp - 0x2c ] ax
ja r-xdata
mov eax ecx
neg eax
movzx esi ax
add ecx esi
test cx cx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov edx esi
add esi esi
or esi eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add ecx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test cx cx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov edx [ ebp - 0x5c ]
movzx edx [ edx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax edx
mov edx [ edi - 0x4 ]
lea esi [ edx + eax ]
cmp esi edx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x2c ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl edx 0x1f
shr eax 0x1
or eax edx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp cx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or ecx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] cx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov edx 0xffff
cmp [ ebp - 0x22 ] dx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc ecx
jmp r-xdata
sub_427022
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push edx
xor edx edx
push edx
push edx
push edx
push [ ebp + 0x14 ]
push ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_426946
mov edi eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_42628a
add esp 0x28
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
xor ecx ebp
pop esi
call sub_409b72
leave
retn
or edi 0x2
sub_42707d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov edx [ edi ]
lea esi [ ecx + edx ]
xor ebx ebx
cmp esi ecx
jb r-xdata
xor ebx ebx
inc ebx
cmp esi edx
jae r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ edi + 0x4 ]
lea esi [ ecx + edx ]
xor ebx ebx
cmp esi ecx
jb r-xdata
mov ecx [ eax + 0x4 ]
lea edx [ ecx + 0x1 ]
xor esi esi
cmp edx ecx
jb r-xdata
mov [ eax ] esi
test ebx ebx
je r-xdata
xor ebx ebx
inc ebx
cmp esi edx
jae r-xdata
xor esi esi
inc esi
cmp edx 0x1
jae r-xdata
mov ecx [ edi + 0x8 ]
add [ eax + 0x8 ] ecx
pop edi
pop esi
pop ebx
pop ebp
retn
inc [ eax + 0x8 ]
mov [ eax + 0x4 ] esi
test ebx ebx
je r-xdata
inc [ eax + 0x8 ]
mov [ eax + 0x4 ] edx
test esi esi
je r-xdata
sub_4270ee
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
movzx eax [ ebp + 0x10 ]
movzx edx [ ebp + 0x10 ]
mov ecx 0x8000
and eax ecx
push ebx
mov ebx [ ebp + 0x1c ]
mov [ ebp - 0x60 ] eax
lea eax [ ecx - 0x1 ]
push esi
and edx eax
cmp [ ebp - 0x60 ] 0x0
push edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x30 ] 0xcccccccc
mov [ ebp - 0x2c ] 0xcccccccc
mov [ ebp - 0x28 ] 0x3ffbcccc
mov [ ebp - 0x74 ] 0x1
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
mov eax esi
shr eax 0x18
shr ebx 0x8
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
mov [ ebp - 0x20 ] cx
movsx ebx ax
mov ecx rwxdata
sub ecx 0x60
neg ebx
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x68 ] ecx
je r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp ecx eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
test ebx ebx
jns r-xdata
test ecx 0x40000000
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp - 0x60 ] cx
mov [ ebx ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x3001
mov [ ebx + 0x5 ] 0x0
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
mov ebx [ ebp - 0x26 ]
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx ax
jae r-xdata
je r-xdata
mov eax rwxdata
sub eax 0x60
neg ebx
mov [ ebp - 0x68 ] eax
test ebx ebx
xor edx edx
cmp [ ebp - 0x60 ] dx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_409b72
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x68 ] 0x54
mov ecx ebx
sar ebx 0x3
and ecx 0x7
je r-xdata
cmp ecx eax
jne r-xdata
cmp ecx 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_40b496
add esp 0xc
test eax eax
jne r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x60 ] ax
mov [ edx + 0x3 ] 0x3001
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x68 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4102c2
mov [ ebx + 0x3 ] 0x6
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jns r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
movzx ecx [ eax + 0xa ]
mov edx ecx
xor edx [ ebp - 0x16 ]
mov esi 0x7fff
and edx 0x8000
mov [ ebp - 0x58 ] edx
mov edx [ ebp - 0x16 ]
and edx esi
and ecx esi
lea esi [ ecx + edx ]
movzx edi si
mov esi 0x7fff
cmp dx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x58 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp cx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_40b496
add esp 0xc
test eax eax
jne r-xdata
mov al [ ebx - 0x1 ]
sub ebx 0x2
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x54 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
add edi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x58 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x48 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp cx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x60 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jns r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x58 ] 0x2
add eax 0x2
dec [ ebp - 0x48 ]
cmp [ ebp - 0x48 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x54 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x58 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
add esi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x6c ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jns r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x70 ] 0x2
sub [ ebp - 0x6c ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x70 ]
movzx ecx [ eax ]
mov eax [ ebp - 0x6c ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x48 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x48 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x58 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x58 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_4279e6
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
xor esi esi
cmp [ ebp + 0x8 ] 0x9001f
jne r-xdata
and eax 0xfff7ffff
push eax
push [ ebp + 0x8 ]
push esi
call sub_42487f
add esp 0xc
test eax eax
je r-xdata
cmp eax 0xffffffff
jne r-xdata
pop esi
leave
retn
push esi
push esi
push esi
push esi
push esi
call sub_4102c2
fwait
fnstcw [ ebp - 0x4 ]
movzx ecx [ ebp - 0x4 ]
and ecx 0x1f3d
mov edx 0x23d
cmp cx dx
jne r-xdata
cmp [ rwxdata ] esi
je r-xdata
stmxcsr [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
and ecx 0xfec0
cmp ecx 0x1e80
je r-xdata
sub_427a59
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
push ebx
movzx edx cx
push esi
mov ecx edx
mov esi 0xc00
and ecx esi
push edi
mov edi 0x300
mov ebx 0x200
je r-xdata
or eax 0x80000
and edx edi
je r-xdata
cmp ecx 0x400
je r-xdata
or eax 0x20000
cmp edx ebx
jne r-xdata
or eax 0x100
cmp ecx 0x800
je r-xdata
pop ebp
retn
or eax 0x40000
test [ ebp + 0x8 ] 0x1000
pop edi
pop esi
pop ebx
je r-xdata
or eax 0x10000
jmp r-xdata
or eax ebx
jmp r-xdata
cmp ecx esi
jne r-xdata
or eax edi
jmp r-xdata
sub_427af8
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_427b86
mov edi edi
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
xor eax eax
test cl 0x3f
je r-xdata
pop ebp
retn
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
or eax 0x80000
sub_427bc9
xor eax eax
test dl dl
jns r-xdata
push ebx
mov ebx 0x200
push esi
push edi
test ebx edx
je r-xdata
push 0x10
pop eax
test edx 0x400
je r-xdata
or eax 0x8
test edx 0x800
je r-xdata
or eax 0x4
test edx 0x1000
je r-xdata
or eax 0x2
mov edi 0x100
test edi edx
je r-xdata
or eax 0x1
mov ecx edx
mov esi 0x6000
and ecx esi
je r-xdata
or eax 0x80000
pop edi
and edx 0x8040
sub edx 0x40
pop esi
pop ebx
je r-xdata
cmp ecx 0x2000
je r-xdata
or eax 0x2000000
sub edx 0x7fc0
je r-xdata
or eax edi
cmp ecx 0x4000
je r-xdata
or eax 0x3000000
retn
sub edx 0x40
jne r-xdata
or eax ebx
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x1000000
retn
or eax 0x300
jmp r-xdata
sub_427c69
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_427d09
mov edi edi
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
xor eax eax
test cl 0x3f
je r-xdata
pop ebp
retn
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
or eax 0x80000
sub_427d58
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
fwait
fnstsw [ ebp - 0x4 ]
mov al [ ebp - 0x4 ]
xor edx edx
mov esi 0x80000
test al 0x3f
je r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
test al 0x1
je r-xdata
mov eax edx
stmxcsr [ ebp - 0x8 ]
mov cl [ ebp - 0x8 ]
xor eax eax
test cl 0x3f
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop edx
or eax edx
jmp r-xdata
test cl 0x1
je r-xdata
test al 0x8
je r-xdata
or edx 0x8
pop esi
leave
retn
test cl 0x4
je r-xdata
push 0x10
pop eax
test al 0x10
je r-xdata
or edx 0x4
test cl 0x8
je r-xdata
or eax 0x8
test al 0x20
je r-xdata
or edx 0x2
test cl 0x10
je r-xdata
or eax 0x4
test al 0x2
je r-xdata
or edx 0x1
test cl 0x20
je r-xdata
or eax 0x2
or edx esi
test cl 0x2
je r-xdata
or eax 0x1
or eax esi
sub_427dea
mov edi edi
push esi
call sub_410a17
mov esi [ eax ]
fninit
call sub_4227e2
push 0x1f80
call sub_429ab4
pop ecx
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0x4 ]
test [ eax ] 0x10008
je r-xdata
and [ eax + 0x20 ] 0x0
mov [ eax + 0x24 ] 0xffff
sub_427e22
call sub_429a96
xor ecx ecx
test al 0x3f
je r-xdata
mov eax ecx
retn
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or ecx 0x1
or ecx 0x80000
sub_427e5d
mov edi edi
push ebp
mov ebp esp
push ecx
stmxcsr [ ebp - 0x4 ]
and [ ebp - 0x4 ] 0xffffffc0
ldmxcsr [ ebp - 0x4 ]
mov cl [ ebp - 0x4 ]
xor eax eax
test cl 0x3f
je r-xdata
leave
retn
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
or eax 0x80000
sub_427ead
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp + 0xc ] 0x308031f
stmxcsr [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
xor eax eax
test cl cl
jns r-xdata
push ebx
mov ebx 0x200
push esi
push edi
test ebx ecx
je r-xdata
push 0x10
pop eax
test ecx 0x400
je r-xdata
or eax 0x8
test ecx 0x800
je r-xdata
or eax 0x4
test ecx 0x1000
je r-xdata
or eax 0x2
mov esi 0x100
test esi ecx
je r-xdata
or eax 0x1
mov edx ecx
mov edi 0x6000
and edx edi
je r-xdata
or eax 0x80000
mov esi 0x8040
and ecx esi
sub ecx 0x40
je r-xdata
cmp edx 0x2000
je r-xdata
or eax 0x2000000
sub ecx 0x7fc0
je r-xdata
or eax esi
cmp edx 0x4000
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_427c69
push eax
mov [ ebp - 0x4 ] eax
call sub_429ab4
pop ecx
stmxcsr [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
xor eax eax
test dl dl
jns r-xdata
or eax 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or eax ebx
jmp r-xdata
cmp edx edi
jne r-xdata
test ebx edx
je r-xdata
push 0x10
pop eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
not edx
and edx eax
or edx ecx
cmp edx eax
je r-xdata
or eax 0x1000000
jmp r-xdata
or eax 0x300
jmp r-xdata
test edx 0x400
je r-xdata
or eax 0x8
test edx 0x800
je r-xdata
or eax 0x4
test edx 0x1000
je r-xdata
or eax 0x2
mov ebx 0x100
test ebx edx
je r-xdata
or eax 0x1
mov ecx edx
and ecx edi
je r-xdata
or eax 0x80000
and edx esi
sub edx 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or eax 0x2000000
sub edx 0x7fc0
je r-xdata
or eax ebx
cmp ecx 0x4000
je r-xdata
or eax 0x3000000
jmp r-xdata
sub edx 0x40
jne r-xdata
or eax 0x200
jmp r-xdata
cmp ecx edi
jne r-xdata
or eax 0x1000000
jmp r-xdata
or eax 0x300
jmp r-xdata
sub_428023
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
fwait
fnstsw [ ebp + 0x8 ]
mov al [ ebp + 0x8 ]
xor ecx ecx
test al 0x3f
je r-xdata
pop esi
pop ebp
retn
call sub_427e22
mov [ esi ] eax
mov [ edx ] ecx
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or ecx 0x1
or ecx 0x80000
sub_42807d
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
cmp [ rwxdata ] 0x0
je r-xdata
mov cl [ ebp - 0x4 ]
xor eax eax
test cl 0x3f
je r-xdata
mov al [ ebp - 0x4 ]
xor edx edx
push esi
mov esi 0x80000
test al 0x3f
je r-xdata
leave
retn
test cl 0x1
je r-xdata
stmxcsr [ ebp - 0x8 ]
and [ ebp - 0x8 ] 0xffffffc0
ldmxcsr [ ebp - 0x8 ]
mov cl [ ebp - 0x8 ]
xor eax eax
test cl 0x3f
je r-xdata
test al 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
or eax edx
pop esi
leave
retn
test cl 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop edx
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x4
je r-xdata
push 0x10
pop eax
test al 0x8
je r-xdata
or edx 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x8
je r-xdata
or eax 0x8
test al 0x10
je r-xdata
or edx 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x10
je r-xdata
or eax 0x4
test al 0x20
je r-xdata
or edx 0x2
test cl 0x2
je r-xdata
or eax 0x1
test cl 0x20
je r-xdata
or eax 0x2
test al 0x2
je r-xdata
or edx 0x1
or eax 0x80000
test cl 0x2
je r-xdata
or eax 0x1
or edx esi
or eax esi
sub_428156
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x10
push ebx
push esi
xor edx edx
push edi
mov edi 0x300
cmp [ ebp + 0x10 ] edx
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
fwait
fnstcw [ ebp - 0x4 ]
mov bx [ ebp - 0x4 ]
test bl 0x1
je r-xdata
pop edi
xor eax eax
pop esi
inc eax
pop ebx
leave
retn
xor esi esi
cmp [ rwxdata ] esi
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
mov eax [ ebp + 0x14 ]
mov [ eax ] esi
and eax 0x308031f
mov [ ebp - 0x10 ] eax
stmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
test al al
jns r-xdata
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x1000
je r-xdata
or esi 0x2
movzx eax bx
mov ecx eax
mov esi 0xc00
and ecx esi
je r-xdata
or edx 0x80000
test eax 0x100
je r-xdata
or esi 0x1
and eax edi
je r-xdata
cmp ecx 0x400
je r-xdata
mov ecx eax
mov edi 0x6000
and ecx edi
je r-xdata
or esi 0x80000
or edx 0x20000
cmp eax 0x200
jne r-xdata
or edx 0x100
cmp ecx 0x800
je r-xdata
mov ebx 0x8040
and eax ebx
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
and eax [ ebp + 0xc ]
not ebx
and ebx edx
or ebx eax
cmp ebx edx
je r-xdata
or edx 0x40000
movzx eax bx
test eax 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp ecx esi
jne r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] ebx
mov eax [ ebp + 0xc ]
call sub_427af8
movzx eax ax
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fwait
fnstcw [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
xor ebx ebx
test dl 0x1
je r-xdata
or edx edi
jmp r-xdata
call sub_427c69
push eax
mov [ ebp + 0x10 ] eax
call sub_429ab4
pop ecx
stmxcsr [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx edi
jne r-xdata
test dl 0x4
je r-xdata
push 0x10
pop ebx
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test dl 0x8
je r-xdata
or ebx 0x8
test ecx 0x400
je r-xdata
or edx 0x8
test dl 0x10
je r-xdata
or ebx 0x4
test ecx 0x800
je r-xdata
or edx 0x4
test dl 0x20
je r-xdata
or ebx 0x2
test ecx 0x1000
je r-xdata
or edx 0x2
test dl 0x2
je r-xdata
or ebx 0x1
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
movzx ecx dx
mov eax ecx
and eax esi
je r-xdata
or ebx 0x80000
mov eax ecx
and eax edi
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
and ecx ebx
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or ebx 0x20000
cmp ecx 0x200
jne r-xdata
or ebx 0x100
cmp eax 0x800
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or ebx 0x40000
test edx 0x1000
je r-xdata
or ebx 0x10000
jmp r-xdata
or ebx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax edi
jne r-xdata
or ebx edi
jmp r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_42846d
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x4 ]
mov bx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
movzx eax bx
test eax 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rwxdata ] esi
je r-xdata
mov ebx eax
call sub_427af8
movzx eax ax
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_427c69
push eax
mov [ ebp - 0xc ] eax
call sub_429ab4
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_42877f
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
and edi 0xfff7ffff
fwait
fnstcw [ ebp + 0xc ]
mov bx [ ebp + 0xc ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
je r-xdata
or edx 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov eax edi
not eax
mov ecx edi
and ecx [ ebp + 0x8 ]
and eax edx
or eax ecx
mov [ ebp - 0x10 ] eax
cmp eax edx
je r-xdata
or edx 0x40000
movzx eax bx
test eax 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rwxdata ] esi
je r-xdata
mov ebx eax
call sub_427af8
movzx eax ax
mov [ ebp - 0x4 ] eax
fldcw [ ebp - 0x4 ]
fwait
fnstcw [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
or edx 0x300
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov edi 0x6000
and ecx edi
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov ebx 0x8040
and eax ebx
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov eax edx
mov [ ebp - 0x10 ] edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_427c69
push eax
mov [ ebp - 0x8 ] eax
call sub_429ab4
pop ecx
stmxcsr [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
xor eax eax
test dl dl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx edi
jne r-xdata
or edx 0x300
jmp r-xdata
test edx 0x200
je r-xdata
push 0x10
pop eax
mov ecx eax
xor ecx [ ebp - 0x10 ]
or eax [ ebp - 0x10 ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test edx 0x400
je r-xdata
or eax 0x8
or eax 0x80000000
test edx 0x800
je r-xdata
or eax 0x4
test edx 0x1000
je r-xdata
or eax 0x2
mov esi 0x100
test esi edx
je r-xdata
or eax 0x1
mov ecx edx
and ecx edi
je r-xdata
or eax 0x80000
and edx ebx
sub edx 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or eax 0x2000000
sub edx 0x7fc0
je r-xdata
or eax esi
cmp ecx 0x4000
je r-xdata
or eax 0x3000000
jmp r-xdata
sub edx 0x40
jne r-xdata
or eax 0x200
jmp r-xdata
cmp ecx edi
jne r-xdata
or eax 0x1000000
jmp r-xdata
or eax 0x300
jmp r-xdata
sub_428aab
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fldz
mov eax [ ebp + 0x8 ]
fstp [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
xor eax [ ebp + 0xc ]
and eax 0x7fffffff
xor eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
leave
retn
sub_428ad3
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fldz
mov eax [ ebp + 0x8 ]
fstp [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov ecx eax
not ecx
xor ecx eax
and ecx 0x7fffffff
not eax
xor ecx eax
mov [ ebp - 0x4 ] ecx
fld [ ebp - 0x8 ]
leave
retn
sub_428b1a
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push edi
mov esi 0xffff
push esi
push 0x133f
call sub_429a13
fld [ ebp + 0x8 ]
pop ecx
pop ecx
movzx ecx [ ebp + 0xe ]
mov edi eax
mov eax 0x7ff0
and ecx eax
cmp cx ax
jne r-xdata
fldz
fucompp
fnstsw ax
test ah 0x44
jpe r-xdata
push ecx
push ecx
fstp [ esp ]
call sub_429042
pop ecx
pop ecx
test eax eax
jle r-xdata
fld [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_4290a8
mov eax [ ebp - 0x4 ]
fstp st0
dec eax
mov [ ebp + 0xc ] eax
fild [ ebp + 0xc ]
push esi
push edi
fstp [ ebp + 0x8 ]
call sub_429a13
add esp 0x14
fld [ rwxdata ]
push edi
sub esp 0x10
fchs
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x25
push 0x4
jmp r-xdata
fld [ ebp + 0x8 ]
push edi
fadd [ r--data ]
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x25
push 0x8
cmp eax 0x2
jle r-xdata
call sub_42984e
add esp 0x1c
jmp r-xdata
pop edi
pop esi
leave
retn
push esi
push edi
call sub_429a13
pop ecx
pop ecx
jmp r-xdata
cmp eax 0x3
jne r-xdata
fld [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
push edi
push ecx
push ecx
fstp [ esp ]
push 0x25
call sub_429798
add esp 0x10
jmp r-xdata
sub_428c03
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
fldz
push ebx
push esi
fstp [ ebp - 0xc ]
push edi
mov esi 0xffff
push esi
push 0x133f
call sub_429a13
mov edi [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
movzx eax [ ebp + 0xe ]
pop ecx
pop ecx
mov ecx 0x7ff0
and eax ecx
cmp ax cx
je r-xdata
mov bx [ ebp + 0xe ]
mov eax 0x7ff8
mov esi eax
and bx si
mov esi ecx
cmp bx si
jne r-xdata
movzx eax [ ebp + 0x16 ]
and eax ecx
mov ebx ecx
cmp ax bx
jne r-xdata
mov si [ ebp + 0x16 ]
mov edi eax
and si di
cmp si cx
jne r-xdata
test edi 0x7ffff
jne r-xdata
fld [ ebp + 0x10 ]
fld st0
fld [ ebp + 0x8 ]
fld st0
fucomp st2
fnstsw ax
fstp st1
test ah 0x44
jpe r-xdata
cmp bx ax
je r-xdata
test [ ebp + 0x14 ] 0x7ffff
jne r-xdata
push [ ebp - 0x4 ]
fld [ ebp + 0x8 ]
fadd [ ebp + 0x10 ]
sub esp 0x18
fstp [ esp + 0x10 ]
fld [ ebp + 0x10 ]
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x26
push 0x8
test edx edx
jne r-xdata
fld st0
fldz
fld st0
fucomp st2
fnstsw ax
fstp st1
test ah 0x44
jpe r-xdata
push esi
fstp st0
push [ ebp - 0x4 ]
fstp st0
call sub_429a13
fld [ ebp + 0x8 ]
pop ecx
pop ecx
jmp r-xdata
push [ ebp - 0x4 ]
fld [ ebp + 0x10 ]
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x26
call sub_4297ed
add esp 0x18
cmp si ax
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st2
mov [ ebp - 0xc ] 0x1
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov edi [ ebp + 0xc ]
mov esi 0xffff
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
fxch st2
fcom st1
fnstsw ax
test ah 0x5
jpo r-xdata
mov [ ebp - 0x8 ] 0x80000000
and [ ebp - 0x8 ] 0x0
jmp r-xdata
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st2
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
fstp st2
lea eax [ edx - 0x1 ]
fstp st0
mov [ ebp - 0xc ] eax
fstp st0
mov [ ebp - 0x8 ] edi
test edx edx
jne r-xdata
fxch st2
fxch st2
fcomp st1
fnstsw ax
test ah 0x41
jne r-xdata
fxch st2
fcom st1
fnstsw ax
test ah 0x41
je r-xdata
fxch st2
mov edx [ ebp - 0x8 ]
mov edi edx
shr edi 0x10
test ecx edi
jne r-xdata
dec edi
fstp st0
fstp st0
fcompp
fnstsw ax
test ah 0x41
jne r-xdata
fstp st2
fstp st0
fstp st0
fxch st2
cmp edx 0x7ff00000
jne r-xdata
test edx 0xfffff
jne r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
inc edi
jmp r-xdata
cmp edx 0xfff00000
jne r-xdata
test eax eax
je r-xdata
fld [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_4290a8
mov eax [ ebp - 0x8 ]
add esp 0xc
add eax 0x600
push eax
push ecx
push ecx
fstp [ esp ]
call sub_428fa6
add esp 0xc
push [ ebp - 0x4 ]
sub esp 0x18
fstp [ esp + 0x10 ]
fld [ ebp + 0x10 ]
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x26
push 0x12
jmp r-xdata
test eax eax
je r-xdata
lea eax [ edx + 0x1 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] edi
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] edi
jmp r-xdata
push esi
push [ ebp - 0x4 ]
call sub_429a13
fld [ ebp - 0xc ]
pop ecx
pop ecx
jmp r-xdata
test eax eax
jne r-xdata
fld [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_4290a8
mov eax [ ebp - 0x8 ]
add esp 0xc
add eax 0xfffffa00
push eax
push ecx
push ecx
fstp [ esp ]
call sub_428fa6
add esp 0xc
push [ ebp - 0x4 ]
sub esp 0x18
fstp [ esp + 0x10 ]
fld [ ebp + 0x10 ]
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x26
push 0x11
jmp r-xdata
call sub_429918
add esp 0x24
jmp r-xdata
sub_428ed1
mov edi edi
push ebp
mov ebp esp
mov ax [ ebp + 0xe ]
mov ecx 0x7ff8
mov edx ecx
and ax dx
add edx 0xfffffff8
cmp ax dx
jne r-xdata
cmp ax cx
jne r-xdata
test [ ebp + 0xc ] 0x7ffff
jne r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
sub_428f09
mov edi edi
push ebp
mov ebp esp
mov dx [ ebp + 0xe ]
mov eax 0x7ff0
mov ecx eax
and dx cx
cmp dx ax
jne r-xdata
movzx ecx [ ebp + 0xe ]
and ecx 0x8000
test dx dx
jne r-xdata
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_429042
dec eax
pop ecx
pop ecx
je r-xdata
fld [ ebp + 0x8 ]
fldz
fucompp
fnstsw ax
test ah 0x44
mov eax ecx
jpe r-xdata
test [ ebp + 0xc ] 0xfffff
jne r-xdata
mov eax 0x200
pop ebp
retn
dec eax
je r-xdata
neg eax
sbb eax eax
and eax 0xffffff08
add eax 0x100
pop ebp
retn
neg eax
sbb eax eax
and eax 0xffffffe0
add eax 0x40
pop ebp
retn
mov eax ecx
neg eax
sbb eax eax
and eax 0xffffff90
sub eax 0xffffff80
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x4
dec eax
je r-xdata
push 0x2
jmp r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
sub_428fa6
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x10 ]
fld [ ebp + 0x8 ]
movzx ecx [ ebp + 0xe ]
fstp [ ebp - 0x8 ]
add eax 0x3fe
shl eax 0x4
and ecx 0x800f
or eax ecx
mov [ ebp - 0x2 ] ax
fld [ ebp - 0x8 ]
leave
retn
sub_428fec
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0xe ]
fld [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
shr eax 0x4
and eax 0x7ff
lea eax [ eax + ecx - 0x3fe ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_428fa6
add esp 0xc
pop ebp
retn
sub_42901a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
movzx ecx [ ebp + 0xe ]
fld [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
fstp [ ebp - 0x8 ]
shl eax 0x4
and ecx 0x800f
or eax ecx
mov [ ebp - 0x2 ] ax
fld [ ebp - 0x8 ]
leave
retn
sub_429042
mov edi edi
push ebp
mov ebp esp
xor edx edx
cmp [ ebp + 0xc ] 0x7ff00000
jne r-xdata
cmp [ ebp + 0xc ] 0xfff00000
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
mov cx [ ebp + 0xe ]
mov eax 0x7ff8
push esi
mov esi eax
and cx si
pop esi
cmp cx ax
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
mov eax 0x7ff0
cmp cx ax
jne r-xdata
push 0x3
jmp r-xdata
push 0x2
xor eax eax
pop ebp
retn
test [ ebp + 0xc ] 0x7ffff
jne r-xdata
pop eax
pop ebp
retn
push 0x4
jmp r-xdata
cmp [ ebp + 0x8 ] edx
je r-xdata
sub_4290a8
mov edi edi
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
fldz
fld st0
fucomp st2
fnstsw ax
fstp st1
test ah 0x44
jpe r-xdata
movzx eax [ ebp + 0xe ]
xor ecx ecx
test eax 0x7ff0
jne r-xdata
xor edx edx
jmp r-xdata
push ecx
fstp st0
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_428fa6
movzx edx [ ebp + 0xe ]
shr edx 0x4
and edx 0x7ff
add esp 0xc
sub edx 0x3fe
test [ ebp + 0xc ] 0xfffff
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] edx
pop ebp
retn
fcomp [ ebp + 0x8 ]
mov edx 0xfffffc03
fnstsw ax
test ah 0x41
jne r-xdata
cmp [ ebp + 0x8 ] ecx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
test [ ebp + 0xe ] 0x10
je r-xdata
shl [ ebp + 0xc ] 0x1
test [ ebp + 0x8 ] 0x80000000
je r-xdata
push esi
mov esi 0xffef
and [ ebp + 0xe ] si
pop esi
cmp eax ecx
je r-xdata
shl [ ebp + 0x8 ] 0x1
dec edx
or [ ebp + 0xc ] 0x1
fld [ ebp + 0x8 ]
push ecx
push ecx
push ecx
fstp [ esp ]
call sub_428fa6
add esp 0xc
jmp r-xdata
mov eax 0x8000
or [ ebp + 0xe ] ax
sub_42916b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cl [ ebp + 0x10 ]
push ebx
push esi
push edi
xor edi edi
mov [ eax + 0x4 ] edi
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ eax + 0x8 ] edi
mov eax [ ebp + 0x8 ]
inc ebx
mov [ eax + 0xc ] edi
test cl 0x10
je r-xdata
test cl 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] ebx
mov [ ebp + 0x10 ] 0xc000008f
test bl cl
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x2
mov [ ebp + 0x10 ] 0xc0000093
test cl 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x4
mov [ ebp + 0x10 ] 0xc0000091
test cl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x8
mov [ ebp + 0x10 ] 0xc000008e
mov esi [ ebp + 0xc ]
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shl ecx 0x4
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x10
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
add ecx ecx
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x8
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x1
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x4
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x3
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x2
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x5
not ecx
xor ecx [ eax + 0x8 ]
and ecx ebx
xor [ eax + 0x8 ] ecx
call sub_4299f2
test bl al
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x10
mov [ ebp + 0x10 ] 0xc0000090
test al 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x10
test al 0x8
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x8
test al 0x10
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x4
test al 0x20
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x2
mov eax [ esi ]
mov ecx 0xc00
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] ebx
mov eax [ ebp + 0x8 ]
and [ eax ] 0xfffffffc
cmp eax 0x400
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xffffffeb
or ecx 0x8
cmp eax 0x200
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xfffffffd
or ecx ebx
jmp r-xdata
cmp eax 0x800
je r-xdata
mov ecx [ eax + 0x20 ]
and ecx 0xffffffe3
or ecx 0x2
mov [ eax + 0x20 ] ecx
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x60 ]
and ecx 0xffffffe3
or ecx 0x2
mov [ eax + 0x60 ] ecx
fld [ edi ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x50 ]
and [ eax + 0x20 ] 0xffffffe1
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
and [ eax + 0x60 ] 0xffffffe1
fld [ edi ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x50 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xffffffe7
or ecx 0x4
jmp r-xdata
cmp eax ecx
jne r-xdata
mov [ eax ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xfffffffe
or ecx 0x2
cmp eax ecx
jne r-xdata
test [ ecx + 0x8 ] 0x8
je r-xdata
and [ esi ] 0xfffffffe
call sub_429a02
lea eax [ ebp + 0x8 ]
push eax
push ebx
push 0x0
push [ ebp + 0x10 ]
call [ RaiseException@IAT ]
mov ecx [ ebp + 0x8 ]
test [ ecx + 0x8 ] 0x10
je r-xdata
mov [ eax ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
shl ecx 0x5
xor ecx [ eax ]
and ecx 0x1ffe0
xor [ eax ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x20 ] ebx
cmp [ ebp + 0x20 ] edi
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x1c ]
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0xffffffe3
jmp r-xdata
mov eax [ esi ]
mov ecx 0x300
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax ] 0x3
jmp r-xdata
test [ ecx + 0x8 ] 0x4
je r-xdata
and [ esi ] 0xfffffffb
test [ ecx + 0x8 ] 0x2
je r-xdata
and [ esi ] 0xfffffff7
test [ ecx + 0x8 ] bl
je r-xdata
and [ esi ] 0xffffffef
mov eax [ ecx ]
and eax 0x3
xor ebx ebx
sub eax ebx
mov edx 0xfffff3ff
je r-xdata
and [ esi ] 0xffffffdf
and [ esi ] edx
dec eax
je r-xdata
mov eax [ esi ]
and eax edx
or eax 0x300
dec eax
je r-xdata
mov eax [ esi ]
and eax 0xfffff7ff
or eax 0x400
jmp r-xdata
dec eax
je r-xdata
fld [ ecx + 0x50 ]
fstp [ edi ]
fld [ ecx + 0x50 ]
fstp [ edi ]
jmp r-xdata
mov eax [ esi ]
and eax edx
or eax 0x200
jmp r-xdata
dec eax
jne r-xdata
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
and eax 0xfffffbff
or eax 0x800
dec eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov [ esi ] eax
cmp [ ebp + 0x20 ] ebx
je r-xdata
and [ esi ] edx
jmp r-xdata
mov eax [ ecx ]
shr eax 0x2
and eax 0x7
sub eax ebx
je r-xdata
or [ esi ] 0xc00
jmp r-xdata
sub_429447
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42916b
add esp 0x1c
pop ebp
retn
sub_42946a
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42916b
add esp 0x1c
pop ebp
retn
sub_42948d
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi eax
and esi 0x1f
inc ebx
mov [ ebp - 0x4 ] esi
test al 0x8
je r-xdata
test al 0x4
je r-xdata
test [ ebp + 0x10 ] bl
je r-xdata
test bl al
je r-xdata
test [ ebp + 0x10 ] 0x4
je r-xdata
push ebx
call sub_429a3e
pop ecx
and esi 0xfffffff7
jmp r-xdata
test al 0x2
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
push 0x4
call sub_429a3e
pop ecx
and esi 0xfffffffb
jmp r-xdata
test [ ebp + 0x8 ] 0x10
je r-xdata
test [ ebp + 0x10 ] 0x10
je r-xdata
push 0x8
call sub_429a3e
mov eax [ ebp + 0x10 ]
pop ecx
mov ecx 0xc00
and eax ecx
je r-xdata
xor eax eax
test esi esi
pop esi
sete al
pop ebx
leave
retn
test [ ebp + 0x10 ] 0x20
je r-xdata
xor esi esi
test al 0x10
je r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x400
je r-xdata
push 0x20
call sub_429a3e
pop ecx
and esi 0xffffffef
push edi
mov edi [ ebp + 0xc ]
fld [ edi ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov esi ebx
fld [ rwxdata ]
fld [ rwxdata ]
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x800
je r-xdata
mov esi ebx
fld [ edi ]
lea eax [ ebp - 0x8 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_4290a8
mov ecx [ ebp - 0x8 ]
fstp [ ebp - 0x14 ]
add ecx 0xfffffa00
add esp 0xc
cmp ecx 0xfffffbce
jge r-xdata
fstp [ ecx ]
fld [ rwxdata ]
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpo r-xdata
cmp eax ecx
jne r-xdata
and [ ebp - 0x4 ] 0xfffffffd
mov esi [ ebp - 0x4 ]
push 0x10
call sub_429a3e
pop ecx
fldz
fcomp [ ebp - 0x14 ]
fnstsw ax
test ah 0x41
jne r-xdata
fld [ ebp - 0x14 ]
mov esi ebx
fmul [ r--data ]
jmp r-xdata
fld [ rwxdata ]
jmp r-xdata
and esi 0xfffffffe
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
fld [ rwxdata ]
test ah 0x5
jpo r-xdata
xor edx edx
mov edx ebx
jmp r-xdata
fstp [ ebp - 0x14 ]
fchs
jmp r-xdata
test edx edx
je r-xdata
sub eax ecx
mov eax [ ebp - 0xe ]
and eax 0xf
or eax 0x10
mov [ ebp - 0xe ] ax
mov eax 0xfffffc03
cmp ecx eax
jge r-xdata
pop edi
test esi esi
je r-xdata
fld [ ebp - 0x14 ]
fstp [ edi ]
jmp r-xdata
fld [ ebp - 0x14 ]
fchs
shr [ ebp - 0x14 ] 0x1
test [ ebp - 0x10 ] bl
je r-xdata
test esi esi
jne r-xdata
shr [ ebp - 0x10 ] 0x1
dec eax
jne r-xdata
or [ ebp - 0x14 ] 0x80000000
mov esi ebx
test [ ebp - 0x14 ] bl
je r-xdata
sub_429671
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x1
je r-xdata
call sub_40de77
mov [ eax ] 0x21
jle r-xdata
pop ebp
retn
cmp [ ebp + 0x8 ] 0x3
jg r-xdata
call sub_40de77
mov [ eax ] 0x22
pop ebp
retn
sub_42969e
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + rwxdata ]
pop ebp
retn
inc eax
cmp eax 0x1d
jl r-xdata
mov ecx [ eax * 8 + rwxdata ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
xor eax eax
pop ebp
retn
sub_4296c4
mov edi edi
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
test al 0x20
je r-xdata
test al 0x8
je r-xdata
push 0x5
jmp r-xdata
test al 0x4
je r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
test al 0x1
je r-xdata
push 0x2
jmp r-xdata
movzx eax al
and eax 0x2
add eax eax
pop ebp
retn
push 0x3
sub_4296f8
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
xor eax eax
mov eax [ eax * 8 + rwxdata ]
jmp r-xdata
inc eax
cmp eax 0x1d
jl r-xdata
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
mov ecx [ eax * 8 + rwxdata ]
cmp ecx [ ebp + 0xc ]
je r-xdata
xor eax eax
push 0xffff
push [ ebp + 0x28 ]
call sub_429a13
push [ ebp + 0x8 ]
call sub_429671
fld [ ebp + 0x20 ]
add esp 0xc
leave
retn
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x24 ]
push 0xffff
push [ ebp + 0x28 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] eax
call sub_429a13
lea eax [ ebp - 0x20 ]
push eax
call sub_428a94
add esp 0xc
test eax eax
jne r-xdata
fld [ ebp - 0x8 ]
pop esi
leave
retn
push esi
call sub_429671
pop ecx
sub_429798
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
call sub_40de77
push 0xffff
push [ ebp + 0x14 ]
mov [ eax ] 0x21
call sub_429a13
fld [ ebp + 0xc ]
pop ecx
pop ecx
pop ebp
retn
push [ ebp + 0x14 ]
fld [ ebp + 0xc ]
sub esp 0x18
fstp [ esp + 0x10 ]
fldz
fstp [ esp + 0x8 ]
fld [ ebp + 0xc ]
fstp [ esp ]
push [ ebp + 0x8 ]
push 0x1
call sub_4296f8
add esp 0x24
pop ebp
retn
sub_4297ed
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ rwxdata ] 0x0
fld [ ebp + 0xc ]
fadd [ ebp + 0x14 ]
fstp [ ebp - 0x8 ]
jne r-xdata
call sub_40de77
push 0xffff
push [ ebp + 0x1c ]
mov [ eax ] 0x21
call sub_429a13
fld [ ebp - 0x8 ]
pop ecx
pop ecx
leave
retn
push [ ebp + 0x1c ]
fld [ ebp - 0x8 ]
sub esp 0x18
fstp [ esp + 0x10 ]
fld [ ebp + 0x14 ]
fstp [ esp + 0x8 ]
fld [ ebp + 0xc ]
fstp [ esp ]
push [ ebp + 0x8 ]
push 0x1
call sub_4296f8
add esp 0x24
leave
retn
sub_42984e
mov edi edi
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x80
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push [ ebx + 0x20 ]
lea eax [ ebx + 0x18 ]
push eax
push [ ebx + 0x8 ]
call sub_42948d
add esp 0xc
test eax eax
jne r-xdata
push [ ebx + 0x8 ]
call sub_4296c4
add esp 0x4
cmp [ rwxdata ] 0x0
jne r-xdata
and [ ebp - 0x40 ] 0xfffffffe
push eax
lea eax [ ebx + 0x18 ]
push eax
lea eax [ ebx + 0x10 ]
push eax
push [ ebx + 0xc ]
lea eax [ ebx + 0x20 ]
push [ ebx + 0x8 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_42916b
add esp 0x1c
push eax
call sub_429671
mov [ esp ] 0xffff
push [ ebx + 0x20 ]
call sub_429a13
fld [ ebx + 0x18 ]
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebx + 0x20 ]
fld [ ebx + 0x18 ]
sub esp 0x18
fstp [ esp + 0x10 ]
fldz
fstp [ esp + 0x8 ]
fld [ ebx + 0x10 ]
fstp [ esp ]
push [ ebx + 0xc ]
push eax
call sub_4296f8
add esp 0x24
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_409b72
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
sub_429918
mov edi edi
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x80
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push [ ebx + 0x28 ]
lea eax [ ebx + 0x20 ]
push eax
push [ ebx + 0x8 ]
call sub_42948d
add esp 0xc
test eax eax
jne r-xdata
push [ ebx + 0x8 ]
call sub_4296c4
add esp 0x4
cmp [ rwxdata ] 0x0
jne r-xdata
mov eax [ ebp - 0x40 ]
fld [ ebx + 0x18 ]
and eax 0xffffffe3
fstp [ ebp - 0x50 ]
or eax 0x3
mov [ ebp - 0x40 ] eax
push 0x0
lea eax [ ebx + 0x20 ]
push eax
lea eax [ ebx + 0x10 ]
push eax
push [ ebx + 0xc ]
lea eax [ ebx + 0x28 ]
push [ ebx + 0x8 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_42916b
add esp 0x1c
push eax
call sub_429671
mov [ esp ] 0xffff
push [ ebx + 0x28 ]
call sub_429a13
fld [ ebx + 0x20 ]
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebx + 0x28 ]
fld [ ebx + 0x20 ]
sub esp 0x18
fstp [ esp + 0x10 ]
fld [ ebx + 0x18 ]
fstp [ esp + 0x8 ]
fld [ ebx + 0x10 ]
fstp [ esp ]
push [ ebx + 0xc ]
push eax
call sub_4296f8
add esp 0x24
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_409b72
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
sub_429a13
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstcw [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
not eax
and ax [ ebp - 0x4 ]
or ax cx
movzx eax ax
mov [ ebp + 0xc ] eax
fldcw [ ebp + 0xc ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_429a3e
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov cl [ ebp + 0x8 ]
test cl 0x1
je r-xdata
test cl 0x8
je r-xdata
fld [ rwxdata ]
fistp [ ebp + 0x8 ]
fwait
test cl 0x10
je r-xdata
fwait
fnstsw ax
fld [ rwxdata ]
fstp [ ebp - 0x8 ]
fwait
fwait
fnstsw ax
test cl 0x4
je r-xdata
fld [ rwxdata ]
fstp [ ebp - 0x8 ]
fwait
test cl 0x20
je r-xdata
fldz
fld1
fdivrp st1
fstp st0
fwait
leave
retn
fldpi
fstp [ ebp - 0x8 ]
fwait
sub_429ab4
push 0x8
push r--data
call sub_40cd00
xor eax eax
cmp [ rwxdata ] eax
je r-xdata
call sub_40cd45
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rwxdata ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_429b6e
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rwxdata ] esi
je r-xdata
mov eax esi
pop esi
pop ebp
retn
call sub_429a96
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
mov esi eax
mov eax [ ebp + 0xc ]
not eax
or eax 0xffff807f
and eax esi
or eax ecx
push eax
call sub_429ab4
pop ecx
sub_429bc0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x10 ]
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x404e
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
cmp [ ebp + 0xc ] ebx
jbe r-xdata
cmp [ eax + 0x8 ] ebx
jne r-xdata
mov [ ebp + 0x10 ] ebx
mov edi [ eax + 0x8 ]
test edi 0x8000
jne r-xdata
mov edx [ eax + 0x4 ]
mov [ ebp + 0x10 ] 0x1
cmp edx [ ebp - 0x18 ]
jae r-xdata
mov cx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax + 0xa ] cx
pop ebx
leave
retn
mov ecx [ eax + 0x4 ]
mov ecx [ eax ]
add [ ebp - 0x4 ] 0xfff0
mov edi edx
mov esi ecx
shr esi 0x10
shl edx 0x10
shr edi 0x10
or edx esi
shl ecx 0x10
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
cmp edi ebx
je r-xdata
mov [ eax + 0x8 ] edi
mov esi [ ebp - 0x14 ]
and [ ebp + 0x10 ] 0x0
lea ebx [ edi + esi ]
cmp ebx edi
jb r-xdata
mov esi [ ebp - 0x8 ]
and [ ebp + 0x10 ] 0x0
lea edi [ esi + 0x1 ]
cmp edi esi
jb r-xdata
cmp [ ebp + 0x10 ] 0x0
mov [ eax ] edx
je r-xdata
mov ebx [ eax ]
add [ ebp - 0x4 ] 0xffff
mov esi ecx
mov edx ebx
shr esi 0x1f
add edi edi
shr edx 0x1f
add ecx ecx
or edi esi
add ebx ebx
or ecx edx
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
test edi 0x8000
je r-xdata
mov [ ebp + 0x10 ] 0x1
cmp ebx esi
jae r-xdata
mov [ ebp + 0x10 ] 0x1
cmp edi 0x1
jae r-xdata
add ecx [ ebp - 0x10 ]
and [ ebp - 0x8 ] 0x0
mov edi ebx
add ecx ecx
mov esi edx
shr edi 0x1f
or ecx edi
shr esi 0x1f
add ebx ebx
add edx edx
or ebx esi
mov [ eax + 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
movsx esi [ ecx ]
lea ecx [ edx + esi ]
mov [ ebp - 0x18 ] esi
cmp ecx edx
jb r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] ebx
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] edi
je r-xdata
mov [ ebp - 0x8 ] 0x1
cmp ecx esi
jae r-xdata
dec [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
ja r-xdata
lea ecx [ ebx + 0x1 ]
xor edx edx
cmp ecx ebx
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
mov [ eax ] ecx
je r-xdata
mov ecx [ eax ]
mov esi eax
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx ecx
lea edi [ ecx + ecx ]
shr edx 0x1f
lea ecx [ ebx + ebx ]
or ecx edx
mov edx [ ebp + 0x10 ]
and [ ebp + 0x10 ] 0x0
mov esi ebx
mov ebx ecx
mov [ ebp - 0x8 ] edi
shr esi 0x1f
add edx edx
or edx esi
mov esi [ ebp - 0x8 ]
add ecx ecx
shr edi 0x1f
or ecx edi
mov edi ecx
mov [ ebp - 0x8 ] ecx
lea ecx [ edx + edx ]
mov edx [ ebp - 0x18 ]
add esi esi
shr ebx 0x1f
or ecx ebx
add edx esi
mov [ eax ] esi
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ecx
cmp edx esi
jb r-xdata
xor ebx ebx
xor edx edx
inc edx
cmp ecx 0x1
jae r-xdata
mov ecx [ ebp - 0xc ]
inc ecx
mov [ ebp + 0x10 ] ecx
mov [ eax + 0x8 ] ecx
mov ebx ecx
mov [ eax + 0x4 ] ecx
test edx edx
je r-xdata
sub_429da4
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push edi
mov esi 0xffff
push esi
push 0x133f
call sub_429a13
fld [ ebp + 0x8 ]
pop ecx
pop ecx
movzx ecx [ ebp + 0xe ]
mov edi eax
mov eax 0x7ff0
and ecx eax
cmp cx ax
jne r-xdata
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
push ecx
push ecx
fstp [ esp ]
call sub_429042
pop ecx
pop ecx
test eax eax
jle r-xdata
push esi
push edi
call sub_429a13
pop ecx
pop ecx
jmp r-xdata
fld [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_4290a8
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x4 ]
add esp 0xc
test eax eax
jns r-xdata
fld [ ebp + 0x8 ]
push edi
fadd [ r--data ]
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
push 0x8
cmp eax 0x2
jle r-xdata
fld [ ebp + 0x8 ]
mov edx 0x7fffffff
sub edx eax
cmp ecx edx
jg r-xdata
mov edx 0x80000000
sub edx eax
cmp ecx edx
jl r-xdata
pop edi
pop esi
leave
retn
cmp eax 0x3
jne r-xdata
push edi
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ rwxdata ]
fstp [ esp ]
call sub_428aab
fstp [ esp + 0x8 ]
fild [ ebp + 0x10 ]
fstp [ esp ]
push ecx
push ecx
add eax ecx
cmp eax 0xa00
jle r-xdata
fmul [ r--data ]
jmp r-xdata
fild [ ebp + 0x10 ]
push edi
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
call sub_4297ed
add esp 0x18
jmp r-xdata
call sub_429918
add esp 0x24
jmp r-xdata
cmp eax 0x400
jle r-xdata
cmp eax 0xfffff603
jge r-xdata
add eax 0xfffffa00
push eax
push ecx
push ecx
fstp [ esp ]
call sub_428fa6
add esp 0xc
push edi
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ esp + 0x8 ]
jmp r-xdata
cmp eax 0xfffffc03
jge r-xdata
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
push 0x11
jmp r-xdata
push eax
push ecx
push ecx
fstp [ esp ]
call sub_428fa6
push esi
fstp [ ebp + 0x8 ]
push edi
call sub_429a13
add esp 0x14
add eax 0x600
push eax
push ecx
push ecx
fstp [ esp ]
call sub_428fa6
add esp 0xc
jmp r-xdata
push edi
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
push 0x12
jmp r-xdata
sub_42a380
sub esp 0x10
push 0x18
call sub_40a28e
add esp 0x4
test eax eax
je r-xdata
lea eax [ esp ]
push eax
lea ecx [ esp + 0x8 ]
mov [ esp + 0x4 ] 0x0
call sub_409c1a
push r--data
lea ecx [ esp + 0x8 ]
push ecx
mov [ esp + 0xc ] r--data
call sub_40bc3c
int3
mov [ rwxdata ] eax
mov [ eax ] eax
mov eax [ rwxdata ]
mov [ eax + 0x4 ] eax
mov eax [ rwxdata ]
mov [ eax + 0x8 ] eax
mov ecx [ rwxdata ]
mov al 0x1
mov [ ecx + 0x14 ] al
mov edx [ rwxdata ]
push sub_42a4a0
mov [ edx + 0x15 ] al
call sub_40a623
add esp 0x4
add esp 0x10
retn
sub_42a400
sub esp 0x10
push 0x18
call sub_40a28e
add esp 0x4
test eax eax
je r-xdata
lea eax [ esp ]
push eax
lea ecx [ esp + 0x8 ]
mov [ esp + 0x4 ] 0x0
call sub_409c1a
push r--data
lea ecx [ esp + 0x8 ]
push ecx
mov [ esp + 0xc ] r--data
call sub_40bc3c
int3
mov [ rwxdata ] eax
mov [ eax ] eax
mov eax [ rwxdata ]
mov [ eax + 0x4 ] eax
mov eax [ rwxdata ]
mov [ eax + 0x8 ] eax
mov ecx [ rwxdata ]
mov al 0x1
mov [ ecx + 0x14 ] al
mov edx [ rwxdata ]
push sub_42a500
mov [ edx + 0x15 ] al
call sub_40a623
add esp 0x4
add esp 0x10
retn
sub_42a4a0
push 0xffffffff
push sub_42a31a
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov [ esp + 0x14 ] 0x0
mov eax [ rwxdata ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ esp + 0x10 ]
mov eax rwxdata
call sub_407470
mov eax [ rwxdata ]
push eax
call sub_40a181
add esp 0x4
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn
sub_42a500
push 0xffffffff
push sub_42a34a
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov [ esp + 0x14 ] 0x0
mov eax [ rwxdata ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ esp + 0x10 ]
mov eax rwxdata
call sub_407470
mov eax [ rwxdata ]
push eax
call sub_40a181
add esp 0x4
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn
sub_401030
mov [ ecx ] r--data
jmp sub_409c76
sub_401070
retn
sub_401080
retn
sub_401090
retn
sub_4010a0
retn
sub_4010b0
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
retn
sub_4010c0
mov [ eax ] 0x0
retn
sub_4010d0
retn
sub_4010e0
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
retn
sub_4010f0
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov ecx [ ecx ]
test ecx ecx
je r-xdata
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
mov [ eax ] edx
sub_401110
mov ecx [ ecx ]
cmp [ eax ] ecx
je r-xdata
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
mov [ eax ] edx
sub_401130
retn
sub_401140
test eax eax
je r-xdata
retn
mov eax [ eax ]
mov [ ecx ] eax
sub_401150
mov eax [ eax ]
test eax eax
jne r-xdata
mov eax [ eax ]
retn
retn
sub_401160
retn
sub_401170
retn
sub_4013a0
retn
sub_4013b0
retn
sub_4013f0
retn
sub_401400
retn
sub_401570
mov [ rwxdata ] eax
call sub_401180
mov eax 0x1
retn
sub_4016e0
push esi
mov esi eax
call sub_401920
mov eax [ esi ]
push eax
call sub_40a181
add esp 0x4
mov [ esi ] 0x0
pop esi
retn
sub_401720
mov ecx [ edx + 0x10 ]
add ecx [ edx + 0xc ]
mov edx [ edx ]
mov [ eax + 0x4 ] 0x0
mov [ eax ] edx
mov [ eax + 0x8 ] ecx
retn
j_sub_401920
jmp sub_401920
sub_401830
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call sub_40a181
add esp 0x4
sub_401860
mov eax [ eax ]
retn
sub_401900
retn
sub_401910
retn
sub_401990
mov eax [ esi ]
push eax
call sub_40a181
add esp 0x4
mov [ esi ] 0x0
retn
sub_401a00
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov [ eax + 0x8 ] edx
pop ebp
retn 0x4
mov ecx [ ecx ]
mov [ eax ] ecx
sub_401a30
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call sub_40a181
add esp 0x4
sub_401a60
retn
sub_401a70
push eax
call sub_40a181
pop ecx
retn
sub_401a80
xor eax eax
cmp [ ecx + 0x10 ] eax
sete al
retn
sub_401a90
mov eax [ ecx + 0x10 ]
test eax eax
je r-xdata
retn
dec eax
mov [ ecx + 0x10 ] eax
jne r-xdata
mov [ ecx + 0xc ] 0x0
sub_401ab0
push eax
call sub_40a181
pop ecx
retn
sub_401ac0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov [ eax + 0x8 ] edx
pop ebp
retn 0x4
mov ecx [ ecx ]
mov [ eax ] ecx
sub_401b30
retn
sub_401b40
push eax
call sub_40a181
pop ecx
retn
sub_401b50
test eax eax
je r-xdata
retn
mov eax [ eax ]
mov [ ecx ] eax
sub_401bb0
or eax 0xffffffff
retn
sub_401e60
retn
sub_401e70
retn
sub_401e80
retn
sub_401e90
retn
sub_401ea0
retn
sub_401f00
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_409d22
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_401f20
retn
sub_401fa0
retn
sub_401fb0
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
retn 0x4
sub_401fc0
retn
sub_402010
retn
sub_4020be
mov esi [ ebp + 0x8 ]
call sub_401920
push 0x0
push 0x0
call sub_40bc3c
int3
sub_4020d0
retn
sub_4021a2
mov esi [ ebp + 0x8 ]
call sub_401920
xor esi esi
push esi
push esi
call sub_40bc3c
int3
sub_402590
retn
sub_402661
mov esi [ ebp + 0x8 ]
call sub_401a30
xor esi esi
push esi
push esi
call sub_40bc3c
int3
sub_402680
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
sub_402690
retn
sub_4026a0
retn
sub_4026b0
test eax eax
je r-xdata
retn
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
sub_4026c0
retn
sub_4026d0
retn
sub_4028e0
mov ecx [ eax + 0x8 ]
mov eax [ edx + 0x8 ]
sub eax ecx
retn
sub_402930
mov edx [ ecx ]
mov [ eax ] edx
retn
sub_402940
test eax eax
je r-xdata
retn
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
sub_402b40
retn
sub_402b50
dec [ eax + 0x8 ]
retn
sub_402b60
mov [ eax ] ecx
retn
sub_402b70
or eax 0xffffffff
retn
sub_402b80
push r--data
call sub_4211c1
sub_402c20
dec [ eax + 0x8 ]
retn
sub_402c30
mov [ eax ] ecx
retn
sub_402c90
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0xc ]
call sub_403620
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
cmp edx [ eax + 0x8 ]
sete al
mov esp ebp
pop ebp
retn
sub_402e60
retn
sub_402e70
test eax eax
je r-xdata
retn
mov dl [ ecx ]
mov [ eax ] dl
sub_402eb0
test ecx ecx
je r-xdata
retn
push edi
xor eax eax
mov edi edx
[ edi ]
pop edi
sub_402ec0
retn
sub_402f30
test eax eax
je r-xdata
retn
mov dl [ ecx ]
mov [ eax ] dl
sub_402f40
mov ecx [ eax + 0x8 ]
xor eax eax
cmp ecx [ edx + 0x8 ]
setne al
retn
sub_402f50
mov ecx [ eax + 0x8 ]
xor eax eax
cmp ecx [ edx + 0x8 ]
sete al
retn
sub_403270
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0xc ]
call sub_403620
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
cmp edx [ eax + 0x8 ]
sete al
mov esp ebp
pop ebp
retn 0x4
sub_403350
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x1c ]
sub eax ecx
pop ebp
retn
sub_403360
add [ eax + 0x8 ] ecx
retn
sub_403570
retn
sub_403580
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
sub_4035c0
xor eax eax
retn
sub_4035d0
test ecx ecx
je r-xdata
retn
push edi
xor eax eax
mov edi edx
[ edi ]
pop edi
sub_4035e0
retn
sub_4035f0
test eax eax
je r-xdata
retn
mov dl [ ecx ]
mov [ eax ] dl
sub_403600
mov ecx [ edx ]
test ecx ecx
jne r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x4 ] ecx
retn
mov [ eax ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x4 ] ecx
retn
sub_403650
mov eax [ ecx + 0x8 ]
sub eax [ ecx ]
retn
sub_403660
mov eax [ ecx + 0x4 ]
sub eax [ ecx ]
retn
sub_403670
or eax 0xffffffff
retn
sub_4036b0
push r--data
call sub_4211c1
sub_4036c0
retn
sub_4036d0
inc [ eax + 0x4 ]
retn
sub_4036e0
dec [ eax + 0x4 ]
retn
sub_4036f0
mov ecx [ eax + 0x4 ]
xor eax eax
cmp ecx [ edx + 0x4 ]
setne al
retn
sub_403700
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
pop ebp
retn 0x4
sub_403710
inc [ eax + 0x4 ]
retn
sub_403720
dec [ eax + 0x4 ]
retn
sub_403730
mov ecx [ eax + 0x4 ]
xor eax eax
cmp ecx [ edx + 0x4 ]
sete al
retn
sub_403740
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
pop ebp
retn 0x4
sub_4037b0
xor eax eax
retn
sub_4037c0
xor eax eax
retn
sub_403900
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x1c ]
sub eax edx
add [ ecx ] eax
pop ebp
retn
sub_403910
add [ eax + 0x8 ] ecx
retn
sub_403920
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x1c ]
sub eax edx
add [ ecx ] eax
pop ebp
retn
sub_403a50
mov ecx [ eax + 0x8 ]
mov eax [ edx + 0x8 ]
sub eax ecx
retn
sub_403a90
push ebp
mov ebp esp
mov edx [ ecx ]
mov ecx [ ecx + 0x4 ]
add ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_403ab0
mov ecx [ eax + 0x4 ]
mov eax [ edx + 0x4 ]
sub eax ecx
retn
sub_403ac0
add [ eax + 0x4 ] ecx
retn
sub_403b00
mov ecx [ eax + 0x4 ]
mov eax [ edx + 0x4 ]
sub eax ecx
retn
sub_403b10
add [ eax + 0x4 ] ecx
retn
sub_403b20
mov dl [ ecx ]
push ebx
mov bl [ eax ]
mov [ ecx ] bl
mov [ eax ] dl
pop ebx
retn
sub_403b30
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x1c ]
sub eax edx
add [ ecx ] eax
pop ebp
retn
sub_403bd0
retn
sub_403be0
retn
sub_403bf0
push ebp
mov ebp esp
push eax
mov eax [ ebp + 0x8 ]
call sub_403ce0
add esp 0x4
pop ebp
retn
sub_403c10
push ebp
mov ebp esp
sub eax [ ebp + 0x8 ]
pop ebp
retn
sub_403c20
add [ eax ] ecx
retn
sub_403c30
retn
sub_403c40
xor eax eax
retn
sub_403c70
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
sub_403cd0
xor eax eax
retn
sub_403db0
push ebp
mov ebp esp
sub eax [ ebp + 0x8 ]
add [ ecx ] eax
pop ebp
retn
sub_403dc0
add [ eax ] ecx
retn
sub_403dd0
inc [ eax + 0x8 ]
retn
sub_403de0
inc [ eax + 0x8 ]
retn
sub_403df0
test eax eax
je r-xdata
retn
mov dl [ ecx ]
mov [ eax ] dl
sub_403e00
mov dl [ ecx ]
push ebx
mov bl [ eax ]
mov [ ecx ] bl
mov [ eax ] dl
pop ebx
retn
sub_403e10
retn
sub_403e20
test eax eax
je r-xdata
retn
mov dl [ ecx ]
mov [ eax ] dl
sub_403e30
lea edx [ esp + 0x4 ]
mov eax rwxdata
call sub_406ac0
mov ecx [ esp + 0x8 ]
mov [ eax ] ecx
retn
sub_403ec0
lea edx [ esp + 0x4 ]
mov eax rwxdata
call sub_406ac0
mov ecx [ esp + 0x8 ]
mov [ eax ] ecx
retn
sub_404040
push eax
call sub_403ee0
add esp 0x4
retn
sub_404050
mov edx ecx
mov [ eax ] cl
sar edx 0x8
sar ecx 0x10
mov [ eax + 0x1 ] dl
mov [ eax + 0x2 ] cl
retn
sub_404070
movzx eax [ ecx + 0x2 ]
movzx edx [ ecx + 0x1 ]
movzx ecx [ ecx ]
shl eax 0x8
or eax edx
shl eax 0x8
or eax ecx
retn
sub_404250
mov [ ecx ] r--data
retn
sub_404260
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40a181
add esp 0x4
sub_404280
mov cl [ esp + 0x4 ]
mov [ eax ] cl
retn 0x4
sub_404290
movzx eax [ eax ]
retn
sub_4042a0
mov cl [ esp + 0x4 ]
mov [ eax ] cl
mov [ eax + 0x1 ] 0x0
retn 0x4
sub_4042b0
movzx ecx [ eax + 0x1 ]
shl ecx 0x4
movzx eax [ ecx + rwxdata ]
retn
sub_4042c0
movzx ecx [ eax + 0x1 ]
shl ecx 0x4
movzx eax [ ecx + rwxdata ]
retn
sub_4042d0
movzx eax [ eax + 0x1 ]
retn
sub_404370
mov eax [ eax + 0x4 ]
retn
sub_4044f0
mov [ eax ] r--data
retn
sub_404ec0
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
retn
sub_4051c0
movzx ecx [ eax + 0x1 ]
movzx eax [ eax ]
imul eax eax 0x3fffc0
shl ecx 0x6
add ecx 0x2
add eax 0xffff
xor edx edx
div ecx
retn
sub_4051e0
cmp [ esp + 0x4 ] 0x0
je r-xdata
inc [ eax + 0x1 ]
mov cl [ eax + 0x1 ]
cmp cl 0xfe
jbe r-xdata
inc [ eax ]
retn 0x4
shr [ eax ] 0x1
shr cl 0x1
mov [ eax + 0x1 ] cl
sub_405200
cdq
and edx 0xf
add eax edx
sar eax 0x4
movzx eax [ eax * 2 + rwxdata ]
retn
sub_405710
mov ecx [ eax + 0x10 ]
push ecx
call sub_40afbf
pop ecx
retn
sub_406740
push r--data
call sub_40a820
add esp 0x4
push 0x1
call sub_40b328
int3
sub_406920
push esi
mov esi eax
call sub_405720
push esi
call sub_40a181
add esp 0x4
mov eax esi
pop esi
retn
j_sub_405720
jmp sub_405720
sub_406950
retn
sub_406bb0
mov edx [ ecx + 0x4 ]
mov [ eax ] edx
retn
sub_406c20
mov ecx [ eax ]
xor eax eax
cmp ecx [ edx ]
setne al
retn
sub_406c30
push edi
mov edi eax
xor eax eax
mov [ edi ] eax
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x8 ]
call sub_407050
mov eax edi
pop edi
retn 0x4
sub_406c50
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call sub_40a181
add esp 0x4
sub_406c80
mov ecx [ eax ]
lea eax [ ecx + edx * 2 ]
retn
sub_406cd0
mov ecx [ eax ]
push ecx
call sub_40afbf
pop ecx
retn
sub_406ce0
push esi
mov esi eax
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
call sub_407130
mov eax esi
pop esi
retn
sub_406d00
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call sub_40a181
add esp 0x4
sub_406d30
mov eax [ ecx + 0x4 ]
sub eax [ ecx ]
retn
sub_406d40
mov eax [ eax ]
add eax [ esp + 0x4 ]
retn 0x4
sub_406d50
mov eax [ eax ]
add eax [ esp + 0x4 ]
retn 0x4
sub_406d60
push esi
mov esi eax
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
call sub_407200
mov eax esi
pop esi
retn
sub_406d80
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call sub_40a181
add esp 0x4
sub_406db0
mov ecx [ eax + 0x4 ]
sub ecx [ eax ]
mov eax 0x55555556
imul ecx
mov eax edx
shr eax 0x1f
add eax edx
retn
sub_406dd0
lea eax [ eax + eax * 2 ]
add eax [ ecx ]
retn
sub_406e20
mov ecx [ eax ]
push ecx
call sub_40afbf
pop ecx
retn
sub_406e30
push esi
mov esi eax
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
call sub_407320
mov eax esi
pop esi
retn
sub_406e50
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call sub_40a181
add esp 0x4
sub_406e80
mov edx [ ecx ]
lea eax [ eax + eax * 2 ]
lea eax [ edx + eax * 4 ]
retn
sub_406ed0
mov ecx [ eax ]
push ecx
call sub_40afbf
pop ecx
retn
sub_406ee0
mov [ ecx ] 0x0
retn
sub_406ef0
dec ecx
js r-xdata
retn
xor dl dl
mov [ eax ] dl
mov [ eax + 0x1 ] dl
add eax 0x2
dec ecx
jns r-xdata
sub_406fb0
push ecx
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
push esi
push ecx
push edx
lea esi [ esp + 0xc ]
call sub_407470
pop esi
pop ecx
retn
sub_406fd0
mov ecx [ eax + 0x4 ]
push ecx
call sub_40a181
pop ecx
retn
sub_406fe0
add eax 0xc
retn
sub_406ff0
retn
sub_407000
mov ecx [ eax ]
cmp ecx [ edx ]
sbb eax eax
neg eax
retn
sub_407010
mov [ eax ] ecx
retn
sub_407020
mov eax [ eax ]
add eax 0xc
retn
sub_407030
mov ecx [ eax ]
xor eax eax
cmp ecx [ edx ]
sete al
retn
sub_407040
mov eax [ eax ]
retn
sub_4070d0
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call sub_40a181
add esp 0x4
sub_407100
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
retn 0x4
sub_407110
retn
sub_407120
retn
sub_4071a0
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call sub_40a181
add esp 0x4
sub_4071d0
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
retn 0x4
sub_4071e0
retn
sub_4071f0
retn
sub_4072c0
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call sub_40a181
add esp 0x4
sub_4072f0
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
retn 0x4
sub_407300
retn
sub_407310
retn
sub_4073f0
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call sub_40a181
add esp 0x4
sub_407420
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
retn 0x4
sub_407430
retn
sub_407440
retn
sub_407450
mov edx [ ecx ]
mov ecx [ esp + 0x4 ]
mov [ eax ] edx
mov edx [ ecx ]
mov [ eax + 0x4 ] edx
retn 0x4
sub_407460
mov edx [ ecx + 0x4 ]
mov ecx [ edx ]
mov [ eax ] ecx
retn
sub_4075d0
retn
sub_4075e0
push eax
call sub_40a181
pop ecx
retn
sub_4075f0
mov [ eax ] ecx
retn
sub_407600
mov eax [ eax ]
add eax 0xc
retn
sub_407610
mov edx [ ecx ]
mov [ eax ] edx
retn
sub_407620
mov edx [ ecx + 0x4 ]
mov [ eax ] edx
retn
sub_407630
mov eax [ ecx + 0x4 ]
sub eax [ ecx ]
sar eax 0x1
retn
sub_407670
retn
sub_4076e0
retn
sub_4076f0
push eax
call sub_40a181
pop ecx
retn
sub_407700
mov edx [ ecx ]
mov [ eax ] edx
retn
sub_407710
mov edx [ ecx + 0x4 ]
mov [ eax ] edx
retn
sub_407760
retn
sub_4077d0
retn
sub_4077e0
push eax
call sub_40a181
pop ecx
retn
sub_4077f0
mov edx [ ecx ]
mov [ eax ] edx
retn
sub_407800
mov edx [ ecx + 0x4 ]
mov [ eax ] edx
retn
sub_407850
retn
sub_4078f0
retn
sub_407900
push eax
call sub_40a181
pop ecx
retn
sub_407910
mov edx [ ecx ]
mov [ eax ] edx
retn
sub_407920
mov edx [ ecx + 0x4 ]
mov [ eax ] edx
retn
sub_407930
mov ecx [ eax + 0x4 ]
sub ecx [ eax ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
retn
sub_407990
retn
sub_407a30
retn
sub_407a40
push eax
call sub_40a181
pop ecx
retn
sub_407a50
mov edx [ ecx ]
mov ecx [ esp + 0x4 ]
mov [ eax ] edx
mov edx [ ecx ]
mov [ eax + 0x4 ] edx
retn 0x4
sub_407a60
mov edx [ ecx ]
mov ecx [ esp + 0x4 ]
lea edx [ edx + ecx * 2 ]
mov [ eax ] edx
retn 0x4
sub_407a70
mov edx [ ecx ]
add edx 0x1000000
mov [ eax ] edx
retn
sub_407a80
mov edx [ ecx ]
add edx 0xc00000
mov [ eax ] edx
retn
sub_407a90
mov edx [ ecx ]
add edx 0xc00
mov [ eax ] edx
retn
sub_407d70
mov eax [ eax + 0x4 ]
retn
sub_407d80
mov eax [ eax + 0x4 ]
add eax 0x4
retn
sub_407d90
add eax 0x14
retn
sub_407da0
add eax 0x15
retn
sub_407db0
retn
sub_407dc0
add eax 0x4
retn
sub_407dd0
add eax 0x8
retn
sub_407de0
retn 0x4
sub_407e80
mov [ eax ] ecx
retn
sub_407f3d
mov edx [ ebp - 0x14 ]
push edx
call sub_40a181
add esp 0x4
push 0x0
push 0x0
call sub_40bc3c
int3
sub_407f70
mov ecx [ esp + 0x4 ]
mov [ eax ] ecx
retn 0x4
sub_407f80
mov eax 0x7fffffff
retn
sub_407fc0
push r--data
call sub_4211c1
sub_408090
mov ecx [ esp + 0x4 ]
mov [ eax ] ecx
retn 0x4
sub_4080a0
or eax 0xffffffff
retn
sub_4080e0
push r--data
call sub_4211c1
sub_4081b7
mov edx [ ebp - 0x14 ]
push edx
call sub_40a181
add esp 0x4
push 0x0
push 0x0
call sub_40bc3c
int3
sub_4081f0
mov ecx [ esp + 0x4 ]
mov [ eax ] ecx
retn 0x4
sub_408200
mov eax 0x55555555
retn
sub_408240
push r--data
call sub_4211c1
sub_40831e
mov eax [ ebp - 0x14 ]
push eax
call sub_40a181
add esp 0x4
push 0x0
push 0x0
call sub_40bc3c
int3
sub_408360
mov ecx [ esp + 0x4 ]
mov [ eax ] ecx
retn 0x4
sub_408370
mov eax 0x15555555
retn
sub_4083c0
push r--data
call sub_4211c1
sub_408520
mov eax [ eax + 0x4 ]
add eax 0x8
retn
sub_408580
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
retn
lea esp [ esp ]
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_4085a0
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
retn
mov eax ecx
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_4085c0
retn 0x4
sub_408680
mov eax 0x7fffffff
retn
sub_4086e0
or eax 0xffffffff
retn
sub_408750
mov eax 0x55555555
retn
sub_4087c0
mov eax 0x15555555
retn
sub_4087d0
mov [ eax ] ecx
retn
sub_4087e0
lea edx [ ecx + ecx ]
add [ eax ] edx
retn
sub_4087f0
mov ecx [ eax ]
xor eax eax
cmp ecx [ edx ]
sete al
retn
sub_408800
mov [ eax ] ecx
retn
sub_408810
add [ eax ] 0x1000000
retn
sub_408820
mov ecx [ eax ]
xor eax eax
cmp ecx [ edx ]
sete al
retn
sub_408830
mov [ eax ] ecx
retn
sub_408840
add [ eax ] 0xc00000
retn
sub_408850
mov ecx [ eax ]
xor eax eax
cmp ecx [ edx ]
sete al
retn
sub_408860
mov [ eax ] ecx
retn
sub_408870
add [ eax ] 0xc00
retn
sub_408880
mov ecx [ eax ]
xor eax eax
cmp ecx [ edx ]
sete al
retn
sub_4088e0
retn
sub_4088f0
retn
sub_408900
retn
sub_408910
retn
sub_408b30
retn
sub_408b40
push ecx
mov eax [ esp ]
push eax
mov eax [ esp + 0xc ]
call sub_409530
add esp 0x8
retn
sub_408b60
test eax eax
je r-xdata
retn
push eax
mov eax [ esp + 0x8 ]
push 0x0
push eax
call sub_417380
add esp 0xc
sub_408b80
push ecx
mov eax [ esp ]
push eax
mov eax [ esp + 0xc ]
call sub_4095c0
add esp 0x8
retn
sub_408ba0
push ecx
mov eax [ esp ]
push eax
mov eax [ esp + 0xc ]
call sub_409610
add esp 0x8
retn
sub_408bc0
retn
sub_408c00
retn
sub_408c10
push esi
sub eax ecx
mov esi eax
push esi
push ecx
push edi
call sub_409e20
add esp 0xc
lea eax [ esi + edi ]
pop esi
retn
sub_408c30
retn
sub_408c40
cmp ecx esi
je r-xdata
retn
mov dx [ ecx ]
mov [ eax ] dx
mov dl [ ecx + 0x2 ]
mov [ eax + 0x2 ] dl
add ecx 0x3
add eax 0x3
cmp ecx esi
jne r-xdata
sub_408c60
retn
sub_408ca0
retn
sub_408cb0
retn
sub_408cc0
retn
sub_408cd0
retn
sub_408d30
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
call sub_409910
add esp 0x8
retn 0x4
sub_408d50
push esi
sub eax ecx
mov esi eax
mov eax [ esp + 0x8 ]
push esi
push ecx
push eax
call sub_409e20
add esp 0xc
add eax esi
pop esi
retn 0x4
sub_408d70
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x8 ]
call sub_409960
add esp 0x4
retn 0x4
sub_408d90
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
call sub_409980
add esp 0x8
retn 0x4
sub_409090
retn
sub_4090a0
mov eax [ eax + 0x8 ]
retn
sub_4093b0
mov [ eax ] 0x0
retn
sub_4093c0
mov eax esi
call sub_409400
mov eax esi
retn
sub_4093d0
mov eax 0x1fffffff
retn
sub_4093e0
mov eax esi
call sub_409400
mov eax esi
retn
sub_4093f0
mov [ eax ] 0x0
retn
sub_409460
mov edx [ ecx ]
mov ecx [ esp + 0x4 ]
mov [ eax ] edx
mov dl [ ecx ]
mov [ eax + 0x4 ] dl
retn 0x4
sub_409470
mov eax 0x1fffffff
retn
sub_409480
mov edx [ ecx ]
mov ecx [ esp + 0x4 ]
mov [ eax ] edx
mov dl [ ecx ]
mov [ eax + 0x4 ] dl
retn 0x4
sub_409490
retn
sub_409520
push ecx
mov al [ esp + 0x3 ]
pop ecx
retn
sub_409560
xor eax eax
retn
sub_409570
push ecx
mov al [ esp + 0x3 ]
pop ecx
retn
sub_409580
test eax eax
je r-xdata
retn
push eax
mov eax [ esp + 0x8 ]
push 0x0
push eax
call sub_417380
add esp 0xc
sub_4095a0
xor eax eax
retn
sub_4095b0
push ecx
mov al [ esp + 0x3 ]
pop ecx
retn
sub_4095f0
xor eax eax
retn
sub_409600
push ecx
mov al [ esp + 0x3 ]
pop ecx
retn
sub_409670
retn
sub_409680
push esi
sub eax ecx
mov esi eax
push esi
push ecx
push edi
call sub_409e20
add esp 0xc
lea eax [ esi + edi ]
pop esi
retn
sub_4096a0
retn
sub_4096b0
cmp ecx esi
je r-xdata
retn
mov dx [ ecx ]
mov [ eax ] dx
mov dl [ ecx + 0x2 ]
mov [ eax + 0x2 ] dl
add ecx 0x3
add eax 0x3
cmp ecx esi
jne r-xdata
sub_4096d0
retn
sub_409710
retn
sub_409720
push ecx
mov eax [ esp ]
push eax
mov eax [ esp + 0xc ]
push ecx
call sub_409910
add esp 0xc
retn
sub_409740
push esi
sub eax ecx
mov esi eax
mov eax [ esp + 0x8 ]
push esi
push ecx
push eax
call sub_409e20
add esp 0xc
add eax esi
pop esi
retn
sub_409760
push ecx
mov eax [ esp ]
push eax
mov eax [ esp + 0xc ]
call sub_409960
add esp 0x8
retn
sub_409780
push ecx
mov eax [ esp ]
push eax
mov eax [ esp + 0xc ]
push ecx
call sub_409980
add esp 0xc
retn
sub_4097a0
retn
sub_4097b0
mov edx [ ecx ]
mov ecx [ esp + 0x4 ]
mov [ eax ] edx
mov dl [ ecx ]
mov [ eax + 0x4 ] dl
retn 0x4
sub_4097c0
retn
sub_4097d0
retn
sub_409860
retn
sub_409870
test eax eax
je r-xdata
retn
mov dl [ esi ]
mov [ ecx ] dl
inc ecx
dec eax
jne r-xdata
sub_409880
test eax eax
je r-xdata
retn
mov dx [ ecx ]
mov [ eax ] dx
mov cl [ ecx + 0x2 ]
mov [ eax + 0x2 ] cl
sub_4098a0
retn
sub_4098b0
test eax eax
je r-xdata
retn
movq xmm0 [ ecx ]
movq [ eax ] xmm0
mov ecx [ ecx + 0x8 ]
mov [ eax + 0x8 ] ecx
sub_4098d0
retn
sub_4098e0
retn
sub_4098f0
retn
sub_409900
retn
sub_409940
push esi
sub eax ecx
mov esi eax
mov eax [ esp + 0x8 ]
push esi
push ecx
push eax
call sub_409e20
add esp 0xc
add eax esi
pop esi
retn
sub_4099b0
retn
sub_4099c0
retn
sub_4099d0
mov edx [ ecx ]
mov ecx [ esp + 0x4 ]
mov [ eax ] edx
mov dl [ ecx ]
mov [ eax + 0x4 ] dl
retn 0x4
sub_4099e0
test eax eax
je r-xdata
retn
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
sub_4099f0
test eax eax
je r-xdata
retn
mov dx [ ecx ]
mov [ eax ] dx
sub_409a00
retn
sub_409a10
test eax eax
je r-xdata
retn
mov dx [ ecx ]
mov [ eax ] dx
mov cl [ ecx + 0x2 ]
mov [ eax + 0x2 ] cl
sub_409a30
retn
sub_409a40
test eax eax
je r-xdata
retn
movq xmm0 [ ecx ]
movq [ eax ] xmm0
mov ecx [ ecx + 0x8 ]
mov [ eax + 0x8 ] ecx
sub_409a60
retn
sub_409a70
retn
sub_409a80
retn
sub_409a90
retn
sub_409aa0
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
retn
sub_409ab0
retn
sub_409ac0
retn
sub_409ad0
retn
sub_409ae0
mov edx [ ecx ]
mov ecx [ esp + 0x4 ]
mov [ eax ] edx
mov edx [ ecx ]
mov [ eax + 0x4 ] edx
retn 0x4
sub_409af0
retn
sub_409b00
retn
sub_409b10
retn
DialogBoxParamA
jmp [ DialogBoxParamA@IAT ]
LoadCursorA
jmp [ LoadCursorA@IAT ]
DispatchMessageA
jmp [ DispatchMessageA@IAT ]
LoadAcceleratorsA
jmp [ LoadAcceleratorsA@IAT ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
EndDialog
jmp [ EndDialog@IAT ]
TranslateAcceleratorA
jmp [ TranslateAcceleratorA@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
BeginPaint
jmp [ BeginPaint@IAT ]
LoadIconA
jmp [ LoadIconA@IAT ]
LoadStringA
jmp [ LoadStringA@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
RegisterClassExA
jmp [ RegisterClassExA@IAT ]
GetMessageA
jmp [ GetMessageA@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
EndPaint
jmp [ EndPaint@IAT ]
sub_409b81
mov eax ecx
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
mov [ eax + 0x8 ] 0x0
retn
sub_409b92
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebp
retn 0x8
sub_409baf
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_409bfc
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_40b65b
pop ecx
sub_409c76
mov [ ecx ] r--data
jmp sub_409bfc
sub_409c9f
mov [ ecx ] r--data
jmp sub_409bfc
sub_409cc8
mov [ ecx ] r--data
jmp sub_409bfc
sub_409cd3
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_409caa
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_409cf0
mov [ ecx ] r--data
jmp sub_409bfc
sub_409d6e
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_409d22
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_409db2
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_409d22
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_409df6
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_409db2
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40a181
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_40b65b
sub_40a18c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push ecx
call sub_40b839
pop ecx
pop ecx
pop ebp
retn 0x4
sub_40a1a0
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_40b7c9
pop ecx
retn
sub_40a1d1
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push ecx
call sub_40b9ce
pop ecx
pop ecx
pop ebp
retn 0x4
sub_40a1e7
push ecx
call sub_40b92b
pop ecx
retn
sub_40a254
lea eax [ ecx + 0x8 ]
retn
sub_40a258
mov eax ecx
mov [ eax ] r--data
retn 0x4
sub_40a263
mov eax ecx
retn 0x4
sub_40a4ad
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_40bf0c
pop ecx
pop ecx
retn
sub_40a4c1
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_40b363
push eax
call sub_40b33e
sub_40a4db
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_40cd45
retn
_start
call sub_40cf1f
jmp sub_40a37e
sub_40a4f5
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_40a28e
sub_40a61d
call sub_40b074
retn
sub_40a623
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40a5e7
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_40a6c1
cmp [ ecx + 0xc ] 0x0
je r-xdata
retn
mov eax [ ecx + 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_40a6cf
mov eax ecx
retn
sub_40a6d2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x20
pop ebp
retn
sub_40a8b4
call sub_40f245
add eax 0x20
push eax
push 0x1
call sub_40f3cb
pop ecx
pop ecx
retn
sub_40a8c7
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4103fc
add esp 0xc
pop ebp
retn
sub_40a8e0
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_410419
add esp 0xc
pop ebp
retn
sub_40a8f9
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push 0x0
push [ ebp + 0x8 ]
call sub_410419
add esp 0xc
pop ebp
retn
sub_40a911
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_410436
add esp 0xc
pop ebp
retn
sub_40a92a
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push 0x0
push [ ebp + 0x8 ]
call sub_410436
add esp 0xc
pop ebp
retn
sub_40a96c
mov eax [ rwxdata ]
or eax 0x1
xor ecx ecx
cmp [ rwxdata ] eax
sete cl
mov eax ecx
retn
sub_40af1a
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x80
sbb eax eax
neg eax
pop ebp
retn
sub_40af2c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
and eax 0x7f
pop ebp
retn
sub_40afbf
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_40a181
sub_40afca
push [ rwxdata ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push 0x19
call sub_40bcfe
push 0x1
push 0x0
call sub_4104da
add esp 0xc
jmp sub_4104a7
call eax
sub_40b01b
push [ rwxdata ]
call [ DecodePointer@IAT ]
retn
sub_40b053
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40b028
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_40b06b
push 0x8
call sub_410848
pop ecx
retn
sub_40b074
push 0x8
call sub_410757
pop ecx
retn
sub_40b313
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_410757
pop ecx
sub_40b328
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_40b1e8
add esp 0xc
pop ebp
retn
sub_40b33e
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_40b1e8
add esp 0xc
pop ebp
retn
sub_40b354
push 0x1
push 0x0
push 0x0
call sub_40b1e8
add esp 0xc
retn
sub_40b363
push 0x1
push 0x1
push 0x0
call sub_40b1e8
add esp 0xc
retn
sub_40b372
mov edi edi
push ebp
mov ebp esp
call sub_40bead
push [ ebp + 0x8 ]
call sub_40bcfe
pop ecx
push 0xff
call sub_40b33e
int3
sub_40b798
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rwxdata ] eax
xor eax eax
retn
sub_40b830
push 0xe
call sub_410757
pop ecx
retn
sub_40b922
push 0xe
call sub_410757
pop ecx
retn
sub_40b992
push 0xe
call sub_410757
pop ecx
retn
sub_40bad1
push 0xe
call sub_410757
pop ecx
retn
sub_40bb24
push 0xe
call sub_410757
pop ecx
retn
sub_40bbb8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_40bbfe
push 0x0
call sub_40bbc7
pop ecx
retn
sub_40bc07
push [ rwxdata ]
call [ DecodePointer@IAT ]
retn
sub_40bcca
push sub_40bc88
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_40c1b1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_40c790
push 0x0
call [ EncodePointer@IAT ]
retn
sub_40c799
call [ TlsAlloc@IAT ]
retn 0x4
sub_40c7a2
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ rwxdata ]
call [ TlsGetValue@IAT ]
call eax
pop ebp
retn 0x4
sub_40c7bc
mov eax [ rwxdata ]
retn
sub_40c7f6
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ rwxdata ]
call [ DecodePointer@IAT ]
call eax
pop ebp
retn 0x8
sub_40c8f2
push 0xd
call sub_410757
pop ecx
retn
sub_40c8fb
push 0xc
call sub_410757
pop ecx
retn
sub_40cab1
push 0xd
call sub_410757
pop ecx
retn
sub_40cabd
push 0xc
call sub_410757
pop ecx
retn
GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
GetCurrentThread
jmp [ GetCurrentThread@IAT ]
sub_40ccbb
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rwxdata ] eax
mov eax ecx
retn
sub_40ccd9
push [ rwxdata ]
call [ HeapDestroy@IAT ]
and [ rwxdata ] 0x0
retn
sub_40cced
mov eax [ rwxdata ]
retn
sub_40cd45
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_40cd60
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x8 ]
add ecx esi
xor ecx [ eax + esi ]
jmp sub_409b72
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_409b72
sub_40cfe0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ rwxdata ]
mov [ rwxdata ] ecx
pop ebp
retn
sub_40d417
push 0xd
call sub_410757
pop ecx
retn
sub_40d824
push 0xd
call sub_410757
pop ecx
retn
sub_40d85d
cmp [ rwxdata ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_40d6c3
pop ecx
mov [ rwxdata ] 0x1
sub_40dba8
push 0xc
call sub_410757
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_40dbb4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
add eax 0x8
sub_40df84
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_40df4c
pop ecx
pop ecx
pop ebp
retn
sub_40df97
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_4188ac
pop ecx
pop ecx
pop ebp
retn
sub_40dfad
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_4188ac
pop ecx
pop ecx
pop ebp
retn
sub_40dfc3
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_4188ac
pop ecx
pop ecx
pop ebp
retn
sub_40dfd6
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_4188ac
pop ecx
pop ecx
pop ebp
retn
sub_40dfe9
mov edi edi
push ebp
mov ebp esp
push 0x2
push [ ebp + 0x8 ]
call sub_4188ac
pop ecx
pop ecx
pop ebp
retn
sub_40dffc
mov edi edi
push ebp
mov ebp esp
push 0x2
push [ ebp + 0x8 ]
call sub_4188ac
pop ecx
pop ecx
pop ebp
retn
sub_40e00f
mov edi edi
push ebp
mov ebp esp
push 0x4
push [ ebp + 0x8 ]
call sub_4188ac
pop ecx
pop ecx
pop ebp
retn
sub_40e022
mov edi edi
push ebp
mov ebp esp
push 0x4
push [ ebp + 0x8 ]
call sub_4188ac
pop ecx
pop ecx
pop ebp
retn
sub_40e035
mov edi edi
push ebp
mov ebp esp
push 0x80
push [ ebp + 0x8 ]
call sub_4188ac
pop ecx
pop ecx
pop ebp
retn
sub_40e04b
mov edi edi
push ebp
mov ebp esp
push 0x80
push [ ebp + 0x8 ]
call sub_4188ac
pop ecx
pop ecx
pop ebp
retn
sub_40e061
mov edi edi
push ebp
mov ebp esp
push 0x8
push [ ebp + 0x8 ]
call sub_4188ac
pop ecx
pop ecx
pop ebp
retn
sub_40e074
mov edi edi
push ebp
mov ebp esp
push 0x8
push [ ebp + 0x8 ]
call sub_4188ac
pop ecx
pop ecx
pop ebp
retn
sub_40e087
mov edi edi
push ebp
mov ebp esp
push 0x10
push [ ebp + 0x8 ]
call sub_4188ac
pop ecx
pop ecx
pop ebp
retn
sub_40e09a
mov edi edi
push ebp
mov ebp esp
push 0x10
push [ ebp + 0x8 ]
call sub_4188ac
pop ecx
pop ecx
pop ebp
retn
sub_40e0ad
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_4188ac
pop ecx
pop ecx
pop ebp
retn
sub_40e0c3
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_4188ac
pop ecx
pop ecx
pop ebp
retn
sub_40e0d9
mov edi edi
push ebp
mov ebp esp
push 0x157
push [ ebp + 0x8 ]
call sub_4188ac
pop ecx
pop ecx
pop ebp
retn
sub_40e0ef
mov edi edi
push ebp
mov ebp esp
push 0x157
push [ ebp + 0x8 ]
call sub_4188ac
pop ecx
pop ecx
pop ebp
retn
sub_40e105
mov edi edi
push ebp
mov ebp esp
push 0x117
push [ ebp + 0x8 ]
call sub_4188ac
pop ecx
pop ecx
pop ebp
retn
sub_40e11b
mov edi edi
push ebp
mov ebp esp
push 0x117
push [ ebp + 0x8 ]
call sub_4188ac
pop ecx
pop ecx
pop ebp
retn
sub_40e131
mov edi edi
push ebp
mov ebp esp
push 0x20
push [ ebp + 0x8 ]
call sub_4188ac
pop ecx
pop ecx
pop ebp
retn
sub_40e144
mov edi edi
push ebp
mov ebp esp
push 0x20
push [ ebp + 0x8 ]
call sub_4188ac
pop ecx
pop ecx
pop ebp
retn
sub_40e157
mov edi edi
push ebp
mov ebp esp
mov eax 0x80
cmp [ ebp + 0x8 ] ax
sbb eax eax
neg eax
pop ebp
retn
sub_40e2ed
mov eax [ rwxdata ]
retn
sub_40e2f3
mov eax rwxdata
retn
sub_40e37d
mov eax [ rwxdata ]
mov ecx [ eax + 0xbc ]
mov [ rwxdata ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rwxdata ] ecx
mov eax [ eax + 0xac ]
mov [ rwxdata ] eax
retn
sub_40e453
push 0xd
call sub_410757
pop ecx
retn
sub_40e45f
push 0xc
call sub_410757
pop ecx
retn
sub_40e468
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_40e3a6
sub_40e50d
push 0xc
call sub_410757
pop ecx
retn
sub_40e519
push 0xd
call sub_410757
pop ecx
retn
j_sub_40e473
jmp sub_40e473
sub_40e527
xor eax eax
retn
sub_40f0c6
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_40efd1
sub_40f203
push 0xc
call sub_410757
pop ecx
retn
sub_40f20f
push 0xc
call sub_410757
pop ecx
retn
sub_40f218
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f240
mov eax [ ebp - 0x20 ]
call sub_40cd45
retn
sub_40f240
and [ esi + 0x70 ] 0xffffffef
retn
sub_40f2fc
call sub_41c7f9
cmp [ rwxdata ] 0x0
je r-xdata
push [ rwxdata ]
call sub_40b65b
pop ecx
retn
call sub_41c580
sub_40f570
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_40f582
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
pop ebp
retn
sub_40f597
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov ax [ eax - 0x4 ]
pop ebp
retn
sub_410156
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_4102b5
push [ rwxdata ]
call [ DecodePointer@IAT ]
retn
sub_4102e7
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4102c2
int3
sub_41036c
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_410301
sub_4103f4
push esi
call sub_40f38f
pop ecx
retn
sub_4103fc
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_40f5aa
call sub_410377
add esp 0x10
pop ebp
retn
sub_410419
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_41cd1b
call sub_410377
add esp 0x10
pop ebp
retn
sub_410436
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_41dad1
call sub_410377
add esp 0x10
pop ebp
retn
sub_410453
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_40f5aa
call sub_410377
add esp 0x10
pop ebp
retn
sub_41046f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_41cd1b
call sub_410377
add esp 0x10
pop ebp
retn
sub_41048b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_41dad1
call sub_410377
add esp 0x10
pop ebp
retn
sub_4106a7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_410757
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rwxdata ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_41076e
push [ esp + 0x4 ]
push 0x0
call [ FatalAppExitA@IAT ]
push 0xff
call sub_40b053
sub_41083f
push 0xa
call sub_410757
pop ecx
retn
sub_41087b
push 0x8
push r--data
call sub_40cd00
call sub_40c97d
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_4104a7
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_41089b
xor eax eax
inc eax
retn
sub_4108b4
call sub_40c97d
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_41087b
call eax
sub_4108eb
xor eax eax
inc eax
retn
sub_4108ff
push sub_41087b
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
retn
sub_410910
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
mov [ rwxdata ] eax
mov [ rwxdata ] eax
mov [ rwxdata ] eax
pop ebp
retn
sub_4109aa
push edi
call sub_410757
pop ecx
retn
sub_410a01
push [ rwxdata ]
call [ DecodePointer@IAT ]
retn
sub_410a0e
call sub_40c97d
add eax 0x64
retn
sub_410a17
call sub_40c97d
add eax 0x60
retn
sub_410c25
push 0x0
call sub_410757
pop ecx
retn
sub_410dc7
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_410757
pop ecx
sub_410e03
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_41104b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_41107c
and [ rwxdata ] 0x0
retn
sub_411084
mov eax ecx
and [ eax ] 0x0
retn
sub_411617
mov eax [ rwxdata ]
not eax
and eax 0x1
retn
sub_411622
mov eax [ rwxdata ]
shr eax 0x1
not eax
and eax 0x1
retn
sub_41162f
mov eax [ rwxdata ]
shr eax 0x11
not eax
and eax 0x1
retn
sub_41163d
mov eax [ rwxdata ]
shr eax 0x2
not eax
and eax 0x1
retn
sub_41164b
mov eax [ rwxdata ]
shr eax 0x3
not eax
and eax 0x1
retn
sub_411659
mov eax [ rwxdata ]
shr eax 0x4
not eax
and eax 0x1
retn
sub_411667
mov eax [ rwxdata ]
and eax 0x60
xor ecx ecx
cmp al 0x60
setne cl
mov eax ecx
retn
sub_411679
mov eax [ rwxdata ]
shr eax 0x7
not eax
and eax 0x1
retn
sub_411687
mov eax [ rwxdata ]
shr eax 0x8
not eax
and eax 0x1
retn
sub_411695
mov eax [ rwxdata ]
shr eax 0x9
not eax
and eax 0x1
retn
sub_4116a3
mov eax [ rwxdata ]
and eax 0x1000
retn
sub_4116ae
mov eax [ rwxdata ]
and eax 0x2000
retn
sub_4116b9
mov eax [ rwxdata ]
and eax 0x4000
retn
sub_4116c4
mov eax [ rwxdata ]
shr eax 0xf
not eax
and eax 0x1
retn
sub_4116d2
mov eax [ rwxdata ]
and eax 0x10000
retn
sub_4116dd
mov eax [ rwxdata ]
shr eax 0x12
not eax
and eax 0x1
retn
sub_411792
mov eax ecx
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
and [ eax + 0x4 ] 0xffff00ff
retn
sub_4117a3
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_4117bb
xor eax eax
cmp [ ecx + 0x4 ] 0x1
setle al
retn
sub_4117c5
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_4117cd
movsx eax [ ecx + 0x4 ]
retn
sub_4117d2
mov eax ecx
or [ eax + 0x4 ] 0x100
retn
sub_4117dc
mov eax [ ecx + 0x4 ]
shr eax 0x8
and eax 0x1
retn
sub_4117e6
xor eax eax
cmp [ ecx ] eax
je r-xdata
retn
test [ ecx + 0x4 ] 0x200
je r-xdata
inc eax
sub_4117f7
cmp [ ecx ] 0x0
je r-xdata
retn
or [ ecx + 0x4 ] 0x200
sub_411804
xor eax eax
cmp [ ecx ] eax
je r-xdata
retn
test [ ecx + 0x4 ] 0x400
je r-xdata
inc eax
sub_411815
or [ ecx + 0x4 ] 0x800
retn
sub_41181d
mov eax [ ecx + 0x4 ]
shr eax 0xb
and eax 0x1
retn
sub_411827
mov eax [ ecx + 0x4 ]
shr eax 0xc
and eax 0x1
retn
sub_411831
or [ ecx + 0x4 ] 0x1000
retn
sub_411839
mov eax [ ecx + 0x4 ]
shr eax 0xd
and eax 0x1
retn
sub_411843
or [ ecx + 0x4 ] 0x2000
retn
sub_41184b
mov eax [ ecx + 0x4 ]
shr eax 0xe
and eax 0x1
retn
sub_411855
or [ ecx + 0x4 ] 0x4000
retn
sub_41185d
mov eax [ ecx + 0x4 ]
shr eax 0xf
and eax 0x1
retn
sub_411867
or [ ecx + 0x4 ] 0x8000
retn
sub_41186f
mov ecx [ ecx ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
jmp [ eax ]
xor eax eax
retn
sub_41188a
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_4118c1
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_4118d9
xor eax eax
cmp [ ecx ] 0x9
sete al
retn
sub_4118e2
mov eax ecx
or [ eax ] 0xffffffff
retn
sub_4118e8
mov eax ecx
mov [ eax ] r--data
retn
sub_4118f1
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov cl [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] cl
pop ebp
retn 0x4
sub_411908
xor eax eax
inc eax
retn
sub_41190c
mov al [ ecx + 0x4 ]
retn
sub_411910
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
pop ebp
retn 0x8
mov cl [ ecx + 0x4 ]
mov [ eax ] cl
inc eax
sub_411951
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx ]
sub_4119c4
mov eax [ ecx + 0x8 ]
retn
sub_4119c8
cmp [ ecx + 0x4 ] 0x1
setne al
dec al
and al 0x20
retn
sub_411a5a
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
or [ eax + 0xc ] 0xffffffff
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax ] r--data
mov [ eax + 0x8 ] ecx
pop ebp
retn 0x8
sub_411aee
xor eax eax
cmp [ ecx ] al
je r-xdata
retn
inc eax
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
sub_411c1e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
mov ecx rwxdata
push [ ebp + 0x8 ]
call sub_41170a
pop ebp
retn
sub_411f1f
mov eax [ ecx + 0x8 ]
retn
sub_411f23
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
xor al al
retn
mov ecx [ ecx + 0x4 ]
mov al [ ecx + eax - 0x1 ]
retn
sub_411f35
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0x8 ]
push [ ecx + 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411c35
add esp 0x10
pop ebp
retn 0x8
sub_411fac
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_411bab
mov eax [ ebp + 0x8 ]
pop ecx
pop ebp
retn
sub_412f9c
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_412805
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_412fb2
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_412805
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_412fc8
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_412805
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_413619
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_412fde
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_414263
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_414182
mov eax [ ebp + 0x8 ]
pop ecx
pop ebp
retn
sub_416201
mov edi edi
push ebp
mov ebp esp
push r--data
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_416108
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_416221
mov edi edi
push ebp
mov ebp esp
push r--data
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_416108
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_416241
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_416108
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_4162f0
push 0x5
call sub_410757
pop ecx
retn
sub_41638a
push 0x5
call sub_410757
pop ecx
retn
sub_416b26
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_416a50
add esp 0xc
pop ebp
retn 0x4
sub_416b59
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_41f065
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_416b8b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_416a50
add esp 0xc
pop ebp
retn 0x8
sub_416f0d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_416f6f
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_416f1c
add esp 0x10
pop ebp
retn
sub_416f88
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_416f1c
add esp 0x10
pop ebp
retn
sub_416fa0
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_416f1c
add esp 0x10
pop ebp
retn
sub_416fb9
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_416f1c
add esp 0x10
pop ebp
retn
sub_416fd1
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_416f1c
add esp 0x10
pop ebp
retn
sub_416fea
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_416f1c
add esp 0x10
pop ebp
retn
sub_417002
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x107
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_416f1c
add esp 0x10
pop ebp
retn
sub_41701e
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x107
push [ ebp + 0x8 ]
push 0x0
call sub_416f1c
add esp 0x10
pop ebp
retn
sub_417039
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x103
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_416f1c
add esp 0x10
pop ebp
retn
sub_417055
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x103
push [ ebp + 0x8 ]
push 0x0
call sub_416f1c
add esp 0x10
pop ebp
retn
sub_417070
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x117
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_416f1c
add esp 0x10
pop ebp
retn
sub_41708c
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x117
push [ ebp + 0x8 ]
push 0x0
call sub_416f1c
add esp 0x10
pop ebp
retn
sub_4170a7
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x157
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_416f1c
add esp 0x10
pop ebp
retn
sub_4170c3
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x157
push [ ebp + 0x8 ]
push 0x0
call sub_416f1c
add esp 0x10
pop ebp
retn
sub_4170de
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x10
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_416f1c
add esp 0x10
pop ebp
retn
sub_4170f7
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x10
push [ ebp + 0x8 ]
push 0x0
call sub_416f1c
add esp 0x10
pop ebp
retn
sub_41710f
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_416f1c
add esp 0x10
pop ebp
retn
sub_417128
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_416f1c
add esp 0x10
pop ebp
retn
sub_417140
mov edi edi
push ebp
mov ebp esp
push 0x8
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_416f1c
add esp 0x10
pop ebp
retn
sub_417159
mov edi edi
push ebp
mov ebp esp
push 0x8
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_416f1c
add esp 0x10
pop ebp
retn
sub_4171c6
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_417171
pop ecx
pop ecx
pop ebp
retn
sub_41882b
call sub_40c97d
mov ecx [ eax + 0x6c ]
cmp ecx [ rwxdata ]
je r-xdata
mov eax [ rwxdata ]
retn
mov ecx [ rwxdata ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_40db3b
sub_418851
mov eax [ rwxdata ]
retn
sub_418857
call sub_40c97d
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ eax + 0xc8 ]
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_40db3b
sub_418880
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_41f150
sub_418896
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_41f150
sub_418901
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4188ac
sub_41890c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4188ac
pop ecx
pop ecx
pop ebp
retn
sub_418cc7
call sub_40c97d
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ eax + 0xac ]
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_40db3b
sub_418cf0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax [ eax + 0xac ]
pop ebp
retn
pop ebp
jmp sub_418cc7
sub_418d0c
call sub_40c97d
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_40db3b
sub_418d32
call sub_40c97d
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ eax + 0x8 ]
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_40db3b
sub_418d58
call sub_40c97d
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
add eax 0xc
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_40db3b
sub_418d7e
xor eax eax
retn
sub_4192b3
or [ esi + 0x8 ] 0x104
call [ GetUserDefaultLCID@IAT ]
mov [ esi + 0x1c ] eax
mov [ esi + 0x18 ] eax
retn
sub_419a0f
test eax eax
je r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
sub_419a1f
movzx eax [ eax ]
movzx ecx [ ecx ]
sub eax ecx
je r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
sub_41c613
push 0x1
call sub_410757
pop ecx
retn
sub_41c76e
mov eax [ rwxdata ]
push [ eax + esi * 4 ]
push esi
call sub_40f3cb
pop ecx
pop ecx
retn
sub_41c79d
push 0x1
call sub_410757
pop ecx
retn
sub_41c7ef
push [ ebp + 0x8 ]
call sub_40f38f
pop ecx
retn
sub_41c7f9
push 0x1
call sub_41c6cc
pop ecx
retn
sub_41dabc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
pop ebp
retn
sub_41eed1
push 0x2
call sub_40b372
sub_41eeda
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_4203c3
add esp 0xc
pop ebp
retn
sub_41eef0
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_4203ee
add esp 0x10
pop ebp
retn
sub_41ef09
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41eeda
sub_41ef14
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41eef0
sub_41ef1f
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_4206f1
add esp 0xc
pop ebp
retn
sub_41ef35
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_42071c
add esp 0x10
pop ebp
retn
sub_41f039
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_41ef70
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_41f084
call eax
retn
sub_41f4fb
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_41f3f0
pop ebp
retn
sub_41f72e
push esi
call sub_40f38f
pop ecx
retn
sub_41feff
push ebx
call sub_420d49
pop ecx
retn
sub_41ffd8
push ebx
call sub_420d49
pop ecx
retn
sub_420145
push [ ebp + 0x8 ]
call sub_420d49
pop ecx
retn
sub_4203ee
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_420198
add esp 0x14
pop ebp
retn
sub_420437
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_420198
add esp 0x14
pop ebp
retn
sub_42071c
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_420454
add esp 0x14
pop ebp
retn
sub_420765
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_420454
add esp 0x14
pop ebp
retn
sub_420949
push ebx
call sub_420d49
pop ecx
retn
sub_420a01
push 0x3
call sub_410757
pop ecx
retn
sub_420b20
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420a0a
add esp 0x10
pop ebp
retn
sub_420d40
push 0xa
call sub_410757
pop ecx
retn
sub_420e42
push 0xa
call sub_410757
pop ecx
retn
sub_420f00
push 0xb
call sub_410757
pop ecx
retn
sub_421054
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rwxdata ] eax
retn
sub_421073
mov eax [ rwxdata ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
j_sub_409c76#3
jmp sub_409c76
j_sub_409c76#6
jmp sub_409c76
j_sub_409c76#4
jmp sub_409c76
j_sub_409c76#2
jmp sub_409c76
j_sub_409c76
jmp sub_409c76
j_sub_409c76#5
jmp sub_409c76
sub_4211a4
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_409d22
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4211f1
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_409d22
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_42123e
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_409d22
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_42128b
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_409d22
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_42139e
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_409d22
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4213bb
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_409d22
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
HeapSetInformation
jmp [ HeapSetInformation@IAT ]
GetStartupInfoW
jmp [ GetStartupInfoW@IAT ]
EncodePointer
jmp [ EncodePointer@IAT ]
DecodePointer
jmp [ DecodePointer@IAT ]
GetProcAddress
jmp [ GetProcAddress@IAT ]
GetModuleHandleW
jmp [ GetModuleHandleW@IAT ]
ExitProcess
jmp [ ExitProcess@IAT ]
TerminateProcess
jmp [ TerminateProcess@IAT ]
GetCurrentProcess
jmp [ GetCurrentProcess@IAT ]
UnhandledExceptionFilter
jmp [ UnhandledExceptionFilter@IAT ]
SetUnhandledExceptionFilter
jmp [ SetUnhandledExceptionFilter@IAT ]
IsDebuggerPresent
jmp [ IsDebuggerPresent@IAT ]
HeapAlloc
jmp [ HeapAlloc@IAT ]
GetLastError
jmp [ GetLastError@IAT ]
HeapFree
jmp [ HeapFree@IAT ]
IsProcessorFeaturePresent
jmp [ IsProcessorFeaturePresent@IAT ]
RaiseException
jmp [ RaiseException@IAT ]
WriteFile
jmp [ WriteFile@IAT ]
GetStdHandle
jmp [ GetStdHandle@IAT ]
GetModuleFileNameW
jmp [ GetModuleFileNameW@IAT ]
GetModuleFileNameA
jmp [ GetModuleFileNameA@IAT ]
FreeEnvironmentStringsW
jmp [ FreeEnvironmentStringsW@IAT ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
GetEnvironmentStringsW
jmp [ GetEnvironmentStringsW@IAT ]
SetHandleCount
jmp [ SetHandleCount@IAT ]
InitializeCriticalSectionAndSpinCount
jmp [ InitializeCriticalSectionAndSpinCount@IAT ]
GetFileType
jmp [ GetFileType@IAT ]
DeleteCriticalSection
jmp [ DeleteCriticalSection@IAT ]
TlsAlloc
jmp [ TlsAlloc@IAT ]
TlsGetValue
jmp [ TlsGetValue@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
TlsFree
jmp [ TlsFree@IAT ]
InterlockedIncrement
jmp [ InterlockedIncrement@IAT ]
SetLastError
jmp [ SetLastError@IAT ]
__imp_GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
__imp_GetCurrentThread
jmp [ GetCurrentThread@IAT ]
HeapCreate
jmp [ HeapCreate@IAT ]
HeapDestroy
jmp [ HeapDestroy@IAT ]
QueryPerformanceCounter
jmp [ QueryPerformanceCounter@IAT ]
GetTickCount
jmp [ GetTickCount@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetSystemTimeAsFileTime
jmp [ GetSystemTimeAsFileTime@IAT ]
Sleep
jmp [ Sleep@IAT ]
HeapSize
jmp [ HeapSize@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetOEMCP
jmp [ GetOEMCP@IAT ]
IsValidCodePage
jmp [ IsValidCodePage@IAT ]
LCMapStringW
jmp [ LCMapStringW@IAT ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
EnterCriticalSection
jmp [ EnterCriticalSection@IAT ]
LeaveCriticalSection
jmp [ LeaveCriticalSection@IAT ]
GetLocaleInfoW
jmp [ GetLocaleInfoW@IAT ]
FatalAppExitA
jmp [ FatalAppExitA@IAT ]
SetConsoleCtrlHandler
jmp [ SetConsoleCtrlHandler@IAT ]
FreeLibrary
jmp [ FreeLibrary@IAT ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
LoadLibraryW
jmp [ LoadLibraryW@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
HeapReAlloc
jmp [ HeapReAlloc@IAT ]
GetStringTypeW
jmp [ GetStringTypeW@IAT ]
GetUserDefaultLCID
jmp [ GetUserDefaultLCID@IAT ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
EnumSystemLocalesA
jmp [ EnumSystemLocalesA@IAT ]
IsValidLocale
jmp [ IsValidLocale@IAT ]
GetConsoleCP
jmp [ GetConsoleCP@IAT ]
GetConsoleMode
jmp [ GetConsoleMode@IAT ]
FlushFileBuffers
jmp [ FlushFileBuffers@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
CloseHandle
jmp [ CloseHandle@IAT ]
WriteConsoleW
jmp [ WriteConsoleW@IAT ]
SetStdHandle
jmp [ SetStdHandle@IAT ]
CreateFileW
jmp [ CreateFileW@IAT ]
sub_42159a
mov eax sub_4227bf
mov [ rwxdata ] eax
mov [ rwxdata ] sub_421e58
mov [ rwxdata ] sub_421e0c
mov [ rwxdata ] sub_421e45
mov [ rwxdata ] sub_421dae
mov [ rwxdata ] eax
mov [ rwxdata ] sub_422737
mov [ rwxdata ] sub_421dca
mov [ rwxdata ] sub_421d2c
mov [ rwxdata ] sub_421cb8
retn
sub_4215fa
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ rwxdata ]
mov [ rwxdata ] ecx
pop ebp
retn
sub_42160f
mov edi edi
push ebp
mov ebp esp
call sub_42159a
cmp [ ebp + 0x8 ] 0x0
je r-xdata
fnclex
pop ebp
retn
call sub_4227e2
sub_421862
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_421869
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_421870
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_42196d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax + 0x1c ]
push [ eax + 0x28 ]
push 0x0
push [ eax + 0x18 ]
call sub_423161
add esp 0x10
pop ebp
retn 0x4
sub_421cad
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4242e0
sub_421e0c
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421dca
add esp 0x10
pop ebp
retn
sub_421e45
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_421cb8
pop ecx
pop ecx
pop ebp
retn
sub_421e58
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_421d2c
pop ecx
pop ecx
pop ebp
retn
sub_42260d
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42254c
add esp 0x14
pop ebp
retn
sub_42280a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
neg eax
sbb eax eax
and eax [ rwxdata ]
mov [ rwxdata ] eax
pop ebp
retn
sub_422823
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rwxdata ] eax
xor eax eax
retn
sub_422840
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff0
fstp [ esp ]
movq xmm0 [ esp ]
call sub_42285e
leave
retn
sub_422858
movlpd xmm0 [ esp + 0x4 ]
j_sub_422dbb
jmp sub_422dbb
sub_422b18
fstp st0
fstp st0
fld [ r--data ]
mov [ ebp - 0x90 ] 0x2
retn
sub_422b44
mov [ ebp - 0x90 ] 0x2
fstp st0
fld [ r--data ]
retn
sub_422b54
or cl cl
jne r-xdata
jmp r-xdata
retn
fstp st0
fld [ r--data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_422b59
fldlg2
jmp r-xdata
fxch st1
or cl cl
jne r-xdata
jmp sub_422e56
fyl2x
retn
sub_422b5d
fldln2
fxch st1
or cl cl
jne r-xdata
jmp sub_422e56
fyl2x
retn
j_sub_422dbb#2
jmp sub_422dbb
sub_422ba9
fstp st0
jmp r-xdata
fstp st0
fld [ r--data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_422bdf
fstp st0
fstp st0
fld [ r--data ]
mov [ ebp - 0x90 ] 0x3
retn
sub_422bf1
or cl cl
jne r-xdata
jmp sub_422db6
fstp st0
fld [ r--data ]
retn
sub_422da8
fxch st1
fstp st0
retn
sub_422db6
fstp st0
fldz
retn
sub_422dbb
fstp st0
fstp st0
fld1
retn
sub_422dc2
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x1
fadd [ r--data ]
retn
mov [ ebp - 0x90 ] 0x7
retn
sub_422ded
fxch st1
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x90 ] 0x7
jmp r-xdata
faddp st1
retn
sub_422e56
fstp st0
fstp st0
fld [ r--data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_422e69
mov [ ebp - 0x90 ] 0x1
or cl cl
retn
sub_422e73
or cl cl
je r-xdata
retn
fchs
sub_422e80
fld st0
frndint
fsubr st1
fxch st1
fchs
f2xm1
fld1
faddp st1
fscale
fstp st1
retn
sub_422e95
mov edx [ esp + 0x4 ]
and edx 0x300
or edx 0x7f
mov [ esp + 0x6 ] dx
fldcw [ esp + 0x6 ]
retn
sub_422eac
test eax 0x80000
je r-xdata
fadd [ r--data ]
mov eax 0x1
retn
mov eax 0x7
retn
sub_422f08
mov eax [ esp + 0x8 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ esp + 0x8 ]
retn
retn
sub_423081
mov [ ecx ] r--data
jmp sub_409c76
sub_4231df
push [ ebp - 0x14 ]
call sub_423112
pop ecx
retn
sub_423223
call sub_40c97d
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_40c97d
dec [ eax + 0x90 ]
sub_4232c5
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_4232ce
mov esp [ ebp - 0x18 ]
call sub_41087b
sub_423300
call sub_40c97d
xor ecx ecx
cmp [ eax + 0x90 ] ecx
setne al
retn
sub_423556
push 0x10
pop eax
retn
sub_42355a
push 0x8
push r--data
call sub_40cd00
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40cd45
retn
sub_423572
push [ ebp - 0x14 ]
call sub_423112
pop ecx
retn
sub_42357c
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40cd45
retn
sub_42358c
push 0x8
push r--data
call sub_40cd00
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
call [ ebp + 0x8 ]
pop ecx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40cd45
retn
sub_4235a5
push [ ebp - 0x14 ]
call sub_423112
pop ecx
retn
sub_4235af
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40cd45
retn
sub_4235bf
push 0x8
push r--data
call sub_40cd00
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
call [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40cd45
retn
sub_4235d7
push [ ebp - 0x14 ]
call sub_423112
pop ecx
retn
sub_4235e1
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40cd45
retn
sub_423612
push [ ebp - 0x14 ]
call sub_423112
pop ecx
retn
sub_42361c
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40cd45
retn
sub_4236a2
push 0x4
mov eax sub_42a365
call sub_424edf
call sub_40c97d
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_4108b4
call sub_4108c7
sub_423833
mov eax [ ebp - 0x14 ]
call sub_42323d
retn
sub_423aaa
xor eax eax
inc eax
retn
sub_423aae
mov esp [ ebp - 0x18 ]
call sub_41087b
sub_423b43
xor eax eax
inc eax
retn
sub_423b47
mov esp [ ebp - 0x18 ]
call sub_41087b
sub_424188
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_409d22
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4243b5
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42430d
add esp 0xc
pop ebp
retn
sub_424475
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4243cc
add esp 0xc
pop ebp
retn
sub_424534
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42448c
add esp 0xc
pop ebp
retn
sub_42457d
mov eax [ rwxdata ]
retn
sub_424f84
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_424f98
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_409b72
jmp sub_424f84
sub_424fa7
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_409b72
jmp sub_424f84
sub_424fb6
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_424fc8
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_424fda
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_4251d1
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
pop ebp
retn
sub_427d4c
push 0x1f80
call sub_429ab4
pop ecx
retn
sub_428a94
xor eax eax
retn
sub_428a97
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fld [ ebp + 0x8 ]
frndint
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
leave
retn
sub_428b00
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_429da4
add esp 0xc
pop ebp
retn
sub_428eb5
mov edi edi
push ebp
mov ebp esp
mov eax 0x7ff0
mov ecx eax
and cx [ ebp + 0xe ]
xor edx edx
cmp cx ax
setne dl
mov eax edx
pop ebp
retn
sub_428fd3
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0xe ]
shr eax 0x4
and eax 0x7ff
sub eax 0x3fe
cwde
pop ebp
retn
sub_4299f2
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstsw [ ebp - 0x4 ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_429a02
mov edi edi
push ebp
mov ebp esp
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
movsx eax [ ebp - 0x4 ]
leave
retn
sub_429a96
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rwxdata ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
stmxcsr [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
sub_429ae1
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_429b26
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rwxdata ] 0x0
je r-xdata
leave
retn
stmxcsr [ ebp - 0x4 ]
and [ ebp - 0x4 ] 0xffffffc0
ldmxcsr [ ebp - 0x4 ]
sub_429b43
xor eax eax
cmp [ rwxdata ] eax
je r-xdata
retn
call sub_429a96
and eax 0x3f
sub_429b56
xor eax eax
cmp [ rwxdata ] eax
je r-xdata
retn
call sub_429a96
and eax 0x3f
jmp sub_429b26
sub_429ba5
mov edi edi
push ebp
mov ebp esp
call sub_429a96
mov ecx [ ebp + 0x8 ]
and ecx 0x3f
or eax ecx
push eax
call sub_429ab4
pop ecx
pop ebp
retn
sub_429f60
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_409b72
mov eax r--data
jmp sub_421901
sub_429f80
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_409b72
mov eax r--data
jmp sub_421901
sub_429fa0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_409b72
mov eax r--data
jmp sub_421901
sub_429fc0
mov ecx [ ebp + 0x4 ]
jmp sub_404250
sub_429fc8
mov esi [ ebp + 0x4 ]
add esi 0x4
jmp sub_406e50
sub_429fd3
mov eax [ ebp + 0x4 ]
add eax 0x28
jmp sub_406ed0
sub_429fde
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_409b72
mov eax r--data
jmp sub_421901
sub_42a000
mov ecx [ ebp + 0x4 ]
jmp sub_404250
sub_42a008
mov esi [ ebp + 0x4 ]
add esi 0x4
jmp sub_406d00
sub_42a013
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_409b72
mov eax r--data
jmp sub_421901
sub_42a030
mov ecx [ ebp + 0x4 ]
jmp sub_404250
sub_42a038
mov esi [ ebp + 0x4 ]
add esi 0x10
jmp sub_406c50
sub_42a043
mov esi [ ebp + 0x4 ]
add esi 0x20
jmp sub_406c50
sub_42a04e
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_409b72
mov eax r--data
jmp sub_421901
sub_42a070
mov eax [ ebp + 0x4 ]
jmp sub_406fd0
sub_42a078
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_409b72
mov eax r--data
jmp sub_421901
sub_42a0a0
mov esi [ ebp + 0x4 ]
jmp sub_404500
sub_42a0a8
mov ecx [ ebp - 0x10 ]
jmp sub_404250
sub_42a0b0
mov esi [ ebp - 0x10 ]
add esi 0x4
jmp sub_406d00
sub_42a0bb
mov esi [ ebp + 0x4 ]
add esi 0x74
jmp sub_404c40
sub_42a0c6
mov eax [ ebp + 0x4 ]
add eax 0xac
jmp sub_405710
sub_42a0d3
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x1c ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_409b72
mov eax r--data
jmp sub_421901
sub_42a0f0
mov eax [ ebp + 0x4 ]
jmp sub_406fd0
sub_42a0f8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_409b72
mov eax r--data
jmp sub_421901
sub_42a120
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_409b72
mov eax r--data
jmp sub_421901
sub_42a140
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_409b72
mov eax r--data
jmp sub_421901
sub_42a160
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_409b72
mov eax r--data
jmp sub_421901
sub_42a180
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_409b72
mov eax r--data
jmp sub_421901
sub_42a1a0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_409b72
mov eax r--data
jmp sub_421901
sub_42a1c0
mov esi [ ebp + 0x8 ]
jmp sub_401990
sub_42a1c8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_409b72
mov eax r--data
jmp sub_421901
sub_42a1f0
mov esi [ ebp + 0x4 ]
jmp sub_405720
sub_42a1f8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x1c ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_409b72
mov eax r--data
jmp sub_421901
sub_42a220
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_409b72
mov eax r--data
jmp sub_421901
sub_42a240
mov esi [ ebp + 0x8 ]
jmp sub_401990
sub_42a248
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_409b72
mov eax r--data
jmp sub_421901
sub_42a270
mov eax [ ebp + 0x4 ]
push eax
call sub_40a181
pop ecx
retn
sub_42a27b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_409b72
mov eax r--data
jmp sub_421901
sub_42a2a0
mov eax [ ebp + 0x4 ]
push eax
call sub_40a181
pop ecx
retn
sub_42a2ab
mov esi [ ebp + 0x4 ]
jmp sub_405720
sub_42a2b3
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_409b72
mov eax r--data
jmp sub_421901
sub_42a2d0
lea eax [ ebp - 0x30 ]
jmp sub_4016e0
sub_42a2d8
lea eax [ ebp - 0x60 ]
jmp sub_4016e0
sub_42a2e0
lea esi [ ebp - 0x40 ]
jmp sub_401830
sub_42a2e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xf8 ]
xor ecx eax
call sub_409b72
mov eax r--data
jmp sub_421901
sub_42a310
mov eax rwxdata
jmp sub_406fd0
sub_42a31a
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_409b72
mov eax r--data
jmp sub_421901
sub_42a340
mov eax rwxdata
jmp sub_406fd0
sub_42a34a
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_409b72
mov eax r--data
jmp sub_421901
sub_42a365
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_409b72
mov eax r--data
jmp sub_421901
sub_42a560
mov [ rwxdata ] r--data
mov ecx rwxdata
jmp sub_409c76
