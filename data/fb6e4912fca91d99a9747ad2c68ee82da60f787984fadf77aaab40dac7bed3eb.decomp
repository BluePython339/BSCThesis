sub_10117b70
add eax edi
cmc
cmp eax edx
push 0xf787ab97
lea esp [ esp + 0x8 ]
jb rwxdata
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
clc
pushad
jmp rwxdata
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
push [ esp + 0x4 ]
cmp eax [ ebp - 0x10 ]
pushfd
jmp sub_10124488
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
sub_101228c5
sub edi 0x4
pushfd
pushfd
push [ edi ]
pop [ esp + 0x8 ]
stc
cmp edi ebx
push eax
mov [ esp ] dl
lea esp [ esp + 0xc ]
ja rwxdata
pushfd
sub edi 0x4
stc
clc
push [ edi ]
pop [ esp ]
jmp rwxdata
sbb al 0x5d
and al dh
ror al 0x5
stc
sub ebx edi
call sub_1012f400
dec esp
frstor [ edx - 0x54 ]
jb rwxdata
clc
pushfd
cmp edi ebx
jmp rwxdata
xor [ ebx + 0x3c ] al
jbe rwxdata
pushfd
push 0xfc187b5b
lea esp [ esp + 0xc ]
ja rwxdata
and eax 0x291feed3
sar [ ebp + ecx * 2 + 0x36f65836 ] 0x1
fwait
popfd
adc ebp edx
hlt
fsubrp st1
out dx al
adc [ edx ] eax
sbb [ eax ] dh
inc ebx
cmp al 0xc6
cwde
daa
js rwxdata
and al 0xa4
push edx
sub ebx edi
and edi 0x1f268d54
add esp 0x4
add ebx esp
pushad
mov edi ebx
shl al cl
mov al 0x2e
pushad
[ edi ]
pushfd
pushfd
pushfd
call sub_1012779b
inc edi
popfd
sub [ esi - 0x3e92ae8f ] 0x70761747
out dx al
adc dh [ ss : edi - 0x595ce339 ]
pop eax
scasd [ edi ]
xor [ ebx - 0x69df1af4 ] dh
leave
sbb eax 0x86ad92c1
movsb [ edi ] [ esi ]
cli
movsb [ edi ] [ esi ]
dec edx
hlt
mov eax 0x9c83ac52
mov edx 0x4aa4faa4
sub_10122aa0
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
neg bl
bts di si
rol di cl
mov ebx eax
or edi ebp
xchg cx di
bswap ecx
rcr ch 0x5
mov edi eax
sar ch cl
bsr cx di
btc cx 0x7
bsf cx ax
mov ecx 0x104
test ah cl
sub al al
pushfd
[ edi ]
jmp rwxdata
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
lea esp [ esp + 0x4 ]
jne rwxdata
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
ror dx 0x9
shl edx cl
cmc
xor eax eax
shrd si bp cl
xor cl 0xb2
mov ecx edi
dec esi
test bx sp
sub ecx ebx
jmp rwxdata
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
bt si 0x4
mov esi esp
push 0xeae116a1
jmp rwxdata
cmp ah 0xc6
sub edi 0x4
cmc
push [ edi ]
pop [ esp ]
bt ax ax
clc
stc
cmp edi ebx
pushfd
mov [ esp ] dl
mov [ esp ] 0xf839eb56
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
pushfd
sub edi 0x4
stc
clc
push [ edi ]
pop [ esp ]
jmp rwxdata
stc
pushad
xor al 0xff
sub ebx edi
cmp ch 0xb6
and al al
mov di [ esp + 0x4 ]
pushfd
sub esp 0xffffffdc
add ebx esp
dec di
mov edi ebx
rcr al cl
mov al 0x2e
pushad
stc
call sub_101df6a3
jle rwxdata
clc
pushfd
cmp edi ebx
jmp rwxdata
insb
aam 0xb
xchg ebx eax
or esi [ esi + ecx * 4 - 0x6f ]
cmp [ ebp - 0x1ce40d94 ] 0x97
enter 0x1bc3 0xac
xor edx [ ecx - 0x1c3f818c ]
fcomp [ eax ]
in eax dx
mov ah 0x6f
pushfd
push 0xfc187b5b
lea esp [ esp + 0xc ]
ja rwxdata
and al 0xa4
push edx
sub ebx edi
and edi 0x1f268d54
add esp 0x4
add ebx esp
pushad
mov edi ebx
shl al cl
mov al 0x2e
pushad
[ edi ]
pushfd
pushfd
pushfd
call sub_1012779b
inc edi
popfd
sub [ esi - 0x3e92ae8f ] 0x70761747
out dx al
adc dh [ ss : edi - 0x595ce339 ]
pop eax
scasd [ edi ]
xor [ ebx - 0x69df1af4 ] dh
leave
sbb eax 0x86ad92c1
sub_10123660
lea esp [ esp + 0x30 ]
je rwxdata
ror dx 0x9
shl edx cl
cmc
xor eax eax
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
jmp rwxdata
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
stc
bt ecx 0x13
add eax edi
pushfd
cmc
cmp eax edx
pushfd
call sub_101df888
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
sub_10123ea8
lea esp [ esp + 0x10 ]
jbe rwxdata
ror dx 0x9
shl edx cl
cmc
xor eax eax
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
btc si bp
sub ecx 0x1
bsr si bx
cmp edi eax
shrd di bp cl
neg di
mov [ ebp - 0x4 ] ecx
or edi 0x4673f804
call sub_1020cc5d
call sub_101de418
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
sub_10123f95
lea esp [ esp + 0x8 ]
jb rwxdata
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
bt si 0x8
call j_sub_1020f006
xchg [ esp + 0x20 ] eax
pushfd
cwde
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
jmp rwxdata
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
push [ esp + 0x4 ]
mov [ esp + 0x20 ] ebx
pushfd
mov al [ esp ]
not eax
setno ah
mov [ esp + 0x20 ] 0xb
jmp rwxdata
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
pushad
bswap ax
call sub_1020e847
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
sub_10124488
mov [ esp + 0x4 ] 0xe6
call sub_101290d6
pushad
pushad
mov [ esp ] 0x11
mov [ ebp - 0x8 ] ecx
pushfd
push esi
mov [ esp + 0x4 ] bl
lea esp [ esp + 0x48 ]
jmp rwxdata
or edi 0x4673f804
call sub_1020cc5d
call sub_101de418
sub_101248f3
pushfd
mov [ esp ] ah
lea esp [ esp + 0x8 ]
ja rwxdata
stc
jmp rwxdata
pushad
pushad
lea esp [ esp + 0x40 ]
jb rwxdata
call sub_10132e40
dec ebp
xchg ebx eax
imul ecx [ ebx + edx * 2 ] 0xffffff87
clc
or dl [ di + 0x568 ]
test al 0xb8
nop
push edx
mov bl 0xef
out dx eax
shr ebx cl
outsd
das
fadd [ edi ]
mov [ edi ] dh
ror [ edi ] 0x1
imul edx [ ebx ] 0xffffffef
outsd
cmc
test al cl
call sub_1020a392
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
jmp rwxdata
pushfd
sub edi 0x4
stc
clc
push [ edi ]
pop [ esp ]
jmp rwxdata
rcl al cl
and al 0x72
push edi
pushfd
sub ebx edi
shr al 0x4
add esp 0x8
add ebx esp
bswap di
xor di sp
mov edi ebx
sbb al dh
cmp cl ah
call sub_10129373
add [ eax ] al
inc edi
je rwxdata
push esp
test bl 0x5c
add esp 0x4
jpo rwxdata
clc
pushfd
cmp edi ebx
jmp rwxdata
and al 0x10
test [ ebp + 0xf342464 ] cl
xchg [ edi - 0x2dfff303 ] ebp
rol al 0x1
enter 0xc007 0xe0
add ch [ ecx ]
sti
rcr di 0x3
cmp cl ah
add ebx esp
test dl ah
shl edi cl
movsx di al
jb rwxdata
call sub_1012db4a
add eax 0xbd3136c
mov ah 0xeb
cld
xchg edi eax
mov bh 0xc8
in al dx
pop esp
scasb [ edi ]
nop
out dx al
rcr ch 0x1
sub [ ebp + 0x49c11ee9 ] dh
mov ch 0xa1
mov ebp 0x8936ad72
xchg [ ecx - 0x1e421e62 ] bh
jbe rwxdata
cmp [ edi - 0x1 ] 0x0
pushad
call sub_10126e8c
mov [ eax - 0x3a ] ds
fadd st6
sub ebx edx
sbb esp [ ecx - 0x50aba2a3 ]
pushfd
push 0xfc187b5b
lea esp [ esp + 0xc ]
ja rwxdata
ficom [ ecx - 0x32 ]
lodsb [ esi ]
shl cl cl
out dx al
mov dh 0xe9
ror [ ebp + 0x75 ] 0x1
dec ecx
0x51de0025 0xacce
loop rwxdata
imul ebp [ edi + 0x6e ] 0x417845
call sub_1011778a
fmul [ esp + ecx + 0x73 ]
cmc
push 0x7b
xor edx [ ebp - 0x301e88d4 ]
shl [ esi ] 0x1
cmp eax ebp
cmp [ ebp - 0x5d930c86 ] ecx
jl rwxdata
or [ esi ] dl
daa
retn
and al 0xa4
push edx
sub ebx edi
and edi 0x1f268d54
add esp 0x4
add ebx esp
pushad
mov edi ebx
shl al cl
mov al 0x2e
pushad
[ edi ]
pushfd
pushfd
pushfd
call sub_1012779b
inc edi
popfd
sub [ esi - 0x3e92ae8f ] 0x70761747
out dx al
adc dh [ ss : edi - 0x595ce339 ]
pop eax
scasd [ edi ]
xor [ ebx - 0x69df1af4 ] dh
leave
sbb eax 0x86ad92c1
int3
mov edi ebx
rol al cl
cmc
sbb al 0xc0
pushad
mov al 0x2e
pushfd
call sub_1012ff05
sbb bl [ edx + 0x44 ]
wrmsr
mov esi 0xd32b9180
int1
xor al 0x6d
adc bh [ ss : edx + 0x5 ]
jne rwxdata
out 0x66 eax
movsx edi al
salc
les edi [ ebx - 0x75b6e904 ]
xor [ esi - 0x51 ] ebp
or dl dh
and ebp ebx
out dx al
cmp edx [ es : ecx ]
dec ebp
out 0x5d al
adc eax 0x7607e8d2
jg rwxdata
pushfd
fiadd [ ecx - 0x3443b2a ]
push ss
dec ecx
mov dh [ ecx ]
outsb
scasd [ edi ]
outsb
outsd
test [ eax - 0x34 ] ch
jg rwxdata
movsd [ edi ] [ esi ]
jbe rwxdata
pop ecx
cvtps2pd xmm0 [ edx - 0x52 ]
lds edi [ edx - 0x45b45967 ]
or esi edx
pop ecx
mov [ edx + ebx + 0x1bc3cf2f ] 0xa8
aaa

mov cl 0xe
test al 0x17
mov esi [ eax + edx * 4 ]
jne rwxdata
jbe rwxdata
lds esp [ ecx - 0x22 ]
and al 0xfb
0x59f4
adc [ esi - 0x3 ] dh
adc bh 0x87
enter 0xf768 0x8
inc eax
push cs
jne rwxdata
inc edx
mov ebp 0xddf12cc6
push ax
outsb
mov [ 0x191d945e ] eax
in al dx
0xc0506e5d 0x6f6e
inc edx
cwde
popfd
sub_10124942
pushfd
lea esp [ esp + 0x28 ]
jne rwxdata
pushfd
push ebx
push 0x7b696d7a
mov esp esi
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
lea eax [ edx - 0x660660ed ]
mov al ch
push edx
lahf
mov [ edi - 0x1 ] 0x0
push ebp
movzx ax dl
mov [ esp + 0x4 ] ebx
jmp rwxdata
ror dx 0x9
shl edx cl
cmc
xor eax eax
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
setae ah
seta ah
pushad
lea eax [ rwxdata ]
pushad
push [ esp ]
pushfd
mov [ esp + 0x48 ] rwxdata
jmp rwxdata
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
call sub_1020bb8c
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
sub_10124970
cmp ah 0x6c
mov bx [ esi ]
cmc
test dl al
test bh dl
and ebx 0xfff
test dh 0x35
cmp bl 0xa6
pushad
add [ ebx + edi ] ax
mov [ esp + 0x8 ] 0xd6
mov [ esp ] bl
lea esp [ esp + 0x24 ]
jmp rwxdata
jmp rwxdata
test dh 0xbc
add esi 0x2
pushad
pushad
call sub_1012d140
sub_10126e8c
lea esp [ esp + 0x24 ]
jne rwxdata
pushad
mov [ esp + 0x1c ] eax
mov [ esp + 0xc ] dl
push 0xa5844a7e
jmp sub_101dfccc
rcl di cl
stc
clc
mov edi [ edx + 0x24 ]
test dl 0x44
cmc
pushfd
add edi eax
clc
movzx ecx [ edi + ecx * 2 ]
add esp 0x4
pushad
pushfd
mov [ esp + 0x4 ] 0x6569
lea esp [ esp + 0x2c ]
jae rwxdata
ror dx 0x9
shl edx cl
cmc
xor eax eax
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
pushfd
mov [ esp ] sp
push ecx
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
rol di 0x3
sar di 0x1
mov edi [ edx + 0x1c ]
cmc
call sub_10128f90
cmc
push 0x16c13f23
pushfd
cmp ecx [ edx + 0x14 ]
jmp rwxdata
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
sub_101270e4
lea esp [ esp + 0x4 ]
ja rwxdata
shld cx bp 0x1
movsx cx dl
cmc
dec cl
mov ecx [ esi + 0x4 ]
bt esi esp
call sub_10132347
jmp rwxdata
mov cl 0x3c
pop esi
pushfd
mov edi [ esp + 0x4 ]
movsx ebx dl
seta cl
bswap cx
mov ebx [ esp + 0x8 ]
setno cl
mov ecx [ esp + 0xc ]
jmp rwxdata
mov [ esp ] dx
mov esp ebp
movsx bp bl
call sub_1020b1b7
sub_1012714a
cwde
lea eax [ rwxdata ]
pushad
push 0x5bb2643d
mov [ esp + 0x40 ] rwxdata
pushfd
jmp rwxdata
push 0xc9f4bc65
jmp rwxdata
mov [ esp + 0x44 ] eax
push esi
mov [ esp + 0x4 ] 0xc7
pushfd
mov [ esp ] dl
push [ esp + 0x4c ]
retn 0x50
sub_1012779b
lea esp [ esp + 0x50 ]
jne rwxdata
pushfd
push ebx
push 0x7b696d7a
mov esp esi
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
bswap eax
mov [ edi - 0x1 ] 0x0
lea eax [ edx + 0x54ca3c3c ]
push ebx
movzx ax dl
setae ah
cwde
lea eax [ rwxdata ]
jmp rwxdata
ror dx 0x9
shl edx cl
cmc
xor eax eax
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
jl rwxdata
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
pushfd
pushad
call sub_1020990b
jns rwxdata
push rwxdata
call sub_1013a0c0
popad
out dx eax
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
push esi
push [ esp ]
mov [ esp + 0x4 ] 0xe51ca9b
jmp rwxdata
pushad
mov [ esp + 0x1c ] 0xe51ca9b
pushad
lea esp [ esp + 0x3c ]
jb rwxdata
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
pushad
push [ esp ]
mov [ esp + 0x24 ] 0x20f69975
pushfd
mov [ esp ] 0xca
lea esp [ esp + 0x28 ]
jmp rwxdata
push 0x5e8e9e6f
push [ esp ]
mov [ esp + 0x4 ] 0x20f69975
pushad
pushfd
push 0x37815fd7
lea esp [ esp + 0x2c ]
jmp rwxdata
pushfd
push 0x5c855f68
mov [ esp + 0x4 ] 0x20f69975
pushad
mov [ esp + 0x4 ] dl
pushfd
push ecx
lea esp [ esp + 0x2c ]
jmp rwxdata
jmp rwxdata
pushad
mov [ esp + 0x1c ] edx
push 0xb3210dfc
pushad
lea esp [ esp + 0x40 ]
jmp sub_10210784
sub_10127b4c
pushfd
jmp rwxdata
jmp rwxdata
lea esp [ esp + 0x8 ]
je rwxdata
jbe rwxdata
pushad
jmp rwxdata
pushad
sub eax eax
jmp sub_1012fcc2
bt edx 0x5
sub eax eax
jmp sub_1012a9ff
push edx
call sub_1020e9fb
pushad
mov bl 0x1
cmp ch ch
test dl ah
call sub_10123317
sub_10127fdd
mov [ esp + 0x4 ] bx
[ edi ]
mov [ esp ] 0xb8
pushad
push [ esp ]
lea esp [ esp + 0x2c ]
jne rwxdata
pushfd
push ebx
push 0x7b696d7a
mov esp esi
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
mov eax 0xcfdffbbf
lea eax [ ebx * 2 + 0x1f691618 ]
mov [ edi - 0x1 ] 0x0
movzx ax bl
call sub_1012d30d
ror dx 0x9
shl edx cl
cmc
xor eax eax
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
sub_101283fd
push [ esp ]
mov [ esp + 0x28 ] rwxdata
call sub_10128fa5
sub eax 0x7fbf2fb0
sbb al 0x63
mov eax 0x30da0615
sbb [ edi ] ch
das
arpl [ ebx - 0x4c ] di
imul esi [ edi + 0x512d6008 ] 0xffffff92
out dx eax
out dx eax
sbb [ edi ] dh
test edx ecx
hlt
sub_10128bff
add ebx [ eax - 0x7cc0c019 ]
cmp edx [ ebx + ebp * 2 - 0x3b ]
inc eax
out dx eax
xor bh bh
and [ esi + 0x6a59a568 ] dl
sti
inc esp
cdq
pop esi
mov al 0x9b
mov [ 0x2ae57a3e ] al
adc eax 0xd0e72026
cmp edi [ ebx + eax * 2 + 0x14eeecdb ]
pop ecx
push es
jno rwxdata
in eax 0x2a
lodsb [ esi ]
pushfd
popfd
xor eax 0x40c5ecf2
daa
cmc
or [ edx + 0x4c ] ecx
popad
call 0x6c5e3f99
sar [ esi ] 0x4f
push ss
sub [ ecx - 0x2a ] ebp
xor al 0xca
pop ds
and ecx esp
push 0x1ebfa0d7
loopne rwxdata
jae rwxdata
jmp 0xffffffffdba65333
add eax 0x867f310e
pushad
pop edi
adc cl [ edx + ebx * 2 + 0x69717665 ]
push esi
xchg [ eax ] ecx
imul edx [ esi + ebp * 8 ] 0x62
sbb al 0xaa
push esp
in eax dx
inc ecx
xor eax [ edx - 0x3b5e5866 ]
fwait
and al 0x65
sbb al 0xc2
pushad
dec ebx
jg rwxdata
mov eax 0xd3f727f9
push 0xfbc47ad8
movsb [ edi ] [ esi ]
cmp [ ebp - 0x42 ] esp
mov eax [ 0xffffffffe9d5a9b5 ]
push 0xffffffd5
test eax 0x554d3215
mov [ 0xffffffffd1a91689 ] edx
lodsd [ esi ]
cmp [ esi + 0x30dc29da ] eax
mov edx 0x1da37c64
pop ecx
jo rwxdata
pop ebx
in al 0x77
or dl bh
and eax 0x716655ca
imul edx [ esi - 0x69 ] 0xbfdf00f8
shr [ esi ] 0x10
and [ eax ] ebx
xchg bh cl
aas
leave
mov [ ecx - 0x6ed26a56 ] 0xa9f6c935
cmp al [ ebp - 0x26fa1e83 ]
pop edx
add eax 0x198519ec
std
mov [ 0xffffffff81f28a37 ] eax
mov ebp 0x8757924d
sbb cl 0x85
cmc
push 0x58
inc edi
jle rwxdata
stc
jmp 0xffffffffe40feceb
jns rwxdata
sbb al 0xc2
dec esp
insd
adc ch ch
xor ebp ecx
rcl [ ebx ] cl
imul ebx [ 0x67b99f2c ] 0xffffffb8
stc
daa
not ebx
xchg esp eax
cmp eax 0x60187362
sub_10128f80
cmp ebx 0x2c445e0
bt dx 0x8
jmp rwxdata
test edi edi
mov [ esp + 0x8 ] dh
mov [ esp + 0x8 ] si
mov [ esp ] edx
pushfd
lea esp [ esp + 0x10 ]
je rwxdata
ror dx 0x9
shl edx cl
cmc
xor eax eax
pushfd
test al 0xa0
pushad
add eax edi
pushfd
cmp eax edx
jmp rwxdata
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
pushfd
mov [ esp ] cl
lea esp [ esp + 0x2c ]
jb rwxdata
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
jmp rwxdata
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
call sub_1012922c
push ss
dec esp
out 0x78 eax
jae rwxdata
out dx eax
xor al 0x40
jge rwxdata
add [ ebx + edi ] eax
push edx
xchg dh bh
adc dh [ esi ]
pop ecx
inc ebp
jpe rwxdata
push ss
clc
call 0x6f6f36c3
rcr [ ebp + 0x6e ] 0x8d
push ecx
jo rwxdata
push esp
lodsd [ esi ]
xor [ 0x39853de1 ] ebp
mov eax [ fs : 0xffffffffc9f57966 ]
shr [ ebp + 0x79c68d12 ] cl
mov ecx 0x9f8eb085
pop ecx
pop esi
or [ edx + 0x3e ] eax
fcompp
mov dl 0xc1
mov esi 0x9ec65cf
jae rwxdata
cmp [ edx - 0x66 ] ecx
movsb [ edi ] [ esi ]
fist [ ebp - 0x10a3c676 ]
shld [ ebx ] edi 0xd6
dec eax
imul ebx [ esi - 0x2061bf87 ] 0x703b4836
mov bl 0x6c
shl [ edi + ebx * 4 - 0x3e ] 0x1
push esp
sub ch [ ebx + 0x7b ]
aam 0xbe
loopne rwxdata
push ecx
in eax dx
cmpsd [ cs : esi ] [ edi ]
sahf
mov al [ 0x67d76ef5 ]
js rwxdata
push es
js rwxdata
jge rwxdata
test esi eax
xlat
retn
insb
jmp [ eax + 0x7de17590 ]

inc eax
sahf
fbstp [ esi ]
dec eax
cmp esi [ eax - 0x4d ]
insb
jae rwxdata
mov dl 0x5f
xlat
xor ah dl
inc edx
jle rwxdata
cdq
dec ebp
xchg ecx eax
movsd [ edi ] [ esi ]
add eax 0x7cd32a19
sub_101290d6
lea esp [ esp + 0x2c ]
jae rwxdata
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
ror bl cl
add di dx
not ebx
xadd di bx
mov ebx eax
btr di sp
ror di 0xc
mov edi eax
btc cx 0xb
sub cl 0x20
mov ecx 0x104
stc
cmc
pushfd
sub al al
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
ror dx 0x9
shl edx cl
cmc
xor eax eax
sar ecx 0xa
shr ch cl
movzx si cl
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
mov esi esp
call sub_1020e83e
push edi
inc ecx
jge rwxdata
into
dec edx
jne rwxdata
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
push esp
jne rwxdata
cmp eax [ ebx + 0x7c ]
push es
jpe rwxdata
call sub_10209837
lea esp [ esp + 0x8 ]
jne rwxdata
das
jo rwxdata
jge rwxdata
mov [ esp ] 0xcd
test ebx ebp
mov [ esp ] dx
[ edi ]
fbld [ ecx + 0x198182cc ]
movsd [ edi ] [ esi ]
mov dh 0xee
add ecx [ esi + 0x269d8877 ]
xchg edi eax
mov esi gs
pop es
inc ebx
sbb esp [ ebx - 0x57bfc009 ]
pop esp
test eax 0xc2f50fd
cmp edx esi
outsb
arpl [ esi ] ax
in al dx
dec eax
add eax edi
dec edi
enter 0x2356 0x79
stosb [ edi ]
xchg [ fs : ebp + 0x4a ] edx
xor [ ebx ] ebx
sysenter
aas
jns rwxdata
rcl cl cl
mov ecx edi
lea esi [ esi * 2 + 0x6cee9626 ]
adc esi 0xa37b18be
clc
bt ebx esi
sub ecx ebx
rcl si cl
dec si
mov dh 0xf1
test al 0xd7
dec esp
adc esi [ edi + 0x70bfbf67 ]
inc [ edx ]
xor al 0x2
add eax 0x8d8c8e30
scasd [ edi ]
out dx eax
scasd [ edi ]
jecxz rwxdata
dec ebx
xchg esp eax
push edi
enter 0xa03f 0xd7
mov dh ah
fdivr [ esi - 0x3f ]
shl [ eax - 0x2 ] cl
prefetchnta [ ebx + 0x75548047 ]
nop
sub_1012922c
test al 0x92
cmp eax [ ebp - 0x10 ]
pushfd
lea esp [ esp + 0x8 ]
jpo rwxdata
push 0x6b580a8f
lea esp [ esp + 0x4 ]
jae rwxdata
push 0xa2a418c2
mov [ esp ] bp
lea esp [ esp + 0x4 ]
jae rwxdata
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
stc
dec ebx
stc
mov ebx eax
rcr edi cl
mov edi eax
sbb cl ah
neg cl
shl cx 0x1
mov ecx 0x104
jmp rwxdata
cmp sp bp
movsx edi dl
xchg bx di
bts di 0xa
mov ebx eax
shrd di sp cl
bsf ecx edi
not di
inc cl
mov edi eax
add cl dl
mov ecx 0x104
jmp sub_101de447
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
cmp sp 0xb85a
pushfd
mov [ esp ] 0x40
xor al al
cmc
clc
[ edi ]
mov [ esp ] 0xfc
mov [ esp ] dl
lea esp [ esp + 0x4 ]
jne rwxdata
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
ror dx 0x9
shl edx cl
cmc
xor eax eax
cmc
xor si 0x8584
btr cx 0xf
shr esi 0x1c
mov ecx edi
not si
cmc
shl si cl
add si 0x7f8b
sub ecx ebx
mov si 0x2194
sub esi ecx
rcl si 0xe
sbb si dx
mov esi esp
call sub_101228c5
or dh [ edx - 0x109be4d4 ]
push eax
popad
inc edx
pushad
jpo rwxdata
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
xchg edi edi
jmp [ esi - 0x7f ]
stosb [ edi ]
sar [ ebp + 0x5549011e ] 0x19
movsd [ edi ] [ esi ]
int3
sub_10129388
pushfd
push [ edi ]
pop [ esp + 0x4 ]
stc
cmp edi ebx
push 0x613d6973
lea esp [ esp + 0x8 ]
ja rwxdata
pushfd
sub edi 0x4
stc
clc
push [ edi ]
pop [ esp ]
jmp rwxdata
pushfd
pushfd
sar al cl
adc al bh
sub ebx edi
stc
shl al 0x3
add esp 0x8
add ebx esp
btc di 0x1
btc di sp
mov edi ebx
dec al
jmp rwxdata
clc
pushfd
cmp edi ebx
jmp rwxdata
setne al
mov al 0x2e
stc
[ edi ]
pushad
call sub_10124942
lea esp [ esp + 0x8 ]
jne rwxdata
pushfd
push 0xfc187b5b
lea esp [ esp + 0xc ]
ja rwxdata
ror dx 0x9
shl edx cl
cmc
xor eax eax
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
rol si 0x8
bsf cx si
mov ecx edi
neg si
pushad
or esi ebx
and si 0x4086
sub ecx ebx
shr esi cl
xor esi ebx
pushfd
lea esi [ esp + 0x24 ]
add esp 0x24
and al 0xa4
push edx
sub ebx edi
and edi 0x1f268d54
add esp 0x4
add ebx esp
pushad
mov edi ebx
shl al cl
mov al 0x2e
pushad
[ edi ]
pushfd
pushfd
pushfd
call sub_1012779b
inc edi
popfd
sub [ esi - 0x3e92ae8f ] 0x70761747
out dx al
adc dh [ ss : edi - 0x595ce339 ]
pop eax
scasd [ edi ]
xor [ ebx - 0x69df1af4 ] dh
leave
sbb eax 0x86ad92c1
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
sub_101293eb
call sub_1020bbac
mov ebx 0x920df14d
and [ esi + 0x1b10bdcf ] edi
xor [ eax ] bl
pop ebx
and al 0xff
pushad
pop ecx
and eax 0xc679da24
adc eax 0x5846980a
inc esi
sahf
jo rwxdata
jmp rwxdata
setne al
mov al 0x2e
stc
[ edi ]
pushad
call sub_10124942
lea esp [ esp + 0x8 ]
jne rwxdata
ror dx 0x9
shl edx cl
cmc
xor eax eax
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
rol si 0x8
bsf cx si
mov ecx edi
neg si
pushad
or esi ebx
and si 0x4086
sub ecx ebx
shr esi cl
xor esi ebx
pushfd
lea esi [ esp + 0x24 ]
add esp 0x24
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
clc
pushfd
cmp edi ebx
jmp rwxdata
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
pushfd
push 0xfc187b5b
lea esp [ esp + 0xc ]
ja rwxdata
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
pushfd
sub edi 0x4
stc
clc
push [ edi ]
pop [ esp ]
jmp rwxdata
and al 0xa4
push edx
sub ebx edi
and edi 0x1f268d54
add esp 0x4
add ebx esp
pushad
mov edi ebx
shl al cl
mov al 0x2e
pushad
[ edi ]
pushfd
pushfd
pushfd
call sub_1012779b
inc edi
popfd
sub [ esi - 0x3e92ae8f ] 0x70761747
out dx al
adc dh [ ss : edi - 0x595ce339 ]
pop eax
scasd [ edi ]
xor [ ebx - 0x69df1af4 ] dh
leave
sbb eax 0x86ad92c1
sub_10129a53
pushfd
sbb al ah
push 0x11fe80fa
ror al cl
mov al [ edi ]
cmc
stc
cmp al 0x41
mov [ esp + 0x4 ] ah
push 0x84370f8d
pushfd
lea esp [ esp + 0x10 ]
jb rwxdata
not ah
stc
cmp al 0x5a
pushad
jmp rwxdata
0x9e39
je rwxdata
mov [ esp ] bh
lea esp [ esp + 0x20 ]
ja rwxdata
pushfd
mov ah [ esi ]
cmc
call sub_1020a01e
out 0x1f al
add [ ebx + 0x25144b2c ] dh
pushad
ror [ ebx - 0x3d ] 0x1
test [ ebx ] ebp
je rwxdata
in al dx
mov al [ 0xffffffffd4f62004 ]
pushad
cmp eax [ esi + esi + 0x48 ]
add eax 0x89f5ca19
xor eax 0x51ed45d9
push ecx
lea esp [ esi ]
mov ecx 0xda45ed32
sbb edi [ eax ]
daa
jpo rwxdata
sub ah 0xa0
add al 0x20
jl rwxdata
fcomp [ eax - 0xf913fec ]
lea edi [ esi ]
push eax
stosb [ edi ]
dec edx
sub al 0x72
sar [ edx - 0x6e ] 0x1
les ebx [ edi - 0x39 ]
pop ebp
cdq
or eax 0x588732f1
inc esi
pop eax
xchg ecx eax
dec ebp
pop esi
dec ebx
shl [ eax + 0x3a3f0cfb ] cl
cmpsd [ esi ] [ edi ]
mov [ ebx ] eax
movsb [ edi ] [ esi ]
xchg ebx eax
int3
sub_10129f7b
mov bl 0x2
jno rwxdata
call sub_1012491e
sets al
inc ecx
setl al
pushad
pushad
jmp rwxdata
mov al 0x10
push [ esp ]
lea esp [ esp + 0x44 ]
call sub_101de0e4
sub_1012a07e
mov [ esp ] al
lea esp [ esp + 0x58 ]
jne rwxdata
stc
stc
mov al [ ecx ]
bt di ax
pushad
mov ah al
stc
ror al 0x5
mov [ esp + 0x4 ] 0x16
dec al
call sub_1012e65b
jmp rwxdata
jmp rwxdata
pushad
push 0x703016e8
mov [ esp + 0x20 ] edi
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] ebx
mov [ esp ] 0x3ea1f5cb
push 0xd1700029
pushfd
lea esp [ esp + 0x24 ]
call sub_1013885d
call sub_1012d76c
seto ah
bswap ax
shr al cl
mov eax [ ebp - 0x8 ]
test ecx edi
shl eax 0x1
call sub_10127b4c
mov al [ 0xffffffff8757ceb0 ]
mov edx ebx
in al 0xd8
mov ah 0x60
adc esp ebx
dec esi
jo rwxdata
inc ebp
clc
pop esp
mov dl 0x6c
xor ecx [ ebp + 0x7bf04ea0 ]
and al 0xe3
cld
out dx eax
xor [ edx ] al
cmp al 0xe6
fldenv [ ecx - 0xc1d8323 ]
cdq
in eax 0xf6
sub_1012a203
push 0x868b0eb
lea esp [ esp + 0x4c ]
jae rwxdata
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
pushfd
clc
mov ebx eax
cmp cl ch
sar di cl
sub di di
mov edi eax
movsx cx al
mov ecx 0x104
jmp rwxdata
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
mov [ esp ] bp
sub al al
bt di si
[ edi ]
push edi
mov [ esp ] bx
mov [ esp ] cl
lea esp [ esp + 0x8 ]
jne rwxdata
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
ror dx 0x9
shl edx cl
cmc
xor eax eax
dec ch
mov ecx edi
btc si 0x3
sub ecx ebx
shl si cl
mov si bp
mov esi esp
pushfd
clc
cmp dh ch
bt ebx 0xc
sub edi 0x4
clc
cmc
jmp rwxdata
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
cmc
push [ edi ]
pop [ esp ]
push ecx
cmp ah ch
jmp rwxdata
bt edx 0x5
cmp edi ebx
jmp rwxdata
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
pushfd
sub edi 0x4
stc
clc
push [ edi ]
pop [ esp ]
jmp rwxdata
rcl al cl
and al 0x72
push edi
pushfd
sub ebx edi
shr al 0x4
add esp 0x8
add ebx esp
bswap di
xor di sp
mov edi ebx
sbb al dh
cmp cl ah
call sub_10129373
add [ eax ] al
inc edi
je rwxdata
clc
pushfd
cmp edi ebx
jmp rwxdata
and al 0x10
test [ ebp + 0xf342464 ] cl
xchg [ edi - 0x2dfff303 ] ebp
rol al 0x1
enter 0xc007 0xe0
add ch [ ecx ]
sti
rcr di 0x3
cmp cl ah
add ebx esp
test dl ah
shl edi cl
movsx di al
jb rwxdata
pushfd
push 0xfc187b5b
lea esp [ esp + 0xc ]
ja rwxdata
ficom [ ecx - 0x32 ]
lodsb [ esi ]
shl cl cl
out dx al
mov dh 0xe9
ror [ ebp + 0x75 ] 0x1
dec ecx
0x51de0025 0xacce
loop rwxdata
imul ebp [ edi + 0x6e ] 0x417845
call sub_1011778a
and al 0xa4
push edx
sub ebx edi
and edi 0x1f268d54
add esp 0x4
add ebx esp
pushad
mov edi ebx
shl al cl
mov al 0x2e
pushad
[ edi ]
pushfd
pushfd
pushfd
call sub_1012779b
inc edi
popfd
sub [ esi - 0x3e92ae8f ] 0x70761747
out dx al
adc dh [ ss : edi - 0x595ce339 ]
pop eax
scasd [ edi ]
xor [ ebx - 0x69df1af4 ] dh
leave
sbb eax 0x86ad92c1
int3
mov edi ebx
rol al cl
cmc
sbb al 0xc0
pushad
mov al 0x2e
pushfd
call sub_1012ff05
sbb bl [ edx + 0x44 ]
wrmsr
mov esi 0xd32b9180
int1
xor al 0x6d
adc bh [ ss : edx + 0x5 ]
jne rwxdata
out 0x66 eax
movsx edi al
sub_1012a328
lea esp [ esp + 0x34 ]
je rwxdata
ror dx 0x9
shl edx cl
cmc
xor eax eax
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
stc
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
mov [ ecx - 0x1c98688a ] ebp
jl rwxdata
ror [ ebx + 0x2594835b ] cl
mov edx 0x4f9c71ba
stc
retn 0xdfbc
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
sti
xchg ecx eax
out dx al
push [ edi ]
dec esp
and [ esi ] edi
cmp [ esi ] esp
mov edx ebx
in al 0x79
inc ebp
not [ ecx + 0x25 ]
mov ecx 0xd7af67d5
dec ecx
jb rwxdata
jno rwxdata
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
push ds
jns rwxdata
dec edi
add [ eax ] dh
sub [ ebx ] bl
xor al 0x81
popad
pop esi
mov dl 0xd8
mov ecx 0xb15cc24c
dec ebp
ja rwxdata
aas
jo rwxdata
stc
cld
retn
retn
lahf
outsb
mov al 0x97
or al 0xf9
or bh ah
add dl [ ebx ]
movsb [ edi ] [ esi ]
push esi
stosb [ edi ]
xchg ebp eax
salc
sbb al 0x31
arpl [ ebx ] di
clc
dec ebx
push eax
xor eax 0x74787e75
hlt
add eax edi
pushad
clc
pushfd
cmp eax edx
mov [ esp ] edi
call j_sub_1012f88b
lodsb [ esi ]
jge rwxdata
lahf
aas
add edi 0x1
pushad
push 0xc365a2bf
lea esp [ esp + 0x24 ]
jmp rwxdata
shl eax 0x1
call sub_10127b4c
mov al [ 0xffffffff8757ceb0 ]
mov edx ebx
in al 0xd8
mov ah 0x60
adc esp ebx
dec esi
jo rwxdata
inc ebp
clc
test ecx edi
pop esp
mov dl 0x6c
xor ecx [ ebp + 0x7bf04ea0 ]
and al 0xe3
cld
out dx eax
xor [ edx ] al
cmp al 0xe6
fldenv [ ecx - 0xc1d8323 ]
cdq
in eax 0xf6
sar al cl
stc
mov al [ edi ]
pushad
push 0x39b76b80
test al al
pushad
lea esp [ esp + 0x44 ]
je rwxdata
bswap di
call sub_1020e7f0
cmc
jmp rwxdata
test bx bx
sub al 0x30
stc
test si 0x754f
pushfd
cmp al ah
cmp al 0x9
pushfd
pushfd
mov [ esp + 0x4 ] 0xfc
lea esp [ esp + 0xc ]
ja rwxdata
pushfd
push ebx
push 0x7b696d7a
mov esp esi
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
bt di si
imul edx edx 0xa
stc
add edx eax
push 0x5b772db3
pushfd
pushfd
lea esp [ esp + 0xc ]
jmp rwxdata
bt bp bp
add edi 0x1
sub_1012b18b
stc
rol al 0x5
push 0x64e273aa
pushfd
clc
pushfd
cmp al [ edi ]
movzx eax bl
pop eax
bswap ax
lea edi [ edi + 0x1 ]
bswap ax
push 0x10e74f54
setle ah
bswap eax
mov eax [ esp + 0x40 ]
pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
stc
jmp rwxdata
pushfd
mov [ esp ] dx
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
call sub_10132e40
dec ebp
xchg ebx eax
imul ecx [ ebx + edx * 2 ] 0xffffff87
clc
or dl [ di + 0x568 ]
test al 0xb8
nop
push edx
mov bl 0xef
out dx eax
shr ebx cl
outsd
das
fadd [ edi ]
mov [ edi ] dh
ror [ edi ] 0x1
imul edx [ ebx ] 0xffffffef
outsd
cmc
test al cl
call sub_1020a392
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
jmp rwxdata
pushfd
sub edi 0x4
stc
clc
push [ edi ]
pop [ esp ]
jmp rwxdata
rcl al cl
and al 0x72
push edi
pushfd
sub ebx edi
shr al 0x4
add esp 0x8
add ebx esp
bswap di
xor di sp
mov edi ebx
sbb al dh
cmp cl ah
call sub_10129373
add [ eax ] al
inc edi
je rwxdata
stc
cmp [ edi - 0x1 ] 0x0
pushfd
call sub_1020f22a
push ecx
test al al
push [ esp + 0x4 ]
lea esp [ esp + 0x10 ]
je rwxdata
clc
pushfd
cmp edi ebx
jmp rwxdata
and al 0x10
test [ ebp + 0xf342464 ] cl
xchg [ edi - 0x2dfff303 ] ebp
rol al 0x1
enter 0xc007 0xe0
add ch [ ecx ]
sti
rcr di 0x3
cmp cl ah
add ebx esp
test dl ah
shl edi cl
movsx di al
jb rwxdata
bswap di
call sub_1020e7f0
pushad
pushad
push 0x1f9ebbba
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
pushfd
push 0xfc187b5b
lea esp [ esp + 0xc ]
ja rwxdata
ficom [ ecx - 0x32 ]
lodsb [ esi ]
shl cl cl
out dx al
mov dh 0xe9
ror [ ebp + 0x75 ] 0x1
dec ecx
0x51de0025 0xacce
loop rwxdata
imul ebp [ edi + 0x6e ] 0x417845
call sub_1011778a
cmc
jmp rwxdata
and al 0xa4
push edx
sub ebx edi
and edi 0x1f268d54
add esp 0x4
add ebx esp
pushad
mov edi ebx
shl al cl
mov al 0x2e
pushad
[ edi ]
pushfd
pushfd
pushfd
call sub_1012779b
inc edi
popfd
sub [ esi - 0x3e92ae8f ] 0x70761747
out dx al
adc dh [ ss : edi - 0x595ce339 ]
pop eax
scasd [ edi ]
xor [ ebx - 0x69df1af4 ] dh
leave
sbb eax 0x86ad92c1
int3
mov edi ebx
rol al cl
cmc
sbb al 0xc0
pushad
mov al 0x2e
pushfd
call sub_1012ff05
sbb bl [ edx + 0x44 ]
wrmsr
mov esi 0xd32b9180
int1
xor al 0x6d
adc bh [ ss : edx + 0x5 ]
jne rwxdata
out 0x66 eax
movsx edi al
test bx bx
sub al 0x30
stc
test si 0x754f
pushfd
cmp al ah
cmp al 0x9
pushfd
pushfd
mov [ esp + 0x4 ] 0xfc
lea esp [ esp + 0xc ]
ja rwxdata
pushfd
push ebx
push 0x7b696d7a
mov esp esi
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
bt di si
imul edx edx 0xa
stc
add edx eax
push 0x5b772db3
pushfd
pushfd
lea esp [ esp + 0xc ]
jmp rwxdata
ror dx 0x9
shl edx cl
cmc
xor eax eax
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
bt bp bp
add edi 0x1
sar al cl
stc
mov al [ edi ]
pushad
push 0x39b76b80
test al al
pushad
lea esp [ esp + 0x44 ]
je rwxdata
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
sub_1012bb93
lea esp [ esp + 0x30 ]
jne rwxdata
pushfd
push ebx
push 0x7b696d7a
mov esp esi
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
pushad
setg ah
pop eax
bswap ax
mov [ edi - 0x1 ] 0x0
jmp rwxdata
ror dx 0x9
shl edx cl
cmc
xor eax eax
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
not eax
mov [ esp + 0x18 ] ebx
movsx ax dl
cwde
lea eax [ rwxdata ]
pushfd
jmp rwxdata
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
pushad
mov [ esp + 0x38 ] rwxdata
push ecx
mov [ esp ] 0x851c5449
mov [ esp + 0x38 ] eax
pushfd
pushfd
mov [ esp + 0x8 ] 0x2f
mov [ esp + 0x4 ] dh
push [ esp + 0x40 ]
retn 0x44
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
sub_1012bf76
add ecx [ ebp - 0x4 ]
pop esi
add di di
movzx edi cl
bsf si sp
shr ecx 0x1
pushfd
or di 0x224c
inc di
shl esi cl
mov edi [ ebx + ecx * 4 ]
rcl si 0x3
mov si di
not si
stc
add edi eax
mov [ esp ] 0x285c
pop esi
not si
movzx esi al
mov esi [ ebp + 0xc ]
pushad
mov [ esp + 0x1c ] eax
mov [ esp + 0xc ] dl
push 0xa5844a7e
jmp sub_101dfccc
sub_1012c171
cmp eax 0x7d00
pushfd
mov [ esp ] 0xf7
lea esp [ esp + 0x10 ]
jae rwxdata
dec bl
inc ecx
pushad
clc
pushfd
cmp ah 0x5
mov [ esp + 0x4 ] dh
jmp rwxdata
lea esp [ esp + 0x24 ]
jns rwxdata
pushfd
mov [ esp ] 0xc
call sub_10208c9a
jae rwxdata
not bl
call sub_1020bafa
cmp bx ax
cmp eax 0x7f
call sub_1012f41f
sub_1012c5c8
lea esp [ esp + 0x38 ]
jne rwxdata
ror dx 0x9
shl edx cl
cmc
xor eax eax
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
push esi
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
rol si 0x8
bsf cx si
mov ecx edi
neg si
pushad
or esi ebx
and si 0x4086
sub ecx ebx
shr esi cl
xor esi ebx
pushfd
lea esi [ esp + 0x24 ]
add esp 0x24
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
clc
pushfd
cmp edi ebx
jmp rwxdata
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
pushfd
push 0xfc187b5b
lea esp [ esp + 0xc ]
ja rwxdata
pushfd
sub edi 0x4
stc
clc
push [ edi ]
pop [ esp ]
jmp rwxdata
and al 0xa4
push edx
sub ebx edi
and edi 0x1f268d54
add esp 0x4
add ebx esp
pushad
mov edi ebx
shl al cl
mov al 0x2e
pushad
[ edi ]
pushfd
pushfd
pushfd
call sub_1012779b
inc edi
popfd
sub [ esi - 0x3e92ae8f ] 0x70761747
out dx al
adc dh [ ss : edi - 0x595ce339 ]
pop eax
scasd [ edi ]
xor [ ebx - 0x69df1af4 ] dh
leave
sbb eax 0x86ad92c1
sub_1012c813
inc ecx
pushfd
pushfd
push [ esp ]
inc ecx
pushad
adc bl dh
bt ax 0x5
rcr bl 0x4
xchg ebp eax
adc bl 0x5d
das
xchg bl al
mov eax ebp
rcr bl cl
shl bl cl
mov bl 0x1
mov [ esp ] 0xc2ce
mov [ esp + 0x2c ] esi
cmp bh cl
btr si si
shl si cl
xor si sp
mov esi edi
cmp bl 0x40
test ch 0x98
sub esi eax
push 0x84a6b82f
mov [ esp + 0x4 ] 0xde48
mov [ esp + 0x4 ] bl
[ edi ] [ esi ]
mov [ esp ] 0x580e199
mov esi [ esp + 0x30 ]
push ebx
pushfd
lea esp [ esp + 0x3c ]
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_101de0e4
sub_1012ccda
push [ esp ]
add esp 0x30
jg rwxdata
stc
call sub_101dd995
shl eax 0x8
not al
not al
mov al 0x87
jmp rwxdata
lodsb [ esi ]
cmc
ja rwxdata
pushfd
jmp rwxdata
rol al 0x5
call sub_1012f960
rol al 0x5
cmp dl 0xe7
add al 0x59
bt di bx
cmc
call sub_1020e40e
sub_1012cf7b
neg al
mov [ esp ] bl
mov [ esp ] ecx
mov [ esp + 0x4 ] 0xf5
inc al
cmc
bt sp si
pushfd
rol al 0x5
mov [ esp ] 0xd9
pushfd
cmp dh dh
cmp al [ edi ]
movsx ax cl
lea edi [ edi + 0x1 ]
push edx
pushfd
mov eax [ esp + 0x38 ]
jmp rwxdata
push esi
pushfd
lea esp [ esp + 0x44 ]
ja rwxdata
stc
jmp rwxdata
pushfd
call sub_101dec4a
mov [ ecx ] dh
call sub_10132e40
dec ebp
xchg ebx eax
imul ecx [ ebx + edx * 2 ] 0xffffff87
clc
or dl [ di + 0x568 ]
test al 0xb8
nop
push edx
mov bl 0xef
out dx eax
shr ebx cl
outsd
das
fadd [ edi ]
mov [ edi ] dh
ror [ edi ] 0x1
imul edx [ ebx ] 0xffffffef
outsd
sub_1012d14f
mov [ esp ] 0xec
lea esp [ esp + 0x4 ]
jne rwxdata
cmc
cmp bl bl
pushfd
mov [ esp ] esi
rcr si cl
shrd si di cl
ror si cl
mov esi edi
pushfd
jmp sub_1020c1e6
pushfd
push [ esp ]
stosb [ edi ]
push 0xf1351311
pushad
mov [ esp + 0xc ] ah
mov [ esp + 0x8 ] 0xe12f
lea esp [ esp + 0x2c ]
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_101de0e4
sub_1012d30d
mov [ esp ] ebx
pushfd
jmp rwxdata
cwde
lea eax [ rwxdata ]
jmp rwxdata
push [ esp ]
pushad
mov [ esp + 0x24 ] rwxdata
pushad
mov [ esp + 0x40 ] eax
pushfd
push [ esp + 0x44 ]
retn 0x48
sub_1012d719
lea esp [ esp + 0x8 ]
je rwxdata
call sub_10209101
jmp sub_10139619
pushfd
mov esi eax
cwde
lea eax [ 0x4b5fbc30 ]
lea esp [ esp + 0x4 ]
jle rwxdata
setpe al
pushad
cwde
pop eax
mov [ esp + 0x18 ] ebx
push 0x7f1fd35b
cwde
movsx eax cl
mov ax [ esp + 0x8 ]
lea eax [ LocalFree@IAT ]
mov [ esp ] 0x2c
call sub_1011776e
push ebx
jne rwxdata
movzx eax bl
mov ah al
lea eax [ LocalFree@IAT ]
pushfd
push eax
mov [ esp + 0x4 ] rwxdata
pushad
pushad
jmp rwxdata
lea eax [ edx * 2 + 0x61275c96 ]
movsx ax bl
not al
lea eax [ LocalFree@IAT ]
pushfd
mov [ esp ] ax
mov [ esp ] rwxdata
pushfd
push [ esp ]
jmp rwxdata
mov [ esp + 0x4 ] bx
push [ eax ]
pop [ esp + 0x40 ]
push [ esp + 0x1c ]
pushfd
mov [ esp ] 0x71
push [ esp + 0x48 ]
retn 0x4c
jmp rwxdata
push [ eax ]
pop [ esp + 0x4 ]
push 0xdd903eb3
push eax
pushfd
push [ esp + 0x10 ]
retn 0x14
sub_1012d76c
pushad
mov esp esi
pushfd
push ebx
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
sub_1012daa3
neg cx
sbb ch 0x97
mov ecx 0x104
push 0x89ef4350
push [ esp ]
bt bp 0x6
clc
xor al al
clc
pushfd
clc
[ edi ]
lea esp [ esp + 0x10 ]
jle rwxdata
push 0x41e416b4
push [ esp ]
pushad
jmp rwxdata
push esp
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
lea esp [ esp + 0x28 ]
jne rwxdata
ror dx 0x9
shl edx cl
cmc
xor eax eax
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
rol si 0x8
bsf cx si
mov ecx edi
neg si
pushad
or esi ebx
and si 0x4086
sub ecx ebx
shr esi cl
xor esi ebx
pushfd
lea esi [ esp + 0x24 ]
add esp 0x24
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
clc
pushfd
cmp edi ebx
jmp rwxdata
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
pushfd
push 0xfc187b5b
lea esp [ esp + 0xc ]
ja rwxdata
pushfd
sub edi 0x4
stc
clc
push [ edi ]
pop [ esp ]
jmp rwxdata
and al 0xa4
push edx
sub ebx edi
and edi 0x1f268d54
add esp 0x4
add ebx esp
pushad
mov edi ebx
shl al cl
mov al 0x2e
pushad
[ edi ]
pushfd
pushfd
pushfd
call sub_1012779b
inc edi
popfd
sub [ esi - 0x3e92ae8f ] 0x70761747
out dx al
adc dh [ ss : edi - 0x595ce339 ]
pop eax
scasd [ edi ]
xor [ ebx - 0x69df1af4 ] dh
leave
sbb eax 0x86ad92c1
sub_1012e65b
cmc
pushad
neg al
call sub_101e1138
cmp al 0x59
or ecx ecx
pushfd
jmp rwxdata
lea esp [ esp + 0x4 ]
je rwxdata
jmp rwxdata
lahf
clc
clc
xor ebx ebx
clc
adc cl ch
not cx
setle al
mov [ ebp - 0x4 ] ebx
stc
inc ah
xadd cx ax
inc ah
mov eax edx
btr ecx 0x8
btr cx si
not cx
shr eax 0x10
shld cx bp 0x1
movsx cx dl
cmc
dec cl
mov ecx [ esi + 0x4 ]
bt esi esp
call sub_10132347
mov cl 0x3c
pop esi
pushfd
mov edi [ esp + 0x4 ]
movsx ebx dl
seta cl
bswap cx
mov ebx [ esp + 0x8 ]
setno cl
mov ecx [ esp + 0xc ]
jmp rwxdata
mov [ esp ] dx
mov esp ebp
movsx bp bl
call sub_1020b1b7
sub_1012e66e
mov [ esp ] si
pushfd
push ecx
or al al
jmp rwxdata
lea esp [ esp + 0xc ]
je rwxdata
jmp rwxdata
pushfd
stc
push 0xcbfe0217
cmp al ah
push [ esp + 0x4 ]
jmp rwxdata
stc
lea esp [ esp + 0xc ]
jle rwxdata
inc ebx
in al 0xc
salc
mov esp 0x3b8f6f8c
jecxz rwxdata
pushad
pushfd
jmp rwxdata
push ebx
lea esp [ esp + 0x4 ]
jne rwxdata
bt ecx 0xc
clc
or ah ah
call sub_101e1086
xbegin 0x42bfd700
sti
and edi ecx
fbstp [ eax ]
lea esp [ esp + 0x24 ]
jne rwxdata
push esi
push [ esp + 0x4 ]
retn 0x8
pushad
pushad
inc esi
call sub_1012a6bc
pushfd
mov ah 0xca
mov ah 0xa
fbstp [ es : ecx + eax ]
mov ebx 0x3b7dcb3a
and al 0x4d
int1
aad 0x29
xor [ ebp + 0x2e ] ebp
push ecx
shr esi 0x1
aad 0xa
call sub_1012f333
je rwxdata
0xb09073c9 0xa955
stosb [ edi ]
mov edx 0xcb52fea0
int3
sub_1012e6ac
pushad
mov [ esp ] si
mov [ esp ] bl
[ edi ] [ esi ]
pushfd
movsx si al
movsx si dl
mov esi [ esp + 0x30 ]
pushfd
mov [ esp + 0x14 ] bl
push ecx
pushfd
lea esp [ esp + 0x40 ]
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_101de0e4
sub_1012f243
lea esp [ esp + 0x4 ]
jb rwxdata
cmc
test al cl
call sub_1020a392
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
call sub_1020ac66
pushfd
sub edi 0x4
stc
clc
push [ edi ]
pop [ esp ]
jmp rwxdata
rcl al cl
and al 0x72
push edi
pushfd
sub ebx edi
shr al 0x4
add esp 0x8
add ebx esp
bswap di
xor di sp
mov edi ebx
sbb al dh
cmp cl ah
call sub_10129373
add [ eax ] al
inc edi
je rwxdata
clc
pushfd
cmp edi ebx
jmp rwxdata
and al 0x10
test [ ebp + 0xf342464 ] cl
xchg [ edi - 0x2dfff303 ] ebp
rol al 0x1
enter 0xc007 0xe0
add ch [ ecx ]
sti
rcr di 0x3
cmp cl ah
add ebx esp
test dl ah
shl edi cl
movsx di al
jb rwxdata
pushfd
push 0xfc187b5b
lea esp [ esp + 0xc ]
ja rwxdata
ficom [ ecx - 0x32 ]
lodsb [ esi ]
shl cl cl
out dx al
mov dh 0xe9
ror [ ebp + 0x75 ] 0x1
dec ecx
0x51de0025 0xacce
loop rwxdata
imul ebp [ edi + 0x6e ] 0x417845
call sub_1011778a
and al 0xa4
push edx
sub ebx edi
and edi 0x1f268d54
add esp 0x4
add ebx esp
pushad
mov edi ebx
shl al cl
mov al 0x2e
pushad
[ edi ]
pushfd
pushfd
pushfd
call sub_1012779b
inc edi
popfd
sub [ esi - 0x3e92ae8f ] 0x70761747
out dx al
adc dh [ ss : edi - 0x595ce339 ]
pop eax
scasd [ edi ]
xor [ ebx - 0x69df1af4 ] dh
leave
sbb eax 0x86ad92c1
int3
mov edi ebx
rol al cl
cmc
sbb al 0xc0
pushad
mov al 0x2e
pushfd
call sub_1012ff05
sbb bl [ edx + 0x44 ]
wrmsr
mov esi 0xd32b9180
int1
xor al 0x6d
adc bh [ ss : edx + 0x5 ]
jne rwxdata
out 0x66 eax
movsx edi al
sub_1012f310
clc
pushfd
bt bp 0x1
add edi eax
clc
mov edi [ edi + ecx * 4 ]
pushfd
test edi edi
mov [ esp ] bh
pushad
lea esp [ esp + 0x2c ]
je rwxdata
ror dx 0x9
shl edx cl
cmc
xor eax eax
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
call sub_10117b70
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
sub_1012f400
lea esp [ esp + 0x4 ]
add ebx esp
bswap di
btc edi edx
movsx di al
inc di
mov edi ebx
rcr al 0x6
mov al 0x2e
jmp rwxdata
[ edi ]
jmp rwxdata
pushad
jmp rwxdata
lea esp [ esp + 0x20 ]
jne rwxdata
pushfd
push ebx
push 0x7b696d7a
mov esp esi
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
bswap ax
pushad
movsx eax cl
mov [ edi - 0x1 ] 0x0
mov [ esp ] 0xa0
bswap ax
pop eax
mov [ esp + 0x18 ] ebx
push 0x76afdb5c
lea eax [ ebp - 0x48f7e3f7 ]
setpe al
lea eax [ rwxdata ]
pushad
pushfd
jmp rwxdata
ror dx 0x9
shl edx cl
cmc
xor eax eax
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
mov [ esp + 0x3c ] rwxdata
pushfd
pushfd
push 0x53bbcdc2
mov [ esp + 0x44 ] eax
push [ esp ]
push [ esp + 0x48 ]
retn 0x4c
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
sub_1012f41f
lea esp [ esp + 0x4 ]
ja rwxdata
ror bl 0x1
pushfd
add bl 0x50
xchg ebp eax
add esp 0x4
not bl
ror bl cl
mov eax ebp
test edi ebx
ror bl 0x5
mov bl 0x1
cmc
cmp bl bl
pushfd
mov [ esp ] esi
rcr si cl
shrd si di cl
ror si cl
mov esi edi
pushfd
jmp sub_1020c1e6
call sub_1020fac3
sub_1012f88b
mov [ esp ] dh
lea esp [ esp + 0x28 ]
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
test eax ebx
pushad
cmc
pushfd
cmp eax [ ebp - 0x10 ]
pushad
call j_sub_1012a203
lds ecx [ ebx - 0x34140c0d ]
xor eax [ edx + edi * 2 - 0x43 ]
aad 0xbb
lea ebp [ esi ]
xchg ecx eax
or dh [ ebp + 0x45 ]
fld st5
fstp [ esi + 0xab549c1 ]
xchg ebp eax
jge rwxdata
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
jb rwxdata
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
jb rwxdata
mov cl 0xd
test eax 0xeff02a55
add [ esi ] dh
dec ecx
push ds
mov [ esi - 0x35 ] dh
sub eax 0x4079f48b
mov [ 0x1d622ac6 ] eax
push ebp
out dx al
adc al ch
xor [ ebx - 0x2f ] dl
pop ebx
in al dx
leave
sbb eax 0xf2a85add
int3
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
sub_1012fcc2
or ebx ebx
mov [ esp + 0x8 ] 0x3e
pushfd
push edi
pushfd
lea esp [ esp + 0x2c ]
je rwxdata
call sub_10209101
jmp sub_10139619
movzx si cl
pushfd
mov esi eax
seta ah
movzx ax dl
mov [ esp ] ebx
movzx ax dl
lahf
lea eax [ LocalFree@IAT ]
pushfd
call sub_1020fadf
lea esp [ esp + 0x30 ]
jb rwxdata
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
bt ax ax
pushfd
cmp eax [ ebp - 0x10 ]
push 0x64eb5db1
lea esp [ esp + 0x8 ]
jae rwxdata
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
shr di 0xf
mov ebx eax
dec di
mov edi eax
pushfd
and ch 0x55
mov ecx 0x104
call sub_10139d4f
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
sub_1012fd90
pushfd
cmp dl dh
test edi edi
call sub_10138782
jb rwxdata
mov al [ 0xfffffffff9f80000 ]
mov [ edi ] cs
jo rwxdata
pushad
sub eax eax
call sub_1020c7ee
add al bh
stc
sub eax 0x4e7fc13e
stosb [ edi ]
sahf
mov [ 0x446fcf63 ] al
fwait
mov dl [ ebx + ebp * 2 + 0x34 ]
salc
sub [ edi + 0x48 ] dh
push esi
dec eax
mov bh 0x88
jg rwxdata
mov bh [ edx ]

xchg [ eax + 0x1f ] bl
inc eax
out dx eax
xor [ ebx + esi * 8 ] ch
add al 0xfd
and dh [ ebx ]
sbb eax 0xf00b3484
and [ ebx ] al
pop esp
popfd
xchg edx eax
in eax dx
cdq
mov bh 0x25
popad
sub [ esi ] esi
xlat
daa
fldenv [ edi + 0x5d ]
fldenv [ esi + 0xa9f0c1 ]
mov dl 0x58
out 0x91 al
into
fbld [ ecx ]
rcr [ ss : esi - 0x5844059c ] 0x8a
pop ds
retn
sub_1012ff05
clc
[ edi ]
mov [ esp + 0x8 ] 0x20
push [ esp + 0x4 ]
call sub_1012bb93
js rwxdata
xchg [ edi - 0x778878c1 ] bl
inc edx
adc [ eax - 0x18 ] edx
shr esp cl
cmp al [ edx + esi * 2 - 0x13 ]
fld [ ecx + 0x3a ]
test eax 0x754d9275
dec ecx
out 0x39 al
mov eax 0xd712e4d
mov cl 0x29
push esi
jb rwxdata
pop esi
push ds
inc [ eax ]
adc [ ecx + ebx - 0x5f ] edx
jle rwxdata
sbb edi [ eax ]
scasd [ edi ]
xor cl [ ebp + 0x5e ]
cmp eax [ ebx - 0x8 ]
dec edi
xchg ah bh
jno rwxdata
sub al 0x3d
mov esi 0x8db95e3e
fisub [ eax - 0x66594f92 ]
sub [ esi + 0x4f ] esi
outsd
fwait
inc esp
out dx al
xor [ ecx + 0x16 ] ecx
out dx eax
dec edi
or al 0x73
push esp
cmp [ edi + 0x58 ] al
nop
pop edi
loopne rwxdata
mov [ 0x1b5e4d32 ] edx
cmp [ esi ] ah
scasd [ edi ]
sbb [ esi + 0x5e ] ah
cmpsd [ esi ] [ edi ]
call 0x3cf66773
arpl [ edx + esi * 2 ] bp
push es
inc esp
pop edx
inc ecx
bound ebp [ di ]
out 0x24 al
shl [ esp + eax * 4 - 0x69a54125 ] 0x1
fisub [ ebp - 0x5a ]
outsd
sub_10132347
or ecx ecx
pushad
pushfd
push eax
lea esp [ esp + 0x2c ]
je rwxdata
jmp rwxdata
neg di
add [ ebp - 0x4 ] ecx
not di
rol edi 0x8
sub ecx 0x8
lea edi [ ebx + 0x745eb850 ]
cmc
sbb bh 0x32
shr ecx 0x1
btr edi eax
shr bh 0x6
mov edi [ esi ]
rcr bx cl
movzx bx dl
rol bl 0x1
sar bh 0x1
add edi [ ebp + 0x10 ]
movzx bx al
adc bl bh
add bh ch
add esi 0x8
stc
shl bx cl
inc bx
mov bh 0x6a
mov bx [ esi ]
clc
call sub_101dd99d
mov cl 0x3c
pop esi
pushfd
mov edi [ esp + 0x4 ]
movsx ebx dl
seta cl
bswap cx
mov ebx [ esp + 0x8 ]
setno cl
mov ecx [ esp + 0xc ]
jmp rwxdata
mov [ esp ] dx
mov esp ebp
movsx bp bl
call sub_1020b1b7
sub_101326a8
push [ esp + 0x8 ]
pushfd
pushad
lea esp [ esp + 0x3c ]
je rwxdata
or bl ah
stc
mov bx [ esi ]
stc
test ah 0xfc
cmc
cmc
and ebx 0xfff
pushfd
clc
cmc
pushfd
add [ ebx + edi ] edx
add esp 0x8
push 0xc2068e58
lea esp [ esp + 0x4 ]
jmp rwxdata
test dh 0xbc
add esi 0x2
pushad
pushad
call sub_1012d140
jmp rwxdata
sub_10132e40
cmp ecx [ ebp - 0x4 ]
pushfd
lea esp [ esp + 0x8 ]
jae rwxdata
ror dx 0x9
shl edx cl
cmc
xor eax eax
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
cmp dh bh
add ecx 0x1
jmp rwxdata
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
pushad
pushad
mov [ esp ] 0x11
mov [ ebp - 0x8 ] ecx
pushfd
push esi
mov [ esp + 0x4 ] bl
lea esp [ esp + 0x48 ]
jmp rwxdata
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
or edi 0x4673f804
call sub_1020cc5d
call sub_101de418
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
sub_10138782
pushfd
lea esp [ esp + 0x3c ]
je rwxdata
ror dx 0x9
shl edx cl
cmc
xor eax eax
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
cmc
cmp dl 0x19
cmc
add eax edi
pushfd
cmp eax edx
jmp rwxdata
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
call sub_10123f95
loope rwxdata
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
fild [ ebp + 0x43 ]
pop esp
mov al 0x51
into
popad
mov esi 0x6f99f5cf
cmp edx [ eax + 0x5c5113af ]
nop
dec edx
insd
lodsd [ esi ]
xor al [ edx ]
or al 0xf7

xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
sub_1013885d
pushad
bt cx 0x3
xchg [ esp + 0x1c ] ebp
push ebp
bts eax edx
sub ax 0xa62d
lea ebp [ esp + 0x20 ]
cmc
shl ah cl
sub esp 0xfffffff8
lea eax [ ebp - 0x7ea0efa7 ]
aam 0xae
push esi
aam 0x87
ror eax cl
btr ax di
add al 0xaf
push edi
adc ah dl
push ebx
ror al cl
bts ax 0x1
shrd eax esp cl
push edx
bsf ax di
adc ah 0x85
mov eax [ ebp + 0x8 ]
push edi
pushad
test eax eax
mov [ esp + 0xc ] al
jmp rwxdata
lea esp [ esp + 0x24 ]
je rwxdata
ror dx 0x9
shl edx cl
cmc
xor eax eax
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
bsr esi ecx
shr edx 0xf
add si 0xa9b7
mov esi [ eax + 0x3c ]
xor dx 0x30f0
add esi eax
bsr edx ebx
mov edx [ esi + 0x78 ]
cmp ebx ebx
stc
test edx edx
pushfd
mov [ esp ] 0x4d
lea esp [ esp + 0x4 ]
je rwxdata
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
movsx cx bl
add edx eax
or cx dx
movsx cx dl
mov cx si
shl ecx cl
mov ecx [ esi + 0x7c ]
call sub_1020ca64
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
sub_101388df
jmp rwxdata
lea esp [ esp + 0x8 ]
jne rwxdata
ror dx 0x9
shl edx cl
cmc
xor eax eax
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
sar ecx 0xa
shr ch cl
movzx si cl
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
mov esi esp
call sub_1020e83e
push edi
inc ecx
jge rwxdata
into
dec edx
jne rwxdata
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
push esp
jne rwxdata
cmp eax [ ebx + 0x7c ]
push es
jpe rwxdata
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
call sub_10209837
das
jo rwxdata
jge rwxdata
mov [ esp ] 0xcd
test ebx ebp
mov [ esp ] dx
[ edi ]
fbld [ ecx + 0x198182cc ]
movsd [ edi ] [ esi ]
mov dh 0xee
add ecx [ esi + 0x269d8877 ]
xchg edi eax
mov esi gs
pop es
inc ebx
sbb esp [ ebx - 0x57bfc009 ]
pop esp
test eax 0xc2f50fd
cmp edx esi
outsb
arpl [ esi ] ax
in al dx
dec eax
add eax edi
dec edi
enter 0x2356 0x79
stosb [ edi ]
xchg [ fs : ebp + 0x4a ] edx
xor [ ebx ] ebx
sysenter
aas
jns rwxdata
rcl cl cl
mov ecx edi
lea esi [ esi * 2 + 0x6cee9626 ]
adc esi 0xa37b18be
clc
bt ebx esi
sub ecx ebx
rcl si cl
dec si
mov dh 0xf1
test al 0xd7
dec esp
adc esi [ edi + 0x70bfbf67 ]
inc [ edx ]
xor al 0x2
add eax 0x8d8c8e30
scasd [ edi ]
out dx eax
scasd [ edi ]
jecxz rwxdata
dec ebx
xchg esp eax
push edi
enter 0xa03f 0xd7
mov dh ah
fdivr [ esi - 0x3f ]
shl [ eax - 0x2 ] cl
prefetchnta [ ebx + 0x75548047 ]
nop
sub_10138c0c
bt esi ecx
lea esp [ esp + 0xc ]
je rwxdata
cmc
movzx ecx [ edi + ecx * 2 ]
sbb di 0x1a5f
mov edi [ edx + 0x1c ]
movzx ecx [ edi + ecx * 2 ]
adc di 0x1bea
cmp al bh
and di 0x2d1a
xor edi edx
mov edi [ edx + 0x1c ]
pushad
add edi eax
pushfd
test ch 0x7a
cmc
pushfd
mov edi [ edi + ecx * 4 ]
pushfd
call sub_1012fd90
jmp rwxdata
sbb ah [ 0x28982955 ]
not [ edi + 0x3513a6b4 ]
add dh bl
adc esi edx
aad 0xca
imul esi esi 0x16a93ae5
aaa
out 0x94 eax
mov [ esp + 0x4 ] dl
lea esp [ esp + 0x24 ]
jne rwxdata
call sub_1012f310
sub eax [ esi + 0x39 ]
loopne rwxdata
pushad
jmp rwxdata
mov dl ch
pushad
pushad
pushf
pop [ esp + 0x3e ]
rcr dl 0x6
rol dl cl
push [ esp + 0x14 ]
jmp rwxdata
sbb dh ah
fsubr st2
je rwxdata
sub [ eax - 0x4b6809d8 ] ebx
cmpsb [ esi ] [ edi ]
adc esi [ 0xfffffffff213de00 ]
sub [ edx ] eax
jge rwxdata
pushad
push [ esp + 0x40 ]
retn 0x44
mov dl [ esi ]
push 0xfea0ef86
push ecx
push 0xd97b46bd
rol dl 0x5
bt sp 0x1
jmp rwxdata
or edx [ eax + 0x75344aef ]
add bh [ ebp - 0x72 ]
jb rwxdata
xchg esp eax
nop
mov eax [ 0x110a9233 ]
inc edi
je rwxdata
call sub_1020ac5c
xchg esi eax
jb rwxdata
xchg [ edi - 0x208ff071 ] ch
push ss
leave
fidiv [ ebx + 0xc ]
popad
sbb ah [ ebp + esi * 2 + 0x45 ]
mov ch 0x93
in al dx
std
nop
dec ebx
dec ebp
jae rwxdata
call sub_10139bb9
test edi edi
mov [ esp + 0x8 ] dh
mov [ esp + 0x8 ] si
mov [ esp ] edx
pushfd
lea esp [ esp + 0x10 ]
je rwxdata
out dx al
xor [ edx + 0x73ec3d2c ] dl
fdiv [ ebx + 0x216eda64 ]
jge rwxdata
sbb cl [ ebx + 0x57e81c7a ]
aas
[ ebx ]
mov [ edx + 0x59aed1c0 ] ebx
ror dx 0x9
shl edx cl
cmc
xor eax eax
pushfd
test al 0xa0
pushad
add eax edi
pushfd
cmp eax edx
jmp rwxdata
sub [ 0xffffffff91ba65ba ] esi
inc ebx
rol [ ebx + 0x4f0401e1 ] 0x1
pop ecx
std
popad
sbb [ ebp + 0x61 ] esp
popfd
push 0x75
mov [ esi ] edx
xor [ esi - 0x5 ] ecx
add ecx [ ebx + esi + 0x47f73b23 ]
jmp rwxdata
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
pushfd
mov [ esp ] cl
lea esp [ esp + 0x2c ]
jb rwxdata
push 0xf6d3d7cb
sbb [ esi ] esi
or [ ecx + 0x77 ] cl
cmpsd [ esi ] [ edi ]
sbb ah bl
das
fdiv [ edx + 0x7491633b ]
test [ ecx + 0x31e19e06 ] esi
sub eax 0x65ba3529
mov edx 0x83d04391
loope rwxdata
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
jmp rwxdata
dec edi
add al 0x4f
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
call sub_1012922c
push ss
dec esp
out 0x78 eax
jae rwxdata
out dx eax
xor al 0x40
jge rwxdata
add [ ebx + edi ] eax
push edx
xchg dh bh
adc dh [ esi ]
pop ecx
inc ebp
jpe rwxdata
push ss
clc
call 0x6f6f36c3
rcr [ ebp + 0x6e ] 0x8d
push ecx
jo rwxdata
push esp
lodsd [ esi ]
xor [ 0x39853de1 ] ebp
mov eax [ fs : 0xffffffffc9f57966 ]
shr [ ebp + 0x79c68d12 ] cl
mov ecx 0x9f8eb085
pop ecx
pop esi
or [ edx + 0x3e ] eax
fcompp
mov dl 0xc1
mov esi 0x9ec65cf
jae rwxdata
cmp [ edx - 0x66 ] ecx
movsb [ edi ] [ esi ]
fist [ ebp - 0x10a3c676 ]
shld [ ebx ] edi 0xd6
dec eax
imul ebx [ esi - 0x2061bf87 ] 0x703b4836
mov bl 0x6c
shl [ edi + ebx * 4 - 0x3e ] 0x1
push esp
sub ch [ ebx + 0x7b ]
aam 0xbe
loopne rwxdata
push ecx
in eax dx
cmpsd [ cs : esi ] [ edi ]
sahf
mov al [ 0x67d76ef5 ]
js rwxdata
push es
js rwxdata
jge rwxdata
test esi eax
xlat
retn
insb
jmp [ eax + 0x7de17590 ]

inc eax
sahf
fbstp [ esi ]
dec eax
cmp esi [ eax - 0x4d ]
insb
jae rwxdata
mov dl 0x5f
xlat
xor ah dl
inc edx
jle rwxdata
cdq
dec ebp
xchg ecx eax
movsd [ edi ] [ esi ]
add eax 0x7cd32a19
sub_10139bb9
pushad
xchg [ esp + 0x24 ] eax
call sub_10208da4
or [ ebp + 0x2c06f812 ] cl
adc dl [ ebx - 0x43 ]
out dx al
dec esi
xchg ebp eax
mov bl 0x3a
mov edi 0x32908fa0
mov [ edx - 0x7c ] ds
aas
mov al [ 0xffffffffeb4cf42a ]
xchg esp eax
call 0xffffffff9052bb30
movsb [ edi ] [ esi ]
cmp edi [ eax + ebx + 0x47 ]
sar [ ebp - 0x1033d104 ] 0x1
cmp ah [ 0xffffffffd13889ba ]
0xd25734e0 0xae8d
sub_1013a0c0
call sub_101ddf2e
inc edi
push es
pop ecx
fldenv [ ebp - 0x57 ]
jne rwxdata
cli
pop ss
pop es
sbb [ edx + ecx * 2 ] dh
mov ebp [ ebp + 0x71 ]
shl [ eax - 0x2ff33714 ] 0x1
scasd [ edi ]
rcr [ eax - 0x49b28e41 ] 0x75
0x13db
loopne rwxdata
xchg [ ebp - 0x307862ef ] ebp
jmp 0xffffffff9a0a8736
clc
push eax
mov bl 0x2b
sub [ edx ] ch
mov bh 0xf8
add al 0x13
rol [ esi + 0xfcf58ba ] 0x2c
sbb ebx [ ecx + 0x75 ]
bound ecx [ edx - 0x4ad11496 ]
sbb al 0xd9
sub eax 0xaa378c7d
jge rwxdata
cmpsd [ esi ] [ edi ]
cwde
loop rwxdata
out 0x6c al
popfd
xchg edi ecx
adc ch [ eax + 0x16 ]
shr bh 0x1
add [ ecx + 0x263b04e5 ] cl
and [ 0xffffffffc6d885f9 ] edi
inc edi
mov bh 0xb
xchg esp eax
inc esi
cdq
sub al 0x92
jo rwxdata
push edx
arpl [ ecx + 0x34b529bd ] ax
stosb [ edi ]
sbb [ edi + eax * 4 ] ebp
lodsd [ esi ]
adc [ ebp - 0x19c13079 ] ebx
insb
fistp [ eax ]
fadd [ edx + 0x740b9372 ]
jb rwxdata
enter 0xcde8 0x1
or eax 0x648d9c00
and al 0x8
ja rwxdata
mov eax [ 0x73416871 ]
sbb al 0x57
out 0x66 eax
movsx ecx dl
mov edi [ edx + 0x24 ]
setl ch
bswap bx
bt ax cx
add edi eax
cmp dl 0x11
rol ch 0x6
mov ebx [ edx + 0x20 ]
not cx
bts cx 0x5
stc
add ebx eax
inc ecx
movsx ecx dl
inc cx
mov [ ebp - 0x8 ] 0x0
clc
shrd cx sp 0x8
and ch dl
sbb cl 0x4a
mov ecx [ edx + 0x18 ]
cmc
test al cl
call sub_1020a392
pushfd
lea esp [ esp + 0x8 ]
pushfd
sub edi 0x4
stc
clc
push [ edi ]
pop [ esp ]
jmp rwxdata
rcl al cl
and al 0x72
push edi
pushfd
sub ebx edi
shr al 0x4
add esp 0x8
add ebx esp
bswap di
xor di sp
mov edi ebx
sbb al dh
cmp cl ah
call sub_10129373
add [ eax ] al
inc edi
je rwxdata
clc
pushfd
cmp edi ebx
jmp rwxdata
and al 0x10
test [ ebp + 0xf342464 ] cl
xchg [ edi - 0x2dfff303 ] ebp
rol al 0x1
enter 0xc007 0xe0
add ch [ ecx ]
sti
rcr di 0x3
cmp cl ah
add ebx esp
test dl ah
shl edi cl
movsx di al
jb rwxdata
pushfd
push 0xfc187b5b
lea esp [ esp + 0xc ]
ja rwxdata
ficom [ ecx - 0x32 ]
lodsb [ esi ]
shl cl cl
out dx al
mov dh 0xe9
ror [ ebp + 0x75 ] 0x1
dec ecx
0x51de0025 0xacce
loop rwxdata
imul ebp [ edi + 0x6e ] 0x417845
call sub_1011778a
and al 0xa4
push edx
sub ebx edi
and edi 0x1f268d54
add esp 0x4
add ebx esp
pushad
mov edi ebx
shl al cl
mov al 0x2e
pushad
[ edi ]
pushfd
pushfd
pushfd
call sub_1012779b
inc edi
popfd
sub [ esi - 0x3e92ae8f ] 0x70761747
out dx al
adc dh [ ss : edi - 0x595ce339 ]
pop eax
scasd [ edi ]
xor [ ebx - 0x69df1af4 ] dh
leave
sbb eax 0x86ad92c1
int3
mov edi ebx
rol al cl
cmc
sbb al 0xc0
pushad
mov al 0x2e
pushfd
call sub_1012ff05
sbb bl [ edx + 0x44 ]
wrmsr
mov esi 0xd32b9180
int1
xor al 0x6d
adc bh [ ss : edx + 0x5 ]
jne rwxdata
out 0x66 eax
movsx edi al
sub_1013a22c
sub edi 0x4
clc
clc
cmp bh 0xa1
push [ edi ]
pop [ esp + 0xc ]
push ecx
bt cx cx
cmp ax 0xcc98
mov [ esp + 0x8 ] ah
cmp edi ebx
pushfd
pushad
mov [ esp + 0x10 ] 0x84
lea esp [ esp + 0x34 ]
ja rwxdata
pushfd
sub edi 0x4
stc
clc
push [ edi ]
pop [ esp ]
jmp rwxdata
rcl al cl
ror al 0x7
shl al 0x2
sub ebx edi
rcr di 0x3
cmp cl ah
add ebx esp
test dl ah
shl edi cl
movsx di al
mov edi ebx
rol al cl
cmc
sbb al 0xc0
pushad
mov al 0x2e
pushfd
call sub_1012ff05
sbb bl [ edx + 0x44 ]
wrmsr
mov esi 0xd32b9180
int1
xor al 0x6d
adc bh [ ss : edx + 0x5 ]
jne rwxdata
clc
pushfd
cmp edi ebx
jmp rwxdata
ficom [ ecx - 0x32 ]
lodsb [ esi ]
shl cl cl
out dx al
mov dh 0xe9
ror [ ebp + 0x75 ] 0x1
dec ecx
0x51de0025 0xacce
pushfd
push 0xfc187b5b
lea esp [ esp + 0xc ]
ja rwxdata
and al 0xa4
push edx
sub ebx edi
and edi 0x1f268d54
add esp 0x4
add ebx esp
pushad
mov edi ebx
shl al cl
mov al 0x2e
pushad
[ edi ]
pushfd
pushfd
pushfd
call sub_1012779b
inc edi
popfd
sub [ esi - 0x3e92ae8f ] 0x70761747
out dx al
adc dh [ ss : edi - 0x595ce339 ]
pop eax
scasd [ edi ]
xor [ ebx - 0x69df1af4 ] dh
leave
sbb eax 0x86ad92c1
sub_101dd7cd
add edi eax
bt dx 0x1
pushfd
pushfd
cmc
movzx ecx [ edi + ecx * 2 ]
bswap di
mov edi [ edx + 0x1c ]
cmc
mov [ esp ] 0xbc
mov [ esp ] al
add edi eax
call sub_101ddf23
mov edi [ ebp + 0x8 ]
mov [ esp ] bl
lea esp [ esp + 0x4 ]
call sub_10129a53
pushad
pushfd
lea esp [ esp + 0x24 ]
jne rwxdata
cmc
clc
cmp ecx eax
call sub_1020e818
not eax
cwde
lahf
movsx eax dl
mov eax [ edx + 0x8 ]
pushad
push [ esp ]
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
jmp sub_1012a9ff
sub_101de447
test cl bh
pushfd
stc
sub al al
mov [ esp ] 0xa114095a
[ edi ]
push ebx
jmp rwxdata
jmp rwxdata
lea esp [ esp + 0x8 ]
jne rwxdata
ror dx 0x9
shl edx cl
cmc
xor eax eax
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
rol si 0x8
bsf cx si
mov ecx edi
neg si
pushad
or esi ebx
and si 0x4086
sub ecx ebx
shr esi cl
xor esi ebx
pushfd
lea esi [ esp + 0x24 ]
add esp 0x24
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
clc
pushfd
cmp edi ebx
jmp rwxdata
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
pushfd
push 0xfc187b5b
lea esp [ esp + 0xc ]
ja rwxdata
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
pushfd
sub edi 0x4
stc
clc
push [ edi ]
pop [ esp ]
jmp rwxdata
and al 0xa4
push edx
sub ebx edi
and edi 0x1f268d54
add esp 0x4
add ebx esp
pushad
mov edi ebx
shl al cl
mov al 0x2e
pushad
[ edi ]
pushfd
pushfd
pushfd
call sub_1012779b
inc edi
popfd
sub [ esi - 0x3e92ae8f ] 0x70761747
out dx al
adc dh [ ss : edi - 0x595ce339 ]
pop eax
scasd [ edi ]
xor [ ebx - 0x69df1af4 ] dh
leave
sbb eax 0x86ad92c1
sub_101dec4a
lea esp [ esp + 0x8 ]
jb rwxdata
cmc
test al cl
call sub_1020a392
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
push 0x78541109
cmp [ edi - 0x1 ] 0x0
jmp rwxdata
pushfd
sub edi 0x4
stc
clc
push [ edi ]
pop [ esp ]
jmp rwxdata
rcl al cl
and al 0x72
push edi
pushfd
sub ebx edi
shr al 0x4
add esp 0x8
add ebx esp
bswap di
xor di sp
mov edi ebx
sbb al dh
cmp cl ah
call sub_10129373
add [ eax ] al
inc edi
je rwxdata
jmp sub_1020b0a5
clc
pushfd
cmp edi ebx
jmp rwxdata
and al 0x10
test [ ebp + 0xf342464 ] cl
xchg [ edi - 0x2dfff303 ] ebp
rol al 0x1
enter 0xc007 0xe0
add ch [ ecx ]
sti
rcr di 0x3
cmp cl ah
add ebx esp
test dl ah
shl edi cl
movsx di al
jb rwxdata
pushfd
push 0xfc187b5b
lea esp [ esp + 0xc ]
ja rwxdata
ficom [ ecx - 0x32 ]
lodsb [ esi ]
shl cl cl
out dx al
mov dh 0xe9
ror [ ebp + 0x75 ] 0x1
dec ecx
0x51de0025 0xacce
loop rwxdata
imul ebp [ edi + 0x6e ] 0x417845
call sub_1011778a
and al 0xa4
push edx
sub ebx edi
and edi 0x1f268d54
add esp 0x4
add ebx esp
pushad
mov edi ebx
shl al cl
mov al 0x2e
pushad
[ edi ]
pushfd
pushfd
pushfd
call sub_1012779b
inc edi
popfd
sub [ esi - 0x3e92ae8f ] 0x70761747
out dx al
adc dh [ ss : edi - 0x595ce339 ]
pop eax
scasd [ edi ]
xor [ ebx - 0x69df1af4 ] dh
leave
sbb eax 0x86ad92c1
int3
mov edi ebx
rol al cl
cmc
sbb al 0xc0
pushad
mov al 0x2e
pushfd
call sub_1012ff05
sbb bl [ edx + 0x44 ]
wrmsr
mov esi 0xd32b9180
int1
xor al 0x6d
adc bh [ ss : edx + 0x5 ]
jne rwxdata
out 0x66 eax
movsx edi al
sub_101df6a3
[ edi ]
pushfd
lea esp [ esp + 0x28 ]
jne rwxdata
pushfd
push ebx
push 0x7b696d7a
mov esp esi
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
lahf
setb al
bswap ax
mov [ edi - 0x1 ] 0x0
movzx ax dl
pushad
mov [ esp + 0x1c ] ebx
call sub_1012714a
xchg ebx eax
push ecx
int 0xb1
or eax 0x333221e4
mov al [ 0x4292b605 ]
jge rwxdata
ror dx 0x9
shl edx cl
cmc
xor eax eax
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
xor [ esi - 0x643b79a7 ] ebp
fcomp st6
mov ebx 0xc9b57763
xchg ecx eax
out dx al
test al 0xcb
mov ch 0x69
mov esi 0x568f7ea1
in eax dx
jecxz rwxdata
mov ch 0x9e
mov eax [ 0x3aa5623c ]
or eax 0x115a0572
mov es [ edx + ebx * 8 + 0xe512638 ]
cld
add bh [ eax - 0x57ac339a ]
fsubr st1
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
scasd [ edi ]
xor ecx edi
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
sub_101df888
lea esp [ esp + 0xc ]
jb rwxdata
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
pushfd
test bh 0xdd
cmp eax [ ebp - 0x10 ]
mov [ esp ] 0x95
call sub_10122aa0
scasb [ edi ]
sbb esp ebp
ror esp cl
movups xmm4 [ ecx ]
popad
sbb esp ecx
mov [ ecx - 0x26fa629f ] 0xd549c57a
sbb [ 0x6d512d31 ] esp
in eax dx
mov cl 0xea
xchg ebp eax
dec esi
jno rwxdata
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
test [ edi ] 0xb0
sbb eax 0x85eeee90
mov ecx 0xc6d886b8
xlat
cmp al 0x2f
aas
stosb [ edi ]
sbb edi [ ebx + 0x7b ]
and edx [ ebx - 0x16d2aed4 ]
jne rwxdata
adc cl bl
rcr [ esi ] cl
out 0x50 eax
pcmpgtb mm3 mm5
inc edx
push ebx
or bh [ ebx + ecx * 2 ]
not [ esp + 0x3b ]
mov dh 0x4f
pushad
mov eax 0x64289163
mov esp 0x44767463
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
mov ecx 0x1ccb6726
jmp 0x36570a5b
push 0xffffffa0
aas
retn
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
sub_101e1138
cmc
rol al 0x1
push 0x39e290c8
mov [ ecx ] al
push esp
stc
cmp dl bl
cmc
add ecx 0x1
cmp bh 0x1b
test ah ah
call sub_10128b22
mov [ esp ] bp
sub al al
bt di si
[ edi ]
push edi
mov [ esp ] bx
mov [ esp ] cl
lea esp [ esp + 0x8 ]
jne rwxdata
ror dx 0x9
shl edx cl
cmc
xor eax eax
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
dec ch
mov ecx edi
btc si 0x3
sub ecx ebx
shl si cl
mov si bp
mov esi esp
pushfd
clc
cmp dh ch
bt ebx 0xc
sub edi 0x4
clc
cmc
jmp rwxdata
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
cmc
push [ edi ]
pop [ esp ]
push ecx
cmp ah ch
jmp rwxdata
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
bt edx 0x5
cmp edi ebx
jmp rwxdata
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
pushfd
sub edi 0x4
stc
clc
push [ edi ]
pop [ esp ]
jmp rwxdata
rcl al cl
and al 0x72
push edi
pushfd
sub ebx edi
shr al 0x4
add esp 0x8
add ebx esp
bswap di
xor di sp
mov edi ebx
sbb al dh
cmp cl ah
call sub_10129373
add [ eax ] al
inc edi
je rwxdata
clc
pushfd
cmp edi ebx
jmp rwxdata
and al 0x10
test [ ebp + 0xf342464 ] cl
xchg [ edi - 0x2dfff303 ] ebp
rol al 0x1
enter 0xc007 0xe0
add ch [ ecx ]
sti
rcr di 0x3
cmp cl ah
add ebx esp
test dl ah
shl edi cl
movsx di al
jb rwxdata
pushfd
push 0xfc187b5b
lea esp [ esp + 0xc ]
ja rwxdata
ficom [ ecx - 0x32 ]
lodsb [ esi ]
shl cl cl
out dx al
mov dh 0xe9
ror [ ebp + 0x75 ] 0x1
dec ecx
0x51de0025 0xacce
loop rwxdata
imul ebp [ edi + 0x6e ] 0x417845
call sub_1011778a
and al 0xa4
push edx
sub ebx edi
and edi 0x1f268d54
add esp 0x4
add ebx esp
pushad
mov edi ebx
shl al cl
mov al 0x2e
pushad
[ edi ]
pushfd
pushfd
pushfd
call sub_1012779b
inc edi
popfd
sub [ esi - 0x3e92ae8f ] 0x70761747
out dx al
adc dh [ ss : edi - 0x595ce339 ]
pop eax
scasd [ edi ]
xor [ ebx - 0x69df1af4 ] dh
leave
sbb eax 0x86ad92c1
int3
mov edi ebx
rol al cl
cmc
sbb al 0xc0
pushad
mov al 0x2e
pushfd
call sub_1012ff05
sbb bl [ edx + 0x44 ]
wrmsr
mov esi 0xd32b9180
int1
xor al 0x6d
adc bh [ ss : edx + 0x5 ]
jne rwxdata
out 0x66 eax
movsx edi al
sub_102065c8
pushfd
lea esp [ esp + 0x34 ]
je rwxdata
ror dx 0x9
shl edx cl
cmc
xor eax eax
test dx cx
cmp bl 0x3b
stc
jns rwxdata
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
pushfd
call sub_10206f14
adc al al
pushfd
call sub_1020b4ed
add eax edi
bt edi 0x16
test ax 0xf01b
pushfd
cmp eax edx
push 0x5db52fa
lea esp [ esp + 0x8 ]
jb rwxdata
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
cmc
jmp rwxdata
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
cmp eax [ ebp - 0x10 ]
pushfd
jmp rwxdata
lea esp [ esp + 0x4 ]
jae rwxdata
xadd bx di
mov ebx eax
not di
rol di 0xa
mov edi eax
ror ch 0x6
call sub_1012daa3
sub_10206602
test edi edi
push edi
mov [ esp ] bh
call sub_102065c8
mov edi [ esp + 0x28 ]
bswap esi
bswap si
movsx si bl
mov esi [ esp + 0x2c ]
push 0x9dfca694
jmp rwxdata
jmp rwxdata
mov esp ebp
movsx bp bl
jmp rwxdata
pop ebp
pushfd
push [ esp ]
pushad
push [ esp + 0x28 ]
retn 0x34
sub_10206f14
stc
pushfd
add eax edi
clc
cmp eax edx
push esi
pushad
jmp rwxdata
lea esp [ esp + 0x30 ]
jb rwxdata
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
bt ax ax
pushfd
cmp eax [ ebp - 0x10 ]
push 0x64eb5db1
lea esp [ esp + 0x8 ]
jae rwxdata
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
shr di 0xf
mov ebx eax
dec di
mov edi eax
pushfd
and ch 0x55
mov ecx 0x104
call sub_10139d4f
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
sub_102083c4
pushfd
sub esi eax
pushad
mov [ esp ] 0xe4
jmp rwxdata
[ edi ] [ esi ]
jmp rwxdata
pop esi
mov esi [ esp + 0x24 ]
pushfd
pushfd
lea esp [ esp + 0x30 ]
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_101de0e4
sub_10208557
push [ esp ]
lea esp [ esp + 0x2c ]
jae rwxdata
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
push edi
rcr edi 0xe
mov ebx eax
adc di 0xd5fc
shld cx sp 0xb
shr cl cl
shrd di bx 0xf
mov edi eax
rcr ecx cl
mov ecx 0x104
cmc
bt eax ecx
clc
xor al al
clc
clc
[ edi ]
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
ror dx 0x9
shl edx cl
cmc
xor eax eax
sar si 0x6
bsf cx bx
mov ecx edi
call sub_102065b5
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
sub_102089b5
mov bx [ esi ]
push [ esp ]
test bx 0x5a6f
and ebx 0xfff
push [ esp + 0x4 ]
jmp rwxdata
bt ebp 0x19
add [ ebx + edi ] dx
mov [ esp ] 0xf7731e4f
lea esp [ esp + 0xc ]
jmp rwxdata
jmp rwxdata
test dh 0xbc
add esi 0x2
pushad
pushad
call sub_1012d140
sub_10208a93
pushad
lea esp [ esp + 0x2c ]
jae rwxdata
pushfd
jmp sub_10132e07
pushfd
push 0x82c2a02d
pushfd
lea esp [ esp + 0xc ]
jne rwxdata
cmc
cmp bl bl
pushfd
mov [ esp ] esi
rcr si cl
shrd si di cl
ror si cl
mov esi edi
pushfd
jmp sub_1020c1e6
pushfd
call sub_10133196
sub_10208c89
push [ esp + 0x56 ]
popf
jmp rwxdata
jmp rwxdata
mov [ esp + 0x4 ] al
inc esi
jmp rwxdata
call j_sub_1020e820#2
cmc
movzx ecx [ edi + ecx * 2 ]
sbb di 0x1a5f
mov edi [ edx + 0x1c ]
sbb ah [ 0x28982955 ]
not [ edi + 0x3513a6b4 ]
add dh bl
adc esi edx
aad 0xca
imul esi esi 0x16a93ae5
aaa
out 0x94 eax
call sub_1012f310
sub eax [ esi + 0x39 ]
loopne rwxdata
sbb dh ah
fsubr st2
je rwxdata
sub [ eax - 0x4b6809d8 ] ebx
cmpsb [ esi ] [ edi ]
adc esi [ 0xfffffffff213de00 ]
sub [ edx ] eax
jge rwxdata
or edx [ eax + 0x75344aef ]
add bh [ ebp - 0x72 ]
jb rwxdata
xchg esp eax
nop
mov eax [ 0x110a9233 ]
inc edi
je rwxdata
xchg [ edi - 0x208ff071 ] ch
push ss
leave
fidiv [ ebx + 0xc ]
popad
sbb ah [ ebp + esi * 2 + 0x45 ]
mov ch 0x93
in al dx
std
nop
dec ebx
dec ebp
jae rwxdata
sbb cl [ ebx + 0x57e81c7a ]
aas
[ ebx ]
mov [ edx + 0x59aed1c0 ] ebx
sub_10208c9a
lea esp [ esp + 0x8 ]
jae rwxdata
not bl
call sub_1020bafa
clc
cmp eax 0x7f
push 0x6004cf60
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
ror bl 0x1
pushfd
add bl 0x50
xchg ebp eax
add esp 0x4
not bl
ror bl cl
mov eax ebp
test edi ebx
ror bl 0x5
mov bl 0x1
cmc
cmp bl bl
pushfd
mov [ esp ] esi
rcr si cl
shrd si di cl
ror si cl
mov esi edi
pushfd
jmp sub_1020c1e6
not bl
inc bl
mov bl al
seto bl
inc ecx
jmp rwxdata
mov bl ch
pushfd
inc ecx
call sub_1020b35f
sub_10208da4
mov [ esp + 0x24 ] 0xb
movsx eax al
lea eax [ rwxdata ]
mov [ esp ] eax
mov [ esp + 0x20 ] rwxdata
mov [ esp + 0x8 ] si
push 0xafd877af
push [ eax ]
pop [ esp + 0x20 ]
mov [ esp + 0x4 ] 0xc8
pushfd
push [ esp + 0x24 ]
retn 0x28
sub_10209101
lea esp [ esp + 0x4 ]
je rwxdata
bswap edi
pop edi
movsx bx al
jmp rwxdata
movsx si dl
lea edi [ edx - 0x6e0bc6b9 ]
pop edi
pushfd
mov bx ax
pushad
xchg ebx esi
mov esi [ esp + 0x24 ]
movzx bx dl
movsx bx dl
mov ebx [ esp + 0x28 ]
jmp rwxdata
pop esi
push esi
jmp rwxdata
push esi
mov esp ebp
jmp rwxdata
sete bl
movzx ebx al
mov ebx [ esp + 0x4 ]
mov [ esp + 0x4 ] cl
mov esp ebp
not bp
pop ebp
pushfd
push [ esp + 0x4 ]
retn 0xc
pop ebp
pushfd
pushfd
push [ esp + 0x8 ]
retn 0x10
sub_10209552
cmc
rol al 0x5
cmp ax 0x997f
cmc
cmp al [ edi ]
movzx ax cl
cwde
bswap ax
lea esp [ esp + 0xc ]
jno rwxdata
cwde
lea edi [ edi + 0x1 ]
movsx eax cl
bswap ax
movsx eax al
pop eax
jmp rwxdata
lea edi [ edi + 0x1 ]
mov al bl
lahf
pop eax
call j_sub_101248f3
inc esp
add [ edx + 0x2bb453cb ] 0x3c
mov ss [ ecx - 0x435b5aef ]
mov [ ebx - 0x6d ] cs
or al 0xb3
cmp ebx 0x70
das
jae rwxdata
ja rwxdata
jecxz rwxdata
out dx eax
scasd [ edi ]
cmpsd [ esi ] [ edi ]
mov bh 0x7b
retn
stc
jmp rwxdata
jmp rwxdata
leave
salc
sbb al 0xe1
sbb dh al
call sub_10132e40
dec ebp
xchg ebx eax
imul ecx [ ebx + edx * 2 ] 0xffffff87
clc
or dl [ di + 0x568 ]
test al 0xb8
nop
push edx
mov bl 0xef
out dx eax
shr ebx cl
outsd
das
fadd [ edi ]
mov [ edi ] dh
ror [ edi ] 0x1
imul edx [ ebx ] 0xffffffef
outsd
call sub_1012f243
call 0xffffffffbc6a2421
push 0x79
push edi
jpe rwxdata
jl rwxdata
loopne rwxdata
salc
jpo rwxdata
0x5418f2a0 0x942b
and eax 0xfeed11b9
aaa
je rwxdata
sbb [ edi - 0x44fc4040 ] al
je rwxdata
mov eax [ 0xffffffffd033ce35 ]
pop ebx
in al 0xf5
out 0x17 eax
or ebx [ edx + eax * 2 ]
pop ebx
rcl [ ecx ] 0x1
pushad
out 0x77 eax
and al 0x5b
insb
xchg ecx eax
aad 0x9b
mov bh 0xcb
test [ ecx ] ebx
imul esp [ ecx - 0x19 ] 0xffffffab
adc eax 0xa06538cd
inc esi
jns rwxdata
adc eax 0x2bb32716
sub esi [ ebx ]
jpe rwxdata
test [ eax ] 0x19
ror [ edi + 0xe ] 0x1
mov ebp 0xf5d18eda
or [ ecx ] ecx
mov [ ss : ebx ] ss
inc esi
sbb [ ecx - 0x37e1dfeb ] cl
mul ebx
cld
cdq
and eax 0x1b643a25
out 0x38 eax
xchg edx eax
insb
shl [ ecx + 0x5b ] 0x4c
cmp eax 0x1771ad52
int1
dec ebp
push ecx
dec ebp
push ds
sub [ eax - 0x21 ] 0xc880b184
mov dh ah
dec esp
and [ edx - 0x65 ] esp
mov ah 0xc9
test al 0x97
or edx ebx
fisubr [ ebx ]
pop es
aaa
inc edi
pop eax
imul esi [ ebx + 0x26995c4b ] 0x57fe8cf1
jge rwxdata
ror bh 0x1
cmp edx [ ebx ]
retn
jmp 0x6c7e5756
mov cl 0xf2
mov eax 0xf60d83ab
pop ecx
push es
inc edi
outsb
push ecx
and [ ecx + 0x43a1ff1e ] 0xf8a17b7a
xor al [ ecx + 0x43bb623f ]
push esp
mov eax [ 0xffffffffa89945aa ]
or [ edx + 0x52c1ee06 ] bl
or eax 0x98c7c361
fnstcw [ edi + 0x3a2f141f ]
mov edi 0x4f05941f
dec ecx
test eax 0xd3a3b993
xor [ esi + 0x4d054238 ] esp
sub_10209805
mov [ esp + 0x4 ] al
lea esp [ esp + 0xc ]
ja rwxdata
ror bl 0x1
pushfd
add bl 0x50
xchg ebp eax
add esp 0x4
not bl
ror bl cl
mov eax ebp
test edi ebx
ror bl 0x5
mov bl 0x1
cmc
cmp bl bl
pushfd
mov [ esp ] esi
rcr si cl
shrd si di cl
ror si cl
mov esi edi
pushfd
jmp sub_1020c1e6
pushfd
not bl
not bl
inc ecx
inc bl
inc ecx
cmp cl bh
seta bl
rol bl cl
xchg ebp eax
adc ah 0xc4
lea eax [ eax - 0x2706e764 ]
xadd bl al
mov eax ebp
jmp rwxdata
sar bl 0x1
shr bl 0x6
mov bl 0x1
stc
mov [ esp ] esi
neg si
ror esi 0x1c
mov esi edi
cmp eax 0x4e286c87
call sub_102083c4
sub_1020a019
jmp rwxdata
mov edi [ esp + 0x28 ]
bswap esi
bswap si
movsx si bl
mov esi [ esp + 0x2c ]
push 0x9dfca694
jmp rwxdata
jmp rwxdata
mov esp ebp
movsx bp bl
jmp rwxdata
pop ebp
pushfd
push [ esp ]
pushad
push [ esp + 0x28 ]
retn 0x34
sub_1020a01e
push 0x5b7ef841
cmp ah 0x41
pushad
lea esp [ esp + 0x2c ]
jb rwxdata
call sub_1012e66e
stc
cmp ah 0x5a
jmp rwxdata
push esi
lea esp [ esp + 0x4 ]
ja rwxdata
stc
add ah 0x20
sub_1020af18
bt edi 0x1b
stc
shr eax 0x1
pushad
jmp rwxdata
lea esp [ esp + 0x28 ]
je rwxdata
bswap si
lea edi [ edx * 8 - 0xd37d848 ]
movzx bx bl
pop ebx
push eax
pop esi
bswap di
not di
pop edi
xchg si bp
call sub_1020b576
pushad
pushad
adc ecx ecx
push [ esp + 0xc ]
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
dec bl
inc ecx
not bl
call sub_1020bafa
sub_1020b0a5
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushad
mov [ esp + 0x1c ] eax
mov [ esp + 0xc ] dl
push 0xa5844a7e
jmp sub_101dfccc
test cl 0x7a
shl di 0x4
inc edi
mov edi [ edx + 0x24 ]
cmp cl 0x44
add edi eax
push 0xb04d4963
pushad
push edi
movzx ecx [ edi + ecx * 2 ]
test dl 0x22
mov [ esp + 0xc ] si
inc di
shr di 0x8
mov edi [ edx + 0x1c ]
cmc
add edi eax
bt si ax
mov edi [ edi + ecx * 4 ]
cmp cl 0xb4
mov [ esp + 0xc ] esp
jmp sub_10206e2a
sub_1020b35f
cmp bp 0xf2a5
mov bl 0xd6
shl bl cl
xchg ebp eax
shld ax dx 0x4
xor bl ah
neg ah
mov eax ebp
neg bl
mov bl 0x1
sub esp 0xfffffff8
jno rwxdata
call sub_101389a3
clc
cmc
pushfd
mov [ esp ] esi
bsf si di
sub si si
mov esi edi
pushad
push 0xdefdd948
bt cx 0xd
sub esi eax
call sub_1020723a
sub_1020b4e5
add dl dl
pushad
jmp rwxdata
jmp rwxdata
mov [ esp + 0x4 ] dl
lea esp [ esp + 0x24 ]
jne rwxdata
pushad
jmp rwxdata
mov dl ch
pushad
pushad
pushf
pop [ esp + 0x3e ]
rcr dl 0x6
rol dl cl
push [ esp + 0x14 ]
jmp rwxdata
pushad
push [ esp + 0x40 ]
retn 0x44
mov dl [ esi ]
push 0xfea0ef86
push ecx
push 0xd97b46bd
rol dl 0x5
bt sp 0x1
jmp rwxdata
call sub_1020ac5c
xchg esi eax
jb rwxdata
call sub_10139bb9
test edi edi
mov [ esp + 0x8 ] dh
mov [ esp + 0x8 ] si
mov [ esp ] edx
pushfd
lea esp [ esp + 0x10 ]
je rwxdata
out dx al
xor [ edx + 0x73ec3d2c ] dl
fdiv [ ebx + 0x216eda64 ]
jge rwxdata
ror dx 0x9
shl edx cl
cmc
xor eax eax
pushfd
test al 0xa0
pushad
add eax edi
pushfd
cmp eax edx
jmp rwxdata
sub [ 0xffffffff91ba65ba ] esi
inc ebx
rol [ ebx + 0x4f0401e1 ] 0x1
pop ecx
std
popad
sbb [ ebp + 0x61 ] esp
popfd
push 0x75
mov [ esi ] edx
xor [ esi - 0x5 ] ecx
add ecx [ ebx + esi + 0x47f73b23 ]
jmp rwxdata
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
pushfd
mov [ esp ] cl
lea esp [ esp + 0x2c ]
jb rwxdata
push 0xf6d3d7cb
sbb [ esi ] esi
or [ ecx + 0x77 ] cl
cmpsd [ esi ] [ edi ]
sbb ah bl
das
fdiv [ edx + 0x7491633b ]
test [ ecx + 0x31e19e06 ] esi
sub eax 0x65ba3529
mov edx 0x83d04391
loope rwxdata
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
jmp rwxdata
dec edi
add al 0x4f
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
call sub_1012922c
push ss
dec esp
out 0x78 eax
jae rwxdata
out dx eax
xor al 0x40
jge rwxdata
add [ ebx + edi ] eax
push edx
xchg dh bh
adc dh [ esi ]
pop ecx
inc ebp
jpe rwxdata
push ss
clc
call 0x6f6f36c3
rcr [ ebp + 0x6e ] 0x8d
push ecx
jo rwxdata
push esp
lodsd [ esi ]
xor [ 0x39853de1 ] ebp
mov eax [ fs : 0xffffffffc9f57966 ]
shr [ ebp + 0x79c68d12 ] cl
mov ecx 0x9f8eb085
pop ecx
pop esi
or [ edx + 0x3e ] eax
fcompp
mov dl 0xc1
mov esi 0x9ec65cf
jae rwxdata
cmp [ edx - 0x66 ] ecx
movsb [ edi ] [ esi ]
fist [ ebp - 0x10a3c676 ]
shld [ ebx ] edi 0xd6
dec eax
imul ebx [ esi - 0x2061bf87 ] 0x703b4836
mov bl 0x6c
shl [ edi + ebx * 4 - 0x3e ] 0x1
push esp
sub ch [ ebx + 0x7b ]
aam 0xbe
loopne rwxdata
push ecx
in eax dx
cmpsd [ cs : esi ] [ edi ]
sahf
mov al [ 0x67d76ef5 ]
js rwxdata
push es
js rwxdata
jge rwxdata
test esi eax
xlat
retn
insb
jmp [ eax + 0x7de17590 ]

inc eax
sahf
fbstp [ esi ]
dec eax
cmp esi [ eax - 0x4d ]
insb
jae rwxdata
mov dl 0x5f
xlat
xor ah dl
inc edx
jle rwxdata
cdq
dec ebp
xchg ecx eax
movsd [ edi ] [ esi ]
add eax 0x7cd32a19
sub_1020b4ed
pushfd
jmp rwxdata
lea esp [ esp + 0x2c ]
jae rwxdata
pushfd
jmp sub_10132e07
pushad
push edi
push 0xddfc5941
lea esp [ esp + 0x28 ]
jne rwxdata
cmc
cmp bl bl
pushfd
mov [ esp ] esi
rcr si cl
shrd si di cl
ror si cl
mov esi edi
pushfd
jmp sub_1020c1e6
push 0x912d0ae4
stosb [ edi ]
pushad
mov [ esp + 0x4 ] 0x7a
mov [ esp + 0x4 ] 0x60
lea esp [ esp + 0x24 ]
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_101de0e4
sub_1020b576
not esi
mov esi [ esp + 0x4 ]
call sub_10132c94
lodsb [ esi ]
cmc
ja rwxdata
pushfd
jmp rwxdata
rol al 0x5
call sub_1012f960
rol al 0x5
cmp dl 0xe7
add al 0x59
bt di bx
cmc
call sub_1020e40e
sub_1020b973
jmp rwxdata
call sub_1012c5c8
loop rwxdata
cmp [ esi - 0x1107d8b9 ] 0xf0
inc edx
cld
cmp [ edx + eax * 8 ] 0xdd
int1
cdq
mov [ edi ] 0xcf
js rwxdata
pop cx
add [ esi + 0x6f ] bl
pushfd
adc [ esp + edi * 8 - 0x4419ee3e ] 0xffffffb3
popad
or dh [ eax + ecx * 8 + 0x33 ]
or dl bl
or al 0x4a
adc al 0xa2
mov ebp 0xe0879712
pop esp
jb rwxdata
sti
enter 0x635c 0x4a
mov dh [ esi + ecx * 4 ]
xor [ edx + 0x4958e72c ] dl
push ebp
mov eax 0x2693ab46
mov eax 0xe51f90c
nop
out dx eax
test eax 0x246971d9
and al 0x6b
mov [ 0x704e8fc ] eax
add [ eax ] al
dec edi
push ecx
0xffffbc64 0x30d5
sbb ebx 0xffffff8b
mov ah 0xc5
sub_1020bafa
pushad
inc ecx
lea esp [ esp + 0x24 ]
ror bl 0x1
pushfd
add bl 0x50
xchg ebp eax
add esp 0x4
not bl
ror bl cl
mov eax ebp
test edi ebx
ror bl 0x5
mov bl 0x1
cmc
cmp bl bl
pushfd
mov [ esp ] esi
rcr si cl
shrd si di cl
ror si cl
mov esi edi
pushfd
jmp sub_1020c1e6
sub_1020bbac
lea esp [ esp + 0x10 ]
jne rwxdata
pushad
mov [ esp + 0x1c ] eax
mov [ esp + 0xc ] dl
push 0xa5844a7e
jmp sub_101dfccc
and di bp
mov edi [ edx + 0x24 ]
jmp rwxdata
pushad
add edi eax
push [ esp ]
cmc
jmp rwxdata
movzx ecx [ edi + ecx * 2 ]
movsx di bl
mov [ esp + 0x4 ] cx
jmp rwxdata
mov edi [ edx + 0x1c ]
cmp bx 0x7fff
add edi eax
cmp al cl
mov [ esp + 0x18 ] dh
mov edi [ edi + ecx * 4 ]
mov [ esp ] dl
call sub_10206602
sub_1020ca5e
pushad
jmp rwxdata
mov [ ebp - 0x10 ] ecx
inc ch
sub esp 0xffffffdc
jg rwxdata
rol cx 0x9
mov ecx [ ebp + 0xc ]
pushfd
cmp ecx 0xffff
pushfd
lea esp [ esp + 0x8 ]
jbe rwxdata
add cl 0xa9
sub ch 0x17
mov ecx [ ebp + 0xc ]
pushad
cmp ecx 0xffff
pushad
lea esp [ esp + 0x40 ]
jbe rwxdata
cmp bl bh
jmp rwxdata
movzx di al
mov edi [ edx + 0x24 ]
shl cl cl
shrd bx bx 0x9
btr ebx edx
btc ecx 0xc
add edi eax
pushad
mov ebx [ edx + 0x20 ]
rcl ch 0x1
sar ch cl
add ebx eax
adc ch 0x14
shld cx sp 0x9
rcr ecx 0x13
mov [ ebp - 0x8 ] 0x0
xor cl cl
mov [ esp + 0x4 ] si
mov ecx [ edx + 0x18 ]
test ebx esi
mov [ esp + 0x8 ] ecx
jmp rwxdata
xchg di bx
test ecx 0x96681c8c
jmp rwxdata
cmp dh dh
sub ecx [ edx + 0x10 ]
jl rwxdata
cmp ecx [ ebp - 0x8 ]
pushad
lea esp [ esp + 0x40 ]
jbe rwxdata
movsx cx dl
mov edi [ edx + 0x24 ]
setl ch
bswap bx
bt ax cx
add edi eax
cmp dl 0x11
rol ch 0x6
mov ebx [ edx + 0x20 ]
not cx
bts cx 0x5
stc
add ebx eax
inc ecx
movsx ecx dl
inc cx
mov [ ebp - 0x8 ] 0x0
clc
shrd cx sp 0x8
and ch dl
sbb cl 0x4a
mov ecx [ edx + 0x18 ]
cmc
test al cl
call sub_1020a392
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
cmc
push 0x16c13f23
pushfd
cmp ecx [ edx + 0x14 ]
jmp rwxdata
pushfd
cmp ecx [ edx + 0x14 ]
mov [ esp ] di
pushfd
lea esp [ esp + 0x8 ]
jae rwxdata
ror dx 0x9
shl edx cl
cmc
xor eax eax
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
test dx 0x29a3
rcl edi cl
sub ecx 0x1
bsr esi edi
bswap esi
pushfd
mov [ ebp - 0x4 ] ecx
stc
or di bx
rcr cx 0x6
mov cl bh
mov ecx [ ebp - 0x8 ]
shld di bp cl
sar esi 0xa
add ecx [ ebp - 0x4 ]
movsx edi al
xchg si di
clc
shld di dx 0x7
shr ecx 0x1
bt edi edx
btc di 0x8
mov edi [ ebx + ecx * 4 ]
cmc
cmp si 0x921b
bsr si dx
shl esi cl
add edi eax
call sub_10127a65
pushfd
sub edi 0x4
stc
clc
push [ edi ]
pop [ esp ]
jmp rwxdata
rcl al cl
and al 0x72
push edi
pushfd
sub ebx edi
shr al 0x4
add esp 0x8
add ebx esp
bswap di
xor di sp
mov edi ebx
sbb al dh
cmp cl ah
call sub_10129373
add [ eax ] al
inc edi
je rwxdata
pushad
pushfd
mov [ esp + 0x4 ] 0x6569
lea esp [ esp + 0x2c ]
jae rwxdata
push ebp
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
clc
pushfd
cmp edi ebx
jmp rwxdata
and al 0x10
test [ ebp + 0xf342464 ] cl
xchg [ edi - 0x2dfff303 ] ebp
rol al 0x1
enter 0xc007 0xe0
add ch [ ecx ]
sti
rcr di 0x3
cmp cl ah
add ebx esp
test dl ah
shl edi cl
movsx di al
jb rwxdata
pushfd
mov [ esp ] sp
push ecx
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
rol di 0x3
sar di 0x1
mov edi [ edx + 0x1c ]
cmc
call sub_10128f90
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
pushfd
push 0xfc187b5b
lea esp [ esp + 0xc ]
ja rwxdata
ficom [ ecx - 0x32 ]
lodsb [ esi ]
shl cl cl
out dx al
mov dh 0xe9
ror [ ebp + 0x75 ] 0x1
dec ecx
0x51de0025 0xacce
loop rwxdata
imul ebp [ edi + 0x6e ] 0x417845
call sub_1011778a
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
and al 0xa4
push edx
sub ebx edi
and edi 0x1f268d54
add esp 0x4
add ebx esp
pushad
mov edi ebx
shl al cl
mov al 0x2e
pushad
[ edi ]
pushfd
pushfd
pushfd
call sub_1012779b
inc edi
popfd
sub [ esi - 0x3e92ae8f ] 0x70761747
out dx al
adc dh [ ss : edi - 0x595ce339 ]
pop eax
scasd [ edi ]
xor [ ebx - 0x69df1af4 ] dh
leave
sbb eax 0x86ad92c1
int3
mov edi ebx
rol al cl
cmc
sbb al 0xc0
pushad
mov al 0x2e
pushfd
call sub_1012ff05
sbb bl [ edx + 0x44 ]
wrmsr
mov esi 0xd32b9180
int1
xor al 0x6d
adc bh [ ss : edx + 0x5 ]
jne rwxdata
out 0x66 eax
movsx edi al
sub_1020cba1
pushfd
call sub_101dec43
[ edi ] [ esi ]
sbb [ esi ] edx
or [ ebp - 0x5f01adbf ] edi
jo rwxdata
mov dh 0x47
sbb ebp 0x429c3bbf
lodsd [ esi ]
xchg esi eax
jpe rwxdata
add ebp esp
pop esp
pushfd
inc ebx
mov ebx 0x9af80de4
movsd [ edi ] [ esi ]
ror [ ebp - 0x5ae57aa7 ] cl
lea esi [ ecx + 0x621c5ee1 ]
pushfd
add edi esi
ror [ ebp - 0x4f ] 0xf2
mov ebx 0x15dd5c4
mov edi [ ebp + eax * 4 + 0x7d ]
push cs
jle rwxdata
cmp eax 0x68db037e
jecxz rwxdata
int3
adc [ edi ] 0x64c00b0
js rwxdata
inc edx
pushfd
push eax
ror [ ebx - 0x24c687aa ] cl
stc
test edx edx
pushfd
mov [ esp ] 0x4d
lea esp [ esp + 0x4 ]
je rwxdata
xchg ecx eax
pop ebp
dec eax
push ss
cld
fistp [ edi + 0x54 ]
cmp [ 0x68db037e ] 0x509ce1e3
ror dx 0x9
shl edx cl
cmc
xor eax eax
bswap ebx
pop edx
movzx bx al
pushad
mov ebx [ esp + 0x20 ]
call sub_1020a019
dec esi
outsb
jo rwxdata
movsx cx bl
add edx eax
or cx dx
movsx cx dl
mov cx si
shl ecx cl
mov ecx [ esi + 0x7c ]
call sub_1020ca64
pop ss
jmp rwxdata
dec eax
0x5a046554 0x876b
xchg [ edx - 0x69 ] esi
adc edx [ ebx + 0x3 ]
fsubr [ edx + 0x75 ]
dec ebp
push edx
fsubr [ esi ]
xchg ecx eax
adc al 0xf9
push ebx
adc eax 0xe32a754a
sbb esp [ edx + 0x1c ]
cmp eax 0xb85ae421
xchg [ ebx + 0x465baa74 ] ebp
pop eax

je rwxdata
xchg edi eax
or [ esi + ebp * 2 ] bl
int1
inc ebp
push ss
mov [ eax + ecx + 0x65 ] ebx
cld
adc eax 0x613e8ab9
mov ch 0x9a
retn
hlt
sub_1020cc75
mov [ esp ] 0xfcd3
push [ esp ]
lea esp [ esp + 0x8 ]
jne rwxdata
pushad
mov [ esp + 0x1c ] eax
mov [ esp + 0xc ] dl
push 0xa5844a7e
jmp sub_101dfccc
not di
mov edi [ edx + 0x24 ]
jmp rwxdata
call sub_101dd7cd
sub_1020d17d
stc
test dh bh
clc
add al 0x59
lea esp [ esp + 0x14 ]
jle rwxdata
cmc
pushad
pushfd
not al
call sub_10132cae
not al
push 0xa0b597c0
ror al 0x3
call sub_1012dcc7
sub_1020dc75
pushad
pushfd
pushfd
lea esp [ esp + 0x30 ]
ja rwxdata
ror bl 0x1
pushfd
add bl 0x50
xchg ebp eax
add esp 0x4
not bl
ror bl cl
mov eax ebp
test edi ebx
ror bl 0x5
mov bl 0x1
cmc
cmp bl bl
pushfd
mov [ esp ] esi
rcr si cl
shrd si di cl
ror si cl
mov esi edi
pushfd
jmp sub_1020c1e6
call sub_1012c813
sub_1020dd52
lea esp [ esp + 0x30 ]
jne rwxdata
pushad
mov [ esp + 0x1c ] eax
mov [ esp + 0xc ] dl
push 0xa5844a7e
jmp sub_101dfccc
mov edi ecx
test al bl
shl di 0xd
push esp
mov edi [ edx + 0x24 ]
push eax
add edi eax
stc
call sub_10138c0c
add [ ebx - 0x201f21dd ] edi
rol [ ecx ] 0x7e
inc ecx
sbb esi edi
dec edx
sub_1020e4f3
sub ebx ebx
pushad
lodsb [ esi ]
push edx
rol al 0x5
bt si 0xa
shr bl cl
bt cx 0x3
add al 0x59
not bl
jmp rwxdata
not al
not bl
push ecx
setl bl
ror al 0x3
pushfd
push ecx
pushfd
not bl
stosb [ edi ]
not bl
mov bl 0x2
mov [ esp ] dl
lea esp [ esp + 0x34 ]
jbe rwxdata
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_101de0e4
call sub_101de0e4
sub_1020e7f0
mov edi edx
lea esp [ esp + 0x4 ]
pushfd
mov ecx edi
lea esp [ esp + 0x4 ]
stc
stc
mov al [ ecx ]
bt di ax
pushad
mov ah al
stc
ror al 0x5
mov [ esp + 0x4 ] 0x16
dec al
call sub_1012e65b
sub_1020e9fb
mov [ ebp - 0x4 ] eax
pushfd
jmp rwxdata
xchg [ esp + 0x28 ] eax
mov al 0xb5
cwde
pop eax
mov [ esp + 0x20 ] 0x0
movzx eax dl
pop eax
movzx ax al
lea eax [ LocalAlloc@IAT ]
pushad
mov [ esp + 0x38 ] rwxdata
mov [ esp ] 0x0
pushfd
push [ eax ]
pop [ esp + 0x38 ]
push [ esp ]
mov [ esp ] 0xef
push [ esp + 0x3c ]
retn 0x40
sub_1020ea87
lea esp [ esp + 0x4c ]
jne rwxdata
stc
shl bx cl
inc bx
mov bh 0x6a
mov bx [ esi ]
clc
call sub_101dd99d
btr ecx eax
setbe ch
shld cx bx cl
mov ecx [ ebp - 0x4 ]
test dh bh
test al 0x89
cmp [ ebp + 0x14 ] ecx
call sub_101270e4
sub_1020ec46
mov [ esp ] ebx
lea esp [ esp + 0xc ]
cmc
clc
cmp ecx eax
call sub_1020e818
call sub_1020992b
inc esi
rwxdata
call sub_10129a53
push 0x96a7bff1
lea esp [ esp + 0x4 ]
jne rwxdata
pop esp
push ds
pushad
jno rwxdata
stosd [ edi ]
out 0x8e al
dec esi
fsub [ ebx ]
and eax 0x7c423c22
cmpsb [ esi ] [ edi ]
sbb [ edx + 0x3d ] esp
jns rwxdata
pop edx
imul ebp [ ebx ] 0x42
sbb eax 0x12f3017e
push 0x99508f7
dec edx
enter 0xa897 0x51
mov ds [ edi - 0x1807e71e ]
cmp esi [ edx + 0xd ]
mov eax 0x83848161
pop esp
mov al 0xb3
inc ebp
stc
xor [ esi - 0x276d7e02 ] cl
cmp al 0xab
test eax 0xa57ab589
cdq
inc ebp
stc
0x611985d5 0xffe
sub_1020f1bf
ror al 0x1
stc
pushad
clc
call sub_1012cf7b
nop
clc
push es
or [ esi ] dl
popfd
inc edx
xor eax 0xac7ac42a
rol [ ebp - 0x2f055b06 ] cl
dec esi
or [ esi + 0x4c ] dl
xchg edx eax
mov bh 0x47
mov [ edi ] bh
xchg esp eax
mov ebp ss
lodsb [ esi ]
pop es
mov bh 0x9c
mov [ 0x716d7c43 ] eax
xchg esp eax
stosb [ edi ]
mul [ edi - 0x334d7709 ]
sbb ah [ ebp - 0x116e1a ]
ror ch cl
sub_1020f22a
call sub_101293eb
jbe rwxdata
lodsb [ esi ]
pop es
mov bh 0x9c
mov [ 0x716d7c43 ] eax
xchg esp eax
stosb [ edi ]
mul [ edi - 0x334d7709 ]
sbb ah [ ebp - 0x116e1a ]
ror ch cl
test al 0x1a
movsb [ edi ] [ esi ]
push ss
or [ ebx + ecx * 4 + 0x53 ] bl
inc ecx
mov [ 0x4670cea5 ] eax
ror [ esi + 0x8 ] 0x1
push esi
dec esp
xchg edx eax
mov bh 0x47
mov [ edi ] bh
xchg esp eax
mov ebp ss
lds edi [ edx + 0x23 ]
loop rwxdata
jpe rwxdata
sub bh ah
add [ eax - 0x7182722 ] 0x70
out dx al
call [ edx - 0x2354ec96 ]
add ebx [ ebx + 0x67793887 ]
js rwxdata
add ah [ edi ]
jg rwxdata
into
jo rwxdata
scasd [ edi ]
mov eax [ 0x7a998c7 ]
xchg edi eax
retn
sub [ ecx - 0x4a ] 0xc4
fwait
fdivr [ eax - 0x6a0bb8fa ]
0xbba302e1 0x9728
test al 0xea
bound edi [ ebp + 0x47336bce ]
scasd [ edi ]
adc [ ecx - 0x17 ] dl
mov ch 0x60
cmpsd [ esi ] [ edi ]
and eax 0xa396738e
sti
cmp [ ebx ] cl
daa
xchg esp eax
hlt
xchg esp eax
sbb al [ ebx + esi * 2 ]
in al dx
std
xchg edx eax
xor [ edx ] edx
inc ebp
cmp [ edx + ebx * 4 + 0x3c23bf1b ] cl
jge rwxdata
push ds
fsub [ eax - 0x1d ]
sbb eax 0x2c1fee8
daa
ja rwxdata
test [ esi - 0x79 ] edi
mov eax 0x91ee69b6
xor ch [ ebp + 0x46988d12 ]
jo rwxdata
inc edx
jmp rwxdata
inc esi
sub_1020f3be
push [ esp + 0x4 ]
cmp ebx 0x1
pushad
push [ esp ]
lea esp [ esp + 0x30 ]
je rwxdata
call sub_1012e6a2
stc
cmc
cmp ebx 0x2
push esp
jmp rwxdata
call sub_1011778a
sub_1020fac3
pushad
inc ecx
dec bl
inc ecx
setge bl
adc bl 0x61
test bh 0x2
xchg ebp eax
clc
mov eax ebp
inc bl
sbb bl 0x5
jmp rwxdata
pushad
mov bl 0x1
cmp ch ch
test dl ah
call sub_10123317
sub_1020ff8d
mov esp eax
pushad
pushfd
pop [ esp + 0x1c ]
bswap di
mov [ esp + 0x18 ] esi
bswap edi
pushad
mov esi edx
lea edi [ esi + 0x4501885d ]
lea edi [ edx * 8 - 0x833b192 ]
jmp rwxdata
lea edi [ ecx + eax - 0x40 ]
push [ esp + 0xc ]
pushfd
mov [ esp + 0x3c ] edi
mov edi [ esp ]
std
bswap di
bswap di
mov edi eax
mov [ esp + 0x4 ] 0x2a
jmp rwxdata
cld
push 0x2d3807c7
push ebp
jmp rwxdata
pushfd
[ edi ] [ esi ]
bswap si
rol esi cl
neg di
cld
mov edi [ esp + 0x48 ]
pop esi
shl si cl
std
pop esi
mov esi [ esp + 0x44 ]
stc
mov [ esp ] 0xc
call sub_102118e1
sub_102104eb
push ecx
btr si bx
push 0x59f5add0
btr si dx
mov [ esp ] ebx
movzx dx cl
push edi
jmp rwxdata
pushfd
mov [ esp ] eax
bt si di
rol si cl
xchg bp si
push ebx
movsx bx cl
bswap di
push 0xd9734d72
push [ rwxdata ]
pop [ esp ]
btr edi edi
xchg esi edi
stc
push 0x0
not bl
rcr si cl
rcr ebp 0x1
rcl bp 0xa
mov esi [ esp + 0x30 ]
mov di sp
call sub_10211bce
sub_10210506
rol dh cl
movzx eax al
setle dh
btr dx 0x1
mov edx [ eax * 4 + rwxdata ]
push 0x652cd922
cmc
rol edx 0x13
cmp dl 0x3e
sub esp 0xfffffff8
jg rwxdata
pushfd
push 0x35031213
add edx 0x0
mov [ esp + 0x4 ] ah
call j_sub_102117b4
dec al
shl al cl
mov al [ esi - 0x1 ]
push 0xd6c2969e
pushad
mov [ esp + 0xc ] dl
add al bl
pushfd
jmp rwxdata
push 0x71caeb6e
add edx 0x0
jmp sub_1020fd71
jmp rwxdata
dec esi
push 0x95af6a5a
mov [ esp + 0x4 ] 0x40
lea esp [ esp + 0x2c ]
js rwxdata
pushfd
push 0x9ecd5f0e
pushad
mov [ esp ] esi
inc al
jmp rwxdata
inc al
push ebp
pushfd
call sub_1021189e
test bh cl
not al
jmp rwxdata
call sub_10210ebb
sub_1021072d
push edi
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_10210a77
sub dh dl
mov edx esp
cwde
shrd ecx esp 0x13
shrd ecx ecx 0xb
lea ecx [ edi + 0x40 ]
lea eax [ ebp * 4 + 0x25a0af5c ]
jmp sub_1021022e
sub_10210a77
lea esi [ esi - 0x1 ]
lea esp [ esp + 0x28 ]
jo rwxdata
bts dx 0x5
sub bl al
call sub_102114b5
rol dh cl
sub bl al
call sub_10210506
bts ax di
mov eax ebp
push 0x28bebd50
test bp ax
pushad
call sub_102115d9
sub_10210db6
ror bl cl
neg di
sub esp 0x98
shl al 0x2
adc al dl
xor di si
shl edi 0x1
mov edi esp
pushad
test dh bh
dec bl
jmp rwxdata
mov ebx esi
sbb al cl
bsr edx eax
add esi [ ebp ]
add esp 0x20
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_10210a77
sub_102114b5
setns dh
movzx eax al
pushad
mov edx [ eax * 4 + rwxdata ]
bt sp sp
rol edx 0x13
test bh ah
add edx 0x0
pushad
mov [ esp ] dx
mov [ esp + 0x40 ] edx
mov [ esp + 0x4 ] al
mov [ esp ] eax
push edi
push [ esp + 0x44 ]
retn 0x48
sub_102118e1
push [ esp + 0x4c ]
popfd
mov [ esp ] 0xbc
mov [ esp + 0x4 ] 0xdf
mov [ esp ] bl
lea esp [ esp + 0x50 ]
jmp rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_10210a77
sub_10211ac3
test dl 0x99
shl eax 0x7
cmp ah bl
cmp ah bh
bt dx di
shr ecx 0x19
bt bp bp
clc
bt di 0x1
cmc
or eax ecx
cmc
jmp sub_1021176c
sub_10211b94
mov [ ebp ] eax
mov [ esp ] 0x7f88
mov [ esp + 0x4 ] ah
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_10210a77
sub_10211bce
push 0x3a7e193
ror esi 0x10
lea ebp [ ebx - 0x2f18a944 ]
pop ebp
dec esi
pushad
rol bp cl
xor esi 0xda89bbcd
or bh bl
bswap bp
lea ebp [ esp + 0x24 ]
shr bx cl
call sub_10210db6
sub_101161d4
pushfd
jmp rwxdata
stosb [ edi ]
pushad
call sub_1012aee6
sub_101161ee
push ebx
call sub_1012937d
stc
lahf
pop ds
adc [ edi ] cl
add ebx [ ebx + 0x6c ]
mov ecx 0xcc7c5104
das
iretd
sub_1011637d
call sub_101dd63c
sub_10117414
call sub_1012c16b
sub_1011776e
mov [ esp + 0x1c ] rwxdata
mov [ esp + 0x10 ] ah
jmp sub_1020c65a
sub_10117784
pushfd
call sub_1012af0e
sub_1011778a
pushfd
lea esp [ esp + 0xc ]
je rwxdata
bsf bx bp
call sub_102089b5
call sub_10117784
j_sub_1012a203
jmp sub_1012a203
sub_101229b1
push ebp
pushad
call sub_10206f31
sub_10122c06
call sub_1012b59d
j_sub_1012dfe8#2
jmp j_sub_1012dfe8
sub_10123317
push [ esp + 0x4 ]
xchg [ esp + 0x48 ] esi
or si 0xb2c0
mov esi edi
push 0x7b83de18
call sub_1012cf73
sub_10123330
lea esp [ esp + 0x4 ]
call sub_101de0e4
j_sub_1020cc75
jmp sub_1020cc75
sub_101243c3
setpo bl
ror al 0x3
jmp sub_10127e2e
sub_1012466e
mov [ esp + 0x28 ] 0xb292fe54
push 0x94a77dca
push [ esp ]
push edx
push 0xbed06969
lea esp [ esp + 0x38 ]
jmp sub_10211c39
sub_1012491e
sets al
inc al
inc ecx
mov al [ esp ]
not al
pushad
mov [ esp ] dh
mov al 0x10
pushfd
mov [ esp ] bl
lea esp [ esp + 0x28 ]
call sub_101de0e4
sub_10126e64
lea eax [ rwxdata ]
pushad
call sub_101283fd
sub_101270c5
clc
ror al 0x3
pushfd
lea esp [ esp + 0x30 ]
call j_sub_10127a5e
_TLS_Entry_0
call j_sub_101df97a
j_sub_10127a5e
jmp sub_10127a5e
j_sub_10132e27
jmp sub_10132e27
sub_10127a5e
xor ecx ecx
sub_10127a60
call j_sub_101df5e1
sub_10127a65
call sub_1012fd7c
sub_10127e2e
call sub_101161d4
sub_1012800f
mov [ esp ] 0x7147
call sub_1020e0c2
sub_10128754
cmc
cmc
xor ecx ecx
pushfd
lea esp [ esp + 0x8 ]
call sub_101de0e4
sub_101288a3
mov [ esp + 0x4 ] 0xa420
inc al
cmc
call sub_10209552
xchg ebp ebp
mov cl 0xcd
int1
inc ecx
std
in al 0x5d
les ebx [ edx - 0x52 ]
inc eax
j_sub_101248f3
jmp sub_101248f3
sub_10128b22
call j_sub_1012a07e
sub eax 0x3f1f3768

sub_10128bdc
not dl
stc
cmc
ror dl 0x3
cmc
call sub_10208c89
cmc
jmp sub_10128bff
j_sub_101df97a
jmp sub_101df97a
sub_10128f90
cmc
pushfd
add edi eax
cmp cx 0xf215
bt esi 0x1f
mov edi [ edi + ecx * 4 ]
call sub_10128f80
sub_10128fa5
push [ eax ]
pop [ esp + 0x28 ]
mov [ esp ] bl
push [ esp + 0x10 ]
pushfd
push [ esp + 0x30 ]
retn 0x34
sub_10129363
mov [ esp ] 0x7c54
jmp sub_10209805
sub_10129373
sub al cl
mov al 0x2e
clc
call sub_10127fdd
sub_1012937d
ror al 0x1
cmp al bh
neg al
jmp sub_101288a3
sub_10129f71
mov [ esp + 0x4 ] 0x5a
call sub_1020ec46
sub_1012a04b
mov [ esp ] ebp
movsx esi dl
bswap si
movzx esi [ edx + 0x1a ]
movzx di bl
lea esi [ esi + edx + 0x1c ]
bswap di
call j_sub_1013879c
sub_1012a6bc
pushfd
jmp rwxdata
jmp rwxdata
inc edi
mov [ esp + 0x4 ] dh
lea esp [ esp + 0x48 ]
jmp sub_10129a53
sub_1012a9f2
movsx si cl
mov esi [ esp + 0x18 ]
jmp sub_101df5cb
sub_1012a9ff
stc
or ebx ebx
push ebx
pushfd
jmp sub_1012d719
sub_1012aba4
neg al
call sub_10139b46
hlt
sub_1012ad12
cmc
add edx 0x11c
pushfd
pushad
mov [ esp + 0x4 ] 0xaaa4
lea esp [ esp + 0x28 ]
jmp rwxdata
call sub_1012a04b
sub_1012aee6
mov bl 0x2
lea esp [ esp + 0x34 ]
pushad
lea esp [ esp + 0x20 ]
call sub_101de0e4
sub_1012af0e
push [ esp + 0x8 ]
cmp ebx 0x3
call sub_101326a8
sub_1012b59d
call sub_101388d1
sub_1012c16b
push edx
call sub_1012d632
sub_1012c4e4
rcr bl 0x2
not al
stc
stc
jmp sub_101243c3
sub_1012cccd
bt cx 0x3
rol al 0x5
call sub_1020d17d
sub_1012cf73
clc
sub esi eax
jmp sub_101383a3
sub_1012d140
pushfd
dec ecx
mov [ esp + 0x8 ] bh
mov [ esp + 0x8 ] dl
call sub_1020ea87
sub_1012d632
mov [ esp + 0x4c ] 0xe79b33b1
pushfd
mov [ esp ] bl
mov [ esp ] ah
lea esp [ esp + 0x50 ]
jmp rwxdata
push 0x91552ce4
push [ esp ]
mov [ esp + 0x4 ] edx
lea esp [ esp + 0x4 ]
sub_1012d767
call sub_1012e8ca
sub_1012d7ac
movzx eax al
mov [ esp ] ebx
movsx ax cl
movsx eax al
push 0xb
call sub_10126e64
sub_1012db4a
cmp [ edi - 0x1 ] 0x0
jmp j_sub_1020cc75
sub_1012dcc7
pushfd
call sub_101e0bcb
sub_1012dfe8
lea esp [ esp + 0x4 ]
call sub_101de0e4
sub_1012e517
lea esi [ esp + 0x8 ]
cmp esp ebx
cmp ah dh
pushfd
call sub_1013a22c
jmp sub_10129f7b
sub_1012e613
push 0x16f54545
clc
ror al 0x3
mov [ esp ] esp
lea esp [ esp + 0x10 ]
call j_sub_10127a5e
sub_1012e6a2
xor bx 0x9a67
jmp sub_10124970
sub_1012e8ca
mov [ esp + 0x48 ] rwxdata
mov [ esp ] 0x1ec5
jmp sub_1012e962
j_sub_101df5e1
jmp sub_101df5e1
sub_1012e94d
rol al 0x5
rcr bl 0x2
sbb bl 0x7b
shl bl 0x1
add al 0x59
rcr bl 0x7
jmp sub_1012c4e4
sub_1012e962
push [ eax ]
pop [ esp + 0x44 ]
push 0xabe7060e
pushfd
push [ esp + 0x8 ]
mov [ esp ] 0xafe3133
push [ esp + 0x50 ]
retn 0x54
sub_1012f333
pushad
jmp rwxdata
inc esi
pushad
pushfd
inc edi
pushfd
lea esp [ esp + 0x4c ]
jmp sub_10129a53
j_sub_1012dfe8
jmp sub_1012dfe8
sub_1012f960
pushad
push 0x4e0f1fdf
add al 0x59
stc
clc
not al
call sub_101270c5
j_sub_1020e820#2
jmp j_sub_1020e820
sub_1012fd32
clc
stc
pushad
sub eax eax
call sub_1020c7ee
sub_1012fd7c
movsx si dl
mov esi [ ebp + 0xc ]
mov [ esp + 0x8 ] bl
mov [ esp + 0x8 ] eax
call j_sub_10132e27
sub_10132ad0
bt edx 0x15
bt esp 0xa
xchg [ esp + 0x4 ] esi
pushfd
mov esi edi
call sub_101dffa8
sub_10132c7a
rol al 0x5
stc
cmc
clc
cmp dh al
add al 0x59
bt si 0xe
not al
mov [ esp ] 0xc8
call sub_1020c3de
sub_10132c94
lea ebp [ edi + 0xdac9678 ]
movzx bp bl
mov ebp [ esp + 0xc ]
mov [ esp + 0x4 ] 0x23
push [ esp + 0x10 ]
retn 0x1c
sub_10132cae
pushfd
bt ebp 0xc
clc
ror al 0x3
mov [ esp ] dh
push 0xc5f7cb11
call sub_10138cef
sub_10132e07
lea esp [ esp + 0x4 ]
call sub_101de0e4
sub_10132e27
mov al [ esp ]
lodsb [ esi ]
push [ esp ]
push 0x48a9c5b5
push ebx
push eax
ror al 0x1
push [ esp + 0x4 ]
call sub_1012aba4
j_sub_1012e94d
jmp sub_1012e94d
sub_10133196
pushad
stosb [ edi ]
mov [ esp + 0x4 ] 0xc9
mov [ esp ] ch
mov [ esp + 0xc ] 0x240e
lea esp [ esp + 0x28 ]
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_101de0e4
sub_10137e8a
pushad
pushfd
mov [ esp ] cx
lea esp [ esp + 0x30 ]
call sub_101de0e4
sub_101383a3
mov [ esp ] ax
[ edi ] [ esi ]
movzx esi cl
mov esi [ esp + 0x50 ]
mov [ esp ] ebp
lea esp [ esp + 0x54 ]
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_101de0e4
sub_101383bc
mov [ esp + 0x10 ] ah
mov [ esp + 0x20 ] 0xc9a8ca98
mov [ esp + 0x8 ] 0xd3
jmp sub_101387a4
sub_1013879c
mov edi [ ebp + 0x8 ]
jmp sub_10129f71
sub_101387a4
pushad
jmp rwxdata
mov [ esp + 0x3c ] 0x41bdd465
pushfd
push esp
pushfd
mov [ esp + 0x8 ] 0x4d
lea esp [ esp + 0x48 ]
jmp rwxdata
push ecx
pushfd
jmp sub_10210940
sub_101388c3
mov [ esp + 0x4 ] 0xa932ca97
pushfd
call sub_101de58c
sub_101388d1
mov al [ esp ]
lodsb [ esi ]
bt sp 0x2
jmp sub_1012cccd
sub_101389a3
call sub_10132ad0
sub_10138b29
call sub_1020b973
mov ah ch
mov dl 0x58
cmpsb [ esi ] [ edi ]
enter 0xc657 0xab
hlt
j_sub_1020fb99
jmp sub_1020fb99
sub_10138cef
lea esp [ esp + 0x34 ]
call j_sub_10127a5e
sub_10138e04
cmc
cmp eax 0x7f
jmp sub_1020dc75
sub_10139619
pushad
call sub_101383bc
sub_101399f8
call sub_10138e04
_start
jmp sub_1011637d
sub_10139b46
call sub_1020cba1
push eax
sub_10139d4f
sub al al
pushfd
pushad
cmp dh cl
[ edi ]
call sub_10138b29
sub_101dd63c
jmp rwxdata
pushfd
mov [ esp + 0x4 ] 0x493ccaa9
pushad
mov [ esp ] cx
mov [ esp + 0x20 ] 0x52fd6da0
push [ esp ]
mov [ esp ] 0x75
lea esp [ esp + 0x24 ]
jmp sub_10211555
sub_101dd995
shl eax 0x8
call sub_10122c06
sub_101dd99d
shr ebx 0xc
call sub_1020f3be
sub_101ddf23
mov edi [ edi + ecx * 4 ]
pushad
test edi edi
call sub_1012a328
sub_101ddf2e
mov [ esp + 0x4 ] eax
push [ esp ]
pushad
mov [ esp + 0x4 ] 0xda1f
mov [ esp ] 0xb3
push [ esp + 0x28 ]
retn 0x2c
j_sub_1012e613
not al
jmp sub_1012e613
sub_101de418
push ebp
pushad
pushfd
mov [ esp + 0x28 ] 0x7144ca9b
call sub_1012466e
sub_101de58c
mov [ esp ] di
mov [ esp + 0x8 ] 0xa8b6443b
pushad
mov [ esp + 0x14 ] 0x31
mov [ esp + 0x8 ] 0xe0
mov [ esp ] cx
lea esp [ esp + 0x28 ]
jmp rwxdata
push ecx
pushfd
jmp sub_10210940
sub_101de5b0
push 0xe77fb59
xor ecx ecx
call sub_10137e8a
sub_101de5bc
pushfd
bt edi 0x12
cmp eax 0x7f
call sub_10129363
sub_101dec43
inc al
jmp sub_1012b18b
sub_101dedd7
push eax
sub_101dedd8
call sub_101388c3
sub_101df5cb
mov ebx [ esp + 0x1c ]
pushfd
mov esp ebp
push eax
bswap ebp
mov ebp [ esp + 0x4 ]
push ecx
push [ esp + 0xc ]
retn 0x14
sub_101df5e1
inc ecx
lea esp [ esp + 0x4 ]
call j_sub_1012dfe8#2
sub_101df97a
push edi
mov [ esp + 0x4 ] 0x2acdcaa9
pushfd
mov [ esp + 0x4 ] 0x915a756c
pushfd
pushfd
mov [ esp + 0x8 ] edi
mov [ esp + 0x4 ] ah
lea esp [ esp + 0xc ]
jmp j_sub_1021103c
sub_101dfccc
lodsb [ esi ]
lea esp [ esp + 0x20 ]
ja rwxdata
bt bp 0x1
pushfd
clc
jmp sub_1020f1bf
jmp sub_101161ee
sub_101dffa8
sub esi eax
jmp sub_1012e6ac
j_sub_1012a07e
jmp sub_1012a07e
sub_101e0bcb
lea esp [ esp + 0x10 ]
call j_sub_10127a5e
j_sub_1012f88b
jmp sub_1012f88b
sub_101e1086
mov [ esp ] ecx
push 0x67d43356
lea esp [ esp + 0x8 ]
je rwxdata
push esi
push [ esp + 0x4 ]
retn 0x8
stc
pushad
stc
cmp ah 0x2e
lea esp [ esp + 0x20 ]
sub_102065b5
ror si 0x1
rcl si cl
mov [ esp ] 0x63e
sub ecx ebx
call sub_1012e517
sub_10206e2a
test edi edi
call sub_1020bb87
add al 0x8c
jmp sub_1020e4f3
sub_10206f31
mov [ esp + 0x28 ] 0x3288d8d9
pushfd
mov [ esp + 0x10 ] esp
push 0x377e7aac
lea esp [ esp + 0x30 ]
jmp j_sub_1021103c
sub_1020723a
pushfd
push 0xe0896687
call sub_1020aaae
sub_10209837
mov [ esp + 0x4 ] 0xec
jmp sub_101388df
sub_1020990b
mov [ esp + 0x24 ] rwxdata
push esp
mov [ esp ] 0x939f
pushfd
mov [ esp + 0x28 ] eax
push 0xf2c32104
push [ esp + 0x2c ]
retn 0x30
sub_1020992b
mov eax [ edx + 0x8 ]
pushfd
pushad
mov [ esp + 0x4 ] dl
lea esp [ esp + 0x28 ]
jmp rwxdata
jmp sub_1012a9ff
sub_1020a392
cmp ecx [ ebp - 0x8 ]
push 0x48170f16
call sub_1020c678
sub [ ebx + 0x797c74b ] edx
xchg edi eax
test al 0x2c
sub_1020aa88
lea esp [ esp + 0x4 ]
je rwxdata
jbe rwxdata
clc
bt ax bx
call sub_1012ad12
pushad
sub eax eax
jmp sub_1012fcc2
bt edx 0x5
sub eax eax
jmp sub_1012a9ff
sub_1020aa9c
test cx 0xfaea
test si 0xbd02
cmp ah 0x5
jmp j_sub_1020fb99
sub_1020aaae
[ edi ] [ esi ]
not si
mov esi [ esp + 0x34 ]
pushfd
pushfd
lea esp [ esp + 0x40 ]
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_101de0e4
sub_1020ac5c
test al dh
add dl 0x59
jmp sub_10128bdc
sub_1020ac66
pushad
cmp [ edi - 0x1 ] 0x0
jmp rwxdata
pushfd
push 0xac88b531
call sub_1020dd52
sub_1020b1b7
bswap ebp
not bp
mov ebp [ esp + 0x4 ]
pushad
pushfd
push esi
push 0x5078e4ab
push [ esp + 0x34 ]
retn 0x48
sub_1020bb87
call sub_10123660
sub_1020bb8c
push 0x7af61b56
mov [ esp ] al
mov [ esp + 0x4c ] eax
pushfd
mov [ esp ] dl
mov [ esp + 0x4 ] edi
mov [ esp + 0xc ] bp
push [ esp + 0x50 ]
retn 0x54
sub_1020c1e6
mov [ esp ] 0xed
sub esi eax
push [ esp ]
pushad
call sub_1020eeab
sub_1020c3de
stc
stc
ror al 0x3
jmp sub_1020af18
sub_1020c65a
push [ esp ]
push [ eax ]
pop [ esp + 0x1c ]
pushfd
push 0x3756f40b
push [ esp + 0x24 ]
retn 0x28
sub_1020c678
call sub_10123ea8
sub [ eax + 0x4e ] dh
or al 0x92
pop edi
cmpsb [ esi ] [ edi ]
mov bh 0xce
cmc
push ecx
xor [ edi ] edx
pop ecx
sub_1020c7ee
pushfd
lea esp [ esp + 0x2c ]
call sub_101de0e4
sub_1020ca64
add ecx edx
jmp sub_1020ca5e
sub_1020cc5d
sar cx cl
pop edi
mov ecx [ ebp - 0x8 ]
shrd si bx cl
inc di
push 0xd107e00b
jmp sub_1012bf76
sub_1020e0c2
lea esp [ esp + 0xc ]
jae rwxdata
push 0xeb5eb067
lodsb [ esi ]
jmp sub_10132c7a
jmp rwxdata
jmp sub_10129f7b
sub_1020e40e
call j_sub_1012e613
j_sub_1020f006
jmp sub_1020f006
sub_1020e818
add ecx 0xffffffff
jmp sub_1020aa88
sub_1020e820
adc dl dl
lea esp [ esp + 0x5c ]
pushad
jmp rwxdata
pushad
push [ esp + 0x40 ]
retn 0x44
sub_1020e83e
sub edi 0x4
stc
jmp sub_10129388
sub_1020e847
lea eax [ rwxdata ]
call sub_1012d767
sub_1020e852
push 0xe55c1bef
pushfd
lea esp [ esp + 0xc ]
jae rwxdata
xchg al bl
pushfd
lodsb [ esi ]
cmc
cmc
call j_sub_1012e94d
clc
call sub_101de5b0
sub_1020eeab
[ edi ] [ esi ]
pop esi
mov esi [ esp + 0x28 ]
mov [ esp ] 0xdab4
push 0x8b94b49e
push [ esp ]
lea esp [ esp + 0x34 ]
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_101de0e4
sub_1020f006
pushad
cmp eax [ ebp - 0x10 ]
jmp rwxdata
call sub_10208557
int 0x5f
jmp [ ebx + edi ]
j_sub_1020e820
jmp sub_1020e820
j_sub_1013879c
jmp sub_1013879c
sub_1020fadf
mov [ esp + 0x4 ] rwxdata
pushad
push [ eax ]
pop [ esp + 0x20 ]
mov [ esp + 0xc ] 0x9572
push [ esp + 0x20 ]
retn 0x24
sub_1020fb99
pushfd
mov [ esp ] cl
lea esp [ esp + 0x8 ]
jae rwxdata
not bl
call sub_1020bafa
call sub_101399f8
sub_1020fd71
push 0x8df4db9e
mov [ esp + 0x4 ] bx
mov [ esp + 0x4 ] edx
push 0xe6df80e7
push [ esp + 0x4 ]
pushad
pushfd
push [ esp + 0x30 ]
retn 0x34
sub_1020fe70
mov [ esp + 0x4 ] di
inc edx
pushfd
pushfd
dec [ ebp ]
push 0xfcff6c51
pushad
call sub_10211a91
sub_10210120
not di
and al 0xfc
not di
stc
dec di
dec di
sub eax ecx
jmp sub_10211a3f
sub_1021022e
das
cwde
sub ecx edx
bsr ax bx
and ah ch
clc
ror edi cl
lea eax [ ebp - 0x80 ]
jmp sub_10210120
j_sub_102117b4
jmp sub_102117b4
sub_102106e3
pushfd
mov [ ebp ] ax
push 0x9aa3ad73
lea esp [ esp + 0x3c ]
jmp sub_10211777
sub_10210784
lea edx [ eax - 0x778e0c21 ]
movzx dx al
bswap dx
push ebp
pushfd
pop [ esp ]
bts dx dx
push ebp
rcr dh cl
call sub_10211089
sub_10210940
pushfd
mov [ esp + 0x8 ] edx
pushad
push ecx
push 0x2a7fdc6f
pushfd
lea esp [ esp + 0x34 ]
jmp sub_10210784
sub_10210b9d
pushad
mov al [ eax + edi ]
test cl al
pushfd
call sub_102119cd
sub_10210c21
mov al [ eax + edi ]
cmp dl dh
cmc
sub ebp 0x2
pushfd
pushfd
mov [ ebp ] ax
pushfd
lea esp [ esp + 0x38 ]
jmp sub_10211777
sub_10210c67
mov [ esp ] edx
pushad
lea esp [ esp + 0x20 ]
jmp sub_10210784
j_sub_1021103c
jmp sub_1021103c
sub_10210ebb
stc
add al 0xc1
clc
cmp dh dh
stc
add bl al
jmp sub_10210c21
sub_10210f19
pushfd
lea esp [ esp + 0x8 ]
jpo rwxdata
call sub_10210c67
push edx
pushad
push [ esp + 0x4 ]
push edx
lea esp [ esp + 0x28 ]
jmp sub_10210784
sub_1021103c
pushfd
mov [ esp ] edx
pushfd
pushad
lea esp [ esp + 0x24 ]
jmp sub_10210784
sub_10211089
rol bp 0xa
mov [ esp ] esi
seto dh
stc
jmp sub_102104eb
sub_102114ea
push 0xa5098e08
call sub_102106e3
sub_10211555
call sub_10211d99
sub_102115d9
sub ebp 0x2
call sub_102114ea
sub_1021170b
mov [ ebp ] ax
pushad
push esi
mov [ esp + 0xc ] dh
pushfd
lea esp [ esp + 0x3c ]
jmp sub_10211777
sub_1021176c
cmp cl 0x76
xor al [ edx ]
push edi
jmp rwxdata
jmp sub_1020fe70
sub_10211777
sbb ax 0x9f3
lea eax [ edi + 0x50 ]
cmp di sp
cmp ebp eax
jmp sub_1021072d
sub_102117b4
pushfd
mov [ esp + 0xc ] edx
pushad
mov [ esp + 0x10 ] 0x6d5002e3
pushfd
push [ esp + 0x30 ]
retn 0x34
sub_1021189e
not al
cmp ch 0xf8
add al 0xc1
clc
lea esp [ esp + 0xc ]
jno rwxdata
cmp dh 0xf8
add bl al
cmc
call sub_10210b9d
add bl al
jmp sub_10211c08
sub_102119cd
cmp di 0x2047
sub ebp 0x2
pushfd
pushfd
pushfd
pushfd
mov [ ebp ] ax
mov [ esp + 0x14 ] edi
lea esp [ esp + 0x3c ]
jmp sub_10211777
sub_10211a3f
call sub_1020ff8d
sub_10211a91
pushfd
lea esp [ esp + 0x3c ]
jne rwxdata
or cx sp
mov ecx eax
call sub_10211ac3
pushad
call sub_10211b94
sub_10211c08
bt di cx
push edx
mov al [ eax + edi ]
stc
cmc
cmc
mov [ esp ] ax
sub ebp 0x2
pushfd
push [ esp ]
push [ esp ]
call sub_1021170b
sub_10211c39
call sub_10210f19
sub_10211d99
pushfd
mov [ esp + 0x4 ] edx
push 0x7a01be57
pushad
mov [ esp ] 0x6b
pushfd
lea esp [ esp + 0x2c ]
jmp sub_10210784
